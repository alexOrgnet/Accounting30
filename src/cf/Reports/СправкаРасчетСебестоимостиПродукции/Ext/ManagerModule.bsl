#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Определяет поддерживаемый набор суммовых показателей справки-расчета.
// См. соответствующие методы модулей подсистемы СправкиРасчеты.
// Справка-расчет должна поддерживать хотя бы один набор.
// Если поддерживается несколько наборов, то конкретный набор выбирается в форме
// и передается через свойство отчета НаборПоказателейОтчета.
//
// См. также ПолучитьНаборПоказателей
//
// Возвращаемое значение:
//  Массив - номера наборов суммовых показателей.
//
Функция ПоддерживаемыеНаборыСуммовыхПоказателей() Экспорт
	
	Возврат СправкиРасчетыКлиентСервер.ВсеНаборыСуммовыхПоказателей();
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиБухгалтерскиеОтчеты

Функция ПолучитьТекстЗаголовка(Контекст) Экспорт 
	
	Возврат СправкиРасчеты.ЗаголовокОтчета(Контекст);
	
КонецФункции

Процедура ПриВыводеЗаголовка(Контекст, КомпоновщикНастроек, Результат) Экспорт
	
	СправкиРасчеты.ВывестиШапкуОтчета(Результат, Контекст);
	
КонецПроцедуры

Процедура ПослеВыводаРезультата(Контекст, Результат) Экспорт
	
	СправкиРасчеты.ОформитьРезультатОтчета(Результат, Контекст);
	
КонецПроцедуры

#КонецОбласти
	
Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ИспользоватьПередКомпоновкойМакета", Истина);
	Результат.Вставить("ИспользоватьПослеКомпоновкиМакета",  Истина);
	Результат.Вставить("ИспользоватьПослеВыводаРезультата",  Истина);
	Результат.Вставить("ИспользоватьДанныеРасшифровки",      Ложь);
	Результат.Вставить("ИспользоватьПриВыводеЗаголовка",     Истина);
	Результат.Вставить("ИспользоватьНалоговыйПериод",        Ложь);
	
	Возврат Результат;
	
КонецФункции

// В процедуре можно доработать компоновщик перед выводом в отчет. Изменения сохранены не будут.
//
// Параметры:
//  ПараметрыОтчета - Структура - см. ПодготовитьПараметрыОтчета() в ФормаОтчета.
//  Схема        - СхемаКомпоновкиДанных - описание получаемых данных.
//  КомпоновщикНастроек - КомпоновщикНастроекКомпоновкиДанных - связь настроек компоновки данных и схемы компоновки.
//
Процедура ПередКомпоновкойМакета(ПараметрыОтчета, Схема, КомпоновщикНастроек) Экспорт
	
	Если ЗначениеЗаполнено(ПараметрыОтчета.НачалоПериода) Тогда
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", НачалоМесяца(ПараметрыОтчета.НачалоПериода));
	КонецЕсли;
	Если ЗначениеЗаполнено(ПараметрыОтчета.КонецПериода) Тогда
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", КонецДня(ПараметрыОтчета.КонецПериода));
	КонецЕсли;
	
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "Организация", ПараметрыОтчета.Организация);
	
	НастройкиУчетаЗатрат = Справочники.НастройкиУчетаЗатрат.БазовыеНастройки(ПараметрыОтчета.НачалоПериода, ПараметрыОтчета.Организация);
	СчетаНезавершенноеПроизводствоПоПродукции = Справочники.НастройкиУчетаЗатрат.СчетаВедетсяНезавершенноеПроизводствоПоПродукции(НастройкиУчетаЗатрат);

	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
		КомпоновщикНастроек,
		"СчетаНезавершенногоПроизводстваПоПродукции",
		СчетаНезавершенноеПроизводствоПоПродукции);
	
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "МатериальныеЗатраты", Перечисления.ВидыРасходовНУ.МатериальныеРасходы);
	
	БазыРаспределенияЗависящиеОтСтатейЗатрат = Новый СписокЗначений();
	БазыРаспределенияЗависящиеОтСтатейЗатрат.Добавить(Перечисления.БазыРаспределенияКосвенныхРасходов.МатериальныеЗатраты);
	БазыРаспределенияЗависящиеОтСтатейЗатрат.Добавить(Перечисления.БазыРаспределенияКосвенныхРасходов.ОплатаТруда);
	БазыРаспределенияЗависящиеОтСтатейЗатрат.Добавить(Перечисления.БазыРаспределенияКосвенныхРасходов.ПрямыеЗатраты);
	БазыРаспределенияЗависящиеОтСтатейЗатрат.Добавить(Перечисления.БазыРаспределенияКосвенныхРасходов.ОтдельныеСтатьиПрямыхЗатрат);
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "БазыРаспределенияПоЗатратам", БазыРаспределенияЗависящиеОтСтатейЗатрат);
	
	ИспользуютсяОбозначенияПоказателей = (ПараметрыОтчета.СоставНабораПоказателей.Количество() > 1);
	
	ИспользуетсяПлановаяСебестоимость = Справочники.НастройкиУчетаЗатрат.ПлановаяСебестоимость(
		ПараметрыОтчета.КонецПериода,
		ПараметрыОтчета.Организация);
		
	ПараметрыОтчета.Вставить("ИспользуютсяОбозначенияПоказателей", ИспользуютсяОбозначенияПоказателей);
	ПараметрыОтчета.Вставить("ИспользуетсяПлановаяСебестоимость", ИспользуетсяПлановаяСебестоимость);
	ПараметрыОтчета.Вставить("ИспользуетсяНезавершенноеПроизводствоПоПродукции",
		СчетаНезавершенноеПроизводствоПоПродукции.Количество() > 0);
	
	НеиспользуемаяГруппировкаРаспределениеЗатрат = Новый Массив;
	ТаблицаКосвенныеЗатраты = БухгалтерскиеОтчеты.НайтиПоИмени(КомпоновщикНастроек.Настройки.Структура, "ТаблицаКосвенныеЗатраты");
		
	ИмяНеиспользуемойКолонки = "";
	Если СчетаНезавершенноеПроизводствоПоПродукции.Количество() = 0 Тогда
		ИмяНеиспользуемойКолонки = "РесурсыКосвенныеЗатратыНезавершенноеПроизводствоПоПродукции";
		// Если не используется учет незавершенного производства с детализацией по проудкции, то все данные выводятся
		// в одну таблицу. В этом случае отдельный заголовок для нее не нужен.
		ТаблицаКосвенныеЗатраты.ПараметрыВывода.УстановитьЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Заголовок"), "");
		ТаблицаКосвенныеЗатраты.ПараметрыВывода.УстановитьЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВыводитьЗаголовок"), Ложь);
	Иначе
		ИмяНеиспользуемойКолонки = "РесурсыКосвенныеЗатраты";
	КонецЕсли;

	БухгалтерскиеОтчеты.НайтиГруппировкиТаблицы(
		НеиспользуемаяГруппировкаРаспределениеЗатрат,
		ТаблицаКосвенныеЗатраты.Колонки,
		Новый Структура("Имя", ИмяНеиспользуемойКолонки),
		Истина);
		
	Если НеиспользуемаяГруппировкаРаспределениеЗатрат.Количество() > 0 Тогда
		НеиспользуемаяГруппировкаРаспределениеЗатрат[0].Использование = Ложь;
	КонецЕсли;
	
	// Отчет состоит из отдельных таблиц, в колонках которых нужно отключить ресурсы и/или группы колонок в соответствии
	// с установленными настройками отчета.
	ТаблицыОтчетаДляНастройки = Новый Массив;
	ПолучитьТаблицыОтчетаДляНастройки(КомпоновщикНастроек.Настройки.Структура, ТаблицыОтчетаДляНастройки);
	
	ОтключитьНеиспользуемыеРесурсы(КомпоновщикНастроек, ПараметрыОтчета, ИспользуютсяОбозначенияПоказателей, ИспользуетсяПлановаяСебестоимость);
	
	// Состав аналитики и заголовок для столбца, содержащего название аналитики, зависит от функциональных опций.
	// Настроим вывод используемой аналитики и заголовки таблиц.
	ОтключитьПодразделения = Не ПолучитьФункциональнуюОпцию("ВестиУчетЗатратПоПодразделениям");
	ОтключитьНоменклатурныеГруппы = БухгалтерскийУчетВызовСервераПовтИсп.ИспользоватьОднуНоменклатурнуюГруппу();
	
	Для Каждого ТаблицаОтчета Из ТаблицыОтчетаДляНастройки Цикл
		Если ОтключитьПодразделения Тогда
			ГруппировкаПодразделение = БухгалтерскиеОтчетыКлиентСервер.НайтиГруппировку(ТаблицаОтчета.Строки, "Подразделение");
			Если ГруппировкаПодразделение <> Неопределено Тогда
				ГруппировкаПодразделение.Состояние = СостояниеЭлементаНастройкиКомпоновкиДанных.Отключен;
			КонецЕсли;
		КонецЕсли;
		Если ОтключитьНоменклатурныеГруппы Тогда
			ГруппировкаНоменклатурнаяГруппа = БухгалтерскиеОтчетыКлиентСервер.НайтиГруппировку(ТаблицаОтчета.Строки, "НоменклатурнаяГруппа");
			Если ГруппировкаНоменклатурнаяГруппа <> Неопределено Тогда
				ГруппировкаНоменклатурнаяГруппа.Состояние = СостояниеЭлементаНастройкиКомпоновкиДанных.Отключен;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СоставАналитики = Новый Массив;
	СоставАналитики.Добавить(НСтр("ru = 'Счет'"));
	Если Не ОтключитьПодразделения Тогда
		СоставАналитики.Добавить(НСтр("ru = 'Подразделение'"));
	КонецЕсли;
	
	Если Не ОтключитьНоменклатурныеГруппы Тогда
		СоставАналитики.Добавить(НСтр("ru = 'Номенклатурная группа'"));
	КонецЕсли;
	СоставАналитики.Добавить(НСтр("ru = 'Продукция'"));
	
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "ПредставлениеАналитики", СтрСоединить(СоставАналитики, " /" + Символы.ПС));
	
	БухгалтерскиеОтчетыВызовСервера.ДобавитьОтборПоОрганизации(ПараметрыОтчета, КомпоновщикНастроек);
	
	// Изменим выражения полей компоновки в зависимости от включенных функциональных опций
	Если ОтключитьНоменклатурныеГруппы Тогда
		ВыражениеПоиска = """НоменклатурнаяГруппа""";
		ВыражениеЗамены = """Подразделение""";
		Если ОтключитьПодразделения Тогда
			ВыражениеЗамены = """Счет""";
		КонецЕсли;
		Для Каждого ВычисляемоеПоле Из Схема.ВычисляемыеПоля Цикл
			ВычисляемоеПоле.Выражение = СтрЗаменить(ВычисляемоеПоле.Выражение, ВыражениеПоиска, ВыражениеЗамены);
		КонецЦикла;
		Для Каждого ПолеИтога Из Схема.ПоляИтога Цикл
			ПолеИтога.Выражение = СтрЗаменить(ПолеИтога.Выражение, ВыражениеПоиска, ВыражениеЗамены);
			// Итог для Базы распределения и Коэффициента должен рассчитываться не по всем группировкам, а только по группировке,
			// которая является родительской группировкой для Продукции. В макете СКД эта группировка - Номенклатурная группа.
			// Если в настройках программы отключено использование номенклатурных групп, то итог должен рассчитываться
			// по группировке "Подразделение" или "Счет".
			Если ПолеИтога.ПутьКДанным = "БазаРаспределенияСмешанная" Или ПолеИтога.ПутьКДанным = "Коэффициент" Тогда
				НоваяГруппировка = СтрЗаменить(ВыражениеЗамены, """", "");
				Если ПолеИтога.Группировки.Найти(НоваяГруппировка) = Неопределено Тогда
					ПолеИтога.Группировки.Добавить(НоваяГруппировка);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Если НЗП по продукции не используется, то в отчете нужна только одна таблица - косвенные затраты
	Если СчетаНезавершенноеПроизводствоПоПродукции.Количество() = 0 Тогда
		Для Каждого ЭлементСтруктуры Из КомпоновщикНастроек.Настройки.Структура Цикл
			Если ЭлементСтруктуры.Имя <> "ТаблицаКосвенныеЗатраты" Тогда
				ЭлементСтруктуры.Использование = Ложь;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

// В процедуре можно уточнить особенности вывода данных в отчет.
//
// Параметры:
//  ПараметрыОтчета - Структура
//  МакетКомпоновки - МакетКомпоновкиДанных - описание выводимых данных.
//
Процедура ПослеКомпоновкиМакета(ПараметрыОтчета, МакетКомпоновки) Экспорт
	
	// Для заголовков требуется обработка: из них будут удалены лишние строки, которые появляются в случае вывода в отчет
	// нескольких показателей, а также добавится нумерация колонок.
	ЗаголовкиТаблиц = Новый Массив;
	ЗаголовокТаблиц = НовыйЗаголовокТаблиц();
	ЗаголовокТаблиц.ИмяТаблицы = "ТаблицаПрямыеМатериальныеЗатраты";
	ЗаголовкиТаблиц.Добавить(ЗаголовокТаблиц);
	
	ДобавитьГруппуКолонок("", ЗаголовокТаблиц);
	ДобавитьКолонку(НСтр("ru = 'Выпуск, количество'"), НСтр("ru = '2'"), ЗаголовокТаблиц);
	
	ДобавитьКолонку(НСтр("ru = 'НЗП на конец месяца, количество'"), НСтр("ru = '3'"), ЗаголовокТаблиц);
	
	Если ПараметрыОтчета.ИспользуютсяОбозначенияПоказателей Тогда
		ДобавитьКолонку(НСтр("ru = 'Показатели'"), НСтр("ru = '3а'"), ЗаголовокТаблиц);
	КонецЕсли;
	
	ДобавитьГруппуКолонок(НСтр("ru = 'Прямые материальные затраты'"), ЗаголовокТаблиц);
	
	ДобавитьКолонку(НСтр("ru = 'НЗП на начало месяца'"), НСтр("ru = '4'"), ЗаголовокТаблиц);

	ДобавитьКолонку(НСтр("ru = 'Затраты 
	                      |текущего месяца'"), НСтр("ru = '5'"), ЗаголовокТаблиц);
	
	ДобавитьКолонку(НСтр("ru = 'Всего,
	                      |гр. 4 + гр. 5'"), НСтр("ru = '6'"), ЗаголовокТаблиц);
	
	ДобавитьКолонку(НСтр("ru = 'в том числе
	                      |на выпуск,
	                      |гр. 6 * гр. 2 /
	                      |(гр. 2 + гр. 3)'"), НСтр("ru = '7'"), ЗаголовокТаблиц);
	
	ДобавитьКолонку(НСтр("ru = 'в том числе в НЗП,
	                      |гр. 6 * гр. 3 /
	                      |(гр. 2 + гр. 3)'"), НСтр("ru = '8'"), ЗаголовокТаблиц);
	                      
	ЗаголовокТаблиц = НовыйЗаголовокТаблиц();
	ЗаголовокТаблиц.ИмяТаблицы = "ТаблицаПрямыеЗатратыНаОбработку";
	ЗаголовкиТаблиц.Добавить(ЗаголовокТаблиц);
	
	ДобавитьГруппуКолонок("", ЗаголовокТаблиц);
	
	ДобавитьКолонку(НСтр("ru = 'Выпуск, количество'"), НСтр("ru = '2'"), ЗаголовокТаблиц);
	
	ДобавитьГруппуКолонок(НСтр("ru = 'Незавершенное производство на конец месяца'"), ЗаголовокТаблиц);
	
	ДобавитьКолонку(НСтр("ru = 'Количество'"), НСтр("ru = '3'"), ЗаголовокТаблиц);
	ДобавитьКолонку(НСтр("ru = 'Степень
	                           |готовности'"), НСтр("ru = '4'"), ЗаголовокТаблиц);
	ДобавитьКолонку(НСтр("ru = 'Количество эквивалентных единиц,
	                      |гр. 3 * гр. 4'"), НСтр("ru = '5'"), ЗаголовокТаблиц);
	
	ДобавитьГруппуКолонок("", ЗаголовокТаблиц);
	
	ДобавитьКолонку(НСтр("ru = 'Всего эквивалентных единиц,
	                           |гр. 2 + гр. 5'"), НСтр("ru = '6'"), ЗаголовокТаблиц);
	
	Если ПараметрыОтчета.ИспользуютсяОбозначенияПоказателей Тогда
		ДобавитьКолонку(НСтр("ru = 'Показатели'"), НСтр("ru = '6а'"), ЗаголовокТаблиц);
	КонецЕсли;
	
	ДобавитьГруппуКолонок(НСтр("ru = 'Прямые затраты на обработку'"), ЗаголовокТаблиц);
	
	ДобавитьКолонку(НСтр("ru = 'НЗП на начало
	                           |месяца'"), НСтр("ru = '7'"), ЗаголовокТаблиц);
	ДобавитьКолонку(НСтр("ru = 'Затраты текущего
	                           |месяца'"), НСтр("ru = '8'"), ЗаголовокТаблиц);
	ДобавитьКолонку(НСтр("ru = 'Всего,
	                           |гр. 7 + гр. 8'"), НСтр("ru = '9'"), ЗаголовокТаблиц);
	ДобавитьКолонку(НСтр("ru = 'в том числе на выпуск,
	                           |гр. 9 * гр 2 /
	                           |гр. 6'"), НСтр("ru = '10'"), ЗаголовокТаблиц);
	ДобавитьКолонку(НСтр("ru = 'в том числе в НЗП,
	                           |гр.9 * гр 5 /
	                           |гр. 6'"), НСтр("ru = '11'"), ЗаголовокТаблиц);
		
	ЗаголовокТаблиц = НовыйЗаголовокТаблиц();
	ЗаголовокТаблиц.ИмяТаблицы = "ТаблицаБазаРаспределения";
	ЗаголовкиТаблиц.Добавить(ЗаголовокТаблиц);
	
	ДобавитьГруппуКолонок("", ЗаголовокТаблиц);
	ДобавитьКолонку(НСтр("ru = 'Выпуск,
	                           |количество'"), НСтр("ru = '3'"), ЗаголовокТаблиц);
	
	ДобавитьГруппуКолонок(НСтр("ru = 'Незавершенное производство на конец месяца'"), ЗаголовокТаблиц);
	ДобавитьКолонку(НСтр("ru = 'Количество'"), НСтр("ru = '4'"), ЗаголовокТаблиц);
	ДобавитьКолонку(НСтр("ru = 'Степень
	                           |готовности'"), НСтр("ru = '5'"), ЗаголовокТаблиц);
	ДобавитьКолонку(НСтр("ru = 'Количество
	                           |эквивалентных единиц,
	                           |гр. 4 * гр. 5'"), НСтр("ru = '6'"), ЗаголовокТаблиц);
	
	ДобавитьГруппуКолонок("", ЗаголовокТаблиц);
	ДобавитьКолонку(НСтр("ru = 'Сумма затрат'"), НСтр("ru = '7'"), ЗаголовокТаблиц);
	ДобавитьКолонку(НСтр("ru = 'Стоимость материальных затрат на одну единицу продукции,
	                           |гр. 7 / (итог гр. 3 + итог гр. 4)'"), НСтр("ru = '8'"), ЗаголовокТаблиц);
	ДобавитьКолонку(НСтр("ru = 'Стоимость материалов, учтенных в части, соответствующей степени обработки,
	                           |гр. 8 * (итог гр. 3 + итог гр. 6)'"), НСтр("ru = '9'"), ЗаголовокТаблиц);
	ДобавитьКолонку(НСтр("ru = 'База распределения,
	                           |гр. 9 (для мат. затрат)
	                           |+ гр. 7 (для остальных затрат)'"), НСтр("ru = '10'"), ЗаголовокТаблиц);
	
	ЗаголовокТаблиц = НовыйЗаголовокТаблиц();
	ЗаголовокТаблиц.ИмяТаблицы = "ТаблицаКосвенныеЗатраты";
	ЗаголовкиТаблиц.Добавить(ЗаголовокТаблиц);
	
	Если ПараметрыОтчета.ИспользуетсяНезавершенноеПроизводствоПоПродукции Тогда
		ДобавитьГруппуКолонок(НСтр("ru = 'Результат производства'"), ЗаголовокТаблиц);
		ДобавитьКолонку(НСтр("ru = 'Выпуск,
		                           |количество'"), НСтр("ru = '2'"), ЗаголовокТаблиц);
		ДобавитьКолонку(НСтр("ru = 'НЗП на конец месяца,
		                           |количество эквивалентных единиц'"), НСтр("ru = '3'"), ЗаголовокТаблиц);
		ДобавитьКолонку(НСтр("ru = 'Всего количество
		                           |эквивалентных единиц,
		                           |гр. 2 + гр. 3'"), НСтр("ru = '4'"), ЗаголовокТаблиц);
		
		ДобавитьГруппуКолонок("", ЗаголовокТаблиц);
		ДобавитьКолонку(НСтр("ru = 'База распределения'"), НСтр("ru = '5'"), ЗаголовокТаблиц);
		ДобавитьКолонку(НСтр("ru = 'Коэффициент базы,
		                           |гр. 5 / итог гр. 5'"), НСтр("ru = '6'"), ЗаголовокТаблиц);
		Если ПараметрыОтчета.ИспользуютсяОбозначенияПоказателей Тогда
			ДобавитьКолонку(НСтр("ru = 'Показатели'"), НСтр("ru = '6а'"), ЗаголовокТаблиц);
		КонецЕсли;
		ДобавитьГруппуКолонок(НСтр("ru = 'Косвенные затраты'"), ЗаголовокТаблиц);
		ДобавитьКолонку(НСтр("ru = 'НЗП на начало месяца'"), НСтр("ru = '7'"), ЗаголовокТаблиц);
		ДобавитьКолонку(НСтр("ru = 'Затраты текущего месяца'"), НСтр("ru = '8'"), ЗаголовокТаблиц);
		ДобавитьКолонку(НСтр("ru = 'Всего,
		                           |итог гр. 7
		                           |+ итог гр. 8'"), НСтр("ru = '9'"), ЗаголовокТаблиц);
		ДобавитьКолонку(НСтр("ru = 'Затраты на продукцию,
		                           |итог гр. 9 * гр. 6'"), НСтр("ru = '10'"), ЗаголовокТаблиц);
		ДобавитьКолонку(НСтр("ru = 'в том числе на выпуск,
		                           |гр. 10 * гр. 2 /
		                           |гр. 4'"), НСтр("ru = '11'"), ЗаголовокТаблиц);
		ДобавитьКолонку(НСтр("ru = 'в том числе в НЗП,
		                           |итог гр. 9
		                           |- итог гр. 11'"), НСтр("ru = '12'"), ЗаголовокТаблиц);
	Иначе
		ДобавитьГруппуКолонок("", ЗаголовокТаблиц);
		Если ПараметрыОтчета.ИспользуютсяОбозначенияПоказателей Тогда
			ДобавитьКолонку(НСтр("ru = 'Показатели'"), НСтр("ru = '1а'"), ЗаголовокТаблиц);
		КонецЕсли;
		ДобавитьКолонку(НСтр("ru = 'Прямые затраты'"), НСтр("ru = '2'"), ЗаголовокТаблиц);
		ДобавитьКолонку(НСтр("ru = 'Косвенные затраты текущего месяца'"), НСтр("ru = '3'"), ЗаголовокТаблиц);
		ДобавитьКолонку(НСтр("ru = 'База распределения'"), НСтр("ru = '4'"), ЗаголовокТаблиц);
		ДобавитьКолонку(НСтр("ru = 'Коэффициент базы,
		                           |гр. 4 / итог гр. 4'"), НСтр("ru = '5'"), ЗаголовокТаблиц);
		ДобавитьКолонку(НСтр("ru = 'Затраты на продукцию,
		                           |итог гр. 3 * гр. 5'"), НСтр("ru = '6'"), ЗаголовокТаблиц);
		ДобавитьКолонку(НСтр("ru = 'Фактическая себестоимость,
		                           |гр. 2 + гр. 6'"), НСтр("ru = '7'"), ЗаголовокТаблиц);
		Если ПараметрыОтчета.ИспользуетсяПлановаяСебестоимость Тогда
			ДобавитьКолонку(НСтр("ru = 'Плановая себестоимость'"), НСтр("ru = '8'"), ЗаголовокТаблиц);
			ДобавитьКолонку(НСтр("ru = 'Отклонение
			                           |фактической
			                           |себестоимости
			                           |от плановой,
			                           |гр. 7 - гр. 8'"), НСтр("ru = '9'"), ЗаголовокТаблиц);
		КонецЕсли;
	КонецЕсли;
	ЗаголовокТаблиц = НовыйЗаголовокТаблиц();
	ЗаголовокТаблиц.ИмяТаблицы = "ТаблицаСебестоимостьВыпуска";
	ЗаголовкиТаблиц.Добавить(ЗаголовокТаблиц);
	
	ДобавитьГруппуКолонок("", ЗаголовокТаблиц);
	Если ПараметрыОтчета.ИспользуютсяОбозначенияПоказателей Тогда
		ДобавитьКолонку(НСтр("ru = 'Показатели'"), НСтр("ru = '1а'"), ЗаголовокТаблиц);
	КонецЕсли;
	ДобавитьКолонку(НСтр("ru = 'Прямые материальные затраты'"), НСтр("ru = '2'"), ЗаголовокТаблиц);
	ДобавитьКолонку(НСтр("ru = 'Прямые затраты на обработку'"), НСтр("ru = '3'"), ЗаголовокТаблиц);
	ДобавитьКолонку(НСтр("ru = 'Всего прямые затраты,
	                           |гр. 2 + гр. 3'"), НСтр("ru = '4'"), ЗаголовокТаблиц);
	ДобавитьКолонку(НСтр("ru = 'Косвенные затраты'"), НСтр("ru = '5'"), ЗаголовокТаблиц);
	ДобавитьКолонку(НСтр("ru = 'Фактическая себестоимость,
	                           |гр. 4 + гр. 5'"), НСтр("ru = '6'"), ЗаголовокТаблиц);
	Если ПараметрыОтчета.ИспользуетсяПлановаяСебестоимость Тогда
		ДобавитьКолонку(НСтр("ru = 'Плановая себестоимость'"), НСтр("ru = '7'"), ЗаголовокТаблиц);
		ДобавитьКолонку(НСтр("ru = 'Отклонение
		                           |фактической
		                           |себестоимости
		                           |от плановой,
		                           |гр. 6 - гр. 7'"), НСтр("ru = '8'"), ЗаголовокТаблиц);
	КонецЕсли;
	
	ЗаголовокТаблиц = НовыйЗаголовокТаблиц();
	ЗаголовокТаблиц.ИмяТаблицы = "ТаблицаСтоимостьНезавершенногоПроизводства";
	ЗаголовкиТаблиц.Добавить(ЗаголовокТаблиц);
	
	ДобавитьГруппуКолонок("", ЗаголовокТаблиц);
	Если ПараметрыОтчета.ИспользуютсяОбозначенияПоказателей Тогда
		ДобавитьКолонку(НСтр("ru = 'Показатели'"), НСтр("ru = '1а'"), ЗаголовокТаблиц);
	КонецЕсли;
	ДобавитьКолонку(НСтр("ru = 'Прямые материальные затраты'"), НСтр("ru = '2'"), ЗаголовокТаблиц);
	ДобавитьКолонку(НСтр("ru = 'Прямые затраты на обработку'"), НСтр("ru = '3'"), ЗаголовокТаблиц);
	ДобавитьКолонку(НСтр("ru = 'Всего прямые затраты,
	                           |гр. 2 + гр. 3'"), НСтр("ru = '4'"), ЗаголовокТаблиц);
	ДобавитьКолонку(НСтр("ru = 'Косвенные затраты'"), НСтр("ru = '5'"), ЗаголовокТаблиц);
	ДобавитьКолонку(НСтр("ru = 'Фактическая себестоимость,
	                           |гр. 4 + гр. 5'"), НСтр("ru = '6'"), ЗаголовокТаблиц);
		
	Для Каждого ЗаголовокТаблиц Из ЗаголовкиТаблиц Цикл
		ПараметрыПоиска = БухгалтерскиеОтчеты.ПараметрыПоискаВТелеМакетаКомпоновки();
		МакетТаблицы = БухгалтерскиеОтчеты.ПодобратьЭлементыИзТелаМакета(МакетКомпоновки, ЗаголовокТаблиц.ИмяТаблицы,
			ПараметрыПоиска);
		РазмещениеМакетовЗаголовкаТаблицы = Новый Соответствие;
		СправкиРасчеты.ЗаполнитьМакетыЗаголовкаТаблицы(РазмещениеМакетовЗаголовкаТаблицы, МакетТаблицы);
	
		// Если таблица состоит из нескольких групп колонок, часть из которых объединена общим заголовком, то количество строк
		// заголовка, не включая нумерацию колонок, равно двум: заголовок колонок и заголовок группы колонок.
		// В противном случае заголовок состоит из одной строки.
		ЦелевоеКоличествоУровнейШапки = ?(ЗаголовокТаблиц.ГруппыКолонок.Количество() > 1, 2, 1);
		Для Каждого ОписаниеМакетаОбласти Из РазмещениеМакетовЗаголовкаТаблицы Цикл

			МакетЗаголовка = МакетКомпоновки.Макеты.Найти(ОписаниеМакетаОбласти.Ключ);

			Если МакетЗаголовка = Неопределено Тогда
				Продолжить;
			КонецЕсли;

			ТекущееКоличествоУровнейШапки = МакетЗаголовка.Макет.Количество();
			Если ТекущееКоличествоУровнейШапки > ЦелевоеКоличествоУровнейШапки Тогда
				Для Индекс = 1 По ТекущееКоличествоУровнейШапки - ЦелевоеКоличествоУровнейШапки Цикл
					УдаляемаяСтрока = МакетЗаголовка.Макет[ТекущееКоличествоУровнейШапки - Индекс];
					МакетЗаголовка.Макет.Удалить(УдаляемаяСтрока);
				КонецЦикла;
			КонецЕсли;

			ИмяКолонки = ОписаниеМакетаОбласти.Значение;
		
			// Заголовки строк обрабатываем иначе, чем заголовки ресурсов: название колонок в них не меняется, а только
			// удаляются лишние строки и добавляется нумерация. Нумерация таких колонок начинается всегда с 1.
			Если ИмяКолонки = СправкиРасчеты.СлужебноеИмяЗаголовкиСтрок() Тогда

				СправкиРасчеты.ДобавитьНомераКолонок(МакетЗаголовка, Неопределено, Истина);

			Иначе

				ИндексКолонки = 0;
				ЭтоПервыйЭлементГруппыКолонок = Истина;
				Для Каждого ГруппаКолонок Из ЗаголовокТаблиц.ГруппыКолонок Цикл
					ЯчейкиГруппы = МакетЗаголовка.Макет[0].Ячейки;
					ЯчейкиКолонок = Неопределено;
					Если ЗначениеЗаполнено(ГруппаКолонок.ИмяГруппы) И ЦелевоеКоличествоУровнейШапки > 1 Тогда
						ЯчейкиКолонок = МакетЗаголовка.Макет[ЦелевоеКоличествоУровнейШапки - 1].Ячейки;
					Иначе
						ЯчейкиКолонок = МакетЗаголовка.Макет[0].Ячейки;
					КонецЕсли;
					Для Каждого НаименованиеКолонки Из ГруппаКолонок.Колонки Цикл

						Ячейка = Неопределено;
						Если ЯчейкиКолонок[ИндексКолонки].Элементы.Количество() > 0 Тогда
							Ячейка = ЯчейкиКолонок[ИндексКолонки].Элементы[0];
						Иначе
							Ячейка = ЯчейкиКолонок[ИндексКолонки].Элементы.Добавить(Тип("ПолеОбластиКомпоновкиДанных"));
						КонецЕсли;
						Ячейка.Значение = НаименованиеКолонки;
						ЯчейкиКолонок[ИндексКолонки].Оформление.УстановитьЗначениеПараметра(
								"ВертикальноеПоложение", ВертикальноеПоложение.Центр);

						Если ЗначениеЗаполнено(ГруппаКолонок.ИмяГруппы) Тогда
							ЯчейкаГруппы = Неопределено;
							Если ЯчейкиГруппы[ИндексКолонки].Элементы.Количество() > 0 Тогда
								ЯчейкаГруппы = ЯчейкиГруппы[ИндексКолонки].Элементы[0];
							Иначе
								ЯчейкаГруппы = ЯчейкиГруппы[ИндексКолонки].Элементы.Добавить(Тип(
									"ПолеОбластиКомпоновкиДанных"));
							КонецЕсли;
							Если ЭтоПервыйЭлементГруппыКолонок Тогда
								ЯчейкаГруппы.Значение = ГруппаКолонок.ИмяГруппы;
							Иначе
								ЯчейкаГруппы.Значение = "";
								ЯчейкиГруппы[ИндексКолонки].Оформление.УстановитьЗначениеПараметра(
								"ОбъединятьПоГоризонтали", Истина);
							КонецЕсли;
						Иначе
							Для НомерСтроки = 1 По ЦелевоеКоличествоУровнейШапки - 1 Цикл
								ВсеЯчейкиЗаголовка = МакетЗаголовка.Макет[НомерСтроки].Ячейки;
								ВсеЯчейкиЗаголовка[ИндексКолонки].Оформление.УстановитьЗначениеПараметра(
								"ОбъединятьПоВертикали", Истина);
							КонецЦикла;
						КонецЕсли;
						ИндексКолонки = ИндексКолонки + 1;
						ЭтоПервыйЭлементГруппыКолонок = Ложь;
					КонецЦикла;
					ЭтоПервыйЭлементГруппыКолонок = Истина;
				КонецЦикла;
				
				СправкиРасчеты.ДобавитьНомераКолонок(МакетЗаголовка, ЗаголовокТаблиц.НомераКолонок);

			КонецЕсли;

		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьНаборПоказателей() Экспорт
	
	//См. ПоддерживаемыеНаборыСуммовыхПоказателей
	Возврат СправкиРасчетыКлиентСервер.ВсеПоказателиОтчета();
	
КонецФункции

Процедура НастроитьВариантыОтчета(Настройки, ОписаниеОтчета) Экспорт
	
	ВариантыНастроек = ВариантыНастроек();
	Для Каждого Вариант из ВариантыНастроек Цикл
		ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, Вариант.Имя).Размещение.Вставить(
			Метаданные.Подсистемы.Отчеты.Подсистемы.СправкиРасчеты.Подсистемы.БухгалтерскийУчет, "");
		ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, Вариант.Имя).Размещение.Вставить(
			Метаданные.Подсистемы.Отчеты.Подсистемы.СправкиРасчеты.Подсистемы.БухгалтерскийИНалоговыйУчет, "");
		ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, Вариант.Имя).Размещение.Вставить(
			Метаданные.Подсистемы.БухгалтерияПредприятияПодсистемы.Подсистемы.ПростойИнтерфейс.Подсистемы.Отчеты.Подсистемы.СправкиРасчеты, "");
	КонецЦикла;
	
КонецПроцедуры

Функция ВариантыНастроек() Экспорт
	
	Массив = Новый Массив;
	
	Массив.Добавить(Новый Структура("Имя, Представление","СебестоимостьВыпущеннойПродукцииИОказанныхУслугПроизводственногоХарактера",
		НСтр("ru = 'Себестоимость продукции, услуг, незавершенного производства'")));
	
	Возврат Массив;
	
КонецФункции

//Процедура используется подсистемой варианты отчетов
//
Процедура НастройкиОтчета(Настройки) Экспорт
	
	Схема = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	Для Каждого Вариант из Схема.ВариантыНастроек Цикл
		 Настройки.ОписаниеВариантов.Вставить(Вариант.Имя,Вариант.Представление);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьГруппуКолонок(ИмяГруппы, ЗаголовокТаблиц)
	Группа = НовыйГруппаКолонок();
	Группа.ИмяГруппы = ИмяГруппы;
	ЗаголовокТаблиц.ГруппыКолонок.Добавить(Группа);
	ЗаголовокТаблиц.ТекущаяГруппаКолонок = Группа;
КонецПроцедуры

Процедура ДобавитьКолонку(ИмяКолонки, НомерКолонки, ЗаголовокТаблиц)
	
	ЗаголовокТаблиц.НомераКолонок.Добавить(НомерКолонки);
	
	ЗаголовокТаблиц.ТекущаяГруппаКолонок.Колонки.Добавить(ИмяКолонки);
	
КонецПроцедуры

Процедура ОтключитьНеиспользуемыеРесурсы(КомпоновщикНастроек, ПараметрыОтчета, ИспользуютсяОбозначенияПоказателей, ИспользуетсяПлановаяСебестоимость)

	РесурсыОтчета = БухгалтерскиеОтчетыКлиентСервер.НайтиРесурсы(КомпоновщикНастроек.Настройки);
	
	ОтключаемыеПоля = Новый Соответствие;
	ОтключаемыеПоказатели =
		ОбщегоНазначенияКлиентСервер.РазностьМассивов(ПолучитьНаборПоказателей(), ПараметрыОтчета.СоставНабораПоказателей);
	
	Для Каждого РесурсОтчета Из РесурсыОтчета Цикл
		
		Если ТипЗнч(РесурсОтчета) <> Тип("ВыбранноеПолеКомпоновкиДанных") Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не СтрЗаканчиваетсяНа(РесурсОтчета.Поле, "БУ") Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ИспользуютсяОбозначенияПоказателей И СтрНачинаетсяС(РесурсОтчета.Поле, "Показатели.") Тогда
			
			Для Каждого ОтключаемыйПоказатель Из ПолучитьНаборПоказателей() Цикл
				ОтключаемыеПоля.Вставить(СтрЗаменить(РесурсОтчета.Поле, "БУ", ОтключаемыйПоказатель), Истина);
			КонецЦикла;
		Иначе
				
			Для Каждого ОтключаемыйПоказатель Из ОтключаемыеПоказатели Цикл
				ОтключаемыеПоля.Вставить(СтрЗаменить(РесурсОтчета.Поле, "БУ", ОтключаемыйПоказатель), Истина);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не ИспользуетсяПлановаяСебестоимость Тогда
		ОтключаемыеПоля.Вставить("ПлановаяСтоимость", Истина);
		Если ОтключаемыеПоказатели.Найти("БУ") = Неопределено Тогда
			ОтключаемыеПоля.Вставить("ОтклонениеОтПлановойСтоимостиБУ", Истина);
			ОтключаемыеПоля.Вставить("ОтклонениеОтПлановойСтоимостиБезНЗППоПродукцииБУ", Истина);
		КонецЕсли;
		Если ОтключаемыеПоказатели.Найти("НУ") = Неопределено Тогда
			ОтключаемыеПоля.Вставить("ОтклонениеОтПлановойСтоимостиНУ", Истина);
			ОтключаемыеПоля.Вставить("ОтклонениеОтПлановойСтоимостиБезНЗППоПродукцииНУ", Истина);
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого РесурсОтчета Из РесурсыОтчета Цикл
		
		Если ТипЗнч(РесурсОтчета) <> Тип("ВыбранноеПолеКомпоновкиДанных") Тогда
			Продолжить;
		КонецЕсли;
		
		Если ОтключаемыеПоля[Строка(РесурсОтчета.Поле)] = Истина Тогда
			РесурсОтчета.Использование = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция НовыйГруппаКолонок()

	НовыйГруппаКолонок = Новый Структура("ИмяГруппы, Колонки");
	НовыйГруппаКолонок.ИмяГруппы = "";
	НовыйГруппаКолонок.Колонки = Новый Массив;
	
	Возврат НовыйГруппаКолонок;

КонецФункции

Функция НовыйЗаголовокТаблиц()

	НовыйКолонкаТаблицы = Новый Структура;
	НовыйКолонкаТаблицы.Вставить("ИмяТаблицы", "");
	НовыйКолонкаТаблицы.Вставить("ГруппыКолонок", Новый Массив);
	НовыйКолонкаТаблицы.Вставить("НомераКолонок", Новый Массив);
	НовыйКолонкаТаблицы.Вставить("ТекущаяГруппаКолонок", НовыйГруппаКолонок());
	
	Возврат НовыйКолонкаТаблицы;
	
КонецФункции

Процедура ПолучитьТаблицыОтчетаДляНастройки(Структура, ТаблицыОтчета)

	Для каждого Элемент Из Структура Цикл

		Если ТипЗнч(Элемент) = Тип("ТаблицаКомпоновкиДанных") Тогда
			ТаблицыОтчета.Добавить(Элемент);
			Продолжить;
		КонецЕсли;
		ПолучитьТаблицыОтчетаДляНастройки(Элемент.Структура, ТаблицыОтчета);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли