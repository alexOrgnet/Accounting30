#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает внешние наборы данных, которые используются при компоновке макета.
// 
// Параметры:
//   ПараметрыОтчета - Структура - Параметры исполнения отчета (См. ПустыеПараметрыКомпоновкиОтчета()).
//   МакетКомпоновки - МакетКомпоновкиДанных - сформированный макет компоновки данных.
// 
// Возвращаемое значение:
//   Структура - внешние наборы данных:
// *   ДанныеРаспределения - ТаблицаЗначений - преобразованная таблица коэффициентов распределения.
//
Функция ПолучитьВнешниеНаборыДанных(ПараметрыОтчета, МакетКомпоновки) Экспорт
	
	ДанныеЗаТекущийПериод = ПодготовитьДанные(ПараметрыОтчета, Ложь);
	
	ВнешниеИсточники = Новый Структура;
	ВнешниеИсточники.Вставить("ВыручкаСебестоимость", ДанныеЗаТекущийПериод.ВыручкаСебестоимость);
	ВнешниеИсточники.Вставить("ПрочиеПоказатели", ДанныеЗаТекущийПериод.ПрочиеПоказатели); 
	Если ПараметрыОтчета.Периодичность = 0 Тогда 
		ДанныеЗаПрошлыйПериод = ПодготовитьДанные(ПараметрыОтчета, Истина); 
		ВнешниеИсточники.Вставить("ВыручкаСебестоимостьПрошлыйПериод", ДанныеЗаПрошлыйПериод.ВыручкаСебестоимость);
		ВнешниеИсточники.Вставить("ПрочиеПоказателиПрошлыйПериод", ДанныеЗаПрошлыйПериод.ПрочиеПоказатели);
	Иначе
		ВнешниеИсточники.Вставить("ВыручкаСебестоимостьПрошлыйПериод", ТаблицаРезультат());
		ВнешниеИсточники.Вставить("ПрочиеПоказателиПрошлыйПериод", ТаблицаРезультат());
	КонецЕсли;

	Возврат ВнешниеИсточники;

КонецФункции

// Инициализирует набор параметров, задающих флаги выполнения дополнительных действий над сущностями, обрабатываемыми
// в процессе формирования отчета.
//
// Возвращаемое значение:
//   Структура - флаги, задающие необходимость дополнительных действий.
//
Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ИспользоватьПередКомпоновкойМакета",          Истина);
	Результат.Вставить("ИспользоватьПослеВыводаРезультата",           Истина);
	Результат.Вставить("ИспользоватьДанныеРасшифровки",               Истина);
	Результат.Вставить("ИспользоватьРасширенныеПараметрыРасшифровки", Истина);
	Результат.Вставить("ИспользоватьВнешниеНаборыДанных",             Истина);
	
	Возврат Результат;
	
КонецФункции

// Формирует текст, выводимый в заголовке отчета.
//
// Параметры:
//   ПараметрыОтчета - Структура - см. ПодготовитьПараметрыОтчета() в ФормаОтчета.
//
// Возвращаемое значение:
//   Строка - текст заголовка с учётом периода.
//
Функция ПолучитьТекстЗаголовка(ПараметрыОтчета) Экспорт
	
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Анализ финансовых результатов%1'"),
		БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(ПараметрыОтчета.НачалоПериода, ПараметрыОтчета.КонецПериода));
	
КонецФункции

// В процедуре можно доработать компоновщик перед выводом в отчет. Изменения сохранены не будут.
//
// Параметры:
//   ПараметрыОтчета - Структура - см. ПодготовитьПараметрыОтчета() в ФормаОтчета.
//   Схема - СхемаКомпоновкиДанных - описание получаемых данных.
//   КомпоновщикНастроек - КомпоновщикНастроекКомпоновкиДанных - связь настроек компоновки данных и схемы компоновки.
//
Процедура ПередКомпоновкойМакета(ПараметрыОтчета, Схема, КомпоновщикНастроек) Экспорт
	
	#Область УстановкаПараметровСхемыКомпоновки
	
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек,
		"ПоказательДоход", Новый ХранилищеЗначения(БиблиотекаКартинок.ПоказательДоход));
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек,
		"ПоказательРасход", Новый ХранилищеЗначения(БиблиотекаКартинок.ПоказательРасход));
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек,
		"ПоказательФормула", Новый ХранилищеЗначения(БиблиотекаКартинок.ПоказательФормула));
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек,
		"СуммаДоход", Новый ХранилищеЗначения(БиблиотекаКартинок.СуммаЗеленая));
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек,
		"СуммаРасход", Новый ХранилищеЗначения(БиблиотекаКартинок.СуммаКрасная));
	Если ПараметрыОтчета.Периодичность = 0 Тогда
		НачальныйПериод = Год(ПараметрыОтчета.НачалоПериода);
	Иначе
		НачальныйПериод = НачалоМесяца(ПараметрыОтчета.НачалоПериода);
	КонецЕсли;
	
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек,
		"НачальныйПериод", НачальныйПериод);
	
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек,
		"ВыручкаПоНоменклатуре", ПараметрыОтчета.РазрезПродаж = 2);
	
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек,
		"КартинкаИнформация", Новый ХранилищеЗначения(БиблиотекаКартинок.ИнформацияБЭД));
	
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек,
		"Периодичность", ПараметрыОтчета.Периодичность);

	#КонецОбласти
	
	#Область ФормированиеСтруктурыОтчета
	
	Таблица = Неопределено;
	
	Для Каждого ЭлементСтруктуры Из КомпоновщикНастроек.Настройки.Структура Цикл
		Если ЭлементСтруктуры.Имя = "Таблица" Тогда
			Таблица = ЭлементСтруктуры;
		КонецЕсли;
	КонецЦикла;
	
	РазрезПродаж = ПараметрыОтчета.РазрезПродаж;
		
	Если Таблица <> Неопределено Тогда
		
		Таблица.Колонки.Очистить();
		ГруппировкаПериод = Таблица.Колонки.Добавить();
		
		ЗаполнитьГруппировкуПериод(КомпоновщикНастроек, ПараметрыОтчета, ГруппировкаПериод);
		
		// Группировка
		Таблица.Строки.Очистить();
		Группировка = Таблица.Строки;
		
		Показатель = Новый ПолеКомпоновкиДанных("Показатель");
		Аналитика  = Новый ПолеКомпоновкиДанных("Аналитика");
		Порядок    = Новый ПолеКомпоновкиДанных("Порядок");
		ВидСтроки  = Новый ПолеКомпоновкиДанных("ВидСтроки");
		
		ЭтоПерваяГруппировка = Истина;
		Для Каждого ПолеВыбраннойГруппировки Из ПараметрыОтчета.Группировка Цикл 
			
			Если Не ПолеВыбраннойГруппировки.Использование Тогда
				Продолжить;
			КонецЕсли;
			
			Если ПолеВыбраннойГруппировки.Поле = "Показатель" Тогда
				
				Группировка = ДобавитьГруппировку(ПолеВыбраннойГруппировки, Группировка, ЭтоПерваяГруппировка);
				
				Если ЭтоПерваяГруппировка Тогда
					ЭлементОфрмления = Группировка.УсловноеОформление.Элементы.Добавить();
					КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементОфрмления.Поля, "Отклонение");
					ЭлементОфрмления.Оформление.УстановитьЗначениеПараметра("Текст", "> 1000%");
					ЭлементОфрмления.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных .Недоступный;
					
					ГруппаОтбора = КомпоновкаДанныхКлиентСервер.ДобавитьГруппуОтбора(
						ЭлементОфрмления.Отбор.Элементы, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
				
					БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(
						ГруппаОтбора,
						"Отклонение",
						1000,
						ВидСравненияКомпоновкиДанных.Больше);
				
					БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(
						ГруппаОтбора,
						"Отклонение",
						-1000,
						ВидСравненияКомпоновкиДанных.Меньше);
 						
						ЭтоПерваяГруппировка = Ложь;
				КонецЕсли;
		
				ПолеГруппировкиВидСтроки      = Группировка.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
				ПолеГруппировкиВидСтроки.Поле = ВидСтроки;
				
				ПолеГруппировкиПорядок      = Группировка.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
				ПолеГруппировкиПорядок.Поле = Порядок;
				
				Группировка.Выбор.Элементы.Очистить();
				
				ЭлементыВыбора      = Группировка.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
				ЭлементыВыбора.Поле = Показатель;
				
				ЭлементыВыбора      = Группировка.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
				ЭлементыВыбора.Поле = Новый ПолеКомпоновкиДанных("Сумма");
				
				ЭлементыВыбора      = Группировка.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
				ЭлементыВыбора.Поле = Новый ПолеКомпоновкиДанных("Отклонение");
				ЭлементыВыбора.Заголовок = "Изменение";

				Группировка.Порядок.Элементы.Очистить();

				ДобавитьПорядок(Группировка, Порядок);
				
				ДобавитьОформлениеИтога(Группировка, 4);
				
				ДобавитьОформлениеИтога(Группировка, 5);
				
			ИначеЕсли ПолеВыбраннойГруппировки.Поле = "Аналитика" Тогда 
				
				// Аналитика продаж 
				
				Если ПараметрыОтчета.РазрезПродаж = 1 Тогда
					
					ГруппировкаАналитика = ДобавитьГруппировку("Аналитика", Группировка, ЭтоПерваяГруппировка);
					
					ГруппировкаАналитика.Порядок.Элементы.Очистить();
					ДобавитьПорядок(ГруппировкаАналитика, Аналитика);

					ГруппировкаАналитика.Отбор.Элементы.Очистить();

					БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(ГруппировкаАналитика.Отбор, "Порядок", 3, 
						ВидСравненияКомпоновкиДанных.МеньшеИлиРавно);
					
					// Договор
					ГруппировкаАналитика = ДобавитьГруппировку("Договор", ГруппировкаАналитика, ЭтоПерваяГруппировка);
					
					ГруппировкаАналитика.Порядок.Элементы.Очистить();
					ДобавитьПорядок(ГруппировкаАналитика, Новый ПолеКомпоновкиДанных("Договор"));
					
					ГруппировкаАналитика.Отбор.Элементы.Очистить();
					
					БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(ГруппировкаАналитика.Отбор, "Договор",,
						ВидСравненияКомпоновкиДанных.Заполнено);

				Иначе

					ГруппировкаАналитика = ДобавитьГруппировку("Аналитика", Группировка, ЭтоПерваяГруппировка);
					
					ГруппировкаАналитика.Имя = "Аналитика";
					ГруппировкаАналитика.Порядок.Элементы.Очистить();
					ДобавитьПорядок(ГруппировкаАналитика, Аналитика);
					
					БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(ГруппировкаАналитика.Отбор, "Порядок", 3, 
						ВидСравненияКомпоновкиДанных.МеньшеИлиРавно);

				КонецЕсли;
				
				// Аналитика
				ГруппировкаАналитика = ДобавитьГруппировку("Аналитика", Группировка, ЭтоПерваяГруппировка);

				ГруппировкаАналитика.Отбор.Элементы.Очистить();

				ГруппаОтбора = КомпоновкаДанныхКлиентСервер.ДобавитьГруппуОтбора(
					ГруппировкаАналитика.Отбор.Элементы, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
				
				БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(ГруппаОтбора, "Порядок", 3, ВидСравненияКомпоновкиДанных.Больше);
				
				БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(ГруппаОтбора, "Аналитика",, ВидСравненияКомпоновкиДанных.Заполнено);
				
				// РеализуемыйАктив
				
				ГруппировкаАналитика = ДобавитьГруппировку("РеализуемыйАктив", ГруппировкаАналитика, ЭтоПерваяГруппировка);
				
				ГруппировкаАналитика.Порядок.Элементы.Очистить();
				ДобавитьПорядок(ГруппировкаАналитика, Новый ПолеКомпоновкиДанных("РеализуемыйАктив"));
				
				БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(ГруппировкаАналитика.Отбор, "РеализуемыйАктив",,
					ВидСравненияКомпоновкиДанных.Заполнено);

			Иначе
				
				Если ГруппировкаАналитика <> Неопределено Тогда
				
					ГруппировкаАналитика = ДобавитьГруппировку(ПолеВыбраннойГруппировки, ГруппировкаАналитика, ЭтоПерваяГруппировка);

				КонецЕсли;
				
				Группировка = ДобавитьГруппировку(ПолеВыбраннойГруппировки, Группировка, ЭтоПерваяГруппировка);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	#КонецОбласти
	
	// Дополнительные данные.
	БухгалтерскиеОтчетыВызовСервера.ДобавитьДополнительныеПоля(ПараметрыОтчета, КомпоновщикНастроек);
	
	// Отбор по организации.
	БухгалтерскиеОтчетыВызовСервера.ДобавитьОтборПоОрганизации(ПараметрыОтчета, КомпоновщикНастроек);
	
КонецПроцедуры

// В процедуре можно изменить табличный документ после вывода в него данных.
//
// Параметры:
//   ПараметрыОтчета - Структура - см. ПодготовитьПараметрыОтчета() в ФормаОтчета.
//   Результат - ТабличныйДокумент - сформированный отчет.
//
Процедура ПослеВыводаРезультата(ПараметрыОтчета, Результат) Экспорт
	
	БухгалтерскиеОтчетыВызовСервера.ОбработкаРезультатаОтчета(ПараметрыОтчета.ИдентификаторОтчета, Результат);
	
	// Отклонение
	УдаляемаяКолонка = Результат.НайтиТекст("Удалить",,,, Истина);
	Если УдаляемаяКолонка <> Неопределено Тогда
		Область = Результат.Область(СтрШаблон("R%1C%2:R%3C%4",
		УдаляемаяКолонка.Верх - 1, УдаляемаяКолонка.Лево - 1, УдаляемаяКолонка.Верх - 1, УдаляемаяКолонка.Лево));
		
		Область.Разъединить();
		
		Результат.УдалитьОбласть(Результат.Область(СтрШаблон("C%1", УдаляемаяКолонка.Лево)), ТипСмещенияТабличногоДокумента.ПоГоризонтали);
		
	КонецЕсли;

	КолонкаОтклонение = Результат.НайтиТекст("Изменение",,,, Истина); 
	Если КолонкаОтклонение <> Неопределено Тогда
		ОтклонениеКолонка = КолонкаОтклонение.Лево - 1;
		ОтклонениеСтрока = КолонкаОтклонение.Верх - 1;
		
		Область = Результат.Область(СтрШаблон("R%1C%2:R%3C%4",
		ОтклонениеСтрока, ОтклонениеКолонка - 1, ОтклонениеСтрока, ОтклонениеКолонка));
		
		Область.Разъединить();
		
		ОбъединяемаяОбласть = Результат.Область(СтрШаблон("R%1C%2:R%3C%4", 
			ОтклонениеСтрока, ОтклонениеКолонка, ОтклонениеСтрока + 1, ОтклонениеКолонка + 1));
	
		ОбъединяемаяОбласть.Объединить();
		
		Линия = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
		ОбъединяемаяОбласть.Обвести(Линия, Линия, Линия, Линия);
	КонецЕсли;

	Пока Результат.НайтиТекст("Сумма") <> Неопределено Цикл
		КолонкаСумма = Результат.НайтиТекст("Сумма",,,, Истина);
		
		ОбъединяемаяОбласть = Результат.Область(СтрШаблон("R%1C%2:R%3C%4",
			КолонкаСумма.Верх - 1, КолонкаСумма.Лево, КолонкаСумма.Верх, КолонкаСумма.Лево));
			
		ОбъединяемаяОбласть.Объединить();

		КонецЦикла;
	
	Результат.ФиксацияСлева = 1;
	
	Если ПараметрыОтчета.Периодичность = 0 Тогда
		Результат.ОриентацияСтраницы =  ОриентацияСтраницы.Портрет;
	Иначе
		Результат.ОриентацияСтраницы =  ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	
	// Свернем все группировки
	Уровень = Результат.КоличествоУровнейГруппировокСтрок() - 1;
	Пока Уровень >= 0 Цикл
		Результат.ПоказатьУровеньГруппировокСтрок(Уровень);
		Уровень = Уровень - 1;
	КонецЦикла;
	
	БыстрыеНастройкиОтчетовСервер.ВывестиПримечанияОкругления(ПараметрыОтчета, Результат);

КонецПроцедуры

// Настройки размещения в панели отчетов.
//
// Параметры:
//   Настройки - Коллекция - Передается "как есть" из ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов().
//   НастройкиОтчета - СтрокаДереваЗначений - Настройки этого отчета,
//      уже сформированные при помощи функции ВариантыОтчетов.ОписаниеОтчета() и готовые к изменению.
//
Процедура НастроитьВариантыОтчета(Настройки, ОписаниеОтчета) Экспорт
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "АнализФинансовыхРезультатовЗаПериод");
	
	ОписаниеВарианта.Размещение.Вставить(Метаданные.Подсистемы.Руководителю.Подсистемы.Анализ, "");
	
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	
КонецПроцедуры

// Заполняет описание настроек отчета в коллекции Настройки.
//
// Параметры:
//   Настройки - Коллекция - Передается "как есть" из ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов().
//
Процедура НастройкиОтчета(Настройки) Экспорт
	
	ВариантыНастроек = ВариантыНастроек();
	Для Каждого Вариант Из ВариантыНастроек Цикл
		Настройки.ОписаниеВариантов.Вставить(Вариант.Имя, Вариант.Представление);
	КонецЦикла;
	
КонецПроцедуры

// Заполняет параметры расшифровки ячейки отчета.
//
// Параметры:
//   Адрес - Строка - Адрес временного хранилища с данными расшифровки отчета.
//   Расшифровка - Произвольный - Значения полей расшифровки.
//   ПараметрыРасшифровки - Структура - Коллеккция параметров расшифроки, которую требуется заполнить. 
//      Подробнее см. БухгалтерскиеОтчетыВызовСервера.ПолучитьМассивПолейРасшифровки()
//
Процедура ЗаполнитьПараметрыРасшифровкиОтчета(Адрес, Расшифровка, ПараметрыРасшифровки) Экспорт
	
	// Инициализируем список пунктов меню
	СписокПунктовМеню = Новый СписокЗначений();
	
	// Заполниим соответствие полей которые мы хотим получить из данных расшифровки
	СоответствиеПолей = Новый Соответствие;
	ДанныеОтчета = ПолучитьИзВременногоХранилища(Адрес);
	
	ЗначениеРасшифровки = ДанныеОтчета.ДанныеРасшифровки.Элементы[Расшифровка];
	Если ТипЗнч(ЗначениеРасшифровки) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
		Для Каждого ПолеРасшифровки ИЗ ЗначениеРасшифровки.ПолучитьПоля() Цикл
			Если ЗначениеЗаполнено(ПолеРасшифровки.Значение) Тогда 
				
				Если ПолеРасшифровки.Значение = "Розничные покупатели"
					Или ПолеРасшифровки.Поле = "Год"
					Или ПолеРасшифровки.Поле = "Месяц" Тогда
					ПараметрыРасшифровки.Вставить("ОткрытьОбъект", Ложь);
					ПараметрыРасшифровки.Вставить("СписокПунктовМеню", СписокПунктовМеню);
				Иначе
					ПараметрыРасшифровки.Вставить("ОткрытьОбъект", Истина);
				КонецЕсли;
				
				ПараметрыРасшифровки.Вставить("Значение", ПолеРасшифровки.Значение);
				
				Возврат;
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Укажем что открывать объект сразу не нужно
	ПараметрыРасшифровки.Вставить("ОткрытьОбъект", Ложь);
	
	Если ДанныеОтчета = Неопределено Тогда 
		ПараметрыРасшифровки.Вставить("СписокПунктовМеню", СписокПунктовМеню);
		Возврат;
	КонецЕсли;
	
	// Прежде всего интересны данные группировочных полей
	Для Каждого Группировка Из ДанныеОтчета.Объект.Группировка Цикл
		
		Если Группировка.Использование Тогда
			
			СоответствиеПолей.Вставить(Группировка.Поле);
			
		КонецЕсли;
		
	КонецЦикла;
		
	// Инициализация пользовательских настроек
	ПользовательскиеНастройки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
	ДополнительныеСвойства = ПользовательскиеНастройки.ДополнительныеСвойства;
	ДополнительныеСвойства.Вставить("РежимРасшифровки",          Истина);
	ДополнительныеСвойства.Вставить("Организация",               ДанныеОтчета.Объект.Организация);
	ДополнительныеСвойства.Вставить("НачалоПериода",             ДанныеОтчета.Объект.НачалоПериода);
	ДополнительныеСвойства.Вставить("КонецПериода",              ДанныеОтчета.Объект.КонецПериода);
	ДополнительныеСвойства.Вставить("ВыводитьЗаголовок",         ДанныеОтчета.Объект.ВыводитьЗаголовок);
	ДополнительныеСвойства.Вставить("ВыводитьПодвал",            ДанныеОтчета.Объект.ВыводитьПодвал);
	ДополнительныеСвойства.Вставить("МакетОформления",           ДанныеОтчета.Объект.МакетОформления);
	ДополнительныеСвойства.Вставить("Периодичность",             ДанныеОтчета.Объект.Периодичность);
	ДополнительныеСвойства.Вставить("РазрезПродаж",              ДанныеОтчета.Объект.РазрезПродаж);
	ДополнительныеСвойства.Вставить("КлючТекущегоВарианта",      ДанныеОтчета.Объект.КлючТекущегоВарианта);
	ДополнительныеСвойства.Вставить("ОчищатьТаблицуГруппировок", Истина);
	ДополнительныеСвойства.Вставить("ОчищатьДополнительныеПоля", Истина);
	
	ОтборПоЗначениямРасшифровки = ПользовательскиеНастройки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
	ОтборПоЗначениямРасшифровки.ИдентификаторПользовательскойНастройки = "Отбор";
	
	// Получаем структуру полей доступных в расшифровке
	Данные_Расшифровки = БухгалтерскиеОтчеты.ПолучитьДанныеРасшифровки(ДанныеОтчета.ДанныеРасшифровки, СоответствиеПолей, Расшифровка);
	
	// Формируем отборы нового отчета.
	Для Каждого ЗначениеРасшифровки Из Данные_Расшифровки Цикл
		БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(ОтборПоЗначениямРасшифровки, ЗначениеРасшифровки.Ключ, ЗначениеРасшифровки.Значение);
	КонецЦикла;
	
	// Формируем группировки нового отчета.
	Группировка = Новый Массив();
	ЕстьГруппировкаПоДокументу = Ложь;
	Для Каждого СтрокаГруппировки Из ДанныеОтчета.Объект.Группировка Цикл
		Если СтрокаГруппировки.Использование Тогда
			
			СтрокаДляРасшифровки = Новый Структура("Использование, Поле, Представление, ТипГруппировки");
			ЗаполнитьЗначенияСвойств(СтрокаДляРасшифровки, СтрокаГруппировки);
			Группировка.Добавить(СтрокаДляРасшифровки);
			
		КонецЕсли;
	КонецЦикла;
	
	ДополнительныеСвойства.Вставить("Группировка", Группировка);
	
	// Формируем дополнительные поля.
	ДополнительныеПоля = Новый Массив();
	
	Для Каждого ДополнительноеПоле Из ДанныеОтчета.Объект.ДополнительныеПоля Цикл
		Если ДополнительноеПоле.Использование Тогда
			
			СтрокаДляРасшифровки = Новый Структура("Использование, Поле, Представление");
			ЗаполнитьЗначенияСвойств(СтрокаДляРасшифровки, ДополнительноеПоле);
			ДополнительныеПоля.Добавить(СтрокаДляРасшифровки);
			
		КонецЕсли;
	КонецЦикла;

	ДополнительныеСвойства.Вставить("ДополнительныеПоля", ДополнительныеПоля);
	
	СписокПунктовМеню.Добавить("АнализФинансовыхРезультатовЗаПериод", "Анализ финансовых результатов за период");
	
	НастройкиРасшифровки = Новый Структура();
	НастройкиРасшифровки.Вставить("АнализФинансовыхРезультатов", ПользовательскиеНастройки);
	ДанныеОтчета.Вставить("НастройкиРасшифровки", НастройкиРасшифровки);
	
	ПоместитьВоВременноеХранилище(ДанныеОтчета, Адрес);
	
	ПараметрыРасшифровки.Вставить("СписокПунктовМеню", СписокПунктовМеню);
	
КонецПроцедуры

// Возвращает коллекцию вариантов настроек отчета.
//
Функция ВариантыНастроек() Экспорт

	Массив = Новый Массив;
	
	Массив.Добавить(Новый Структура("Имя, Представление", "АнализФинансовыхРезультатовЗаПериод", НСтр("ru = 'Анализ финансовых результатов за период'")));
	Массив.Добавить(Новый Структура("Имя, Представление", "АнализФинансовыхРезультатовВДинамике", НСтр("ru = 'Анализ финансовых результатов по месяцам'")));
	
	Возврат Массив;
	
КонецФункции

// Возвращает набор параметров, которые необходимо сохранять в рассылке отчетов.
// Значения параметров используются при формировании отчета в рассылке.
//
// Возвращаемое значение:
//   Структура - структура настроек, сохраняемых в рассылке с неинициализированными значениями.
//
Функция НастройкиОтчетаСохраняемыеВРассылке() Экспорт
	
	КоллекцияНастроек = Новый Структура;
	КоллекцияНастроек.Вставить("Организация"                      , Справочники.Организации.ПустаяСсылка());
	КоллекцияНастроек.Вставить("ВключатьОбособленныеПодразделения", Ложь);
	КоллекцияНастроек.Вставить("Периодичность"                    , 0);
	КоллекцияНастроек.Вставить("РазрезПродаж"                     , 0);
	КоллекцияНастроек.Вставить("РазмещениеДополнительныхПолей"    , 0);
	КоллекцияНастроек.Вставить("Группировка"                      , Неопределено);
	КоллекцияНастроек.Вставить("ДополнительныеПоля"               , Неопределено);
	КоллекцияНастроек.Вставить("ВыводитьЗаголовок"                , Ложь);
	КоллекцияНастроек.Вставить("ВыводитьПодвал"                   , Ложь);
	КоллекцияНастроек.Вставить("МакетОформления"                  , Неопределено);
	КоллекцияНастроек.Вставить("НастройкиКомпоновкиДанных"        , Неопределено);
	КоллекцияНастроек.Вставить("ВыводитьПримечанияОкругления"     , Ложь);
	
	Возврат КоллекцияНастроек;
	
КонецФункции

// Возвращает структуру параметров, наличие которых требуется для успешного формирования отчета.
//
// Возвращаемое значение:
//   Структура - структура параметров для формирования отчета.
//
Функция ПустыеПараметрыКомпоновкиОтчета() Экспорт
	
	// Общая структура настроек.
	ПараметрыОтчета = БухгалтерскиеОтчеты.ПустыеПараметрыКомпоновкиОтчета();
	
	ПараметрыОтчета.ИдентификаторОтчета = "АнализФинансовыхРезультатов";
	
	ОтчетОбъект = Отчеты.АнализФинансовыхРезультатов.Создать();
	ПараметрыОтчета.Вставить("Группировка", ОтчетОбъект.Группировка.ВыгрузитьКолонки());
	ПараметрыОтчета.Вставить("РазмещениеДополнительныхПолей",
		БухгалтерскиеОтчетыКлиентСервер.РазмещениеДополнительныхПолей().ВместеСВладельцем);
	ПараметрыОтчета.Вставить("ДополнительныеПоля", ОтчетОбъект.ДополнительныеПоля.ВыгрузитьКолонки());
	
	ПараметрыОтчета.Вставить("Периодичность",
		БухгалтерскиеОтчетыКлиентСервер.Периодичность().Период); // без детализации по периодам
	ПараметрыОтчета.Вставить("КлючТекущегоВарианта", ""); 
	ПараметрыОтчета.Вставить("РазрезПродаж", 1); // по контрагентам
	ПараметрыОтчета.Вставить("ВыводитьПримечанияОкругления", Ложь);

	Возврат ПараметрыОтчета;
	
КонецФункции

// Заполняет структуру настроек универсального формата из реквизитов формы.
//
// Параметры:
//   ПараметрыОтчета - Структура - см. ПустыеПараметрыКомпоновкиОтчета()
//   Форма - УправляемаяФорма - содержит основновной реквизит Отчет .
//
Процедура ЗаполнитьПараметрыИзФормы(ПараметрыОтчета, Форма) Экспорт
	
	БухгалтерскиеОтчеты.ЗаполнитьПараметрыИзФормы(ПараметрыОтчета, Форма);
	
	Отчет = Форма.Отчет;

	ПараметрыОтчета.Периодичность     = Отчет.Периодичность;
	ПараметрыОтчета.РазрезПродаж      = Отчет.РазрезПродаж;
	
КонецПроцедуры

// Возвращает параметры, необходимые для формирования отчета с расшифровкой по переданной организации и периоду.
//
// Параметры:
//   ИмяОтчета - Строка - имя отчета, для которого формируются параметры.
//   КлючВарианта - Строка - имя ключа варианта отчета
//   Организация - СправочникСсылка.Организации 
//   Дата - Дата - дата формирования отчета
//
Функция ПараметрыДляОтчета(ИмяОтчета, КлючВарианта, Организация, Дата) Экспорт
	
	ПользовательскиеНастройкиКомпоновкиДанных = Новый ПользовательскиеНастройкиКомпоновкиДанных;
	ПользовательскиеНастройкиКомпоновкиДанных.ДополнительныеСвойства.Вставить("НачалоПериода" , НачалоГода(Дата));
	ПользовательскиеНастройкиКомпоновкиДанных.ДополнительныеСвойства.Вставить("КонецПериода" , КонецМесяца(Дата));
	ПользовательскиеНастройкиКомпоновкиДанных.ДополнительныеСвойства.Вставить("КлючВарианта", КлючВарианта);
	ПользовательскиеНастройкиКомпоновкиДанных.ДополнительныеСвойства.Вставить("Организация", Организация);
	ПользовательскиеНастройкиКомпоновкиДанных.ДополнительныеСвойства.Вставить("РазрезПродаж", 1); // Контрагент

	НастройкиРасшифровки = Новый Структура;
	НастройкиРасшифровки.Вставить(ИмяОтчета, ПользовательскиеНастройкиКомпоновкиДанных);
	
	УсловияОтбора = Новый Структура();
	УсловияОтбора.Вставить("НастройкиРасшифровки", НастройкиРасшифровки);
	
	ОбщиеНастройки = Новый Структура();
	ОбщиеНастройки.Вставить("Объект", УсловияОтбора);
	ОбщиеНастройки.Вставить("НастройкиРасшифровки", НастройкиРасшифровки);
	
	АдресХранилища = ПоместитьВоВременноеХранилище(ОбщиеНастройки, Новый УникальныйИдентификатор);
	
	ЗаполнятьТиповыеНастройки = Новый Структура;
	ЗаполнятьТиповыеНастройки.Вставить("Отбор", Ложь);
	ЗаполнятьТиповыеНастройки.Вставить("Группировка", Истина);
	ЗаполнятьТиповыеНастройки.Вставить("ВыводимыеДанные", Истина);
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("ВидРасшифровки", 1);
	ПараметрыОтчета.Вставить("АдресНастроек", АдресХранилища);
	ПараметрыОтчета.Вставить("СформироватьПриОткрытии", Истина);
	ПараметрыОтчета.Вставить("ИДРасшифровки", ИмяОтчета);
	ПараметрыОтчета.Вставить("РежимРасшифровки", Истина);
	ПараметрыОтчета.Вставить("ЗаполняемыеНастройки", ЗаполнятьТиповыеНастройки);
	ПараметрыОтчета.Вставить("КлючВарианта", КлючВарианта);
	
	Возврат ПараметрыОтчета;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьГруппировкуПериод(КомпоновщикНастроек, ПараметрыОтчета, ГруппировкаПериод)
	
	Если ПараметрыОтчета.Периодичность = 0 Тогда
		ПолеПериода = "Год";
	Иначе
		ПолеПериода = "Месяц";
	КонецЕсли;

	ПолеГруппировки       = ГруппировкаПериод.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
	ПолеГруппировки.Поле  = Новый ПолеКомпоновкиДанных(ПолеПериода);
	ПолеГруппировки       = ГруппировкаПериод.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
	ПолеГруппировки.Поле  = Новый ПолеКомпоновкиДанных("ПредставлениеПериода");
	
	ГруппировкаПериод.Имя = ПолеПериода;
	ЭлементыВыбора        = ГруппировкаПериод.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	ЭлементыВыбора.Поле   = Новый ПолеКомпоновкиДанных(ПолеПериода);
	
	ЭлементыВыбора      = ГруппировкаПериод.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	ЭлементыВыбора.Поле = Новый ПолеКомпоновкиДанных("Сумма");

	ЭлементыВыбора           = ГруппировкаПериод.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	ЭлементыВыбора.Поле      = Новый ПолеКомпоновкиДанных("Отклонение");
	ЭлементыВыбора.Заголовок = "Изменение";
	
	ЭлементПорядкаПериода = ГруппировкаПериод.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
	ЭлементПорядкаПериода.Поле = Новый ПолеКомпоновкиДанных(ПолеПериода);
	
	Если ПараметрыОтчета.Периодичность = 0 Тогда
		ЭлементПорядкаПериода.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Убыв;
	Иначе
		ЭлементПорядкаПериода.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Возр;
	КонецЕсли;
	
	ЭлементПорядкаПериода.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных .Недоступный;
	
	ЭлементОфрмления = ГруппировкаПериод.УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементОфрмления.Поля, ПолеПериода);
	
	ЭлементОфрмления.Оформление.УстановитьЗначениеПараметра("ГоризонтальноеПоложение", ГоризонтальноеПоложение.Центр);
	ЭлементОфрмления.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных .Недоступный;
	
	ЭлементОфрмления = ГруппировкаПериод.УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементОфрмления.Поля, "Отклонение");
	
	ЭлементОфрмления.Оформление.УстановитьЗначениеПараметра("МаксимальнаяШирина", 0.1);
	ЭлементОфрмления.Оформление.УстановитьЗначениеПараметра("Текст", "Удалить");

	ЭлементОфрмления.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных .Недоступный;
	
	БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(
		ЭлементОфрмления.Отбор, 
		ПолеПериода, 
		КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачальныйПериод").Значение,
		ВидСравненияКомпоновкиДанных.Равно);
	
	ЭлементОфрмления = ГруппировкаПериод.УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементОфрмления.Поля, "Отклонение");
	
	ЭлементОфрмления.Оформление.УстановитьЗначениеПараметра("МинимальнаяШирина", 10);
	ЭлементОфрмления.Оформление.УстановитьЗначениеПараметра("МаксимальнаяШирина", 10);

	ЭлементОфрмления.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных .Недоступный;

	БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(
		ЭлементОфрмления.Отбор,
		ПолеПериода,
		КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачальныйПериод").Значение,
		ВидСравненияКомпоновкиДанных.Больше);
		
КонецПроцедуры

Функция ДобавитьГруппировку(Поле, Группировка, ЭтоПерваяГруппировка)
	
	Если ТипЗнч(Поле) = Тип("Строка") Тогда
		ПараметрыЗаполнения = Новый Структура;
		ПараметрыЗаполнения.Вставить("Поле", Поле);
		ПараметрыЗаполнения.Вставить("ТипГруппировки", 0);
	Иначе
		ПараметрыЗаполнения = Поле;
	КонецЕсли;

	Если ТипЗнч(Группировка) = Тип("КоллекцияЭлементовСтруктурыТаблицыКомпоновкиДанных") Тогда
		НоваяГруппировка = Группировка.Добавить();
	Иначе
		НоваяГруппировка = Группировка.Структура.Добавить();
	КонецЕсли;
	
	Если ЭтоПерваяГруппировка Тогда
		НоваяГруппировка.Имя = "ПерваяГруппировка";
	КонецЕсли;
	
	ВыводитьОтбор = НоваяГруппировка.ПараметрыВывода.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВыводитьОтбор"));
	ВыводитьОтбор.Использование = Истина;
	ВыводитьОтбор.Значение = ТипВыводаТекстаКомпоновкиДанных.НеВыводить;
	
	БухгалтерскиеОтчетыВызовСервера.ЗаполнитьГруппировку(ПараметрыЗаполнения, НоваяГруппировка);
	
	Возврат НоваяГруппировка;
	
КонецФункции

Процедура ДобавитьОформлениеИтога(Группировка, ВидСтроки);
	
	ЭлементОфрмления = Группировка.УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементОфрмления.Поля, "Показатель");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементОфрмления.Поля, "Сумма");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементОфрмления.Поля, "Отклонение");
	
	ЭлементОтбора = ЭлементОфрмления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ВидСтроки");
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = ВидСтроки;
	
	ЭлементОфрмления.Оформление.УстановитьЗначениеПараметра("Шрифт", ШрифтыСтиля.ВажнаяНадписьШрифт);
	ЭлементОфрмления.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных .Недоступный;
	
КонецПроцедуры

Процедура ДобавитьПорядок(Группировка, Поле, Направление = "Возр")
	
	ЭлементПорядка = Группировка.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
	ЭлементПорядка.Поле              = Поле;
	ЭлементПорядка.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных[Направление];
	ЭлементПорядка.РежимОтображения  = РежимОтображенияЭлементаНастройкиКомпоновкиДанных .Недоступный;
	
КонецПроцедуры

Функция ПодготовитьДанные(ПараметрыОтчета, ПрошлыйПериод)
	
	СтруктураОтчета = СтруктураОтчета();
	ТаблицаВыручкаСебестоимость = ТаблицаВыручкаСебестоимость(ПараметрыОтчета, СтруктураОтчета, ПрошлыйПериод);
	ТаблицаРасходов = ТаблицаРасходов(ПараметрыОтчета, СтруктураОтчета, ПрошлыйПериод);
	ТаблицаПрочихДоходовИРасходов = ТаблицаПрочихДоходовИРасходов(ПараметрыОтчета, СтруктураОтчета, ПрошлыйПериод);
	ТаблицаНалогНаПрибыль = ТаблицаНалогНаПрибыль(ПараметрыОтчета, СтруктураОтчета, ПрошлыйПериод);
	
	РасчетныеПоказатели = РасчетныеПоказатели(ТаблицаВыручкаСебестоимость, ТаблицаРасходов, ТаблицаПрочихДоходовИРасходов,
		ТаблицаНалогНаПрибыль, СтруктураОтчета);
	
	ПрочиеПоказатели = ТаблицаРезультат();
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ОсновныеСредства"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Номенклатура"));
	МассивТипов.Добавить(Тип("СправочникСсылка.ОбъектыСтроительства"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Контрагенты"));
	МассивТипов.Добавить(Тип("СправочникСсылка.ЦенныеБумаги"));
	МассивТипов.Добавить(Тип("СправочникСсылка.НематериальныеАктивы"));
	
	ПрочиеПоказатели.Колонки.Добавить("РеализуемыйАктив", Новый ОписаниеТипов(МассивТипов));
	ПрочиеПоказатели.Колонки.Добавить("Выручка", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ПрочиеПоказатели.Колонки.Добавить("СебестоимостьПродаж", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ПрочиеПоказатели.Колонки.Добавить("ПрибыльУбытокОтПродаж", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));

	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаРасходов, ПрочиеПоказатели);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаПрочихДоходовИРасходов, ПрочиеПоказатели);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаНалогНаПрибыль, ПрочиеПоказатели);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(РасчетныеПоказатели, ПрочиеПоказатели);
	
	Данные = Новый Структура;
	Данные.Вставить("ВыручкаСебестоимость", ТаблицаВыручкаСебестоимость);
	Данные.Вставить("ПрочиеПоказатели", ПрочиеПоказатели);
	
	Возврат Данные;
	
КонецФункции

Функция ТаблицаВыручкаСебестоимость(ПараметрыОтчета, СтруктураОтчета, ПрошлыйПериод = Ложь)
	
	ТаблицаРезультат = ТаблицаРезультат();
	
	ТаблицаРезультат.Колонки.Добавить("Договор", Новый ОписаниеТипов("СправочникСсылка.ДоговорыКонтрагентов"));
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.Контрагенты"));
	МассивТипов.Добавить(Тип("Строка"));
	
	ТаблицаРезультат.Колонки.Добавить("Контрагент", Новый ОписаниеТипов(МассивТипов));
	ТаблицаРезультат.Колонки.Добавить("КонтрагентПредставление", ОбщегоНазначения.ОписаниеТипаСтрока(250));
	ТаблицаРезультат.Колонки.Добавить("НоменклатураПредставление", ОбщегоНазначения.ОписаниеТипаСтрока(250));
	ТаблицаРезультат.Колонки.Добавить("ДоговорПредставление", ОбщегоНазначения.ОписаниеТипаСтрока(250));
	ТаблицаРезультат.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаРезультат.Колонки.Добавить("НоменклатурнаяГруппа", Новый ОписаниеТипов("СправочникСсылка.НоменклатурныеГруппы"));
	ТаблицаРезультат.Колонки.Добавить("Розница", ОбщегоНазначения.ОписаниеТипаЧисло(1, 0));
	ТаблицаРезультат.Колонки.Добавить("ВаловаяПрибыль", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	
	ВедетсяСуммовойУчетПоСкладам = Ложь;
	ВыручкаПоКонтрагентам = ПараметрыОтчета.РазрезПродаж = 1;
	ВыручкаПоНоменклатуре = ПараметрыОтчета.РазрезПродаж = 2;
	ВыручкаПоНоменклатурнымГруппам = ПараметрыОтчета.РазрезПродаж = 3;
	
	НоменклатурнаяГруппаНоменклатура = Новый Массив;
	НоменклатурнаяГруппаНоменклатура.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	НоменклатурнаяГруппаНоменклатура.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	
	НоменклатурнаяГруппаСтавкаНДСНоменклатура = Новый Массив;
	НоменклатурнаяГруппаСтавкаНДСНоменклатура.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	НоменклатурнаяГруппаСтавкаНДСНоменклатура.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтавкиНДС);
	НоменклатурнаяГруппаСтавкаНДСНоменклатура.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	
	СубконтоНоменклатураПартии = Новый Массив;
	СубконтоНоменклатураПартии.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	СубконтоНоменклатураПартии.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии);
	
	СубконтоНоменклатураСклад = Новый Массив;
	СубконтоНоменклатураСклад.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	СубконтоНоменклатураСклад.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	
	СубконтоНоменклатураСкладПартии = Новый Массив;
	СубконтоНоменклатураСкладПартии.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	СубконтоНоменклатураСкладПартии.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	СубконтоНоменклатураСкладПартии.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии);
	
	// Счета расчетов с розничными покупателями.
	СчетаКассы = Новый Массив;
	СчетаКассы.Добавить(ПланыСчетов.Хозрасчетный.Касса);                          // 50
	СчетаКассы.Добавить(ПланыСчетов.Хозрасчетный.РасчетныеСчета);                 // 51

	СчетаКассы.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСРозничнымиПокупателями); // 62.Р
	СчетаКассы.Добавить(ПланыСчетов.Хозрасчетный.ПродажиПоПлатежнымКартам);       //57.03
	СчетаКассы = БухгалтерскийУчет.СформироватьМассивСубсчетов(СчетаКассы);
	
	// Счета выручки.
	СчетаВыручкиЕНВД = БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ВыручкаЕНВД);
	СчетаВыручки     = Новый Массив(БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.Выручка));
	СчетаВыручки     = ОбщегоНазначенияКлиентСервер.РазностьМассивов(СчетаВыручки, СчетаВыручкиЕНВД);
	
	// Счета расчетов с покупателями, в том числе и розничными.
	СчетаРасчетовСПокупателями = БухгалтерскиеОтчеты.СчетаРасчетовСПокупателямиССубсчетами();
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СчетаРасчетовСПокупателями, СчетаКассы);
	
	СчетаУчетаТоваров = СчетаУчетаТоваров();
	СчетУчетаНоменклатурыСПартиями = СчетаУчетаТоваров.СчетаСПартионнымУчетом;
	СчетУчетаНоменклатурыБезПартии = СчетаУчетаТоваров.СчетаБезПартионногоУчета;
	СчетУчетаНоменклатурыСПартиямиБезСклада = СчетаУчетаТоваров.СчетаСПартионнымУчетомБезСклада;
	СчетУчетаНоменклатурыБезСкладаБезПартии = СчетаУчетаТоваров.СчетаБезПартионногоУчетаБезСклада;
	
	// Счета учета торговой наценки.
	СчетаУчетаТорговойНаценки = СчетаУчетаТорговойНаценки();
	СчетТорговойНаценкиСПартиями = СчетаУчетаТорговойНаценки.СчетаСПартионнымУчетом;
	СчетТорговойНаценкиБезПартии = СчетаУчетаТорговойНаценки.СчетаБезПартионногоУчета;
	СчетТорговойНаценкиБезСкладаСПартиями = СчетаУчетаТорговойНаценки.СчетаСПартионнымУчетомБезСклада;
	СчетТорговойНаценкиБезСкладаБезПартии = СчетаУчетаТорговойНаценки.СчетаБезПартионногоУчетаБезСклада;
	
	СчетРасчетовПоНалогамИСборам = БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыПоНалогам);
	
	СчетАкцизов = БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.Продажи_Акцизы);
	
	СчетОбщехозяйственныхРасходов = БухгалтерскийУчетПовтИсп.СчетаВИерархии(
		ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы);
		
	СчетаУчетаПроизводства = БухгалтерскийУчетПовтИсп.СчетаВИерархии(
		ПланыСчетов.Хозрасчетный.ОсновноеПроизводство_);
		
	СубконтоНоменклатурныеГруппыСтатьиЗатрат = Новый Массив;
	СубконтоНоменклатурныеГруппыСтатьиЗатрат.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	СубконтоНоменклатурныеГруппыСтатьиЗатрат.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	
	СубконтоНоменклатурныеГруппыСтатьиЗатратПродукция = Новый Массив;
	СубконтоНоменклатурныеГруппыСтатьиЗатратПродукция.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	СубконтоНоменклатурныеГруппыСтатьиЗатратПродукция.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	СубконтоНоменклатурныеГруппыСтатьиЗатратПродукция.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Продукция);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(Акцизы.Сумма) КАК Сумма,
	|	Акцизы.Регистратор КАК Регистратор,
	|	Акцизы.Организация КАК Организация,
	|	Акцизы.Подразделение КАК Подразделение,
	|	Акцизы.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	Акцизы.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ Акцизы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ХозрасчетныйОбороты.Субконто1 КАК НоменклатурнаяГруппа,
	|		ХозрасчетныйОбороты.Субконто2 КАК Номенклатура,
	|		ХозрасчетныйОбороты.СуммаОборотДт КАК Сумма,
	|		ХозрасчетныйОбороты.Регистратор КАК Регистратор,
	|		ХозрасчетныйОбороты.Организация КАК Организация,
	|		ЕСТЬNULL(ХозрасчетныйОбороты.Подразделение, &ПустоеПодразделение) КАК Подразделение,
	|		ХозрасчетныйОбороты.ПериодМесяц КАК Период
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Обороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				Авто,
	|				Счет В (&СчетАкцизов),
	|				&НоменклатурнаяГруппаНоменклатура,
	|				Организация = &Организация
	|					ИЛИ &ПоВсемОрганизациям,
	|				КорСчет В ИЕРАРХИИ (&СчетРасчетовПоНалогамИСборам),
	|				) КАК ХозрасчетныйОбороты) КАК Акцизы
	|
	|СГРУППИРОВАТЬ ПО
	|	Акцизы.Регистратор,
	|	Акцизы.Организация,
	|	Акцизы.Подразделение,
	|	Акцизы.НоменклатурнаяГруппа,
	|	Акцизы.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Акцизы.Организация,
	|	Акцизы.Подразделение,
	|	Акцизы.Номенклатура,
	|	Акцизы.НоменклатурнаяГруппа,
	|	Акцизы.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Продажи.Контрагент КАК Контрагент,
	|	Продажи.Договор КАК Договор,
	|	Продажи.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	Продажи.СтавкаНДС КАК СтавкаНДС,
	|	Продажи.Номенклатура КАК Номенклатура,
	|	СУММА(Продажи.Сумма - ЕСТЬNULL(Акцизы.Сумма, 0)) КАК Сумма,
	|	Продажи.Регистратор КАК Регистратор,
	|	Продажи.Организация КАК Организация,
	|	Продажи.Подразделение КАК Подразделение,
	|	Продажи.Период КАК Период,
	|	Продажи.Розница КАК Розница,
	|	Продажи.КонтрагентПредставление КАК КонтрагентПредставление,
	|	Продажи.ДоговорПредставление КАК ДоговорПредставление
	|ПОМЕСТИТЬ Продажи
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСубконто1 ССЫЛКА Справочник.Контрагенты
	|				ТОГДА ХозрасчетныйОбороты.КорСубконто1
	|			ИНАЧЕ ""Розничные покупатели""
	|		КОНЕЦ КАК Контрагент,
	|		ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСубконто2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА ХозрасчетныйОбороты.КорСубконто2
	|			ИНАЧЕ ""Розничная продажа""
	|		КОНЕЦ КАК Договор,
	|		ХозрасчетныйОбороты.Субконто1 КАК НоменклатурнаяГруппа,
	|		ХозрасчетныйОбороты.Субконто2 КАК СтавкаНДС,
	|		ХозрасчетныйОбороты.Субконто3 КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСубконто2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					И ВЫРАЗИТЬ(ХозрасчетныйОбороты.КорСубконто2 КАК Справочник.ДоговорыКонтрагентов).УчетАгентскогоНДСПокупателем
	|				ТОГДА ХозрасчетныйОбороты.СуммаОборотКт
	|			КОГДА ХозрасчетныйОбороты.Субконто2 = &СтавкаНДС_18
	|					ИЛИ ХозрасчетныйОбороты.Субконто2 = &СтавкаНДС_118
	|				ТОГДА ХозрасчетныйОбороты.СуммаОборотКт * 100 / 118
	|			КОГДА ХозрасчетныйОбороты.Субконто2 = &СтавкаНДС_10
	|					ИЛИ ХозрасчетныйОбороты.Субконто2 = &СтавкаНДС_110
	|				ТОГДА ХозрасчетныйОбороты.СуммаОборотКт * 100 / 110
	|			КОГДА ХозрасчетныйОбороты.Субконто2 = &СтавкаНДС_20
	|					ИЛИ ХозрасчетныйОбороты.Субконто2 = &СтавкаНДС_120
	|				ТОГДА ХозрасчетныйОбороты.СуммаОборотКт * 100 / 120
	|			КОГДА ХозрасчетныйОбороты.Субконто2 = &СтавкаНДС_0
	|				ТОГДА ХозрасчетныйОбороты.СуммаОборотКт
	|			КОГДА ХозрасчетныйОбороты.Субконто2 = &БезНДС
	|				ТОГДА ХозрасчетныйОбороты.СуммаОборотКт
	|		КОНЕЦ КАК Сумма,
	|		ХозрасчетныйОбороты.Регистратор КАК Регистратор,
	|		ХозрасчетныйОбороты.Организация КАК Организация,
	|		ЕСТЬNULL(ХозрасчетныйОбороты.Подразделение, &ПустоеПодразделение) КАК Подразделение,
	|		ХозрасчетныйОбороты.ПериодМесяц КАК Период,
	|		ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСчет В (&СчетаКассы)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК Розница,
	|		ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСубконто1 ССЫЛКА Справочник.Контрагенты
	|				ТОГДА ПРЕДСТАВЛЕНИЕССЫЛКИ(ХозрасчетныйОбороты.КорСубконто1)
	|			ИНАЧЕ ""Розничные покупатели""
	|		КОНЕЦ КАК КонтрагентПредставление,
	|		ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСубконто2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА ПРЕДСТАВЛЕНИЕССЫЛКИ(ХозрасчетныйОбороты.КорСубконто2)
	|			ИНАЧЕ ""Розничная продажа""
	|		КОНЕЦ КАК ДоговорПредставление,
	|		ХозрасчетныйОбороты.КоличествоОборотКт КАК КоличествоОборотКт
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Обороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				Авто,
	|				Счет В (&СчетаВыручки),
	|				&НоменклатурнаяГруппаСтавкаНДСНоменклатура,
	|				Организация = &Организация
	|					ИЛИ &ПоВсемОрганизациям,
	|				КорСчет В (&СчетаРасчетовСПокупателями),
	|				) КАК ХозрасчетныйОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСубконто1 ССЫЛКА Справочник.Контрагенты
	|				ТОГДА ХозрасчетныйОбороты.КорСубконто1
	|			ИНАЧЕ ""Розничные покупатели""
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСубконто2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА ХозрасчетныйОбороты.КорСубконто2
	|			ИНАЧЕ ""Розничная продажа""
	|		КОНЕЦ,
	|		ХозрасчетныйОбороты.Субконто1,
	|		0,
	|		ХозрасчетныйОбороты.Субконто2,
	|		ХозрасчетныйОбороты.СуммаОборотКт,
	|		ХозрасчетныйОбороты.Регистратор,
	|		ХозрасчетныйОбороты.Организация,
	|		ЕСТЬNULL(ХозрасчетныйОбороты.Подразделение, &ПустоеПодразделение),
	|		ХозрасчетныйОбороты.ПериодМесяц,
	|		ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСчет В (&СчетаКассы)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСубконто1 ССЫЛКА Справочник.Контрагенты
	|				ТОГДА ПРЕДСТАВЛЕНИЕССЫЛКИ(ХозрасчетныйОбороты.КорСубконто1)
	|			ИНАЧЕ ""Розничные покупатели""
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСубконто2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА ПРЕДСТАВЛЕНИЕССЫЛКИ(ХозрасчетныйОбороты.КорСубконто2)
	|			ИНАЧЕ ""Розничная продажа""
	|		КОНЕЦ,
	|		ХозрасчетныйОбороты.КоличествоОборотКт
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Обороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				Авто,
	|				Счет В (&СчетаВыручкиЕНВД),
	|				&НоменклатурнаяГруппаНоменклатура,
	|				Организация = &Организация
	|					ИЛИ &ПоВсемОрганизациям,
	|				КорСчет В (&СчетаРасчетовСПокупателями),
	|				) КАК ХозрасчетныйОбороты) КАК Продажи
	|		ЛЕВОЕ СОЕДИНЕНИЕ Акцизы КАК Акцизы
	|		ПО Продажи.Организация = Акцизы.Организация
	|			И Продажи.Подразделение = Акцизы.Подразделение
	|			И Продажи.Номенклатура = Акцизы.Номенклатура
	|			И Продажи.НоменклатурнаяГруппа = Акцизы.НоменклатурнаяГруппа
	|			И Продажи.Регистратор = Акцизы.Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	Продажи.Контрагент,
	|	Продажи.Договор,
	|	Продажи.НоменклатурнаяГруппа,
	|	Продажи.СтавкаНДС,
	|	Продажи.Номенклатура,
	|	Продажи.Регистратор,
	|	Продажи.Организация,
	|	Продажи.Подразделение,
	|	Продажи.Период,
	|	Продажи.Розница,
	|	Продажи.КонтрагентПредставление,
	|	Продажи.ДоговорПредставление
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Продажи.Организация,
	|	Продажи.Подразделение,
	|	Продажи.Номенклатура,
	|	Продажи.НоменклатурнаяГруппа,
	|	Продажи.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Период КАК Период,
	|	ХозрасчетныйОбороты.Регистратор КАК Регистратор,
	|	ХозрасчетныйОбороты.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ХозрасчетныйОбороты.Номенклатура КАК Номенклатура,
	|	ХозрасчетныйОбороты.Организация КАК Организация,
	|	СУММА(ХозрасчетныйОбороты.Количество) КАК Количество,
	|	СУММА(ХозрасчетныйОбороты.Стоимость) КАК Стоимость,
	|	ХозрасчетныйОбороты.Подразделение КАК Подразделение,
	|	ХозрасчетныйОбороты.Склад КАК Склад,
	|	ХозрасчетныйОбороты.Партия КАК Партия,
	|	ХозрасчетныйОбороты.ЭтоВыпускПодукции КАК ЭтоВыпускПодукции
	|ПОМЕСТИТЬ СебестоимостьОборот
	|ИЗ
	|	(ВЫБРАТЬ
	|		ХозрасчетныйОборотыДтКт.ПериодМесяц КАК Период,
	|		ХозрасчетныйОборотыДтКт.Регистратор КАК Регистратор,
	|		ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК НоменклатурнаяГруппа,
	|		ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Номенклатура,
	|		ХозрасчетныйОборотыДтКт.Организация КАК Организация,
	|		ХозрасчетныйОборотыДтКт.КоличествоОборотКт КАК Количество,
	|		ХозрасчетныйОборотыДтКт.СуммаОборот КАК Стоимость,
	|		ЕСТЬNULL(ХозрасчетныйОборотыДтКт.ПодразделениеДт, &ПустоеПодразделение) КАК Подразделение,
	|		ВЫБОР
	|			КОГДА &ВедетсяСуммовойУчетПоСкладам
	|				ТОГДА ХозрасчетныйОборотыДтКт.СубконтоКт2
	|			ИНАЧЕ &ПустойСклад
	|		КОНЕЦ КАК Склад,
	|		НЕОПРЕДЕЛЕНО КАК Партия,
	|		ЛОЖЬ КАК ЭтоВыпускПодукции
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				Авто,
	|				СчетДт В (&СчетаСебестоимости),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы),
	|				СчетКт В (&СчетУчетаНоменклатурыБезПартии),
	|				&СубконтоНоменклатураСклад,
	|				Организация = &Организация
	|					ИЛИ &ПоВсемОрганизациям) КАК ХозрасчетныйОборотыДтКт
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ХозрасчетныйОборотыДтКт.ПериодМесяц,
	|		ХозрасчетныйОборотыДтКт.Регистратор,
	|		ХозрасчетныйОборотыДтКт.СубконтоДт1,
	|		ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|		ХозрасчетныйОборотыДтКт.Организация,
	|		ХозрасчетныйОборотыДтКт.КоличествоОборотКт,
	|		ХозрасчетныйОборотыДтКт.СуммаОборот,
	|		ЕСТЬNULL(ХозрасчетныйОборотыДтКт.ПодразделениеДт, &ПустоеПодразделение),
	|		ВЫБОР
	|			КОГДА &ВедетсяСуммовойУчетПоСкладам
	|				ТОГДА ХозрасчетныйОборотыДтКт.СубконтоКт2
	|			ИНАЧЕ &ПустойСклад
	|		КОНЕЦ,
	|		ХозрасчетныйОборотыДтКт.СубконтоКт3,
	|		ЛОЖЬ
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				Авто,
	|				СчетДт В (&СчетаСебестоимости),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы),
	|				СчетКт В (&СчетУчетаНоменклатурыСПартиями),
	|				&СубконтоНоменклатураСкладПартии,
	|				Организация = &Организация
	|					ИЛИ &ПоВсемОрганизациям) КАК ХозрасчетныйОборотыДтКт
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ХозрасчетныйОборотыДтКт.ПериодМесяц,
	|		ХозрасчетныйОборотыДтКт.Регистратор,
	|		ХозрасчетныйОборотыДтКт.СубконтоДт1,
	|		ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|		ХозрасчетныйОборотыДтКт.Организация,
	|		ХозрасчетныйОборотыДтКт.КоличествоОборотКт,
	|		ХозрасчетныйОборотыДтКт.СуммаОборот,
	|		ЕСТЬNULL(ХозрасчетныйОборотыДтКт.ПодразделениеДт, &ПустоеПодразделение),
	|		&ПустойСклад,
	|		НЕОПРЕДЕЛЕНО,
	|		ЛОЖЬ
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				Авто,
	|				СчетДт В (&СчетаСебестоимости),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы),
	|				СчетКт В (&СчетУчетаНоменклатурыБезСкладаБезПартии),
	|				&СубконтоНоменклатура,
	|				Организация = &Организация
	|					ИЛИ &ПоВсемОрганизациям) КАК ХозрасчетныйОборотыДтКт
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ХозрасчетныйОборотыДтКт.ПериодМесяц,
	|		ХозрасчетныйОборотыДтКт.Регистратор,
	|		ХозрасчетныйОборотыДтКт.СубконтоДт1,
	|		ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|		ХозрасчетныйОборотыДтКт.Организация,
	|		ХозрасчетныйОборотыДтКт.КоличествоОборотКт,
	|		ХозрасчетныйОборотыДтКт.СуммаОборот,
	|		ЕСТЬNULL(ХозрасчетныйОборотыДтКт.ПодразделениеДт, &ПустоеПодразделение),
	|		&ПустойСклад,
	|		ХозрасчетныйОборотыДтКт.СубконтоКт2,
	|		ЛОЖЬ
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				Авто,
	|				СчетДт В (&СчетаСебестоимости),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы),
	|				СчетКт В (&СчетУчетаНоменклатурыСПартиямиБезСклада),
	|				&СубконтоНоменклатураПартии,
	|				Организация = &Организация
	|					ИЛИ &ПоВсемОрганизациям) КАК ХозрасчетныйОборотыДтКт
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ХозрасчетныйОборотыДтКт.ПериодМесяц,
	|		ХозрасчетныйОборотыДтКт.Регистратор,
	|		ХозрасчетныйОборотыДтКт.СубконтоДт1,
	|		ХозрасчетныйОборотыДтКт.СубконтоКт3,
	|		ХозрасчетныйОборотыДтКт.Организация,
	|		ХозрасчетныйОборотыДтКт.КоличествоОборотКт,
	|		ХозрасчетныйОборотыДтКт.СуммаОборот,
	|		ЕСТЬNULL(ХозрасчетныйОборотыДтКт.ПодразделениеДт, &ПустоеПодразделение),
	|		ВЫБОР
	|			КОГДА &ВедетсяСуммовойУчетПоСкладам
	|				ТОГДА ХозрасчетныйОборотыДтКт.СубконтоКт2
	|			ИНАЧЕ &ПустойСклад
	|		КОНЕЦ,
	|		НЕОПРЕДЕЛЕНО,
	|		ИСТИНА
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				Авто,
	|				СчетДт В (&СчетаСебестоимости),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы),
	|				СчетКт В (&СчетаУчетаПроизводства),
	|				&СубконтоНоменклатурныеГруппыСтатьиЗатратПродукция,
	|				Организация = &Организация
	|					ИЛИ &ПоВсемОрганизациям) КАК ХозрасчетныйОборотыДтКт) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Регистратор,
	|	ХозрасчетныйОбороты.НоменклатурнаяГруппа,
	|	ХозрасчетныйОбороты.Номенклатура,
	|	ХозрасчетныйОбороты.Организация,
	|	ХозрасчетныйОбороты.Подразделение,
	|	ХозрасчетныйОбороты.Склад,
	|	ХозрасчетныйОбороты.Партия,
	|	ХозрасчетныйОбороты.Период,
	|	ХозрасчетныйОбороты.ЭтоВыпускПодукции
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Организация,
	|	ХозрасчетныйОбороты.Подразделение,
	|	Номенклатура,
	|	ХозрасчетныйОбороты.Склад,
	|	ХозрасчетныйОбороты.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Номенклатура КАК Номенклатура,
	|	ХозрасчетныйОбороты.Организация КАК Организация,
	|	СУММА(ХозрасчетныйОбороты.Наценка) КАК Наценка,
	|	ХозрасчетныйОбороты.Подразделение КАК Подразделение,
	|	ХозрасчетныйОбороты.Склад КАК Склад,
	|	ХозрасчетныйОбороты.Партия КАК Партия
	|ПОМЕСТИТЬ ТорговаяНаценка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Номенклатура,
	|		ХозрасчетныйОборотыДтКт.Организация КАК Организация,
	|		ХозрасчетныйОборотыДтКт.СуммаОборот КАК Наценка,
	|		ЕСТЬNULL(ХозрасчетныйОборотыДтКт.ПодразделениеДт, &ПустоеПодразделение) КАК Подразделение,
	|		ВЫБОР
	|			КОГДА &ВедетсяСуммовойУчетПоСкладам
	|				ТОГДА ХозрасчетныйОборотыДтКт.СубконтоКт2
	|			ИНАЧЕ &ПустойСклад
	|		КОНЕЦ КАК Склад,
	|		ХозрасчетныйОборотыДтКт.СубконтоКт3 КАК Партия
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				,
	|				СчетДт В (&СчетаСебестоимости),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы),
	|				СчетКт В (&СчетТорговойНаценкиСПартиями),
	|				&СубконтоНоменклатураСкладПартии,
	|				Организация = &Организация
	|					ИЛИ &ПоВсемОрганизациям) КАК ХозрасчетныйОборотыДтКт
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|		ХозрасчетныйОборотыДтКт.Организация,
	|		ХозрасчетныйОборотыДтКт.СуммаОборот,
	|		ЕСТЬNULL(ХозрасчетныйОборотыДтКт.ПодразделениеДт, &ПустоеПодразделение),
	|		ВЫБОР
	|			КОГДА &ВедетсяСуммовойУчетПоСкладам
	|				ТОГДА ХозрасчетныйОборотыДтКт.СубконтоКт2
	|			ИНАЧЕ &ПустойСклад
	|		КОНЕЦ,
	|		НЕОПРЕДЕЛЕНО
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				,
	|				СчетДт В (&СчетаСебестоимости),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы),
	|				СчетКт В (&СчетТорговойНаценкиБезПартии),
	|				&СубконтоНоменклатураСклад,
	|				Организация = &Организация
	|					ИЛИ &ПоВсемОрганизациям) КАК ХозрасчетныйОборотыДтКт
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|		ХозрасчетныйОборотыДтКт.Организация,
	|		ХозрасчетныйОборотыДтКт.СуммаОборот,
	|		ЕСТЬNULL(ХозрасчетныйОборотыДтКт.ПодразделениеДт, &ПустоеПодразделение),
	|		&ПустойСклад,
	|		ХозрасчетныйОборотыДтКт.СубконтоКт2
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				,
	|				СчетДт В (&СчетаСебестоимости),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы),
	|				СчетКт В (&СчетТорговойНаценкиБезСкладаСПартиями),
	|				&СубконтоНоменклатураПартии,
	|				Организация = &Организация
	|					ИЛИ &ПоВсемОрганизациям) КАК ХозрасчетныйОборотыДтКт
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|		ХозрасчетныйОборотыДтКт.Организация,
	|		ХозрасчетныйОборотыДтКт.СуммаОборот,
	|		ЕСТЬNULL(ХозрасчетныйОборотыДтКт.ПодразделениеДт, &ПустоеПодразделение),
	|		&ПустойСклад,
	|		НЕОПРЕДЕЛЕНО
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				,
	|				СчетДт В (&СчетаСебестоимости),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы),
	|				СчетКт В (&СчетТорговойНаценкиБезСкладаБезПартии),
	|				&СубконтоНоменклатура,
	|				Организация = &Организация
	|					ИЛИ &ПоВсемОрганизациям) КАК ХозрасчетныйОборотыДтКт) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Номенклатура,
	|	ХозрасчетныйОбороты.Организация,
	|	ХозрасчетныйОбороты.Подразделение,
	|	ХозрасчетныйОбороты.Склад,
	|	ХозрасчетныйОбороты.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Себестоимость.Номенклатура КАК Номенклатура,
	|	Себестоимость.Организация КАК Организация,
	|	Себестоимость.Подразделение КАК Подразделение,
	|	Себестоимость.Склад КАК Склад,
	|	Себестоимость.Партия КАК Партия,
	|	СУММА(Себестоимость.Стоимость) КАК Стоимость,
	|	СУММА(Себестоимость.Количество) КАК Количество
	|ПОМЕСТИТЬ СкорректированнаяСтоимость
	|ИЗ
	|	(ВЫБРАТЬ
	|		СебестоимостьОборот.Номенклатура КАК Номенклатура,
	|		СебестоимостьОборот.Организация КАК Организация,
	|		СебестоимостьОборот.Подразделение КАК Подразделение,
	|		СебестоимостьОборот.Склад КАК Склад,
	|		СебестоимостьОборот.Партия КАК Партия,
	|		СебестоимостьОборот.Стоимость КАК Стоимость,
	|		СебестоимостьОборот.Количество КАК Количество
	|	ИЗ
	|		СебестоимостьОборот КАК СебестоимостьОборот
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТорговаяНаценка.Номенклатура,
	|		ТорговаяНаценка.Организация,
	|		ТорговаяНаценка.Подразделение,
	|		ТорговаяНаценка.Склад,
	|		ТорговаяНаценка.Партия,
	|		ТорговаяНаценка.Наценка,
	|		0
	|	ИЗ
	|		ТорговаяНаценка КАК ТорговаяНаценка) КАК Себестоимость
	|
	|СГРУППИРОВАТЬ ПО
	|	Себестоимость.Номенклатура,
	|	Себестоимость.Организация,
	|	Себестоимость.Подразделение,
	|	Себестоимость.Склад,
	|	Себестоимость.Партия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Себестоимость.Организация,
	|	Себестоимость.Подразделение,
	|	Номенклатура,
	|	Себестоимость.Склад,
	|	Себестоимость.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СебестоимостьОборот.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	СкорректированнаяСтоимость.Номенклатура КАК Номенклатура,
	|	СкорректированнаяСтоимость.Организация КАК Организация,
	|	СкорректированнаяСтоимость.Подразделение КАК Подразделение,
	|	СкорректированнаяСтоимость.Склад КАК Склад,
	|	СУММА(ВЫБОР
	|			КОГДА СкорректированнаяСтоимость.Количество = 0
	|				ТОГДА 0
	|			ИНАЧЕ СкорректированнаяСтоимость.Стоимость * СебестоимостьОборот.Количество / СкорректированнаяСтоимость.Количество
	|		КОНЕЦ) КАК Стоимость,
	|	СебестоимостьОборот.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ СебестоимостьПоДокументам
	|ИЗ
	|	СкорректированнаяСтоимость КАК СкорректированнаяСтоимость
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СебестоимостьОборот КАК СебестоимостьОборот
	|		ПО СкорректированнаяСтоимость.Организация = СебестоимостьОборот.Организация
	|			И СкорректированнаяСтоимость.Подразделение = СебестоимостьОборот.Подразделение
	|			И СкорректированнаяСтоимость.Номенклатура = СебестоимостьОборот.Номенклатура
	|			И СкорректированнаяСтоимость.Склад = СебестоимостьОборот.Склад
	|			И СкорректированнаяСтоимость.Партия = СебестоимостьОборот.Партия
	|
	|СГРУППИРОВАТЬ ПО
	|	СебестоимостьОборот.НоменклатурнаяГруппа,
	|	СкорректированнаяСтоимость.Номенклатура,
	|	СкорректированнаяСтоимость.Организация,
	|	СкорректированнаяСтоимость.Подразделение,
	|	СкорректированнаяСтоимость.Склад,
	|	СебестоимостьОборот.Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СкорректированнаяСтоимость.Организация,
	|	СкорректированнаяСтоимость.Подразделение,
	|	Номенклатура,
	|	СебестоимостьОборот.НоменклатурнаяГруппа,
	|	СебестоимостьОборот.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Продажи.Организация КАК Организация,
	|	Продажи.Подразделение КАК Подразделение,
	|	Продажи.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	Продажи.Номенклатура КАК Номенклатура,
	|	Продажи.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ПродажиГруппировка
	|ИЗ
	|	Продажи КАК Продажи
	|
	|СГРУППИРОВАТЬ ПО
	|	Продажи.Организация,
	|	Продажи.Подразделение,
	|	Продажи.Номенклатура,
	|	Продажи.НоменклатурнаяГруппа,
	|	Продажи.Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Продажи.Организация,
	|	Продажи.Подразделение,
	|	Продажи.Номенклатура,
	|	Продажи.НоменклатурнаяГруппа,
	|	Продажи.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СебестоимостьПоДокументам.Номенклатура КАК Номенклатура,
	|	СебестоимостьПоДокументам.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	СебестоимостьПоДокументам.Организация КАК Организация,
	|	СебестоимостьПоДокументам.Подразделение КАК Подразделение,
	|	СебестоимостьПоДокументам.Склад КАК Склад,
	|	СебестоимостьПоДокументам.Стоимость КАК Стоимость,
	|	СебестоимостьПоДокументам.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ Себестоимость
	|ИЗ
	|	СебестоимостьПоДокументам КАК СебестоимостьПоДокументам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПродажиГруппировка КАК ПродажиГруппировка
	|		ПО СебестоимостьПоДокументам.Организация = ПродажиГруппировка.Организация
	|			И СебестоимостьПоДокументам.Подразделение = ПродажиГруппировка.Подразделение
	|			И СебестоимостьПоДокументам.Номенклатура = ПродажиГруппировка.Номенклатура
	|			И СебестоимостьПоДокументам.НоменклатурнаяГруппа = ПродажиГруппировка.НоменклатурнаяГруппа
	|			И СебестоимостьПоДокументам.Регистратор = ПродажиГруппировка.Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СебестоимостьПоДокументам.Организация,
	|	СебестоимостьПоДокументам.Подразделение,
	|	Номенклатура,
	|	СебестоимостьПоДокументам.НоменклатурнаяГруппа,
	|	СебестоимостьПоДокументам.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Продажи.Период КАК Период,
	|	Продажи.Организация КАК Организация,
	|	ЕСТЬNULL(Продажи.Подразделение, &ПустоеПодразделение) КАК Подразделение,
	|	ЕСТЬNULL(Себестоимость.Склад, &ПустойСклад) КАК Склад,
	|	ВЫБОР
	|		КОГДА &ВыручкаПоКонтрагентам
	|			ТОГДА Продажи.Контрагент
	|		КОГДА &ВыручкаПоНоменклатуре
	|			ТОГДА ВЫБОР
	|					КОГДА Продажи.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|						ТОГДА ""Работы и услуги""
	|					ИНАЧЕ Продажи.Номенклатура
	|				КОНЕЦ
	|		КОГДА &ВыручкаПоНоменклатурнымГруппам
	|			ТОГДА ВЫБОР
	|					КОГДА Продажи.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	|						ТОГДА ""<...>""
	|					ИНАЧЕ Продажи.НоменклатурнаяГруппа
	|				КОНЕЦ
	|	КОНЕЦ КАК Аналитика,
	|	ВЫБОР
	|		КОГДА &ВыручкаПоКонтрагентам
	|			ТОГДА Продажи.Договор
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ КАК Договор,
	|	Продажи.Розница КАК Розница,
	|	СУММА(ЕСТЬNULL(Продажи.Сумма, 0)) КАК Выручка,
	|	СУММА(ЕСТЬNULL(Себестоимость.Стоимость, 0)) КАК Себестоимость,
	|	СУММА(ЕСТЬNULL(Продажи.Сумма, 0) - ЕСТЬNULL(Себестоимость.Стоимость, 0)) КАК ВаловаяПрибыль,
	|	Продажи.КонтрагентПредставление КАК КонтрагентПредставление,
	|	Продажи.ДоговорПредставление КАК ДоговорПредставление,
	|	ВЫБОР
	|		КОГДА Продажи.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ""Работы и услуги""
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕССЫЛКИ(Продажи.Номенклатура)
	|	КОНЕЦ КАК НоменклатураПредставление,
	|	Продажи.Контрагент КАК Контрагент
	|ИЗ
	|	Продажи КАК Продажи
	|		ЛЕВОЕ СОЕДИНЕНИЕ Себестоимость КАК Себестоимость
	|		ПО Продажи.Организация = Себестоимость.Организация
	|			И Продажи.Подразделение = Себестоимость.Подразделение
	|			И Продажи.Номенклатура = Себестоимость.Номенклатура
	|			И Продажи.НоменклатурнаяГруппа = Себестоимость.НоменклатурнаяГруппа
	|			И Продажи.Регистратор = Себестоимость.Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	Продажи.КонтрагентПредставление,
	|	Продажи.ДоговорПредставление,
	|	Продажи.Период,
	|	ЕСТЬNULL(Себестоимость.Склад, &ПустойСклад),
	|	Продажи.Организация,
	|	ВЫБОР
	|		КОГДА &ВыручкаПоКонтрагентам
	|			ТОГДА Продажи.Договор
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ,
	|	Продажи.Розница,
	|	Продажи.Контрагент,
	|	ВЫБОР
	|		КОГДА &ВыручкаПоКонтрагентам
	|			ТОГДА Продажи.Контрагент
	|		КОГДА &ВыручкаПоНоменклатуре
	|			ТОГДА ВЫБОР
	|					КОГДА Продажи.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|						ТОГДА ""Работы и услуги""
	|					ИНАЧЕ Продажи.Номенклатура
	|				КОНЕЦ
	|		КОГДА &ВыручкаПоНоменклатурнымГруппам
	|			ТОГДА ВЫБОР
	|					КОГДА Продажи.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	|						ТОГДА ""<...>""
	|					ИНАЧЕ Продажи.НоменклатурнаяГруппа
	|				КОНЕЦ
	|	КОНЕЦ,
	|	ЕСТЬNULL(Продажи.Подразделение, &ПустоеПодразделение),
	|	ВЫБОР
	|		КОГДА Продажи.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ""Работы и услуги""
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕССЫЛКИ(Продажи.Номенклатура)
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.Период,
	|	ХозрасчетныйОборотыДтКт.Организация,
	|	ЕСТЬNULL(ХозрасчетныйОборотыДтКт.ПодразделениеДт, &ПустоеПодразделение),
	|	&ПустойСклад,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
	|	ЛОЖЬ,
	|	СУММА(0),
	|	СУММА(ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаОборот, 0)),
	|	СУММА(ЕСТЬNULL(-ХозрасчетныйОборотыДтКт.СуммаОборот, 0)),
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ХозрасчетныйОборотыДтКт.СубконтоКт1),
	|	"""",
	|	"""",
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Регистратор,
	|			СчетДт В ИЕРАРХИИ (&СчетаСебестоимости),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы),
	|			СчетКт В (&СчетОбщехозяйственныхРасходов),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат),
	|			Организация = &Организация
	|				ИЛИ &ПоВсемОрганизациям) КАК ХозрасчетныйОборотыДтКт
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОборотыДтКт.Период,
	|	ХозрасчетныйОборотыДтКт.Организация,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|	ЕСТЬNULL(ХозрасчетныйОборотыДтКт.ПодразделениеДт, &ПустоеПодразделение)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СебестоимостьОборот.Период,
	|	СебестоимостьОборот.Организация,
	|	ЕСТЬNULL(СебестоимостьОборот.Подразделение, &ПустоеПодразделение),
	|	ЕСТЬNULL(СебестоимостьОборот.Склад, &ПустойСклад),
	|	ВЫБОР
	|		КОГДА &ВыручкаПоНоменклатурнымГруппам
	|			ТОГДА СебестоимостьОборот.НоменклатурнаяГруппа
	|		КОГДА СебестоимостьОборот.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяССылка)
	|			ТОГДА &КорректировкаВыпускаПродукции
	|		ИНАЧЕ СебестоимостьОборот.Номенклатура
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
	|	ЛОЖЬ,
	|	СУММА(0),
	|	СУММА(ЕСТЬNULL(СебестоимостьОборот.Стоимость, 0)),
	|	СУММА(ЕСТЬNULL(-СебестоимостьОборот.Стоимость, 0)),
	|	&КорректировкаВыпускаПродукции,
	|	"""",
	|	ВЫБОР
	|		КОГДА СебестоимостьОборот.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяССылка)
	|			ТОГДА &КорректировкаВыпускаПродукции
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(СебестоимостьОборот.Номенклатура)
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|ИЗ
	|	СебестоимостьОборот КАК СебестоимостьОборот
	|ГДЕ
	|	СебестоимостьОборот.ЭтоВыпускПодукции
	|
	|СГРУППИРОВАТЬ ПО
	|	СебестоимостьОборот.Период,
	|	ЕСТЬNULL(СебестоимостьОборот.Склад, &ПустойСклад),
	|	СебестоимостьОборот.Организация,
	|	ЕСТЬNULL(СебестоимостьОборот.Подразделение, &ПустоеПодразделение),
	|	ВЫБОР
	|		КОГДА &ВыручкаПоНоменклатурнымГруппам
	|			ТОГДА СебестоимостьОборот.НоменклатурнаяГруппа
	|		КОГДА СебестоимостьОборот.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяССылка)
	|			ТОГДА &КорректировкаВыпускаПродукции
	|		ИНАЧЕ СебестоимостьОборот.Номенклатура
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СебестоимостьОборот.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяССылка)
	|			ТОГДА &КорректировкаВыпускаПродукции
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(СебестоимостьОборот.Номенклатура)
	|	КОНЕЦ";

	Запрос.УстановитьПараметр("БезНДС", Перечисления.СтавкиНДС.БезНДС);
	Запрос.УстановитьПараметр("ВедетсяСуммовойУчетПоСкладам", ВедетсяСуммовойУчетПоСкладам);
	Запрос.УстановитьПараметр("ВыручкаПоКонтрагентам", ВыручкаПоКонтрагентам);
	Запрос.УстановитьПараметр("ВыручкаПоНоменклатуре", ВыручкаПоНоменклатуре);
	Запрос.УстановитьПараметр("ВыручкаПоНоменклатурнымГруппам", ВыручкаПоНоменклатурнымГруппам);
	Запрос.УстановитьПараметр("НоменклатурнаяГруппаНоменклатура", НоменклатурнаяГруппаНоменклатура);
	Запрос.УстановитьПараметр("НоменклатурнаяГруппаСтавкаНДСНоменклатура", НоменклатурнаяГруппаСтавкаНДСНоменклатура);
	Запрос.УстановитьПараметр("ПустоеПодразделение", Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойСклад", Справочники.Склады.ПустаяСсылка());
	Запрос.УстановитьПараметр("СтавкаНДС_0", Перечисления.СтавкиНДС.НДС0);
	Запрос.УстановитьПараметр("СтавкаНДС_10", Перечисления.СтавкиНДС.НДС10);
	Запрос.УстановитьПараметр("СтавкаНДС_110", Перечисления.СтавкиНДС.НДС10_110);
	Запрос.УстановитьПараметр("СтавкаНДС_118", Перечисления.СтавкиНДС.НДС18_118);
	Запрос.УстановитьПараметр("СтавкаНДС_120", Перечисления.СтавкиНДС.НДС20_120);
	Запрос.УстановитьПараметр("СтавкаНДС_18", Перечисления.СтавкиНДС.НДС18);
	Запрос.УстановитьПараметр("СтавкаНДС_20", Перечисления.СтавкиНДС.НДС20);
	Запрос.УстановитьПараметр("СубконтоНоменклатура", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Запрос.УстановитьПараметр("СубконтоНоменклатураПартии", СубконтоНоменклатураПартии);
	Запрос.УстановитьПараметр("СубконтоНоменклатураСклад", СубконтоНоменклатураСклад);
	Запрос.УстановитьПараметр("СубконтоНоменклатураСкладПартии", СубконтоНоменклатураСкладПартии);
	Запрос.УстановитьПараметр("СчетаВыручки", СчетаВыручки);
	Запрос.УстановитьПараметр("СчетаВыручкиЕНВД", СчетаВыручкиЕНВД);
	Запрос.УстановитьПараметр("СчетаКассы", СчетаКассы);
	Запрос.УстановитьПараметр("СчетаРасчетовСПокупателями", СчетаРасчетовСПокупателями);
	Запрос.УстановитьПараметр("СчетаСебестоимости", БухгалтерскийУчетПовтИсп.СчетаВИерархии(
		ПланыСчетов.Хозрасчетный.СебестоимостьПродаж));
	Запрос.УстановитьПараметр("СчетТорговойНаценкиБезПартии", СчетТорговойНаценкиБезПартии);
	Запрос.УстановитьПараметр("СчетТорговойНаценкиБезСкладаБезПартии", СчетТорговойНаценкиБезСкладаБезПартии);
	Запрос.УстановитьПараметр("СчетТорговойНаценкиБезСкладаСПартиями", СчетТорговойНаценкиБезСкладаСПартиями);
	Запрос.УстановитьПараметр("СчетТорговойНаценкиСПартиями", СчетТорговойНаценкиСПартиями);
	Запрос.УстановитьПараметр("СчетУчетаНоменклатурыБезПартии", СчетУчетаНоменклатурыБезПартии);
	Запрос.УстановитьПараметр("СчетУчетаНоменклатурыБезСкладаБезПартии", СчетУчетаНоменклатурыБезСкладаБезПартии);
	Запрос.УстановитьПараметр("СчетУчетаНоменклатурыСПартиями", СчетУчетаНоменклатурыСПартиями);
	Запрос.УстановитьПараметр("СчетУчетаНоменклатурыСПартиямиБезСклада", СчетУчетаНоменклатурыСПартиямиБезСклада);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", Не ЗначениеЗаполнено(ПараметрыОтчета.Организация));
	Запрос.УстановитьПараметр("СчетРасчетовПоНалогамИСборам", СчетРасчетовПоНалогамИСборам);
	Запрос.УстановитьПараметр("СчетАкцизов", СчетАкцизов);
	Запрос.УстановитьПараметр("СчетОбщехозяйственныхРасходов", СчетОбщехозяйственныхРасходов);
	Запрос.УстановитьПараметр("ПустаяСтатьяЗатрат", Справочники.СтатьиЗатрат.ПустаяСсылка());
	Запрос.УстановитьПараметр("СчетаУчетаПроизводства", СчетаУчетаПроизводства);
	Запрос.УстановитьПараметр("СубконтоНоменклатурныеГруппыСтатьиЗатрат", СубконтоНоменклатурныеГруппыСтатьиЗатрат);
	Запрос.УстановитьПараметр("СубконтоНоменклатурныеГруппыСтатьиЗатратПродукция",
		СубконтоНоменклатурныеГруппыСтатьиЗатратПродукция);
	Запрос.УстановитьПараметр("КорректировкаВыпускаПродукции", НСтр("ru='Корректировка выпуска продукции (услуг)'"));
	
	НачалоПериода = ПараметрыОтчета.НачалоПериода;
	КонецПериода = КонецДня(ПараметрыОтчета.КонецПериода);
	
	Если ПрошлыйПериод Тогда
		НачалоПериода = ДобавитьМесяц(ПараметрыОтчета.НачалоПериода, -12);
		КонецПериода = ДобавитьМесяц(КонецДня(ПараметрыОтчета.КонецПериода), -12);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	ПредставлениеПериода = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(НачалоПериода, КонецПериода, Истина);
	ПредставлениеПериода = СтрШаблон(НСтр("ru='%1'"), СтрЗаменить(ПредставлениеПериода, " г.", ""));
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл
		
		Если ПараметрыОтчета.Периодичность > 0 Тогда
			ПредставлениеПериода = СтрШаблон(НСтр("ru='%1'"), Формат(Выборка.Период, "ДФ='ММММ гггг'"));
		КонецЕсли;
		
		// Выручка
		Если Выборка.Выручка <> 0 Тогда
			СтруктураОтчетаВыручка = СтруктураОтчета.Выручка;
			СтрокаВыручка = ТаблицаРезультат.Добавить();
			ЗаполнитьСтроку(СтрокаВыручка, СтруктураОтчетаВыручка, ПредставлениеПериода);
			СтрокаВыручка.Сумма = Выборка.Выручка;
			ЗаполнитьЗначенияСвойств(СтрокаВыручка, Выборка);
		КонецЕсли;
	
		// Себестоимость
		СтруктураОтчетаСебестоимость = СтруктураОтчета.Себестоимость;
		СтрокаСебестоимость = ТаблицаРезультат.Добавить();
		ЗаполнитьСтроку(СтрокаСебестоимость, СтруктураОтчетаСебестоимость, ПредставлениеПериода);
		СтрокаСебестоимость.Сумма = -Выборка.Себестоимость;
		ЗаполнитьЗначенияСвойств(СтрокаСебестоимость, Выборка);
		
		// Валовая прибыль
		СтруктураОтчетаВаловаяПрибыль = СтруктураОтчета.ВаловаяПрибыль;
		СтрокаВаловаяПрибыль = ТаблицаРезультат.Добавить();
		ЗаполнитьСтроку(СтрокаВаловаяПрибыль, СтруктураОтчетаВаловаяПрибыль, ПредставлениеПериода);
		СтрокаВаловаяПрибыль.Сумма = Выборка.ВаловаяПрибыль;
		СтрокаВаловаяПрибыль.ВаловаяПрибыль = Выборка.ВаловаяПрибыль;
		ЗаполнитьЗначенияСвойств(СтрокаВаловаяПрибыль, Выборка);
		
	КонецЦикла;
	
	Возврат ТаблицаРезультат;
	
КонецФункции

Функция ТаблицаРасходов(ПараметрыОтчета, СтруктураОтчета, ПрошлыйПериод = Ложь)
	
	ТаблицаРезультат = ТаблицаРезультат();

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	&НаименованиеКоммерческиеРасходы КАК Показатель,
		|	ХозрасчетныйОбороты.ПериодМесяц КАК Период,
		|	ХозрасчетныйОбороты.Счет КАК Счет,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОбороты.КорСубконто1 = &ПустаяСтатьяЗатрат
		|			ТОГДА ""<...>""
		|		ИНАЧЕ ХозрасчетныйОбороты.КорСубконто1
		|	КОНЕЦ КАК Аналитика,
		|	ХозрасчетныйОбороты.КорСчет КАК КорСчет,
		|	ХозрасчетныйОбороты.Подразделение КАК Подразделение,
		|	ХозрасчетныйОбороты.Валюта КАК Валюта,
		|	-ХозрасчетныйОбороты.СуммаОборотДт КАК Сумма,
		|	ХозрасчетныйОбороты.Организация КАК Организация,
		|	&ПорядокКоммерческиеРасходы КАК Порядок,
		|	&ВидСтрокиКоммерческиеРасходы КАК ВидСтроки
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Авто,
		|			Счет В ИЕРАРХИИ (&СчетРасходыНаРеализацию),
		|			,
		|			Организация = &Организация
		|				ИЛИ &ПоВсемОрганизациям,
		|			,
		|			&СубконтоСтатьиЗатрат) КАК ХозрасчетныйОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&НаименованиеУправленческиеРасходы,
		|	ХозрасчетныйОбороты.ПериодМесяц,
		|	ХозрасчетныйОбороты.Счет,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОбороты.Субконто1 = &ПустаяСтатьяЗатрат
		|			ТОГДА ""<...>""
		|		ИНАЧЕ ХозрасчетныйОбороты.Субконто1
		|	КОНЕЦ,
		|	ХозрасчетныйОбороты.КорСчет,
		|	ХозрасчетныйОбороты.Подразделение,
		|	ХозрасчетныйОбороты.Валюта,
		|	-ХозрасчетныйОбороты.СуммаОборотКт,
		|	ХозрасчетныйОбороты.Организация,
		|	&ПорядокУправленческиеРасходы,
		|	&ВидСтрокиУправленческиеРасходы
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Авто,
		|			,
		|			&СубконтоСтатьиЗатрат,
		|			Организация = &Организация
		|				ИЛИ &ПоВсемОрганизациям,
		|			КорСчет В ИЕРАРХИИ (&СчетУправленческиеРасходы),
		|			) КАК ХозрасчетныйОбороты";

	НачалоПериода = ПараметрыОтчета.НачалоПериода;
	КонецПериода = КонецДня(ПараметрыОтчета.КонецПериода);
	
	Если ПрошлыйПериод Тогда
		НачалоПериода = ДобавитьМесяц(ПараметрыОтчета.НачалоПериода, -12);
		КонецПериода = ДобавитьМесяц(КонецДня(ПараметрыОтчета.КонецПериода), -12);
	КонецЕсли;
	
	СтруктураОтчетаКоммерческиеРасходы = СтруктураОтчета.КоммерческиеРасходы;
	СтруктураОтчетаУправленческиеРасходы = СтруктураОтчета.УправленческиеРасходы;
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	ПредставлениеПериода = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(НачалоПериода, КонецПериода, Истина);
	ПредставлениеПериода = СтрШаблон(НСтр("ru='%1'"), СтрЗаменить(ПредставлениеПериода, " г.", ""));
	
	Запрос.УстановитьПараметр("ВидСтрокиКоммерческиеРасходы", СтруктураОтчетаКоммерческиеРасходы.ВидСтроки);
	Запрос.УстановитьПараметр("ВидСтрокиУправленческиеРасходы", СтруктураОтчетаУправленческиеРасходы.ВидСтроки);
	Запрос.УстановитьПараметр("СубконтоСтатьиЗатрат", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	Запрос.УстановитьПараметр("СчетРасходыНаРеализацию", 
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.Продажи_РасходыНаПродажу));
	Запрос.УстановитьПараметр("СчетУправленческиеРасходы", 
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходы));
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", Не ЗначениеЗаполнено(ПараметрыОтчета.Организация));
	Запрос.УстановитьПараметр("ПорядокКоммерческиеРасходы", СтруктураОтчетаКоммерческиеРасходы.Порядок);
	Запрос.УстановитьПараметр("ПорядокУправленческиеРасходы", СтруктураОтчетаУправленческиеРасходы.Порядок);
	Запрос.УстановитьПараметр("НаименованиеКоммерческиеРасходы", СтруктураОтчетаКоммерческиеРасходы.Наименование);
	Запрос.УстановитьПараметр("НаименованиеУправленческиеРасходы", СтруктураОтчетаУправленческиеРасходы.Наименование);
	Запрос.УстановитьПараметр("ПустаяСтатьяЗатрат", Справочники.СтатьиЗатрат.ПустаяСсылка());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если ПараметрыОтчета.Периодичность > 0 Тогда
			ПредставлениеПериода = СтрШаблон(НСтр("ru='%1'"), Формат(Выборка.Период, "ДФ='ММММ гггг'"));
		КонецЕсли;

		СтрокаКоммерческиеРасходы = ТаблицаРезультат.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаКоммерческиеРасходы, Выборка);
		СтрокаКоммерческиеРасходы.ПредставлениеПериода = ПредставлениеПериода;
		
	КонецЦикла;
	
	Возврат ТаблицаРезультат;
	
КонецФункции

Функция ТаблицаПрочихДоходовИРасходов(ПараметрыОтчета, СтруктураОтчета, ПрошлыйПериод = Ложь)
	
	ТаблицаРезультат = ТаблицаРезультат();
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ОсновныеСредства"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Номенклатура"));
	МассивТипов.Добавить(Тип("СправочникСсылка.ОбъектыСтроительства"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Контрагенты"));
	МассивТипов.Добавить(Тип("СправочникСсылка.ЦенныеБумаги"));
	МассивТипов.Добавить(Тип("СправочникСсылка.НематериальныеАктивы"));
	
	ТаблицаРезультат.Колонки.Добавить("РеализуемыйАктив", Новый ОписаниеТипов(МассивТипов));

	АналитикаДоходыОтУчастияВДругихОрганизациях = Новый Массив; 
	АналитикаДоходыОтУчастияВДругихОрганизациях.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.УчастиеВДругихОрганизациях);
	АналитикаДоходыОтУчастияВДругихОрганизациях.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ДолевоеУчастиеВРоссийскихОрганизациях);
	АналитикаДоходыОтУчастияВДругихОрганизациях.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ДолевоеУчастиеВИностранныхОрганизациях);
	
	АналитикаПроцентыКПолучению = Новый Массив;
	АналитикаПроцентыКПолучению.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыКПолучениюУплате);
	АналитикаПроцентыКПолучению.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыПоГосударственнымЦеннымБумагам);
	АналитикаПроцентыКПолучению.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0);
	
	АналитикаПроцентыКУплате = Новый Массив;
	АналитикаПроцентыКУплате.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыКПолучениюУплате);
	АналитикаПроцентыКУплате.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыНачисленныеПоСт269);

	СчетаРасчетовПоКредитамВыданным = Новый Массив;
	СчетаРасчетовПоКредитамВыданным.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами);
	СчетаРасчетовПоКредитамВыданным = БухгалтерскийУчет.СформироватьМассивСубсчетов(СчетаРасчетовПоКредитамВыданным);
	
	СчетаРасчетовПоКредитамПолученным = Новый Массив;
	СчетаРасчетовПоКредитамПолученным.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоКраткосрочнымКредитамИЗаймам);
	СчетаРасчетовПоКредитамПолученным.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоДолгосрочнымКредитамИЗаймам);
	СчетаРасчетовПоКредитамПолученным = БухгалтерскийУчет.СформироватьМассивСубсчетов(СчетаРасчетовПоКредитамПолученным);
	
	СчетПрочиеДоходы = Новый Массив;
	СчетПрочиеДоходы.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеДоходы);
	СчетПрочиеДоходы = БухгалтерскийУчет.СформироватьМассивСубсчетов(СчетПрочиеДоходы);

	СчетПрочиеРасходы = Новый Массив;
	СчетПрочиеРасходы.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеРасходы);
	СчетПрочиеРасходы = БухгалтерскийУчет.СформироватьМассивСубсчетов(СчетПрочиеРасходы);

	РасчетыПоПричитающимсяДивидендам = ПланыСчетов.Хозрасчетный.РасчетыПоПричитающимсяДивидендам;

	СубконтоПрочиеДоходыИРасходыРеализуемыеАктивы = Новый Массив;
	СубконтоПрочиеДоходыИРасходыРеализуемыеАктивы.Добавить(
		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	СубконтоПрочиеДоходыИРасходыРеализуемыеАктивы.Добавить(
		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РеализуемыеАктивы);
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПрочиеДоходыИРасходы.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ АналитикаДоходыОтУчастияВДругихОрганизациях
		|ИЗ
		|	Справочник.ПрочиеДоходыИРасходы КАК ПрочиеДоходыИРасходы
		|ГДЕ
		|	ПрочиеДоходыИРасходы.ВидПрочихДоходовИРасходов В(&АналитикаДоходыОтУчастияВДругихОрганизациях)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПрочиеДоходыИРасходы.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ АналитикаПроцентыКПолучению
		|ИЗ
		|	Справочник.ПрочиеДоходыИРасходы КАК ПрочиеДоходыИРасходы
		|ГДЕ
		|	ПрочиеДоходыИРасходы.ВидПрочихДоходовИРасходов В(&АналитикаПроцентыКПолучению)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПрочиеДоходыИРасходы.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ АналитикаПроцентыКУплате
		|ИЗ
		|	Справочник.ПрочиеДоходыИРасходы КАК ПрочиеДоходыИРасходы
		|ГДЕ
		|	ПрочиеДоходыИРасходы.ВидПрочихДоходовИРасходов В(&АналитикаПроцентыКУплате)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&НаименованиеДоходыОтУчастияВДругихОрганизациях КАК Показатель,
		|	ХозрасчетныйОбороты.Счет КАК Счет,
		|	ВЫБОР
		|		КОГДА (ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы)) = ЗНАЧЕНИЕ(Справочник.ПрочиеДоходыИРасходы.ПустаяССылка)
		|			ТОГДА ""<...>""
		|		ИНАЧЕ ХозрасчетныйОбороты.Субконто1
		|	КОНЕЦ КАК Аналитика,
		|	ХозрасчетныйОбороты.Субконто2 КАК РеализуемыйАктив,
		|	ХозрасчетныйОбороты.Подразделение КАК Подразделение,
		|	ХозрасчетныйОбороты.Валюта КАК Валюта,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК Сумма,
		|	ХозрасчетныйОбороты.Организация КАК Организация,
		|	&ПорядокДоходыОтУчастияВДругихОрганизациях КАК Порядок,
		|	&ВидСтрокиДоходыОтУчастияВДругихОрганизациях КАК ВидСтроки,
		|	ХозрасчетныйОбороты.ПериодМесяц КАК Период
		|ПОМЕСТИТЬ ДоходыОтУчастияВДругихОрганизациях
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Авто,
		|			Счет В ИЕРАРХИИ (&СчетПрочиеДоходы),
		|			&СубконтоПрочиеДоходыИРасходыРеализуемыеАктивы,
		|			Субконто1 В
		|					(ВЫБРАТЬ
		|						АналитикаДоходыОтУчастияВДругихОрганизациях.Ссылка КАК Ссылка
		|					ИЗ
		|						АналитикаДоходыОтУчастияВДругихОрганизациях КАК АналитикаДоходыОтУчастияВДругихОрганизациях)
		|				И (Организация = &Организация
		|					ИЛИ &ПоВсемОрганизациям),
		|			КорСчет В (&РасчетыПоПричитающимсяДивидендам),
		|			) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Валюта,
		|	ХозрасчетныйОбороты.Организация,
		|	ХозрасчетныйОбороты.Подразделение,
		|	ХозрасчетныйОбороты.Счет,
		|	ХозрасчетныйОбороты.ПериодМесяц,
		|	ХозрасчетныйОбороты.Субконто2,
		|	ВЫБОР
		|		КОГДА (ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы)) = ЗНАЧЕНИЕ(Справочник.ПрочиеДоходыИРасходы.ПустаяССылка)
		|			ТОГДА ""<...>""
		|		ИНАЧЕ ХозрасчетныйОбороты.Субконто1
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&НаименованиеПроцентыКПолучению КАК Показатель,
		|	ХозрасчетныйОбороты.ПериодМесяц КАК Период,
		|	ХозрасчетныйОбороты.Счет КАК Счет,
		|	ВЫБОР
		|		КОГДА (ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы)) = ЗНАЧЕНИЕ(Справочник.ПрочиеДоходыИРасходы.ПустаяССылка)
		|			ТОГДА ""<...>""
		|		ИНАЧЕ ХозрасчетныйОбороты.Субконто1
		|	КОНЕЦ КАК Аналитика,
		|	ХозрасчетныйОбороты.Субконто2 КАК РеализуемыйАктив,
		|	ХозрасчетныйОбороты.Подразделение КАК Подразделение,
		|	ХозрасчетныйОбороты.Валюта КАК Валюта,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК Сумма,
		|	ХозрасчетныйОбороты.Организация КАК Организация,
		|	&ПорядокПроцентыКПолучению КАК Порядок,
		|	&ВидСтрокиПроцентыКПолучению КАК ВидСтроки
		|ПОМЕСТИТЬ ДоходыПоКредитам
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Авто,
		|			Счет В ИЕРАРХИИ (&СчетПрочиеДоходы),
		|			&СубконтоПрочиеДоходыИРасходыРеализуемыеАктивы,
		|			Субконто1 В
		|					(ВЫБРАТЬ
		|						АналитикаПроцентыКПолучению.Ссылка КАК Ссылка
		|					ИЗ
		|						АналитикаПроцентыКПолучению КАК АналитикаПроцентыКПолучению)
		|				И (Организация = &Организация
		|					ИЛИ &ПоВсемОрганизациям),
		|			,
		|			) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Валюта,
		|	ХозрасчетныйОбороты.Организация,
		|	ХозрасчетныйОбороты.Подразделение,
		|	ХозрасчетныйОбороты.Счет,
		|	ХозрасчетныйОбороты.Субконто2,
		|	ВЫБОР
		|		КОГДА (ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы)) = ЗНАЧЕНИЕ(Справочник.ПрочиеДоходыИРасходы.ПустаяССылка)
		|			ТОГДА ""<...>""
		|		ИНАЧЕ ХозрасчетныйОбороты.Субконто1
		|	КОНЕЦ,
		|	ХозрасчетныйОбороты.ПериодМесяц
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&НаименованиеПроцентыКУплате КАК Показатель,
		|	ХозрасчетныйОбороты.ПериодМесяц КАК Период,
		|	ХозрасчетныйОбороты.Счет КАК Счет,
		|	ВЫБОР
		|		КОГДА (ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы)) = ЗНАЧЕНИЕ(Справочник.ПрочиеДоходыИРасходы.ПустаяССылка)
		|			ТОГДА ""<...>""
		|		ИНАЧЕ ХозрасчетныйОбороты.Субконто1
		|	КОНЕЦ КАК Аналитика,
		|	ХозрасчетныйОбороты.Субконто2 КАК РеализуемыйАктив,
		|	ХозрасчетныйОбороты.Подразделение КАК Подразделение,
		|	ХозрасчетныйОбороты.Валюта КАК Валюта,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК Сумма,
		|	ХозрасчетныйОбороты.Организация КАК Организация,
		|	&ПорядокПроцентыКУплате КАК Порядок,
		|	&ВидСтрокиПроцентыКУплате КАК ВидСтроки
		|ПОМЕСТИТЬ РасходыПоКредитам
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Авто,
		|			Счет В ИЕРАРХИИ (&СчетПрочиеРасходы),
		|			&СубконтоПрочиеДоходыИРасходыРеализуемыеАктивы,
		|			Субконто1 В
		|					(ВЫБРАТЬ
		|						АналитикаПроцентыКУплате.Ссылка КАК Ссылка
		|					ИЗ
		|						АналитикаПроцентыКУплате КАК АналитикаПроцентыКУплате)
		|				И (Организация = &Организация
		|					ИЛИ &ПоВсемОрганизациям),
		|			,
		|			) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Валюта,
		|	ХозрасчетныйОбороты.Подразделение,
		|	ХозрасчетныйОбороты.Счет,
		|	ХозрасчетныйОбороты.Организация,
		|	ХозрасчетныйОбороты.Субконто2,
		|	ВЫБОР
		|		КОГДА (ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы)) = ЗНАЧЕНИЕ(Справочник.ПрочиеДоходыИРасходы.ПустаяССылка)
		|			ТОГДА ""<...>""
		|		ИНАЧЕ ХозрасчетныйОбороты.Субконто1
		|	КОНЕЦ,
		|	ХозрасчетныйОбороты.ПериодМесяц
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&НаименованиеПрочиеДоходы КАК Показатель,
		|	ХозрасчетныйОбороты.ПериодМесяц КАК Период,
		|	ХозрасчетныйОбороты.Счет КАК Счет,
		|	ВЫБОР
		|		КОГДА (ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы)) = ЗНАЧЕНИЕ(Справочник.ПрочиеДоходыИРасходы.ПустаяССылка)
		|			ТОГДА ""<...>""
		|		ИНАЧЕ ХозрасчетныйОбороты.Субконто1
		|	КОНЕЦ КАК Аналитика,
		|	ХозрасчетныйОбороты.Субконто2 КАК РеализуемыйАктив,
		|	ХозрасчетныйОбороты.Подразделение КАК Подразделение,
		|	ХозрасчетныйОбороты.Валюта КАК Валюта,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК Сумма,
		|	ХозрасчетныйОбороты.Организация КАК Организация,
		|	&ПорядокПрочиеДоходы КАК Порядок,
		|	&ВидСтрокиПрочиеДоходы КАК ВидСтроки
		|ПОМЕСТИТЬ ПрочиеДоходы
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Авто,
		|			Счет В ИЕРАРХИИ (&СчетПрочиеДоходы),
		|			&СубконтоПрочиеДоходыИРасходыРеализуемыеАктивы,
		|			НЕ Субконто1 В
		|						(ВЫБРАТЬ
		|							АналитикаДоходыОтУчастияВДругихОрганизациях.Ссылка КАК Ссылка
		|						ИЗ
		|							АналитикаДоходыОтУчастияВДругихОрганизациях КАК АналитикаДоходыОтУчастияВДругихОрганизациях
		|			
		|						ОБЪЕДИНИТЬ ВСЕ
		|			
		|						ВЫБРАТЬ
		|							АналитикаПроцентыКПолучению.Ссылка
		|						ИЗ
		|							АналитикаПроцентыКПолучению КАК АналитикаПроцентыКПолучению)
		|				И (Организация = &Организация
		|					ИЛИ &ПоВсемОрганизациям),
		|			,
		|			) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Организация,
		|	ХозрасчетныйОбороты.Подразделение,
		|	ХозрасчетныйОбороты.Счет,
		|	ХозрасчетныйОбороты.Субконто2,
		|	ВЫБОР
		|		КОГДА (ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы)) = ЗНАЧЕНИЕ(Справочник.ПрочиеДоходыИРасходы.ПустаяССылка)
		|			ТОГДА ""<...>""
		|		ИНАЧЕ ХозрасчетныйОбороты.Субконто1
		|	КОНЕЦ,
		|	ХозрасчетныйОбороты.ПериодМесяц,
		|	ХозрасчетныйОбороты.Валюта
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&НаименованиеПрочиеДоходы,
		|	ХозрасчетныйОбороты.ПериодМесяц,
		|	ХозрасчетныйОбороты.Счет,
		|	ВЫБОР
		|		КОГДА (ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы)) = ЗНАЧЕНИЕ(Справочник.ПрочиеДоходыИРасходы.ПустаяССылка)
		|			ТОГДА ""<...>""
		|		ИНАЧЕ ХозрасчетныйОбороты.Субконто1
		|	КОНЕЦ,
		|	ХозрасчетныйОбороты.Субконто2,
		|	ХозрасчетныйОбороты.Подразделение,
		|	ХозрасчетныйОбороты.Валюта,
		|	СУММА(-ХозрасчетныйОбороты.СуммаОборотДт),
		|	ХозрасчетныйОбороты.Организация,
		|	&ПорядокПрочиеДоходы,
		|	&ВидСтрокиПрочиеДоходы
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Авто,
		|			Счет В ИЕРАРХИИ (&СчетПрочиеРасходы),
		|			&СубконтоПрочиеДоходыИРасходыРеализуемыеАктивы,
		|			НЕ Субконто1 В
		|						(ВЫБРАТЬ
		|							АналитикаДоходыОтУчастияВДругихОрганизациях.Ссылка КАК Ссылка
		|						ИЗ
		|							АналитикаДоходыОтУчастияВДругихОрганизациях КАК АналитикаДоходыОтУчастияВДругихОрганизациях
		|			
		|						ОБЪЕДИНИТЬ ВСЕ
		|			
		|						ВЫБРАТЬ
		|							АналитикаПроцентыКПолучению.Ссылка
		|						ИЗ
		|							АналитикаПроцентыКПолучению КАК АналитикаПроцентыКПолучению)
		|				И (Организация = &Организация
		|					ИЛИ &ПоВсемОрганизациям),
		|			КорСчет В (&СчетНДС),
		|			) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Валюта,
		|	ХозрасчетныйОбороты.Организация,
		|	ХозрасчетныйОбороты.Подразделение,
		|	ХозрасчетныйОбороты.Счет,
		|	ХозрасчетныйОбороты.Субконто2,
		|	ВЫБОР
		|		КОГДА (ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы)) = ЗНАЧЕНИЕ(Справочник.ПрочиеДоходыИРасходы.ПустаяССылка)
		|			ТОГДА ""<...>""
		|		ИНАЧЕ ХозрасчетныйОбороты.Субконто1
		|	КОНЕЦ,
		|	ХозрасчетныйОбороты.ПериодМесяц
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&НаименованиеПрочиеРасходы КАК Показатель,
		|	ХозрасчетныйОбороты.ПериодМесяц КАК Период,
		|	ХозрасчетныйОбороты.Счет КАК Счет,
		|	ВЫБОР
		|		КОГДА (ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы)) = ЗНАЧЕНИЕ(Справочник.ПрочиеДоходыИРасходы.ПустаяССылка)
		|			ТОГДА ""<...>""
		|		ИНАЧЕ ХозрасчетныйОбороты.Субконто1
		|	КОНЕЦ КАК Аналитика,
		|	ХозрасчетныйОбороты.Субконто2 КАК РеализуемыйАктив,
		|	ХозрасчетныйОбороты.Подразделение КАК Подразделение,
		|	ХозрасчетныйОбороты.Валюта КАК Валюта,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК Сумма,
		|	ХозрасчетныйОбороты.Организация КАК Организация,
		|	&ПорядокПрочиеРасходы КАК Порядок,
		|	&ВидСтрокиПрочиеРасходы КАК ВидСтроки
		|ПОМЕСТИТЬ ПрочиеРасходы
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Авто,
		|			Счет В ИЕРАРХИИ (&СчетПрочиеРасходы),
		|			&СубконтоПрочиеДоходыИРасходыРеализуемыеАктивы,
		|			НЕ Субконто1 В
		|						(ВЫБРАТЬ
		|							АналитикаПроцентыКУплате.Ссылка КАК Ссылка
		|						ИЗ
		|							АналитикаПроцентыКУплате КАК АналитикаПроцентыКУплате)
		|				И (Организация = &Организация
		|					ИЛИ &ПоВсемОрганизациям),
		|			,
		|			) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Валюта,
		|	ХозрасчетныйОбороты.Подразделение,
		|	ХозрасчетныйОбороты.Счет,
		|	ХозрасчетныйОбороты.Организация,
		|	ХозрасчетныйОбороты.Субконто2,
		|	ВЫБОР
		|		КОГДА (ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы)) = ЗНАЧЕНИЕ(Справочник.ПрочиеДоходыИРасходы.ПустаяССылка)
		|			ТОГДА ""<...>""
		|		ИНАЧЕ ХозрасчетныйОбороты.Субконто1
		|	КОНЕЦ,
		|	ХозрасчетныйОбороты.ПериодМесяц
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПрочиеДоходы.Показатель КАК Показатель,
		|	ПрочиеДоходы.Период КАК Период,
		|	ПрочиеДоходы.Счет КАК Счет,
		|	ПрочиеДоходы.Аналитика КАК Аналитика,
		|	ПрочиеДоходы.РеализуемыйАктив КАК РеализуемыйАктив,
		|	ЕСТЬNULL(ПрочиеДоходы.Подразделение, &ПустоеПодразделение) КАК Подразделение,
		|	ПрочиеДоходы.Валюта КАК Валюта,
		|	ПрочиеДоходы.Сумма КАК Сумма,
		|	ПрочиеДоходы.Организация КАК Организация,
		|	ПрочиеДоходы.Порядок КАК Порядок,
		|	ПрочиеДоходы.ВидСтроки КАК ВидСтроки
		|ИЗ
		|	ПрочиеДоходы КАК ПрочиеДоходы
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПрочиеРасходы.Показатель,
		|	ПрочиеРасходы.Период,
		|	ПрочиеРасходы.Счет,
		|	ПрочиеРасходы.Аналитика,
		|	ПрочиеРасходы.РеализуемыйАктив,
		|	ЕСТЬNULL(ПрочиеРасходы.Подразделение, &ПустоеПодразделение),
		|	ПрочиеРасходы.Валюта,
		|	-ПрочиеРасходы.Сумма,
		|	ПрочиеРасходы.Организация,
		|	ПрочиеРасходы.Порядок,
		|	ПрочиеРасходы.ВидСтроки
		|ИЗ
		|	ПрочиеРасходы КАК ПрочиеРасходы
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РасходыПоКредитам.Показатель,
		|	РасходыПоКредитам.Период,
		|	РасходыПоКредитам.Счет,
		|	РасходыПоКредитам.Аналитика,
		|	РасходыПоКредитам.РеализуемыйАктив,
		|	ЕСТЬNULL(РасходыПоКредитам.Подразделение, &ПустоеПодразделение),
		|	РасходыПоКредитам.Валюта,
		|	-РасходыПоКредитам.Сумма,
		|	РасходыПоКредитам.Организация,
		|	РасходыПоКредитам.Порядок,
		|	РасходыПоКредитам.ВидСтроки
		|ИЗ
		|	РасходыПоКредитам КАК РасходыПоКредитам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДоходыПоКредитам.Показатель,
		|	ДоходыПоКредитам.Период,
		|	ДоходыПоКредитам.Счет,
		|	ДоходыПоКредитам.Аналитика,
		|	ДоходыПоКредитам.РеализуемыйАктив,
		|	ЕСТЬNULL(ДоходыПоКредитам.Подразделение, &ПустоеПодразделение),
		|	ДоходыПоКредитам.Валюта,
		|	ДоходыПоКредитам.Сумма,
		|	ДоходыПоКредитам.Организация,
		|	ДоходыПоКредитам.Порядок,
		|	ДоходыПоКредитам.ВидСтроки
		|ИЗ
		|	ДоходыПоКредитам КАК ДоходыПоКредитам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДоходыОтУчастияВДругихОрганизациях.Показатель,
		|	ДоходыОтУчастияВДругихОрганизациях.Период,
		|	ДоходыОтУчастияВДругихОрганизациях.Счет,
		|	ДоходыОтУчастияВДругихОрганизациях.Аналитика,
		|	ДоходыОтУчастияВДругихОрганизациях.РеализуемыйАктив,
		|	ЕСТЬNULL(ДоходыОтУчастияВДругихОрганизациях.Подразделение, &ПустоеПодразделение),
		|	ДоходыОтУчастияВДругихОрганизациях.Валюта,
		|	ДоходыОтУчастияВДругихОрганизациях.Сумма,
		|	ДоходыОтУчастияВДругихОрганизациях.Организация,
		|	ДоходыОтУчастияВДругихОрганизациях.Порядок,
		|	ДоходыОтУчастияВДругихОрганизациях.ВидСтроки
		|ИЗ
		|	ДоходыОтУчастияВДругихОрганизациях КАК ДоходыОтУчастияВДругихОрганизациях";

	НачалоПериода = ПараметрыОтчета.НачалоПериода;
	КонецПериода = КонецДня(ПараметрыОтчета.КонецПериода);
	
	Если ПрошлыйПериод Тогда
		НачалоПериода = ДобавитьМесяц(ПараметрыОтчета.НачалоПериода, -12);
		КонецПериода = ДобавитьМесяц(КонецДня(ПараметрыОтчета.КонецПериода), -12);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	ПредставлениеПериода = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(
		НачалоПериода, КонецПериода, Истина);
		
	ПредставлениеПериода = СтрШаблон(НСтр("ru='%1'"), СтрЗаменить(ПредставлениеПериода, " г.", ""));
	
	Запрос.УстановитьПараметр("СубконтоПрочиеДоходыИРасходыРеализуемыеАктивы",
		СубконтоПрочиеДоходыИРасходыРеализуемыеАктивы);
	
	Запрос.УстановитьПараметр("СчетаРасчетовПоКредитамВыданным", СчетаРасчетовПоКредитамВыданным);
	Запрос.УстановитьПараметр("СчетаРасчетовПоКредитамПолученным", СчетаРасчетовПоКредитамПолученным);
	Запрос.УстановитьПараметр("СчетПрочиеДоходы", СчетПрочиеДоходы);
	Запрос.УстановитьПараметр("СчетНДС", ПланыСчетов.Хозрасчетный.НДС);
	Запрос.УстановитьПараметр("СчетПрочиеРасходы", СчетПрочиеРасходы);
	Запрос.УстановитьПараметр("РасчетыПоПричитающимсяДивидендам", РасчетыПоПричитающимсяДивидендам);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", Не ЗначениеЗаполнено(ПараметрыОтчета.Организация));
	СтрокаДоходыОтУчастияВДругихОрганизациях = СтруктураОтчета.ДоходыОтУчастияВДругихОрганизациях;
	СтрокаПроцентыКПолучению = СтруктураОтчета.ПроцентыКПолучению;
	СтрокаПроцентыКУплате = СтруктураОтчета.ПроцентыКУплате;
	СтрокаПрочиеДоходы = СтруктураОтчета.ПрочиеДоходы;
	СтрокаПрочиеРасходы = СтруктураОтчета.ПрочиеРасходы;
	
	Запрос.УстановитьПараметр("НаименованиеДоходыОтУчастияВДругихОрганизациях", 
		СтрокаДоходыОтУчастияВДругихОрганизациях.Наименование);
	Запрос.УстановитьПараметр("НаименованиеПроцентыКПолучению", СтрокаПроцентыКПолучению.Наименование);
	Запрос.УстановитьПараметр("НаименованиеПроцентыКУплате", СтрокаПроцентыКУплате.Наименование);
	Запрос.УстановитьПараметр("НаименованиеПрочиеДоходы", СтрокаПрочиеДоходы.Наименование);
	Запрос.УстановитьПараметр("НаименованиеПрочиеРасходы", СтрокаПрочиеРасходы.Наименование);
	
	Запрос.УстановитьПараметр("ВидСтрокиДоходыОтУчастияВДругихОрганизациях", 
		СтрокаДоходыОтУчастияВДругихОрганизациях.ВидСтроки);
	Запрос.УстановитьПараметр("ВидСтрокиПроцентыКПолучению", СтрокаПроцентыКПолучению.ВидСтроки);
	Запрос.УстановитьПараметр("ВидСтрокиПроцентыКУплате", СтрокаПроцентыКУплате.ВидСтроки);
	Запрос.УстановитьПараметр("ВидСтрокиПрочиеДоходы", СтрокаПрочиеДоходы.ВидСтроки);
	Запрос.УстановитьПараметр("ВидСтрокиПрочиеРасходы", СтрокаПрочиеРасходы.ВидСтроки);
	
	Запрос.УстановитьПараметр("ПорядокДоходыОтУчастияВДругихОрганизациях", 
		СтрокаДоходыОтУчастияВДругихОрганизациях.Порядок);
	Запрос.УстановитьПараметр("ПорядокПроцентыКПолучению", СтрокаПроцентыКПолучению.Порядок);
	Запрос.УстановитьПараметр("ПорядокПроцентыКУплате", СтрокаПроцентыКУплате.Порядок);
	Запрос.УстановитьПараметр("ПорядокПрочиеДоходы", СтрокаПрочиеДоходы.Порядок);
	Запрос.УстановитьПараметр("ПорядокПрочиеРасходы", СтрокаПрочиеРасходы.Порядок);

	Запрос.УстановитьПараметр("АналитикаДоходыОтУчастияВДругихОрганизациях",
		АналитикаДоходыОтУчастияВДругихОрганизациях);
		
	Запрос.УстановитьПараметр("АналитикаПроцентыКПолучению", АналитикаПроцентыКПолучению);
	Запрос.УстановитьПараметр("АналитикаПроцентыКУплате", АналитикаПроцентыКУплате); 
	Запрос.УстановитьПараметр("ПустоеПодразделение", Справочники.ПодразделенияОрганизаций.ПустаяСсылка());

	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если ПараметрыОтчета.Периодичность > 0 Тогда
			ПредставлениеПериода = СтрШаблон(НСтр("ru='%1'"), Формат(Выборка.Период, "ДФ='ММММ гггг'"));
		КонецЕсли;

		СтрокаПрочиеДоходыИРасходы = ТаблицаРезультат.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПрочиеДоходыИРасходы, Выборка);
		СтрокаПрочиеДоходыИРасходы.ПредставлениеПериода = ПредставлениеПериода;
		
	КонецЦикла;
	
	Возврат ТаблицаРезультат;
	
КонецФункции

Функция ТаблицаНалогНаПрибыль(ПараметрыОтчета, СтруктураОтчета, ПрошлыйПериод = Ложь)
	
	ТаблицаРезультат = ТаблицаРезультат();
	
	ОрганизацияПрименяетПБУ18 = РегламентированнаяОтчетностьПереопределяемый.ПрименяетсяПБУ18(
		ПараметрыОтчета.Организация, КонецДня(ПараметрыОтчета.КонецПериода));
	ОрганизацияПрименяетУСН   = ЗаполнениеБухгалтерскойОтчетности.ПрименяетсяУСН(
		ПараметрыОтчета.Организация, КонецДня(ПараметрыОтчета.КонецПериода));
	ОрганизацияПрименяетАУСН  = ЗаполнениеБухгалтерскойОтчетности.ПрименяетсяАУСН(
		ПараметрыОтчета.Организация, КонецДня(ПараметрыОтчета.КонецПериода));
	ОрганизацияПрименяетНПД   = ЗаполнениеБухгалтерскойОтчетности.ПрименяетсяНПД(
		ПараметрыОтчета.Организация, КонецДня(ПараметрыОтчета.КонецПериода));
		
	СтрокаНалогНаПрибыль = СтруктураОтчета.НалогНаПрибыль;
	НаименованиеПоказателя = СтрокаНалогНаПрибыль.Наименование;
	Если ОрганизацияПрименяетПБУ18 Тогда
		Запрос = ЗапросНалогНаПрибыльПриПБУ18(ПараметрыОтчета, СтруктураОтчета);
	ИначеЕсли ОрганизацияПрименяетУСН Тогда 
		Запрос = ЗапросНалогНаПрибыль(СтруктураОтчета);
		Запрос.УстановитьПараметр("СчетРасчетыСБюджетом",
			БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ЕНприУСН));
		НаименованиеПоказателя = НСтр("ru='Налог при УСН'");
	ИначеЕсли ОрганизацияПрименяетАУСН Тогда 
		Запрос = ЗапросНалогНаПрибыль(СтруктураОтчета);
		Запрос.УстановитьПараметр("СчетРасчетыСБюджетом",
			БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.НалогПриАУСН));
		НаименованиеПоказателя = НСтр("ru='Налог при УСН'");
	ИначеЕсли ОрганизацияПрименяетНПД Тогда
		Запрос = ЗапросНалогНаПрибыль(СтруктураОтчета);
		Запрос.УстановитьПараметр("СчетРасчетыСБюджетом", 
			БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.НалогНаПрофессиональныйДоход));
		НаименованиеПоказателя = НСтр("ru='Налог на профессиональный доход'");
	Иначе
		Запрос = ЗапросНалогНаПрибыль(СтруктураОтчета);
		Запрос.УстановитьПараметр("СчетРасчетыСБюджетом", 
			БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыСБюджетом));
		НаименованиеПоказателя = НСтр("ru='Налог на прибыль'");
	КонецЕсли;
	
	ДополнитьТекстЗапросаПрочее(Запрос, СтруктураОтчета);
	
	Запрос.УстановитьПараметр("ПустоеПодразделение", Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
	Запрос.УстановитьПараметр("Показатель", НаименованиеПоказателя);
	СтрокаНалогНаПрибыль.Наименование = НаименованиеПоказателя;
	
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	
	НачалоПериода = ПараметрыОтчета.НачалоПериода;
	КонецПериода = КонецДня(ПараметрыОтчета.КонецПериода);
	
	Если ПрошлыйПериод Тогда
		НачалоПериода = ДобавитьМесяц(ПараметрыОтчета.НачалоПериода, -12);
		КонецПериода = ДобавитьМесяц(КонецДня(ПараметрыОтчета.КонецПериода), -12);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	ПредставлениеПериода = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(НачалоПериода, КонецПериода, Истина);
	ПредставлениеПериода = СтрШаблон(НСтр("ru='%1'"), СтрЗаменить(ПредставлениеПериода, " г.", ""));
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", Не ЗначениеЗаполнено(ПараметрыОтчета.Организация));

	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл
		
		Если ПараметрыОтчета.Периодичность > 0 Тогда
			ПредставлениеПериода = СтрШаблон(НСтр("ru='%1'"), Формат(Выборка.Период, "ДФ='ММММ гггг'"));
		КонецЕсли;

		СтрокаНалогНаПрибыль = ТаблицаРезультат.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаНалогНаПрибыль, Выборка);
		СтрокаНалогНаПрибыль.ПредставлениеПериода = ПредставлениеПериода; 
		СтрокаНалогНаПрибыль.Показатель = СтрШаблон(НСтр("ru='%1'"), Выборка.Показатель);

	КонецЦикла;
	
	ТаблицаРезультат = ОбработатьТаблицуРезультата(ТаблицаРезультат);

	Возврат ТаблицаРезультат;
	
КонецФункции

Функция ОбработатьТаблицуРезультата(ТаблицаИсточник)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаИсточник.Идентификатор КАК Идентификатор,
	               |	ТаблицаИсточник.Показатель КАК Показатель,
	               |	ТаблицаИсточник.Период КАК Период,
	               |	ТаблицаИсточник.ПредставлениеПериода КАК ПредставлениеПериода,
	               |	ТаблицаИсточник.Аналитика КАК Аналитика,
	               |	ТаблицаИсточник.Организация КАК Организация,
	               |	ТаблицаИсточник.Подразделение КАК Подразделение,
	               |	ТаблицаИсточник.Счет КАК Счет,
	               |	ТаблицаИсточник.Валюта КАК Валюта,
	               |	ТаблицаИсточник.Порядок КАК Порядок,
	               |	ТаблицаИсточник.ВидСтроки КАК ВидСтроки,
	               |	ТаблицаИсточник.Сумма КАК Сумма
	               |ПОМЕСТИТЬ ТаблицаИсточник
	               |ИЗ
	               |	&ТаблицаИсточник КАК ТаблицаИсточник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаИсточник.Идентификатор КАК Идентификатор,
	               |	ТаблицаИсточник.Показатель КАК Показатель,
	               |	ТаблицаИсточник.Период КАК Период,
	               |	ТаблицаИсточник.ПредставлениеПериода КАК ПредставлениеПериода,
	               |	ТаблицаИсточник.Аналитика КАК Аналитика,
	               |	ТаблицаИсточник.Организация КАК Организация,
	               |	ТаблицаИсточник.Подразделение КАК Подразделение,
	               |	ТаблицаИсточник.Счет КАК Счет,
	               |	ТаблицаИсточник.Валюта КАК Валюта,
	               |	ТаблицаИсточник.Порядок КАК Порядок,
	               |	ТаблицаИсточник.ВидСтроки КАК ВидСтроки,
	               |	ТаблицаИсточник.Сумма КАК Сумма
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ТаблицаИсточник.Идентификатор КАК Идентификатор,
	               |		ТаблицаИсточник.Показатель КАК Показатель,
	               |		ТаблицаИсточник.Период КАК Период,
	               |		ТаблицаИсточник.ПредставлениеПериода КАК ПредставлениеПериода,
	               |		ВЫРАЗИТЬ(ТаблицаИсточник.Аналитика КАК СТРОКА(100)) КАК Аналитика,
	               |		ТаблицаИсточник.Организация КАК Организация,
	               |		ТаблицаИсточник.Подразделение КАК Подразделение,
	               |		ТаблицаИсточник.Счет КАК Счет,
	               |		ТаблицаИсточник.Валюта КАК Валюта,
	               |		ТаблицаИсточник.Порядок КАК Порядок,
	               |		ТаблицаИсточник.ВидСтроки КАК ВидСтроки,
	               |		СУММА(ТаблицаИсточник.Сумма) КАК Сумма
	               |	ИЗ
	               |		ТаблицаИсточник КАК ТаблицаИсточник
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ТаблицаИсточник.Валюта,
	               |		ТаблицаИсточник.Порядок,
	               |		ТаблицаИсточник.ВидСтроки,
	               |		ТаблицаИсточник.ПредставлениеПериода,
	               |		ТаблицаИсточник.Организация,
	               |		ТаблицаИсточник.Подразделение,
	               |		ТаблицаИсточник.Период,
	               |		ТаблицаИсточник.Показатель,
	               |		ТаблицаИсточник.Идентификатор,
	               |		ТаблицаИсточник.Счет,
	               |		ВЫРАЗИТЬ(ТаблицаИсточник.Аналитика КАК СТРОКА(100))) КАК ТаблицаИсточник
	               |ГДЕ
	               |	ТаблицаИсточник.Сумма <> 0";
	Запрос.УстановитьПараметр("ТаблицаИсточник", ТаблицаИсточник);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ТаблицаИсточник;
	Иначе
		Возврат РезультатЗапроса.Выгрузить();
	КонецЕсли;
	
КонецФункции

Функция ЗапросНалогНаПрибыльПриПБУ18(ПараметрыОтчета, СтруктураОтчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&НаименованиеНалогНаПрибыль КАК Показатель,
	|	ОборотыПоНалогуНаПрибыль.ПериодМесяц КАК Период,
	|	"""" КАК Аналитика,
	|	ЕСТЬNULL(ОборотыПоНалогуНаПрибыль.Подразделение, &ПустоеПодразделение) КАК Подразделение,
	|	ОборотыПоНалогуНаПрибыль.Валюта КАК Валюта,
	|	СУММА(ОборотыПоНалогуНаПрибыль.СуммаОборот) КАК Сумма,
	|	ОборотыПоНалогуНаПрибыль.Организация КАК Организация,
	|	&ПорядокНалогНаПрибыль КАК Порядок,
	|	&ВидСтрокиНалогНаПрибыль КАК ВидСтроки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Авто,
	|			Счет В (&СчетПрибылиИУбыткиНеЕНВД),
	|			,
	|			Организация = &Организация
	|				ИЛИ &ПоВсемОрганизациям,
	|			КорСчет В ИЕРАРХИИ (&СчетНалогНаПрибыль),
	|			) КАК ОборотыПоНалогуНаПрибыль
	|
	|СГРУППИРОВАТЬ ПО
	|	ОборотыПоНалогуНаПрибыль.Валюта,
	|	ОборотыПоНалогуНаПрибыль.Организация,
	|	ОборотыПоНалогуНаПрибыль.ПериодМесяц,
	|	ЕСТЬNULL(ОборотыПоНалогуНаПрибыль.Подразделение, &ПустоеПодразделение)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&НаименованиеНалогНаПрибыль,
	|	ОборотыПоНалогуНаПрибыль.ПериодМесяц,
	|	"""",
	|	ЕСТЬNULL(ОборотыПоНалогуНаПрибыль.ПодразделениеДт, &ПустоеПодразделение),
	|	ОборотыПоНалогуНаПрибыль.ВалютаДт,
	|	СУММА(ОборотыПоНалогуНаПрибыль.СуммаОборот),
	|	ОборотыПоНалогуНаПрибыль.Организация,
	|	&ПорядокНалогНаПрибыль,
	|	&ВидСтрокиНалогНаПрибыль
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Авто,
	|			СчетДт В ИЕРАРХИИ (&СчетНалогНаПрибыль),
	|			,
	|			СчетКт В (&СчетНераспределеннаяПрибыльУбытки),
	|			,
	|			Организация = &Организация
	|				ИЛИ &ПоВсемОрганизациям) КАК ОборотыПоНалогуНаПрибыль
	|
	|СГРУППИРОВАТЬ ПО
	|	ОборотыПоНалогуНаПрибыль.ПериодМесяц,
	|	ОборотыПоНалогуНаПрибыль.Организация,
	|	ОборотыПоНалогуНаПрибыль.ВалютаДт,
	|	ЕСТЬNULL(ОборотыПоНалогуНаПрибыль.ПодразделениеДт, &ПустоеПодразделение)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&НаименованиеИзменениеОтложенныхНалоговыхОбязательств,
	|	ОборотыПоОтложеннымНалоговымОбязательствам.ПериодМесяц,
	|	"""",
	|	ЕСТЬNULL(ОборотыПоОтложеннымНалоговымОбязательствам.ПодразделениеДт, &ПустоеПодразделение),
	|	ОборотыПоОтложеннымНалоговымОбязательствам.ВалютаДт,
	|	СУММА(ОборотыПоОтложеннымНалоговымОбязательствам.СуммаОборот),
	|	ОборотыПоОтложеннымНалоговымОбязательствам.Организация,
	|	&ПорядокИзменениеОтложенныхНалоговыхОбязательств,
	|	&ВидСтрокиИзменениеОтложенныхНалоговыхОбязательств
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Авто,
	|			СчетДт В (&СчетНераспределеннаяПрибыльУбытки),
	|			,
	|			СчетКт В ИЕРАРХИИ (&СчетНалогНаПрибыль),
	|			,
	|			Организация = &Организация
	|				ИЛИ &ПоВсемОрганизациям) КАК ОборотыПоОтложеннымНалоговымОбязательствам
	|
	|СГРУППИРОВАТЬ ПО
	|	ОборотыПоОтложеннымНалоговымОбязательствам.ПериодМесяц,
	|	ОборотыПоОтложеннымНалоговымОбязательствам.Организация,
	|	ОборотыПоОтложеннымНалоговымОбязательствам.ВалютаДт,
	|	ЕСТЬNULL(ОборотыПоОтложеннымНалоговымОбязательствам.ПодразделениеДт, &ПустоеПодразделение)";

	Запрос.УстановитьПараметр("СчетПрибылиИУбыткиНеЕНВД", 
		ПланыСчетов.Хозрасчетный.РасчетНалогаНаПрибыль); // 68.04.2
	Запрос.УстановитьПараметр("СчетНераспределеннаяПрибыльУбытки",
		ПланыСчетов.Хозрасчетный.НераспределеннаяПрибыль); // 84
	Запрос.УстановитьПараметр("СчетНалогНаПрибыль", 
		ПланыСчетов.Хозрасчетный.ПрибылиИУбытки_НалогНаПрибыль); // 99.02
		
	СтрокаНалогНаПрибыль = СтруктураОтчета.НалогНаПрибыль;
	СтрокаИзменениеОтложенныхНалоговыхОбязательств = СтруктураОтчета.ИзменениеОтложенныхНалоговыхОбязательств;

	Запрос.УстановитьПараметр("НаименованиеНалогНаПрибыль", СтрокаНалогНаПрибыль.Наименование);
	Запрос.УстановитьПараметр("НаименованиеИзменениеОтложенныхНалоговыхОбязательств",
		СтрокаИзменениеОтложенныхНалоговыхОбязательств.Наименование);

	
	Запрос.УстановитьПараметр("ВидСтрокиНалогНаПрибыль", СтрокаНалогНаПрибыль.ВидСтроки);
	Запрос.УстановитьПараметр("ВидСтрокиИзменениеОтложенныхНалоговыхОбязательств",
		СтрокаИзменениеОтложенныхНалоговыхОбязательств.ВидСтроки);
	
	Запрос.УстановитьПараметр("ПорядокНалогНаПрибыль", СтрокаНалогНаПрибыль.Порядок);
	Запрос.УстановитьПараметр("ПорядокИзменениеОтложенныхНалоговыхОбязательств",
	СтрокаИзменениеОтложенныхНалоговыхОбязательств.Порядок);
	
	Возврат Запрос;

КонецФункции

Функция ЗапросНалогНаПрибыль(СтруктураОтчета)
	
	НалогНаПрибыль = СтруктураОтчета.НалогНаПрибыль;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&Показатель КАК Показатель,
	|	ХозрасчетныйОбороты.ПериодМесяц КАК Период,
	|	"""" КАК Аналитика,
	|	ЕСТЬNULL(ХозрасчетныйОбороты.Подразделение, &ПустоеПодразделение) КАК Подразделение,
	|	ХозрасчетныйОбороты.Валюта КАК Валюта,
	|	-ХозрасчетныйОбороты.СуммаОборотДт КАК Сумма,
	|	ХозрасчетныйОбороты.Организация КАК Организация,
	|	&ПорядокНалогНаПрибыль КАК Порядок,
	|	&ВидСтрокиНалогНаПрибыль КАК ВидСтроки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Авто,
	|			Счет В (&СчетПрибылиИУбыткиНеЕНВД),
	|			,
	|			Организация = &Организация
	|				ИЛИ &ПоВсемОрганизациям,
	|			КорСчет В (&СчетРасчетыСБюджетом),
	|			) КАК ХозрасчетныйОбороты";

	Запрос.УстановитьПараметр("СчетПрибылиИУбыткиНеЕНВД", 
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиНеЕНВД));
	Запрос.УстановитьПараметр("ВидСтрокиНалогНаПрибыль", НалогНаПрибыль.ВидСтроки);
	Запрос.УстановитьПараметр("ПорядокНалогНаПрибыль", НалогНаПрибыль.Порядок);
	
	Возврат Запрос;

КонецФункции

Функция ДополнитьТекстЗапросаПрочее(Запрос, СтруктураОтчета)
	
	ТекстЗапросаПрочее = 
	"ВЫБРАТЬ
	|	&НаименованиеПрочее КАК НаименованиеПрочее,
	|	ОборотыПрочее.ПериодМесяц КАК ПериодМесяц,
	|	"""" КАК Аналитика,
	|	ЕСТЬNULL(ОборотыПрочее.Подразделение, &ПустоеПодразделение) КАК Подразделение,
	|	ОборотыПрочее.Валюта КАК Валюта,
	|	СУММА(ОборотыПрочее.СуммаОборотКт) КАК Сумма,
	|	ОборотыПрочее.Организация КАК Организация,
	|	&ПорядокПрочее КАК ПорядокПрочее,
	|	&ВидСтрокиПрочее КАК ВидСтрокиПрочее
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Авто,
	|			Счет В ИЕРАРХИИ (&СчетаПрочиеПрибылиИУбытки),
	|			,
	|			Организация = &Организация
	|				ИЛИ &ПоВсемОрганизациям,
	|			,
	|			) КАК ОборотыПрочее
	|
	|СГРУППИРОВАТЬ ПО
	|	ОборотыПрочее.ПериодМесяц,
	|	ОборотыПрочее.Организация,
	|	ОборотыПрочее.Валюта,
	|	ЕСТЬNULL(ОборотыПрочее.Подразделение, &ПустоеПодразделение)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&НаименованиеПрочее,
	|	ОборотыПрочее.ПериодМесяц,
	|	"""",
	|	ЕСТЬNULL(ОборотыПрочее.Подразделение, &ПустоеПодразделение),
	|	ОборотыПрочее.Валюта,
	|	СУММА(-ОборотыПрочее.СуммаОборотДт),
	|	ОборотыПрочее.Организация,
	|	&ПорядокПрочее,
	|	&ВидСтрокиПрочее
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Авто,
	|			Счет В ИЕРАРХИИ (&СчетаПрочиеПрибылиИУбытки),
	|			,
	|			Организация = &Организация
	|				ИЛИ &ПоВсемОрганизациям,
	|			НЕ КорСчет В ИЕРАРХИИ (&ИсключаемыеСчетаНалоговНаПрибыль),
	|			) КАК ОборотыПрочее
	|
	|СГРУППИРОВАТЬ ПО
	|	ОборотыПрочее.ПериодМесяц,
	|	ОборотыПрочее.Организация,
	|	ОборотыПрочее.Валюта,
	|	ЕСТЬNULL(ОборотыПрочее.Подразделение, &ПустоеПодразделение)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&НаименованиеПрочее,
	|	ОборотыПрочее.ПериодМесяц,
	|	"""",
	|	ЕСТЬNULL(ОборотыПрочее.Подразделение, &ПустоеПодразделение),
	|	ОборотыПрочее.Валюта,
	|	СУММА(ОборотыПрочее.СуммаОборотДт),
	|	ОборотыПрочее.Организация,
	|	&ПорядокПрочее,
	|	&ВидСтрокиПрочее
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Авто,
	|			Счет В ИЕРАРХИИ (&СчетаПрочиеПрибылиИУбытки),
	|			,
	|			Организация = &Организация
	|				ИЛИ &ПоВсемОрганизациям,
	|			КорСчет В ИЕРАРХИИ (&СчетаКорресонденты),
	|			) КАК ОборотыПрочее
	|
	|СГРУППИРОВАТЬ ПО
	|	ОборотыПрочее.ПериодМесяц,
	|	ОборотыПрочее.Организация,
	|	ОборотыПрочее.Валюта,
	|	ЕСТЬNULL(ОборотыПрочее.Подразделение, &ПустоеПодразделение)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&НаименованиеПрочее,
	|	ОборотыПрочее.ПериодМесяц,
	|	"""",
	|	ЕСТЬNULL(ОборотыПрочее.Подразделение, &ПустоеПодразделение),
	|	ОборотыПрочее.Валюта,
	|	СУММА(-ОборотыПрочее.СуммаОборотДт),
	|	ОборотыПрочее.Организация,
	|	&ПорядокПрочее,
	|	&ВидСтрокиПрочее
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Авто,
	|			Счет В ИЕРАРХИИ (&СчетаКорресонденты),
	|			,
	|			Организация = &Организация
	|				ИЛИ &ПоВсемОрганизациям,
	|			КорСчет В ИЕРАРХИИ (&СчетаПрочиеПрибылиИУбытки),
	|			) КАК ОборотыПрочее
	|
	|СГРУППИРОВАТЬ ПО
	|	ОборотыПрочее.ПериодМесяц,
	|	ОборотыПрочее.Организация,
	|	ОборотыПрочее.Валюта,
	|	ЕСТЬNULL(ОборотыПрочее.Подразделение, &ПустоеПодразделение)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&НаименованиеПрочее,
	|	ОборотыПрочее.ПериодМесяц,
	|	"""",
	|	ЕСТЬNULL(ОборотыПрочее.Подразделение, &ПустоеПодразделение),
	|	ОборотыПрочее.Валюта,
	|	СУММА(ОборотыПрочее.СуммаОборотКт),
	|	ОборотыПрочее.Организация,
	|	&ПорядокПрочее,
	|	&ВидСтрокиПрочее
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Авто,
	|			Счет В ИЕРАРХИИ (&РасчетыПоНалогам),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет),
	|			(Организация = &Организация
	|				ИЛИ &ПоВсемОрганизациям)
	|				И Субконто1 = &РасчетыСБюджетом,
	|			КорСчет В ИЕРАРХИИ (&СчетПрибылиИУбыткиБезНалогаНаПрибыль),
	|			) КАК ОборотыПрочее
	|
	|СГРУППИРОВАТЬ ПО
	|	ОборотыПрочее.ПериодМесяц,
	|	ОборотыПрочее.Организация,
	|	ОборотыПрочее.Валюта,
	|	ЕСТЬNULL(ОборотыПрочее.Подразделение, &ПустоеПодразделение),
	|	ОборотыПрочее.СуммаОборотКт";
	
	Запрос.Текст = СтрШаблон("%1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|%2", Запрос.Текст, ТекстЗапросаПрочее);
	
	СчетаПрочиеПрибылиИУбытки = Новый Массив;
	СчетаПрочиеПрибылиИУбытки.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеПрибылиИУбытки); // 99.09
	СчетаПрочиеПрибылиИУбытки.Добавить(ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиБезНалогаНаПрибыль); // 99.01
	
	Запрос.УстановитьПараметр("СчетаПрочиеПрибылиИУбытки", СчетаПрочиеПрибылиИУбытки);
	
	ИсключаемыеСчетаНалоговНаПрибыль = Новый Массив;
	ИсключаемыеСчетаНалоговНаПрибыль.Добавить(ПланыСчетов.Хозрасчетный.НалогПриПСН);
	ИсключаемыеСчетаНалоговНаПрибыль.Добавить(ПланыСчетов.Хозрасчетный.НалогПриАУСН);
	ИсключаемыеСчетаНалоговНаПрибыль.Добавить(ПланыСчетов.Хозрасчетный.НалогНаПрофессиональныйДоход);
	ИсключаемыеСчетаНалоговНаПрибыль.Добавить(ПланыСчетов.Хозрасчетный.НалогНаПрибыль);
	ИсключаемыеСчетаНалоговНаПрибыль.Добавить(ПланыСчетов.Хозрасчетный.ЕНприУСН);
	
	Запрос.УстановитьПараметр("ИсключаемыеСчетаНалоговНаПрибыль", ИсключаемыеСчетаНалоговНаПрибыль);
	
	СчетаКорресонденты = Новый Массив;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
		СчетаКорресонденты, БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.НераспределеннаяПрибыль)); // 84
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
		СчетаКорресонденты, БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ПрибылиИУбытки)); // 99
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
		СчетаКорресонденты, БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.Продажи));  // 90
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
		СчетаКорресонденты, БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ПрочиеДоходыИРасходы)); //91
		
	Запрос.УстановитьПараметр("СчетаКорресонденты", СчетаКорресонденты);
	
	СчетПрибылиИУбыткиБезНалогаНаПрибыль = Новый Массив;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
		СчетПрибылиИУбыткиБезНалогаНаПрибыль, БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиБезНалогаНаПрибыль)); //99.01
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
		СчетПрибылиИУбыткиБезНалогаНаПрибыль, БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ПрочиеПрибылиИУбытки)); //99.09

	Запрос.УстановитьПараметр("СчетПрибылиИУбыткиБезНалогаНаПрибыль", СчетПрибылиИУбыткиБезНалогаНаПрибыль);
	
	РасчетыПоНалогам = БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыСБюджетом);
	Запрос.УстановитьПараметр("РасчетыПоНалогам", РасчетыПоНалогам);
	Запрос.УстановитьПараметр("РасчетыСБюджетом", Перечисления.ВидыПлатежейВГосБюджет.Налог);
	
	СтрокаПрочее = СтруктураОтчета.Прочее;

	Запрос.УстановитьПараметр("НаименованиеПрочее", СтрокаПрочее.Наименование);
	
	Запрос.УстановитьПараметр("ВидСтрокиПрочее", СтрокаПрочее.ВидСтроки);

	Запрос.УстановитьПараметр("ПорядокПрочее", СтрокаПрочее.Порядок);

	Возврат Запрос;
	
КонецФункции 
 
Функция РасчетныеПоказатели(ТаблицаВыручкаСебестоимость, ТаблицаРасходов, ТаблицаПрочихДоходовИРасходов,
		ТаблицаНалогНаПрибыль, СтруктураОтчета)
	
	ТаблицаРезультат = ТаблицаРезультат();
	ТаблицаРезультат.Колонки.Добавить("Выручка", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаРезультат.Колонки.Добавить("СебестоимостьПродаж", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаРезультат.Колонки.Добавить("ПрибыльУбытокОтПродаж", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаВыручкаСебестоимость.Период КАК Период,
		|	ТаблицаВыручкаСебестоимость.Показатель КАК Показатель,
		|	ТаблицаВыручкаСебестоимость.Организация КАК Организация,
		|	ТаблицаВыручкаСебестоимость.Подразделение КАК Подразделение,
		|	ТаблицаВыручкаСебестоимость.Сумма КАК Сумма,
		|	ТаблицаВыручкаСебестоимость.ВидСтроки КАК ВидСтроки,
		|	ТаблицаВыручкаСебестоимость.ПредставлениеПериода КАК ПредставлениеПериода
		|ПОМЕСТИТЬ ТаблицаВыручкаСебестоимость
		|ИЗ
		|	&ТаблицаВыручкаСебестоимость КАК ТаблицаВыручкаСебестоимость
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаРасходов.Период КАК Период,
		|	ТаблицаРасходов.Показатель КАК Показатель,
		|	ТаблицаРасходов.Организация КАК Организация,
		|	ТаблицаРасходов.Подразделение КАК Подразделение,
		|	ТаблицаРасходов.Сумма КАК Сумма,
		|	ТаблицаРасходов.ВидСтроки КАК ВидСтроки,
		|	ТаблицаРасходов.ПредставлениеПериода КАК ПредставлениеПериода
		|ПОМЕСТИТЬ ТаблицаРасходов
		|ИЗ
		|	&ТаблицаРасходов КАК ТаблицаРасходов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПрочихДоходовИРасходов.Период КАК Период,
		|	ТаблицаПрочихДоходовИРасходов.Показатель КАК Показатель,
		|	ТаблицаПрочихДоходовИРасходов.Организация КАК Организация,
		|	ТаблицаПрочихДоходовИРасходов.Подразделение КАК Подразделение,
		|	ТаблицаПрочихДоходовИРасходов.Сумма КАК Сумма,
		|	ТаблицаПрочихДоходовИРасходов.ВидСтроки КАК ВидСтроки,
		|	ТаблицаПрочихДоходовИРасходов.ПредставлениеПериода КАК ПредставлениеПериода
		|ПОМЕСТИТЬ ТаблицаПрочихДоходовИРасходов
		|ИЗ
		|	&ТаблицаПрочихДоходовИРасходов КАК ТаблицаПрочихДоходовИРасходов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаНалогНаПрибыль.Период КАК Период,
		|	ТаблицаНалогНаПрибыль.Показатель КАК Показатель,
		|	ТаблицаНалогНаПрибыль.Организация КАК Организация,
		|	ТаблицаНалогНаПрибыль.Подразделение КАК Подразделение,
		|	ТаблицаНалогНаПрибыль.Сумма КАК Сумма,
		|	ТаблицаНалогНаПрибыль.ВидСтроки КАК ВидСтроки,
		|	ТаблицаНалогНаПрибыль.ПредставлениеПериода КАК ПредставлениеПериода
		|ПОМЕСТИТЬ ТаблицаНалогНаПрибыль
		|ИЗ
		|	&ТаблицаНалогНаПрибыль КАК ТаблицаНалогНаПрибыль
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДляРасчета.Период КАК Период,
		|	ДанныеДляРасчета.Организация КАК Организация,
		|	ДанныеДляРасчета.Подразделение КАК Подразделение,
		|	СУММА(ДанныеДляРасчета.ВаловаяПрибыль) КАК ВаловаяПрибыль,
		|	СУММА(ДанныеДляРасчета.КоммерческиеРасходы) КАК КоммерческиеРасходы,
		|	СУММА(ДанныеДляРасчета.УправленческиеРасходы) КАК УправленческиеРасходы,
		|	СУММА(ДанныеДляРасчета.ПрочиеДоходы) КАК ПрочиеДоходы,
		|	СУММА(ДанныеДляРасчета.ПрочиеРасходы) КАК ПрочиеРасходы,
		|	СУММА(ДанныеДляРасчета.ПроцентыКПолучению) КАК ПроцентыКПолучению,
		|	СУММА(ДанныеДляРасчета.ПроцентыКУплате) КАК ПроцентыКУплате,
		|	СУММА(ДанныеДляРасчета.ВсегоДоходов) КАК ВсегоДоходов,
		|	СУММА(ДанныеДляРасчета.ВсегоРасходов) КАК ВсегоРасходов,
		|	ДанныеДляРасчета.ДоходыОтУчастияВДругихОрганизациях КАК ДоходыОтУчастияВДругихОрганизациях,
		|	ДанныеДляРасчета.ПредставлениеПериода КАК ПредставлениеПериода,
		|	СУММА(ДанныеДляРасчета.НалогНаПрибыль) КАК НалогНаПрибыль,
		|	СУММА(ДанныеДляРасчета.Прочее) КАК Прочее,
		|	СУММА(ДанныеДляРасчета.СебестоимостьПродаж) КАК СебестоимостьПродаж,
		|	СУММА(ДанныеДляРасчета.Выручка) КАК Выручка
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаВыручкаСебестоимость.Период КАК Период,
		|		ТаблицаВыручкаСебестоимость.Показатель КАК Показатель,
		|		ТаблицаВыручкаСебестоимость.Организация КАК Организация,
		|		ТаблицаВыручкаСебестоимость.Подразделение КАК Подразделение,
		|		ВЫБОР
		|			КОГДА ТаблицаВыручкаСебестоимость.Показатель = &НаименованиеВаловаяПрибыль
		|				ТОГДА ТаблицаВыручкаСебестоимость.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ВаловаяПрибыль,
		|		0 КАК КоммерческиеРасходы,
		|		0 КАК УправленческиеРасходы,
		|		0 КАК ПрочиеДоходы,
		|		0 КАК ПрочиеРасходы,
		|		0 КАК ПроцентыКПолучению,
		|		0 КАК ПроцентыКУплате,
		|		0 КАК ВсегоДоходов,
		|		0 КАК ВсегоРасходов,
		|		0 КАК ДоходыОтУчастияВДругихОрганизациях,
		|		ТаблицаВыручкаСебестоимость.ПредставлениеПериода КАК ПредставлениеПериода,
		|		0 КАК НалогНаПрибыль,
		|		0 КАК Прочее,
		|		0 КАК СебестоимостьПродаж,
		|		ВЫБОР
		|			КОГДА ТаблицаВыручкаСебестоимость.Показатель = &НаименованиеВыручка
		|				ТОГДА ТаблицаВыручкаСебестоимость.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК Выручка
		|	ИЗ
		|		ТаблицаВыручкаСебестоимость КАК ТаблицаВыручкаСебестоимость
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаРасходов.Период,
		|		ТаблицаРасходов.Показатель,
		|		ТаблицаРасходов.Организация,
		|		ТаблицаРасходов.Подразделение,
		|		0,
		|		ВЫБОР
		|			КОГДА ТаблицаРасходов.Показатель = &НаименованиеКоммерческиеРасходы
		|				ТОГДА ТаблицаРасходов.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ТаблицаРасходов.Показатель = &НаименованиеУправленческиеРасходы
		|				ТОГДА ТаблицаРасходов.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		ТаблицаРасходов.ПредставлениеПериода,
		|		0,
		|		0,
		|		ТаблицаРасходов.Сумма,
		|		0
		|	ИЗ
		|		ТаблицаРасходов КАК ТаблицаРасходов
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаПрочихДоходовИРасходов.Период,
		|		ТаблицаПрочихДоходовИРасходов.Показатель,
		|		ТаблицаПрочихДоходовИРасходов.Организация,
		|		ТаблицаПрочихДоходовИРасходов.Подразделение,
		|		0,
		|		0,
		|		0,
		|		ВЫБОР
		|			КОГДА ТаблицаПрочихДоходовИРасходов.Показатель = &НаименованиеПрочиеДоходы
		|				ТОГДА ТаблицаПрочихДоходовИРасходов.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ТаблицаПрочихДоходовИРасходов.Показатель = &НаименованиеПрочиеРасходы
		|				ТОГДА ТаблицаПрочихДоходовИРасходов.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ТаблицаПрочихДоходовИРасходов.Показатель = &НаименованиеПроцентыКПолучению
		|				ТОГДА ТаблицаПрочихДоходовИРасходов.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ТаблицаПрочихДоходовИРасходов.Показатель = &НаименованиеПроцентыКУплате
		|				ТОГДА ТаблицаПрочихДоходовИРасходов.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		0,
		|		0,
		|		0,
		|		ТаблицаПрочихДоходовИРасходов.ПредставлениеПериода,
		|		0,
		|		0,
		|		0,
		|		0
		|	ИЗ
		|		ТаблицаПрочихДоходовИРасходов КАК ТаблицаПрочихДоходовИРасходов
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаВыручкаСебестоимость.Период,
		|		&НаименованиеВсегоДоходов,
		|		ТаблицаВыручкаСебестоимость.Организация,
		|		ТаблицаВыручкаСебестоимость.Подразделение,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		ВЫБОР
		|			КОГДА ТаблицаВыручкаСебестоимость.ВидСтроки = &ВидСтрокиДоход
		|				ТОГДА ТаблицаВыручкаСебестоимость.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		0,
		|		0,
		|		ТаблицаВыручкаСебестоимость.ПредставлениеПериода,
		|		0,
		|		0,
		|		0,
		|		0
		|	ИЗ
		|		ТаблицаВыручкаСебестоимость КАК ТаблицаВыручкаСебестоимость
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаРасходов.Период,
		|		&НаименованиеВсегоРасходов,
		|		ТаблицаРасходов.Организация,
		|		ТаблицаРасходов.Подразделение,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		ВЫБОР
		|			КОГДА ТаблицаРасходов.ВидСтроки = &ВидСтрокиРасход
		|				ТОГДА ТаблицаРасходов.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		0,
		|		ТаблицаРасходов.ПредставлениеПериода,
		|		0,
		|		0,
		|		0,
		|		0
		|	ИЗ
		|		ТаблицаРасходов КАК ТаблицаРасходов
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаПрочихДоходовИРасходов.Период,
		|		&НаименованиеВсегоДоходов,
		|		ТаблицаПрочихДоходовИРасходов.Организация,
		|		ТаблицаПрочихДоходовИРасходов.Подразделение,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		ВЫБОР
		|			КОГДА ТаблицаПрочихДоходовИРасходов.ВидСтроки = &ВидСтрокиДоход
		|				ТОГДА ТаблицаПрочихДоходовИРасходов.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		0,
		|		0,
		|		ТаблицаПрочихДоходовИРасходов.ПредставлениеПериода,
		|		0,
		|		0,
		|		0,
		|		0
		|	ИЗ
		|		ТаблицаПрочихДоходовИРасходов КАК ТаблицаПрочихДоходовИРасходов
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаВыручкаСебестоимость.Период,
		|		&НаименованиеВсегоРасходов,
		|		ТаблицаВыручкаСебестоимость.Организация,
		|		ТаблицаВыручкаСебестоимость.Подразделение,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		ВЫБОР
		|			КОГДА ТаблицаВыручкаСебестоимость.ВидСтроки = &ВидСтрокиРасход
		|				ТОГДА ТаблицаВыручкаСебестоимость.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		0,
		|		ТаблицаВыручкаСебестоимость.ПредставлениеПериода,
		|		0,
		|		0,
		|		0,
		|		0
		|	ИЗ
		|		ТаблицаВыручкаСебестоимость КАК ТаблицаВыручкаСебестоимость
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаПрочихДоходовИРасходов.Период,
		|		&НаименованиеВсегоРасходов,
		|		ТаблицаПрочихДоходовИРасходов.Организация,
		|		ТаблицаПрочихДоходовИРасходов.Подразделение,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		ВЫБОР
		|			КОГДА ТаблицаПрочихДоходовИРасходов.ВидСтроки = &ВидСтрокиРасход
		|				ТОГДА ТаблицаПрочихДоходовИРасходов.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		0,
		|		ТаблицаПрочихДоходовИРасходов.ПредставлениеПериода,
		|		0,
		|		0,
		|		0,
		|		0
		|	ИЗ
		|		ТаблицаПрочихДоходовИРасходов КАК ТаблицаПрочихДоходовИРасходов
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаНалогНаПрибыль.Период,
		|		&НаименованиеВсегоРасходов,
		|		ТаблицаНалогНаПрибыль.Организация,
		|		ТаблицаНалогНаПрибыль.Подразделение,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		ТаблицаНалогНаПрибыль.Сумма,
		|		0,
		|		ТаблицаНалогНаПрибыль.ПредставлениеПериода,
		|		0,
		|		0,
		|		0,
		|		0
		|	ИЗ
		|		ТаблицаНалогНаПрибыль КАК ТаблицаНалогНаПрибыль
		|	ГДЕ
		|		ТаблицаНалогНаПрибыль.ВидСтроки < &ВидСтрокиВсегоДоходов
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаПрочихДоходовИРасходов.Период,
		|		ТаблицаПрочихДоходовИРасходов.Показатель,
		|		ТаблицаПрочихДоходовИРасходов.Организация,
		|		ТаблицаПрочихДоходовИРасходов.Подразделение,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		ВЫБОР
		|			КОГДА ТаблицаПрочихДоходовИРасходов.Показатель = &НаименованиеДоходыОтУчастияВДругихОрганизациях
		|				ТОГДА ТаблицаПрочихДоходовИРасходов.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ТаблицаПрочихДоходовИРасходов.ПредставлениеПериода,
		|		0,
		|		0,
		|		0,
		|		0
		|	ИЗ
		|		ТаблицаПрочихДоходовИРасходов КАК ТаблицаПрочихДоходовИРасходов
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаНалогНаПрибыль.Период,
		|		ТаблицаНалогНаПрибыль.Показатель,
		|		ТаблицаНалогНаПрибыль.Организация,
		|		ТаблицаНалогНаПрибыль.Подразделение,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		ТаблицаНалогНаПрибыль.ПредставлениеПериода,
		|		ТаблицаНалогНаПрибыль.Сумма,
		|		0,
		|		0,
		|		0
		|	ИЗ
		|		ТаблицаНалогНаПрибыль КАК ТаблицаНалогНаПрибыль
		|	ГДЕ
		|		ТаблицаНалогНаПрибыль.ВидСтроки < &ВидСтрокиВсегоДоходов
		|		И ТаблицаНалогНаПрибыль.Показатель = &НаименованиеНалогНаПрибыль
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаНалогНаПрибыль.Период,
		|		ТаблицаНалогНаПрибыль.Показатель,
		|		ТаблицаНалогНаПрибыль.Организация,
		|		ТаблицаНалогНаПрибыль.Подразделение,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		ТаблицаНалогНаПрибыль.ПредставлениеПериода,
		|		0,
		|		ТаблицаНалогНаПрибыль.Сумма,
		|		0,
		|		0
		|	ИЗ
		|		ТаблицаНалогНаПрибыль КАК ТаблицаНалогНаПрибыль
		|	ГДЕ
		|		ТаблицаНалогНаПрибыль.ВидСтроки = &ВидСтрокиРасход
		|		И ТаблицаНалогНаПрибыль.Показатель = &НаименованиеПрочее
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаВыручкаСебестоимость.Период,
		|		ТаблицаВыручкаСебестоимость.Показатель,
		|		ТаблицаВыручкаСебестоимость.Организация,
		|		ТаблицаВыручкаСебестоимость.Подразделение,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		0,
		|		ТаблицаВыручкаСебестоимость.ПредставлениеПериода,
		|		0,
		|		0,
		|		ВЫБОР
		|			КОГДА ТаблицаВыручкаСебестоимость.Показатель = &НаименованиеСебестоимость
		|				ТОГДА ТаблицаВыручкаСебестоимость.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		0
		|	ИЗ
		|		ТаблицаВыручкаСебестоимость КАК ТаблицаВыручкаСебестоимость) КАК ДанныеДляРасчета
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДляРасчета.Организация,
		|	ДанныеДляРасчета.Период,
		|	ДанныеДляРасчета.ДоходыОтУчастияВДругихОрганизациях,
		|	ДанныеДляРасчета.ПредставлениеПериода,
		|	ДанныеДляРасчета.Подразделение";
	
	Запрос.УстановитьПараметр("ТаблицаВыручкаСебестоимость", ТаблицаВыручкаСебестоимость);
	Запрос.УстановитьПараметр("ТаблицаРасходов", ТаблицаРасходов);
	Запрос.УстановитьПараметр("ТаблицаПрочихДоходовИРасходов", ТаблицаПрочихДоходовИРасходов);
	Запрос.УстановитьПараметр("ТаблицаНалогНаПрибыль", ТаблицаНалогНаПрибыль);
	Запрос.УстановитьПараметр("ПустоеПодразделение", Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
	
	ВидСтроки = ВидСтроки();
	Запрос.УстановитьПараметр("ВидСтрокиДоход", ВидСтроки.Доход);
	Запрос.УстановитьПараметр("ВидСтрокиРасход", ВидСтроки.Расход);
	Запрос.УстановитьПараметр("ВидСтрокиВсегоДоходов", ВидСтроки.ВсегоДоходов);
	
	Выручка = СтруктураОтчета.Выручка;
	ВаловаяПрибыль = СтруктураОтчета.ВаловаяПрибыль;
	ВсегоДоходов = СтруктураОтчета.ВсегоДоходов;
	ВсегоРасходов = СтруктураОтчета.ВсегоРасходов;
	ДоходыОтУчастияВДругихОрганизациях = СтруктураОтчета.ДоходыОтУчастияВДругихОрганизациях;
	КоммерческиеРасходы = СтруктураОтчета.КоммерческиеРасходы;
	НалогНаПрибыль = СтруктураОтчета.НалогНаПрибыль;
	ПроцентыКПолучению = СтруктураОтчета.ПроцентыКПолучению;
	ПроцентыКУплате = СтруктураОтчета.ПроцентыКУплате;
	Прочее = СтруктураОтчета.Прочее;
	ПрочиеДоходы = СтруктураОтчета.ПрочиеДоходы;
	ПрочиеРасходы = СтруктураОтчета.ПрочиеРасходы;
	УправленческиеРасходы = СтруктураОтчета.УправленческиеРасходы;
	Себестоимость = СтруктураОтчета.Себестоимость;
	
	Запрос.УстановитьПараметр("НаименованиеВыручка", Выручка.Наименование);
	Запрос.УстановитьПараметр("НаименованиеВаловаяПрибыль", ВаловаяПрибыль.Наименование);
	Запрос.УстановитьПараметр("НаименованиеВсегоДоходов", ВсегоДоходов.Наименование);
	Запрос.УстановитьПараметр("НаименованиеВсегоРасходов", ВсегоРасходов.Наименование);
	Запрос.УстановитьПараметр("НаименованиеДоходыОтУчастияВДругихОрганизациях",
		ДоходыОтУчастияВДругихОрганизациях.Наименование);
	Запрос.УстановитьПараметр("НаименованиеКоммерческиеРасходы", КоммерческиеРасходы.Наименование);
	Запрос.УстановитьПараметр("НаименованиеНалогНаПрибыль", НалогНаПрибыль.Наименование);
	Запрос.УстановитьПараметр("НаименованиеПроцентыКПолучению", ПроцентыКПолучению.Наименование);
	Запрос.УстановитьПараметр("НаименованиеПроцентыКУплате", ПроцентыКУплате.Наименование);
	Запрос.УстановитьПараметр("НаименованиеПрочее", Прочее.Наименование);
	Запрос.УстановитьПараметр("НаименованиеПрочиеДоходы", ПрочиеДоходы.Наименование);
	Запрос.УстановитьПараметр("НаименованиеПрочиеРасходы", ПрочиеРасходы.Наименование);
	Запрос.УстановитьПараметр("НаименованиеУправленческиеРасходы", УправленческиеРасходы.Наименование);
	Запрос.УстановитьПараметр("НаименованиеСебестоимость", Себестоимость.Наименование);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	ПрибыльУбытокОтПродаж = СтруктураОтчета.ПрибыльУбытокОтПродаж;
	ПрибыльУбытокДоНалогообложения = СтруктураОтчета.ПрибыльУбытокДоНалогообложения;
	ЧистаяПрибыль = СтруктураОтчета.ЧистаяПрибыль;
	ВсегоДоходов = СтруктураОтчета.ВсегоДоходов;
	ВсегоРасходов = СтруктураОтчета.ВсегоРасходов;
	
	// Служебная таблица результата
	ТаблицаРезультатРентабельностьПродаж = ТаблицаРезультат();
	Пока Выборка.Следующий() Цикл
		
		// Прибыль (убыток) от продаж
		СтрокаПрибыльУбытокОтПродаж = ТаблицаРезультат.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПрибыльУбытокОтПродаж, Выборка);
		СтрокаПрибыльУбытокОтПродаж.Сумма = Выборка.ВаловаяПрибыль + Выборка.КоммерческиеРасходы + Выборка.УправленческиеРасходы;
		
		// Себестоимость продаж
		СтрокаСебестоимостьПродаж = ТаблицаРезультатРентабельностьПродаж.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСебестоимостьПродаж, Выборка);
		СтрокаСебестоимостьПродаж.Показатель = "СебестоимостьПродаж";
		СтрокаСебестоимостьПродаж.Сумма = -Выборка.СебестоимостьПродаж;  
		
		// Выручка
		СтрокаВыручка = ТаблицаРезультатРентабельностьПродаж.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаВыручка, Выборка);
		СтрокаВыручка.Показатель = "Выручка";
		СтрокаВыручка.Сумма = Выборка.Выручка;

		
		// Прибыль (убыток) от продаж служебный
		СтрокаПрибыльУбытокОтПродажСлужебный = ТаблицаРезультатРентабельностьПродаж.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПрибыльУбытокОтПродажСлужебный, Выборка);
		СтрокаПрибыльУбытокОтПродажСлужебный.Показатель = "ПрибыльУбытокОтПродаж";
		СтрокаПрибыльУбытокОтПродажСлужебный.Сумма = СтрокаПрибыльУбытокОтПродаж.Сумма;
		
		СтрокаПрибыльУбытокОтПродаж.Сумма = Выборка.ВаловаяПрибыль + Выборка.КоммерческиеРасходы + Выборка.УправленческиеРасходы;

		ЗаполнитьСтроку(СтрокаПрибыльУбытокОтПродаж, ПрибыльУбытокОтПродаж);
		
		// Прибыль (убыток) до налогообложения
		СтрокаПрибыльУбытокДоНалогов = ТаблицаРезультат.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПрибыльУбытокДоНалогов, Выборка);
		
		ЗаполнитьСтроку(СтрокаПрибыльУбытокДоНалогов, ПрибыльУбытокДоНалогообложения);

		СтрокаПрибыльУбытокДоНалогов.Сумма = Выборка.ВаловаяПрибыль
			+ Выборка.КоммерческиеРасходы
			+ Выборка.УправленческиеРасходы
			+ Выборка.ПрочиеРасходы
			+ Выборка.ПроцентыКУплате
			+ Выборка.ПрочиеДоходы
			+ Выборка.ПроцентыКПолучению
			+ Выборка.ДоходыОтУчастияВДругихОрганизациях;
			
		// Чистая прибыль
		СтрокаЧистаяПрибыль = ТаблицаРезультат.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаЧистаяПрибыль, Выборка);
		СтрокаЧистаяПрибыль.Сумма = СтрокаПрибыльУбытокДоНалогов.Сумма + Выборка.НалогНаПрибыль 
			+ Выборка.Прочее;
			
		ЗаполнитьСтроку(СтрокаЧистаяПрибыль, ЧистаяПрибыль);
		
		// Всего доходов
		СтрокаВсегоДоходов = ТаблицаРезультат.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаВсегоДоходов, Выборка);
		СтрокаВсегоДоходов.Сумма = Выборка.ВсегоДоходов;

		ЗаполнитьСтроку(СтрокаВсегоДоходов, ВсегоДоходов);
		
		// Всего расходов
		СтрокаВсегоРасходов = ТаблицаРезультат.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаВсегоРасходов, Выборка);
		СтрокаВсегоРасходов.Сумма = Выборка.ВсегоРасходов;
		
		ЗаполнитьСтроку(СтрокаВсегоРасходов, ВсегоРасходов);
		
	КонецЦикла;
	РентабельностьПродаж = СтруктураОтчета.РентабельностьПродаж;
	РассчитатьРентабельностьПродаж(ТаблицаРезультатРентабельностьПродаж, ТаблицаРезультат, РентабельностьПродаж);
	
	Возврат ТаблицаРезультат;
	
КонецФункции

Функция РассчитатьРентабельностьПродаж(СлужебнаяТаблица, ТаблицаРезультат, РентабельностьПродаж)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СлужебнаяТаблица.Период КАК Период,
		|	СлужебнаяТаблица.Показатель КАК Показатель,
		|	СлужебнаяТаблица.Организация КАК Организация,
		|	СлужебнаяТаблица.Подразделение КАК Подразделение,
		|	СлужебнаяТаблица.Сумма КАК Сумма,
		|	СлужебнаяТаблица.ВидСтроки КАК ВидСтроки,
		|	СлужебнаяТаблица.ПредставлениеПериода КАК ПредставлениеПериода
		|ПОМЕСТИТЬ СлужебнаяТаблица
		|ИЗ
		|	&СлужебнаяТаблица КАК СлужебнаяТаблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДляРасчета.Период КАК Период,
		|	ДанныеДляРасчета.Показатель КАК Показатель,
		|	ДанныеДляРасчета.Организация КАК Организация,
		|	ДанныеДляРасчета.Подразделение КАК Подразделение,
		|	ВЫБОР
		|		КОГДА ДанныеДляРасчета.Выручка = 0
		|			ТОГДА 0
		|		ИНАЧЕ ДанныеДляРасчета.ПрибыльУбытокОтПродаж / ДанныеДляРасчета.Выручка * 100
		|	КОНЕЦ КАК Сумма,
		|	ДанныеДляРасчета.Выручка КАК Выручка,
		|	ДанныеДляРасчета.ПрибыльУбытокОтПродаж КАК ПрибыльУбытокОтПродаж,
		|	ДанныеДляРасчета.ПредставлениеПериода КАК ПредставлениеПериода
		|ИЗ
		|	(ВЫБРАТЬ
		|		СлужебнаяТаблица.Период КАК Период,
		|		&НаименованиеРентабельностьПродаж КАК Показатель,
		|		СлужебнаяТаблица.Организация КАК Организация,
		|		СлужебнаяТаблица.Подразделение КАК Подразделение,
		|		СУММА(ВЫБОР
		|				КОГДА СлужебнаяТаблица.Показатель = ""Выручка""
		|					ТОГДА СлужебнаяТаблица.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК Выручка,
		|		СУММА(ВЫБОР
		|				КОГДА СлужебнаяТаблица.Показатель = ""ПрибыльУбытокОтПродаж""
		|					ТОГДА СлужебнаяТаблица.Сумма
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК ПрибыльУбытокОтПродаж,
		|		СлужебнаяТаблица.ПредставлениеПериода КАК ПредставлениеПериода,
		|		СлужебнаяТаблица.ВидСтроки КАК ВидСтроки
		|	ИЗ
		|		СлужебнаяТаблица КАК СлужебнаяТаблица
		|	
		|	СГРУППИРОВАТЬ ПО
		|		СлужебнаяТаблица.Организация,
		|		СлужебнаяТаблица.Период,
		|		СлужебнаяТаблица.Подразделение,
		|		СлужебнаяТаблица.ПредставлениеПериода,
		|		СлужебнаяТаблица.ВидСтроки) КАК ДанныеДляРасчета";
	
	Запрос.УстановитьПараметр("СлужебнаяТаблица", СлужебнаяТаблица);

	Запрос.УстановитьПараметр("НаименованиеРентабельностьПродаж", РентабельностьПродаж.Наименование);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл

		СтрокаРентабельностьПродаж = ТаблицаРезультат.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаРентабельностьПродаж, Выборка);
		ЗаполнитьСтроку(СтрокаРентабельностьПродаж, РентабельностьПродаж);

	КонецЦикла;

	Возврат ТаблицаРезультат;
КонецФункции

Функция ТаблицаРезультат()
	
	ТаблицаРезультат = Новый ТаблицаЗначений;
	ТаблицаРезультат.Колонки.Добавить("Идентификатор", ОбщегоНазначения.ОписаниеТипаСтрока(50));
	ТаблицаРезультат.Колонки.Добавить("Показатель", ОбщегоНазначения.ОписаниеТипаСтрока(50));
	ТаблицаРезультат.Колонки.Добавить("Период", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ТаблицаРезультат.Колонки.Добавить("ПредставлениеПериода", ОбщегоНазначения.ОписаниеТипаСтрока(50));

	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Строка"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Контрагенты"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Номенклатура")); 
	МассивТипов.Добавить(Тип("СправочникСсылка.НоменклатурныеГруппы"));
	МассивТипов.Добавить(Тип("СправочникСсылка.ПрочиеДоходыИРасходы"));
	МассивТипов.Добавить(Тип("СправочникСсылка.СтатьиЗатрат"));
	МассивТипов.Добавить(Тип("СправочникСсылка.СтатьиДвиженияДенежныхСредств"));

	ТаблицаРезультат.Колонки.Добавить("Аналитика", Новый ОписаниеТипов(МассивТипов));
	ТаблицаРезультат.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));   
	
	МассивТипов.Очистить();
	МассивТипов.Добавить(Тип("Строка"));
	МассивТипов.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));
	ТаблицаРезультат.Колонки.Добавить("Подразделение", Новый ОписаниеТипов(МассивТипов, , , , Новый КвалификаторыСтроки(5)));
	ТаблицаРезультат.Колонки.Добавить("Счет", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаРезультат.Колонки.Добавить("Валюта", Новый ОписаниеТипов("СправочникСсылка.Валюты"));
	ТаблицаРезультат.Колонки.Добавить("Порядок", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
	ТаблицаРезультат.Колонки.Добавить("Сумма", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));

	ТаблицаРезультат.Колонки.Добавить("ВидСтроки", ОбщегоНазначения.ОписаниеТипаЧисло(1, 0));
	
	Возврат ТаблицаРезультат;
	
КонецФункции

Функция СчетаУчетаТоваров()
	
	Счета_1011 = БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.СпецоснасткаИСпецодеждаВЭксплуатации);
	СчетаИсключаемые = ОбщегоНазначенияКлиентСервер.СкопироватьМассив(Счета_1011);
	СчетаИсключаемые.Добавить(ПланыСчетов.Хозрасчетный.МатериалыПереданныеВПереработку);            // 10.07
	СчетаИсключаемые.Добавить(ПланыСчетов.Хозрасчетный.ТоварыВРозничнойТорговлеВПродажныхЦенахНТТ); // 41.12
	СчетаИсключаемые.Добавить(ПланыСчетов.Хозрасчетный.КорректировкаТоваровПрошлогоПериода);        // 41.К
	
	СчетаИсключаемые = БухгалтерскийУчет.СформироватьМассивСубсчетов(СчетаИсключаемые);
	
	СчетаУчетаТоваров = БухгалтерскиеОтчеты.СчетаУчетаТоваров(СчетаИсключаемые);
	
	СчетаСПартионнымУчетом            = Новый Массив;
	СчетаБезПартионногоУчета          = Новый Массив;
	СчетаСПартионнымУчетомБезСклада   = Новый Массив;
	СчетаБезПартионногоУчетаБезСклада = Новый Массив;
	
	Для Каждого Счет Из СчетаУчетаТоваров Цикл
		Если БухгалтерскийУчет.НаСчетеВедетсяПартионныйУчет(Счет) Тогда
			Если БухгалтерскийУчет.ВедетсяУчетПоСкладам(Счет) Тогда
				СчетаСПартионнымУчетом.Добавить(Счет);
			Иначе
				СчетаСПартионнымУчетомБезСклада.Добавить(Счет);
			КонецЕсли;
		Иначе
			Если БухгалтерскийУчет.ВедетсяУчетПоСкладам(Счет) Тогда
				СчетаБезПартионногоУчета.Добавить(Счет);
			Иначе
				СчетаБезПартионногоУчетаБезСклада.Добавить(Счет);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Результат = Новый Структура;
	Результат.Вставить("СчетаСПартионнымУчетом",            СчетаСПартионнымУчетом);
	Результат.Вставить("СчетаБезПартионногоУчета",          СчетаБезПартионногоУчета);
	Результат.Вставить("СчетаСПартионнымУчетомБезСклада",   СчетаСПартионнымУчетомБезСклада);
	Результат.Вставить("СчетаБезПартионногоУчетаБезСклада", СчетаБезПартионногоУчетаБезСклада);
	
	Возврат Результат;
	
КонецФункции

Функция СчетаУчетаТорговойНаценки()
	
	СчетаУчета = БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ТорговаяНаценка);

	СчетаСПартионнымУчетом            = Новый Массив;
	СчетаБезПартионногоУчета          = Новый Массив;
	СчетаСПартионнымУчетомБезСклада   = Новый Массив;
	СчетаБезПартионногоУчетаБезСклада = Новый Массив;
	
	Для Каждого Счет Из СчетаУчета Цикл
		Если БухгалтерскийУчет.НаСчетеВедетсяПартионныйУчет(Счет) Тогда
			Если БухгалтерскийУчет.ВедетсяУчетПоСкладам(Счет) Тогда
				СчетаСПартионнымУчетом.Добавить(Счет);
			Иначе
				СчетаСПартионнымУчетомБезСклада.Добавить(Счет);
			КонецЕсли;
		Иначе
			Если БухгалтерскийУчет.ВедетсяУчетПоСкладам(Счет) Тогда
				СчетаБезПартионногоУчета.Добавить(Счет);
			Иначе
				СчетаБезПартионногоУчетаБезСклада.Добавить(Счет);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Результат = Новый Структура;
	Результат.Вставить("СчетаСПартионнымУчетом",            СчетаСПартионнымУчетом);
	Результат.Вставить("СчетаБезПартионногоУчета",          СчетаБезПартионногоУчета);
	Результат.Вставить("СчетаСПартионнымУчетомБезСклада",   СчетаСПартионнымУчетомБезСклада);
	Результат.Вставить("СчетаБезПартионногоУчетаБезСклада", СчетаБезПартионногоУчетаБезСклада);
	
	Возврат Результат;
	
КонецФункции

Функция ВидСтроки()
	
	ВидСтроки = Новый Структура;
	ВидСтроки.Вставить("Доход",               1);
	ВидСтроки.Вставить("Расход",              2);
	ВидСтроки.Вставить("РасчетныйПоказатель", 3);
	ВидСтроки.Вставить("ВсегоДоходов",        4);
	ВидСтроки.Вставить("ВсегоРасходов",       5);
	ВидСтроки.Вставить("Информация",          6);
	
	Возврат ВидСтроки;
	
КонецФункции

Функция ПорядокСтрок()
	
	ПорядокСтрок = Новый Структура;
	ПорядокСтрок.Вставить("Выручка",                                  1);
	ПорядокСтрок.Вставить("Себестоимость",                            2);
	ПорядокСтрок.Вставить("ВаловаяПрибыль",                           3);
	ПорядокСтрок.Вставить("КоммерческиеРасходы",                      4);
	ПорядокСтрок.Вставить("УправленческиеРасходы",                    5);
	ПорядокСтрок.Вставить("ПрибыльУбытокОтПродаж",                    6);
	ПорядокСтрок.Вставить("РентабельностьПродаж",                     7);
	ПорядокСтрок.Вставить("ДоходыОтУчастияВДругихОрганизациях",       8);
	ПорядокСтрок.Вставить("ПроцентыКПолучению",                       9);
	ПорядокСтрок.Вставить("ПроцентыКУплате",                          10);
	ПорядокСтрок.Вставить("ПрочиеДоходы",                             11);
	ПорядокСтрок.Вставить("ПрочиеРасходы",                            12);
	ПорядокСтрок.Вставить("ПрибыльУбытокДоНалогообложения",           13);
	ПорядокСтрок.Вставить("НалогНаПрибыль",                           14);
	ПорядокСтрок.Вставить("ИзменениеОтложенныхНалоговыхОбязательств", 15);
	ПорядокСтрок.Вставить("Прочее",                                   16);
	ПорядокСтрок.Вставить("ЧистаяПрибыль",                            17);
	ПорядокСтрок.Вставить("ВсегоДоходов",                             18);
	ПорядокСтрок.Вставить("ВсегоРасходов",                            19);
	
	Возврат ПорядокСтрок;
	
КонецФункции

Функция СтруктураОтчета()
	
	ВидСтроки = ВидСтроки();
	
	СтруктураОтчета = Новый Структура;
	НоваяСтрокаОтчета(СтруктураОтчета, "Выручка", "Выручка", ВидСтроки.Доход);
	НоваяСтрокаОтчета(СтруктураОтчета, "Себестоимость", "Себестоимость", ВидСтроки.Расход);
	НоваяСтрокаОтчета(СтруктураОтчета, "ВаловаяПрибыль", "Валовая прибыль", ВидСтроки.РасчетныйПоказатель);
	НоваяСтрокаОтчета(СтруктураОтчета, "РентабельностьПродаж", "Рентабельность продаж", ВидСтроки.РасчетныйПоказатель);
	НоваяСтрокаОтчета(СтруктураОтчета, "КоммерческиеРасходы", "Коммерческие расходы", ВидСтроки.Расход);
	НоваяСтрокаОтчета(СтруктураОтчета, "УправленческиеРасходы", "Управленческие расходы", ВидСтроки.Расход);
	НоваяСтрокаОтчета(СтруктураОтчета, "ПрибыльУбытокОтПродаж", "Прибыль (убыток) от продаж", ВидСтроки.РасчетныйПоказатель);
	НоваяСтрокаОтчета(СтруктураОтчета, "ДоходыОтУчастияВДругихОрганизациях",
		"Доходы от участия в других организациях", ВидСтроки.Доход);
	НоваяСтрокаОтчета(СтруктураОтчета, "ПроцентыКПолучению", "Проценты к получению", ВидСтроки.Доход);
	НоваяСтрокаОтчета(СтруктураОтчета, "ПроцентыКУплате", "Проценты к уплате", ВидСтроки.Расход);
	НоваяСтрокаОтчета(СтруктураОтчета, "ПрочиеДоходы", "Прочие доходы", ВидСтроки.Доход);
	НоваяСтрокаОтчета(СтруктураОтчета, "ПрочиеРасходы", "Прочие расходы", ВидСтроки.Расход);
	НоваяСтрокаОтчета(СтруктураОтчета, "ПрибыльУбытокДоНалогообложения", 
		"Прибыль (убыток) до налогообложения", ВидСтроки.РасчетныйПоказатель);
	НоваяСтрокаОтчета(СтруктураОтчета, "НалогНаПрибыль", "Налог на прибыль", ВидСтроки.Расход);
	НоваяСтрокаОтчета(СтруктураОтчета, "ИзменениеОтложенныхНалоговыхОбязательств", 
		"Изменение отложенных налоговых обязательств", ВидСтроки.Информация);
	НоваяСтрокаОтчета(СтруктураОтчета, "Прочее", "Прочее", ВидСтроки.Расход);
	НоваяСтрокаОтчета(СтруктураОтчета, "ЧистаяПрибыль", "Чистая прибыль", ВидСтроки.РасчетныйПоказатель);
	НоваяСтрокаОтчета(СтруктураОтчета, "ВсегоДоходов", "Всего доходов", ВидСтроки.ВсегоДоходов);
	НоваяСтрокаОтчета(СтруктураОтчета, "ВсегоРасходов", "Всего расходов", ВидСтроки.ВсегоРасходов);
	
	Возврат СтруктураОтчета;
	
КонецФункции

Процедура НоваяСтрокаОтчета(СтруктураОтчета, Идентификатор, Наименование, ВидСтроки)
	
	ПорядокСтрок = ПорядокСтрок();
	
	СтрокаОтчета = Новый Структура;
	СтрокаОтчета.Вставить("Наименование", СтрШаблон(НСтр("ru='%1'"), Наименование));
	СтрокаОтчета.Вставить("Порядок", ПорядокСтрок[Идентификатор]);
	СтрокаОтчета.Вставить("ВидСтроки", ВидСтроки);
	
	СтруктураОтчета.Вставить(Идентификатор, СтрокаОтчета);
	
КонецПроцедуры

Процедура ЗаполнитьСтроку(СтрокаОтчета, ДанныеСтроки, ПредставлениеПериода = Неопределено)
	
	СтрокаОтчета.Показатель = ДанныеСтроки.Наименование;
	СтрокаОтчета.ВидСтроки = ДанныеСтроки.ВидСтроки;
	СтрокаОтчета.Порядок = ДанныеСтроки.Порядок;
	Если ПредставлениеПериода <> Неопределено Тогда
		СтрокаОтчета.ПредставлениеПериода = ПредставлениеПериода;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
