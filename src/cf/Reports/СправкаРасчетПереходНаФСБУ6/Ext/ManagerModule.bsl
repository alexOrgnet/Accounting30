#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область БухгалтерскиеОтчеты

// Описывает свойства отчета (манифест), декларирующий поддержанные в нем возможности подсистемы,
// включая реализованный программный интерфейс.
//
// Возвращаемое значение:
//  Структура - Манифест исполнения отчета
//
Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	
	Манифест = Новый Структура;
	Манифест.Вставить("ИспользоватьДанныеРасшифровки",      Истина);
	Манифест.Вставить("ИспользоватьПередКомпоновкойМакета", Истина);
	Манифест.Вставить("ИспользоватьПослеКомпоновкиМакета",  Истина);
	Манифест.Вставить("ИспользоватьПриВыводеЗаголовка",     Истина);
	Манифест.Вставить("ИспользоватьПослеВыводаРезультата",  Истина);
	Манифест.Вставить("ИспользоватьПериод",                 Ложь);
	
	СправкиРасчеты.УстановитьОтчетНеИспользуетНаборыСуммовыхПоказателей(Манифест);
	
	Возврат Манифест;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиБухгалтерскиеОтчеты

// Обработчик события подсистемы БухгалтерскиеОтчеты.
// Вызов определяется параметром ИспользоватьПриВыводеЗаголовка.
//
// Параметры:
//  Контекст		 - Структура - контекст, в котором формируется отчет.
//                     См. СправкиРасчеты.КонтекстФормированияОтчета.
//  КомпоновщикНастроек	 - КомпоновщикНастроекКомпоновкиДанных - описание связи настроек и схемы отчета.
//  Результат - ТабличныйДокумент - табличный документ с сформированным отчетом.
//
Процедура ПриВыводеЗаголовка(Контекст, КомпоновщикНастроек, Результат) Экспорт
	
	СправкиРасчеты.ВывестиШапкуОтчета(Результат, Контекст);
	
	Шаблон = ПолучитьМакет("ДополнительнаяИнформация");
	ШаблонДатаПерехода = Шаблон.ПолучитьОбласть("ДатаПерехода");
	ШаблонДатаПерехода.Параметры.ДатаПереходаНаФСБУ6 = УчетнаяПолитика.НачалоПримененияФСБУ6(Контекст.Организация);
	Результат.Вывести(ШаблонДатаПерехода);
	
КонецПроцедуры

// Обработчик события подсистемы БухгалтерскиеОтчеты.
// Вызов определяется параметром ИспользоватьПередКомпоновкойМакета.
//
// Параметры:
//  Контекст			 - Структура - контекст, в котором формируется отчет.
//                         См. СправкиРасчеты.КонтекстФормированияОтчета.
//  Схема				 - СхемаКомпоновкиДанных - схема отчета.
//  КомпоновщикНастроек	 - КомпоновщикНастроекКомпоновкиДанных - описание связи настроек и схемы отчета.
//
Процедура ПередКомпоновкойМакета(Контекст, Схема, КомпоновщикНастроек) Экспорт
	
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
		КомпоновщикНастроек,
		"ПериодРасчета",
		Контекст.КонецПериода);
	
	НастроитьОтборПоОрганизации(КомпоновщикНастроек, Контекст.Организация);
	
КонецПроцедуры

// Обработчик события подсистемы БухгалтерскиеОтчеты.
// Вызов определяется параметром ИспользоватьПослеКомпоновкиМакета.
//
// Параметры:
//  Контекст		 - Структура - контекст, в котором формируется отчет.
//                     См. СправкиРасчеты.КонтекстФормированияОтчета.
//  МакетКомпоновки	 - МакетКомпоновкиДанных - сформированный макет компоновки данных.
//
Процедура ПослеКомпоновкиМакета(Контекст, МакетКомпоновки) Экспорт
	
	СправкиРасчеты.НастроитьГрафыОтчета(МакетКомпоновки, ГрафыОтчета());
	
КонецПроцедуры

// Обработчик события подсистемы БухгалтерскиеОтчеты.
// Вызов определяется параметром ИспользоватьПослеВыводаРезультата.
//
// Параметры:
//  Контекст  - Структура - контекст, в котором формируется отчет.
//              См. СправкиРасчеты.КонтекстФормированияОтчета.
//  Результат - ТабличныйДокумент - табличный документ с сформированным отчетом.
//
Процедура ПослеВыводаРезультата(Контекст, Результат) Экспорт
	
	Результат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	СправкиРасчеты.ОформитьРезультатОтчета(Результат, Контекст, Ложь);
	
	ВывестиПримечание(Результат);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура НастроитьОтборПоОрганизации(КомпоновщикНастроек, Организация)
	
	ОписаниеОтбораПоОрганизации = Новый Структура;
	ОписаниеОтбораПоОрганизации.Вставить("Организация",                       Организация);
	ОписаниеОтбораПоОрганизации.Вставить("ВключатьОбособленныеПодразделения", Ложь);
	
	БухгалтерскиеОтчетыВызовСервера.ДобавитьОтборПоОрганизации(ОписаниеОтбораПоОрганизации, КомпоновщикНастроек);
	
КонецПроцедуры

Функция ГрафыОтчета()
	
	НомераКолонок = Новый Массив;
	Для Номер = 1 По 12 Цикл
		НомераКолонок.Добавить(СтрШаблон(НСтр("ru = '%1'"), Номер));
	КонецЦикла;
	
	Разделы = Новый Соответствие;
	Разделы.Вставить(СправкиРасчеты.СлужебноеИмяЗаголовкиСтрок(), НомераКолонок);
	
	Возврат Разделы;
	
КонецФункции

Процедура ВывестиПримечание(ТабличныйДокумент)
	
	Шаблон = ПолучитьМакет("ДополнительнаяИнформация");
	ШаблонПримечание = Шаблон.ПолучитьОбласть("Примечание");
	ТабличныйДокумент.Вывести(ШаблонПримечание);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
