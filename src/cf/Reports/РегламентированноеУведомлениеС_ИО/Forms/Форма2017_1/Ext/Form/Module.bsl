&НаКлиенте
// Вызывается после загрузки из файла
Перем ОписаниеОповещенияОЗавершенииЗагрузки Экспорт;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Данные = Неопределено;
	Параметры.Свойство("Данные", Данные);
	РазделительНомераСтроки = "___";
	ОТЧ = Новый ОписаниеТипов("Число");
	
	Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаСИО;
	УведомлениеОСпецрежимахНалогообложения.НачальныеОперацииПриСозданииНаСервере(ЭтотОбъект);
	ЭтотОбъект.ИмяМакетаАрхиваТабличныхДокументов = "ЭкранныеФормы_Форма2017_1";
	УведомлениеОСпецрежимахНалогообложения.СформироватьСпискиВыбора(ЭтотОбъект, "СпискиВыбора2017_1");
	
	Если ТипЗнч(Данные) = Тип("Структура") Тогда
		СформироватьДеревоСтраниц();
		УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ЭтотОбъект);
		УведомлениеОСпецрежимахНалогообложения.ЗагрузитьДанныеПростогоУведомления(ЭтотОбъект, Данные, ПредставлениеУведомления)
	ИначеЕсли Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Организация = Параметры.Ключ.Организация;
		ЗагрузитьДанные(Параметры.Ключ);
	ИначеЕсли Параметры.Свойство("ЗначениеКопирования") И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Объект.Организация = Параметры.ЗначениеКопирования.Организация;
		ЗагрузитьДанные(Параметры.ЗначениеКопирования);
	ИначеЕсли Параметры.Свойство("ПредставлениеXML") Тогда 
		Параметры.Свойство("РегистрацияВНалоговомОргане", Объект.РегистрацияВИФНС);
		Параметры.Свойство("Организация", Объект.Организация);
		ЗагрузитьИзXMLНаСервере(Новый Структура("Организация, РегистрацияВНалоговомОргане, ПредставлениеXML", 
								Объект.Организация, Объект.РегистрацияВИФНС, Параметры.ПредставлениеXML));
	Иначе
		Параметры.Свойство("Организация", Объект.Организация);
		Объект.РегистрацияВИФНС = Документы.УведомлениеОСпецрежимахНалогообложения.РегистрацияВФНСОрганизации(Объект.Организация);
		СформироватьДеревоСтраниц();
		УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ЭтотОбъект);
		ЗаполнитьНачальныеДанные();
	КонецЕсли;
	
	ИдДляСвор = УведомлениеОСпецрежимахНалогообложения.ПолучитьИдентификаторыДляСворачивания(ЭтотОбъект);
	СворачиваемыеЭлементы = ПоместитьВоВременноеХранилище(ИдДляСвор);
	РегламентированнаяОтчетностьКлиентСервер.ПриИнициализацииФормыРегламентированногоОтчета(ЭтотОбъект);
	Заголовок = УведомлениеОСпецрежимахНалогообложения.ДополнитьЗаголовокУведомления(Заголовок, Объект.Организация);
	УведомлениеОСпецрежимахНалогообложения.СпрятатьКнопкиВыгрузкиОтправкиУНеактуальныхФорм(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	ПриЗакрытииНаСервере();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	РегламентированнаяОтчетностьКлиент.ПередЗакрытиемРегламентированногоОтчета(ЭтотОбъект, Отказ, СтандартнаяОбработка, ЗавершениеРаботы, ТекстПредупреждения);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	РучнойВвод = Ложь;
	Элементы.ФормаРучнойВвод.Пометка = РучнойВвод;
	Элементы.ФормаРазрешитьВыгружатьСОшибками.Пометка = РазрешитьВыгружатьСОшибками;
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ЗаполнитьНачальныеДанные() Экспорт
	ДанныеУведомленияТитульный = ДанныеУведомления["Титульная"];
	ДанныеУведомленияТитульный.Вставить("КодНО", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.РегистрацияВИФНС, "Код"));
	Объект.ДатаПодписи = ТекущаяДатаСеанса();
	ДанныеУведомленияТитульный.Вставить("ДАТА_ПОДПИСИ", Объект.ДатаПодписи);
	
	СтрокаСведений = "ИННЮЛ,НаимЮЛПол,КППЮЛ,ТелОрганизации,ФамилияРук,ИмяРук,ОтчествоРук";
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Объект.Организация, Объект.ДатаПодписи, СтрокаСведений);
	ДанныеУведомленияТитульный.Вставить("ИНН", СведенияОбОрганизации.ИННЮЛ);
	ДанныеУведомленияТитульный.Вставить("Наименование", СведенияОбОрганизации.НаимЮЛПол);
	ДанныеУведомленияТитульный.Вставить("КПП", СведенияОбОрганизации.КППЮЛ);
	ДанныеУведомленияТитульный.Вставить("Тлф", СведенияОбОрганизации.ТелОрганизации);
	
	Реквизиты = РегистрацияВНОСервер.ДанныеРегистрации(Объект.РегистрацияВИФНС);
	ДанныеУведомленияТитульный.Вставить("КодНО", Реквизиты.Код);
	ДанныеУведомленияТитульный.Вставить("КПП", Реквизиты.КПП);
	
	Если ЗначениеЗаполнено(Реквизиты.Представитель) Тогда
		УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоФизЛицу(ЭтотОбъект);
	Иначе
		УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоОрганизации(ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СформироватьДеревоСтраниц() Экспорт
	ДеревоСтраниц.ПолучитьЭлементы().Очистить();
	КорневойУровень = ДеревоСтраниц.ПолучитьЭлементы();
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Титульная страница";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Титульная";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Титульная";
	Стр001.МакетыПФ = "Печать_Форма2017_1_Титульная";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Сведения об иностранной"+символы.ПС+"структуре без образования"+символы.ПС+"юридического лица";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Лист002";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Лист002";
	Стр001.МакетыПФ = "Печать_Форма2017_1_Лист002";
	
	ИсСтроки = Стр001.ПолучитьЭлементы();
	ИсСтроки01 = ИсСтроки.Добавить();
	ИсСтроки01.Наименование = "Сведения об иностранной"+символы.ПС+"организации-учредителе (Лист Е)";
	ИсСтроки01.ИндексКартинки = 1;
	ИсСтроки01.Многостраничность = Истина;
	ИсСтроки01.Многострочность = Ложь;
	
	ИсСтроки01 = ИсСтроки01.ПолучитьЭлементы().Добавить();
	ИсСтроки01.Наименование = "Стр. 1";
	ИсСтроки01.ИндексКартинки = 1;
	ИсСтроки01.ИмяМакета = "ЛистЕ";
	ИсСтроки01.Многостраничность = Истина;
	ИсСтроки01.Многострочность = Ложь;
	ИсСтроки01.УИД = Новый УникальныйИдентификатор;
	ИсСтроки01.ИДНаименования = "ЛистЕ";
	ИсСтроки01.МакетыПФ = "Печать_Форма2017_1_ЛистЕ";
	
	ИсСтроки01 = ИсСтроки.Добавить();
	ИсСтроки01.Наименование = "Сведения о российской"+символы.ПС+"организации-учредителе (Лист Ж)";
	ИсСтроки01.ИндексКартинки = 1;
	ИсСтроки01.Многостраничность = Истина;
	ИсСтроки01.Многострочность = Ложь;
	
	ИсСтроки01 = ИсСтроки01.ПолучитьЭлементы().Добавить();
	ИсСтроки01.Наименование = "Стр. 1";
	ИсСтроки01.ИндексКартинки = 1;
	ИсСтроки01.ИмяМакета = "ЛистЖ";
	ИсСтроки01.Многостраничность = Истина;
	ИсСтроки01.Многострочность = Ложь;
	ИсСтроки01.УИД = Новый УникальныйИдентификатор;
	ИсСтроки01.ИДНаименования = "ЛистЖ";
	ИсСтроки01.МакетыПФ = "Печать_Форма2017_1_ЛистЖ";
	
	ИсСтроки01 = ИсСтроки.Добавить();
	ИсСтроки01.Наименование = "Сведения о физическом"+символы.ПС+"лице-учредителе (Лист З)";
	ИсСтроки01.ИндексКартинки = 1;
	ИсСтроки01.Многостраничность = Истина;
	ИсСтроки01.Многострочность = Ложь;
	
	ИсСтроки01 = ИсСтроки01.ПолучитьЭлементы().Добавить();
	ИсСтроки01.Наименование = "Стр. 1";
	ИсСтроки01.ИндексКартинки = 1;
	ИсСтроки01.ИмяМакета = "ЛистЗ";
	ИсСтроки01.Многостраничность = Истина;
	ИсСтроки01.Многострочность = Ложь;
	ИсСтроки01.УИД = Новый УникальныйИдентификатор;
	ИсСтроки01.ИДНаименования = "ЛистЗ";
	ИсСтроки01.МакетыПФ = "Печать_Форма2017_1_ЛистЗ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Сведения об иностранной"+символы.ПС+"организации (Лист А)";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.ПолучитьЭлементы().Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "ЛистА";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистА";
	Стр001.МакетыПФ = "Печать_Форма2017_1_ЛистА";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Сведения о российской"+символы.ПС+"организации (Лист Б)";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.ПолучитьЭлементы().Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "ЛистБ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистБ";
	Стр001.МакетыПФ = "Печать_Форма2017_1_ЛистБ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Сведения о физическом"+символы.ПС+"лице-участнике (Лист В)";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.ПолучитьЭлементы().Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "ЛистВ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистВ";
	Стр001.МакетыПФ = "Печать_Форма2017_1_ЛистВ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Сведения об иностранной"+символы.ПС+"структуре (Лист Г)";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Истина;
	
	Стр001 = Стр001.ПолучитьЭлементы().Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "ЛистГ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистГ";
	Стр001.МакетыПФ = "Печать_Форма2017_1_ЛистГ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Раскрытие порядка"+символы.ПС+"косвенного участия (Лист Д)";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Истина;
	
	Стр001 = Стр001.ПолучитьЭлементы().Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "ЛистД";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистД";
	Стр001.МногострочныеЧасти.Добавить("МнгСтр");
	Стр001.МакетыПФ = "Печать_Форма2017_1_ЛистД";
КонецПроцедуры

&НаКлиенте
Функция ПолучитьМногострочныеЧасти(ТекущиеДанные)
	Если ТекущиеДанные.МногострочныеЧасти.Количество() > 0 Тогда 
		Возврат ТекущиеДанные.МногострочныеЧасти;
	ИначеЕсли ТекущиеДанные.ПолучитьЭлементы().Количество() > 0 Тогда 
		Возврат ТекущиеДанные.ПолучитьЭлементы()[0].МногострочныеЧасти;
	Иначе
		Возврат ТекущиеДанные.МногострочныеЧасти;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ДеревоСтраницПриАктивизацииСтроки(Элемент)
	Если УведомлениеОСпецрежимахНалогообложенияКлиент.НеобходимоФормированиеТабличногоДокумента(ЭтотОбъект, Элемент, ЭтотОбъект["УИДПереключение"]) Тогда
		ОтключитьОбработчикОжидания("ДеревоСтраницПриАктивизацииСтрокиЗавершение");
		ПодключитьОбработчикОжидания("ДеревоСтраницПриАктивизацииСтрокиЗавершение", 0.1, Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСтраницПриАктивизацииСтрокиЗавершение() Экспорт 
	ПредУИД = ЭтотОбъект["УИДПереключение"];
	Элемент = Элементы.ДеревоСтраниц;
	
	Если Элемент.ТекущиеДанные.Многостраничность Тогда 
		ИмяМакета = УведомлениеОСпецрежимахНалогообложенияКлиент.ПолучитьИмяВыводимогоМакета(Элемент.ТекущиеДанные);
		ПоказатьТекущуюМногостраничнуюСтраницу(ИмяМакета, ПолучитьМногострочныеЧасти(Элемент.ТекущиеДанные), ПредУИД);
	Иначе 
		ПоказатьТекущуюСтраницу(Элемент.ТекущиеДанные.ИмяМакета, Элемент.ТекущиеДанные.МногострочныеЧасти, ПредУИД);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПоказатьТекущуюСтраницу(ИмяМакета, МногострочныеЧасти, ПредУИД)
	Если Не УдалениеСтраницы И ТекущиеМногострочныеЧасти.Количество() > 0 Тогда 
		УведомлениеОСпецрежимахНалогообложения.СобратьДанныеМногострочныхЧастейТекущейСтраницы(
					ЭтотОбъект, ТекущиеМногострочныеЧасти, ПредУИД);
	КонецЕсли;
	
	ТекущиеМногострочныеЧасти = ОбщегоНазначения.СкопироватьРекурсивно(МногострочныеЧасти);
	ТекущийМакет = ИмяМакета;
	Макет = УведомлениеОСпецрежимахНалогообложения.ПолучитьМакетТабличногоДокумента(ЭтотОбъект, ИмяМакета);
	УведомлениеОСпецрежимахНалогообложения.ПоказатьТекущуюСтраницу(ЭтотОбъект, ИмяМакета, ПредУИД);
	УведомлениеОСпецрежимахНалогообложения.ПоказатьМногострочныеЧасти(ЭтотОбъект, Макет, МногострочныеЧасти);
КонецПроцедуры

&НаСервере
Процедура ПоказатьТекущуюМногостраничнуюСтраницу(ИмяМакета, МногострочныеЧасти, ПредУИД)
	Если Не УдалениеСтраницы И ТекущиеМногострочныеЧасти.Количество() > 0 Тогда 
		УведомлениеОСпецрежимахНалогообложения.СобратьДанныеМногострочныхЧастейТекущейСтраницы(
					ЭтотОбъект, ТекущиеМногострочныеЧасти, ПредУИД);
	КонецЕсли;
	
	ТекущиеМногострочныеЧасти = ОбщегоНазначения.СкопироватьРекурсивно(МногострочныеЧасти);
	ТекущийМакет = ИмяМакета;
	Макет = УведомлениеОСпецрежимахНалогообложения.ПоказатьТекущуюМногостраничнуюСтраницу(ЭтотОбъект, ИмяМакета);
	УведомлениеОСпецрежимахНалогообложения.ПоказатьМногострочныеЧасти(ЭтотОбъект, Макет, МногострочныеЧасти);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияПриИзмененииСодержимогоОбласти(Элемент, Область)
	Если ЭтоОбластьДоля(Область) Тогда 
		Если Область.Значение > 100 Тогда 
			Область.Значение = 100;
		КонецЕсли;
	КонецЕсли;
	Если Область.Имя = "Д0101" Или Область.Имя = "Д0102"
		Или Область.Имя = "Д0103" Или Область.Имя = "Д0104" Тогда 
		
		ОбластьЗначание = Область.Значение;
		Если ЗначениеЗаполнено(ОбластьЗначание) Тогда 
			Для Инд = 1 По 4 Цикл 
				Обл = ПредставлениеУведомления.Области["Д010" + Инд];
				Обл.Значение = 0;
				УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, Обл, Истина);
			КонецЦикла;
		КонецЕсли;
		
		Область.Значение = ОбластьЗначание;
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, Область, Истина);
	
	Если Область.Имя = "ДАТА_ПОДПИСИ" Тогда
		Объект.ДатаПодписи = Область.Значение;
		УстановитьДанныеПоРегистрацииВИФНС();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьДанныеПоРегистрацииВИФНС()
	Реквизиты = РегистрацияВНОСервер.ДанныеРегистрации(Объект.РегистрацияВИФНС);
	ПредставлениеУведомления.Области["КодНО"].Значение = Реквизиты.Код;
	ПредставлениеУведомления.Области["КПП"].Значение = Реквизиты.КПП;
	Если ЗначениеЗаполнено(Реквизиты.Представитель) Тогда
		УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоФизЛицу(ЭтотОбъект);
	Иначе
		УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоОрганизации(ЭтотОбъект);
	КонецЕсли;
	
	ДанныеУведомленияТитульный = ДанныеУведомления["Титульная"];
	ДанныеУведомленияТитульный.Вставить("ПРИЗНАК_НП_ПОДВАЛ", ПредставлениеУведомления.Области["ПРИЗНАК_НП_ПОДВАЛ"].Значение);
	ДанныеУведомленияТитульный.Вставить("НаимДок", ПредставлениеУведомления.Области["НаимДок"].Значение);
	ДанныеУведомленияТитульный.Вставить("ДАТА_ПОДПИСИ", ПредставлениеУведомления.Области["ДАТА_ПОДПИСИ"].Значение);
	ДанныеУведомленияТитульный.Вставить("ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ", ПредставлениеУведомления.Области["ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"].Значение);
	ДанныеУведомленияТитульный.Вставить("КодНО", ПредставлениеУведомления.Области["КодНО"].Значение);
	ДанныеУведомленияТитульный.Вставить("КПП", ПредставлениеУведомления.Области["КПП"].Значение);
КонецПроцедуры

&НаСервере
Процедура СохранитьДанные() Экспорт
	Если ЗначениеЗаполнено(Объект.Ссылка) И Не Модифицированность Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Дата = ТекущаяДатаСеанса() 
	КонецЕсли;
	
	Если ТекущиеМногострочныеЧасти.Количество() > 0 Тогда 
		УведомлениеОСпецрежимахНалогообложения.СобратьДанныеМногострочныхЧастейТекущейСтраницы(
					ЭтотОбъект, ТекущиеМногострочныеЧасти, УИДТекущаяСтраница);
	КонецЕсли;
	
	ДанныеДопСтрокБД = Новый Структура;
	Для Каждого КЗ Из ДанныеДопСтрок Цикл 
		ДанныеДопСтрокБД.Вставить(КЗ.Ключ, ПолучитьИзВременногоХранилища(КЗ.Значение));
	КонецЦикла;
	
	СтруктураПараметров = Новый Структура;
			
	СтруктураПараметров.Вставить("ИдентификаторыОбычныхСтраниц", ИдентификаторыОбычныхСтраниц);
	СтруктураПараметров.Вставить("ДанныеДопСтрокБД", ДанныеДопСтрокБД);
	СтруктураПараметров.Вставить("ДеревоСтраниц", РеквизитФормыВЗначение("ДеревоСтраниц"));
	СтруктураПараметров.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	СтруктураПараметров.Вставить("ДанныеУведомления", ДанныеУведомления);
	СтруктураПараметров.Вставить("РазрешитьВыгружатьСОшибками", РазрешитьВыгружатьСОшибками);
	
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.ДанныеУведомления = Новый ХранилищеЗначения(СтруктураПараметров);
	Документ.Записать();
	ЗначениеВДанныеФормы(Документ, Объект);
	
	РегламентированнаяОтчетность.СохранитьСтатусОтправкиУведомления(ЭтотОбъект);
	
	Модифицированность = Ложь;
	Заголовок = СтрЗаменить(Заголовок, " (создание)", "");
	
	УведомлениеОСпецрежимахНалогообложения.СохранитьНастройкиРучногоВвода(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	СохранитьДанные();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанные(СсылкаНаДанные)
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СсылкаНаДанные, "ДанныеУведомления").Получить();
	ДанныеУведомления = СтруктураПараметров.ДанныеУведомления;
	ДанныеМногостраничныхРазделов = СтруктураПараметров.ДанныеМногостраничныхРазделов;
	ЗначениеВРеквизитФормы(СтруктураПараметров.ДеревоСтраниц, "ДеревоСтраниц");
	СтруктураПараметров.Свойство("ИдентификаторыОбычныхСтраниц", ИдентификаторыОбычныхСтраниц);
	УведомлениеОСпецрежимахНалогообложения.ЗагрузкаМногострочныхЧастейУведомления(ЭтотОбъект, СтруктураПараметров);
	СтруктураПараметров.Свойство("РазрешитьВыгружатьСОшибками", РазрешитьВыгружатьСОшибками);
КонецПроцедуры

&НаСервере
Процедура СкопироватьСтраницуНаСервере()
	УведомлениеОСпецрежимахНалогообложения.СобратьДанныеМногострочныхЧастейТекущейСтраницы(
				ЭтотОбъект, ТекущиеМногострочныеЧасти, УИДТекущаяСтраница);
	УведомлениеОСпецрежимахНалогообложения.КопироватьСтраницуУведомления(ЭтотОбъект, Истина);
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьСтраницуНаКлиенте() Экспорт 
	СкопироватьСтраницуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияВыбор(Элемент, Область, СтандартнаяОбработка)
	Если УведомлениеОСпецрежимахНалогообложенияКлиент.ТиповойВыбор(ЭтотОбъект, Область, СтандартнаяОбработка) Или РучнойВвод Тогда 
		Возврат;
	КонецЕсли;
	
	Если Область.Имя = "ИдФайлНалОтч" Тогда 
		СтандартнаяОбработка = Ложь;
		ОткрытьФорму("Отчет." + СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИмяФормы, ".")[1] 
					+ ".Форма.ФормаВыбораОтправленных", Новый Структура("Организация", Объект.Организация),
						ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Возврат;
	КонецЕсли;
	
	Если СтандартнаяОбработка Тогда 
		УведомлениеОСпецрежимахНалогообложенияКлиент.ПредставлениеУведомленияВыбор(ЭтотОбъект, Область, СтандартнаяОбработка, Истина, Истина);
	КонецЕсли;
	
	Если СтандартнаяОбработка Тогда 
		УведомлениеОСпецрежимахНалогообложенияКлиент.ПредставлениеУведомленияВыборКодЗнач(ЭтотОбъект, Область, СтандартнаяОбработка, Истина);
	КонецЕсли;
	
	Если СтрНачинаетсяС(Область.Имя, "Д020301_") Тогда 
		СтандартнаяОбработка = Ложь;
		ВыборНомерУчастника = Новый ОписаниеОповещения("ВыборНомерУчастникаЗавершение", ЭтотОбъект);
		ПараметрыВыборНомерУчастника = Новый Структура("ЗначениеОбласти, ИмяОбласти", Область.Значение, Область.Имя);
		ОткрытьФорму("Отчет." + СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИмяФормы, ".")[1] 
			+ ".Форма.ФормаВыборНомерУчастника", ПараметрыВыборНомерУчастника, 
				ЭтотОбъект, , , , ВыборНомерУчастника, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Возврат;
	ИначеЕсли Область.Имя = "КодНО" Тогда 
		СтандартнаяОбработка = Ложь;
		РегламентированнаяОтчетностьКлиент.ОткрытьФормуВыбораРегистрацииВИФНС(ЭтотОбъект, Область.Имя);
	КонецЕсли;
	
	Если СтандартнаяОбработка Тогда
		Если ЭтоОбластьОКСМ(Область) Тогда 
			СтандартнаяОбработка = Ложь;
			ДополнительныеПараметры = Новый Структура("Область, СтандартнаяОбработка, Элемент", Область, СтандартнаяОбработка, Элемент);
			ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьФормуВыбораСтраныЗавершение", ЭтотОбъект, ДополнительныеПараметры);
			ОткрытьФорму("Справочник.СтраныМира.ФормаВыбора", Новый Структура("РежимВыбора", Истина), ЭтотОбъект,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыборНомерУчастникаЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Ответ) = Тип("Структура") Тогда 
		ТипЧисло = Новый ОписаниеТипов("Число");
		МассивДопОбл = Неопределено;
		Результат = Неопределено;
		ИмяОбласти = Неопределено;
		
		Ответ.Свойство("ИмяОбласти", ИмяОбласти);
		Ответ.Свойство("Результат", Результат);
		Если Ответ.Свойство("Очистить") Тогда 
			Результат = "";
		КонецЕсли;
		Область = ПредставлениеУведомления.Области[ИмяОбласти];
		Область.Значение = Результат;
		ПредставлениеУведомленияПриИзмененииСодержимогоОбласти(ПредставлениеУведомления, Область);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКодаНОЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Инфо = ДополнительныеПараметры.Инфо;
	
	Если Результат <> Неопределено Тогда 
		Объект.РегистрацияВИФНС = Результат;
		УстановитьДанныеПоРегистрацииВИФНС();
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораПодписантаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОткрытьФормуВыбораПодписантаЗавершение(ЭтотОбъект, Результат);
КонецПроцедуры

&НаКлиенте
Функция ЭтоОбластьОКСМ(Область)
	Если ТекущееИДНаименования = "ЛистЗ" Тогда 
		Если Область.Имя = "З0801" Или Область.Имя = "З1001" Тогда 
			Возврат Истина;
		КонецЕсли;
	ИначеЕсли ТекущееИДНаименования = "ЛистЕ" Тогда 
		Если Область.Имя = "Е03" Тогда 
			Возврат Истина;
		КонецЕсли;
	ИначеЕсли ТекущееИДНаименования = "ЛистА" Тогда 
		Если Область.Имя = "А03" Тогда 
			Возврат Истина;
		КонецЕсли;
	ИначеЕсли ТекущееИДНаименования = "Лист002" Тогда 
		Если Область.Имя = "Стр205" Тогда 
			Возврат Истина;
		КонецЕсли;
	ИначеЕсли ТекущееИДНаименования = "ЛистВ" Тогда 
		Если Область.Имя = "В0801" Или Область.Имя = "В1001" Тогда 
			Возврат Истина;
		КонецЕсли;
	ИначеЕсли ТекущееИДНаименования = "ЛистГ" Тогда 
		Если Область.Имя = "Г0205" Тогда 
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

&НаКлиенте
Функция ЭтоОбластьДоля(Область)
	Если ((ТекущееИДНаименования = "ЛистА") И (Область.Имя = "А08"))
		Или ((ТекущееИДНаименования = "ЛистБ") И (Область.Имя = "Б07"))
		Или ((ТекущееИДНаименования = "ЛистВ") И (Область.Имя = "В12"))
		Или ((ТекущееИДНаименования = "ЛистГ") И (Область.Имя = "Г0209"))
		Или ((ТекущееИДНаименования = "ЛистЕ") И (Область.Имя = "Е08"))
		Или ((ТекущееИДНаименования = "ЛистЖ") И (Область.Имя = "Ж07"))
		Или ((ТекущееИДНаименования = "ЛистЗ") И (Область.Имя = "З12"))
		Или ((ТекущееИДНаименования = "ЛистД") И (Область.Имя = "Д0106" Или Область.Имя = "Д0202") 
													Или СтрНачинаетсяС(Область.Имя, "Д020302" + РазделительНомераСтроки)
													Или СтрНачинаетсяС(Область.Имя, "Д020303" + РазделительНомераСтроки))Тогда 
		Возврат Истина;
	Иначе 
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ДобавитьСтраницу(Команда) Экспорт 
	ДобавитьСтраницуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтраницуНаСервере()
	УведомлениеОСпецрежимахНалогообложения.ДобавитьСтраницуУведомления(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтраницу() Экспорт
	УдалениеСтраницы = Истина;
	УдалитьСтраницуНаСервере();
	УдалениеСтраницы = Ложь;
КонецПроцедуры

&НаСервере
Процедура УдалитьСтраницуНаСервере()
	Для Каждого Стр Из ТекущиеМногострочныеЧасти Цикл 
		ТЗ = ПолучитьИзВременногоХранилища(ДанныеДопСтрок[Стр.Значение]);
		Строки = ТЗ.НайтиСтроки(Новый Структура("УИД", УИДТекущаяСтраница));
		Для Каждого СтрМнг Из Строки Цикл 
			ТЗ.Удалить(СтрМнг);
		КонецЦикла;
		ДанныеДопСтрок[Стр.Значение] = ПоместитьВоВременноеХранилище(ТЗ, ДанныеДопСтрок[Стр.Значение]);
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.УдалитьСтраницуНаСервере(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	Если Модифицированность Тогда 
		СохранитьДанные();
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		УведомлениеОбъект = Объект.Ссылка.ПолучитьОбъект();
		Если УведомлениеОбъект.Заблокирован() Тогда 
			УведомлениеОбъект.Разблокировать();
		КонецЕсли;
		РазблокироватьДанныеДляРедактирования(Объект.Ссылка, УникальныйИдентификатор);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораСтраныЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		КодЭлементаСправочника = УведомлениеОСпецрежимахНалогообложенияВызовСервера.РеквизитЭлементаСправочника(Результат, "Код");
		Область = ДополнительныеПараметры.Область;
		Если Область.Значение <> КодЭлементаСправочника Тогда
			Область.Значение = КодЭлементаСправочника;
			Модифицированность = Истина;
		КонецЕсли;
		ПредставлениеУведомленияПриИзмененииСодержимогоОбласти(Элементы.ПредставлениеУведомления, Область);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтроку(ИмяОбласти)
	УведомлениеОСпецрежимахНалогообложения.ДобавитьСтроку(ЭтотОбъект, ИмяОбласти);
КонецПроцедуры

&НаСервере
Процедура УдалитьСтроку(ИмяОбласти)
	УведомлениеОСпецрежимахНалогообложения.УдалитьСтроку(ЭтотОбъект, ИмяОбласти);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтрокуНаКлиенте(ИмяОбласти) Экспорт 
	ДобавитьСтроку(ИмяОбласти);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтрокуНаКлиенте(ИмяОбласти) Экспорт 
	УдалитьСтроку(ИмяОбласти);
КонецПроцедуры

&НаКлиенте
Функция ОпределитьПринадлежностьОбластиКМногострочномуРазделу(ОбластьИмя) Экспорт 
КонецФункции

&НаСервере
Функция СформироватьXMLНаСервере(УникальныйИдентификатор)
	СохранитьДанные();
	Документ = РеквизитФормыВЗначение("Объект");
	Возврат Документ.ВыгрузитьДокумент(УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура СформироватьXML(Команда)
	
	ВыгружаемыеДанные = СформироватьXMLНаСервере(УникальныйИдентификатор);
	Если ВыгружаемыеДанные <> Неопределено Тогда 
		РегламентированнаяОтчетностьКлиент.ВыгрузитьФайлы(ВыгружаемыеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСДвухмернымШтрихкодомPDF417(Команда)
	РегламентированнаяОтчетностьКлиент.ВывестиМашиночитаемуюФормуУведомленияОСпецрежимах(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Функция СформироватьВыгрузкуИПолучитьДанные() Экспорт 
	Выгрузка = СформироватьXMLНаСервере(УникальныйИдентификатор);
	Если Выгрузка = Неопределено Тогда 
		Возврат Неопределено;
	КонецЕсли;
	Выгрузка = Выгрузка[0];
	СтруктураВыгрузки = Новый Структура("ТестВыгрузки,КодировкаВыгрузки", 
			Выгрузка.ТестВыгрузки, Выгрузка.КодировкаВыгрузки);
	СтруктураВыгрузки.Вставить("Данные", УведомлениеОСпецрежимахНалогообложения.ПолучитьМакетДвоичныхДанных(Объект.ИмяОтчета, "TIFF_2017_1"));
	СтруктураВыгрузки.Вставить("ИмяФайла", "1120413_5.01000_01.tif");
	Возврат СтруктураВыгрузки;
КонецФункции

&НаКлиенте
Процедура СохранитьНаКлиенте(Автосохранение = Ложь,ВыполняемоеОповещение = Неопределено) Экспорт 
	
	СохранитьДанные();
	Если ВыполняемоеОповещение <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ВыполняемоеОповещение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	СохранитьДанные();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
	Закрыть(Неопределено);
КонецПроцедуры

#Область ОтправкаВФНС
////////////////////////////////////////////////////////////////////////////////
// Отправка в ФНС
&НаКлиенте
Процедура ОтправитьВКонтролирующийОрган(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернете(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПроверитьВИнтернете(ЭтотОбъект);
	
КонецПроцедуры
#КонецОбласти

#Область ПанельОтправкиВКонтролирующиеОрганы

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаНаименованиеЭтапаНажатие(Элемент)
	
	ПараметрыИзменения = Новый Структура;
	ПараметрыИзменения.Вставить("Форма", ЭтотОбъект);
	ПараметрыИзменения.Вставить("Организация", Объект.Организация);
	ПараметрыИзменения.Вставить("КонтролирующийОрган",
		ПредопределенноеЗначение("Перечисление.ТипыКонтролирующихОрганов.ФНС"));
	ПараметрыИзменения.Вставить("ТекстВопроса", НСтр("ru='Вы уверены, что уведомление уже сдано?'"));
	
	РегламентированнаяОтчетностьКлиент.ИзменитьСтатусОтправки(ПараметрыИзменения);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Функция ПроверитьВыгрузкуНаСервере()
	СохранитьДанные();
	Документ = РеквизитФормыВЗначение("Объект");
	Возврат Документ.ПроверитьДокументСВыводомВТаблицу(УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура ПроверитьВыгрузку(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПроверитьВыгрузку(ЭтотОбъект, ПроверитьВыгрузкуНаСервере());
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытьПрисоединенныеФайлы(Команда)
	
	РегламентированнаяОтчетностьКлиент.СохранитьУведомлениеИОткрытьФормуПрисоединенныеФайлы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьБРО(Команда)
	ПечатьБРОНаСервере();
	РегламентированнаяОтчетностьКлиент.ОткрытьФормуПредварительногоПросмотра(ЭтотОбъект, "Открыть", Ложь, СтруктураРеквизитовУведомления.СписокПечатаемыхЛистов);
КонецПроцедуры

&НаСервере
Процедура ПечатьБРОНаСервере()
	УведомлениеОСпецрежимахНалогообложения.ПечатьУведомленияБРО(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура РучнойВвод(Команда)
	РучнойВвод = Не РучнойВвод;
	Элементы.ФормаРучнойВвод.Пометка = РучнойВвод;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "УведомлениеОСпецрежимахНалогообложения_НавигацияПоОшибкам" Тогда 
		УведомлениеОСпецрежимахНалогообложенияКлиент.ОбработкаОповещенияНавигацииПоОшибкам(ЭтотОбъект, Параметр, Источник);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьОКСМ(Команда)
	ПредставлениеУведомления.ТекущаяОбласть.Значение = Неопределено;
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, ПредставлениеУведомления.ТекущаяОбласть, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияПриАктивизации(Элемент)
	Если ПредставлениеУведомления.ТекущаяОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда 
		Элементы.ПредставлениеУведомленияКонтекстноеМенюОчиститьОКСМ.Доступность = ЭтоОбластьОКСМ(ПредставлениеУведомления.ТекущаяОбласть);
	Иначе
		Элементы.ПредставлениеУведомленияКонтекстноеМенюОчиститьОКСМ.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
		ЗагрузитьИдентификатор(ВыбранноеЗначение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИдентификатор(РегОтчет)
	ОписаниеОшибки = "";
	Результат = ЗагрузитьИдентификаторНаСервере(РегОтчет, ОписаниеОшибки);
	Если Не Результат Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю(ОписаниеОшибки);
	Иначе
		УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, ПредставлениеУведомления.Области.ИдФайлНалОтч, Истина);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ЗагрузитьИдентификаторНаСервере(РегОтчет, ОписаниеОшибки)
	СведенияПоВсемОтправкам = СведенияПоОтправкам.СведенияПоВсемОтправкам(РегОтчет);
	
	Для Каждого ОтправленныеСведения Из СведенияПоВсемОтправкам Цикл
		Идентификатор = ОтправленныеСведения.ИдентификаторОтправки;
		СведенияПоОтправке = СведенияПоОтправкам.СведенияПоОтправке(РегОтчет, Идентификатор);
		СтруктураПолногоИмениФайла = ОбщегоНазначенияКлиентСервер.РазложитьПолноеИмяФайла(СведенияПоОтправке.ИмяФайла);
		
		Если ЗначениеЗаполнено(ОтправленныеСведения.ДатаЗавершения) Тогда
			Если НРег(СведенияПоОтправке.Статус) = "сдан" Тогда
				ИмяФайла = СтруктураПолногоИмениФайла.ИмяБезРасширения;
				Прервать;
			Иначе
				Если ЗначениеЗаполнено(СтруктураПолногоИмениФайла.ИмяБезРасширения) Тогда 
					ИмяФайла = СтруктураПолногоИмениФайла.ИмяБезРасширения;
				КонецЕсли;
				Продолжить;
			КонецЕсли;
		ИначеЕсли ЗначениеЗаполнено(СтруктураПолногоИмениФайла.ИмяБезРасширения) Тогда 
			ИмяФайла = СтруктураПолногоИмениФайла.ИмяБезРасширения;
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(ИмяФайла) Тогда
		ОписаниеОшибки = "Данный отчет не был отправлен налоговую инспекцию";
		Возврат Ложь;
	КонецЕсли;
	
	ПредставлениеУведомления.Области.ИдФайлНалОтч.Значение = ИмяФайла;
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура РазрешитьВыгружатьСОшибками(Команда)
	РазрешитьВыгружатьСОшибками = Не РазрешитьВыгружатьСОшибками;
	Элементы.ФормаРазрешитьВыгружатьСОшибками.Пометка = РазрешитьВыгружатьСОшибками;
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзXML(ПараметрыЗагрузкиXML) Экспорт
	ЗагрузитьИзXMLНаСервере(ПараметрыЗагрузкиXML);
	Элементы.ДеревоСтраниц.ТекущаяСтрока = ДеревоСтраниц.ПолучитьЭлементы()[0].ПолучитьИдентификатор();
КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицуОсобыхПолей()
	ТаблицаОсобыхПолейВВыгрузке = УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПутейВВыгрузке();
	
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СообУчИО/СвУчИО/СвИОУчИО/НомерИО";
	
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СообУчИО/СвУчИО/СвРосУчИО/НомерРО";
	
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СообУчИО/СвУчИО/СвФЛУчИО/НомерФЛ";
	
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СообУчИО/СвУчИО/СвИСУчИО/НомерИС";
	
	Возврат ТаблицаОсобыхПолейВВыгрузке;
КонецФункции

&НаСервере
Процедура ЗагрузитьЛистыД(ДеревоЗагрузки, СхемаВыгрузки, ДополнительныеПараметры)
	МассивКолонок = Новый Соответствие;
	ДанныеДопСтрокМнгСтр = ПолучитьИзВременногоХранилища(ДанныеДопСтрок.МнгСтр);
	Для Каждого Кол Из ДанныеДопСтрокМнгСтр.Колонки Цикл 
		МассивКолонок.Вставить(Кол.Имя, Истина);
	КонецЦикла;
	
	СтрокаЛистДВДереве = ДеревоСтраниц.ПолучитьЭлементы()[ДеревоСтраниц.ПолучитьЭлементы().Количество() - 1].ПолучитьЭлементы()[0];
	ЛистыД0 = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, 
				"Файл/Документ/СообУчИО/СвУчИО/РаскрУчИОКосв", "ИмяЭлемента");
	Если ЛистыД0 = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	ЛистыД0 = ЛистыД0.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "РаскрУчИОКосв"), Ложь);
	
	ВсегоСтрок = ЛистыД0.Количество();
	Если ВсегоСтрок = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	Для Каждого ЛистД0 Из ЛистыД0 Цикл
		ПодчиненныеУзлыД1Количество = ЛистД0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "РаскрУчИО"), Ложь).Количество();
		ВсегоСтрок = ВсегоСтрок + ?(ПодчиненныеУзлыД1Количество > 0, ПодчиненныеУзлыД1Количество - 1, 0);
	КонецЦикла;
	
	Для Инд = 2 По ВсегоСтрок Цикл 
		НоваяСтрокаЛистДВДереве = УведомлениеОСпецрежимахНалогообложения.СкопироватьСтрокуВДереве(ЭтотОбъект, СтрокаЛистДВДереве);
		НоваяСтрокаЛистДВДереве.Наименование = "Стр. " + Формат(Инд, "ЧГ=0");
	КонецЦикла;
	
	ЛистДЭталон = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ДанныеМногостраничныхРазделов.ЛистД[0].Значение);
	СтрокиВДереве = ДеревоСтраниц.ПолучитьЭлементы()[ДеревоСтраниц.ПолучитьЭлементы().Количество() - 1].ПолучитьЭлементы();
	
	ИндексЛистД0 = 0;
	Для Каждого ЛистД0 Из ЛистыД0 Цикл
		ИндексЛистД0Нач = ИндексЛистД0;
		ЛистДЗнач = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ЛистДЭталон);
		ЛистДЗнач.УИД = Новый УникальныйИдентификатор;
		ДанныеМногостраничныхРазделов.ЛистД.Добавить(ЛистДЗнач);
		СтрокиВДереве[ИндексЛистД0].УИД = ЛистДЗнач.УИД;
		ИндексЛистД0 = ИндексЛистД0 + 1;
		
		Для Каждого Стр Из ЛистД0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СвУчКосвИО"), Ложь) Цикл 
			Для Каждого Стр Из Стр.Строки Цикл
				Если ЛистДЗнач.Свойство(Стр.ИмяЭлемента) Тогда
					ЛистДЗнач[Стр.ИмяЭлемента] = Стр.ЗначениеЭлемента;
				ИначеЕсли Стр.ИмяЭлемента = "НомерИО" Тогда
					ЛистДЗнач["Д0101"] = ОТЧ.ПривестиЗначение(Прав(Стр.ЗначениеЭлемента, 5));
				ИначеЕсли Стр.ИмяЭлемента = "НомерРО" Тогда
					ЛистДЗнач["Д0102"] = ОТЧ.ПривестиЗначение(Прав(Стр.ЗначениеЭлемента, 5));
				ИначеЕсли Стр.ИмяЭлемента = "НомерФЛ" Тогда
					ЛистДЗнач["Д0103"] = ОТЧ.ПривестиЗначение(Прав(Стр.ЗначениеЭлемента, 5));
				ИначеЕсли Стр.ИмяЭлемента = "ФИО" Тогда
					Для Каждого Стр2 Из Стр.Строки Цикл
						Ключ = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(СхемаВыгрузки, 
									Сред(УведомлениеОСпецрежимахНалогообложения.ПолучитьПолныйПутьВДеревеЗагрузки(Стр2), 6), "Код").Ключ;
						Если ЗначениеЗаполнено(Ключ) И ЛистДЗнач.Свойство(Ключ) Тогда
							ЛистДЗнач[Ключ] = Стр2.ЗначениеЭлемента;
						КонецЕсли;
					КонецЦикла;
				Иначе
					Ключ = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(СхемаВыгрузки, 
								Сред(УведомлениеОСпецрежимахНалогообложения.ПолучитьПолныйПутьВДеревеЗагрузки(Стр), 6), "Код").Ключ;
					Если ЗначениеЗаполнено(Ключ) И ЛистДЗнач.Свойство(Ключ) Тогда
						ЛистДЗнач[Ключ] = Стр.ЗначениеЭлемента;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			Прервать;
		КонецЦикла;
		
		Инд = 0;
		Для Каждого ЛистД1 Из ЛистД0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "РаскрУчИО"), Ложь) Цикл 
			Если Инд <> 0 Или ИндексЛистД0Нач <> 0 Тогда
				ИндексЛистД0 = ИндексЛистД0 + 1;
				ЛистДЗнач = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ЛистДЭталон);
				ЛистДЗнач.УИД = Новый УникальныйИдентификатор;
				СтрокиВДереве[ИндексЛистД0Нач + Инд].УИД = ЛистДЗнач.УИД;
				ДанныеМногостраничныхРазделов.ЛистД.Добавить(ЛистДЗнач);
				Для Каждого Стр Из ЛистД0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СвУчКосвИО"), Ложь) Цикл 
					Для Каждого Стр Из Стр.Строки Цикл 
						Если ЛистДЗнач.Свойство(Стр.ИмяЭлемента) Тогда
							ЛистДЗнач[Стр.ИмяЭлемента] = Стр.ЗначениеЭлемента;
							ИначеЕсли Стр.ИмяЭлемента = "НомерИО" Тогда
								ЛистДЗнач["Д0101"] = ОТЧ.ПривестиЗначение(Прав(Стр.ЗначениеЭлемента, 5));
							ИначеЕсли Стр.ИмяЭлемента = "НомерРО" Тогда
								ЛистДЗнач["Д0102"] = ОТЧ.ПривестиЗначение(Прав(Стр.ЗначениеЭлемента, 5));
							ИначеЕсли Стр.ИмяЭлемента = "НомерФЛ" Тогда
								ЛистДЗнач["Д0103"] = ОТЧ.ПривестиЗначение(Прав(Стр.ЗначениеЭлемента, 5));
							ИначеЕсли Стр.ИмяЭлемента = "ФИО" Тогда
								Для Каждого Стр2 Из Стр.Строки Цикл
									Ключ = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(СхемаВыгрузки, 
												Сред(УведомлениеОСпецрежимахНалогообложения.ПолучитьПолныйПутьВДеревеЗагрузки(Стр2), 6), "Код").Ключ;
									Если ЗначениеЗаполнено(Ключ) И ЛистДЗнач.Свойство(Ключ) Тогда
										ЛистДЗнач[Ключ] = Стр2.ЗначениеЭлемента;
									КонецЕсли;
								КонецЦикла;
							Иначе
								Ключ = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(СхемаВыгрузки, 
											Сред(УведомлениеОСпецрежимахНалогообложения.ПолучитьПолныйПутьВДеревеЗагрузки(Стр), 6), "Код").Ключ;
								Если ЗначениеЗаполнено(Ключ) И ЛистДЗнач.Свойство(Ключ) Тогда
									ЛистДЗнач[Ключ] = Стр.ЗначениеЭлемента;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
					Прервать;
				КонецЦикла;
			КонецЕсли;
			Для Каждого Стр Из ЛистД1.Строки Цикл 
				Если ЛистДЗнач.Свойство(Стр.ИмяЭлемента) Тогда
					ЛистДЗнач[Стр.ИмяЭлемента] = Стр.ЗначениеЭлемента;
				Иначе
					Ключ = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(СхемаВыгрузки, 
								Сред(УведомлениеОСпецрежимахНалогообложения.ПолучитьПолныйПутьВДеревеЗагрузки(Стр), 6), "Код").Ключ;
					Если ЗначениеЗаполнено(Ключ) И ЛистДЗнач.Свойство(Ключ) Тогда
						ЛистДЗнач[Ключ] = Стр.ЗначениеЭлемента;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого ЛистД2 Из ЛистД1.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "УчПосл"), Ложь) Цикл
				НовСтр = ДанныеДопСтрокМнгСтр.Добавить();
				НовСтр.УИД = ЛистДЗнач.УИД;
				Для Каждого Стр Из ЛистД2.Строки Цикл
					Ключ = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(СхемаВыгрузки, 
								Сред(УведомлениеОСпецрежимахНалогообложения.ПолучитьПолныйПутьВДеревеЗагрузки(Стр), 6), "Код").Ключ;
					Если МассивКолонок[Ключ] = Истина Тогда 
						НовСтр[Ключ] = Стр.ЗначениеЭлемента;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			Инд = Инд + 1;
		КонецЦикла;
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(ДанныеДопСтрокМнгСтр, ДанныеДопСтрок.МнгСтр);
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьИзXMLНаСервере(ПараметрыЗагрузкиXML)
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ТаблицаОсобыхПолейВВыгрузке", ПолучитьТаблицуОсобыхПолей());
	УведомлениеОСпецрежимахНалогообложения.УстановитьОрганизациюПоПараметрамЗагрузки(ЭтотОбъект, ПараметрыЗагрузкиXML);
	
	ДеревоЗагрузки = УведомлениеОСпецрежимахНалогообложения.СформироватьДеревоЗагрузки(ПараметрыЗагрузкиXML.ПредставлениеXML);
	СхемаВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2017_1");
	ДеревоСтраниц.ПолучитьЭлементы().Очистить();
	СформироватьДеревоСтраниц();
	УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ЭтотОбъект);
	УведомлениеОСпецрежимахНалогообложения.ЗагрузитьОбычныеСтраницы(ЭтотОбъект, ДеревоЗагрузки, СхемаВыгрузки, ДополнительныеПараметры);
	УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМногостраничныеСтраницы(ЭтотОбъект, ДеревоЗагрузки, СхемаВыгрузки, ДополнительныеПараметры);
	ЗагрузитьЛистыД(ДеревоЗагрузки, СхемаВыгрузки, ДополнительныеПараметры);
КонецПроцедуры

&НаСервере
Процедура ОсобаяОбработкаЭлементов(Путь, СтрЗагружаемоеЗначение, Страница) Экспорт 
	Если Путь = "Файл/Документ/СообУчИО/СвУчИО/СвИОУчИО/НомерИО" Тогда 
		Страница.А01 = ОТЧ.ПривестиЗначение(Прав(СтрЗагружаемоеЗначение.ЗначениеЭлемента, 5));
	ИначеЕсли Путь = "Файл/Документ/СообУчИО/СвУчИО/СвРосУчИО/НомерРО" Тогда
		Страница.Б01 = ОТЧ.ПривестиЗначение(Прав(СтрЗагружаемоеЗначение.ЗначениеЭлемента, 5));
	ИначеЕсли Путь = "Файл/Документ/СообУчИО/СвУчИО/СвФЛУчИО/НомерФЛ" Тогда
		Страница.В01 = ОТЧ.ПривестиЗначение(Прав(СтрЗагружаемоеЗначение.ЗначениеЭлемента, 5));
	ИначеЕсли Путь = "Файл/Документ/СообУчИО/СвУчИО/СвИСУчИО/НомерИС" Тогда
		Страница.Г01 = ОТЧ.ПривестиЗначение(Прав(СтрЗагружаемоеЗначение.ЗначениеЭлемента, 5));
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьКартуМногостраничныхРазделов() Экспорт 
	КартаРазделов = УведомлениеОСпецрежимахНалогообложения.СформироватьПустуюКартуМногостраничныхРазделов();
	НовСтр = КартаРазделов.Строки.Добавить();
	НовСтр.ИДНаименования = "ЛистА";
	НовСтр = КартаРазделов.Строки.Добавить();
	НовСтр.ИДНаименования = "ЛистБ";
	НовСтр = КартаРазделов.Строки.Добавить();
	НовСтр.ИДНаименования = "ЛистВ";
	НовСтр = КартаРазделов.Строки.Добавить();
	НовСтр.ИДНаименования = "ЛистГ";
	НовСтр = КартаРазделов.Строки.Добавить();
	НовСтр.ИДНаименования = "ЛистЕ";
	НовСтр = КартаРазделов.Строки.Добавить();
	НовСтр.ИДНаименования = "ЛистЖ";
	НовСтр = КартаРазделов.Строки.Добавить();
	НовСтр.ИДНаименования = "ЛистЗ";
	Возврат КартаРазделов;
КонецФункции

&НаКлиенте
Процедура ЗагрузитьИзФайлаВФормуУведомление(Команда)
	ОписаниеОповещенияОЗавершенииЗагрузки = Новый ОписаниеОповещения("ЗагрузитьИзФайлаВФормуУведомлениеЗавершение", ЭтотОбъект);
	УведомлениеОСпецрежимахНалогообложенияКлиент.ЗагрузитьИзФайлаУведомление(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ПолучитьСворачиваемыеЭлементы()
	СворачиваемыеЭлементы = ПоместитьВоВременноеХранилище(УведомлениеОСпецрежимахНалогообложения.ПолучитьИдентификаторыДляСворачивания(ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайлаВФормуУведомлениеЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	ПолучитьСворачиваемыеЭлементы();
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриОткрытии(ЭтотОбъект, Ложь);
КонецПроцедуры

&НаСервере
Процедура РазрешитьРедактированиеРеквизитовОбъекта() Экспорт
	РегламентированнаяОтчетность.РазрешитьРедактированиеРеквизитовОтчета(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	РегламентированнаяОтчетностьКлиент.РазрешитьРедактированиеРеквизитовОтчета(ЭтотОбъект);
КонецПроцедуры
