#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	
	Манифест = Новый Структура;
	Манифест.Вставить("ИспользоватьПередКомпоновкойМакета",         Истина);
	Манифест.Вставить("ИспользоватьПослеВыводаРезультата",          Истина);
	Манифест.Вставить("ИспользоватьПриВыводеЗаголовка",             Истина);
	Манифест.Вставить("ИспользоватьВнешниеНаборыДанных",            Ложь);
	Манифест.Вставить("ИспользоватьПередВыводомЭлементаРезультата", Ложь);
	
	Манифест.Вставить("ИспользоватьНастройкуГруппировок",           Истина);
	Манифест.Вставить("ОбязательныеГруппировки",                    ОбязательныеГруппировки());
	
	Манифест.Вставить("КонтролироватьОтрицательныеОстатки",         Истина);
		
	Манифест.Вставить("ИспользоватьНалоговыйПериод",                Ложь);
	
	СправкиРасчеты.УстановитьОтчетНеИспользуетНаборыСуммовыхПоказателей(Манифест);
	
	Возврат Манифест;
	
КонецФункции

// В процедуре можно доработать компоновщик перед выводом в отчет.
// Изменения сохранены не будут.
//
Процедура ПередКомпоновкойМакета(Контекст, Схема, КомпоновщикНастроек) Экспорт
	
	СправкиРасчеты.УстановитьБазовыеПараметрыОтчета(Контекст, Схема, КомпоновщикНастроек);
	
	УстановитьПараметрНаименованиеВШапке(КомпоновщикНастроек);
	
	НастроитьРасчетИтоговПоПродукцииМатериалам(Схема, КомпоновщикНастроек);
	
	БухгалтерскиеОтчетыВызовСервера.ДобавитьОтборПоОрганизации(Контекст, КомпоновщикНастроек);
	
КонецПроцедуры

Процедура ПослеВыводаРезультата(Контекст, Результат) Экспорт
	
	Результат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	СправкиРасчеты.ОформитьРезультатОтчета(Результат, Контекст, Истина);
	
	// В этом отчете используется предопределенный макет заголовка шапки. Оставим в результате только нужные колонки.
	Если НЕ Контекст.ВыводитьЕдиницуИзмерения Тогда
		УдалитьКолонкуИзРезультата("C4", Результат);
	КонецЕсли;
	
	ДополнительнаяКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если НЕ ДополнительнаяКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		УдалитьКолонкуИзРезультата("C3", Результат);
	КонецЕсли;
	
	Если НЕ ДополнительнаяКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
		УдалитьКолонкуИзРезультата("C2", Результат);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриВыводеЗаголовка(Контекст, КомпоновщикНастроек, Результат) Экспорт
	
	Контекст.Вставить("Результат", Результат);
	СправкиРасчеты.ВывестиШапкуОтчета(Результат, Контекст);
	
КонецПроцедуры

// Определяет набор группировок отчета, которые в силу функциональных опций должны быть недоступны
// для выбора пользователем.
//
// Возвращаемое значение:
//  Массив - имена группировок
//
Функция ГруппировкиЗапрещенныеФункциональнымиОпциями() Экспорт
	
	ЗапрещенныеГруппировки = Новый Массив;
	
	Если Не ПолучитьФункциональнуюОпцию("ВестиУчетЗатратПоПодразделениям") Тогда
		ЗапрещенныеГруппировки.Добавить("Подразделение");
	КонецЕсли;
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоНоменклатурныхГрупп") Тогда
		ЗапрещенныеГруппировки.Добавить("НоменклатурнаяГруппа");
	КонецЕсли;
	
	Возврат ЗапрещенныеГруппировки;
	
КонецФункции

Процедура НастроитьВариантыОтчета(Настройки, ОписаниеОтчета) Экспорт
	
	Схема = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	Для Каждого Вариант из Схема.ВариантыНастроек Цикл
		ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, Вариант.Имя).Размещение.Вставить(
			Метаданные.Подсистемы.Отчеты.Подсистемы.СправкиРасчеты.Подсистемы.БухгалтерскийУчет, "");
		ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, Вариант.Имя).Размещение.Вставить(
			Метаданные.Подсистемы.Отчеты.Подсистемы.СправкиРасчеты.Подсистемы.БухгалтерскийИНалоговыйУчет, "");
		ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, Вариант.Имя).Размещение.Вставить(
			Метаданные.Подсистемы.БухгалтерияПредприятияПодсистемы.Подсистемы.ПростойИнтерфейс.Подсистемы.Отчеты.Подсистемы.СправкиРасчеты, "");
	КонецЦикла;	
	
КонецПроцедуры

//Процедура используется подсистемой варианты отчетов
//
Процедура НастройкиОтчета(Настройки) Экспорт
	
	Схема = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	Для Каждого Вариант из Схема.ВариантыНастроек Цикл
		Настройки.ОписаниеВариантов.Вставить(Вариант.Имя,Вариант.Представление);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ТонкаяНастройка

Функция ОбязательныеГруппировки()
	
	ОбязательныеГруппировки = Новый Массив;
    ОбязательныеГруппировки.Добавить("Материал");
	
	Возврат ОбязательныеГруппировки;
	
КонецФункции

// Составление единого наименования шапки группировок в зависимости от настроек группировок.
// Макет заголовка "Шапка" будем выводить по самой верхней группировке.
Процедура УстановитьПараметрНаименованиеВШапке(КомпоновщикНастроек)
	
	НаименованиеВШапке = "";
	НомерГруппировки = 1;
	Группировки = КомпоновщикНастроек.Настройки.Структура;
	Пока Группировки.Количество() <> 0 Цикл
		
		ТекущаяГруппировка = Группировки[0];
		Группировки = ТекущаяГруппировка.Структура;
		
		Если Не ТекущаяГруппировка.Использование Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ТекущаяГруппировка.Состояние = СостояниеЭлементаНастройкиКомпоновкиДанных.Включен Тогда
			Продолжить;
		КонецЕсли;
		
		Если НомерГруппировки = 1 Тогда
			ТекущаяГруппировка.Имя = "Шапка";
			НаименованиеВШапке = НаименованиеВШапке + Строка(ТекущаяГруппировка.ПоляГруппировки);
		Иначе
			НаименованиеВШапке = НаименованиеВШапке + " / " + Строка(ТекущаяГруппировка.ПоляГруппировки);
		КонецЕсли;
		НомерГруппировки = НомерГруппировки + 1;
		Группировки = ТекущаяГруппировка.Структура;
		
	КонецЦикла;
	
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "НаименованиеВШапке", НаименованиеВШапке);
	
КонецПроцедуры

Процедура УдалитьКолонкуИзРезультата(ИмяКолонки, Результат)
	
	Колонка = Результат.Область(ИмяКолонки);
	Результат.УдалитьОбласть(Колонка, ТипСмещенияТабличногоДокумента.ПоГоризонтали);
	
КонецПроцедуры

Процедура НастроитьРасчетИтоговПоПродукцииМатериалам(Схема, КомпоновщикНастроек)
	
	ГруппировкиОтчета = ГруппировкиОтчета(КомпоновщикНастроек);
	ИндексПродукция = ГруппировкиОтчета.Найти("ПРОДУКЦИЯ");
	ИндексМатериал = ГруппировкиОтчета.Найти("МАТЕРИАЛ");
	
	// Норма расхода материала имеет смысл только для продукции и для материала.
	// Поэтому, если группировка продукции выведена в отчет и находится ниже группировки
	// материала, то нужно суммировать по материалу. В остальных случаях - по продукции.
	ПоляРасчетаНормыМатериалов = Новый Массив;
	Если ИндексПродукция <> Неопределено
		И ИндексМатериал <> Неопределено
		И ИндексПродукция < ИндексМатериал Тогда
		ПоляРасчетаНормыМатериалов.Добавить("Материал");
	Иначе
		ПоляРасчетаНормыМатериалов.Добавить("Продукция");
	КонецЕсли;
	
	УстановитьРасчетИтоговРесурса(Схема, "Норма", ПоляРасчетаНормыМатериалов);
	
КонецПроцедуры

Функция ГруппировкиОтчета(КомпоновщикНастроек)
	
	ГруппировкиОтчета = Новый Массив;
	
	ДополнитьВложеннымиГруппировками(ГруппировкиОтчета, КомпоновщикНастроек.Настройки.Структура);
	
	Возврат ГруппировкиОтчета;
	
КонецФункции

Процедура ДополнитьВложеннымиГруппировками(ГруппировкиОтчета, Структура)
	
	Для Каждого ЭлементСтруктуры Из Структура Цикл
		
		Если ТипЗнч(ЭлементСтруктуры) <> Тип("ГруппировкаКомпоновкиДанных") Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЭлементСтруктуры.Состояние = СостояниеЭлементаНастройкиКомпоновкиДанных.Включен
			И ЭлементСтруктуры.ПоляГруппировки.Элементы.Количество() > 0 Тогда
			// Добавим первый элемент полей и не будем перебирать их все.
			// В этом отчете не планируется группировок с несколькими полями
			ГруппировкиОтчета.Добавить(ВРЕГ(Строка(ЭлементСтруктуры.ПоляГруппировки.Элементы[0].Поле)));
		КонецЕсли;
		
		ДополнитьВложеннымиГруппировками(ГруппировкиОтчета, ЭлементСтруктуры.Структура);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьРасчетИтоговРесурса(Схема, ИмяРесурса, ПоляДляРасчетаИтогов)
	
	ПолеИтога = Схема.ПоляИтога.Найти(ИмяРесурса);
	Если ПолеИтога = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПолеИтога.Группировки.Очистить();
	Для Каждого ПолеДляРасчетаИтога Из ПоляДляРасчетаИтогов Цикл
		ПолеИтога.Группировки.Добавить(ПолеДляРасчетаИтога);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли