
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ИспользоватьВнешниеНаборыДанных",    Истина);
	Результат.Вставить("ИспользоватьПередКомпоновкойМакета", Истина);
	Результат.Вставить("ИспользоватьПослеКомпоновкиМакета",  Ложь);
	Результат.Вставить("ИспользоватьПослеВыводаРезультата",  Истина);
	Результат.Вставить("ИспользоватьДанныеРасшифровки",      Истина);
	Результат.Вставить("ИспользоватьПриВыводеЗаголовка",     Ложь);
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьВнешниеНаборыДанных(ПараметрыОтчета, МакетКомпоновки) Экспорт
	
	ДанныеУплачено = НовыйВнешниеДанныеУплачено();
	
	Если ПараметрыОтчета.ВидОтчета = ВидыОтчета().ПлатежиУСН
		ИЛИ ПараметрыОтчета.ВидОтчета = ВидыОтчета().НачисленияПлатежиУСН Тогда
		
		ПлатежиУСН = УчетУСН.ДокументыУплатыНалогаЗаПериод(
			ПараметрыОтчета.Организация,
			ПараметрыОтчета.НачалоПериода,
			ПараметрыОтчета.КонецПериода);
		
		Если ПлатежиУСН <> Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ПлатежиУСН, ДанныеУплачено);
		КонецЕсли;
		
	ИначеЕсли ПараметрыОтчета.ВидОтчета = ВидыОтчета().СтраховыеВзносы
		Или ПараметрыОтчета.ВидОтчета = ВидыОтчета().СтраховыеВзносыПоСроку Тогда
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(
			УплаченныеСтраховыеВзносы(ПараметрыОтчета),
			ДанныеУплачено);
	
	ИначеЕсли ЭтоОтчетПоТорговомуСбору(ПараметрыОтчета.ВидОтчета) Тогда
		
		ПлатежиТорговыйСбор = УчетУСН.ДокументыУплатыТорговогоСбора(
			ПараметрыОтчета.Организация,
			ПараметрыОтчета.НачалоПериода,
			ПараметрыОтчета.КонецПериода);
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ПлатежиТорговыйСбор, ДанныеУплачено);
		
	ИначеЕсли ЭтоОтчетПоНДФЛ(ПараметрыОтчета.ВидОтчета) Тогда
		
		УплаченныйНалогЗаПериодПоДокументам = 
			УчетНДФЛПредпринимателя.УплаченныйНалогЗаПериодПоДокументам(
				ПараметрыОтчета.Организация,
				ПараметрыОтчета.НачалоПериода,
				ПараметрыОтчета.КонецПериода);
		Если ЗначениеЗаполнено(УплаченныйНалогЗаПериодПоДокументам) Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(УплаченныйНалогЗаПериодПоДокументам,
				ДанныеУплачено);
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнитьСодержаниеПлатежей(ДанныеУплачено, ПараметрыОтчета.Организация);
	
	Возврат Новый Структура("Уплачено", ДанныеУплачено);
	
КонецФункции

// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут
Процедура ПередКомпоновкойМакета(ПараметрыОтчета, Схема, КомпоновщикНастроек) Экспорт
	
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "Организация", ПараметрыОтчета.Организация);
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", ПараметрыОтчета.НачалоПериода);
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", ПараметрыОтчета.КонецПериода);
	
	СчетаОплатыНалога = Новый Массив;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СчетаОплатыНалога, БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.Касса));
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СчетаОплатыНалога, БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетныеСчета));
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СчетаОплатыНалога, БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ЕдиныйНалоговыйСчет));
	
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "СчетаОплатыНалога", СчетаОплатыНалога);
	
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "СчетаНачисленияНалога",
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ЕНприУСН));
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "ВидыПлатежей",
		Перечисления.ВидыПлатежейВГосБюджет.ВидыНалоговыхПлатежей());
	
	СтруктураОтчета = КомпоновщикНастроек.Настройки.Структура;
	
	Если ЭтоОтчетПоНалогуУСН(ПараметрыОтчета.ВидОтчета) Тогда
		
		Если ВыводитьНачисленияУСН(ПараметрыОтчета.ВидОтчета) Тогда
			
			ГруппировкаНачислено = СтруктураОтчета.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
			ГруппировкаНачислено.Имя = "Документ начисления";
			ГруппировкаНачислено.Использование = Истина;
			
			Если ВыводитьНачисленияИПлатежиУСН(ПараметрыОтчета.ВидОтчета) Тогда
				// Выводим заголовок, если в отчете несколько таблиц.
				ЭлементЗаголовок = ГруппировкаНачислено.ПараметрыВывода.Элементы.Найти("Заголовок");
				ЭлементЗаголовок.Значение = НСтр("ru = 'Начислено'");
				ЭлементЗаголовок.Использование = Истина;
			КонецЕсли;
			
			ВыбранноеПоле      = ГруппировкаНачислено.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
			ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("ДокументНачисления");
			ВыбранноеПоле      = ГруппировкаНачислено.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
			ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("СуммаНачисления");
			
			ЭлементУО = ГруппировкаНачислено.УсловноеОформление.Элементы.Добавить();
			КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ДокументНачисления");
			ЭлементУО.Оформление.УстановитьЗначениеПараметра("МинимальнаяШирина", 55);
			ЭлементУО.Оформление.УстановитьЗначениеПараметра("МаксимальнаяШирина", 55);
			
			ЭлементУО = ГруппировкаНачислено.УсловноеОформление.Элементы.Добавить();
			КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СуммаНачисления");
			ЭлементУО.Оформление.УстановитьЗначениеПараметра("МинимальнаяШирина", 13);
			ЭлементУО.Оформление.УстановитьЗначениеПараметра("МаксимальнаяШирина", 13);
			
		КонецЕсли;
		
		Если ВыводитьПлатежиУСН(ПараметрыОтчета.ВидОтчета) Тогда
			
			ГруппировкаОплачено               = СтруктураОтчета.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
			ГруппировкаОплачено.Имя           = "Документ оплаты";
			ГруппировкаОплачено.Использование = Истина;
			
			Если ВыводитьНачисленияИПлатежиУСН(ПараметрыОтчета.ВидОтчета) Тогда
				// Выводим заголовок, если в отчете несколько таблиц.
				ЭлементЗаголовок = ГруппировкаОплачено.ПараметрыВывода.Элементы.Найти("Заголовок");
				ЭлементЗаголовок.Значение = НСтр("ru = 'Оплачено'");
				ЭлементЗаголовок.Использование = Истина;
			КонецЕсли;
			
			ВыбранноеПоле      = ГруппировкаОплачено.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
			ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("ДокументОплаты");
			ВыбранноеПоле      = ГруппировкаОплачено.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
			ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("СуммаОплаты");
			ВыбранноеПоле      = ГруппировкаОплачено.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
			
			ЭлементУО = ГруппировкаОплачено.УсловноеОформление.Элементы.Добавить();
			КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ДокументОплаты");
			ЭлементУО.Оформление.УстановитьЗначениеПараметра("МинимальнаяШирина", 55);
			ЭлементУО.Оформление.УстановитьЗначениеПараметра("МаксимальнаяШирина", 55);
			
			ЭлементУО = ГруппировкаОплачено.УсловноеОформление.Элементы.Добавить();
			КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СуммаОплаты");
			ЭлементУО.Оформление.УстановитьЗначениеПараметра("МинимальнаяШирина", 13);
			ЭлементУО.Оформление.УстановитьЗначениеПараметра("МаксимальнаяШирина", 13);
			
		КонецЕсли;
		
	ИначеЕсли ПараметрыОтчета.ВидОтчета = ВидыОтчета().СтраховыеВзносы
		Или ПараметрыОтчета.ВидОтчета = ВидыОтчета().СтраховыеВзносыПоСроку
		Или ПараметрыОтчета.ВидОтчета = ВидыОтчета().ТорговыйСбор Тогда
		
		ДетальнаяГруппировка               = СтруктураОтчета.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
		ДетальнаяГруппировка.Имя           = "Детальная";
		ДетальнаяГруппировка.Использование = Истина;
		
		ВыбранноеПоле      = ДетальнаяГруппировка.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("ДокументОплаты");
		ВыбранноеПоле      = ДетальнаяГруппировка.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("Содержание");
		ВыбранноеПоле      = ДетальнаяГруппировка.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("СуммаОплаты");

		ЭлементУО = ДетальнаяГруппировка.УсловноеОформление.Элементы.Добавить();
		КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ДокументОплаты");
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("МаксимальнаяШирина", 30);
		
		ЭлементУО = ДетальнаяГруппировка.УсловноеОформление.Элементы.Добавить();
		КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "Содержание");
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("МаксимальнаяШирина", 40);
		
		ЭлементУО = ДетальнаяГруппировка.УсловноеОформление.Элементы.Добавить();
		КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СуммаОплаты");
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("МинимальнаяШирина", 13);
		
	ИначеЕсли ЭтоОтчетПоНДФЛ(ПараметрыОтчета.ВидОтчета) Тогда
		
		Если ПараметрыОтчета.ВидОтчета = ВидыОтчета().НачисленияПлатежиНДФЛ Тогда
		
			БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "СчетаНачисленияНалога",
				БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.НДФЛПредпринимателя));
			
			ГруппировкаНачислено = СтруктураОтчета.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
			ГруппировкаНачислено.Имя = "Документ начисления";
			ГруппировкаНачислено.Использование = Истина;
				
			// Выводим заголовок, если в отчете несколько таблиц.
			ЭлементЗаголовок = ГруппировкаНачислено.ПараметрыВывода.Элементы.Найти("Заголовок");
			ЭлементЗаголовок.Значение = НСтр("ru = 'Начислено'");
			ЭлементЗаголовок.Использование = Истина;
				
			ВыбранноеПоле      = ГруппировкаНачислено.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
			ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("ДокументНачисления");
			ВыбранноеПоле      = ГруппировкаНачислено.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
			ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("СуммаНачисления");
			
			ЭлементУО = ГруппировкаНачислено.УсловноеОформление.Элементы.Добавить();
			КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ДокументНачисления");
			ЭлементУО.Оформление.УстановитьЗначениеПараметра("МинимальнаяШирина", 55);
			ЭлементУО.Оформление.УстановитьЗначениеПараметра("МаксимальнаяШирина", 55);
			
			ЭлементУО = ГруппировкаНачислено.УсловноеОформление.Элементы.Добавить();
			КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СуммаНачисления");
			ЭлементУО.Оформление.УстановитьЗначениеПараметра("МинимальнаяШирина", 13);
			ЭлементУО.Оформление.УстановитьЗначениеПараметра("МаксимальнаяШирина", 13);
			
		КонецЕсли;
		
		Если ПараметрыОтчета.ВидОтчета = ВидыОтчета().ПлатежиНДФЛ
			Или ПараметрыОтчета.ВидОтчета = ВидыОтчета().НачисленияПлатежиНДФЛ Тогда
		
			ГруппировкаОплачено               = СтруктураОтчета.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
			ГруппировкаОплачено.Имя           = "Документ оплаты";
			ГруппировкаОплачено.Использование = Истина;
			
			ЭлементЗаголовок = ГруппировкаОплачено.ПараметрыВывода.Элементы.Найти("Заголовок");
			ЭлементЗаголовок.Значение = НСтр("ru = 'Оплачено'");
			ЭлементЗаголовок.Использование = Истина;
			
			ВыбранноеПоле      = ГруппировкаОплачено.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
			ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("ДокументОплаты");
			ВыбранноеПоле      = ГруппировкаОплачено.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
			ВыбранноеПоле.Поле = Новый ПолеКомпоновкиДанных("СуммаОплаты");
			ВыбранноеПоле      = ГруппировкаОплачено.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
			
			ЭлементУО = ГруппировкаОплачено.УсловноеОформление.Элементы.Добавить();
			КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ДокументОплаты");
			ЭлементУО.Оформление.УстановитьЗначениеПараметра("МинимальнаяШирина", 55);
			ЭлементУО.Оформление.УстановитьЗначениеПараметра("МаксимальнаяШирина", 55);
			
			ЭлементУО = ГруппировкаОплачено.УсловноеОформление.Элементы.Добавить();
			КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СуммаОплаты");
			ЭлементУО.Оформление.УстановитьЗначениеПараметра("МинимальнаяШирина", 13);
			ЭлементУО.Оформление.УстановитьЗначениеПараметра("МаксимальнаяШирина", 13);
			
		КонецЕсли;
		
	КонецЕсли;
	
	КомпоновщикНастроек.Настройки.ДополнительныеСвойства.Вставить("ВыводитьЗаголовок", Ложь);
	КомпоновщикНастроек.Настройки.ДополнительныеСвойства.Вставить("ВыводитьПодвал"   , Ложь);
	
КонецПроцедуры

Процедура ПослеВыводаРезультата(ПараметрыОтчета, Результат) Экспорт
	
	БухгалтерскиеОтчетыВызовСервера.ОбработкаРезультатаОтчета(ПараметрыОтчета.ИдентификаторОтчета, Результат);
	
	Результат.ФиксацияСверху = 0;
	
	Результат.ФиксацияСлева = 0;
	
КонецПроцедуры

Функция ВидыОтчета() Экспорт
	
	ПоддерживаемыеВидыОтчета = Новый Структура;
	
	ПоддерживаемыеВидыОтчета.Вставить("НачисленияУСН",          "НачисленияУСН");
	ПоддерживаемыеВидыОтчета.Вставить("ПлатежиУСН",             "ПлатежиУСН");
	ПоддерживаемыеВидыОтчета.Вставить("НачисленияПлатежиУСН",   "НачисленияПлатежиУСН");
	ПоддерживаемыеВидыОтчета.Вставить("СтраховыеВзносы",        "СтраховыеВзносы");
	ПоддерживаемыеВидыОтчета.Вставить("СтраховыеВзносыПоСроку", "СтраховыеВзносыПоСроку");
	ПоддерживаемыеВидыОтчета.Вставить("ТорговыйСбор",           "ТорговыйСбор");
	ПоддерживаемыеВидыОтчета.Вставить("НачисленияПлатежиНДФЛ",  "НачисленияПлатежиНДФЛ");
	ПоддерживаемыеВидыОтчета.Вставить("ПлатежиНДФЛ",            "ПлатежиНДФЛ");
	
	Возврат ПоддерживаемыеВидыОтчета;
	
КонецФункции

Функция ЭтоОтчетПоНалогуУСН(ВидОтчета) Экспорт
	
	ВсеВидыОтчета = ВидыОтчета();
	
	Возврат ВидОтчета = ВсеВидыОтчета.НачисленияПлатежиУСН
		Или ВидОтчета = ВсеВидыОтчета.НачисленияУСН
		Или ВидОтчета = ВсеВидыОтчета.ПлатежиУСН;
	
КонецФункции

Функция ЭтоОтчетПоНДФЛ(ВидОтчета) Экспорт
	
	ВсеВидыОтчета = ВидыОтчета();
	
	Возврат ВидОтчета = ВсеВидыОтчета.НачисленияПлатежиНДФЛ
		Или ВидОтчета = ВсеВидыОтчета.ПлатежиНДФЛ;
	
КонецФункции

Функция ЭтоОтчетПоТорговомуСбору(ВидОтчета) Экспорт
	
	Возврат ВидОтчета = ВидыОтчета().ТорговыйСбор;
	
КонецФункции

Функция ЭтоОтчетПоВзносам(ВидОтчета) Экспорт
	
	ВсеВидыОтчета = ВидыОтчета();
	
	Возврат ВидОтчета = ВсеВидыОтчета.СтраховыеВзносы;
	
КонецФункции

Функция ЭтоОтчетПоВзносамПоСроку(ВидОтчета) Экспорт
	
	ВсеВидыОтчета = ВидыОтчета();
	
	Возврат ВидОтчета = ВсеВидыОтчета.СтраховыеВзносыПоСроку;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция УплаченныеСтраховыеВзносы(ПараметрыОтчета)
	СчетаДенежныхСредств = Новый Массив;
	СчетаДенежныхСредств.Добавить(ПланыСчетов.Хозрасчетный.КассаОрганизации); // 50.01
	СчетаДенежныхСредств.Добавить(ПланыСчетов.Хозрасчетный.РасчетныеСчета);   // 51
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыОтчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", ПараметрыОтчета.КонецПериода);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	
	Запрос.УстановитьПараметр("СчетаДенежныхСредств",
		БухгалтерскийУчет.СформироватьМассивСубсчетов(СчетаДенежныхСредств));
	СчетЕНС = Новый Массив;
	СчетЕНС.Добавить(ПланыСчетов.Хозрасчетный.ЕдиныйНалоговыйСчет);
	Запрос.УстановитьПараметр("СчетЕНС",
		БухгалтерскийУчет.СформироватьМассивСубсчетов(СчетЕНС));
	Запрос.УстановитьПараметр("СчетаУчетаВзносов",
		УчетРасходовУменьшающихОтдельныеНалоги.СчетаСтраховыхВзносовУменьшающихНалог());
	Запрос.УстановитьПараметр("ВидыПлатежей", Перечисления.ВидыПлатежейВГосБюджет.ВидыНалоговыхПлатежей());
	
	Если ПараметрыОтчета.ВидОтчета = "СтраховыеВзносы" Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ХозрасчетныйДвиженияССубконто.Период КАК Период,
		|	ХозрасчетныйДвиженияССубконто.Регистратор КАК Регистратор,
		|	ХозрасчетныйДвиженияССубконто.СчетКт КАК СчетКт
		|ПОМЕСТИТЬ вт_СписанияНаЕНС
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Организация = &Организация
		|				И СчетДт В (&СчетЕНС),
		|			,
		|			) КАК ХозрасчетныйДвиженияССубконто
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетыПоНалогамНаЕдиномНалоговомСчете.ПлатежныйДокумент КАК ДокументОплаты,
		|	РасчетыПоНалогамНаЕдиномНалоговомСчете.Сумма КАК СуммаОборот,
		|	НЕОПРЕДЕЛЕНО КАК ВидПлатежа,
		|	РасчетыПоНалогамНаЕдиномНалоговомСчете.СчетУчета КАК СчетУчета,
		|	РасчетыПоНалогамНаЕдиномНалоговомСчете.СрокУплаты КАК СтраховойПериод
		|ПОМЕСТИТЬ вт_ВсеДвиженияЕНС
		|ИЗ
		|	РегистрНакопления.РасчетыПоНалогамНаЕдиномНалоговомСчете КАК РасчетыПоНалогамНаЕдиномНалоговомСчете
		|ГДЕ
		|	РасчетыПоНалогамНаЕдиномНалоговомСчете.Организация = &Организация
		|	И РасчетыПоНалогамНаЕдиномНалоговомСчете.Активность
		|	И РасчетыПоНалогамНаЕдиномНалоговомСчете.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И РасчетыПоНалогамНаЕдиномНалоговомСчете.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И РасчетыПоНалогамНаЕдиномНалоговомСчете.СчетУчета В(&СчетаУчетаВзносов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СведенияОбУплатеНалогов.Ссылка,
		|	СведенияОбУплатеНалогов.Сумма,
		|	НЕОПРЕДЕЛЕНО,
		|	СведенияОбУплатеНалогов.СчетУчета,
		|	СведенияОбУплатеНалогов.Ссылка.Дата
		|ИЗ
		|	Документ.СведенияОбУплатеНалогов.Сведения КАК СведенияОбУплатеНалогов
		|ГДЕ
		|	СведенияОбУплатеНалогов.Ссылка.Организация = &Организация
		|	И СведенияОбУплатеНалогов.Ссылка.Проведен
		|	И СведенияОбУплатеНалогов.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И СведенияОбУплатеНалогов.СчетУчета В(&СчетаУчетаВзносов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт_ВсеДвиженияЕНС.ДокументОплаты КАК ДокументОплаты,
		|	вт_ВсеДвиженияЕНС.СуммаОборот КАК СуммаОборот,
		|	вт_ВсеДвиженияЕНС.ВидПлатежа КАК ВидПлатежа,
		|	вт_ВсеДвиженияЕНС.СчетУчета КАК СчетУчета,
		|	вт_ВсеДвиженияЕНС.СтраховойПериод КАК СтраховойПериод
		|ПОМЕСТИТЬ ВТ_ДвиженияЕНС
		|ИЗ
		|	вт_ВсеДвиженияЕНС КАК вт_ВсеДвиженияЕНС
		|		ЛЕВОЕ СОЕДИНЕНИЕ вт_СписанияНаЕНС КАК вт_СписанияНаЕНС
		|		ПО вт_ВсеДвиженияЕНС.ДокументОплаты = вт_СписанияНаЕНС.Регистратор
		|			И вт_ВсеДвиженияЕНС.СчетУчета = вт_СписанияНаЕНС.СчетКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ вт_ВсеДвиженияЕНС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ вт_СписанияНаЕНС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.Регистратор КАК ДокументОплаты,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборот,
		|	ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК ВидПлатежа,
		|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетУчета,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.Регистратор) = ТИП(Документ.СписаниеСРасчетногоСчета)
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.Регистратор КАК Документ.СписаниеСРасчетногоСчета).НалоговыйПериод
		|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОборотыДтКт.Регистратор) = ТИП(Документ.РасходныйКассовыйОрдер)
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.Регистратор КАК Документ.РасходныйКассовыйОрдер).НалоговыйПериод
		|		ИНАЧЕ ХозрасчетныйОборотыДтКт.Период
		|	КОНЕЦ КАК СтраховойПериод
		|ПОМЕСТИТЬ ВТ_Выписки
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Регистратор,
		|			СчетДт В (&СчетаУчетаВзносов),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет),
		|			СчетКт В (&СчетаДенежныхСредств),
		|			,
		|			Организация = &Организация
		|				И СубконтоДт1 В (&ВидыПлатежей)) КАК ХозрасчетныйОборотыДтКт
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	вт_ДвиженияЕНС.ДокументОплаты,
		|	вт_ДвиженияЕНС.СуммаОборот,
		|	вт_ДвиженияЕНС.ВидПлатежа,
		|	вт_ДвиженияЕНС.СчетУчета,
		|	вт_ДвиженияЕНС.СтраховойПериод
		|ИЗ
		|	ВТ_ДвиженияЕНС КАК вт_ДвиженияЕНС
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументОплаты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ вт_ДвиженияЕНС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПлатежноеПоручение.Ссылка КАК Ссылка,
		|	ПлатежноеПоручение.СуммаДокумента КАК СуммаДокумента,
		|	ПлатежноеПоручение.ДокументОснование КАК ДокументОснование
		|ПОМЕСТИТЬ ВТ_Платежки
		|ИЗ
		|	Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
		|ГДЕ
		|	ПлатежноеПоручение.Организация = &Организация
		|	И ПлатежноеПоручение.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И НЕ ПлатежноеПоручение.ПометкаУдаления
		|	И ПлатежноеПоручение.ПеречислениеВБюджет
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВТ_Платежки.Ссылка, ВТ_Выписки.ДокументОплаты) КАК ДокументОплаты,
		|	ВТ_Выписки.СуммаОборот КАК СуммаОплаты,
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(ВТ_Выписки.ДокументОплаты КАК Документ.СписаниеСРасчетногоСчета).ДатаВходящегоДокумента = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ВЫРАЗИТЬ(ВТ_Выписки.ДокументОплаты КАК Документ.СписаниеСРасчетногоСчета).Дата
		|		ИНАЧЕ ВЫРАЗИТЬ(ВТ_Выписки.ДокументОплаты КАК Документ.СписаниеСРасчетногоСчета).ДатаВходящегоДокумента
		|	КОНЕЦ КАК ДатаДокумента,
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(ВТ_Выписки.ДокументОплаты КАК Документ.СписаниеСРасчетногоСчета).НомерВходящегоДокумента ПОДОБНО ""%[^ ]%""
		|			ТОГДА ВЫРАЗИТЬ(ВТ_Выписки.ДокументОплаты КАК Документ.СписаниеСРасчетногоСчета).НомерВходящегоДокумента
		|		ИНАЧЕ ВЫРАЗИТЬ(ВТ_Выписки.ДокументОплаты КАК Документ.СписаниеСРасчетногоСчета).Номер
		|	КОНЕЦ КАК НомерДокумента,
		|	ВТ_Выписки.СчетУчета КАК СчетУчета,
		|	ВТ_Выписки.ВидПлатежа КАК ВидПлатежа,
		|	ВТ_Выписки.СтраховойПериод КАК НалоговыйПериод
		|ИЗ
		|	ВТ_Выписки КАК ВТ_Выписки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Платежки КАК ВТ_Платежки
		|		ПО (ВТ_Платежки.Ссылка = ВТ_Выписки.ДокументОплаты.ДокументОснование
		|				ИЛИ ВТ_Выписки.ДокументОплаты = ВТ_Платежки.ДокументОснование)
		|ГДЕ
		|	ВТ_Выписки.ДокументОплаты ССЫЛКА Документ.СписаниеСРасчетногоСчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Выписки.ДокументОплаты,
		|	ВТ_Выписки.СуммаОборот,
		|	ДанныеПервичныхДокументов.Дата,
		|	ДанныеПервичныхДокументов.Номер,
		|	ВТ_Выписки.СчетУчета,
		|	ВТ_Выписки.ВидПлатежа,
		|	ВТ_Выписки.СтраховойПериод
		|ИЗ
		|	ВТ_Выписки КАК ВТ_Выписки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|		ПО ВТ_Выписки.ДокументОплаты = ДанныеПервичныхДокументов.Документ
		|			И (ДанныеПервичныхДокументов.Организация = &Организация)
		|ГДЕ
		|	ВТ_Выписки.ДокументОплаты ССЫЛКА Документ.РасходныйКассовыйОрдер
		|	И ВТ_Выписки.СуммаОборот > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Выписки.ДокументОплаты,
		|	ВТ_Выписки.СуммаОборот,
		|	ДанныеПервичныхДокументов.Дата,
		|	ДанныеПервичныхДокументов.Номер,
		|	ВТ_Выписки.СчетУчета,
		|	ВТ_Выписки.ВидПлатежа,
		|	ВТ_Выписки.СтраховойПериод
		|ИЗ
		|	ВТ_Выписки КАК ВТ_Выписки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|		ПО ВТ_Выписки.ДокументОплаты = ДанныеПервичныхДокументов.Документ
		|			И (ДанныеПервичныхДокументов.Организация = &Организация)
		|ГДЕ
		|	ВТ_Выписки.ДокументОплаты ССЫЛКА Документ.ОперацияБух
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Выписки.ДокументОплаты,
		|	ВТ_Выписки.СуммаОборот,
		|	ДанныеПервичныхДокументов.Дата,
		|	ДанныеПервичныхДокументов.Номер,
		|	ВТ_Выписки.СчетУчета,
		|	ВТ_Выписки.ВидПлатежа,
		|	ВТ_Выписки.СтраховойПериод
		|ИЗ
		|	ВТ_Выписки КАК ВТ_Выписки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|		ПО ВТ_Выписки.ДокументОплаты = ДанныеПервичныхДокументов.Документ
		|			И (ДанныеПервичныхДокументов.Организация = &Организация)
		|ГДЕ
		|	ВТ_Выписки.ДокументОплаты ССЫЛКА Документ.ОперацияПоЕдиномуНалоговомуСчету
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Выписки.ДокументОплаты,
		|	ВТ_Выписки.СуммаОборот,
		|	ДанныеПервичныхДокументов.Дата,
		|	ДанныеПервичныхДокументов.Номер,
		|	ВТ_Выписки.СчетУчета,
		|	ВТ_Выписки.ВидПлатежа,
		|	ВТ_Выписки.СтраховойПериод
		|ИЗ
		|	ВТ_Выписки КАК ВТ_Выписки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|		ПО ВТ_Выписки.ДокументОплаты = ДанныеПервичныхДокументов.Документ
		|			И (ДанныеПервичныхДокументов.Организация = &Организация)
		|ГДЕ
		|	ВТ_Выписки.ДокументОплаты ССЫЛКА Документ.СведенияОбУплатеНалогов
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаДокумента";
		
	Иначе
		СхемаЗапроса = Новый СхемаЗапроса;
		СхемаЗапроса.УстановитьТекстЗапроса(
		"ВЫБРАТЬ
		|	ДанныеПервичныхДокументов.Организация КАК Организация,
		|	ДанныеПервичныхДокументов.Документ КАК Документ,
		|	ДанныеПервичныхДокументов.Номер КАК Номер,
		|	ДанныеПервичныхДокументов.Дата КАК Дата,
		|	ДанныеПервичныхДокументов.ДатаРегистратора КАК ДатаРегистратора,
		|	ДанныеПервичныхДокументов.НомерРегистратора КАК НомерРегистратора,
		|	ДанныеПервичныхДокументов.ЭтоУниверсальныйДокумент КАК ЭтоУниверсальныйДокумент,
		|	ДанныеПервичныхДокументов.ЭтоКорректировочныйДокумент КАК ЭтоКорректировочныйДокумент
		|ПОМЕСТИТЬ ВТ_ДанныеПервичныхДокументов
		|ИЗ
		|	РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|ГДЕ
		|	ДанныеПервичныхДокументов.Организация = &Организация
		|	И ДанныеПервичныхДокументов.ДатаРегистратора МЕЖДУ &НачалоПериода И &КонецПериода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасходыУменьшающиеНалогПоОтдельнымРежимам.ДокументРасхода КАК ДокументОплаты,
		|	РасходыУменьшающиеНалогПоОтдельнымРежимам.СуммаРасхода КАК СуммаОплаты,
		|	ВТ_ДанныеПервичныхДокументов.ДатаРегистратора КАК ДатаДокумента,
		|	ВТ_ДанныеПервичныхДокументов.НомерРегистратора КАК НомерДокумента,
		|	РасходыУменьшающиеНалогПоОтдельнымРежимам.СчетУчета КАК СчетУчета,
		|	НЕОПРЕДЕЛЕНО КАК ВидПлатежа,
		|	РасходыУменьшающиеНалогПоОтдельнымРежимам.Период КАК НалоговыйПериод
		|ИЗ
		|	РегистрНакопления.РасходыУменьшающиеНалогПоОтдельнымРежимам КАК РасходыУменьшающиеНалогПоОтдельнымРежимам
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеПервичныхДокументов КАК ВТ_ДанныеПервичныхДокументов
		|		ПО РасходыУменьшающиеНалогПоОтдельнымРежимам.ДокументРасхода = ВТ_ДанныеПервичныхДокументов.Документ
		|ГДЕ
		|	РасходыУменьшающиеНалогПоОтдельнымРежимам.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И РасходыУменьшающиеНалогПоОтдельнымРежимам.Организация = &Организация");
		
		ДатаПереходаНаЕНС = УчетСтраховыхВзносовИП.ДатаПереходаНаУпрощенныйЗачетВзносов();
		УпрощенныйЗачетВзносов = УчетСтраховыхВзносовИППовтИсп.УпрощенныйЗачетФиксированныхВзносов(
			ПараметрыОтчета.Организация,
			ПараметрыОтчета.КонецПериода);
		
		Если ПараметрыОтчета.КонецПериода > ДатаПереходаНаЕНС И УпрощенныйЗачетВзносов Тогда
			
			КонецПрошлогоГода = НачалоГода(ПараметрыОтчета.КонецПериода) - 1;
			СрокОплатыВзносыСДоходовПрошлыйГод = УчетСтраховыхВзносовИП.СрокОплатыВзноса(
				ПараметрыОтчета.Организация,
				КонецПрошлогоГода,
				Истина);
			
			СчетаУчетаСтраховыхВзносов = УчетСтраховыхВзносовИП.СчетаУчетаСтраховыхВзносов();
			СчетУчетаВзносыИП = Новый Массив;
			СчетУчетаВзносыИП.Добавить(СчетаУчетаСтраховыхВзносов.ПФР);
			СчетУчетаВзносыИП.Добавить(СчетаУчетаСтраховыхВзносов.ФФОМС);
			СчетУчетаВзносыИП.Добавить(СчетаУчетаСтраховыхВзносов.ЕдиныйТариф);
			
			Запрос.УстановитьПараметр("ДатаПереходаНаЕНС", НастройкиУчетаКлиентСервер.ДатаПереходаНаЕдиныйНалоговыйПлатеж());
			Запрос.УстановитьПараметр("НачалоПрошлогоГода", НачалоГода(КонецПрошлогоГода));
			Запрос.УстановитьПараметр("КонецПрошлогоГода", КонецПрошлогоГода);
			Запрос.УстановитьПараметр("ПредельныйСрокОплатыЗаПредыдущиеПериоды", ДобавитьМесяц(КонецПрошлогоГода, 1));
			Запрос.УстановитьПараметр("СчетУчетаВзносыИП", СчетУчетаВзносыИП);
			Запрос.УстановитьПараметр("СрокОплатыВзносыСДоходовПрошлыйГод", НачалоДня(СрокОплатыВзносыСДоходовПрошлыйГод));
			СхемаЗапроса.ПакетЗапросов[1].Операторы[0].Отбор.Добавить(
				"ВЫБОР
				|	КОГДА РасходыУменьшающиеНалогПоОтдельнымРежимам.СчетУчета В (&СчетУчетаВзносыИП)
				|		ТОГДА ВЫБОР
				|				КОГДА РасходыУменьшающиеНалогПоОтдельнымРежимам.ДокументРасхода ССЫЛКА Документ.РегламентнаяОперация
				|					И РасходыУменьшающиеНалогПоОтдельнымРежимам.ПериодНачисления МЕЖДУ &НачалоПрошлогоГода И &КонецПрошлогоГода
				|					И РасходыУменьшающиеНалогПоОтдельнымРежимам.ПериодНачисления >= &ДатаПереходаНаЕНС
				|					И РасходыУменьшающиеНалогПоОтдельнымРежимам.Период < &ПредельныйСрокОплатыЗаПредыдущиеПериоды
				|					ТОГДА ЛОЖЬ
				|				КОГДА РасходыУменьшающиеНалогПоОтдельнымРежимам.ДокументРасхода ССЫЛКА Документ.РегламентнаяОперация
				|					ТОГДА РасходыУменьшающиеНалогПоОтдельнымРежимам.Период <> &СрокОплатыВзносыСДоходовПрошлыйГод
				|				ИНАЧЕ НЕ РасходыУменьшающиеНалогПоОтдельнымРежимам.ДокументРасхода ССЫЛКА Документ.ЗаявлениеОЗачетеВСчетПредстоящейОбязанности
				|			КОНЕЦ
				|	ИНАЧЕ ИСТИНА
				|КОНЕЦ");
		КонецЕсли;
		
		Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();
		
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ЗаполнитьСодержаниеПлатежей(Платежи, Организация)
	
	Если Платежи.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СчетаУчета = ОбщегоНазначения.ВыгрузитьКолонку(Платежи, "СчетУчета", Истина);
	НаименованияСчетов = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(СчетаУчета, "Наименование");
	
	СчетаСтраховыхВзносов
		= БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию);
	
	Для Каждого Платеж Из Платежи Цикл
		
		Если УчетСтраховыхВзносовИП.ЭтоСчетУчетаСтраховыхВзносовИП(Платеж.СчетУчета) Тогда
			
			ВзносСДохода = Платеж.СчетУчета = ПланыСчетов.Хозрасчетный.ПФР_ОПС_ИП;
			НалоговыйПериод = УчетСтраховыхВзносовИП.СрокОплатыВзноса(Платеж.ДокументОплаты.Организация, Платеж.НалоговыйПериод, ВзносСДохода);
			Если Не Платеж.НалоговыйПериод = НалоговыйПериод Или ВзносСДохода Тогда
				ПорядокУплаты = УчетСтраховыхВзносовИППовтИсп.ПорядокУплатыВзноса(
				Платеж.ДокументОплаты.Организация,
				?(ВзносСДохода, Платеж.НалоговыйПериод, ДобавитьМесяц(Платеж.НалоговыйПериод, -12)),
				ВзносСДохода);
				Если ПорядокУплаты <> Неопределено Тогда
					НалоговыйПериод = ПорядокУплаты.ПериодСобытия;
				КонецЕсли;
			КонецЕсли;
			Платеж.Содержание = УчетСтраховыхВзносовИП.СодержаниеОперацииУплатыВзносов(
				Платеж.СчетУчета,
				Платеж.ВидПлатежа,
				НалоговыйПериод);
				
		ИначеЕсли СчетаСтраховыхВзносов.Найти(Платеж.СчетУчета) <> Неопределено Тогда
			
			Платеж.Содержание = СтрШаблон(НСтр("ru = '%1 за %2'"),
				НаименованияСчетов[Платеж.СчетУчета],
				Формат(Платеж.НалоговыйПериод, "ДФ='MMMM yyyy'"));
			
		ИначеЕсли Платеж.СчетУчета = ПланыСчетов.Хозрасчетный.ТорговыйСбор Тогда
			
			Платеж.Содержание = СтрШаблон(НСтр("ru = '%1 за %2'"),
				НаименованияСчетов[Платеж.СчетУчета],
				Формат(Платеж.НалоговыйПериод, "Л=ru_RU; ДФ='q ''квартал'' yyyy'"));
			
		Иначе
			
			Платеж.Содержание = НаименованияСчетов[Платеж.СчетУчета];
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция НовыйВнешниеДанныеУплачено()
	
	ДанныеУплачено = Новый ТаблицаЗначений;
	
	ДанныеУплачено.Колонки.Добавить("ДокументОплаты");
	ДанныеУплачено.Колонки.Добавить("СуммаОплаты");
	ДанныеУплачено.Колонки.Добавить("ДатаДокумента");
	ДанныеУплачено.Колонки.Добавить("НомерДокумента");
	ДанныеУплачено.Колонки.Добавить("СчетУчета");
	ДанныеУплачено.Колонки.Добавить("НалоговыйПериод");
	ДанныеУплачено.Колонки.Добавить("ВидПлатежа");
	ДанныеУплачено.Колонки.Добавить("Содержание");
	
	Возврат ДанныеУплачено;
	
КонецФункции

Функция ВыводитьНачисленияУСН(ВидОтчета)
	
	ВсеВидыОтчета = ВидыОтчета();
	
	Возврат ВидОтчета = ВсеВидыОтчета.НачисленияПлатежиУСН
		Или ВидОтчета = ВсеВидыОтчета.НачисленияУСН;
	
КонецФункции

Функция ВыводитьПлатежиУСН(ВидОтчета)
	
	ВсеВидыОтчета = ВидыОтчета();
	
	Возврат ВидОтчета = ВсеВидыОтчета.НачисленияПлатежиУСН
		Или ВидОтчета = ВсеВидыОтчета.ПлатежиУСН;
	
КонецФункции

Функция ВыводитьНачисленияИПлатежиУСН(ВидОтчета)
	
	ВсеВидыОтчета = ВидыОтчета();
	
	Возврат ВидОтчета = ВсеВидыОтчета.НачисленияПлатежиУСН;
	
КонецФункции

#КонецОбласти

#КонецЕсли