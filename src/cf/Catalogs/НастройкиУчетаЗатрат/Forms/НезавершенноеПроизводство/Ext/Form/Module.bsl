#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РедактированиеНастроек = Справочники.НастройкиУчетаЗатрат.ПрименитьПараметрыФормыНастроек(ЭтотОбъект, Счет);
	
	ЗаполнитьСодержимоеФормы(РедактированиеНастроек);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ПеречитатьПериодПерехода" И Параметр = ЭтотОбъект Тогда
		
		ИнформацияВыполненПереходДетализацияПоПродукции = ИнформацияВыполненПереходДетализацияПоПродукции(Организация, Счет);
		
		Элементы.НадписьСозданыДокументыПереходНЗПДетализацияПоПродукции.Заголовок =
			ИнформацияВыполненПереходДетализацияПоПродукции.Заголовок;
			
		ДатаПереходаНЗПДетализацияПоПродукции = ИнформацияВыполненПереходДетализацияПоПродукции.ДатаПерехода;
	ИначеЕсли ИмяСобытия = "Запись_ИнвентаризацияНезавершенногоПроизводства" Тогда
		ПодключитьОбработчикОжидания("ОбновитьИнформациюОДокументахИнвентаризацияНЗП", 1, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВедетсяПоРезультатамИнвентаризацииПриИзменении(Элемент)
	Элементы.ФормаOK.Доступность = Истина;
	Элементы.ФормаOK.КнопкаПоУмолчанию = Истина;
	НастроитьОтображениеРежимДокументаИнвентаризацияНЗП();
КонецПроцедуры

&НаКлиенте
Процедура ВедетсяБезИнвентаризацииПриИзменении(Элемент)
	
	Если Не ВозможенПереходНЗПДетализацияПоПродукции
		Или РазрешенПереходНЗПДетализацияПоПродукции
		Или ОтключитьДетализациюПоПродукции Тогда
		Возврат;
	КонецЕсли;
	
	Если ВключеныОстаткиПоПродукции Тогда
		
		Элементы.НадписьИнформацияОтменаПереходНЗП.Видимость = Истина;
		УстановитьЗаголовокБудутСозданыДокументыВключеныОстатки(
			Элементы.НадписьИнформацияОтменаПереходНЗП.Заголовок, АдресРедактированиеНастроек);
			
	Иначе
		
		ОтобразитьДействияПереходаНЗПДетализацияПоПродукции();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НеВедетсяПриИзменении(Элемент)
	Элементы.ФормаOK.Доступность = Истина;
	Элементы.ФормаOK.КнопкаПоУмолчанию = Истина;
КонецПроцедуры

&НаКлиенте
Процедура НадписьИнформацияОтменаПереходНЗПОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	// Нажатие на гиперссылку "Отменить выбор" возвращает к выбору "Разрешить изменение плана счетов", "Отключить детализацию по продукции"
	СтандартнаяОбработка = Ложь;
	
	ОтобразитьДействияПереходаНЗПДетализацияПоПродукции();
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОтменитьОтключениеПродукции" Тогда
		
		ОтключитьДетализациюПоПродукции = Ложь;
		ОбновитьФормуПриИзмененииАналитики("ВключитьДетализациюПоПродукции");
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НадписьСозданыДокументыНЗППереходДетализацияПоПродукцииОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	// Список документов ввода остатков НЗП в разрезе продукции выводится с отбором по счету и по организации.
	// При этом для головной организации доступны документы всех филиалов,
	// а для обособленного подразделения - только документы этого обособленного подразделения.
	// Поэтому передадим Организацию в качестве параметра и в зависимости от вида организации
	// на форме списка установим отбор либо по организации, либо по головной организации.
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	
	Отбор = Новый Структура("СчетУчета", Счет);
	ПараметрыФормы.Вставить("Отбор", Отбор);
	
	ПараметрыФормы.Вставить("ДатаПереходаНЗПДетализацияПоПродукции", ДатаПереходаНЗПДетализацияПоПродукции);
	ПараметрыФормы.Вставить("Организация", Организация);
	
	ОткрытьФорму("РегистрСведений.ДокументыПереходаНЗПДетализацияПоПродукции.Форма.ФормаСпискаДокументов", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДействиеПереходНЗППриИзменении(Элемент)
		
	УстановитьТекстПодсказкиПереходНЗП(Элементы.ПереходДетализацияПоПродукцииПодсказка.Заголовок, ДействиеПереходНЗП, КодСчета);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредупреждениеСозданыДокументыДругогоФорматаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ДокументыНЗП" Тогда
		НастройкиУчетаКлиент.ПоказатьСписокДокументовИнвентаризацияНЗП(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаOK(Команда)
	
	РезультатФормы = Неопределено;
	
	Если Модифицированность Тогда
		РезультатФормы = УстановитьВыполненныеНастройки(
			АдресРедактированиеНастроек,
			Счет,
			ВариантУчета,
			ОтключитьДетализациюПоПродукции,
			УказыватьСуммуНезавершенногоПроизводстваВручную);
	КонецЕсли;
	
	Закрыть(РезультатФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура СтандартныеНастройки(Команда)
	
	ОтобразитьРежимСовместимости(ЭтотОбъект, Ложь);
	КлючСохраненияПоложенияОкна = ИдентификаторНастройкиОкна;
	
КонецПроцедуры

&НаКлиенте
Процедура Подтвердить(Команда)
	
	ТекстВводДокументовПродукцияОтключена = "";
	
	Если ДействиеПереходНЗП = "РазрешитьИзменениеПланаСчетов" Тогда
		РазрешитьИзменениеПланаСчетов();
		ТекстВводДокументовПродукцияОтключена = 
		НСтр("ru = 'После применения учетной политики изменится план счетов и будут созданы документы ввода остатков НЗП в разрезе продукции.
		|Документы будут доступны в этой форме.
		|
		|%1'");
		ГиперссылкаОтменитьВыбор = НСтр("ru = '<a href=""ОтменитьИзменениеПланаСчетов"">Отменить выбор</a>'");
	ИначеЕсли ДействиеПереходНЗП = "ОтключитьДетализациюПоПродукции" Тогда
		ОтключитьДетализациюПоПродукции();
		ТекстВводДокументовПродукцияОтключена = 
		НСтр("ru = 'Детализация по продукции отключена.
		|
		|%1'");
		ГиперссылкаОтменитьВыбор = НСтр("ru = '<a href=""ОтменитьОтключениеПродукции"">Отменить выбор</a>'");
	КонецЕсли;

	Элементы.НадписьИнформацияОтменаПереходНЗП.Заголовок = СтроковыеФункцииКлиент.ФорматированнаяСтрока(
		ТекстВводДокументовПродукцияОтключена, ГиперссылкаОтменитьВыбор);
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекстПодсказкиПереходНЗП(Заголовок, ДействиеПереходНЗП, КодСчета)
	
	ТекстПодсказки = "";
	Если ДействиеПереходНЗП = "РазрешитьИзменениеПланаСчетов" Тогда
		
		ТекстПодсказки = НСтр("ru = 'Незавершенное производство будет учитываться на счете %1 с детализацией по продукции. 
									|После записи учетной политики изменится план счетов и будут созданы документы ввода остатков НЗП в разрезе продукции.'");
	
	ИначеЕсли ДействиеПереходНЗП = "ОтключитьДетализациюПоПродукции" Тогда
		
		ТекстПодсказки = НСтр("ru = 'Детализация по продукции на счете %1 настраивается в форме детализации учета затрат.
									|Если детализация по продукции была включена ошибочно, подтвердите ее отключение.'");
	КонецЕсли;
	
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		ТекстПодсказки,
		КодСчета);
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИнформацияВыполненПереходДетализацияПоПродукции(Организация, Счет)
	
	ИнформацияВыполненПереходДетализацияПоПродукции = Новый Структура;
	ПереходНЗПДетализацияПоПродукции.ВыполненПереходНЗПДетализацияПоПродукции(
		Организация,
		Счет,
		ИнформацияВыполненПереходДетализацияПоПродукции);
		
	Возврат ИнформацияВыполненПереходДетализацияПоПродукции;
	
КонецФункции

&НаКлиенте
Процедура ОтключитьДетализациюПоПродукции()
	
	ОтключитьДетализациюПоПродукции = Истина;
	Элементы.ФормаOK.Доступность = Истина;
	Элементы.ФормаOK.КнопкаПоУмолчанию = Истина;
	Элементы.ДействияПереходДетализацияПоПродукции.Видимость = Ложь;
	Элементы.НадписьИнформацияОтменаПереходНЗП.Видимость = Истина;
	
	ОбновитьФормуПриИзмененииАналитики("ОтключитьДетализациюПоПродукции");
	
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьИзменениеПланаСчетов()

	ОтобразитьИнформациюПереходНЗПДетализацияПоПродукции(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьДействияПереходаНЗПДетализацияПоПродукции()
	
	Элементы.ДействияПереходДетализацияПоПродукции.Видимость = Истина;
	Элементы.ФормаOK.Доступность = Ложь;
	Элементы.ФормаOK.КнопкаПоУмолчанию = Ложь;
	Элементы.НадписьИнформацияОтменаПереходНЗП.Видимость = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСодержимоеФормы(РедактированиеНастроек)
	
	// Настройки
	
	ВариантУчета = РедактированиеНастроек.Настройки.Закрытие[Счет].НезавершенноеПроизводство;
	
	Если Не ЗначениеЗаполнено(ВариантУчета) Тогда
		ВариантУчета = Перечисления.ВариантыУчетаНезавершенногоПроизводства.НеВедется;
	КонецЕсли;
	
	АналитикаУчетаБезИнвентаризации = АналитикаУчетаБезИнвентаризации(РедактированиеНастроек);
	
	АналитикаНезавершенногоПроизводства = РедактированиеНастроек.Настройки.АналитикаНезавершенногоПроизводства[Счет];

	УказыватьСуммуНезавершенногоПроизводстваВручную =
		(АналитикаНезавершенногоПроизводства.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Продукция) = Неопределено);
	
	Если АналитикаУчетаБезИнвентаризации <> ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Продукция
		Или ВариантУчета <> Перечисления.ВариантыУчетаНезавершенногоПроизводства.ВедетсяПоРезультатамИнвентаризации Тогда
			Элементы.ГруппаУказыватьСуммуНезавершенногоПроизводства.Видимость = Ложь;
	КонецЕсли;
	
	ВозможенПереходНЗПДетализацияПоПродукции =
		ПереходНЗПДетализацияПоПродукции.ВозможенПереходНЗПДетализацияПоПродукции(РедактированиеНастроек.Настройки, Счет, ВариантУчета);
	
	КодСчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Счет, "Код");
	
	НастроитьОтображениеРежимДокументаИнвентаризацияНЗП();
	
	РежимСовместимости = (РедактированиеНастроек.Настройки.КомбинированныеНастройкиНезавершенноеПроизводство.Найти(Счет) <> Неопределено);
	
	Если РежимСовместимости Тогда
		ВариантУчета = Перечисления.ВариантыУчетаНезавершенногоПроизводства.НеВедется;
	КонецЕсли;
	
	НастроитьОтображениеПереходНЗПДетализацияПоПродукции(РедактированиеНастроек);
	
	КлючСохраненияПоложенияОкна = XMLСтрока(?(РежимСовместимости, Истина, АналитикаУчетаБезИнвентаризации)); // чтобы восстанавливался размер формы, соответствующий контенту
	ИдентификаторНастройкиОкна = XMLСтрока(АналитикаУчетаБезИнвентаризации);
	
	// Элементы формы
	
	ИмяВариантУчета = ОбщегоНазначения.ИмяЗначенияПеречисления(ВариантУчета);
	ТекущийЭлемент = Элементы[ИмяВариантУчета];
	
	ОтобразитьРежимСовместимости(ЭтотОбъект, РежимСовместимости);
	
	УстановитьЗаголовокВариантУчета(Элементы.НеВедется, Счет);
	
	УстановитьПодсказки(АналитикаУчетаБезИнвентаризации, РедактированиеНастроек.Настройки.ВыпускПродукции);
	
	УстановитьИнформацияКомбинированиеВариантовУчета(Счет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнформациюОДокументахИнвентаризацияНЗП()
	НастроитьОтображениеРежимДокументаИнвентаризацияНЗП();
КонецПроцедуры

&НаСервере
Процедура НастроитьОтображениеРежимДокументаИнвентаризацияНЗП()
	
	Элементы.ГруппаПредупреждениеАвтоматическаяОценка.Видимость = Ложь;
	
	Если ВариантУчета = Перечисления.ВариантыУчетаНезавершенногоПроизводства.ВедетсяПоРезультатамИнвентаризации
		И Не ОтключитьДетализациюПоПродукции
		И АналитикаУчетаБезИнвентаризации = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Продукция Тогда

		Элементы.ГруппаУказыватьСуммуНезавершенногоПроизводства.Видимость = Истина;
		
		// Переход на остатки для субконто "Продукция" заблокирован ранее: у флажка установлено свойство "Только просмотр"
		// (см. НастроитьОтображениеПереходНЗПДетализацияПоПродукции)
		Если Не ВозможенПереходНЗПДетализацияПоПродукции Тогда

			ОтображатьИнформациюОДокументах =
				Не ОтключитьДетализациюПоПродукции И Не РегистрыСведений.УчетнаяПолитика.ДоступноИзменениеРежимаОценкиНЗП(
					Организация,
					Период, Счет,
					УказыватьСуммуНезавершенногоПроизводстваВручную);

			Элементы.ГруппаПредупреждениеАвтоматическаяОценка.Видимость = ОтображатьИнформациюОДокументах;
			Элементы.УказыватьСуммуНезавершенногоПроизводстваВручную.ТолькоПросмотр = ОтображатьИнформациюОДокументах;

			ТекстЗаголовкаСозданыДокументы = "";
			Если УказыватьСуммуНезавершенногоПроизводстваВручную Тогда
				ТекстЗаголовкаСозданыДокументы = НСтр(
					"ru = 'Автоматическая оценка незавершенного производства недоступна, так как введены  <a href = ""ДокументыНЗП"">Документы инвентаризации НЗП с суммовой оценкой</a>'");
			Иначе
				ТекстЗаголовкаСозданыДокументы = НСтр(
					"ru = 'Оценка незавершенного производства с указанием сумм вручную недоступна, так как введены  <a href = ""ДокументыНЗП"">Документы с автоматической оценкой незавершенного производства</a>'");
			КонецЕсли;
			Элементы.ПредупреждениеАвтоматическаяОценка.Заголовок =
				СтроковыеФункции.ФорматированнаяСтрока(ТекстЗаголовкаСозданыДокументы);
		Иначе
			Элементы.ГруппаПредупреждениеАвтоматическаяОценка.Видимость = Истина;
			Если МожноПерезакрытьПериод() Тогда
				ТекстЗаголовка = НСтр(
					"ru = 'Автоматическую оценку незавершенного производства можно включить только при начале ведения учета.
					|Например, можно отменить закрытие всех периодов по организациям, в которых отражались затраты на счете %1,
					|или начать вести учет на новом субсчете.'");
			Иначе
				ТекстЗаголовка = НСтр(
					"ru = 'Автоматическую оценку незавершенного производства можно включить только при начале ведения учета.
					|Например, можно начать вести учет затрат на новом субсчете.'");
			КонецЕсли;
			Элементы.ПредупреждениеАвтоматическаяОценка.Заголовок =
				СтроковыеФункции.ФорматированнаяСтрока(ТекстЗаголовка, КодСчета);
		КонецЕсли;
	ИначеЕсли ОтключитьДетализациюПоПродукции Тогда
		Элементы.ГруппаВедетсяПоРезультатамИнвентаризации.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция МожноПерезакрытьПериод()
	
	Если Не ПравоДоступа("Редактирование", Метаданные.Документы.РегламентнаяОперация) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	РегламентнаяОперация.Ссылка
		|ИЗ
		|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
		|ГДЕ
		|	РегламентнаяОперация.Дата < &Дата
		|	И РегламентнаяОперация.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыРегламентныхОпераций.ЗакрытиеСчетов20_23_25_26)
		|	И РегламентнаяОперация.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийРегламентныхОпераций.Выполнено)";
	
	Запрос.УстановитьПараметр("Дата", НачалоГода(ТекущаяДатаСеанса()));
	
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Не Результат.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	КоличествоДоступныхОрганизаций = 
		ОбщегоНазначенияБПВызовСервераПовтИсп.ВсеОрганизацииДанныеКоторыхДоступныПоRLS(Истина).Количество();
		
	КоличествоОрганизаций = Справочники.Организации.КоличествоОрганизаций();
	
	Возврат КоличествоДоступныхОрганизаций = КоличествоОрганизаций;
	
КонецФункции

&НаСервере
Процедура НастроитьОтображениеПереходНЗПДетализацияПоПродукции(Знач РедактированиеНастроек)
	
	РазрешенПереходНЗПДетализацияПоПродукции =
		ПереходНЗПДетализацияПоПродукции.РазрешенПереходНЗПДетализацияПоПродукции(РедактированиеНастроек.Настройки, Счет);
		
	ИспользуетсяДетализацияПоПродукции =
		(АналитикаУчетаБезИнвентаризации = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Продукция);
		
	ОтсутствуетОборотноеСубконтоПродукция =
		(ПереходНЗПДетализацияПоПродукции.КодыСчетовТолькоОборотыПоСубконтоПродукция(Счет).Количество() = 0);
		
	ВключеныОстаткиПоПродукции = ИспользуетсяДетализацияПоПродукции И ОтсутствуетОборотноеСубконтоПродукция;
	
	ИнформацияВыполненПереходДетализацияПоПродукции = Новый Структура;
	
	ВыполненПереходНЗПДетализацияПоПродукции = ПереходНЗПДетализацияПоПродукции.ВыполненПереходНЗПДетализацияПоПродукции(
		Организация,
		Счет,
		ИнформацияВыполненПереходДетализацияПоПродукции);
	
	Если ВыполненПереходНЗПДетализацияПоПродукции Тогда
		
		Элементы.НадписьСозданыДокументыПереходНЗПДетализацияПоПродукции.Заголовок = ИнформацияВыполненПереходДетализацияПоПродукции.Заголовок;
		Элементы.НадписьСозданыДокументыПереходНЗПДетализацияПоПродукции.Видимость = Истина;
		
		ДатаПереходаНЗПДетализацияПоПродукции = ИнформацияВыполненПереходДетализацияПоПродукции.ДатаПерехода;
		
	ИначеЕсли ВозможенПереходНЗПДетализацияПоПродукции И РазрешенПереходНЗПДетализацияПоПродукции И ВключеныОстаткиПоПродукции Тогда
		
		УстановитьЗаголовокБудутСозданыДокументыВключеныОстатки(Элементы.НадписьИнформацияОтменаПереходНЗП.Заголовок, АдресРедактированиеНастроек);
		
		ОтобразитьИнформациюПереходНЗПДетализацияПоПродукции(ЭтотОбъект);
		
	ИначеЕсли ВозможенПереходНЗПДетализацияПоПродукции И РазрешенПереходНЗПДетализацияПоПродукции Тогда
		
		ОтобразитьИнформациюПереходНЗПДетализацияПоПродукции(ЭтотОбъект);
		
	КонецЕсли;
	
	Элементы.ПереходДетализацияПоПродукцииРазрешитьИзменениеПланаСчетов.Заголовок =
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Сейчас на счете %1 остатки в разрезе продукции не учитываются.
				 |Необходимо подтвердить изменение плана счетов или отключить детализацию по продукции.'"),
			КодСчета);
			
	Элементы.ДействияПереходДетализацияПоПродукции.Видимость = Ложь;
	
	ДействиеПереходНЗП = "РазрешитьИзменениеПланаСчетов";
	
	// Блокирование настройки, пока не автоматизирован процесс перехода на автоматический учет.
	Если ВозможенПереходНЗПДетализацияПоПродукции Тогда
		Элементы.УказыватьСуммуНезавершенногоПроизводстваВручную.ТолькоПросмотр = Истина;
		УказыватьСуммуНезавершенногоПроизводстваВручную = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьЗаголовокБудутСозданыДокументыВключеныОстатки(Заголовок, Знач АдресРедактированиеНастроек)
	
	РедактированиеНастроек = ПолучитьИзВременногоХранилища(АдресРедактированиеНастроек);
	
	ВыпускПродукции = РедактированиеНастроек.Настройки.ВыпускПродукции;
	
	ШаблонЗаголовка = НСтр("ru = 'После сохранения учетной политики будут созданы документы ввода остатков НЗП в разрезе %1.
					 	   |Документы будут доступны в этой форме.'");
	
	Если ВыпускПродукции Тогда
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонЗаголовка, НСтр("ru = 'наименований продукции (работ)'"));
	Иначе
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонЗаголовка, НСтр("ru = 'наименований работ'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОтобразитьИнформациюПереходНЗПДетализацияПоПродукции(Форма)
	
	Форма.РазрешенПереходНЗПДетализацияПоПродукции = Истина;
	Форма.Элементы.ФормаOK.Доступность = Истина;
	Форма.Элементы.ФормаOK.КнопкаПоУмолчанию = Истина;
	Форма.Элементы.ДействияПереходДетализацияПоПродукции.Видимость = Ложь;
	Форма.Элементы.НадписьИнформацияОтменаПереходНЗП.Видимость = Истина;
	
КонецПроцедуры

&НаСервере
Функция АналитикаУчетаБезИнвентаризации(РедактированиеНастроек, ИзменениеАналитикиПродукция = "")

	ОтображаемаяАналитика = РедактированиеНастроек.Настройки.ОтображаемаяАналитика[Счет];

	АналитикаУчетаБезИнвентаризации = Неопределено;
	
	Если (Не ЗначениеЗаполнено(ИзменениеАналитикиПродукция)
		И ОтображаемаяАналитика.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Продукция) <> Неопределено)
		Или ИзменениеАналитикиПродукция = "ВключитьДетализациюПоПродукции" Тогда
		АналитикаУчетаБезИнвентаризации = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Продукция;
	ИначеЕсли ОтображаемаяАналитика.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы) <> Неопределено Тогда
		АналитикаУчетаБезИнвентаризации = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы;
	КонецЕсли;
	
	Возврат АналитикаУчетаБезИнвентаризации;
	
КонецФункции

&НаСервере
Процедура ОбновитьФормуПриИзмененииАналитики(ИзменениеАналитикиПродукция)
	
	РедактированиеНастроек = ПолучитьИзВременногоХранилища(АдресРедактированиеНастроек);
	АналитикаУчетаБезИнвентаризации = АналитикаУчетаБезИнвентаризации(РедактированиеНастроек, ИзменениеАналитикиПродукция);
	УстановитьПодсказки(АналитикаУчетаБезИнвентаризации, РедактированиеНастроек.Настройки.ВыпускПродукции);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОтобразитьРежимСовместимости(Форма, Знач РежимСовместимости)
	
	Форма.Элементы.РежимСовместимости.Видимость = РежимСовместимости;
	Форма.Элементы.ВариантыУчета.Видимость      = Не РежимСовместимости;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьЗаголовокВариантУчета(ПервыйЭлементПереключателя, Счет)
	
	ПервыйЭлементПереключателя.Заголовок = СтрШаблон(
		НСтр("ru = 'Учет незавершенного производства на счете %1'"),
		ПланыСчетов.Хозрасчетный.ПолноеПредставлениеСчета(Счет));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПодсказки(АналитикаУчетаБезИнвентаризации, ВыпускПродукции)
	
	МетаданныеИнвентаризацияНЗП = Метаданные.Документы.ИнвентаризацияНЗП;
	ГиперссылкаИнвентаризацияНЗП = СтрШаблон(
		"<a href=""e1cib/list/Документ.%1"">%2</a>",
		МетаданныеИнвентаризацияНЗП.Имя,
		МетаданныеИнвентаризацияНЗП.ПредставлениеСписка);
	
	// Используем самодельные элементы, чтобы обеспечить отступ.
	
	Элементы.НеВедетсяПодсказка.Заголовок = НСтр(
	"ru = 'Счет закрывается ежемесячно, без остатка.
     |Этот вариант рекомендуется по умолчанию.'");
	
	// Ведется без инвентаризации
	Текст = "";
	
	ШаблонЗаголовокБезИнвентаризации = НСтр("ru = 'Ведется без инвентаризации (%1)'");
	ПредставлениеАналитикиБезИнвентаризации = "";
	Если АналитикаУчетаБезИнвентаризации = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Продукция Тогда
		
		Если ВыпускПродукции Тогда
			Текст = НСтр(
			"ru = 'Учет основан на том, что каждое наименование продукции выпускается только один раз, по индивидуальному заказу.
	         |На счете остаются суммы, связанные с наименованиями продукции, которая не выпускалась в течение месяца.'");
	        ПредставлениеАналитикиБезИнвентаризации = НСтр("ru = 'рекомендуется при производстве уникальной продукции'");
		Иначе
			Текст = НСтр(
			"ru = 'Учет основан на том, что каждое наименование работ выполняется только один раз, по индивидуальному заказу.
		     |На счете остаются суммы, связанные с наименованиями работ, которые не выполнялись в течение месяца.'");
		    ПредставлениеАналитикиБезИнвентаризации = НСтр("ru = 'рекомендуется при выполнении уникальных работ'");
		КонецЕсли;
		
	ИначеЕсли АналитикаУчетаБезИнвентаризации = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы Тогда
		
		Если ВыпускПродукции Тогда
			ТекстНетВыпуска = НСтр("ru = 'не отражены реализация услуг или выпуск продукции'"); // в шаблоне - %1
			ТекстЕстьВыпуск = НСтр("ru = 'были отражены реализация услуг или выпуск продукции'"); // в шаблоне - %2
		Иначе
			ТекстНетВыпуска = НСтр("ru = 'не отражена реализация услуг'");
			ТекстЕстьВыпуск = НСтр("ru = 'была отражена реализация услуг'");
		КонецЕсли;
		
		ШаблонТекста = НСтр(
		"ru = 'Учет основан на том, что затраты на каждый проект, заказ учитываются отдельно (на отдельной номенклатурной группе).
	     |На счете в полном объеме остаются суммы, относящиеся к номенклатурным группам, по которым %1.
	     |Для того, чтобы оставить на счете суммы и по номенклатурным группам, по которым %2,
	     |введите документ %3.'");
		
		Текст = СтроковыеФункции.ФорматированнаяСтрока(СтрШаблон(ШаблонТекста, ТекстНетВыпуска, ТекстЕстьВыпуск, ГиперссылкаИнвентаризацияНЗП));
		ПредставлениеАналитикиБезИнвентаризации = НСтр("ru = 'рекомендуется для учета работ по проектам, заказам, когда каждый проект соответствует отдельной номенклатурной группе'");
	КонецЕсли;
	
	Если ПустаяСтрока(Текст) Тогда
		Элементы.ВедетсяБезИнвентаризацииОформление.Видимость = Ложь;
		Если ВариантУчета = Перечисления.ВариантыУчетаНезавершенногоПроизводства.ВедетсяБезИнвентаризации Тогда
			ВариантУчета = Перечисления.ВариантыУчетаНезавершенногоПроизводства.ВедетсяПоРезультатамИнвентаризации;
		КонецЕсли;
	Иначе
		Элементы.ВедетсяБезИнвентаризацииПодсказка.Заголовок = Текст;
		Элементы.ВедетсяБезИнвентаризации.СписокВыбора[0].Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонЗаголовокБезИнвентаризации,
			ПредставлениеАналитикиБезИнвентаризации);
	КонецЕсли;
	
	// Ведется по результатам инвентаризации
	
	// Переключатель возможности учета НЗП по номенклатурным группам нужен только если включена детализация по продукции.
	Элементы.ГруппаУказыватьСуммуНезавершенногоПроизводства.Видимость =
		(АналитикаУчетаБезИнвентаризации = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Продукция);
	
	Если АналитикаУчетаБезИнвентаризации = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Продукция Тогда
		
		ШаблонТекста = НСтр(
			"ru = 'Учет основан на ежемесячной инвентаризации остатков незавершенного производства в натуральном выражении.
			|По результатам инвентаризации сотрудники предприятия оценивают количество и степень готовности незавершенного производства на конец месяца.
			|На счете остаются суммы, рассчитанные из данных, указанных в документе %1.'");

	Иначе
		
		ШаблонТекста = НСтр(
			"ru = 'Учет основан на ежемесячной инвентаризации остатков незавершенного производства, в том числе, в натуральном выражении.
			|По результатам инвентаризации сотрудники предприятия оценивают стоимость незавершенного производства на конец месяца.
			|На счете остаются суммы, указанные в документе %1.'");

	КонецЕсли;
	
	Элементы.ВедетсяПоРезультатамИнвентаризацииПодсказка.Заголовок = СтроковыеФункции.ФорматированнаяСтрока(
		СтрШаблон(ШаблонТекста, ГиперссылкаИнвентаризацияНЗП));
		
	УстановитьТекстПодсказкиПереходНЗП(Элементы.ПереходДетализацияПоПродукцииПодсказка.Заголовок, ДействиеПереходНЗП, КодСчета);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьИнформацияКомбинированиеВариантовУчета(Счет)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Счет", Счет);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НЕ Хозрасчетный.Родитель.Ссылка ЕСТЬ NULL КАК ЭтоСубсчет,
	|	Хозрасчетный.Родитель КАК Родитель,
	|	Хозрасчетный.Родитель.Код КАК Код,
	|	Хозрасчетный.Родитель.Наименование КАК Наименование
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка = &Счет";
	Выборка = Запрос.Выполнить().Выбрать();
	
	ВидимостьИнформации = Ложь;
	ПредставлениеСчета  = "";
	
	Если Выборка.Следующий() И Выборка.ЭтоСубсчет Тогда
	
		ВидимостьИнформации = Истина;
		ПредставлениеСчета  = ПланыСчетов.Хозрасчетный.ПолноеПредставлениеСчета(Выборка.Родитель, Выборка.Код, Выборка.Наименование);
		
	КонецЕсли;
	
	Если Не ВидимостьИнформации Тогда
		Элементы.ИнформацияКомбинированиеВариантовУчета.Видимость = Ложь;
	Иначе
		
		Элементы.ИнформацияКомбинированиеВариантовУчета.Заголовок = СтрШаблон(
			Нстр("ru = 'Для того, чтобы комбинировать разные варианты учета, используйте разные субсчета счета %1'"),
			ПредставлениеСчета);
			
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция УстановитьВыполненныеНастройки(Знач АдресРедактированиеНастроек, Знач Счет, Знач ВариантУчета, Знач ОтключитьДетализациюПоПродукции, Знач УказыватьСуммуНезавершенногоПроизводстваВручную)
	
	РедактированиеНастроек = Справочники.НастройкиУчетаЗатрат.НачатьУстановкуВыполненныхНастроек(АдресРедактированиеНастроек);
	
	РедактированиеНастроек.Настройки.Закрытие[Счет].НезавершенноеПроизводство = ВариантУчета;
	
	ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(
		РедактированиеНастроек.Настройки.КомбинированныеНастройкиНезавершенноеПроизводство,
		Счет);
	
	Если УказыватьСуммуНезавершенногоПроизводстваВручную Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(
			РедактированиеНастроек.Настройки.АналитикаНезавершенногоПроизводства[Счет],
			ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Продукция);
	Иначе
		АналитикаНезавершенногоПроизводства = РедактированиеНастроек.Настройки.АналитикаНезавершенногоПроизводства[Счет];
		Если РедактированиеНастроек.Настройки.Аналитика[Счет].Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Продукция) <> Неопределено 
			И АналитикаНезавершенногоПроизводства.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Продукция) = Неопределено Тогда
			АналитикаНезавершенногоПроизводства.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Продукция);
		КонецЕсли;
	КонецЕсли;
	
	Если ОтключитьДетализациюПоПродукции Тогда
		
		НастройкиСчета = Новый Массив;
		НастройкиСчета.Добавить(РедактированиеНастроек.Настройки.Аналитика[Счет]);
		НастройкиСчета.Добавить(РедактированиеНастроек.Настройки.ОтображаемаяАналитика[Счет]);
		НастройкиСчета.Добавить(РедактированиеНастроек.Настройки.АналитикаНезавершенногоПроизводства[Счет]);
		
		Для Каждого Настройка Из НастройкиСчета Цикл
			
			Если Настройка.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Продукция) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(
				Настройка,
				ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Продукция);
				
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Справочники.НастройкиУчетаЗатрат.ЗавершитьУстановкуВыполненныхНастроек(
		АдресРедактированиеНастроек,
		РедактированиеНастроек);
	
КонецФункции

#КонецОбласти
