#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РедактированиеНастроек = Справочники.НастройкиУчетаЗатрат.ПрименитьПараметрыФормыНастроек(ЭтотОбъект);
	
	ЗаполнитьСодержимоеФормы(РедактированиеНастроек);
	
	Элементы.ПроблемаВключенияСчетов.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НастроитьКнопкуИспользоватьОсновным();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СчетаУчетаПриАктивизацииСтроки(Элемент)
	
	НастроитьКнопкуИспользоватьОсновным();
	
КонецПроцедуры

&НаКлиенте
Процедура СчетаУчетаПометкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СчетаУчета.ТекущиеДанные; 
	Если (ТекущиеДанные.Значение = ОсновнойСчет
		И Не ТекущиеДанные.Пометка) 
		Или Не ЗначениеЗаполнено(ОсновнойСчет) Тогда
			
		УстановитьОсновнойСчетЗатратПоУмолчанию();
			
	КонецЕсли;
	
	НастроитьКнопкуИспользоватьОсновным();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроблемаВключенияПлановойСебестоимостиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ДокументыВыпускаБезПлановыхЦен" Тогда
		НастройкиУчетаКлиент.ПоказатьСписокДокументовБезПлановойСебестоимости(Период, Организация, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаOK(Команда)
	
	РезультатФормы = Неопределено;
	
	Если Модифицированность Тогда
		
		ВыбранныеСчетаУчета = Новый Массив;
		Для Каждого ЭлементСпискаНастройки Из СчетаУчета Цикл
			
			Если Не ЭлементСпискаНастройки.Пометка Тогда
				Продолжить;
			КонецЕсли;
			
			ВыбранныеСчетаУчета.Добавить(ЭлементСпискаНастройки.Значение);
			
		КонецЦикла;
		
		РезультатФормы = УстановитьВыполненныеНастройки(АдресРедактированиеНастроек, ВыбранныеСчетаУчета, ОсновнойСчет);
		
		Если РезультатФормы = "ПроблемаВключенияПлановойСебестоимости" Тогда
			Элементы.ПроблемаВключенияСчетов.Видимость = Истина;
			Элементы.ПроблемаВключенияСчетов.Заголовок =
				СтроковыеФункцииКлиент.ФорматированнаяСтрока(
				НСтр("ru = 'Использование счета 40 ""Выпуск продукции"" недоступно, так как введены <a href = ""%1"">Документы выпуска без плановых цен</a>'"),
				"ДокументыВыпускаБезПлановыхЦен");
			Возврат;
		ИначеЕсли РезультатФормы = "ПроблемаВыпускБезСчетовКалькуляции" Тогда
			Элементы.ПроблемаВключенияСчетов.Видимость = Истина;
			Элементы.ПроблемаВключенияСчетов.Заголовок = 
				НСтр("ru = 'Использование счета 40 ""Выпуск продукции"" недоступно, так как не выбран ни один из счетов основного или вспомогательного производства'");
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	Закрыть(РезультатФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОсновным(Команда)
	
	УстановитьОсновнойСчетЗатрат(Элементы.СчетаУчета.ТекущиеДанные.Значение);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСодержимоеФормы(РедактированиеНастроек)
	
	ЗаполнитьСчетаУчета(РедактированиеНастроек);
	
	УстановитьУсловноеОформлениеОсновнойСчет();
	
	КлючСохраненияПоложенияОкна = XMLСтрока(СчетаУчета.Количество()); // чтобы восстанавливался размер формы, соответствующий контенту
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСчетаУчета(РедактированиеНастроек)
	
	// Заполним список всеми счетами, доступными для учета затрат
	
	ДоступныеСчетаУчета = Справочники.НастройкиУчетаЗатрат.НастраиваемыеСчета();
	
	ВсеЭлементыПредставления = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(ДоступныеСчетаУчета, "Код, Наименование");
	
	Для Каждого Счет Из ДоступныеСчетаУчета Цикл
		
		ЭлементыПредставленияСчета = ВсеЭлементыПредставления[Счет];
		Если Не ЗначениеЗаполнено(ЭлементыПредставленияСчета) Тогда
			Продолжить;
		КонецЕсли;
		
		Представление = ПланыСчетов.Хозрасчетный.ПолноеПредставлениеСчета(
			Счет,
			ЭлементыПредставленияСчета.Код,
			ЭлементыПредставленияСчета.Наименование);
		
		СчетаУчета.Добавить(Счет, Представление);
		
	КонецЦикла;
	
	// Проставим пометки у счетов, используемых в настройке
	Если Не ЭтоАдресВременногоХранилища(АдресРедактированиеНастроек) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СчетУчета Из РедактированиеНастроек.Настройки.СчетаУчета Цикл
		
		ЭлементСпискаНастройки = СчетаУчета.НайтиПоЗначению(СчетУчета);
		
		Если ЭлементСпискаНастройки = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ЭлементСпискаНастройки.Пометка = Истина;
		
	КонецЦикла;
	
	УстановитьОсновнойСчетЗатрат(РедактированиеНастроек.Настройки.ОсновнойСчетУчета);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеОсновнойСчет()
	
	УсловноеОформление.Элементы.Очистить();
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СчетаУчетаЗначение");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"СчетаУчета.Значение",
		ВидСравненияКомпоновкиДанных.Равно,
		Новый ПолеКомпоновкиДанных("ОсновнойСчет"));
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Шрифт", ШрифтыСтиля.ВажнаяНадписьШрифт);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОсновнойСчетЗатратПоУмолчанию()
	
	ПервыйВыбранныйСчет = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	Для Каждого ЭлементСпискаНастройки Из СчетаУчета Цикл
		Если ЭлементСпискаНастройки.Пометка Тогда
			ПервыйВыбранныйСчет = ЭлементСпискаНастройки.Значение;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	УстановитьОсновнойСчетЗатрат(ПервыйВыбранныйСчет);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОсновнойСчетЗатрат(Счет)
	
	Если Счет = ОсновнойСчет Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьПредставлениеТекущегоОсновногоСчета();
	ОсновнойСчет = Счет;
	
	Если Не ЗначениеЗаполнено(ОсновнойСчет) Тогда
		Возврат;
	КонецЕсли; 
	
	ОсновнойСчетПредставление = СтрШаблон(
		НСтр("ru='%1 (основной счет)'"),
		ПланыСчетов.Хозрасчетный.ПолноеПредставлениеСчета(ОсновнойСчет));
	
	ОсновнойСчетЗатратЭлемент = СчетаУчета.НайтиПоЗначению(ОсновнойСчет);
	
	Если ОсновнойСчетЗатратЭлемент <> Неопределено Тогда
		ОсновнойСчетЗатратЭлемент.Пометка = Истина;
		ОсновнойСчетЗатратЭлемент.Представление = ОсновнойСчетПредставление;
		Элементы.СчетаУчета.ТекущаяСтрока = ОсновнойСчетЗатратЭлемент.ПолучитьИдентификатор();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПредставлениеТекущегоОсновногоСчета()
	
	Если Не ЗначениеЗаполнено(ОсновнойСчет) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийОсновнойСчет = ОсновнойСчет;
	ТекущийОсновнойСчетЭлемент = СчетаУчета.НайтиПоЗначению(ТекущийОсновнойСчет);
	
	Если ТекущийОсновнойСчетЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ТекущийОсновнойСчетЭлемент.Представление = ПланыСчетов.Хозрасчетный.ПолноеПредставлениеСчета(ТекущийОсновнойСчет);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьКнопкуИспользоватьОсновным()
	
	ТекущиеДанные = Элементы.СчетаУчета.ТекущиеДанные;
	Кнопка = Элементы.СчетаУчетаИспользоватьОсновным;
	Если ТекущиеДанные = Неопределено Тогда
		Кнопка.Доступность = Ложь;
		Кнопка.Пометка     = Ложь;
	Иначе
		Кнопка.Доступность = (ТекущиеДанные.Значение <> ОсновнойСчет);
		Кнопка.Пометка     = (ТекущиеДанные.Значение = ОсновнойСчет);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция УстановитьВыполненныеНастройки(Знач АдресРедактированиеНастроек, Знач СчетаУчета, Знач ОсновнойСчет)
	
	РедактированиеНастроек = Справочники.НастройкиУчетаЗатрат.НачатьУстановкуВыполненныхНастроек(АдресРедактированиеНастроек);
	
	ПроблемаВключенияПлановойСебестоимости = ПроблемаВключенияПлановойСебестоимости(РедактированиеНастроек, СчетаУчета);
	Если ПроблемаВключенияПлановойСебестоимости Тогда
		Возврат "ПроблемаВключенияПлановойСебестоимости";
	КонецЕсли;
	
	// Использование счета 40 "Выпуск продукции" при простом учете без калькуляции себестоимости невозможно.
	ПроблемаВыпускБезСчетовКалькуляции = ПроблемаВыпускБезСчетовКалькуляции(РедактированиеНастроек.Настройки, СчетаУчета);
	Если ПроблемаВыпускБезСчетовКалькуляции Тогда
		Возврат "ПроблемаВыпускБезСчетовКалькуляции";
	КонецЕсли;
	
	// Далее на основании анализа добавляемых счетов могут быть скорректированы настройки учета затрат,
	// см. Справочники.НастройкиУчетаЗатрат.ИсправитьСебестоимостьПродажНаУправленческиеРасходы()
	Справочники.НастройкиУчетаЗатрат.ЗапомнитьДобавленныеСчета(РедактированиеНастроек.Настройки, СчетаУчета);
	
	Для Каждого Счет Из СчетаУчета Цикл
		Справочники.НастройкиУчетаЗатрат.ДобавитьСчетУчета(РедактированиеНастроек.Настройки, Счет);
	КонецЦикла;
	
	ЛишниеСчета = ОбщегоНазначенияКлиентСервер.РазностьМассивов(РедактированиеНастроек.Настройки.СчетаУчета, СчетаУчета);
	Для Каждого Счет Из ЛишниеСчета Цикл
		ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(РедактированиеНастроек.Настройки.СчетаУчета, Счет);
	КонецЦикла;
	
	РедактированиеНастроек.Настройки.ОсновнойСчетУчета = ОсновнойСчет;
	
	Возврат Справочники.НастройкиУчетаЗатрат.ЗавершитьУстановкуВыполненныхНастроек(
		АдресРедактированиеНастроек,
		РедактированиеНастроек);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПроблемаВыпускБезСчетовКалькуляции(Настройки, Знач СчетаУчета)
	
	Если СчетаУчета.Найти(ПланыСчетов.Хозрасчетный.ВыпускПродукции) = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	КалькуляционныеСчетаНастройки =
		Справочники.НастройкиУчетаЗатрат.СчетаРоли(Перечисления.РолиСчетовЗатрат.КалькуляцияСебестоимости, Настройки);
		
	Для Каждого СчетУчета Из СчетаУчета Цикл
		// Часть счетов присутствует в настройке - их роль определяем из настройки.
		Если КалькуляционныеСчетаНастройки.Найти(СчетУчета) <> Неопределено
			// Для добавляемых счетов, которых еще нет в настройке, определяем основную роль счета, которая будет установлена
			// после добавления в настройку.
			Или Перечисления.РолиСчетовЗатрат.ОсновнаяРольСчета(СчетУчета) = Перечисления.РолиСчетовЗатрат.КалькуляцияСебестоимости Тогда
			
			Возврат Ложь;
			
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат Истина;

КонецФункции
	
&НаСервереБезКонтекста
Функция ПроблемаВключенияПлановойСебестоимости(РедактированиеНастроек, СчетаУчета)
	
	Если СчетаУчета.Найти(ПланыСчетов.Хозрасчетный.ВыпускПродукции) = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	УжеИспользуется = Перечисления.ВариантыУчетаСтоимостиВыпуска.ИспользоватьПлановуюСебестоимость(
		РедактированиеНастроек.Настройки.ВариантУчетаСтоимостиВыпуска);
		
	Если УжеИспользуется Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Не РегистрыСведений.УчетнаяПолитика.ДоступноВключениеПлановойСебестоимости(
		РедактированиеНастроек.Настройки.Контекст.Организация,
		РедактированиеНастроек.Настройки.Контекст.Период);
	
КонецФункции

#КонецОбласти
