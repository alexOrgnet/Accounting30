
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.Владелец.Видимость = Не ЗначениеЗаполнено(Объект.Владелец)
		И Справочники.Организации.ИспользуетсяНесколькоОрганизаций();
		
	Заголовок = СтрШаблон(НСтр("ru = 'Настройки интеграции с %1'"),
		Строка(Объект.ВидМаркетплейса));
		
	Элементы.ВидМаркетплейса.Видимость = Не ЗначениеЗаполнено(Объект.ВидМаркетплейса);
	
	МассивПараметров = Новый Массив;
	НовыйПараметр = Новый ПараметрВыбора("Отбор.ВидДоговора", ПолучитьВидыДоговора());
	МассивПараметров.Добавить(НовыйПараметр);
	
	Элементы.ДоговорКонтрагента.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
	УправлениеФормой();
	
	Если Параметры.Ключ.Пустая() Тогда
		Если Объект.ВидМаркетплейса = Перечисления.ВидыМаркетплейсов.Wildberries Тогда
			Элементы.ГруппаСтарыйАПИ.Видимость = Ложь;
		КонецЕсли;
	Иначе
		Если Объект.ВидМаркетплейса = Перечисления.ВидыМаркетплейсов.Wildberries Тогда
			СписокТокенов = ОбменСМаркетплейс.ЗаполненныеТокеныWildberries(Объект.Ссылка);
			
			ТокенАПИ_ВБЗаполнен = СписокТокенов.Найти("Токен_Версия_1_4")<> Неопределено;
			ТокенЗаполнен = СписокТокенов.Найти("Токен")<> Неопределено;
			
			Если ТокенАПИ_ВБЗаполнен Тогда
				ТокенАПИ_ВБ = УникальныйИдентификатор;
			КонецЕсли;
			
			Если ТокенЗаполнен Тогда
				КлючАПИ = УникальныйИдентификатор;
			Иначе
				Элементы.ГруппаСтарыйАПИ.Видимость = Ложь;
			КонецЕсли;
			
		ИначеЕсли Объект.ВидМаркетплейса = Перечисления.ВидыМаркетплейсов.OZON Тогда
			ИдентификаторКлиента = УникальныйИдентификатор;
			КлючОзон = УникальныйИдентификатор;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Объект.ВидМаркетплейса = ПредопределенноеЗначение("Перечисление.ВидыМаркетплейсов.Wildberries") Тогда
		Элементы.ГруппаНовыйАПИ.Показать();
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ЗаписьНастройкаИнтеграцииМаркетплейс", Объект.Ссылка);
	
	Если ПараметрыЗаписи.Свойство("ВключенаФункциональностьМаркетплейс") Тогда
		ОбновитьИнтерфейс();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Объект.ВидМаркетплейса = ПредопределенноеЗначение("Перечисление.ВидыМаркетплейсов.Wildberries") Тогда
		Если Объект.Ссылка.Пустая()
			Или КлючАПИИзменен Или ТокенАПИ_ВБИзменен Тогда
			Если ПустаяСтрока(ТокенАПИ_ВБ) и ПустаяСтрока(КлючАПИ) Тогда
				ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Укажите токен API или ключ API x64'"),,,,Отказ);
			КонецЕсли;
		КонецЕсли;
	
	ИначеЕсли Объект.ВидМаркетплейса = ПредопределенноеЗначение("Перечисление.ВидыМаркетплейсов.OZON") Тогда
		
		ПроверяемыеРеквизиты.Добавить("КлючОзон");
		ПроверяемыеРеквизиты.Добавить("ИдентификаторКлиента");
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ДанныеАвторизацииOZONИзменены Тогда
		ОбменСМаркетплейс.СохранитьНастройкиАвторизацииOZON(ТекущийОбъект.Ссылка, КлючОзон, ИдентификаторКлиента);
		ДанныеАвторизацииOZONИзменены = Ложь;
	КонецЕсли;
	
	Если ТокенАПИ_ВБИзменен Тогда
		ОбменСМаркетплейс.СохранитьНастройкиАвторизацииWildberries(ТекущийОбъект.Ссылка, "Токен_Версия_1_4", ТокенАПИ_ВБ);
		ТокенАПИ_ВБИзменен = Ложь;
	КонецЕсли;
	
	Если КлючАПИИзменен Тогда
		ОбменСМаркетплейс.СохранитьНастройкиАвторизацииWildberries(ТекущийОбъект.Ссылка, "Токен", КлючАПИ);
		КлючАПИИзменен = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	ПриИзмененииКонтрагентаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ПриИзмененииКонтрагентаСервер();
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ПараметрыДоговора = Новый Структура;
	ПараметрыДоговора.Вставить("Организация", Объект.Владелец);
	ПараметрыДоговора.Вставить("Владелец", Объект.Контрагент);
	ПараметрыДоговора.Вставить("ВидДоговора", ПолучитьВидыДоговора());
	
	РаботаСДоговорамиКонтрагентовБПКлиент.ДоговорОбработкаВыбора(Элемент, ВыбранноеЗначение, ПараметрыДоговора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура КлючАПИПриИзменении(Элемент)
	КлючАПИИзменен = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КлючОзонПриИзменении(Элемент)
	ДанныеАвторизацииOZONИзменены = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторКлиентаOZONПриИзменении(Элемент)
	ДанныеАвторизацииOZONИзменены = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТокенВБПриИзменении(Элемент)
	ТокенАПИ_ВБИзменен = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ВидМаркетплейсаПриИзменении(Элемент)
	КлючАПИ = "";
	ИдентификаторКлиента = "";
	
	Если ЗначениеЗаполнено(Объект.ВидМаркетплейса) Тогда
		Объект.Наименование = Объект.ВидМаркетплейса;
	КонецЕсли;
	
	ДанныеАвторизацииOZONИзменены = Не Объект.Ссылка.Пустая();
	УправлениеФормой();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СообщитьОпроблеме(Команда)

	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьПоЭлектроннойПочтеНастройкаУчетнойЗаписиПредложена", ЭтотОбъект);
	РаботаСПочтовымиСообщениямиКлиент.ПроверитьНаличиеУчетнойЗаписиДляОтправкиПочты(ОписаниеОповещения);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеФормой()
	
	ЭтоВайлдберриз = Объект.ВидМаркетплейса = Перечисления.ВидыМаркетплейсов.Wildberries;
	ЭтоОЗОН = Объект.ВидМаркетплейса = Перечисления.ВидыМаркетплейсов.OZON;
	ЭтоЯндексМаркет = Объект.ВидМаркетплейса = Перечисления.ВидыМаркетплейсов.ЯндексМаркет;
	
	Элементы.ГруппаВайлдберриз.Видимость = ЭтоВайлдБерриз;
	
	Элементы.ИдентификаторКлиентаOZON.АвтоОтметкаНезаполненного = ЭтоОЗОН;
	Элементы.КлючОзон.АвтоОтметкаНезаполненного = ЭтоОЗОН;
	Элементы.ГруппаОзон.Видимость = ЭтоОЗОН;
	Элементы.ГруппаЯндексМаркет.Видимость = ЭтоЯндексМаркет;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоЭлектроннойПочтеНастройкаУчетнойЗаписиПредложена(УчетнаяЗаписьНастроена, ДополнительныеПараметры) Экспорт
	
	Если УчетнаяЗаписьНастроена <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПисьма = РаботаСПочтовымиСообщениямиКлиент.ПараметрыОтправкиПисьма();
	ПараметрыПисьма.Получатель = "bp@1c.ru";
	ПараметрыПисьма.Тема = НСтр("ru='Нужна интеграция с маркетплейсом'");
	ПараметрыПисьма.Текст = НСтр("ru='Укажите, с каким маркетплейсом нужна интеграция?
		|'");
	РаботаСПочтовымиСообщениямиКлиент.СоздатьНовоеПисьмо(ПараметрыПисьма);
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииКонтрагентаСервер()
	РаботаСДоговорамиКонтрагентовБП.УстановитьДоговорКонтрагента(Объект.ДоговорКонтрагента, Объект.Контрагент, Объект.Владелец,
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПолучитьВидыДоговора()));	
КонецПроцедуры

&НаКлиенте
Процедура ТокенВБРасширеннаяПодсказкаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СсылкаНаСправкуВБ = "https://seller.wildberries.ru/supplier-settings/access-to-api";
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(СсылкаНаСправкуВБ);
КонецПроцедуры

&НаКлиенте
Процедура КлючАПИРасширеннаяПодсказкаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СсылкаНаСправкуВБ = "https://seller.wildberries.ru/supplier-settings/access-to-api";
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(СсылкаНаСправкуВБ);
КонецПроцедуры

&НаКлиенте
Процедура КлючОзонРасширеннаяПодсказкаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СсылкаНаСправкуOZON = "https://seller.ozon.ru/app/settings/api-keys";
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(СсылкаНаСправкуOZON);
КонецПроцедуры

&НаСервере
Функция ПолучитьВидыДоговора()
	
	Если Объект.ВидМаркетплейса = Перечисления.ВидыМаркетплейсов.ЯндексМаркет Тогда
		Возврат Перечисления.ВидыДоговоровКонтрагентов.СПокупателем;
	КонецЕсли;
	
	Возврат Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером;
	
КонецФункции

#КонецОбласти
