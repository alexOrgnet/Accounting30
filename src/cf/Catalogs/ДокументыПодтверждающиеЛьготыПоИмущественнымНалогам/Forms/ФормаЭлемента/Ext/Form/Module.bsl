
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);	
	
	КлючСохраненияПоложенияОкна = ?(Объект.ПрименяетсяКОтдельнымОбъектам, "ВсяОрганизация", "ОтдельныеОбъекты");
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.УправлениеДоступом
    Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
        МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
        МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
    // Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ПараметрыЗаписи = Новый Структура("Организация, Льгота", Объект.Организация, Объект.Владелец);
	Оповестить("Запись_ДокументыПодтверждающиеЛьготыПоИмущественнымНалогам", ПараметрыЗаписи);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	КлючСохраненияПоложенияОкна = ?(Объект.ПрименяетсяКОтдельнымОбъектам, "ВсяОрганизация", "ОтдельныеОбъекты");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	ВладелецПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПолноеНаименованиеПриИзменении(Элемент)
	Объект.Наименование = Объект.ПолноеНаименование;
КонецПроцедуры

&НаКлиенте
Процедура СрокДействияОграниченПриИзменении(Элемент)
	Объект.СрокДействияОграничен = Булево(СрокДействияОграничен);
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбластьДействияПриИзменении(Элемент)
	Объект.ПрименяетсяКОтдельнымОбъектам = (ОбластьДействия <> 0);
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ОбластьДействия = ?(Объект.ПрименяетсяКОтдельнымОбъектам, 1, 0);
	СрокДействияОграничен = ?(Объект.СрокДействияОграничен, 1, 0);
	
	Налог = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "Налог");
	
	УстановитьЗаголовок();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Элементы.Объекты.Видимость = Объект.ПрименяетсяКОтдельнымОбъектам;
	
	Элементы.НачалоДействия.Доступность = Объект.СрокДействияОграничен;
	Элементы.НачалоДействия.АвтоОтметкаНезаполненного = Объект.СрокДействияОграничен;
	Элементы.ОкончаниеДействия.Доступность = Объект.СрокДействияОграничен;
	Элементы.ОкончаниеДействия.АвтоОтметкаНезаполненного = Объект.СрокДействияОграничен;
	
	СписокВыбораВсеОбъекты = Элементы.ОбластьДействияОрганизация.СписокВыбора;
	СписокВыбораОтдельныеОбъекты = Элементы.ОбластьДействияНесколькоОбъектов.СписокВыбора;
	СписокВыбораВсеОбъекты.Очистить();
	СписокВыбораОтдельныеОбъекты.Очистить();
	Если Форма.Налог = ПредопределенноеЗначение("Перечисление.ВидыИмущественныхНалогов.ТранспортныйНалог") Тогда
		СписокВыбораВсеОбъекты.Добавить(0, НСтр("ru='Ко всем транспортным средствам'"));
		Элементы.ОбластьДействияОрганизацияРасширеннаяПодсказка.Заголовок = СтрЗаменить(
			НСтр("ru='Документ подтверждает принадлежность организации к льготируемой категории
			|и распространяется на все ее транспортные средства'"), Символы.ПС, " ");
		СписокВыбораОтдельныеОбъекты.Добавить(1, НСтр("ru='К отдельным транспортным средствам'"));
		Элементы.ОбластьДействияНесколькоОбъектовРасширеннаяПодсказка.Заголовок = СтрЗаменить(
			НСтр("ru='Документ подтверждает выполнение условия льготы по конкретному транспотному средству
			|или группе транспортных средств'"), Символы.ПС, " ");
	ИначеЕсли Форма.Налог = ПредопределенноеЗначение("Перечисление.ВидыИмущественныхНалогов.ЗемельныйНалог") Тогда
		СписокВыбораВсеОбъекты.Добавить(0, НСтр("ru='Ко всем земельным участкам'"));
		Элементы.ОбластьДействияОрганизацияРасширеннаяПодсказка.Заголовок = СтрЗаменить(
			НСтр("ru='Документ подтверждает принадлежность организации к льготируемой категории
			|и распространяется на все ее земельные участки'"), Символы.ПС, " ");
		СписокВыбораОтдельныеОбъекты.Добавить(1, НСтр("ru='К отдельным земельным участкам'"));
		Элементы.ОбластьДействияНесколькоОбъектовРасширеннаяПодсказка.Заголовок = СтрЗаменить(
			НСтр("ru='Документ подтверждает выполнение условия льготы по конкретному земельному участку
			|или группе земельных участков'"), Символы.ПС, " ");
	Иначе //для налога на имущество и на случай, если не выбрана льгота
		СписокВыбораВсеОбъекты.Добавить(0, НСтр("ru='Ко всей недвижимости организации'"));
		Элементы.ОбластьДействияОрганизацияРасширеннаяПодсказка.Заголовок = СтрЗаменить(
			НСтр("ru='Документ подтверждает принадлежность организации к льготируемой категории
			|и распространяется на все ее имущество'"), Символы.ПС, " ");
		СписокВыбораОтдельныеОбъекты.Добавить(1, НСтр("ru='К отдельным объектам'"));
		Элементы.ОбластьДействияНесколькоОбъектовРасширеннаяПодсказка.Заголовок = СтрЗаменить(
			НСтр("ru='Документ подтверждает выполнение условия льготы по конкретному объекту
			|или группе объектов'"), Символы.ПС, " ");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовок()

	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		АвтоЗаголовок = Истина;		
	Иначе
		АвтоЗаголовок = Ложь;		
		ТекстЗаголовка = Новый Массив;
		ТекстЗаголовка.Добавить(Нстр("ru='Документ, подтверждающий льготу по'"));
		Если Налог = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда
			ТекстЗаголовка.Добавить(Нстр("ru='транспортному налогу'"));
		ИначеЕсли Налог = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог Тогда
			ТекстЗаголовка.Добавить(Нстр("ru='земельному налогу'"));
		Иначе
			ТекстЗаголовка.Добавить(Нстр("ru='налогу на имущество'"));
		КонецЕсли;		
		Заголовок = СтрСоединить(ТекстЗаголовка, " ");
	КонецЕсли;	

КонецПроцедуры

&НаСервере
Процедура ВладелецПриИзмененииНаСервере()
	Налог = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "Налог");
	УправлениеФормой(ЭтотОбъект);
	УстановитьЗаголовок();
КонецПроцедуры

#КонецОбласти
