#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Инициализация();
	УправлениеФормойПриСозданииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	РегистрацияВНОКлиент.ОбработкаВыбораПодписантов(ЭтотОбъект, Объект, ВыбранноеЗначение);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ РегистрацияВНОСервер.ПодписантыУказаныКорректно(ЭтотОбъект, Объект, Отказ) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если ТребуетсяУказаниеРегиона
		И ЗначениеЗаполнено(Объект.Код)
		И (НЕ ЗначениеЗаполнено(КодРегионаРегистрации) ИЛИ КодРегионаРегистрации = "00") Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Заполнение", "Регион");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "КодРегионаРегистрации", , Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Проверять = Истина;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ПроверятьУникальностьРегистрацииВНалоговомОргане(Проверять);

	Если Проверять Тогда
		СуществующаяЗапись = РегистрацияВИФНС();
		
		Если СуществующаяЗапись <> Неопределено И СуществующаяЗапись <> Объект.Ссылка Тогда
				
			ПоказатьПредупреждение(, НСтр("ru = 'Для данной организации уже существует запись с указанными кодом налогового органа'") 
							         + ?(СтрДлина(Объект.КПП) < 9, ".", НСтр("ru = ' и КПП.'")));
			
			Отказ = Истина;
			
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		СохранитьНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ПараметрыЗаписи.Вставить("НовыйЭлемент", ТекущийОбъект.Ссылка.Пустая());
	
	РегистрацияВНОСервер.ПередЗаписьюРегистрацииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПараметрОповещения = Новый Структура("Ссылка, Владелец", Объект.Ссылка, Объект.Владелец);
	
	Оповестить("ИзмененаРегистрацияВНалоговомОргане", ПараметрОповещения);
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура ПодписантыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	РегистрацияВНОКлиент.ПодписантыВыбор(ЭтотОбъект, Объект, ВыбраннаяСтрока, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура КПППриИзменении(Элемент)

	КПППриИзмененииСервер();

КонецПроцедуры

&НаКлиенте
Процедура ВладелецПриИзменении(Элемент)
	
	ВладелецПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)

	Если ПустаяСтрока(Объект.НаименованиеИФНС) Тогда
		
		НаименованиеИФНС = Объект.Наименование;
		НаименованиеИФНС = СтрЗаменить(НаименованиеИФНС,	НСтр("ru='МИФНС'"),	НСтр("ru='Межрайонная инспекция федеральной налоговой службы'"));
		НаименованиеИФНС = СтрЗаменить(НаименованиеИФНС,	НСтр("ru='ИФНС'"),	НСтр("ru='Инспекция федеральной налоговой службы'"));
		НаименованиеИФНС = СтрЗаменить(НаименованиеИФНС,	НСтр("ru='ФНС'"),	НСтр("ru='Федеральная налоговая служба'"));
		
		Объект.НаименованиеИФНС	= НаименованиеИФНС;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетностьПодписываетПредставительПриИзменении(Элемент)
	
	РегистрацияВНОКлиент.ОтчетностьПодписываетПредставительПриИзменении(ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПредставителяНажатие(Элемент, СтандартнаяОбработка)
	
	РегистрацияВНОКлиент.ПредставлениеПредставителяНажатие(ЭтотОбъект, Объект, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура КодПоОКАТОПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.КодПоОКАТО) Тогда
		
		ДлинаЗначения = СтрДлина(СокрЛП(Объект.КодПоОКАТО));
		
		Для Инд = ДлинаЗначения + 1 По 11 Цикл
			
			Объект.КодПоОКАТО = СокрЛП(Объект.КодПоОКАТО) + "0";
			
		КонецЦикла;
		
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРеквизитыНалоговогоОрганаПоКоду(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Код) Тогда
		ПоказатьПредупреждение(, НСтр("ru='Поле ""Код"" не заполнено'"));
		ТекущийЭлемент = Элементы.Код;
		Возврат;
	КонецЕсли;
	
	ВыполнитьЗаполнениеСведенийОНалоговойИнспекции();
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатежныеРеквизитыФНСПредставлениеНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ВидГосударственногоОргана", ПредопределенноеЗначение("Перечисление.ВидыГосударственныхОрганов.НалоговыйОрган"));
	ПараметрыФормы.Вставить("КодГосударственногоОргана", Объект.Код);
	ПараметрыФормы.Вставить("НаименованиеГосударственногоОргана", Объект.НаименованиеИФНС);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьИзменениеПлатежныхРеквизитовФНС", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.Контрагенты.Форма.ПлатежныеРеквизитыГосударственныхОрганов", ПараметрыФормы, ЭтаФорма, ЭтаФорма, , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура КодПриИзменении(Элемент)
	
	ЗаполнитьСведенияОНалоговойИнспекцииПоКоду();
	ЗаполнитьСписокРегионов(Элементы.КодРегионаРегистрации);
	
КонецПроцедуры

&НаКлиенте
Процедура КодРегионаПриИзменении(Элемент)
	
	Объект.КодРегиона = КодРегионаРегистрации;
	
КонецПроцедуры

&НаКлиенте
Процедура КодРегионаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗаполнитьСписокРегионов(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаСнятияСУчетаОчистка(Элемент, СтандартнаяОбработка)
	
	УведомитьПриИзмененииДатыСнятияСУчета();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаСнятияСУчетаПриИзменении(Элемент)
	
	УведомитьПриИзмененииДатыСнятияСУчета();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьЗакрытиеМесяцев(Команда)
	
	ДатаНарушения = ДатаНарушенияАктуальностиУчета();
	
	Если ОтменитьЗакрытиеМесяцевНаСервере(Объект.Ссылка, ДатаНарушения) Тогда
		Элементы.НадписьРекомендацияОтменыЗакрытия.Видимость = Ложь;
		Элементы.КнопкаОтменитьЗакрытиеМесяцев.Видимость = Ложь;
		Элементы.НадписьРезультатОтменыЗакрытия.Видимость = Истина;
	КонецЕсли;
	
	Оповестить("ОбновитьЗакрытиеМесяца");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьПодписанта(Команда)
	
	РегистрацияВНОКлиент.ДобавитьПодписанта(ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПодписанта(Команда)

	РегистрацияВНОКлиент.УдалитьПодписанта(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПеренестиПодписантаИзШапкиВТаблицу() Экспорт
	
	РегистрацияВНОСервер.ПеренестиПодписантаИзШапкиВТаблицу(ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНаСервере()
	
	РегистрацияВНОСервер.СохранитьПодписантовИзФормыВОбъект(ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаСервере
Процедура УправлениеФормойПриСозданииНаСервере()
	
	ЭтоОбособленноеПодразделение = Ложь;
	ЭтоФизическоеЛицо            = Ложь;
	
	ОрганизацияСОбособленнымиПодразделениями = Ложь;
	ИсходнаяДатаСнятияСУчета = Объект.ДатаСнятияСУчета;
	
	Если ЗначениеЗаполнено(Объект.Владелец) Тогда 
		
		Элементы.Владелец.ТолькоПросмотр = Истина;
		Элементы.Владелец.КнопкаОткрытия = Ложь;
		Элементы.Владелец.КнопкаВыбора = Ложь;
		Элементы.Владелец.АвтоОтметкаНезаполненного = Ложь;
		Элементы.Владелец.ЦветРамки = ЦветаСтиля.ЦветФонаФормы;
		Элементы.Владелец.ЦветФона = ЦветаСтиля.ЦветФонаФормы;
		Элементы.Владелец.ЦветТекста = Новый Цвет(122, 87, 0);
		
		Если Объект.Владелец.Метаданные().Реквизиты.Найти("ЮридическоеФизическоеЛицо") <> Неопределено
			И Объект.Владелец.Метаданные().Реквизиты.Найти("ОбособленноеПодразделение")	<> Неопределено Тогда 
	
			РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Владелец, "ЮридическоеФизическоеЛицо, ОбособленноеПодразделение");
			
			ЭтоОбособленноеПодразделение = РеквизитыОрганизации.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо
				И РеквизитыОрганизации.ОбособленноеПодразделение;
						
		КонецЕсли;
		
		ЭтоФизическоеЛицо = ЭтоФизическоеЛицо();
		
		ОрганизацияСОбособленнымиПодразделениями = ЕстьОбособленныеПодразделения(Объект.Владелец);
		
	КонецЕсли;
	
	Элементы.КПП.Видимость = НЕ ЭтоФизическоеЛицо;
	Элементы.ДатаСнятияСУчета.Видимость = Не ЭтоРегистрацияГоловногоПодразделения(Объект.Ссылка);
	
	Если ЭтоОбособленноеПодразделение Тогда
		
		ГоловнаяОрганизация = РегламентированнаяОтчетность.ГоловнаяОрганизация(Объект.Владелец);
				
	Иначе
		
		Элементы.Владелец.Заголовок	= НСтр("ru = 'Организация'");
		Элементы.ГоловнаяОрганизация.Видимость = ОрганизацияСОбособленнымиПодразделениями;
		Элементы.НаименованиеОбособленногоПодразделения.Видимость = ОрганизацияСОбособленнымиПодразделениями;
	
	КонецЕсли;
	
	Если РегламентированнаяОтчетностьВызовСервера.ИспользуетсяОднаОрганизация() Тогда
				
		Элементы.Владелец.Видимость = Ложь;
		
	КонецЕсли;
	
	УстановитьПредставлениеПлатежныхРеквизитов(Перечисления.ВидыГосударственныхОрганов.НалоговыйОрган, Объект.Код, ПлатежныеРеквизитыФНСПредставление);
	
	ПериодВидимостиРеквизитов = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Элементы.ПлатежныеРеквизитыФНСПредставление.Видимость =
		ПериодВидимостиРеквизитов < ПлатежиВБюджетКлиентСервер.ДатаСменыНаименованияМИДол();
	
	// Установка списка выбора регионов
	КодРегионаРегистрации = Формат(Объект.КодРегиона, "ЧЦ=2; ЧН=; ЧВН=");
	НастройкиУчетаНалогаНаПрибыльФормы.НастроитьЭлементыУказанияРегиона(
		ТребуетсяУказаниеРегиона,
		Элементы.КодРегионаРегистрации.СписокВыбора,
		КодРегионаРегистрации);
	
	РегистрацияВНОСервер.ИзменитьПредставлениеПодписантаРуководителя(ЭтотОбъект, Объект);
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма) Экспорт
	
	РегистрацияВНОКлиентСервер.ИзменитьОформлениеПодписантов(Форма, Форма.Объект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьОбособленныеПодразделения(Знач Организация)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПодразделенияОрганизаций.Ссылка
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|ГДЕ
	|	ПодразделенияОрганизаций.Владелец = &Организация
	|	И ПодразделенияОрганизаций.ОбособленноеПодразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Организации.Ссылка
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.ГоловнаяОрганизация = &Организация
	|	И Организации.ОбособленноеПодразделение";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

&НаСервере
Функция РегистрацияВИФНС()
	
	Возврат Справочники.РегистрацииВНалоговомОргане.ПолучитьПоКодамРегистрациюВИФНС(Объект.Ссылка,
		Объект.Владелец,
		Объект.Код,
		Объект.КПП,
		Объект.КодПоОКТМО);
	
КонецФункции

&НаСервере
Процедура ВладелецПриИзмененииСервер()
	
	РегистрацияВНОСервер.ИзменитьПредставлениеПодписантаРуководителя(ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаКлиенте
Функция ВыполнитьЗаполнениеСведенийОНалоговойИнспекции()
	
	ОписаниеОшибки = "";
	ЗаполнитьСведенияОНалоговойИнспекцииПоКоду(ОписаниеОшибки);
	
	// Обработка ошибок
	Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		Если ОписаниеОшибки = "НеУказаныПараметрыАутентификации" Тогда
			
			ТекстВопроса = НСтр("ru='Для автоматического заполнения реквизитов контрагентов
				|необходимо подключиться к Интернет-поддержке пользователей.
				|Подключиться сейчас?'");
			ОписаниеОповещения = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержку", ЭтотОбъект);
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			
		ИначеЕсли ОписаниеОшибки = "Сервис1СКонтрагентНеПодключен" Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("ИдентификаторМестаВызова", "registraciya_v_no");
			ОткрытьФорму("ОбщаяФорма.Сервис1СКонтрагентНеПодключен", ПараметрыФормы, ЭтотОбъект);
			
		Иначе
			ПоказатьПредупреждение(, ОписаниеОшибки);
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьСписокРегионов(Элемент)
	
	// В списке выбора региона может быть 1 элемент, который был заполнен при открытии формы
	// В этом случае требуется заполнить список выбора полностью
	// Если элементов более 1, то считаем, что список уже заполнен полностью
	Если НЕ ТребуетсяУказаниеРегиона ИЛИ Элемент.СписокВыбора.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;	
	
	СписокРегионов = Новый СписокЗначений;
	ЗаполнитьСписокРегионовСервер(ТребуетсяУказаниеРегиона, СписокРегионов);
	
	// Чтобы избежать дублирования элементов, очищаем список выбора в поле формы
	Элемент.СписокВыбора.Очистить();
	
	Для каждого Регион Из СписокРегионов Цикл
		Элемент.СписокВыбора.Добавить(Регион.Значение, Регион.Представление);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьСписокРегионовСервер(ТребуетсяУказаниеРегиона, СписокРегионов)
	НастройкиУчетаНалогаНаПрибыльФормы.НастроитьЭлементыУказанияРегиона(ТребуетсяУказаниеРегиона, СписокРегионов);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСведенияОНалоговойИнспекцииПоКоду(ОписаниеОшибки = "")
	
	Если НЕ ЗначениеЗаполнено(Объект.Код) Тогда
		Возврат;
	КонецЕсли;
	
	КодРегионаРегистрации   = ДанныеГосударственныхОрганов.КодРегионаПоКодуНалоговогоОргана(Объект.Код);
	Объект.КодРегиона       = КодРегионаРегистрации;
	
	РеквизитыНалоговогоОргана = ДанныеГосударственныхОрганов.РеквизитыНалоговогоОрганаПоКоду(Объект.Код);
	
	Если ЗначениеЗаполнено(РеквизитыНалоговогоОргана.ОписаниеОшибки) Тогда
		ОписаниеОшибки = РеквизитыНалоговогоОргана.ОписаниеОшибки;
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(РеквизитыНалоговогоОргана.Ссылка) Тогда
		ДанныеГосударственныхОрганов.ОбновитьДанныеГосударственногоОргана(РеквизитыНалоговогоОргана);
	КонецЕсли;
	
	Модифицированность = Истина;
	
	ПлатежныеРеквизитыФНСПредставление = ДанныеГосударственныхОрганов.ПредставлениеПлатежныхРеквизитовГосударственногоОргана(РеквизитыНалоговогоОргана);
	
	Объект.Наименование     = РеквизитыНалоговогоОргана.Наименование;
	Объект.НаименованиеИФНС = РеквизитыНалоговогоОргана.ПолноеНаименование;
	
КонецПроцедуры

&НаСервере
Процедура КПППриИзмененииСервер()
	
	Объект.Код = Лев(СокрЛ(Объект.КПП), 4);
	
	Если НЕ ЗначениеЗаполнено(Объект.Код) Тогда
		Возврат;
	КонецЕсли;
	
	КодРегионаРегистрации = ДанныеГосударственныхОрганов.КодРегионаПоКодуНалоговогоОргана(Объект.Код);
	Объект.КодРегиона = КодРегионаРегистрации;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставлениеПлатежныхРеквизитов(Вид, Код, ПлатежныеРеквизитыПредставление)
	
	Если ЗначениеЗаполнено(Код) Тогда
		ГосударственныйОрган = ДанныеГосударственныхОрганов.ГосударственныйОрган(Вид, Код);
	Иначе
		ГосударственныйОрган = Неопределено;
	КонецЕсли;
	
	ПлатежныеРеквизитыПредставление = ДанныеГосударственныхОрганов.ПредставлениеПлатежныхРеквизитовГосударственногоОргана(ГосударственныйОрган);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеПлатежныхРеквизитовФНС(Ответ, ДопПараметры) Экспорт
	
	Если ТипЗнч(Ответ) = Тип("Структура") Тогда
		
		ПлатежныеРеквизитыФНСПредставление = Ответ.ПлатежныеРеквизиты.ПолучательПлатежа;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьИнтернетПоддержку(Ответ, ДопПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ЭтоФизическоеЛицо()
	
	Возврат РегистрацияВНОСервер.ЭтоФизическоеЛицо(Объект);
	
КонецФункции

&НаКлиенте
Процедура УведомитьПриИзмененииДатыСнятияСУчета()
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Или Объект.ДатаСнятияСУчета = ИсходнаяДатаСнятияСУчета Тогда
		Элементы.ГруппаОтменаЗакрытияМесяцев.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	// Изменение даты снятия с учета подразделения влечет за собой нарушение актуальности движений в закрытии месяца как
	// по подразделению, так и по организации в целом. Если по этому подразделению есть выполненные регламентные операции,
	// то их следует отменить. Это позволит при повторном закрытии месяцев учесть новую дату снятия с учета.
	
	ДатаНарушения = ДатаНарушенияАктуальностиУчета();
	РегламентнаяОперация = ПоследняяОперацияЗакрытияМесяцев(Объект.Ссылка, ДатаНарушения);
	
	// При расчете транспортного налога имеет значение число дней последнего месяца владения ТС.
	// Если владение было до 15-го числа месяца включительно, то за этот месяц налог не уплачивается.
	// Не будем уведомлять, если изменение даты снятия с учета не затрагивает расчет транспортного налога.
	СерединаМесяца = 15;
	
	Если РегламентнаяОперация = Неопределено Или (ДатаНарушения = НачалоМесяца(РегламентнаяОперация.Дата)
		И Не ЗначениеЗаполнено(ИсходнаяДатаСнятияСУчета) И День(Объект.ДатаСнятияСУчета) > СерединаМесяца) Тогда
		
		Элементы.ГруппаОтменаЗакрытияМесяцев.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекстЗаголовка = НСтр("ru = 'Изменена дата снятия с учета подразделения ""%1"".
		|Начиная с %2, необходимо:
		| - отменить по нему закрытие всех месяцев
		| - повторно закрыть месяцы по организации ""%3""'");
		
	Элементы.НадписьРекомендацияОтменыЗакрытия.Заголовок = СтрШаблон(ТекстЗаголовка,
		РегламентнаяОперация.Подразделение,
		Формат(ДатаНарушения, "ДФ='MMMM yyyy'"),
		Объект.Владелец);
	
	Элементы.ГруппаОтменаЗакрытияМесяцев.Видимость = Истина;
	Элементы.НадписьРекомендацияОтменыЗакрытия.Видимость = Истина;
	Элементы.КнопкаОтменитьЗакрытиеМесяцев.Видимость = Истина;
	Элементы.НадписьРезультатОтменыЗакрытия.Видимость = Ложь;

КонецПроцедуры

&НаКлиенте
Функция ДатаНарушенияАктуальностиУчета()
	
	Если Не ЗначениеЗаполнено(Объект.ДатаСнятияСУчета) Тогда
		Дата = ИсходнаяДатаСнятияСУчета;
	ИначеЕсли Не ЗначениеЗаполнено(ИсходнаяДатаСнятияСУчета) Тогда
		Дата = Объект.ДатаСнятияСУчета;
	Иначе
		Дата = ?(Объект.ДатаСнятияСУчета < ИсходнаяДатаСнятияСУчета, Объект.ДатаСнятияСУчета, ИсходнаяДатаСнятияСУчета);
	КонецЕсли;
	
	Возврат НачалоМесяца(Дата);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПоследняяОперацияЗакрытияМесяцев(Регистрация, НачалоПериода)
	
	РегламентныеОперации = ВыполненныеЗакрытияМесяцев(Регистрация, НачалоПериода);
	
	КоличествоОпераций = РегламентныеОперации.Количество();
	Если КоличествоОпераций = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(РегламентныеОперации[КоличествоОпераций - 1]);
	
КонецФункции

&НаСервереБезКонтекста
Функция ВыполненныеЗакрытияМесяцев(Регистрация, НачалоПериода)

	ВидыСостояний = Новый Массив;
	ВидыСостояний.Добавить(Перечисления.ВидыСостоянийРегламентныхОпераций.Выполнено);
	ВидыСостояний.Добавить(Перечисления.ВидыСостоянийРегламентныхОпераций.ВыполненоСОшибками);
	ВидыСостояний.Добавить(Перечисления.ВидыСостоянийРегламентныхОпераций.Выполняется);
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Регистрация", Регистрация);
	Запрос.Параметры.Вставить("НачалоПериода", НачалоМесяца(НачалоПериода));
	Запрос.Параметры.Вставить("ВидыСостояний", ВидыСостояний);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Ссылка,
	|	РегламентнаяОперация.Организация КАК Подразделение,
	|	РегламентнаяОперация.Дата КАК Дата
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Организация В
	|			(ВЫБРАТЬ
	|				ИсторияРегистраций.СтруктурнаяЕдиница КАК Подразделение
	|			ИЗ
	|				РегистрСведений.ИсторияРегистрацийВНалоговомОргане КАК ИсторияРегистраций
	|			ГДЕ
	|				ИсторияРегистраций.РегистрацияВНалоговомОргане = &Регистрация
	|				И ИсторияРегистраций.СтруктурнаяЕдиница.ОбособленноеПодразделение)
	|	И РегламентнаяОперация.Дата >= &НачалоПериода
	|	И РегламентнаяОперация.Состояние В(&ВидыСостояний)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РегламентнаяОперация.МоментВремени";
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

&НаСервереБезКонтекста
Функция ЭтоРегистрацияГоловногоПодразделения(Регистрация)
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Регистрация", Регистрация);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация
	|ПОМЕСТИТЬ Организации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	НЕ Организации.ОбособленноеПодразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсторияРегистраций.СтруктурнаяЕдиница КАК Подразделение
	|ИЗ
	|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане КАК ИсторияРегистраций
	|ГДЕ
	|	ИсторияРегистраций.РегистрацияВНалоговомОргане = &Регистрация
	|	И ИсторияРегистраций.СтруктурнаяЕдиница В
	|			(ВЫБРАТЬ
	|				Организации.Организация
	|			ИЗ
	|				Организации)";
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

&НаСервереБезКонтекста
Функция ОтменитьЗакрытиеМесяцевНаСервере(Регистрация, НачалоПериода)

	ОтмененыВсеОперации = Истина;
	РегламентныеОперации = ВыполненныеЗакрытияМесяцев(Регистрация, НачалоПериода);
	ПараметрыОтмены = Документы.РегламентнаяОперация.НовыеПараметрыОтменыОперации();
	
	Для Каждого Операция Из РегламентныеОперации Цикл
		
		ОперацияОбъект = Операция.Ссылка.ПолучитьОбъект();
		ОперацияОбъект.ОтменитьОперацию(Ложь, Ложь, ПараметрыОтмены);
		
		Если ОперацияОбъект.Состояние <> Перечисления.ВидыСостоянийРегламентныхОпераций.НеВыполнено Тогда
			ОтмененыВсеОперации = Ложь;
		КонецЕсли;
		
		ПараметрыОтмены.СдвигатьМоментНарушенияПоследовательности = Ложь;
		ПараметрыОтмены.ОбновитьГраницуАктуальности = Ложь;
	КонецЦикла;
	
	Возврат ОтмененыВсеОперации;
КонецФункции

&НаСервере
Процедура Инициализация()
	
	РегистрацияВНОСервер.ИнициализацияПодписантовПриСозданииНаСервере(ЭтотОбъект, Объект);
	
КонецПроцедуры

#КонецОбласти