
#Область ОписаниеПеременных

&НаКлиенте
Перем ТекущееЗначение;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Заголовок = СтрШаблон(НСтр("ru = '%1 (Заполнить реквизиты)'"), Объект.Ссылка);
	
	НекорректныеРеквизиты = Параметры.НекорректныеРеквизиты;
	Если Не ЗначениеЗаполнено(НекорректныеРеквизиты) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Для Каждого ОписаниеОшибки Из НекорректныеРеквизиты Цикл
		
		ПроверяемыйРеквизит = ПереданныеРеквизиты.Добавить();
		ИмяРеквизита = ОписаниеОшибки.ИмяРеквизита;
		ПроверяемыйРеквизит.ИмяРеквизита = ИмяРеквизита;
		ПроверяемыйРеквизит.ТекстОшибки = ОписаниеОшибки.ТекстОшибки;
		
		Если СтрНачинаетсяС(ИмяРеквизита, ИнтеграцияАУСНКлиентСервер.ПрефиксРеквизитаСведенийДокумента()) Тогда
			Элементы.ГруппаСведенияДокумента.Видимость = Истина;
		Иначе
			ИмяЭлемента = СтрШаблон("Группа%1", ИмяРеквизита);
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, ИмяЭлемента, "Видимость", Истина);
		КонецЕсли;
		
		ИмяЭлементаОписаниеОшибки = СтрШаблон("%1%2", ПрефиксДекорацииСОписаниемОшибки(), ИмяРеквизита);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, ИмяЭлементаОписаниеОшибки, "Заголовок", ОписаниеОшибки.ТекстОшибки);
		
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПрочитатьПаспортныеДанныеФизическогоЛица();
	ПрочитатьГражданствоФизическогоЛица();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если РеквизитыЗаполненыКорректно() Тогда
		ПроверкаЗаполненияВыполненаУспешно = Истина;
	Иначе
		ПроверкаЗаполненияВыполненаУспешно = Ложь;
		Отказ = Истина;
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Некорректно заполнены реквизиты'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ИзменилосьНаименование Тогда
		ОбновитьНаименованиеФизЛицаИСотрудника(ТекущийОбъект);
	КонецЕсли;
	
	Если ИзменилисьДанныеДокумента Тогда
		МенеджерЗаписи = РегистрыСведений.ДокументыФизическихЛиц.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ДокументыФизическогоЛица);
		МенеджерЗаписи.Физлицо = Объект.Ссылка;
		Если Не ЗначениеЗаполнено(МенеджерЗаписи.Период) Тогда
			МенеджерЗаписи.Период = ОбщегоНазначения.ТекущаяДатаПользователя();
		КонецЕсли;
		МенеджерЗаписи.ЯвляетсяДокументомУдостоверяющимЛичность = Истина;
		СнятьПризнакУдостоверяющегоЛичностьСДругогоДокумента(
			Объект.Ссылка, МенеджерЗаписи.ВидДокумента, МенеджерЗаписи.Период);
		МенеджерЗаписи.Записать(Истина);
	КонецЕсли;
	
	Если ИзменилосьГражданство Тогда
		МенеджерЗаписи = РегистрыСведений.ГражданствоФизическихЛиц.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ГражданствоФизическихЛиц);
		МенеджерЗаписи.Записать(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если Не ЗавершениеРаботы Тогда
		Если ПроверкаЗаполненияВыполненаУспешно Тогда
			ПроверкаПройдена = Истина;
		ИначеЕсли Модифицированность Тогда
			ПроверкаПройдена = Ложь;
		Иначе
			ПроверкаПройдена = РеквизитыЗаполненыКорректно();
		КонецЕсли;
		Оповестить(ИнтеграцияАУСНКлиент.ИмяСобытияИсправленыОшибкиОбмена(), ПроверкаПройдена, Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИННПриИзменении(Элемент)
	
	ПроверитьИНН();
	
КонецПроцедуры

&НаКлиенте
Процедура ИННИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	ТекущееЗначение = Текст;
	ПодключитьОбработчикОжидания("ПроверитьИНН", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СтраховойНомерПФРПриИзменении(Элемент)
	
	ПроверитьСНИЛС();
	
КонецПроцедуры

&НаКлиенте
Процедура СтраховойНомерПФРИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	ТекущееЗначение = Текст;
	ПодключитьОбработчикОжидания("ПроверитьСНИЛС", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяПриИзменении(Элемент)
	
	ПроверитьИмя();
	ИзменилосьНаименование = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	ТекущееЗначение = Текст;
	ПодключитьОбработчикОжидания("ПроверитьИмя", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ФамилияПриИзменении(Элемент)
	
	ПроверитьФамилию();
	ИзменилосьНаименование = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ФамилияИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	ТекущееЗначение = Текст;
	ПодключитьОбработчикОжидания("ПроверитьФамилию", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчествоПриИзменении(Элемент)
	
	ПроверитьОтчество();
	ИзменилосьНаименование = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчествоИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	ТекущееЗначение = Текст;
	ПодключитьОбработчикОжидания("ПроверитьОтчество", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыВидДокументаПриИзменении(Элемент)
	
	ПроверитьСведенияДокумента();
	ИзменилисьДанныеДокумента = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СерияПриИзменении(Элемент)
	
	ПроверитьСерию();
	ИзменилисьДанныеДокумента = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияДокумента_СерияИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	ТекущееЗначение = Текст;
	ПодключитьОбработчикОжидания("ПроверитьСерию", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура НомерПриИзменении(Элемент)
	
	ПроверитьНомер();
	ИзменилисьДанныеДокумента = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияДокумента_НомерИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	ТекущееЗначение = Текст;
	ПодключитьОбработчикОжидания("ПроверитьНомер", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаРожденияПриИзменении(Элемент)
	
	ТекстОшибки = "";
	ИнтеграцияАУСНКлиентСервер.ДатаРожденияСоответствуетПротоколуОбмена(Объект.ДатаРождения, ТекстОшибки);
	ИзменитьПереданныеРеквизиты("ДатаРождения", ТекстОшибки);
	
КонецПроцедуры

&НаКлиенте
Процедура ГражданствоФизическихЛиц_СтранаПриИзменении(Элемент)
	
	ПроверитьГражданство();
	ИзменилосьГражданство = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолПриИзменении(Элемент)
	
	ТекстОшибки = "";
	ИнтеграцияАУСНКлиентСервер.ПолФизическогоЛицаСоответствуетПротоколуОбмена(Объект.Пол, ТекстОшибки);
	ИзменитьПереданныеРеквизиты("Пол", ТекстОшибки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция РеквизитыЗаполненыКорректно()
	
	ПроверкаПройдена = Истина;
	Для Каждого Реквизит Из ПереданныеРеквизиты Цикл
		Если Не ПроверкаПройдена Тогда
			Прервать;
		КонецЕсли;
		ПроверкаПройдена = Не ЗначениеЗаполнено(Реквизит.ТекстОшибки);
	КонецЦикла;
	
	Возврат ПроверкаПройдена;
	
КонецФункции

&НаКлиенте
Процедура ПроверитьСНИЛС()
	
	ТекстОшибки = "";
	ПроверяемоеЗначение = ?(ЗначениеЗаполнено(ТекущееЗначение), ТекущееЗначение, Объект.СтраховойНомерПФР);
	РегламентированныеДанныеКлиентСервер.СтраховойНомерПФРСоответствуетТребованиям(ПроверяемоеЗначение, ТекстОшибки);
	ИзменитьПереданныеРеквизиты("СНИЛС", ТекстОшибки);
	ТекущееЗначение = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьИНН()
	
	ТекстОшибки = "";
	ПроверяемоеЗначение = ?(ЗначениеЗаполнено(ТекущееЗначение), ТекущееЗначение, Объект.ИНН);
	ИнтеграцияАУСНКлиентСервер.ИННСоответствуетПротоколуОбмена(ПроверяемоеЗначение, ТекстОшибки);
	ИзменитьПереданныеРеквизиты("ИНН", ТекстОшибки);
	ТекущееЗначение = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьИмя()
	
	ТекстОшибки = "";
	ПроверяемоеЗначение = ?(ЗначениеЗаполнено(ТекущееЗначение), ТекущееЗначение, Объект.Имя);
	ИнтеграцияАУСНКлиентСервер.ФИОСоответствуетПротоколуОбмена(ПроверяемоеЗначение, ТекстОшибки);
	ИзменитьПереданныеРеквизиты("Имя", ТекстОшибки);
	ТекущееЗначение = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьГражданство()
	
	ТекстОшибки = "";
	КодСтраны = КодСтраныГражданства(ГражданствоФизическихЛиц.Страна);
	ИнтеграцияАУСНКлиентСервер.КодГражданстваСоответствуетПротоколуОбмена(КодСтраны, ТекстОшибки);
	ИзменитьПереданныеРеквизиты("Страна", ТекстОшибки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФамилию()
	
	ТекстОшибки = "";
	ПроверяемоеЗначение = ?(ЗначениеЗаполнено(ТекущееЗначение), ТекущееЗначение, Объект.Фамилия);
	ИнтеграцияАУСНКлиентСервер.ФИОСоответствуетПротоколуОбмена(ПроверяемоеЗначение, ТекстОшибки);
	ИзменитьПереданныеРеквизиты("Фамилия", ТекстОшибки);
	ТекущееЗначение = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьОтчество()
	
	ТекстОшибки = "";
	ПроверяемоеЗначение = ?(ЗначениеЗаполнено(ТекущееЗначение), ТекущееЗначение, Объект.Отчество);
	ИнтеграцияАУСНКлиентСервер.ФИОСоответствуетПротоколуОбмена(ПроверяемоеЗначение, ТекстОшибки);
	ИзменитьПереданныеРеквизиты("Отчество", ТекстОшибки);
	ТекущееЗначение = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСведенияДокумента()
	
	ТекстОшибки = "";
	ПрефиксСведенияДокумента = ИнтеграцияАУСНКлиентСервер.ПрефиксРеквизитаСведенийДокумента();
	ИнтеграцияАУСНВызовСервера.ВидДокументаСоответствуетПротоколуОбмена(
		ДокументыФизическогоЛица.ВидДокумента, ТекстОшибки);
	ИзменитьПереданныеРеквизиты(СтрШаблон("%1ВидДокумента", ПрефиксСведенияДокумента), ТекстОшибки);
	
	ПроверитьСерию();
	
	ПроверитьНомер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСерию()
	
	ПрефиксСведенияДокумента = ИнтеграцияАУСНКлиентСервер.ПрефиксРеквизитаСведенийДокумента();
	ТекстОшибки = "";
	ПроверяемоеЗначение = ?(ЗначениеЗаполнено(ТекущееЗначение), ТекущееЗначение, ДокументыФизическогоЛица.Серия);
	ИнтеграцияАУСНКлиентСервер.СерияДокументаСоответствуетПротоколуОбмена(
		ДокументыФизическогоЛица.ВидДокумента, ПроверяемоеЗначение, ТекстОшибки);
	ИзменитьПереданныеРеквизиты(СтрШаблон("%1Серия", ПрефиксСведенияДокумента), ТекстОшибки);
	ТекущееЗначение = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНомер()
	
	ПрефиксСведенияДокумента = ИнтеграцияАУСНКлиентСервер.ПрефиксРеквизитаСведенийДокумента();
	ТекстОшибки = "";
	ПроверяемоеЗначение = ?(ЗначениеЗаполнено(ТекущееЗначение), ТекущееЗначение, ДокументыФизическогоЛица.Номер);
	ИнтеграцияАУСНКлиентСервер.НомерДокументаСоответствуетПротоколуОбмена(
		ДокументыФизическогоЛица.ВидДокумента, ПроверяемоеЗначение, ТекстОшибки);
	ИзменитьПереданныеРеквизиты(СтрШаблон("%1Номер", ПрефиксСведенияДокумента), ТекстОшибки);
	ТекущееЗначение = "";
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПрефиксДекорацииСОписаниемОшибки()
	
	Возврат "НадписьОшибкиЗаполнения";
	
КонецФункции

&НаКлиенте
Процедура ИзменитьПереданныеРеквизиты(ИмяРеквизита, ТекстОшибки)
	
	ИмяЭлемента = СтрШаблон("%1%2", ПрефиксДекорацииСОписаниемОшибки(), ИмяРеквизита);
	
	Видимость = ЗначениеЗаполнено(ТекстОшибки);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, ИмяЭлемента, "Видимость", Видимость);
	
	Если Видимость Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, ИмяЭлемента, "Заголовок", ТекстОшибки);
	КонецЕсли;
	
	Отбор = Новый Структура("ИмяРеквизита", ИмяРеквизита);
	НайденныеСтроки = ПереданныеРеквизиты.НайтиСтроки(Отбор);
	Если ЗначениеЗаполнено(НайденныеСтроки) Тогда
		НайденныеСтроки[0].ТекстОшибки = ТекстОшибки;
	ИначеЕсли ЗначениеЗаполнено(ТекстОшибки) Тогда
		НоваяСтрока = ПереданныеРеквизиты.Добавить();
		НоваяСтрока.ИмяРеквизита = ИмяРеквизита;
		НоваяСтрока.ТекстОшибки = ТекстОшибки;
	КонецЕсли;
	
	ТекстОшибки = "";
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьПаспортныеДанныеФизическогоЛица()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДокументыФизическихЛицСрезПоследних.Физлицо КАК Физлицо,
		|	ДокументыФизическихЛицСрезПоследних.ВидДокумента КАК ВидДокумента,
		|	ДокументыФизическихЛицСрезПоследних.Период КАК Период
		|ИЗ
		|	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(
		|			,
		|			Физлицо = &ФизЛицо
		|				И ВидДокумента = ЗНАЧЕНИЕ(Справочник.ВидыДокументовФизическихЛиц.ПаспортРФ)) КАК ДокументыФизическихЛицСрезПоследних
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДокументыФизическихЛицСрезПоследних.Физлицо,
		|	ДокументыФизическихЛицСрезПоследних.ВидДокумента,
		|	ДокументыФизическихЛицСрезПоследних.Период
		|ИЗ
		|	РегистрСведений.ДокументыФизическихЛиц.СрезПоследних(
		|			,
		|			Физлицо = &ФизЛицо
		|				И ЯвляетсяДокументомУдостоверяющимЛичность) КАК ДокументыФизическихЛицСрезПоследних";
	
	Запрос.УстановитьПараметр("ФизЛицо", Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		МенеджерЗаписи = РегистрыСведений.ДокументыФизическихЛиц.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Физлицо = Объект.Ссылка;
		МенеджерЗаписи.ВидДокумента = Выборка.ВидДокумента;
		МенеджерЗаписи.Период = Выборка.Период;
		МенеджерЗаписи.Прочитать();
		ЗаполнитьЗначенияСвойств(ДокументыФизическогоЛица, МенеджерЗаписи);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьГражданствоФизическогоЛица()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ГражданствоФизическихЛицСрезПоследних.Период КАК Период,
		|	ГражданствоФизическихЛицСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ГражданствоФизическихЛицСрезПоследних.Страна КАК Страна,
		|	ГражданствоФизическихЛицСрезПоследних.ИНН КАК ИНН
		|ИЗ
		|	РегистрСведений.ГражданствоФизическихЛиц.СрезПоследних(, ФизическоеЛицо = &ФизическоеЛицо) КАК ГражданствоФизическихЛицСрезПоследних";
	
	Запрос.УстановитьПараметр("ФизическоеЛицо", Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ГражданствоФизическихЛиц, Выборка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаименованиеФизЛицаИСотрудника(ТекущийОбъект)
	
	ТекущийОбъект.Наименование = КадровыйУчетКлиентСервер.ПолноеНаименованиеСотрудника(
		Объект.Фамилия, Объект.Имя, Объект.Отчество, Объект.УточнениеНаименования);
	ТекущийОбъект.ФИО = КадровыйУчетКлиентСервер.ПолноеНаименованиеСотрудника(
		Объект.Фамилия, Объект.Имя, Объект.Отчество, "");
	Инициалы = ФизическиеЛицаЗарплатаКадрыКлиентСервер.ИнициалыПоИмениОтчеству(
		Объект.Имя, Объект.Отчество);
	ТекущийОбъект.Инициалы = Инициалы;
	НаборЗаписей = РегистрыСведений.ФИОФизическихЛиц.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ФизическоеЛицо.Установить(Объект.Ссылка);
	Запись = НаборЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(Запись, ТекущийОбъект);
	Запись.ФизическоеЛицо = Объект.Ссылка;
	Запись.Период = ОбщегоНазначения.ТекущаяДатаПользователя();
	НаборЗаписей.ОбменДанными.Загрузка = Истина;
	НаборЗаписей.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Сотрудники.Ссылка КАК Ссылка,
		|	Сотрудники.УточнениеНаименования КАК УточнениеНаименования,
		|	Сотрудники.Наименование КАК Наименование
		|ИЗ
		|	Справочник.Сотрудники КАК Сотрудники
		|ГДЕ
		|	Сотрудники.ФизическоеЛицо = &ФизическоеЛицо";
	
	Запрос.УстановитьПараметр("ФизическоеЛицо", Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПолноеНаименованиеСотрудника = КадровыйУчетКлиентСервер.ПолноеНаименованиеСотрудника(
		Объект.Фамилия,
		Объект.Имя,
		Объект.Отчество,
		Объект.УточнениеНаименования,
		"");
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Наименование = ПолноеНаименованиеСотрудника Тогда
			Продолжить;
		КонецЕсли;
		
		Сотрудник = Выборка.Ссылка.ПолучитьОбъект();
		Попытка
			Сотрудник.Заблокировать();
		Исключение
			Продолжить;
		КонецПопытки;
		
		Если Не ЗначениеЗаполнено(Выборка.УточнениеНаименования) Тогда
			Сотрудник.Наименование = ПолноеНаименованиеСотрудника;
		Иначе
			Сотрудник.Наименование = КадровыйУчетКлиентСервер.ПолноеНаименованиеСотрудника(
				Объект.Фамилия,
				Объект.Имя,
				Объект.Отчество,
				Объект.УточнениеНаименования,
				Выборка.УточнениеНаименования);
		КонецЕсли;
		
		Сотрудник.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СнятьПризнакУдостоверяющегоЛичностьСДругогоДокумента(ФизЛицо, ВидДокумента, Период)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДокументыФизическихЛиц.Период КАК Период,
		|	ДокументыФизическихЛиц.Физлицо КАК Физлицо,
		|	ДокументыФизическихЛиц.ВидДокумента КАК ВидДокумента
		|ИЗ
		|	РегистрСведений.ДокументыФизическихЛиц КАК ДокументыФизическихЛиц
		|ГДЕ
		|	ДокументыФизическихЛиц.Период = &Период
		|	И ДокументыФизическихЛиц.Физлицо = &ФизЛицо
		|	И ДокументыФизическихЛиц.ЯвляетсяДокументомУдостоверяющимЛичность";
	
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.ВидДокумента <> ВидДокумента Тогда
			Запись = РегистрыСведений.ДокументыФизическихЛиц.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(Запись, Выборка);
			Запись.Прочитать();
			Если Запись.Выбран() Тогда
				Запись.ЯвляетсяДокументомУдостоверяющимЛичность = Ложь;
				Запись.Записать();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КодСтраныГражданства(Страна)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Страна, "Код");
	
КонецФункции

#КонецОбласти