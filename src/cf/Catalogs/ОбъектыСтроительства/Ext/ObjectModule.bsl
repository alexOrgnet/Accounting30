#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И Не ЭтоГруппа Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтоГруппа Тогда
		ПроверкаВида(Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверкаВида(Отказ)
	
	Если ЭтоНовый() Тогда
		// В случае нового объекта строительства не производить проверку
		Возврат;
	КонецЕсли;
	
	// Получим значения реквизитов договора из информационной базы
	РеквизитыДоговораИзИБ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "ПометкаУдаления, Вид");
	
	Если Не ЗначениеЗаполнено(РеквизитыДоговораИзИБ.Вид) Тогда
		// Реквизит добавлен не в первой версии, при этом обработка его заполнения не предусматривалась.
		// Поэтому разрешено заполнять Вид вне зависимости от наличия документов по объекту
		Возврат;
	КонецЕсли;
	
	Если ПометкаУдаления <> РеквизитыДоговораИзИБ.ПометкаУдаления
		Или Вид = РеквизитыДоговораИзИБ.Вид Тогда
		// В случаях установки или снятия пометки удаления
		// или если вид не был изменен не производить проверку
		Возврат;
	КонецЕсли;

	// Проверим, можно ли изменять вид объекта строительства

	УстановитьПривилегированныйРежим(Истина);
	
	Если ЕстьПроведенныеДокументыПоОбъектуСтроительства(Ссылка) Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru = 'По объекту строительства %1 существуют проведенные документы.
						|Реквизит ""Вид"" не может быть изменен.'"), Наименование);
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Корректность", "Вид",,, ТекстСообщения);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Вид", "Объект", Отказ);
	КонецЕсли;
	
КонецПроцедуры

// Проверяет есть ли проведенные документы по объекту строительства.
//
// Параметры:
//  ОбъектСтроительства - СправочникСсылка.ОбъектыСтроительства - объект строительства, по которому которому ищем документы.
// 
// Возвращаемое значение:
//   - Булево
//
Функция ЕстьПроведенныеДокументыПоОбъектуСтроительства(ОбъектСтроительства)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОбъектСтроительства", ОбъектСтроительства);
	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ОбъектыСтроительства КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка.Проведен
	|	И ПоступлениеТоваровУслуг.ОбъектСтроительства = &ОбъектСтроительства
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПоступлениеТоваровУслугУслуги.Ссылка
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
	|ГДЕ
	|	ПоступлениеТоваровУслугУслуги.Ссылка.Проведен
	|	И ПоступлениеТоваровУслугУслуги.Субконто1 = &ОбъектСтроительства";
	
	Возврат НЕ Запрос.Выполнить().Пустой();

КонецФункции

#КонецОбласти

#КонецЕсли