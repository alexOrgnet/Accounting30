
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает организацию приложения по идентификатору. Создает отсутствующий экземпляр.
//
// Параметры:
//   Идентификатор - Строка - идентификатор организации
//   Приложение - СправочникСсылка.ОблачныеПриложения - экземпляр приложения, в котором ведется учет по этой организации
//   Наименование - Строка - наименование организации
//
// Возвращаемое значение:
//   СправочникСсылка.ОрганизацииОблачныхПриложений - ссылка на организацию
//
Функция СсылкаОрганизация(Идентификатор, Приложение, Наименование) Экспорт
	
	Если Не ЗначениеЗаполнено(Идентификатор) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Организации.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ОрганизацииОблачныхПриложений КАК Организации
	|ГДЕ
	|	Организации.Код = &Идентификатор
	|	И Организации.Владелец = &Приложение";
	Запрос.Параметры.Вставить("Идентификатор", Идентификатор);
	Запрос.Параметры.Вставить("Приложение", Приложение);
	
	Попытка
		НачатьТранзакцию();
		
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("Справочник.ОрганизацииОблачныхПриложений");
		ЭлементБлокировкиДанных.Режим = РежимБлокировкиДанных.Исключительный;
		БлокировкаДанных.Заблокировать();
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ОтменитьТранзакцию();
			Возврат Выборка.Ссылка;
		КонецЕсли;
		
		Организация = Справочники.ОрганизацииОблачныхПриложений.СоздатьЭлемент();
		Организация.Наименование = СокрЛП(Наименование);
		Организация.Код = Идентификатор;
		Организация.Владелец = Приложение;
		
		Организация.Записать();
		ЗафиксироватьТранзакцию();
		
		Возврат Организация.Ссылка;
	Исключение
		
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Организации облачных приложений'", ОбщегоНазначения.КодОсновногоЯзыка()), 
			УровеньЖурналаРегистрации.Ошибка, , , 
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

// Возвращает наименование организации.
//
// Параметры:
//   Организация - СправочникСсылка.ОрганизацииОблачныхПриложений - ссылка на организацию
//
// Возвращаемое значение:
//   Строка - наименование организации
//
Функция НаименованиеОрганизации(Организация) Экспорт
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "Наименование");
	
КонецФункции

// Обновляет наименование организации.
//
// Параметры:
//   Организация - СправочникСсылка.ОрганизацииОблачныхПриложений - ссылка на организацию,
//   Наименование - Строка - новое наименование
//
Процедура Переименовать(Организация, Наименование) Экспорт
	
	Если Не ЗначениеЗаполнено(Наименование) Тогда
		Возврат;
	КонецЕсли;
	
	ОбъектОрганизация = Организация.ПолучитьОбъект();
	ОбъектОрганизация.Наименование = СокрЛП(Наименование);
	
	Попытка
		ОбъектОрганизация.Записать();
	Исключение
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Организации облачных приложений'", ОбщегоНазначения.КодОсновногоЯзыка()), 
			УровеньЖурналаРегистрации.Ошибка, , , 
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
