#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	СброситьРазмерыИПоложениеОкна();
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Если Параметры.ЗначенияЗаполнения.Свойство("Валютный") Тогда
		Объект.Валютный = Параметры.ЗначенияЗаполнения.Валютный;
		ВалютныйПередано = Истина;
	КонецЕсли;
	
	Если Параметры.ЗначенияЗаполнения.Свойство("ОплатаВВалюте") Тогда
		Объект.ОплатаВВалюте = Параметры.ЗначенияЗаполнения.ОплатаВВалюте;
		ОплатаВВалютеПередано = Истина;
	КонецЕсли;
	
	ЗаполнитьВидыДоговора(Параметры.ЗначенияЗаполнения);
	
	Объект.ВидДоговора = Параметры.ВидНовогоДоговора;
	
	НаименованиеПоУмолчанию  = ПечатьДоговоровКлиентСервер.НаименованиеПоУмолчаниюБезРеквизитов();
	РеквизитыДоговораСтрокой = ПечатьДоговоровКлиентСервер.РеквизитыДоговораСтрокой(Объект.Номер, Объект.Дата);
	
	УстановитьФункциональныеОпцииФормы();
	
	УстановитьНумерациюДоговоровСПокупателями();
	Если ИспользоватьНумерациюДоговоровСПокупателями Тогда
		Если Параметры.Ключ.Пустая() И Не ЗначениеЗаполнено(Объект.Номер) Тогда
			УстановитьДатуДоговораСПокупателемПоУмолчанию();
			УстановитьНомерДоговораСПокупателем();
		КонецЕсли;
		ПроверитьДублиДоговораСПокупателем(ЭтотОбъект);
	КонецЕсли;
	
	УстановитьЗаголовокПодсказкиНомера();
	
	Если Параметры.Ключ.Пустая() Тогда
		Объект.СтавкаНДС = УчетНДСКлиентСервер.СтавкаНДСПоУмолчанию(
			?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ОбщегоНазначения.ТекущаяДатаПользователя()),
			ЭтоПлательщикНДС);
		СформироватьНаименованиеДоговора(ЭтотОбъект);
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ИспользоватьНумерациюДоговоровСПокупателями" Тогда
		УстановитьНумерациюДоговоровСПокупателями();
		Если ИспользоватьНумерациюДоговоровСПокупателями Тогда
			Если Не ЗначениеЗаполнено(Объект.Номер) Тогда
				УстановитьДатуДоговораСПокупателемПоУмолчанию();
				УстановитьНомерДоговораСПокупателем();
				СформироватьНаименованиеДоговора(ЭтотОбъект);
				Модифицированность = Истина;
			КонецЕсли;
			ПроверитьДублиДоговораСПокупателем(ЭтотОбъект);
		КонецЕсли;
		УправлениеФормой(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_ДоговорыКонтрагентов", ПараметрыЗаписи, Объект.Ссылка);
	
	ОповеститьОВыборе(Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ПередЗаписьюДоговораСНеуникальнымНомером(Отказ, ПараметрыЗаписи);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НомерПриИзменении(Элемент)
	
	НомерСозданАвтоматически = Ложь;
	Если ИспользоватьНумерациюДоговоровСПокупателями Тогда
		ПроверитьДублиДоговораСПокупателем(ЭтотОбъект);
		УправлениеФормой(ЭтотОбъект);
	КонецЕсли;
	
	СформироватьНаименованиеДоговора(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если ИспользоватьНумерациюДоговоровСПокупателями Тогда
		Если НомерСозданАвтоматически Или Не ЗначениеЗаполнено(Объект.Номер) Тогда
			УстановитьНомерДоговораСПокупателем();
		КонецЕсли;
		ПроверитьДублиДоговораСПокупателем(ЭтотОбъект);
		УправлениеФормой(ЭтотОбъект);
	КонецЕсли;
	
	СформироватьНаименованиеДоговора(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьПояснениеПроверкиДублейОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ПоказатьДубли" Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьДублиДоговораСПокупателем();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;

	Элементы.ГруппаПроверкаДублей.Видимость = Форма.ИспользоватьНумерациюДоговоровСПокупателями
		И ЗначениеЗаполнено(Форма.ПояснениеПроверкиДублей);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьНаименованиеДоговора(Форма)
	
	Объект = Форма.Объект;
	
	ТекстНаименования = Объект.Наименование;
	
	НовыеРеквизитыДоговораСтрокой = ПечатьДоговоровКлиентСервер.РеквизитыДоговораСтрокой(Объект.Номер, Объект.Дата);
	
	Если ПустаяСтрока(ТекстНаименования)
		Или ТекстНаименования = Форма.НаименованиеПоУмолчанию // См. ПечатьДоговоровКлиентСервер.НаименованиеПоУмолчаниюБезРеквизитов()
		Или ТекстНаименования = Форма.РеквизитыДоговораСтрокой Тогда
		ТекстНаименования = НовыеРеквизитыДоговораСтрокой;
	ИначеЕсли СтрНайти(ТекстНаименования, Форма.РеквизитыДоговораСтрокой) > 0 
		И СтрНайти(ТекстНаименования, НовыеРеквизитыДоговораСтрокой) = 0 Тогда
		ТекстНаименования = СтрЗаменить(ТекстНаименования, Форма.РеквизитыДоговораСтрокой, НовыеРеквизитыДоговораСтрокой);
	КонецЕсли;
	
	Форма.РеквизитыДоговораСтрокой = НовыеРеквизитыДоговораСтрокой;
	
	Объект.Наименование = ТекстНаименования;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()

	ЭтоПлательщикНДС = УчетнаяПолитика.ПлательщикНДС(Объект.Организация, ТекущаяДатаСеанса());
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНумерациюДоговоровСПокупателями()
	
	ИспользоватьНумерациюДоговоровСПокупателями = РаботаСДоговорамиКонтрагентовБП.ИспользуетсяНумерацияПоВидуДоговора(
		Объект.ВидДоговора);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьНомерДоговораСПокупателем()
	
	ДоговорОбъект = РеквизитФормыВЗначение("Объект");
	
	Справочники.ДоговорыКонтрагентов.УстановитьНомерДоговораСПокупателем(ДоговорОбъект);
	
	ЗначениеВРеквизитФормы(ДоговорОбъект, "Объект");
	
	НомерСозданАвтоматически = Истина;
	
	ТекущийЭлемент = Элементы.Номер;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДублиДоговораСПокупателем(Знач Номер, Знач Дата, Знач Организация, Знач Ссылка)
	
	Возврат Справочники.ДоговорыКонтрагентов.ДублиДоговораСПокупателем(Номер, Дата, Организация, Ссылка);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ПроверитьДублиДоговораСПокупателем(Форма)
	
	Если Форма.ТолькоПросмотр Тогда
		Возврат;
	КонецЕсли;
	
	Форма.ПояснениеПроверкиДублей = "";
	
	Объект = Форма.Объект;
	
	Дубли = ДублиДоговораСПокупателем(Объект.Номер, Объект.Дата, Объект.Организация, Объект.Ссылка);
	
	КоличествоЭлементовДублей = Дубли.Количество();
	Если КоличествоЭлементовДублей > 0 Тогда
		Форма.ПояснениеПроверкиДублей = Новый ФорматированнаяСтрока(
			НСтр("ru = 'Договор с таким номером уже есть'"), , Новый Цвет(255, 0, 0), , "ПоказатьДубли");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДатуДоговораСПокупателемПоУмолчанию()
	
	Если Не ЗначениеЗаполнено(Объект.Дата) И Параметры.Ключ.Пустая() Тогда
		Объект.Дата = ОбщегоНазначения.ТекущаяДатаПользователя();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьЗакрытиеФормыСпискаДублей(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	ПроверитьДублиДоговораСПокупателем(ЭтотОбъект);
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьДублиДоговораСПокупателем()
	
	ВидыДоговоров = Новый СписокЗначений;
	ВидыДоговоров.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПокупателем"));
	ЗначениеОтбора = Новый Структура;
	ЗначениеОтбора.Вставить("Ссылка", ДублиДоговораСПокупателем(Объект.Номер, Объект.Дата, Объект.Организация, Объект.Ссылка));
	ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
	
	ОповещениеЗакрытия = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыСпискаДублей", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.ДоговорыКонтрагентов.Форма.ФормаСписка", 
		ПараметрыФормы, ЭтотОбъект, , , , ОповещениеЗакрытия, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюДоговораСНеуникальнымНомером(Отказ, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.Свойство("ПропуститьПроверку") 
		И ПараметрыЗаписи.ПропуститьПроверку Тогда
		Возврат;
	КонецЕсли;
	
	Если ИспользоватьНумерациюДоговоровСПокупателями Тогда
		ПроверитьДублиДоговораСПокупателем(ЭтотОбъект);
		УправлениеФормой(ЭтотОбъект);
		
		Если ЗначениеЗаполнено(ПояснениеПроверкиДублей) Тогда
			Отказ = Истина;
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("ПараметрыЗаписи", ПараметрыЗаписи);
			
			ОбработчикОповещения = Новый ОписаниеОповещения("ВопросЗаписатьДоговорСНеуникальнымНомеромЗавершение",
				ЭтотОбъект, ДополнительныеПараметры);
			
			ТекстВопроса = СтрШаблон(НСтр("ru = '%1. Записать?'"), ПояснениеПроверкиДублей);
			
			Кнопки = Новый СписокЗначений;
			Кнопки.Добавить(КодВозвратаДиалога.ОК, НСтр("ru = 'Записать'"));
			Кнопки.Добавить(КодВозвратаДиалога.Нет);
			
			ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, Кнопки, , КодВозвратаДиалога.Нет);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗаписатьДоговорСНеуникальнымНомеромЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.ОК Тогда
		ПараметрыЗаписи = ДополнительныеПараметры.ПараметрыЗаписи;
		ПараметрыЗаписи.Вставить("ПропуститьПроверку", Истина);
		Записать(ПараметрыЗаписи);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокПодсказкиНомера()
	
	Если ПолучитьФункциональнуюОпцию("ИнтерфейсТаксиПростой") Тогда
		ИмяРаздела = "Настройки - Другие настройки - Параметры учета - Нумерация договоров";
	Иначе
		ИмяРаздела = "Администрирование - Параметры учета - Нумерация договоров";
	КонецЕсли;
	
	СсылкаНаРаздел = "e1cib/command/Обработка.ПанельАдминистрированияБП.Команда.НумерацияДоговоров";
	
	ДоступнаНастройка = ПравоДоступа("Изменение", Метаданные.Константы.ИспользоватьНумерациюДоговоровСПокупателями);
	
	Элементы.НомерРасширеннаяПодсказка.Заголовок = СтроковыеФункции.ФорматированнаяСтрока(
		НСтр("ru = '%1 нумерацию в разделе <a href=""%2"">%3</a>'"),
		?(ДоступнаНастройка, "Настройте", "Проверьте"), СсылкаНаРаздел, ИмяРаздела);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВидыДоговора(ЗначенияЗаполнения)
	
	Если ЗначенияЗаполнения.Свойство("ВидДоговора") Тогда
		МассивВидовДоговоров = Новый Массив;
		Если ТипЗнч(ЗначенияЗаполнения.ВидДоговора) = Тип("Массив") Тогда
			МассивВидовДоговоров = ЗначенияЗаполнения.ВидДоговора;
		ИначеЕсли ТипЗнч(ЗначенияЗаполнения.ВидДоговора) = Тип("ФиксированныйМассив") Тогда
			МассивВидовДоговоров = Новый Массив(ЗначенияЗаполнения.ВидДоговора);
		Иначе
			МассивВидовДоговоров = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ЗначенияЗаполнения.ВидДоговора);
		КонецЕсли;
		ВидыДоговора.ЗагрузитьЗначения(МассивВидовДоговоров);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СброситьРазмерыИПоложениеОкна()
	
	ИмяПользователя = ПользователиИнформационнойБазы.ТекущийПользователь().Имя;
	Если ПравоДоступа("СохранениеДанныхПользователя", Метаданные) Тогда
		Выборка = ХранилищеСистемныхНастроек.Выбрать(Новый Структура("Пользователь", ИмяПользователя));
		Пока Выборка.Следующий()Цикл
			Если Найти(Выборка.КлючОбъекта, "Справочник.ДоговорыКонтрагентов.Форма.ФормаНовогоЭлемента") = 0 Тогда
				Продолжить;
			КонецЕсли;
			ХранилищеСистемныхНастроек.Удалить(
				Выборка.КлючОбъекта, Строка(Выборка.Настройки), ИмяПользователя);
		КонецЦикла;
	КонецЕсли;
	
	КлючСохраненияПоложенияОкна = Строка(Новый УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьНомерДоговора(Команда)
	
	УстановитьНомерДоговораСПокупателем();
	СформироватьНаименованиеДоговора(ЭтотОбъект);
	ПроверитьДублиДоговораСПокупателем(ЭтотОбъект);
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсеРеквизиты(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Владелец", Объект.Владелец);
	СтруктураЗаполнения.Вставить("Организация", Объект.Организация);
	СтруктураЗаполнения.Вставить("Номер", Объект.Номер);
	СтруктураЗаполнения.Вставить("Дата", Объект.Дата);
	СтруктураЗаполнения.Вставить("Наименование", Объект.Наименование);
	СтруктураЗаполнения.Вставить("ВидДоговора", ВидыДоговора.ВыгрузитьЗначения());
	Если Объект.ВалютаВзаиморасчетов <> ВалютаРегламентированногоУчета Тогда
		СтруктураЗаполнения.Вставить("ВалютаВзаиморасчетов", Объект.ВалютаВзаиморасчетов);
	КонецЕсли;
	Если ВалютныйПередано Тогда
		СтруктураЗаполнения.Вставить("Валютный", Объект.Валютный);
	КонецЕсли;
	Если ОплатаВВалютеПередано Тогда
		СтруктураЗаполнения.Вставить("ОплатаВВалюте", Объект.ОплатаВВалюте);
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", СтруктураЗаполнения);
	ПараметрыФормы.Вставить("ДанныеМодифицированы", Модифицированность);

	ОткрытьФорму("Справочник.ДоговорыКонтрагентов.ФормаОбъекта", ПараметрыФормы, ВладелецФормы);
	
	Модифицированность = Ложь;
	
	Закрыть();

КонецПроцедуры

#КонецОбласти
