

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ГруппаОбособленноеПодразделение.Видимость = БухгалтерскийУчетПереопределяемый.ВестиУчетПоПодразделениям();
	
	РежимПовторногоВыбораВидаОрганизации = Параметры.РежимПовторногоВыбораВидаОрганизации;
	РежимПовторногоВыбораСистемыНалогообложения = Параметры.РежимПовторногоВыбораСистемыНалогообложения;
	
	РежимПростогоИнтерфейса = Параметры.Свойство("РежимПростогоИнтерфейса");
	
	Если Параметры.Свойство("ВидОрганизации") Тогда
		ВидОрганизации = Параметры.ВидОрганизации;
	КонецЕсли;
	
	ПараметрыУчетнойПолитики = Новый Структура;
	ПараметрыУчетнойПолитики.Вставить("СистемаНалогообложения", Перечисления.СистемыНалогообложения.ПустаяСсылка());
	ПараметрыУчетнойПолитики.Вставить("ОбъектНалогообложенияУСН", Перечисления.ОбъектыНалогообложенияПоУСН.ПустаяСсылка());
	ПараметрыУчетнойПолитики.Вставить("ПлательщикЕНВД", Ложь);
	ПараметрыУчетнойПолитики.Вставить("ПрименяетсяУСНПатент", Ложь);
	
	Если Параметры.Свойство("СистемаНалогообложения") Тогда
		ПараметрыУчетнойПолитики.Вставить("СистемаНалогообложения", Параметры.СистемаНалогообложения);
	КонецЕсли;
	
	Если Параметры.Свойство("ОбъектНалогообложенияУСН") Тогда
		ПараметрыУчетнойПолитики.Вставить("ОбъектНалогообложенияУСН", Параметры.ОбъектНалогообложенияУСН);
	КонецЕсли;
	
	Если Параметры.Свойство("ПлательщикЕНВД") Тогда
		ПараметрыУчетнойПолитики.Вставить("ПлательщикЕНВД", Параметры.ПлательщикЕНВД);
	КонецЕсли;

	Если Параметры.Свойство("ПрименяетсяУСНПатент") Тогда
		ПараметрыУчетнойПолитики.Вставить("ПрименяетсяУСНПатент", Параметры.ПрименяетсяУСНПатент);
	КонецЕсли;
	
	ДатаНормативныхСведений = ОбщегоНазначения.ТекущаяДатаПользователя();
	
	// Ограничение по доходам
	ЛимитДоходовУСН = Окр(КонтрольПраваПримененияСпецрежимаКлиентСервер.ГраницаДоходовДляПримененияПовышеннойСтавкиУСН(
			ДатаНормативныхСведений) / 1000000, 2); // в млн. рублей
	
	ТекстОграниченияДоходыУСН = СтрШаблон(НСтр("ru='%1 млн руб'"), ЛимитДоходовУСН);
	
	ТекстОграниченияДоходыПСН = СтрШаблон(НСтр("ru='%1 млн руб'"),
		Формат(КонтрольПраваПримененияСпецрежима.ГраницаДоходовОграничивающаяПравоПримененияПСН(), "ЧДЦ=; ЧС=6"));
	
	Элементы.НадписьДоходыУСНИП.Заголовок    = ТекстОграниченияДоходыУСН;
	Элементы.НадписьДоходыУСНЮЛ.Заголовок    = ТекстОграниченияДоходыУСН;
	Элементы.НадписьДоходыПатентИП.Заголовок = ТекстОграниченияДоходыПСН;
	
	// Ограничение по стоимости основных средств
	ТекстОграниченияОС = СтрШаблон(НСтр("ru='%1 %2'"),
		Формат(КонтрольПраваПримененияСпецрежима.ГраницаСтоимостиОсновныхСредствОграничивающаяПравоПримененияУСН(ДатаНормативныхСведений),"ЧС=6"),
		НСтр("ru='млн руб'"));
	Элементы.НадписьОсновныеСредстваУСНЮЛ.Заголовок = ТекстОграниченияОС;
	
	// Ограничение по среднесписочной численности работников
	ТекстОграничениеРаботникиУСН = СтрШаблон(НСтр("ru='%1 человек'"),
		КонтрольПраваПримененияСпецрежимаКлиентСервер.ГраницаЧисленностиРаботниковДляПримененияПовышеннойСтавкиУСН(
			ДатаНормативныхСведений));
	Элементы.НадписьРаботникиУСНИП.Заголовок = ТекстОграничениеРаботникиУСН;
	Элементы.НадписьРаботникиУСНЮЛ.Заголовок = ТекстОграничениеРаботникиУСН;
	
	ТекстОграничениеРаботникиПатент = СтрШаблон(НСтр("ru='%1 %2'"),
		КонтрольПраваПримененияСпецрежима.ГраницаСреднесписочнойЧисленностиРаботниковОграничивающаяПравоПримененияПатент(),
		"человек");
	Элементы.НадписьРаботникиПатентИП.Заголовок = ТекстОграничениеРаботникиПатент;
	
	ТекстОграничениеРаботникиЕНВД = СтрШаблон(НСтр("ru='%1 %2'"),
		КонтрольПраваПримененияСпецрежима.ГраницаСреднесписочнойЧисленностиРаботниковОграничивающаяПравоПримененияЕНВД(),
		"человек");
	Элементы.НадписьРаботникиЕНВДИП.Заголовок = ТекстОграничениеРаботникиЕНВД;
	
	// Ограничения тарифа
	РазрешенУчетРегулярнойДеятельности = ТарификацияБПВызовСервераПовтИсп.РазрешенУчетРегулярнойДеятельности();
	
	Элементы.НадписьПатент.Видимость                       = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьПатентПояснение.Видимость              = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьПатентЕдиныйНалог.Видимость            = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьСтоимостьПатента.Видимость             = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьУпрощенка6СтоимостьПатента.Видимость   = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьУпрощенка15СтоимостьПатента.Видимость  = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьПатентСтоимостьПатента.Видимость       = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьЕНВДСтоимостьПатента.Видимость         = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьОбщаяСистемаСтоимостьПатента.Видимость = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьПатентЕНВД.Видимость                   = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьПатентНДС.Видимость                    = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьПатентНДФЛ.Видимость                   = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьПатентНалогНаИмущество.Видимость       = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьДоходыПатентИП.Видимость               = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьРаботникиПатентИП.Видимость            = РазрешенУчетРегулярнойДеятельности;
	Элементы.СистемаНалогообложенияПатентнаяИП.Видимость   = РазрешенУчетРегулярнойДеятельности;
	
	Элементы.НадписьАУСНДоходыИП.Видимость                 = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьАУСНДоходыПояснениеИП.Видимость        = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьАУСНДоходыЕдиныйНалогИП.Видимость      = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьАУСНДоходыСтоимостьПатента.Видимость   = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьАУСНДоходыЕНВД.Видимость               = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьАУСНДоходыНДСИП.Видимость              = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьАУСНДоходыНДФЛ.Видимость               = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьАУСНДоходыНалогНаИмуществоИП.Видимость = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьРаботникиАУСНИП.Видимость              = РазрешенУчетРегулярнойДеятельности;
	Элементы.СистемаНалогообложенияАУСНДоходыИП.Видимость  = РазрешенУчетРегулярнойДеятельности;
	
	Элементы.НадписьАУСНДоходыМинусРасходыИП.Видимость                 = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьАУСНДоходыМинусРасходыПояснениеИП.Видимость        = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьАУСНДоходыМинусРасходыЕдиныйНалогИП.Видимость      = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьАУСНДоходыМинусРасходыСтоимостьПатента.Видимость   = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьАУСНДоходыМинусРасходыЕНВД.Видимость               = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьАУСНДоходыМинусРасходыНДСИП.Видимость              = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьАУСНДоходыМинусРасходыНДФЛ.Видимость               = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьАУСНДоходыМинусРасходыНалогНаИмуществоИП.Видимость = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьРаботникиАУСНИП.Видимость                          = РазрешенУчетРегулярнойДеятельности;
	Элементы.СистемаНалогообложенияАУСНДоходыМинусРасходыИП.Видимость  = РазрешенУчетРегулярнойДеятельности;
	
	ЕстьНПД = РазрешенУчетРегулярнойДеятельности
		И (ОбщегоНазначенияБП.ТекущаяДатаНаСервере() >= НалогНаПрофессиональныйДоходКлиентСервер.ДатаНачалаЭксперимента());
	
	ИменаЭлементовНПДИП = ИменаЭлементовНПДИП();
	Для Каждого ИмяЭлемента Из ИменаЭлементовНПДИП.СистемаНалогообложения Цикл
		Элементы[ИмяЭлемента].Видимость = ЕстьНПД;
	КонецЦикла;
	Для Каждого ИмяЭлемента Из ИменаЭлементовНПДИП.ВхождениеНалога Цикл
		Элементы[ИмяЭлемента].Видимость = ЕстьНПД;
	КонецЦикла;
	Элементы[ИменаЭлементовНПДИП.НазваниеНалога].Видимость = ЕстьНПД;
	Элементы[ИменаЭлементовНПДИП.КомандаВыбрать].Видимость = ЕстьНПД;
	
	РазрешеноПрименениеЕНВД = ОбщегоНазначенияБП.ТекущаяДатаНаСервере() < УчетЕНВДКлиентСервер.ДатаОтменыЕНВД();
	
	Элементы.НадписьЕНВД.Видимость                       = РазрешеноПрименениеЕНВД И РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьЕНВДПояснение.Видимость              = РазрешеноПрименениеЕНВД И РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьЕНВДЕдиныйНалог.Видимость            = РазрешеноПрименениеЕНВД И РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьЕНВДСтрока.Видимость                 = РазрешеноПрименениеЕНВД И РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьЕНВДНПД.Видимость                    = РазрешеноПрименениеЕНВД И РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьУпрощенка6ЕНВД.Видимость             = РазрешеноПрименениеЕНВД И РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьУпрощенка15ЕНВД.Видимость            = РазрешеноПрименениеЕНВД И РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьАУСНДоходыЕНВД.Видимость             = РазрешеноПрименениеЕНВД И РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьАУСНДоходыМинусРасходыЕНВД.Видимость = РазрешеноПрименениеЕНВД И РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьЕНВДСтоимостьПатента.Видимость       = РазрешеноПрименениеЕНВД И РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьПатентЕНВД.Видимость                 = РазрешеноПрименениеЕНВД И РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьОбщаяСистемаЕНВД.Видимость           = РазрешеноПрименениеЕНВД И РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьЕНВДЕНВД.Видимость                   = РазрешеноПрименениеЕНВД И РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьЕНВДНДС.Видимость                    = РазрешеноПрименениеЕНВД И РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьЕНВДНДФЛ.Видимость                   = РазрешеноПрименениеЕНВД И РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьЕНВДНалогНаИмущество.Видимость       = РазрешеноПрименениеЕНВД И РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьДоходыЕНВДИП.Видимость               = РазрешеноПрименениеЕНВД И РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьРаботникиЕНВДИП.Видимость            = РазрешеноПрименениеЕНВД И РазрешенУчетРегулярнойДеятельности;
	Элементы.СистемаНалогообложенияЕНВДИП.Видимость      = РазрешеноПрименениеЕНВД И РазрешенУчетРегулярнойДеятельности;
	
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить(Элементы.ГиперссылкаСравнениеСистемНалогообложенияИП);
	МассивЭлементов.Добавить(Элементы.НадписьОграниченияЮЛ);
	Для каждого Элемент Из МассивЭлементов Цикл
		Элемент.Ширина = ?(РазрешенУчетРегулярнойДеятельности, 29, 25);
	КонецЦикла;
	
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить(Элементы.ГруппаСравенениеСистемНалогообложенияИП);
	МассивЭлементов.Добавить(Элементы.ГруппаОграничениеИП);
	Для каждого Элемент Из МассивЭлементов Цикл
		Элемент.Ширина = ?(РазрешеноПрименениеЕНВД И РазрешенУчетРегулярнойДеятельности, 102, 82);
	КонецЦикла;
	
	Элементы.НадписьДоходыУСНИП.Ширина = ?(РазрешенУчетРегулярнойДеятельности, 29, 36);
	Элементы.НадписьРаботникиУСНИП.Ширина = ?(РазрешенУчетРегулярнойДеятельности, 29, 51);
	
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить(Элементы.НадписьОбщаяСистемаИП);
	МассивЭлементов.Добавить(Элементы.НадписьУпрощенка15ИП);
	МассивЭлементов.Добавить(Элементы.НадписьУпрощенка6ИП);
	МассивЭлементов.Добавить(Элементы.НадписьАУСНДоходыИП);
	МассивЭлементов.Добавить(Элементы.НадписьАУСНДоходыМинусРасходыИП);
	МассивЭлементов.Добавить(Элементы.НадписьУпрощенка6ПояснениеИП);
	МассивЭлементов.Добавить(Элементы.НадписьУпрощенка15ПосянениеИП);
	МассивЭлементов.Добавить(Элементы.НадписьАУСНДоходыПояснениеИП);
	МассивЭлементов.Добавить(Элементы.НадписьАУСНДоходыМинусРасходыПояснениеИП);
	МассивЭлементов.Добавить(Элементы.НадписьОбщаяСистемаПояснениеИП);
	МассивЭлементов.Добавить(Элементы.НадписьУпрощенка6ЕдиныйНалогИП);
	МассивЭлементов.Добавить(Элементы.НадписьУпрощенка15ЕдиныйНалогИП);
	МассивЭлементов.Добавить(Элементы.НадписьАУСНДоходыЕдиныйНалогИП);
	МассивЭлементов.Добавить(Элементы.НадписьАУСНДоходыМинусРасходыЕдиныйНалогИП);
	МассивЭлементов.Добавить(Элементы.НадписьОбщаяСистемаЕдиныйНалогИП);
	МассивЭлементов.Добавить(Элементы.НадписьУпрощенка6СтоимостьПатента);
	МассивЭлементов.Добавить(Элементы.НадписьУпрощенка15СтоимостьПатента);
	МассивЭлементов.Добавить(Элементы.НадписьАУСНДоходыСтоимостьПатента);
	МассивЭлементов.Добавить(Элементы.НадписьАУСНДоходыМинусРасходыСтоимостьПатента);
	МассивЭлементов.Добавить(Элементы.НадписьОбщаяСистемаСтоимостьПатента);
	МассивЭлементов.Добавить(Элементы.НадписьУпрощенка6НДСИП);
	МассивЭлементов.Добавить(Элементы.НадписьУпрощенка15НДСИП);
	МассивЭлементов.Добавить(Элементы.НадписьАУСНДоходыНДСИП);
	МассивЭлементов.Добавить(Элементы.НадписьАУСНДоходыМинусРасходыНДСИП);
	МассивЭлементов.Добавить(Элементы.НадписьОбщаяСистемаНДСИП);
	МассивЭлементов.Добавить(Элементы.НадписьУпрощенка6НДФЛ);
	МассивЭлементов.Добавить(Элементы.НадписьУпрощенка15НДФЛ);
	МассивЭлементов.Добавить(Элементы.НадписьАУСНДоходыНДФЛ);
	МассивЭлементов.Добавить(Элементы.НадписьАУСНДоходыМинусРасходыНДФЛ);
	МассивЭлементов.Добавить(Элементы.НадписьОбщаяСистемаНДФЛ);
	МассивЭлементов.Добавить(Элементы.НадписьУпрощенка6НалогНаИмуществоИП);
	МассивЭлементов.Добавить(Элементы.НадписьУпрощенка15НалогНаИмуществоИП);
	МассивЭлементов.Добавить(Элементы.НадписьАУСНДоходыНалогНаИмуществоИП);
	МассивЭлементов.Добавить(Элементы.НадписьАУСНДоходыМинусРасходыНалогНаИмуществоИП);
	МассивЭлементов.Добавить(Элементы.НадписьОбщаяСистемаНалогНаИмуществоИП);
	МассивЭлементов.Добавить(Элементы.ДекорацияБезОграниченияИП);
	МассивЭлементов.Добавить(Элементы.СистемаНалогообложенияУСНДоходыИП);
	МассивЭлементов.Добавить(Элементы.СистемаНалогообложенияУСНДоходыМинусРасходыИП);
	МассивЭлементов.Добавить(Элементы.СистемаНалогообложенияАУСНДоходыИП);
	МассивЭлементов.Добавить(Элементы.СистемаНалогообложенияАУСНДоходыМинусРасходыИП);
	МассивЭлементов.Добавить(Элементы.СистемаНалогообложенияОбщаяИП);
	Для каждого Элемент Из МассивЭлементов Цикл
		Элемент.Ширина = ?(РазрешенУчетРегулярнойДеятельности, 14, 25);
	КонецЦикла;
	
	Если ЕстьНПД Тогда
		ШиринаЭлементов = ?(РазрешенУчетРегулярнойДеятельности, 14, 25);
		Для Каждого ИмяЭлемента Из ИменаЭлементовНПДИП.СистемаНалогообложения Цикл
			Элементы[ИмяЭлемента].Ширина = ШиринаЭлементов;
		КонецЦикла;
		Для Каждого ИмяЭлемента Из ИменаЭлементовНПДИП.ВхождениеНалога Цикл
			Элементы[ИмяЭлемента].Ширина = ШиринаЭлементов;
		КонецЦикла;
		Элементы[ИменаЭлементовНПДИП.КомандаВыбрать].Ширина = ШиринаЭлементов;
	КонецЕсли;
	
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить(Элементы.НазадИП);
	МассивЭлементов.Добавить(Элементы.НадписьРаботникиИП);
	МассивЭлементов.Добавить(Элементы.ДекорацияНадписьДоходыИП);
	МассивЭлементов.Добавить(Элементы.НадписьНалогНаИмуществоИП);
	МассивЭлементов.Добавить(Элементы.НадписьНДФЛ);
	МассивЭлементов.Добавить(Элементы.НадписьНДСИП);
	МассивЭлементов.Добавить(Элементы.НадписьСтоимостьПатента);
	МассивЭлементов.Добавить(Элементы.НадписьЕдиныйНалогУСНИП);
	МассивЭлементов.Добавить(Элементы.ДекорацияУплачиваетсяИП);
	МассивЭлементов.Добавить(Элементы.НадписьСистемаНалогообложенияИП);
	Для каждого Элемент Из МассивЭлементов Цикл
		Элемент.Ширина = ?(РазрешенУчетРегулярнойДеятельности, 13, 15);
	КонецЦикла;
	
	Если ЕстьНПД Тогда
		ШиринаЭлементов = ?(РазрешенУчетРегулярнойДеятельности, 13, 15);
		Элементы[ИменаЭлементовНПДИП.НазваниеНалога].Ширина = ШиринаЭлементов;
	КонецЕсли;
	
	Элементы.НадписьАУСНДоходыЮЛ.Видимость                 = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьАУСНДоходыПояснениеЮЛ.Видимость        = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьАУСНДоходыЕдиныйНалогЮЛ.Видимость      = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьАУСНДоходыНДСЮЛ.Видимость              = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьАУСНДоходыНалогНаПрибыль.Видимость     = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьАУСНДоходыНалогНаИмуществоЮЛ.Видимость = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьОсновныеСредстваАУСНЮЛ.Видимость = РазрешенУчетРегулярнойДеятельности;
	Элементы.НадписьРаботникиАУСНЮЛ.Видимость        = РазрешенУчетРегулярнойДеятельности;
	Элементы.СистемаНалогообложенияАУСНДоходыЮЛ.Видимость  = РазрешенУчетРегулярнойДеятельности;
	
	ИменаСистемНалогообложения = Новый Массив;
	ИменаСистемНалогообложения.Добавить("АУСНДоходы");
	ИменаСистемНалогообложения.Добавить("АУСНДоходыМинусРасходы");
	ИменаСистемНалогообложения.Добавить("Упрощенка6");
	ИменаСистемНалогообложения.Добавить("Упрощенка15");
	ИменаСистемНалогообложения.Добавить("ОбщаяСистема");
	
	ШаблоныИменЭлементов = Новый Массив;
	ШаблоныИменЭлементов.Добавить("Надпись%1ЮЛ");
	ШаблоныИменЭлементов.Добавить("Надпись%1ПояснениеЮЛ");
	ШаблоныИменЭлементов.Добавить("Надпись%1ЕдиныйНалогЮЛ");
	ШаблоныИменЭлементов.Добавить("Надпись%1НДСЮЛ");
	ШаблоныИменЭлементов.Добавить("Надпись%1НалогНаПрибыль");
	ШаблоныИменЭлементов.Добавить("Надпись%1НалогНаИмуществоЮЛ");
	ШаблоныИменЭлементов.Добавить("Надпись%1НалогНаИмуществоЮЛ");
	
	МассивЭлементов = Новый Массив;
	Для Каждого ШаблонИмени Из ШаблоныИменЭлементов Цикл
		Для Каждого СистемаНалогообложения Из ИменаСистемНалогообложения Цикл
			ИмяЭлемента = СтрШаблон(ШаблонИмени, СистемаНалогообложения);
			МассивЭлементов.Добавить(Элементы[ИмяЭлемента]);
		КонецЦикла;
	КонецЦикла;
	МассивЭлементов.Добавить(Элементы.СистемаНалогообложенияАУСНДоходыЮЛ);
	МассивЭлементов.Добавить(Элементы.СистемаНалогообложенияАУСНДоходыМинусРасходыЮЛ);
	МассивЭлементов.Добавить(Элементы.СистемаНалогообложенияУСНДоходыЮЛ);
	МассивЭлементов.Добавить(Элементы.СистемаНалогообложенияУСНДоходыМинусРасходыЮЛ);
	МассивЭлементов.Добавить(Элементы.СистемаНалогообложенияОбщаяЮЛ);
	МассивЭлементов.Добавить(Элементы.ДекорацияБезОграниченийЮЛ);
	
	Для Каждого Элемент Из МассивЭлементов Цикл
		Элемент.Ширина = ?(РазрешенУчетРегулярнойДеятельности, 18, 25);
	КонецЦикла;
	
	Элементы.НадписьДоходыУСНЮЛ.Ширина = ?(РазрешенУчетРегулярнойДеятельности, 37, 51);
	Элементы.НадписьДоходыАУСНЮЛ.Ширина = ?(РазрешенУчетРегулярнойДеятельности, 37, 51);
	
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить(Элементы.НадписьОсновныеСредстваУСНЮЛ);
	МассивЭлементов.Добавить(Элементы.НадписьРаботникиУСНЮЛ);
	Для Каждого Элемент Из МассивЭлементов Цикл
		Элемент.Ширина = ?(РазрешенУчетРегулярнойДеятельности, 37, 51);
	КонецЦикла;
	
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить(Элементы.ГруппаСравнениеСистемНалогообложенияЮЛ);
	МассивЭлементов.Добавить(Элементы.ГруппаОграничениеЮЛ);
	Для Каждого Элемент Из МассивЭлементов Цикл
		Элемент.Ширина = ?(РазрешенУчетРегулярнойДеятельности, 75, 77);
	КонецЦикла;

	ПрименитьОграниченияТарифа();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ВидОрганизации <> "ОбособленноеПодразделение" Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ГоловнаяОрганизация");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Для самозанятых не открываем форму выбора системы налогообложения
	Если Не РежимПовторногоВыбораВидаОрганизации Тогда
		Отказ = ВидОрганизации = "Самозанятый";
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Заголовок = ПолучитьЗаголовокФормы();
	
	Если РежимПовторногоВыбораВидаОрганизации Тогда
		ИнициализироватьФормуВРежимеПовторногоВыбораВидаОрганизации();
	ИначеЕсли РежимПовторногоВыбораСистемыНалогообложения Тогда
		ИнициализироватьФормуВРежимеПовторногоВыбораСистемыНалогообложения();
	ИначеЕсли РежимПростогоИнтерфейса Тогда
		ИнициализироватьФормуВРежимеПростогоИнтерфейса();
	Иначе
		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаВидОрганизации;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОткрытиеФормыНовойОрганизации" 
	   И Открыта() Тогда
		Закрыть();
	ИначеЕсли ИмяСобытия = "ОформленыПодписки" И ТарификацияБПВызовСервера.ОтображатьБаннерОжиданияОплатыТарифа() Тогда
		Элементы.ГруппаОжиданиеОплатыТарифа.Видимость = Истина;
		ПодключитьОбработчикОжидания(
			"Подключаемый_ПроверитьОбновлениеТарифицируемыхУслуг", 
			ТарификацияБПКлиент.ИнтервалПервойПроверкиОплатыТарифа(),
			Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = ТарификацияБПКлиентСервер.ИмяДействияОплатаСервиса() Тогда
		СтандартнаяОбработка = Ложь;
		Если ЭтоАдресВременногоХранилища(АдресЗначенийТарифицируемыхОпций) Тогда
			УдалитьИзВременногоХранилища(АдресЗначенийТарифицируемыхОпций);
		КонецЕсли;
		АдресЗначенийТарифицируемыхОпций = ТарификацияБПКлиент.ОткрытьФормуОплатыСервиса(УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьИП(Команда)
	
	ВидОрганизации = "ИндивидуальныйПредприниматель";
	
	Если РежимПовторногоВыбораВидаОрганизации Тогда
		Закрыть(ВидОрганизации);
	КонецЕсли;
	
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаСистемаНалогообложенияИП;
	
	Заголовок = ПолучитьЗаголовокФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьЮЛ(Команда)
	
	ВидОрганизации = "ЮридическоеЛицо";
	
	Если РежимПовторногоВыбораВидаОрганизации Тогда
		Закрыть(ВидОрганизации);
	КонецЕсли;
	
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаСистемаНалогообложенияЮЛ;
	
	Заголовок = ПолучитьЗаголовокФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьОП(Команда)
	
	ВидОрганизации = "ОбособленноеПодразделение";
	
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаСистемаНалогообложенияОП;
	
	Заголовок = ПолучитьЗаголовокФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьСамозанятый(Команда)
	
	ВидОрганизации = "Самозанятый";
	
	Если РежимПовторногоВыбораВидаОрганизации Тогда
		Закрыть(ВидОрганизации);
	Иначе
		СистемаНалогообложения = "НалогНаПрофессиональныйДоход";
		ОткрытьФормуОрганизации();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СистемаНалогообложенияОбщая(Команда)
	
	СистемаНалогообложения = "Общая";
	
	ОткрытьФормуОрганизации();
	
КонецПроцедуры

&НаКлиенте
Процедура СистемаНалогообложенияПатентная(Команда)
	
	СистемаНалогообложения = "Патентная";
	
	ОткрытьФормуОрганизации();
	
КонецПроцедуры

&НаКлиенте
Процедура СистемаНалогообложенияЕНВД(Команда)
	
	СистемаНалогообложения = "ЕНВД";
	
	ОткрытьФормуОрганизации();
	
КонецПроцедуры

&НаКлиенте
Процедура СистемаНалогообложенияУСНДоходы(Команда)
	
	СистемаНалогообложения = "УпрощеннаяДоходы";
	
	ОткрытьФормуОрганизации();
	
КонецПроцедуры

&НаКлиенте
Процедура СистемаНалогообложенияУСНДоходыМинусРасходы(Команда)
	
	СистемаНалогообложения = "УпрощеннаяДоходыМинусРасходы";
	
	ОткрытьФормуОрганизации();
	
КонецПроцедуры

&НаКлиенте
Процедура СистемаНалогообложенияНалогНаПрофессиональныйДоход(Команда)
	
	СистемаНалогообложения = "НалогНаПрофессиональныйДоход";
	
	ОткрытьФормуОрганизации();
	
КонецПроцедуры

&НаКлиенте
Процедура СистемаНалогообложенияАУСНДоходы(Команда)
	
	СистемаНалогообложения = "АУСНДоходы";
	
	ОткрытьФормуОрганизации();
	
КонецПроцедуры

&НаКлиенте
Процедура СистемаНалогообложенияАУСНДоходыМинусРасходы(Команда)
	
	СистемаНалогообложения = "АУСНДоходыМинусРасходы";
	
	ОткрытьФормуОрганизации();
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаВидОрганизации;
	
	Заголовок = ПолучитьЗаголовокФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьОрганизацию(Команда)
	
	ОткрытьФормуОрганизации();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ГиперссылкаСравнениеСистемНалогообложенияНажатие(Элемент)

	ЮридическоеФизическоеЛицо = ?(ВидОрганизации = "ИндивидуальныйПредприниматель",
		ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо"),
		ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"));
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ВидОрганизации", ЮридическоеФизическоеЛицо);
	
	ОткрытьФорму("Обработка.СравнениеРежимовНалогообложения.Форма", СтруктураПараметров, ЭтаФорма, ВидОрганизации);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ТекущаяСтраницаПоВидуОрганизации(ВидОрганизации, РежимПовторногоВыбораСистемыНалогообложения)
	
	Если ВидОрганизации = "ЮридическоеЛицо" Тогда
		ТекущаяСтраницаФормы = "СтраницаСистемаНалогообложенияЮЛ";
	ИначеЕсли ВидОрганизации = "ИндивидуальныйПредприниматель" Тогда
		ТекущаяСтраницаФормы = "СтраницаСистемаНалогообложенияИП";
	ИначеЕсли ВидОрганизации = "ОбособленноеПодразделение" Тогда
		Если РежимПовторногоВыбораСистемыНалогообложения Тогда
			ВызватьИсключение "Для обособленного подразделения система налогообложения определяется головной организацией.";
		Иначе
			ТекущаяСтраницаФормы = "СтраницаСистемаНалогообложенияОП";
		КонецЕсли;
	Иначе
		ТекущаяСтраницаФормы = "СтраницаВидОрганизации";
	КонецЕсли;
	Возврат ТекущаяСтраницаФормы;
	
КонецФункции

&НаКлиенте
Функция ПолучитьЗаголовокФормы()
	
	Если РежимПовторногоВыбораСистемыНалогообложения Тогда
		
		ЗаголовокФормы = НСтр("ru='Система налогообложения'");
		
	Иначе
	
		ЗаголовокФормы = НСтр("ru = 'Вид организации'");
		
		Если Элементы.СтраницыФормы.ТекущаяСтраница <> Элементы.СтраницаВидОрганизации Тогда
			Если ВидОрганизации = "ЮридическоеЛицо" Тогда
				ЗаголовокФормы = НСтр("ru = 'Юридическое лицо'");
			ИначеЕсли ВидОрганизации = "ИндивидуальныйПредприниматель" Тогда
				ЗаголовокФормы = НСтр("ru = 'Индивидуальный предприниматель'");
			ИначеЕсли ВидОрганизации = "ОбособленноеПодразделение" Тогда
				ЗаголовокФормы = НСтр("ru = 'Обособленное подразделение'");
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ЗаголовокФормы;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьИННГоловнойОрганизации(Организация)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ИНН")	
	
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуОрганизации()
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураУчетнойПолитики = ПолучитьСтруктуруУчетнойПолитики(ВидОрганизации,
		СистемаНалогообложения,
		ПараметрыУчетнойПолитики.ПлательщикЕНВД,
		ПараметрыУчетнойПолитики.ПрименяетсяУСНПатент);
	
	Модифицированность = Ложь;
	
	Если РежимПовторногоВыбораСистемыНалогообложения Тогда
		
		Закрыть(СтруктураУчетнойПолитики);
		
	Иначе
	
		ЗначенияЗаполнения = Новый Структура;
		Если ВидОрганизации = "ИндивидуальныйПредприниматель" 
			Или ВидОрганизации = "Самозанятый" Тогда
			ЗначенияЗаполнения.Вставить("ЮридическоеФизическоеЛицо",
				ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо"));
			СтатусФизическогоЛица = СтрШаблон("Перечисление.СтатусыФизическихЛиц.%1", ВидОрганизации);
			ЗначенияЗаполнения.Вставить("СтатусФизическогоЛица", ПредопределенноеЗначение(СтатусФизическогоЛица));
		Иначе
			ЗначенияЗаполнения.Вставить("ЮридическоеФизическоеЛицо",
				ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо"));
		КонецЕсли;
		
		ЗначенияЗаполнения.Вставить("ЭтоЮридическоеЛицо", (ВидОрганизации = "ЮридическоеФизическоеЛицо"));
	
		ЗначенияЗаполнения.Вставить("ОбособленноеПодразделение", (ВидОрганизации = "ОбособленноеПодразделение"));
		Если ВидОрганизации = "ОбособленноеПодразделение" Тогда
			ЗначенияЗаполнения.Вставить("ГоловнаяОрганизация", ГоловнаяОрганизация);
			ЗначенияЗаполнения.Вставить("ИНН", ПолучитьИННГоловнойОрганизации(ГоловнаяОрганизация));
		КонецЕсли;
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ЗначенияЗаполнения",       ЗначенияЗаполнения);
		СтруктураПараметров.Вставить("СтруктураУчетнойПолитики", СтруктураУчетнойПолитики);
		
		ОткрытьФорму("Справочник.Организации.Форма.ФормаОрганизации", СтруктураПараметров, ВладелецФормы);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ИнициализироватьФормуВРежимеПовторногоВыбораВидаОрганизации()
		
	Элементы.ГруппаОбособленноеПодразделение.Видимость = Ложь;
	Элементы.ГруппаОграниченияТарифаВидОрганизации.Ширина = 42;
	
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаВидОрганизации;
	
	КнопкаПоУмолчанию = Новый Соответствие;
	КнопкаПоУмолчанию["ЮридическоеЛицо"]               = "ВыбратьЮЛ";
	КнопкаПоУмолчанию["ИндивидуальныйПредприниматель"] = "ВыбратьИП";
	КнопкаПоУмолчанию["Самозанятый"] =                   "ВыбратьСамозанятого";
	
	ЭлементФормыПоУмолчанию = Элементы[КнопкаПоУмолчанию[ВидОрганизации]];
	Если ЭлементФормыПоУмолчанию <> Неопределено Тогда
		ЭлементФормыПоУмолчанию.АктивизироватьПоУмолчанию = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИнициализироватьФормуВРежимеПовторногоВыбораСистемыНалогообложения()

	Если ПараметрыУчетнойПолитики.СистемаНалогообложения = ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.Упрощенная") Тогда
		СистемаНалогообложения = ?(ПараметрыУчетнойПолитики.ОбъектНалогообложенияУСН = ПредопределенноеЗначение("Перечисление.ОбъектыНалогообложенияПоУСН.Доходы"),
			"УпрощеннаяДоходы", "УпрощеннаяДоходыМинусРасходы");
	ИначеЕсли ПараметрыУчетнойПолитики.СистемаНалогообложения = ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.ОсобыйПорядок")
		    И ПараметрыУчетнойПолитики.ПрименяетсяУСНПатент Тогда
		СистемаНалогообложения = "Патентная";
	ИначеЕсли ПараметрыУчетнойПолитики.СистемаНалогообложения = ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.ОсобыйПорядок")
		    И ПараметрыУчетнойПолитики.ПлательщикЕНВД Тогда
		СистемаНалогообложения = "ЕНВД";
	ИначеЕсли ПараметрыУчетнойПолитики.СистемаНалогообложения = ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.НалогНаПрофессиональныйДоход") Тогда
		СистемаНалогообложения = "НалогНаПрофессиональныйДоход";
	Иначе
		СистемаНалогообложения = "Общая";
	КонецЕсли;
	
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы[ТекущаяСтраницаПоВидуОрганизации(ВидОрганизации, Истина)];
	Элементы.НазадЮЛ.Доступность = Ложь;
	Элементы.НазадЮЛ.ЦветТекста = ОбщегоНазначенияКлиент.ЦветСтиля("ЦветФонаФормы");
	Элементы.НазадИП.Доступность = Ложь;
	Элементы.НазадИП.ЦветТекста = ОбщегоНазначенияКлиент.ЦветСтиля("ЦветФонаФормы");
	
	КнопкаПоУмолчанию = Новый Соответствие;
	КнопкаПоУмолчанию["ЮридическоеЛицо"]                                               = Новый Соответствие;
	КнопкаПоУмолчанию["ЮридическоеЛицо"]["УпрощеннаяДоходы"]                           = "СистемаНалогообложенияУСНДоходыЮЛ";
	КнопкаПоУмолчанию["ЮридическоеЛицо"]["УпрощеннаяДоходыМинусРасходы"]               = "СистемаНалогообложенияУСНДоходыМинусРасходыЮЛ";
	КнопкаПоУмолчанию["ЮридическоеЛицо"]["Общая"]                                      = "СистемаНалогообложенияОбщаяЮЛ";
	КнопкаПоУмолчанию["ИндивидуальныйПредприниматель"]                                 = Новый Соответствие;
	КнопкаПоУмолчанию["ИндивидуальныйПредприниматель"]["УпрощеннаяДоходы"]             = "СистемаНалогообложенияУСНДоходыИП";
	КнопкаПоУмолчанию["ИндивидуальныйПредприниматель"]["УпрощеннаяДоходыМинусРасходы"] = "СистемаНалогообложенияУСНДоходыМинусРасходыИП";
	КнопкаПоУмолчанию["ИндивидуальныйПредприниматель"]["Патентная"]                    = "СистемаНалогообложенияПатентнаяИП";
	КнопкаПоУмолчанию["ИндивидуальныйПредприниматель"]["ЕНВД"]                         = "СистемаНалогообложенияЕНВДИП";
	КнопкаПоУмолчанию["ИндивидуальныйПредприниматель"]["НалогНаПрофессиональныйДоход"] = "СистемаНалогообложенияНалогНаПрофессиональныйДоходИП";
	КнопкаПоУмолчанию["ИндивидуальныйПредприниматель"]["Общая"]                        = "СистемаНалогообложенияОбщаяИП";
	КнопкаПоУмолчанию["Самозанятый"]                                                   = Новый Соответствие;
	КнопкаПоУмолчанию["Самозанятый"]["НалогНаПрофессиональныйДоход"]                   = "СистемаНалогообложенияНалогНаПрофессиональныйДоходИП";
	
	ЭлементФормыПоУмолчанию = Элементы.Найти(КнопкаПоУмолчанию[ВидОрганизации][СистемаНалогообложения]);
	Если ЭлементФормыПоУмолчанию <> Неопределено Тогда
		ЭлементФормыПоУмолчанию.АктивизироватьПоУмолчанию = Истина;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ИнициализироватьФормуВРежимеПростогоИнтерфейса()
	
	ВидОрганизации = "ИндивидуальныйПредприниматель";
	СистемаНалогообложения = "УпрощеннаяДоходы";
	
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы[ТекущаяСтраницаПоВидуОрганизации(ВидОрганизации, Истина)];
	Элементы.НазадЮЛ.Доступность = Ложь;
	Элементы.НазадЮЛ.ЦветТекста = ОбщегоНазначенияКлиент.ЦветСтиля("ЦветФонаФормы");
	Элементы.НазадИП.Доступность = Ложь;
	Элементы.НазадИП.ЦветТекста = ОбщегоНазначенияКлиент.ЦветСтиля("ЦветФонаФормы");
	
	ЭлементФормыПоУмолчанию = Элементы.СистемаНалогообложенияУСНДоходыИП;
	ЭлементФормыПоУмолчанию.АктивизироватьПоУмолчанию = Истина;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтруктуруУчетнойПолитики(ВидОрганизации, СистемаНалогообложения, ПлательщикЕНВД, ПрименяетсяУСНПатент)
	
	Возврат РегистрыСведений.НастройкиСистемыНалогообложения.СтруктураУчетнойПолитики(ВидОрганизации, СистемаНалогообложения, ПлательщикЕНВД, ПрименяетсяУСНПатент);
	
КонецФункции

&НаСервереБезКонтекста
Функция ИменаЭлементовНПДИП()
	
	СистемаНалогообложения = "НадписьНПД,НадписьНПДПояснение,НадписьНПДЕдиныйНалог,НадписьНПДСтоимостьПатента,НадписьНПДЕНВД,"
		+ "НадписьНПДНПД,НадписьНПДНДС,НадписьНПДНДФЛ,НадписьНПДНалогНаИмущество,НадписьДоходыНПДИП,НадписьРаботникиНПДИП";
	НазваниеНалога = "НадписьНПДИП";
	ЗаголовокНалога = "НадписьНПД";
	ВхождениеНалога = "НадписьУпрощенка6НПДИП,НадписьУпрощенка15НПДИП,НадписьПатентНПД,НадписьЕНВДНПД,НадписьНПДНПД,НадписьОбщаяСистемаНПДИП";
	КомандаВыбрать = "СистемаНалогообложенияНалогНаПрофессиональныйДоходИП";
	
	РаскрашиваемыеЭлементы = 
		"НадписьНПДНПД,НадписьНПДСтоимостьПатента,НадписьНПДНДС,НадписьНПДНалогНаИмущество,НадписьДоходыНПДИП";
	
	СтуктураИмен = Новый Структура;
	СтуктураИмен.Вставить("СистемаНалогообложения", СтрРазделить(СтрЗаменить(СистемаНалогообложения, " ", ""), ","));
	СтуктураИмен.Вставить("ВхождениеНалога", СтрРазделить(СтрЗаменить(ВхождениеНалога, " ", ""), ","));
	СтуктураИмен.Вставить("РаскрашиваемыеЭлементы", СтрРазделить(СтрЗаменить(РаскрашиваемыеЭлементы, " ", ""), ","));
	СтуктураИмен.Вставить("НазваниеНалога", НазваниеНалога);
	СтуктураИмен.Вставить("ЗаголовокНалога", ЗаголовокНалога);
	СтуктураИмен.Вставить("КомандаВыбрать", КомандаВыбрать);
	
	Возврат СтуктураИмен;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИменаЭлементовУСНИП()
	
	РаскрашиваемыеЭлементы = СтрЗаменить(
		"НадписьУпрощенка6ИП,НадписьУпрощенка15ИП,НадписьУпрощенка6НПДИП,НадписьУпрощенка15НПДИП,
		|НадписьУпрощенка6СтоимостьПатента,НадписьУпрощенка15СтоимостьПатента,НадписьУпрощенка6НДСИП,
		|НадписьУпрощенка15НДСИП,НадписьУпрощенка6НалогНаИмуществоИП,НадписьУпрощенка15НалогНаИмуществоИП,
		|НадписьДоходыУСНИП",
		Символы.ПС, "");
	
	ЗаголовокНалога = "НадписьУпрощенка6ИП,НадписьУпрощенка15ИП";
	КомандаВыбрать = "СистемаНалогообложенияУСНДоходыИП,СистемаНалогообложенияУСНДоходыМинусРасходыИП";
	
	СтуктураИмен = Новый Структура;
	СтуктураИмен.Вставить("РаскрашиваемыеЭлементы", СтрРазделить(СтрЗаменить(РаскрашиваемыеЭлементы, " ", ""), ","));
	СтуктураИмен.Вставить("ЗаголовокНалога", СтрРазделить(СтрЗаменить(ЗаголовокНалога, " ", ""), ","));
	СтуктураИмен.Вставить("КомандаВыбрать", СтрРазделить(СтрЗаменить(КомандаВыбрать, " ", ""), ","));
	
	Возврат СтуктураИмен;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИменаЭлементовУСНЮЛ()
	
	РаскрашиваемыеЭлементы = СтрЗаменить(
		"НадписьУпрощенка6ЕдиныйНалогЮЛ,НадписьУпрощенка15ЕдиныйНалогЮЛ,НадписьДоходыУСНЮЛ,
		|НадписьУпрощенка6НалогНаПрибыль,НадписьУпрощенка15НалогНаПрибыль,НадписьРаботникиУСНЮЛ",
		Символы.ПС, "");
	
	ЗаголовокНалога = "НадписьУпрощенка6ЮЛ,НадписьУпрощенка15ЮЛ";
	КомандаВыбрать = "СистемаНалогообложенияУСНДоходыЮЛ,СистемаНалогообложенияУСНДоходыМинусРасходыЮЛ";
	
	СтуктураИмен = Новый Структура;
	СтуктураИмен.Вставить("РаскрашиваемыеЭлементы", СтрРазделить(СтрЗаменить(РаскрашиваемыеЭлементы, " ", ""), ","));
	СтуктураИмен.Вставить("ЗаголовокНалога", СтрРазделить(СтрЗаменить(ЗаголовокНалога, " ", ""), ","));
	СтуктураИмен.Вставить("КомандаВыбрать", СтрРазделить(СтрЗаменить(КомандаВыбрать, " ", ""), ","));
	
	Возврат СтуктураИмен;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИменаЭлементовАУСНИП()
	
	РаскрашиваемыеЭлементы = СтрЗаменить(
		"НадписьАУСНДоходыИП,НадписьАУСНДоходыМинусРасходыИП,НадписьАУСНДоходыНПДИП,НадписьАУСНДоходыМинусРасходыНПДИП,
		|НадписьАУСНДоходыСтоимостьПатента,НадписьАУСНДоходыМинусРасходыСтоимостьПатента,НадписьАУСНДоходыНДСИП,
		|НадписьАУСНДоходыМинусРасходыНДСИП,НадписьАУСНДоходыНалогНаИмуществоИП,НадписьАУСНДоходыМинусРасходыНалогНаИмуществоИП,
		|НадписьДоходыАУСНИП",
		Символы.ПС, "");
	
	ЗаголовокНалога = "НадписьАУСНДоходыИП,НадписьАУСНДоходыМинусРасходыИП";
	КомандаВыбрать = "СистемаНалогообложенияАУСНДоходыИП,СистемаНалогообложенияАУСНДоходыМинусРасходыИП";
	
	СтуктураИмен = Новый Структура;
	СтуктураИмен.Вставить("РаскрашиваемыеЭлементы", СтрРазделить(СтрЗаменить(РаскрашиваемыеЭлементы, " ", ""), ","));
	СтуктураИмен.Вставить("ЗаголовокНалога", СтрРазделить(СтрЗаменить(ЗаголовокНалога, " ", ""), ","));
	СтуктураИмен.Вставить("КомандаВыбрать", СтрРазделить(СтрЗаменить(КомандаВыбрать, " ", ""), ","));
	
	Возврат СтуктураИмен;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИменаЭлементовАУСНЮЛ()
	
	РаскрашиваемыеЭлементы = СтрЗаменить(
		"НадписьАУСНДоходыЕдиныйНалогЮЛ,НадписьАУСНДоходыМинусРасходыЕдиныйНалогЮЛ,НадписьДоходыАУСНЮЛ,
		|НадписьАУСНДоходыНалогНаПрибыль,НадписьАУСНДоходыМинусРасходыНалогНаПрибыль,НадписьРаботникиАУСНЮЛ",
		Символы.ПС, "");
	
	ЗаголовокНалога = "НадписьАУСНДоходыЮЛ,НадписьАУСНДоходыМинусРасходыЮЛ";
	КомандаВыбрать = "СистемаНалогообложенияАУСНДоходыЮЛ,СистемаНалогообложенияАУСНДоходыМинусРасходыЮЛ";
	
	СтуктураИмен = Новый Структура;
	СтуктураИмен.Вставить("РаскрашиваемыеЭлементы", СтрРазделить(СтрЗаменить(РаскрашиваемыеЭлементы, " ", ""), ","));
	СтуктураИмен.Вставить("ЗаголовокНалога", СтрРазделить(СтрЗаменить(ЗаголовокНалога, " ", ""), ","));
	СтуктураИмен.Вставить("КомандаВыбрать", СтрРазделить(СтрЗаменить(КомандаВыбрать, " ", ""), ","));
	
	Возврат СтуктураИмен;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИменаЭлементовПСН()
	
	РаскрашиваемыеЭлементы = СтрЗаменить(
		"НадписьПатентНПД,НадписьПатентСтоимостьПатента,НадписьПатентНДС,
		|НадписьПатентНалогНаИмущество,НадписьДоходыПатентИП",
		Символы.ПС, "");
	
	ЗаголовокНалога = "НадписьПатент";
	КомандаВыбрать = "СистемаНалогообложенияПатентнаяИП";
	
	СтуктураИмен = Новый Структура;
	СтуктураИмен.Вставить("РаскрашиваемыеЭлементы", СтрРазделить(СтрЗаменить(РаскрашиваемыеЭлементы, " ", ""), ","));
	СтуктураИмен.Вставить("ЗаголовокНалога", ЗаголовокНалога);
	СтуктураИмен.Вставить("КомандаВыбрать", КомандаВыбрать);
	
	Возврат СтуктураИмен;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИменаЭлементовОСНОИП()
	
	РаскрашиваемыеЭлементы = СтрЗаменить(
		"НадписьОбщаяСистемаНПДИП,НадписьОбщаяСистемаСтоимостьПатента,НадписьОбщаяСистемаНДСИП,
		|НадписьОбщаяСистемаНалогНаИмуществоИП,ДекорацияБезОграниченияИП",
		Символы.ПС, "");
	
	ЗаголовокНалога = "НадписьОбщаяСистемаИП";
	КомандаВыбрать = "СистемаНалогообложенияОбщаяИП";
	
	СтуктураИмен = Новый Структура;
	СтуктураИмен.Вставить("РаскрашиваемыеЭлементы", СтрРазделить(СтрЗаменить(РаскрашиваемыеЭлементы, " ", ""), ","));
	СтуктураИмен.Вставить("ЗаголовокНалога", ЗаголовокНалога);
	СтуктураИмен.Вставить("КомандаВыбрать", КомандаВыбрать);
	
	Возврат СтуктураИмен;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИменаЭлементовОСНОЮЛ()
	
	РаскрашиваемыеЭлементы = 
		"НадписьОбщаяСистемаЕдиныйНалогЮЛ,НадписьОбщаяСистемаНалогНаПрибыль,ДекорацияБезОграниченийЮЛ";
	
	ЗаголовокНалога = "НадписьОбщаяСистемаЮЛ";
	КомандаВыбрать = "СистемаНалогообложенияОбщаяЮЛ";
	
	СтуктураИмен = Новый Структура;
	СтуктураИмен.Вставить("РаскрашиваемыеЭлементы", СтрРазделить(СтрЗаменить(РаскрашиваемыеЭлементы, " ", ""), ","));
	СтуктураИмен.Вставить("ЗаголовокНалога", ЗаголовокНалога);
	СтуктураИмен.Вставить("КомандаВыбрать", КомандаВыбрать);
	
	Возврат СтуктураИмен;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИменаЭлементовВидОрганизацииСамозанятый()
	
	СтуктураИмен = Новый Структура;
	СтуктураИмен.Вставить("ЗаголовокНалога", "НадписьФизическоеЛицоСамозанятый");
	СтуктураИмен.Вставить("КомандаВыбрать", "ВыбратьСамозанятого");
	
	Возврат СтуктураИмен;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИменаЭлементовВидОрганизацииИП()
	
	СтуктураИмен = Новый Структура;
	СтуктураИмен.Вставить("ЗаголовокНалога", "НадписьИндивидуальныйПредприниматель");
	СтуктураИмен.Вставить("КомандаВыбрать", "ВыбратьИП");
	
	Возврат СтуктураИмен;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИменаЭлементовВидОрганизацииЮЛ()
	
	СтуктураИмен = Новый Структура;
	СтуктураИмен.Вставить("ЗаголовокНалога", "НадписьЮридическоеЛицо");
	СтуктураИмен.Вставить("КомандаВыбрать", "ВыбратьЮЛ");
	
	Возврат СтуктураИмен;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИменаЭлементовВидОрганизацииОбособленноеПодразделение()
	
	СтуктураИмен = Новый Структура;
	СтуктураИмен.Вставить("ЗаголовокНалога", "НадписьОбособленноеПодразделение");
	СтуктураИмен.Вставить("КомандаВыбрать", "ВыбратьОП");
	
	Возврат СтуктураИмен;
	
КонецФункции

&НаСервере
Процедура ПрименитьОграниченияТарифа()
	
	НастроитьШиринуБаннеровОграниченияТарифа();
	
	ПодсказкаОграниченияТарифа = СтроковыеФункции.ФорматированнаяСтрока(
		НСтр("ru = 'На текущем тарифе есть ограничения. 
		|<a href=""%1"">Перейдите на другой тариф</a>, чтобы использовать больше возможностей.'"),
		ТарификацияБПКлиентСервер.ИмяДействияОплатаСервиса());
	
	Элементы.ПодсказкаОграниченияТарифаВидОрганизации.Заголовок = ПодсказкаОграниченияТарифа;
	
	Элементы.ПодсказкаОграниченияТарифаИП.Заголовок = ПодсказкаОграниченияТарифа;
	
	Элементы.ПодсказкаОграниченияТарифаЮЛ.Заголовок = ПодсказкаОграниченияТарифа;
	
	УстановитьЦветЭлементовФормы(ИменаЭлементовВидОрганизацииСамозанятый(), ТарификацияБП.РазрешенСамозанятый());
	УстановитьЦветЭлементовФормы(ИменаЭлементовВидОрганизацииИП(), ТарификацияБП.РазрешенИндивидуальныйПредприниматель());
	УстановитьЦветЭлементовФормы(ИменаЭлементовВидОрганизацииЮЛ(), ТарификацияБП.РазрешеноЮридическоеЛицо());
	УстановитьЦветЭлементовФормы(ИменаЭлементовВидОрганизацииОбособленноеПодразделение(), 
		ТарификацияБП.РазрешеноЮридическоеЛицо() И ТарификацияБПВызовСервераПовтИсп.РазрешенУчетРегулярнойДеятельности());
	
	УстановитьЦветЭлементовФормы(ИменаЭлементовНПДИП(), ТарификацияБП.РазрешенНалогНаПрофессиональныйДоход());
	УстановитьЦветЭлементовФормы(ИменаЭлементовПСН(), ТарификацияБП.РазрешенаПатентнаяСистемаНалогообложения());
	
	УстановитьЦветЭлементовФормы(ИменаЭлементовУСНИП(), ТарификацияБП.РазрешенаУСН());
	УстановитьЦветЭлементовФормы(ИменаЭлементовУСНЮЛ(), ТарификацияБП.РазрешенаУСН());
	
	РазрешенаАУСН = ТарификацияБП.РазрешенаАУСН();
	УстановитьЦветЭлементовФормы(ИменаЭлементовАУСНИП(), РазрешенаАУСН);
	УстановитьЦветЭлементовФормы(ИменаЭлементовАУСНЮЛ(), РазрешенаАУСН);
	
	УстановитьЦветЭлементовФормы(ИменаЭлементовОСНОИП(), ТарификацияБП.РазрешенНДФЛИП());
	УстановитьЦветЭлементовФормы(ИменаЭлементовОСНОЮЛ(), ТарификацияБП.РазрешенаОбщаяСистемаНалогообложения());
	
	Элементы.ГруппаОграниченияТарифаВидОрганизации.Видимость = Не ТарификацияБП.РазрешенСамозанятый()
		Или Не ТарификацияБП.РазрешенИндивидуальныйПредприниматель()
		Или Не ТарификацияБП.РазрешеноЮридическоеЛицо();
	
	Элементы.ГруппаОграниченияТарифаИП.Видимость = Не (ТарификацияБП.РазрешенНалогНаПрофессиональныйДоход()
		И ТарификацияБП.РазрешенаПатентнаяСистемаНалогообложения()
		И ТарификацияБП.РазрешенаУСН()
		И ТарификацияБП.РазрешенНДФЛИП());
	
	Элементы.ГруппаОграниченияТарифаЮЛ.Видимость =
		Не (ТарификацияБП.РазрешенаУСН() И ТарификацияБП.РазрешенаОбщаяСистемаНалогообложения());
	
КонецПроцедуры

&НаСервере
Процедура НастроитьШиринуБаннеровОграниченияТарифа()
	
	ЗаголовкиСНОИП = Новый Массив;
	ЗаголовкиСНОИП.Добавить(ИменаЭлементовНПДИП().ЗаголовокНалога);
	ЗаголовкиСНОИП.Добавить(ИменаЭлементовУСНИП().ЗаголовокНалога);
	ЗаголовкиСНОИП.Добавить(ИменаЭлементовПСН().ЗаголовокНалога);
	ЗаголовкиСНОИП.Добавить("НадписьЕНВД");
	ЗаголовкиСНОИП.Добавить(ИменаЭлементовОСНОИП().ЗаголовокНалога);
	
	Элементы.ГруппаОграниченияТарифаИП.Ширина = ШиринаБаннераОграниченияТарифаПоВидимымЭлементам(ЗаголовкиСНОИП);
	
	ЗаголовкиСНОЮЛ = Новый Массив;
	ЗаголовкиСНОЮЛ.Добавить(ИменаЭлементовУСНЮЛ().ЗаголовокНалога);
	ЗаголовкиСНОЮЛ.Добавить(ИменаЭлементовОСНОЮЛ().ЗаголовокНалога);
	
	Элементы.ГруппаОграниченияТарифаЮЛ.Ширина = ШиринаБаннераОграниченияТарифаПоВидимымЭлементам(ЗаголовкиСНОЮЛ);
	
	ЗаголовкиВидОрганизации = Новый Массив;
	ЗаголовкиВидОрганизации.Добавить(ИменаЭлементовВидОрганизацииСамозанятый().ЗаголовокНалога);
	ЗаголовкиВидОрганизации.Добавить(ИменаЭлементовВидОрганизацииИП().ЗаголовокНалога);
	ЗаголовкиВидОрганизации.Добавить(ИменаЭлементовВидОрганизацииЮЛ().ЗаголовокНалога);
	ЗаголовкиВидОрганизации.Добавить(ИменаЭлементовВидОрганизацииОбособленноеПодразделение().ЗаголовокНалога);
	
	Элементы.ГруппаОграниченияТарифаВидОрганизации.Ширина =
		ШиринаБаннераОграниченияТарифаПоВидимымЭлементам(ЗаголовкиВидОрганизации);
	
КонецПроцедуры

&НаСервере
Функция ШиринаБаннераОграниченияТарифаПоВидимымЭлементам(МассивЭлементов)
	
	ВидимыхЭлементов = 0;
	ШиринаЭлементов = 0;
	Для Каждого Элемент Из МассивЭлементов Цикл
		
		Если ТипЗнч(Элемент) = Тип("Структура") Тогда
			ИмяЭлемента = Элемент.ЗаголовокНалога;
		Иначе
			ИмяЭлемента = Элемент;
		КонецЕсли;
		
		Если ТипЗнч(ИмяЭлемента) <> Тип("Массив") Тогда
			МассивЗаголовков = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ИмяЭлемента);
		Иначе
			МассивЗаголовков = ИмяЭлемента;
		КонецЕсли;
		
		Для Каждого ИмяЗаголовка Из МассивЗаголовков Цикл
			
			Заголовк = Элементы.Найти(ИмяЗаголовка);
			Если Заголовк = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Если Заголовк.Видимость Тогда
				ВидимыхЭлементов = ВидимыхЭлементов + 1;
			КонецЕсли;
			
			ШиринаЭлементов = Заголовк.Ширина;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ШиринаЭлементов * ВидимыхЭлементов + ВидимыхЭлементов - 1;
	
КонецФункции

&НаСервере
Процедура УстановитьЦветЭлементовФормы(СтруктураЭлементов, ЭлементыДоступны)
	
	ЦветаДоступно = Новый Структура;
	ЦветаДоступно.Вставить("ЗаголовокНалога", ЦветаСтиля.БыстрыеОтборыФонГруппы);
	ЦветаДоступно.Вставить("РаскрашиваемыеЭлементы", ЦветаСтиля.ЦветФонаПодсказки);
	ЦветаДоступно.Вставить("КомандаВыбрать", ЦветаСтиля.ВыборСтандартногоПериодаФонКнопки);
	
	ЦветаНедоступно = Новый Структура;
	ЦветаНедоступно.Вставить("ЗаголовокНалога", ЦветаСтиля.ЦветБаннераСерый);
	ЦветаНедоступно.Вставить("РаскрашиваемыеЭлементы", ЦветаСтиля.ЦветБаннераСерый);
	ЦветаНедоступно.Вставить("КомандаВыбрать", ЦветаСтиля.ЦветБаннераСерый);
	
	Для Каждого ГруппаЭлементов Из СтруктураЭлементов Цикл
		
		Если Не ЦветаДоступно.Свойство(ГруппаЭлементов.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТипЗнч(ГруппаЭлементов.Значение) <> Тип("Массив") Тогда
			МассивЭлементов = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ГруппаЭлементов.Значение);
		Иначе
			МассивЭлементов = ГруппаЭлементов.Значение;
		КонецЕсли;
		
		Для Каждого ИмяЭлемента Из МассивЭлементов Цикл
			
			Элемент = Элементы.Найти(ИмяЭлемента);
			Если Элемент = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Если ЭлементыДоступны Тогда
				Элемент.ЦветФона = ЦветаДоступно[ГруппаЭлементов.Ключ];
			Иначе
				Элемент.ЦветФона = ЦветаНедоступно[ГруппаЭлементов.Ключ];
			КонецЕсли;
			
			Если ТипЗнч(Элемент) = Тип("КнопкаФормы") Тогда
				Элемент.Доступность = ЭлементыДоступны;
			КонецЕсли;
			
		КонецЦикла;
	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПроверитьОбновлениеТарифицируемыхУслуг()
	
	Если ТарификацияБПВызовСервера.ТарифицируемыеОпцииИзменены(АдресЗначенийТарифицируемыхОпций) Тогда
		Элементы.ГруппаОжиданиеОплатыТарифа.Видимость = Ложь;
		ОбновитьИнтерфейс();
	Иначе
		ИнтервалПроверкиОплатыТарифа = 
			?(ЗначениеЗаполнено(ИнтервалПроверкиОплатыТарифа),
			ИнтервалПроверкиОплатыТарифа + 30,
			60);
		ПодключитьОбработчикОжидания(
			"Подключаемый_ПроверитьОбновлениеТарифицируемыхУслуг", 
			ИнтервалПроверкиОплатыТарифа,
			Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
