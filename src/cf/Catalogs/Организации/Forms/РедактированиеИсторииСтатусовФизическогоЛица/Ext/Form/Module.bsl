
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ИсторияСтатусовФизическогоЛица.Загрузить(Параметры.ИсторияСтатусовФизическогоЛица.Выгрузить());
	
	УстановитьПризнакПервоначальногоЗначения(ИсторияСтатусовФизическогоЛица);
	
	Если ИсторияСтатусовФизическогоЛица.Количество() > 0 Тогда
		Элементы.ИсторияСтатусовФизическогоЛица.ТекущаяСтрока = 
			ИсторияСтатусовФизическогоЛица[ИсторияСтатусовФизическогоЛица.Количество() - 1].ПолучитьИдентификатор();
	КонецЕсли;
	
	Если Не ПравоДоступа("Редактирование", Метаданные.Справочники.Организации) Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если ТолькоПросмотр Тогда
		
		Элементы.ФормаКомандаОтмена.КнопкаПоУмолчанию = Истина;
		
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТабличнойЧастиИсторияСтатусовФизическогоЛица

&НаКлиенте
Процедура ИсторияСтатусовФизическогоЛицаПередУдалением(Элемент, Отказ)
	
	Если ИсторияСтатусовФизическогоЛица.Индекс(Элемент.ТекущиеДанные) = 0 Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияСтатусовФизическогоЛицаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПризнакПервоначальногоЗначения(ИсторияСтатусовФизическогоЛица);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияСтатусовФизическогоЛицаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		ТекущаяСтрока = Элементы.ИсторияСтатусовФизическогоЛица.ТекущиеДанные;
		Если Не ТекущаяСтрока = Неопределено Тогда
			ТекущаяСтрока.Период = НачалоМесяца(ОбщегоНазначенияБПВызовСервера.ТекущаяДатаНаСервере());
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Отказ = Ложь;
	
	ПроверитьЗаполнениеИстории(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РезультатВыбора = Новый Структура;
	РезультатВыбора.Вставить("ИсторияСтатусовФизическогоЛица", ИсторияСтатусовФизическогоЛица);
	Если ИсторияСтатусовФизическогоЛица.Количество() > 0 Тогда
		ИсторияСтатусовФизическогоЛица.Сортировать("Период Убыв");
		СтатусФизическогоЛица = ИсторияСтатусовФизическогоЛица[0].СтатусФизическогоЛица;
		Период = ИсторияСтатусовФизическогоЛица[0].Период;
	Иначе
		СтатусФизическогоЛица = Неопределено;
	КонецЕсли;
	РезультатВыбора.Вставить("СтатусФизическогоЛица", СтатусФизическогоЛица);
	РезультатВыбора.Вставить("Период", Период);
	РезультатВыбора.Вставить("Модифицирован", Модифицированность);
	
	ОповеститьОВыборе(РезультатВыбора);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();
	
	// ИсторияСтатусовФизическогоЛицаПериод
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ИсторияСтатусовФизическогоЛицаПериод");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ИсторияСтатусовФизическогоЛица.ПервоначальноеЗначение", ВидСравненияКомпоновкиДанных.Равно, Истина);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Начальное значение'"));
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	// ИсторияСтатусовФизическогоЛицаПериод
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ИсторияСтатусовФизическогоЛицаПериод");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ИсторияСтатусовФизическогоЛица.ПервоначальноеЗначение", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ИсторияСтатусовФизическогоЛица.Период", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПризнакПервоначальногоЗначения(ТаблицаИстории)
	
	ТаблицаИстории.Сортировать("Период");
	// Первая строка должна быть первоначальным значением
	Если ТаблицаИстории.Количество() > 0 Тогда
		ПерваяСтрока = ТаблицаИстории[0];
		ПерваяСтрока.ПервоначальноеЗначение = Истина;
		ПерваяСтрока.Период = '00010101';
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗаполнениеИстории(Отказ)
	
	ПериодыСтрок = Новый Массив;
	
	Для Каждого Запись Из ИсторияСтатусовФизическогоЛица Цикл
		
		ИндексСтроки = ИсторияСтатусовФизическогоЛица.Индекс(Запись);
		ПрефиксСообщенияСтроки = СтрШаблон("ИсторияСтатусовФизическогоЛица[%1].", Формат(ИндексСтроки, "ЧЦ=; ЧДЦ=; ЧГ="));
		
		Если НЕ ЗначениеЗаполнено(Запись.Период) И ИндексСтроки > 0 Тогда
			СообщениеОбОшибке = НСтр("ru = 'Нужно указать дату начала действия'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке, , ПрефиксСообщенияСтроки + "Период", , Отказ);
		КонецЕсли;
		
		Если ПериодыСтрок.Найти(Запись.Период) = Неопределено Тогда
			Если ЗначениеЗаполнено(Запись.Период) Тогда
				ПериодыСтрок.Добавить(Запись.Период);
			КонецЕсли;
		Иначе
			// Строка с такой датой уже была раньше, это ошибка.
			// Не может быть 2 строки с одинаковой датой.
			СообщениеОбОшибке = НСтр("ru = 'Уже есть запись с указанной датой сведений'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке, , ПрефиксСообщенияСтроки + "Период", , Отказ);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Запись.СтатусФизическогоЛица) Тогда
			СообщениеОбОшибке = НСтр("ru = 'Поле ""Статус"" не заполнено'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				СообщениеОбОшибке,
				,
				СтрШаблон("%1СтатусФизическогоЛица", ПрефиксСообщенияСтроки),
				,
				Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
