
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, "Заголовок,СотрудникСсылка,ДатаПриема,ТекущаяОрганизация,СНИЛС");
	Если НЕ ЗначениеЗаполнено(ТекущаяОрганизация) Тогда
		ТекущаяОрганизация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СотрудникСсылка, "ГоловнаяОрганизация");
	КонецЕсли;
	СозданиеНового = Параметры.СозданиеНового;
	
	ПроинициализироватьФорму(Параметры.АдресВХранилище);
	
	Если ЗначениеЗаполнено(Параметры.КлючНазначенияИспользования)
		И ЗначениеЗаполнено(Параметры.ОписаниеДанных) Тогда
		Если ЗначениеЗаполнено(ЭтотОбъект.Заголовок) Тогда
			ЭтотОбъект.Заголовок = СтрШаблон(НСтр("ru = '%1: %2'"), ЭтотОбъект.Заголовок, Параметры.ОписаниеДанных);
		Иначе
			ЭтотОбъект.Заголовок = Параметры.ОписаниеДанных;
		КонецЕсли;
		КлючСохраненияПоложенияОкна = Параметры.КлючНазначенияИспользования;
		Если Параметры.КлючНазначенияИспользования = "ВыплатаЗарплаты" Тогда
			Элементы.БухгалтерскийУчетЗарплаты.Видимость                                = Ложь;
			Элементы.ГруппаЗарплатныйПроект.ОтображатьЗаголовок                         = Ложь;
			Элементы.ГруппаСпособыЗачисления.Поведение        = ПоведениеОбычнойГруппы.Обычное;
			Элементы.ГруппаСпособыЗачисления.ЦветТекстаЗаголовка   = ЦветаСтиля.ЦветТекстаПоля;
		ИначеЕсли Параметры.КлючНазначенияИспользования = "УчетЗатрат" Тогда
			Элементы.ГруппаЗарплатныйПроект.Видимость                                   = Ложь;
			Элементы.БухгалтерскийУчетЗарплаты.ОтображатьЗаголовок                      = Ложь;
			Элементы.БухучетЗарплатыСотрудниковПериод.Видимость                         = Ложь;
			Элементы.БухучетЗарплатыСотрудниковИстория.Заголовок                        = НСтр("ru = 'История'");
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				Элементы,
				"БухучетЗарплатыСотрудниковОтношениеКЕНВД",
				"Видимость",
				ОбщегоНазначения.ТекущаяДатаПользователя() < УчетЕНВДКлиентСервер.ДатаОтменыЕНВД());
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СотрудникиКлиент.ЗарегистрироватьОткрытиеФормы(ЭтотОбъект, "ВыплатыУчетЗатрат");
	СотрудникиКлиент.ПроверитьРежимТолькоПросмотраДополнительнойФормы(ЭтотОбъект, Истина, Ложь);
	
	ЗаполнитьДанныеФизическогоЛица();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	СотрудникиКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	Если ИмяСобытия = "ОтредактированаИстория" И СотрудникСсылка = Источник Тогда
		
		Если Параметр.ИмяРегистра = "БухучетЗарплатыСотрудников" Тогда
			
			Если БухучетЗарплатыСотрудниковНаборЗаписейПрочитан Тогда
				
				РедактированиеПериодическихСведенийКлиент.ОбработкаОповещения(ЭтотОбъект, СотрудникСсылка,
					ИмяСобытия, Параметр, Источник);
				
				БухучетЗарплатыСотрудниковОбновитьПолеПериод(ЭтотОбъект, ОбщегоНазначенияКлиент.ДатаСеанса());
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "ИзменениеДанныхФизическогоЛица"
		И ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ФизическоеЛицо = Источник Тогда
		
		СНИЛС = СНИЛСФизическогоЛица();
		НомерТелефона = НомерТелефона();
		ЗаполнитьДанныеФизическогоЛица();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ ЗначениеЗаполнено(КлючНазначенияИспользования)
		ИЛИ КлючНазначенияИспользования = "ВыплатаЗарплаты" Тогда
		
		Если ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам) Тогда
			
			Если Не ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ДокументОснование) Тогда
				
				Если ОбменСБанкамиПоЗарплатнымПроектамФормы.ЗаписьЛицевыеСчетаСотрудниковПоЗарплатнымПроектамИзменена(ЭтотОбъект) Тогда
					
					Если Не ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект) Тогда
						
						ТекстСообщения = НСтр("ru='Не заполнен зарплатный проект'");
						ОбщегоНазначения.СообщитьПользователю(
						ТекстСообщения, , "ЗарплатныйПроект", "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам", Отказ);
						
					ИначеЕсли ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.СпособЗачисления = Перечисления.СпособыЗачисленияВыплат.ПоЛицевомуСчету
						И Не ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.НомерЛицевогоСчета) Тогда
						
						ТекстСообщения = НСтр("ru='Не заполнен номер лицевого счета'");
						ОбщегоНазначения.СообщитьПользователю(
							ТекстСообщения, , "НомерЛицевогоСчета", "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам", Отказ);
					ИначеЕсли ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.СпособЗачисления = Перечисления.СпособыЗачисленияВыплат.ПоНомеруКарты
							И Не ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.БанковскаяКарта) Тогда
							
							ТекстСообщения = НСтр("ru='Не заполнена банковская карта'");
							ОбщегоНазначения.СообщитьПользователю(
								ТекстСообщения, , "БанковскаяКарта", "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам", Отказ);
								
						ИначеЕсли ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.СпособЗачисления = Перечисления.СпособыЗачисленияВыплат.ПоНомеруСчетаВБанк
							И Не ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.БанковскийСчет) Тогда
							
							ТекстСообщения = НСтр("ru='Не заполнен номер банковского счета'");
							ОбщегоНазначения.СообщитьПользователю(
								ТекстСообщения, , "БанковскийСчет", "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам", Отказ);
								
						ИначеЕсли ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.СпособЗачисления = Перечисления.СпособыЗачисленияВыплат.ПоНомеруТелефона
							И (Не ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Телефон) Или Не ЗначениеЗаполнено(НомерТелефона)) Тогда
							
							ТекстСообщения = НСтр("ru='У сотрудника не указан номер телефона для перевода'");
							ОбщегоНазначения.СообщитьПользователю(
								ТекстСообщения, , "Телефон", "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам", Отказ);
								
													
						ИначеЕсли ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.СпособЗачисления = Перечисления.СпособыЗачисленияВыплат.ПоСНИЛС
							И Не ЗначениеЗаполнено(СНИЛС) Тогда
							
							ТекстСообщения = НСтр("ru='У сотрудника не указан СНИЛС'");
							ОбщегоНазначения.СообщитьПользователю(
								ТекстСообщения,,,, Отказ);
					КонецЕсли;
				
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(КлючНазначенияИспользования)
		ИЛИ КлючНазначенияИспользования = "УчетЗатрат" Тогда
		РедактированиеПериодическихСведений.ПроверитьЗаписьВФорме(ЭтотОбъект, "БухучетЗарплатыСотрудников", СотрудникСсылка, Отказ);
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамЗарплатныйПроектПриИзменении(Элемент)
	
	Если Не ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамЗаблокироватьСотрудника() Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект) Тогда
		ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрочитать(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект);
	КонецЕсли;
	
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамЗарплатныйПроектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамЗаблокироватьСотрудника() Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамНомерЛицевогоСчетаПриИзменении(Элемент)
	
	Если Не ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамЗаблокироватьСотрудника() Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект) Тогда
		
		ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект = ЗарплатныйПроектПоОрганизации(ТекущаяОрганизация);
		
	КонецЕсли;
	
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковСтатьяФинансированияПриИзменении(Элемент)
	
	Если Не БухучетЗарплатыСотрудниковЗаблокироватьСотрудника() Тогда
		Возврат;
	КонецЕсли;
	
	БухучетЗарплатыСотрудниковОбновитьПолеПериод(ЭтотОбъект, ОбщегоНазначенияКлиент.ДатаСеанса());
	
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковСтатьяФинансированияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не БухучетЗарплатыСотрудниковЗаблокироватьСотрудника() Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковСпособОтраженияЗарплатыВБухучетеПриИзменении(Элемент)
	
	Если Не БухучетЗарплатыСотрудниковЗаблокироватьСотрудника() Тогда
		Возврат;
	КонецЕсли;
	
	БухучетЗарплатыСотрудниковОбновитьПолеПериод(ЭтотОбъект, ОбщегоНазначенияКлиент.ДатаСеанса());
	
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковСпособОтраженияЗарплатыВБухучетеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не БухучетЗарплатыСотрудниковЗаблокироватьСотрудника() Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковОтношениеКЕНВДПриИзменении(Элемент)
	
	Если Не БухучетЗарплатыСотрудниковЗаблокироватьСотрудника() Тогда
		Возврат;
	КонецЕсли;
	
	БухучетЗарплатыСотрудниковОбновитьПолеПериод(ЭтотОбъект, ОбщегоНазначенияКлиент.ДатаСеанса());
	
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковОтношениеКЕНВДНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не БухучетЗарплатыСотрудниковЗаблокироватьСотрудника() Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковПериодПриИзменении(Элемент)
	
	БухучетЗарплатыСотрудниковЗаблокироватьСотрудника();
	
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковПериодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не БухучетЗарплатыСотрудниковЗаблокироватьСотрудника() Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпособПоНомеруКартыПриИзменении(Элемент)
	
	ИзменениеСпособаЗачисление();

КонецПроцедуры

&НаКлиенте
Процедура СпособПоНомеруСчетаВБанкПриИзменении(Элемент)
	
	ИзменениеСпособаЗачисление();

КонецПроцедуры

&НаКлиенте
Процедура СпособПоСНИЛСПриИзменении(Элемент)
	
	ИзменениеСпособаЗачисление();

КонецПроцедуры

&НаКлиенте
Процедура СпособПоНомеруТелефонаПриИзменении(Элемент)
	
	ИзменениеСпособаЗачисление();

КонецПроцедуры

&НаКлиенте
Процедура СпособПоЛицевомуСчетуПриИзменении(Элемент)
	
	ИзменениеСпособаЗачисление();

КонецПроцедуры

&НаКлиенте
Процедура ТелефонПриИзменении(Элемент)
	НомерТелефона = НомерТелефона();
	ЗаполнитьНомерТелефона();
	УстановитьЗаголовокЗачисления(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура БанковскийСчетПриИзменении(Элемент)
	УстановитьЗаголовокЗачисления(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура БанковскаяКартаПриИзменении(Элемент)
	УстановитьЗаголовокЗачисления(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковИстория(Команда)
	
	СотрудникиКлиент.ОткрытьФормуРедактированияИстории("БухучетЗарплатыСотрудников", СотрудникСсылка, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Ок(Команда)
	
	СохранитьИЗакрытьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция АдресДанныхДополнительнойФормыНаСервере(ОписаниеДополнительнойФормы)
	
	Возврат СотрудникиФормы.АдресДанныхДополнительнойФормы(ОписаниеДополнительнойФормы, ЭтотОбъект);
	
КонецФункции

&НаСервере
Процедура ПроинициализироватьФорму(АдресВХранилище)
	
	ЦветСтиляЦветТекстаПоля = ЦветаСтиля.ЦветТекстаПоля;
	ОтражениеЗарплатыВБухучете.УстановитьСписокВыбораОтношениеКЕНВД(Элементы, "БухучетЗарплатыСотрудниковОтношениеКЕНВД");
	
	ФизическоеЛицоСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СотрудникСсылка, "ФизическоеЛицо");
	
	СотрудникиФормы.ПрочитатьДанныеИзХранилищаВФорму(
		ЭтотОбъект,
		СотрудникиКлиентСервер.ОписаниеДополнительнойФормы(ИмяФормы),
		АдресВХранилище);
		
	Если ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрежняя = Неопределено Тогда
		ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрочитать();
		Если Параметры.КлючНазначенияИспользования <> "УчетЗатрат" Тогда
			Если НЕ ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ДатаОткрытияЛицевогоСчета) Тогда
				Если ЗначениеЗаполнено(ДатаПриема) Тогда
					ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ДатаОткрытияЛицевогоСчета = НачалоМесяца(ДатаПриема);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе
		ЗарплатныйПроектПоддерживаетСпособыЗачисленияВыплат = 
			ОбменСБанкамиПоЗарплатнымПроектам.ЗарплатныйПроектПоддерживаетСпособыЗачисленияВыплат(
				ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект);
				
		Если ЗарплатныйПроектПоддерживаетСпособыЗачисленияВыплат Тогда
			
			СпособыЗачисления = ОбменСБанкамиПоЗарплатнымПроектам.НовоеСоответствиеСпособовЗачисления();
		
			ОбменСБанкамиПоЗарплатнымПроектам.УстановитьДоступностьСпособовЗачисленияПоЗарплатномуПроекту(
				СпособыЗачисления, ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект);
			
			ПоддерживаетсяЗачислениеНаКарту				= СпособыЗачисления[Перечисления.СпособыЗачисленияВыплат.ПоНомеруКарты];
			ПоддерживаетсяЗачислениеПоНомеруСчета 		= СпособыЗачисления[Перечисления.СпособыЗачисленияВыплат.ПоНомеруСчетаВБанк];
			ПоддерживаетсяЗачислениеПоНомеруТелефона	= СпособыЗачисления[Перечисления.СпособыЗачисленияВыплат.ПоНомеруТелефона];
			ПоддерживаетсяЗачислениеПоСНИЛС 			= СпособыЗачисления[Перечисления.СпособыЗачисленияВыплат.ПоСНИЛС];
			
		КонецЕсли;
	КонецЕсли;
	
	СпособыЗачисленияНастроитьПоля();
	СпособыЗачисленияУстановитьДоступность(ЭтотОбъект);
	
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамУстановитьОтображение(ЭтотОбъект);
	
	Если БухучетЗарплатыСотрудниковПрежняя = Неопределено Тогда
		
		РедактированиеПериодическихСведений.ПрочитатьЗаписьДляРедактированияВФорме(
			ЭтотОбъект, "БухучетЗарплатыСотрудников", СотрудникСсылка);
		
	КонецЕсли;
	
	БухучетЗарплатыСотрудниковОбновитьПолеПериод(ЭтотОбъект, ТекущаяДатаСеанса());
	
	НомерТелефона = НомерТелефона();
	УстановитьЗаголовокЗачисления(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Функция ЗаблокироватьОбъектВФормеВладельце() Экспорт
	
	Возврат СотрудникиКлиент.ЗаблокироватьОбъектВФормеВладельцеДополнительнойФормы(ЭтотОбъект, Истина, Ложь);
	
КонецФункции

&НаСервере
Процедура ПрочитатьНаборЗаписейПериодическихСведенийПоСтруктуре(ИмяРегистра, СтруктураВедущихОбъектов) Экспорт
	
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписейПоСтруктуре(ЭтотОбъект, ИмяРегистра, СтруктураВедущихОбъектов);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНаборЗаписейПериодическихСведений(ИмяРегистра, ВедущийОбъект) Экспорт
	
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписей(ЭтотОбъект, ИмяРегистра, ВедущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрыть(Результат, ДополнительныеПараметры) Экспорт 
	
	СохранитьИЗакрытьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрытьНаКлиенте(ЗакрытьФорму = Истина) Экспорт  
	
	Если НЕ ТолькоПросмотр Тогда
		ТекущийЭлемент = Элементы.ФормаОк;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура("ЗакрытьФорму", ЗакрытьФорму);
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрытьНаКлиентеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	СохранитьДанные(Ложь, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрытьНаКлиентеЗавершение(Отказ, ДополнительныеПараметры) Экспорт 
	
	Если Не Отказ И Открыта() Тогда
		
		Модифицированность = Ложь;
		Если ДополнительныеПараметры.ЗакрытьФорму Тогда
			Закрыть();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанные(Отказ, ОповещениеЗавершения = Неопределено)
	
	Если Не Модифицированность Тогда
		
		Если ОповещениеЗавершения <> Неопределено Тогда 
			ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Отказ);
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
	Если Не СозданиеНового И Не Отказ Тогда
		БухучетЗарплатыСотрудниковЗапроситьРежимИзменения(БухучетЗарплатыСотрудников.Период, Отказ, ОповещениеЗавершения);
	Иначе
		СохранитьДанныеЗавершение(Отказ, ОповещениеЗавершения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанныеЗавершение(Отказ, ОповещениеЗавершения) Экспорт  

	Если Не Отказ Тогда
		
		Если ПроверитьЗаполнение() Тогда
			
			ВозвращаемыйПараметр = Новый Структура;
			ВозвращаемыйПараметр.Вставить("ИмяФормы", ИмяФормы);
			ВозвращаемыйПараметр.Вставить("АдресВХранилище", АдресДанныхДополнительнойФормыНаСервере(СотрудникиКлиентСервер.ОписаниеДополнительнойФормы(ИмяФормы)));
			
			Оповестить(
				"ИзмененыДанныеДополнительнойФормы",
				ВозвращаемыйПараметр,
				ВладелецФормы);
			
		Иначе
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОповещениеЗавершения <> Неопределено Тогда 
		ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗарплатныйПроектПоОрганизации(Организация)
	Возврат ОбменСБанкамиПоЗарплатнымПроектам.ЗарплатныйПроектПоОрганизации(Организация);
КонецФункции

&НаСервере
Процедура ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрочитать(Знач ЗарплатныйПроект = Неопределено)
	
	Если Не ЗначениеЗаполнено(ЗарплатныйПроект) Тогда
		
		КадровыеДанные = КадровыйУчет.КадровыеДанныеСотрудников(Истина, СотрудникСсылка, "ЗарплатныйПроект");
		Если КадровыеДанные.Количество() > 0 
			И ЗначениеЗаполнено(КадровыеДанные[0].ЗарплатныйПроект) Тогда
			
			ЗарплатныйПроект = КадровыеДанные[0].ЗарплатныйПроект;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамМенеджерЗаписи = РегистрыСведений.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.СоздатьМенеджерЗаписи();
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамМенеджерЗаписи.ФизическоеЛицо = ФизическоеЛицоСсылка;
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамМенеджерЗаписи.Организация = ТекущаяОрганизация;
	
	Если ЗначениеЗаполнено(ЗарплатныйПроект) Тогда
		
		ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамМенеджерЗаписи.ЗарплатныйПроект = ЗарплатныйПроект;
		ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамМенеджерЗаписи.Прочитать();
		
		Если Не ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамМенеджерЗаписи.Выбран() Тогда
			
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамМенеджерЗаписи.ФизическоеЛицо = ФизическоеЛицоСсылка;
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамМенеджерЗаписи.Организация = ТекущаяОрганизация;
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамМенеджерЗаписи.ЗарплатныйПроект = ЗарплатныйПроект;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамМенеджерЗаписи, "ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам");
	
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрежняя = ОбщегоНазначения.СтруктураПоМенеджеруЗаписи(
		ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам, Метаданные.РегистрыСведений.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам);
		
	ЗарплатныйПроектПоддерживаетСпособыЗачисленияВыплат = 
		ОбменСБанкамиПоЗарплатнымПроектам.ЗарплатныйПроектПоддерживаетСпособыЗачисленияВыплат(
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект);
			
	Если ЗарплатныйПроектПоддерживаетСпособыЗачисленияВыплат Тогда
		
		СпособыЗачисления = ОбменСБанкамиПоЗарплатнымПроектам.НовоеСоответствиеСпособовЗачисления();
	
		ОбменСБанкамиПоЗарплатнымПроектам.УстановитьДоступностьСпособовЗачисленияПоЗарплатномуПроекту(
			СпособыЗачисления, ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект);
		
		ПоддерживаетсяЗачислениеНаКарту				= СпособыЗачисления[Перечисления.СпособыЗачисленияВыплат.ПоНомеруКарты];
		ПоддерживаетсяЗачислениеПоНомеруСчета 		= СпособыЗачисления[Перечисления.СпособыЗачисленияВыплат.ПоНомеруСчетаВБанк];
		ПоддерживаетсяЗачислениеПоНомеруТелефона	= СпособыЗачисления[Перечисления.СпособыЗачисленияВыплат.ПоНомеруТелефона];
		ПоддерживаетсяЗачислениеПоСНИЛС 			= СпособыЗачисления[Перечисления.СпособыЗачисленияВыплат.ПоСНИЛС];
	КонецЕсли;
	
	СпособыЗачисленияНастроитьПоля();
	
	ИзменениеСпособаЗачисление();

КонецПроцедуры

&НаКлиенте
Процедура ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПриИзменении()
	
	Если Не ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ДатаОткрытияЛицевогоСчета) Тогда
		ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ДатаОткрытияЛицевогоСчета = НачалоМесяца(ОбщегоНазначенияКлиент.ДатаСеанса());
	КонецЕсли;
	
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамУстановитьОтображение(ЭтотОбъект);
	
	УстановитьЗаголовокЗачисления(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Функция ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамЗаблокироватьСотрудника()
	
	Если Не ЗаблокироватьОбъектВФормеВладельце() Тогда
		
		ЗаполнитьЗначенияСвойств(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам, ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрежняя);
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамУстановитьОтображение(Форма)
	
	Элементы = Форма.Элементы;
	Организация = Форма.ТекущаяОрганизация;
	ФизическоеЛицо = Форма.ФизическоеЛицоСсылка;
	
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам = Форма.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам;
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрежняя = Форма.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрежняя;
	
	Если НЕ ПустаяСтрока(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.НомерЛицевогоСчета) Тогда
		
		СтруктураПояснения = СтруктураПоясненияКНомеруЛицевогоСчета(
			ФизическоеЛицо,
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект,
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.НомерЛицевогоСчета,
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам,
			ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамПрежняя,
			Ложь);
		
	Иначе
		СтруктураПояснения = Неопределено;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ГруппаНаКарточку",
		"Видимость",
		Форма.ПоддерживаетсяЗачислениеНаКарту);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ГруппаНаБанковскийСчет",
		"Видимость",
		Форма.ПоддерживаетсяЗачислениеПоНомеруСчета);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ГруппаПоСНИЛС",
		"Видимость",
		Форма.ПоддерживаетсяЗачислениеПоСНИЛС);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ГруппаПоНомеруТелефонаОбщая",
		"Видимость",
		Форма.ПоддерживаетсяЗачислениеПоНомеруТелефона);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамНомерЛицевогоСчета",
		"ПоложениеЗаголовка",
		?(Форма.ЗарплатныйПроектПоддерживаетСпособыЗачисленияВыплат, 
			ПоложениеЗаголовкаЭлементаФормы.Нет, 
			ПоложениеЗаголовкаЭлементаФормы.Авто));
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамНомерЛицевогоСчета",
		"ТолькоПросмотр",
		Не ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект)
			Или ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ДокументОснование));
			
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"СпособПоЛицевомуСчету",
		"Видимость",
		Форма.ЗарплатныйПроектПоддерживаетСпособыЗачисленияВыплат);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамДатаОткрытияЛицевогоСчета",
		"ТолькоПросмотр",
		Не ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ЗарплатныйПроект)
			Или Не ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.НомерЛицевогоСчета)
			Или ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ДокументОснование));
	
	Если СтруктураПояснения <> Неопределено
		И Не ПустаяСтрока(СтруктураПояснения.СообщенияПроверки) Тогда
		
		Если СтруктураПояснения.Картинка.Вид = ВидКартинки.Пустая Тогда
			ПодсказкаЛицевогоСчета = Новый ФорматированнаяСтрока("");
		Иначе
			ПодсказкаЛицевогоСчета = Новый ФорматированнаяСтрока(СтруктураПояснения.Картинка);
		КонецЕсли;
		
		ПодсказкаЛицевогоСчета = Новый ФорматированнаяСтрока(
			ПодсказкаЛицевогоСчета,
			" ",
			Новый ФорматированнаяСтрока(СтруктураПояснения.СообщенияПроверки, , СтруктураПояснения.ЭлементЦветТекста));
		
	ИначеЕсли ЗначениеЗаполнено(Организация) Тогда
		ПодсказкаЛицевогоСчета = "";
	Иначе
		
		ПодсказкаЛицевогоСчета = Новый ФорматированнаяСтрока(
			БиблиотекаКартинок.Информация,
			" ",
			НСтр("ru = 'Для ввода лицевого счета заполните организацию'"));
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ДокументОснование) Тогда
		
		Если ЗначениеЗаполнено(ПодсказкаЛицевогоСчета) Тогда
			
			ПодсказкаЛицевогоСчета = Новый ФорматированнаяСтрока(
				ПодсказкаЛицевогоСчета,
				Символы.ПС);
			
		КонецЕсли;
		
		ПодсказкаЛицевогоСчета = Новый ФорматированнаяСтрока(
			ПодсказкаЛицевогоСчета,
			НСтр("ru='Введен документом'") + ": ",
			Новый ФорматированнаяСтрока(
				Строка(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ДокументОснование),
				,
				,
				,
				ПолучитьНавигационнуюСсылку(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ДокументОснование)));
		
	КонецЕсли;
	
	ЗарплатаКадрыКлиентСервер.УстановитьРасширеннуюПодсказкуЭлементуФормы(
		Форма, "ГруппаЗарплатныйПроект", ПодсказкаЛицевогоСчета);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СтруктураПоясненияКНомеруЛицевогоСчета(ФизическоеЛицо, ЗарплатныйПроект, НомерЛицевогоСчета, ЛицевыеСчета, ЛицевыеСчетаПрежняя, ПерсонализироватьСообщение)
	СтруктураПояснения = ОбменСБанкамиПоЗарплатнымПроектамФормы.СтруктураПоясненияКНомеруЛицевогоСчета(
		ФизическоеЛицо,
		ЗарплатныйПроект,
		НомерЛицевогоСчета,
		ЛицевыеСчета,
		ЛицевыеСчетаПрежняя,
		ПерсонализироватьСообщение);
	Возврат СтруктураПояснения	
КонецФункции

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковЗапроситьРежимИзменения(ДатаИзменения, Отказ, ОповещениеЗавершения)
	
	ДополнительныеПараметры = Новый Структура("ОповещениеЗавершения", ОповещениеЗавершения);
	Оповещение = Новый ОписаниеОповещения("БухучетЗарплатыСотрудниковЗапроситьРежимИзмененияЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ТекстКнопкиДа = НСтр("ru = 'Изменился бухучет'");
	
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'При редактировании изменился бухгалтерский учет для сотрудника. 
			|Если просто исправлены прежние данные (они были ошибочны), нажмите ""Исправлена ошибка"".
			|Если бухучет сотрудника изменился с %1, нажмите ""Изменился бухучет""'"), 
		Формат(ДатаИзменения, "ДЛФ=DD"));
	
	РедактированиеПериодическихСведенийКлиент.ЗапроситьРежимИзмененияРегистра(ЭтотОбъект, "БухучетЗарплатыСотрудников", ТекстВопроса, ТекстКнопкиДа, Отказ, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура БухучетЗарплатыСотрудниковЗапроситьРежимИзмененияЗавершение(Отказ, ДополнительныеПараметры) Экспорт 
	
	СохранитьДанныеЗавершение(Отказ, ДополнительныеПараметры.ОповещениеЗавершения);
	
КонецПроцедуры

&НаКлиенте
Функция БухучетЗарплатыСотрудниковЗаблокироватьСотрудника()
	
	Если Не ЗаблокироватьОбъектВФормеВладельце() Тогда
		
		ЗаполнитьЗначенияСвойств(БухучетЗарплатыСотрудников, БухучетЗарплатыСотрудниковПрежняя);
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура БухучетЗарплатыСотрудниковОбновитьПолеПериод(Форма, ДатаСеанса)
	
	// Не обязательно заполнение поля Период если данные по умолчанию и при этом 
	// записи о бухучете еще нет.
	Если ЗарплатаКадрыКлиентСервер.СведенияОБухучетеСотрудникаПоУмолчанию(Форма.БухучетЗарплатыСотрудников)
		И Не ЗначениеЗаполнено(Форма.БухучетЗарплатыСотрудниковПрежняя.Период) Тогда
		Если ЗначениеЗаполнено(Форма.БухучетЗарплатыСотрудников.Период) Тогда
			Форма.БухучетЗарплатыСотрудников.Период = '00010101';
		КонецЕсли;
	Иначе
		Если Не ЗначениеЗаполнено(Форма.БухучетЗарплатыСотрудников.Период) Тогда
			Если ЗначениеЗаполнено(Форма.ДатаПриема) Тогда
				Форма.БухучетЗарплатыСотрудников.Период = НачалоДня(Форма.ДатаПриема);
			Иначе
				Форма.БухучетЗарплатыСотрудников.Период = НачалоДня(ДатаСеанса);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	РедактированиеПериодическихСведенийКлиентСервер.ОбновитьОтображениеПолейВвода(Форма, "БухучетЗарплатыСотрудников", Форма.СотрудникСсылка);
	
КонецПроцедуры

&НаСервере
Процедура ИзменениеСпособаЗачисление()
	
	ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.СпособЗачисления = СпособЗачисления;
	СпособыЗачисленияУстановитьДоступность(ЭтотОбъект);
	УстановитьЗаголовокЗачисления(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура СпособыЗачисленияНастроитьПоля()
	
	Элементы.СпособПоНомеруКарты.СписокВыбора[0].Представление
		= Перечисления.СпособыЗачисленияВыплат.ПоНомеруКарты;
		
	Элементы.СпособПоСНИЛС.СписокВыбора[0].Представление 
		= Перечисления.СпособыЗачисленияВыплат.ПоСНИЛС;
		
	Элементы.СпособПоНомеруТелефона.СписокВыбора[0].Представление 
		= Перечисления.СпособыЗачисленияВыплат.ПоНомеруТелефона;
		
	Элементы.СпособПоЛицевомуСчету.СписокВыбора[0].Представление 
		= Перечисления.СпособыЗачисленияВыплат.ПоЛицевомуСчету;
		
	Элементы.СпособПоНомеруСчетаВБанк.СписокВыбора[0].Представление
		= Перечисления.СпособыЗачисленияВыплат.ПоНомеруСчетаВБанк;
		
	СпособЗачисления = ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.СпособЗачисления;
	
	Если Не ЗначениеЗаполнено(СпособЗачисления) Или Не ЗарплатныйПроектПоддерживаетСпособыЗачисленияВыплат Тогда
		СпособЗачисления = Перечисления.СпособыЗачисленияВыплат.ПоЛицевомуСчету;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СпособыЗачисленияУстановитьДоступность(Форма) Экспорт
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ГруппаСпособыЗачисления",
		"ОтображатьЗаголовок",
		Форма.ЗарплатныйПроектПоддерживаетСпособыЗачисленияВыплат);
		
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"БанковскаяКарта",
		"Доступность",
		Форма.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.СпособЗачисления = ПредопределенноеЗначение("Перечисление.СпособыЗачисленияВыплат.ПоНомеруКарты"));
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"БанковскийСчет",
		"Доступность",
		Форма.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.СпособЗачисления = ПредопределенноеЗначение("Перечисление.СпособыЗачисленияВыплат.ПоНомеруСчетаВБанк"));
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"НадписьСНИЛС",
		"Доступность",
		Форма.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.СпособЗачисления = ПредопределенноеЗначение("Перечисление.СпособыЗачисленияВыплат.ПоСНИЛС"));
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"Телефон",
		"Доступность",
		Форма.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.СпособЗачисления = ПредопределенноеЗначение("Перечисление.СпособыЗачисленияВыплат.ПоНомеруТелефона"));
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"НадписьНомерТелефона",
		"Доступность",
		Форма.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.СпособЗачисления = ПредопределенноеЗначение("Перечисление.СпособыЗачисленияВыплат.ПоНомеруТелефона"));

	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамНомерЛицевогоСчета",
		"Доступность",
		Форма.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.СпособЗачисления = ПредопределенноеЗначение("Перечисление.СпособыЗачисленияВыплат.ПоЛицевомуСчету")
			Или Не ЗначениеЗаполнено(Форма.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.СпособЗачисления));
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ЛицевыеСчетаСотрудниковПоЗарплатнымПроектамДатаОткрытияЛицевогоСчета",
		"Доступность",
		Форма.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.СпособЗачисления = ПредопределенноеЗначение("Перечисление.СпособыЗачисленияВыплат.ПоЛицевомуСчету")
			Или Не ЗначениеЗаполнено(Форма.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.СпособЗачисления));
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНомерТелефона()
	НадписьНомерТелефона = ?(ЗначениеЗаполнено(НомерТелефона), НомерТелефона, НСтр("ru = 'не заполнен'"));
	Элементы.НадписьНомерТелефона.Заголовок = НадписьНомерТелефона;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСНИЛС()
	НадписьСНИЛС = ?(ЗначениеЗаполнено(СНИЛС), СНИЛС, НСтр("ru = 'не заполнен'"));
	Элементы.НадписьСНИЛС.Заголовок = НадписьСНИЛС;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДанныеФизическогоЛица()
	ЗаполнитьСНИЛС();
	ЗаполнитьНомерТелефона();
КонецПроцедуры

&НаСервере
Функция СНИЛСФизическогоЛица()
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.ФизическоеЛицо, "СтраховойНомерПФР");

КонецФункции

&НаСервере
Функция НомерТелефона()
	
	Если ЗначениеЗаполнено(ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Телефон) Тогда
		
		Отбор = Новый Структура;
		Отбор.Вставить("Вид", ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Телефон);
		Отбор.Вставить("Тип", Перечисления.ТипыКонтактнойИнформации.Телефон);
		СтрокаТелефона = ФизическоеЛицоСсылка.КонтактнаяИнформация.НайтиСтроки(Отбор);
		
		Если СтрокаТелефона.Количество() > 0 Тогда
			Возврат СтрокаТелефона[0].Представление;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовокЗачисления(Форма) Экспорт
	
	Если Форма.СпособЗачисления = 
		ПредопределенноеЗначение("Перечисление.СпособыЗачисленияВыплат.ПоНомеруКарты") Тогда
		Форма.Элементы.ГруппаСпособыЗачисления.ЗаголовокСвернутогоОтображения = 
			СтрШаблон(НСтр("ru ='Зачислять по номеру карты %1'"), 
				Форма.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.БанковскаяКарта);
	ИначеЕсли Форма.СпособЗачисления = 
		ПредопределенноеЗначение("Перечисление.СпособыЗачисленияВыплат.ПоНомеруСчетаВБанк") Тогда
			Форма.Элементы.ГруппаСпособыЗачисления.ЗаголовокСвернутогоОтображения = 
				СтрШаблон(НСтр("ru ='Зачислять по номеру счета %1'"), 
					Форма.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.БанковскийСчет);
	ИначеЕсли Форма.СпособЗачисления =
		ПредопределенноеЗначение("Перечисление.СпособыЗачисленияВыплат.ПоНомеруТелефона") Тогда
			Форма.Элементы.ГруппаСпособыЗачисления.ЗаголовокСвернутогоОтображения = 
				СтрШаблон(НСтр("ru ='Зачислять по номеру телефона %1'"), 
					Форма.НомерТелефона);
	ИначеЕсли Форма.СпособЗачисления =
		ПредопределенноеЗначение("Перечисление.СпособыЗачисленияВыплат.ПоСНИЛС") Тогда
			Форма.Элементы.ГруппаСпособыЗачисления.ЗаголовокСвернутогоОтображения = 
				СтрШаблон(НСтр("ru ='Зачислять по СНИЛС %1'"), 
					Форма.СНИЛС);
	ИначеЕсли Форма.СпособЗачисления =
		ПредопределенноеЗначение("Перечисление.СпособыЗачисленияВыплат.ПоЛицевомуСчету") Тогда
			Форма.Элементы.ГруппаСпособыЗачисления.ЗаголовокСвернутогоОтображения = 
				СтрШаблон(НСтр("ru ='Зачислять по лицевому счету %1'"), 
					Форма.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.НомерЛицевогоСчета);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
