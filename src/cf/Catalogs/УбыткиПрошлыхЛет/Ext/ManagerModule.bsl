#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Получает элемент справочника по любой дате из года получения убытка.
// Каждый элемент справочника характеризует год получения убытка
//
// Параметры:
//  Период - Дата
// 
// Возвращаемое значение:
//  Ссылка - СправочникСсылка.УбыткиПрошлыхЛет
//
Функция СсылкаУбытокПериода(Период) Экспорт 
	
	НачалоГода = НачалоГода(Период);
	КонецГода = КонецГода(Период);
	ДиапазонГода = Новый Диапазон(НачалоГода, КонецГода);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоГода",  НачалоГода);
	Запрос.УстановитьПараметр("КонецГода",  КонецГода);

	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	УбыткиПрошлыхЛет.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.УбыткиПрошлыхЛет КАК УбыткиПрошлыхЛет
	|ГДЕ
	|	УбыткиПрошлыхЛет.ГодУбытка МЕЖДУ &НачалоГода И &КонецГода
	|
	|УПОРЯДОЧИТЬ ПО
	|	УбыткиПрошлыхЛет.Ссылка";
	
	НачатьТранзакцию();
	
	Попытка
		
		БлокировкаДанных = Новый БлокировкаДанных;
		ЭлементБлокировкиДанных = БлокировкаДанных.Добавить("Справочник.УбыткиПрошлыхЛет");
		ЭлементБлокировкиДанных.УстановитьЗначение("ГодУбытка", ДиапазонГода);
		ЭлементБлокировкиДанных.Режим = РежимБлокировкиДанных.Исключительный;
		БлокировкаДанных.Заблокировать();
  

		Выборка = Запрос.Выполнить().Выбрать();
	
		Если Выборка.Следующий() Тогда		
			
			УбытокПериода = Выборка.Ссылка;
		Иначе
			
			УбытокПериода = Справочники.УбыткиПрошлыхЛет.СоздатьЭлемент();	
			УбытокПериода.Заполнить(Период);
				 
			УбытокПериода.Записать();			
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
	Исключение
		
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Убытки прошлых лет'", ОбщегоНазначения.КодОсновногоЯзыка()), 
			УровеньЖурналаРегистрации.Ошибка, , , 
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
  		ВызватьИсключение;
	КонецПопытки;
	
	Возврат УбытокПериода.Ссылка;
КонецФункции

#КонецОбласти

#КонецЕсли