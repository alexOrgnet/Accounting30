
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, , "ЗакрыватьПриВыборе,ЗакрыватьПриЗакрытииВладельца,ТолькоПросмотр");
	ЭтоОС = ?(ГрупповойОбъектОС, Ложь, ЭтоОС);
	ПоказыватьТолькоОстатки = Истина;
	ЕстьПравоПодбора = Истина;
	ТоварКомитентаНаПродажу = БухгалтерскийУчетПовтИсп.СчетУчетаКомиссионногоТовара(СчетУчета) 
		И Не ЭтоПоступление И Не ЭтоВводОстатковПоЗабалансу;

	ИспользованиеПроверкиВозможно = ПроверкаРНПТ.ИспользованиеПроверкиВозможно() И ВДокументеДоступнаПроверкаРНПТ;
	
	Если ЭтоОС Тогда
		Если ЭтоПоступление Тогда
			НужнаКолонкаНоменклатураВПодборе = Истина;
		ИначеЕсли Параметры.ВыборПоОстаткам И ЭтоСоставноеОС Тогда
			НужнаКолонкаНоменклатураВПодборе = Истина;
		ИначеЕсли ЭтоПродажа Тогда
			НужнаКолонкаНоменклатураВПодборе = Истина;
		КонецЕсли;
		КодТНВЭД = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОсновноеСредство, "КодТНВЭД");
	Иначе
		КодТНВЭД = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "КодТНВЭД");
	КонецЕсли;

	Если ЗначениеЗаполнено(ТекущийДокумент) Тогда
		ЕстьПравоПодбора = ПравоДоступа("Изменение", ТекущийДокумент.Метаданные());
	КонецЕсли;

	ПолучитьОстаткиРНПТ();
	
	ТаблицаРНПТ = ПолучитьИзВременногоХранилища(АдресТаблицыРНПТВХранилище);
	Подбор.Очистить();
	Если ТипЗнч(ТаблицаРНПТ) = Тип("Массив") Тогда
		Для Каждого Строка Из ТаблицаРНПТ Цикл
			НоваяСтрока = Подбор.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		КонецЦикла;
	Иначе
		ТаблицаРНПТ.Колонки.Добавить("СостояниеПроверкиРНПТ");
		ТаблицаРНПТ.Колонки.Добавить("ОписаниеСостояния");
		Если Параметры.СтатусПроверкиРНПТ <> Перечисления.СтатусыПроверкиРНПТ.Проверено Тогда
			ТаблицаРНПТ.ЗаполнитьЗначения(2, "СостояниеПроверкиРНПТ");
			ТаблицаРНПТ.ЗаполнитьЗначения(НСтр("ru = 'Отправлено на проверку'"), "ОписаниеСостояния");
		Иначе
			ТаблицаРНПТ.ЗаполнитьЗначения(0, "СостояниеПроверкиРНПТ");
			ТаблицаРНПТ.ЗаполнитьЗначения(НСтр("ru = 'Соответствует данным ФНС'"), "ОписаниеСостояния");
		КонецЕсли;
		Подбор.Загрузить(ТаблицаРНПТ);
	КонецЕсли;
	
	Если ЭтоСоставноеОС Или ПрослеживаемыйКомплект Тогда 
		Для Каждого Строка Из Подбор Цикл
			Строка.ПрослеживаемыйТовар = Истина;
		КонецЦикла
	КонецЕсли;
	
	Если ЭтоПоступление И ГрупповойОбъектОС Тогда
		КоличествоСтрокСРНПТ = ТаблицаРНПТ.Количество();
		Если КоличествоСтрокСРНПТ > 0 Тогда
			СтранаПроисхождения = Подбор[0].СтранаПроисхождения;
		КонецЕсли;
	ИначеЕсли ЭтоПоступление И ЭтоОС Тогда
		КоличествоСтрокСРНПТ = ТаблицаРНПТ.Количество();
		Если КоличествоСтрокСРНПТ > 1 Тогда 
			НесколькоРНПТ = Истина;
		ИначеЕсли КоличествоСтрокСРНПТ = 1
			И ЗначениеЗаполнено(Подбор[0].Номенклатура) Тогда
			НесколькоРНПТ = Истина;
		КонецЕсли;
		Если Не НесколькоРНПТ И КоличествоСтрокСРНПТ > 0 Тогда 
			СтранаПроисхождения = Подбор[0].СтранаПроисхождения;
			РНПТ                = Подбор[0].РНПТ;
			ТребуетсяОтображениеКолонкиСумма = Ложь;
			ТребуетсяСуммаНДС = Ложь;
		КонецЕсли;
		Если КоличествоСтрокСРНПТ = 0 Тогда
			ТребуетсяОтображениеКолонкиСумма = Ложь;
			ТребуетсяСуммаНДС = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	КоличествоПодобрано = Подбор.Итог("Количество");
	ЭтотОбъект.ТолькоПросмотр                          = НЕ ЕстьПравоПодбора Или ОткрыватьДляПросмотра;
	ЭтотОбъект.Элементы.ПеренестиВДокумент.Доступность = ЕстьПравоПодбора;
	ЭтотОбъект.Элементы.ОстаткиВыбрать.Доступность     = ЕстьПравоПодбора;
	ЭтотОбъект.Элементы.ОстаткиТаблица.Доступность     = ЕстьПравоПодбора;
	ЭтотОбъект.Элементы.Подбор.Доступность             = ЕстьПравоПодбора;
	ЭтотОбъект.Элементы.ГруппаОС.Доступность           = ЕстьПравоПодбора;
	ЭтотОбъект.Элементы.ГруппаРеквизитыПростогоОС.Доступность = Не ОткрыватьДляПросмотра;
	
	РазныеЕдиницыИзмерения = Ложь;
	СвойстваНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Номенклатура, "ЕдиницаИзмерения, КодТНВЭД.ЕдиницаИзмерения");
	РазныеЕдиницыИзмерения = СвойстваНоменклатуры.ЕдиницаИзмерения <> СвойстваНоменклатуры.КодТНВЭДЕдиницаИзмерения
							И Не ЭтоОС И Не ПрослеживаемыйКомплект И Не ЭтоРазукомплектация;
	
	Если ПрослеживаемыйКомплект И Не Параметры.ВводОстатковПо0803 Тогда
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Данные по РНПТ: %1'"),
		Номенклатура);
	ИначеЕсли ЭтоОС Или ГрупповойОбъектОС Тогда
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Данные по РНПТ: %1'"),
		ОсновноеСредство);
	ИначеЕсли Параметры.ВводОстатковПо0803 Тогда 
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Данные по РНПТ: %1'"),
		ОбъектСтроительства);
	Иначе
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'РНПТ: %1'"),
		Номенклатура);
	КонецЕсли;
	
	Если ОткрыватьДляПросмотра Тогда
		Элементы.ПеренестиВДокумент.Заголовок = НСтр("ru = 'ОК'");
	КонецЕсли;
	
	УстановитьВидимостьЭлементовФормы();
	УстановитьЗаголовкиКолонок(СвойстваНоменклатуры);
	УстановитьТекстПодсказки(ЭтотОбъект);
	УстановитьУсловноеОформление();
	ОбновитьИтоги(ЭтотОбъект);
	
	ПроверкаРНПТ.ПриСозданииНаСервереПодборРНПТ(ЭтотОбъект, Параметры);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементовФормы()
	
	Элементы.ГруппаОстатки.Видимость             = Не (ЭтоПоступление Или ОткрыватьДляПросмотра);
	Элементы.ПодборДобавить.Видимость            = ЭтоПоступление;
	Элементы.НадписьПодобраноРНПТ.Видимость      = Не ПрослеживаемыйКомплект И Не ЭтоОС;
	Элементы.ГруппаИтоги.Видимость               = (ТребуетсяОтображениеКолонкиСумма И Не ЭтоОС)
													Или (ЭтоОС И НесколькоРНПТ И Не СписаниеОС);
	Элементы.ГруппаОС.Видимость                  = (ЭтоОС Или ГрупповойОбъектОС) И (ЭтоПоступление Или ЭтоПродажа);
	Элементы.ГруппаРеквизитыПростогоОС.Видимость = (ЭтоОС Или ГрупповойОбъектОС) И (ЭтоПоступление Или ЭтоПродажа)
													И Не НесколькоРНПТ;
	Элементы.ИтогиВсегоНДС.Видимость             = ТребуетсяСуммаНДС;
	Элементы.Подбор.Видимость                    = Не (ЭтоОС И ЭтоПоступление) Или НесколькоРНПТ;

	Если ГрупповойОбъектОС И НЕ ЭтоПродажа Тогда
		Элементы.СтранаПроисхождения.Видимость       = Истина;
		Элементы.РНПТ.Видимость                      = Ложь;
		Элементы.НесколькоРНПТ.Видимость             = Ложь;
	ИначеЕсли ГрупповойОбъектОС И ЭтоПродажа Тогда
		Элементы.ГруппаОС.Видимость = Ложь;
		Элементы.ГруппаРеквизитыПростогоОС.Видимость = Ложь;
	ИначеЕсли ЭтоОС И Не СписаниеОС Тогда
		Элементы.ГруппаОС.Видимость                  = ЭтоОС И (ЭтоПоступление Или ЭтоПродажа);
		Элементы.ГруппаРеквизитыПростогоОС.Видимость = ЭтоОС И (ЭтоПоступление Или ЭтоПродажа) И Не НесколькоРНПТ;
	ИначеЕсли СписаниеОС Тогда
		Элементы.НесколькоРНПТ.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.ТекстПояснения.Видимость          = ИспользованиеПроверкиВозможно;
	Элементы.ПроверкаРНПТСервисомФНС.Видимость = ИспользованиеПроверкиВозможно;
	Элементы.ПодборОтступ.Видимость            = НЕ ИспользованиеПроверкиВозможно;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ЕстьОшибки = Ложь;
	Если Подбор.Количество() <> 0
		И Модифицированность Тогда
		
		Если Не ПрослеживаемыйКомплект И Не ЭтоСоставноеОС И Не ЭтоОС Тогда
			Если КоличествоПодобрано > Количество Тогда
				ЕстьОшибки = Истина;
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
				"Список", 
				"Корректность",,,
				НСтр("ru = 'Подбор'"), 
				НСтр("ru = 'Подобранное количество РНПТ превышает количество, указанное в документе'"));
			ИначеЕсли КоличествоПодобрано < Количество Тогда
				ЕстьОшибки = Истина;
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
				"Список", 
				"Корректность",,,
				НСтр("ru = 'Подбор'"), 
				НСтр("ru = 'Подобранное количество РНПТ меньше количества, указанного в документе'"));
			КонецЕсли;
		КонецЕсли;
		
		Если ТребуетсяЗаполнениеСуммы Тогда
			СуммаПоТЧ = Подбор.Итог("Сумма");
			Если СуммаПоТЧ > Сумма Тогда
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
				"Список", 
				"Корректность","Сумма",,
				НСтр("ru = 'Данные по РНПТ'"), 
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '""Сумма без НДС"" по таблице ""Данные по РНПТ"" больше суммы без НДС по %1'"),
				?(ЭтоОС, ОсновноеСредство, Номенклатура)));
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,,Отказ);
			КонецЕсли;
		КонецЕсли;
		Если ЭтоПродажа И Подбор.Итог("СуммаНДС") > СуммаНДС И Не ГрупповойОбъектОС Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
			"Список", 
			"Корректность","СуммаНДС",,
			НСтр("ru = 'Данные по РНПТ'"),
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '""Сумма НДС"" по таблице ""Данных по РНПТ"" больше суммы НДС по %1'"),
			?(ЭтоОС, ОсновноеСредство, Номенклатура)));
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,,Отказ);
		КонецЕсли;

		Если ЕстьОшибки Тогда
			Если ПеренестиВДокумент Тогда
				ПеренестиВДокумент = Ложь;
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,"Подбор",,Отказ);
			КонецЕсли;
		Иначе
			Если Не ПеренестиВДокумент Тогда
				Отказ = Истина;
				ТекстВопроса = НСтр("ru = 'Подобранные РНПТ не перенесены в документ.
					|
					|Перенести?'");
				Оповещение = Новый ОписаниеОповещения("ВопросПеренестиВДокументЗавершение", ЭтотОбъект);
				ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Проверим пустые строки.
	Если ПеренестиВДокумент Тогда
		
		// Для основных средств Страна происхождения и РНПТ могут заполняться как отдельные реквизиты, для простых ОС
		// (например, для холодильника)
		// И могут заполняться в ТЧ, для составных ОС (например, для АРМ)
		// в случае, если это составное ОС тогда в ТЧ обязательно заполняется еше и сумма.
		Если ЭтоОС Тогда
			СтранаПроисхожденияПоОСВТЧ = НесколькоРНПТ;
			СуммаДляОСВТЧ = НесколькоРНПТ;
		ИначеЕсли ГрупповойОбъектОС И Не ЭтоПродажа И Не СписаниеОС Тогда
			СтранаПроисхожденияПоОСВТЧ = Ложь;
			СуммаДляОСВТЧ = Ложь;
		Иначе 
			СтранаПроисхожденияПоОСВТЧ = Истина;
			СуммаДляОСВТЧ = Ложь;
		КонецЕсли;
		
		Если Не СтранаПроисхожденияПоОСВТЧ И ЭтоПоступление И Не ЗначениеЗаполнено(СтранаПроисхождения) Тогда
			ЕстьОшибки = Истина;
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
			"Поле", 
			"Корректность","Страна происхождения",,
			НСтр("ru = 'Страна происхождения'"), 
			НСтр("ru = 'Не указана страна происхождения'"));
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,"СтранаПроисхождения",,Отказ);
		КонецЕсли;
		
		Если Не СтранаПроисхожденияПоОСВТЧ И ЭтоПоступление И Не ГрупповойОбъектОС И Не ЗначениеЗаполнено(РНПТ) Тогда
			ЕстьОшибки = Истина;
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
			"Поле", 
			"Корректность", "РНПТ",,
			НСтр("ru = 'РНПТ'"), 
			НСтр("ru = 'Не указан номер РНПТ'"));
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,"РНПТ",,Отказ);
		КонецЕсли;
				
		НомерСтроки = 1;
		Для Каждого СтрокаТаблицы Из Подбор Цикл
			Префикс = "Подбор[%1].";
			Префикс = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			Префикс, Формат(НомерСтроки - 1, "ЧН=0; ЧГ="));
			НужнаНоменклатураДляОС = ЭтоСоставноеОС Или НесколькоРНПТ;
			Если (ПрослеживаемыйКомплект Или НужнаНоменклатураДляОС) И Не ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
				ЕстьОшибки = Истина;
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Комплектующие'"),
				НомерСтроки, НСтр("ru = 'Подбор'"));
				Поле = Префикс + "Номенклатура";
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, Поле,, Отказ);
			КонецЕсли;
			
			Если ТребуетсяКолонкаСтранаПроисхождения И Не ЗначениеЗаполнено(СтрокаТаблицы.СтранаПроисхождения) Тогда
				ЕстьОшибки = Истина;
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Страна происхождения'"),
				НомерСтроки, НСтр("ru = 'Подбор'"));
				Поле = Префикс + "СтранаПроисхождения";
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, Поле,, Отказ);
			КонецЕсли;
			
			Если ((ТребуетсяЗаполнениеСуммы И Не ЭтоОС) Или СуммаДляОСВТЧ) И Не ЗначениеЗаполнено(СтрокаТаблицы.Сумма) Тогда
				ЕстьОшибки = Истина;
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Сумма без НДС'"),
				НомерСтроки, НСтр("ru = 'Подбор'"));
				Поле = Префикс + "Сумма";
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, Поле,, Отказ);
			КонецЕсли;
			
			Если ТребуетсяСуммаНДС И Не ЗначениеЗаполнено(СтрокаТаблицы.СуммаНДС) Тогда
				ЕстьОшибки = Истина;
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Сумма НДС'"),
				НомерСтроки, НСтр("ru = 'Подбор'"));
				Поле = Префикс + "СуммаНДС";
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, Поле,, Отказ);
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.РНПТ) Тогда
				ЕстьОшибки = Истина;
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'РНПТ'"),
				НомерСтроки, НСтр("ru = 'Подбор'"));
				Поле = Префикс + "РНПТ";
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, Поле,, Отказ);
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Количество) Тогда
				ЕстьОшибки = Истина;
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Количество'"),
				НомерСтроки, НСтр("ru = 'Подбор'"));
				Поле = Префикс + "Количество";
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, Поле,, Отказ);
			КонецЕсли;
			
			Если СтрокаТаблицы.Количество < 0 Тогда
				 ЕстьОшибки = Истина;
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", "Корректность", НСтр("ru = 'Количество'"),
				НомерСтроки, НСтр("ru = 'Подбор'"), НСтр("ru = 'Количество РНПТ не может быть отрицательным'"));
				Поле = Префикс + "Количество";
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, Поле,, Отказ);
			КонецЕсли;
			
			Если РазныеЕдиницыИзмерения
				И НЕ ЗначениеЗаполнено(СтрокаТаблицы.КоличествоПрослеживаемости) Тогда
				ЕстьОшибки = Истина;
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Количество прослеживаемости'"),
				НомерСтроки, НСтр("ru = 'Подбор'"));
				Поле = Префикс + "КоличествоПрослеживаемости";
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,, Поле,, Отказ);
			КонецЕсли;
			
			НомерСтроки = НомерСтроки + 1;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураВозврата = ПриЗакрытииНаСервере();
	
	Если ПеренестиВДокумент Тогда
		ОповеститьОВыборе(СтруктураВозврата);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПриЗакрытииНаСервере()
	
	СтруктураВозврата = Новый Структура();
	
	Если ПеренестиВДокумент Тогда
		АдресТаблицыРНПТВХранилище = ПоместитьРНПТВХранилище();
		СтруктураВозврата.Вставить("АдресТаблицыРНПТВХранилище", АдресТаблицыРНПТВХранилище);
		СтруктураВозврата.Вставить("ЭтоИсходныеРНПТ", ЭтоИсходныеРНПТ);
	КонецЕсли;
	
	Возврат СтруктураВозврата;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если СтатусПроверкиРНПТ <> ПредопределенноеЗначение("Перечисление.СтатусыПроверкиРНПТ.Проверено") Тогда
		// Если документ уже был успешно проверен, то проверку всех РНПТ не запускаем.
		ПроверкаРНПТКлиент.ПриОткрытииПодбораРНПТ(ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПоказыватьТолькоОстаткиПриИзменении(Элемент)
	
	ПолучитьОстаткиРНПТ();
	
КонецПроцедуры

&НаКлиенте
Процедура НесколькоРНПТПриИзменении(Элемент)
	КоличествоРНПТ = Подбор.Количество();
	Если НЕ НесколькоРНПТ И КоличествоРНПТ > 1 Тогда
		ПоказатьПредупреждение( , НСтр("ru = 'Несколько строк с РНПТ может быть только у составного основного средства'"),);
		НесколькоРНПТ = Истина;
	ИначеЕсли НесколькоРНПТ И КоличествоРНПТ <=1 Тогда
		ЗаполнитьСведенияПоРНПТДляСоставногоОС(КоличествоРНПТ);
	Иначе
		Если КоличествоРНПТ > 0 Тогда
			ЗаполнитьСведенияПоРНПТДляПростогоОС();
			ТребуетсяСуммаНДС = Ложь;
		КонецЕсли;
	КонецЕсли;
	ТребуетсяОтображениеКолонкиСумма = НесколькоРНПТ;
	УстановитьВидимостьЭлементовФормы();

КонецПроцедуры

&НаКлиенте
Процедура РНПТПриИзменении(Элемент)
	
	ЗаполнитьСведенияПоРНПТДляСоставногоОС(Подбор.Количество());
	ПроверкаРНПТКлиент.ЗапуститьПроверкуРНПТВФормеПодбора(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстПоясненияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекущаяНоменклатура = Номенклатура;
	Если ПрослеживаемыйКомплект ИЛИ НесколькоРНПТ Тогда
		ТекущиеДанные = Элементы.Подбор.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			ТекущаяНоменклатура = ТекущиеДанные.Номенклатура;
		КонецЕсли;
	ИначеЕсли ЭтоОС Тогда
		ПараметрыФормы = Новый Структура("Ключ", ОсновноеСредство);
		ОткрытьФорму("Справочник.ОсновныеСредства.ФормаОбъекта", ПараметрыФормы);
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Ключ", ТекущаяНоменклатура);
	ОткрытьФорму("Справочник.Номенклатура.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОстатки

&НаКлиенте
Процедура ОстаткиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьПодборРНПТ();
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	Если Элемент.ВыделенныеСтроки.Количество() = 1 Тогда
		ОстаткиВыбор(Элемент, Значение, , СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПодбор

&НаКлиенте
Процедура ПодборПриИзменении(Элемент)
	
	КоличествоПодобрано = Подбор.Итог("Количество");
	УстановитьТекстПодсказки(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборНоменклатураПриИзменении(Элемент)
	
	Элементы.Подбор.ЗакончитьРедактированиеСтроки(Ложь);
	ТекущиеДанные = Элементы.Подбор.ТекущиеДанные;
	ТекущиеДанные.ПрослеживаемыйТовар = ПолучитьПризнакПрослеживаемости(ТекущиеДанные.Номенклатура, Период);
	
	Если Не ТекущиеДанные.ПрослеживаемыйТовар Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
				Нстр("ru='В качестве номенклатуры может быть указана только прослеживаемая номенклатура'"));
		ТекущиеДанные.Номенклатура = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
		ТекущиеДанные.СтранаПроисхождения = ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
		ТекущиеДанные.РНПТ = ПредопределенноеЗначение("Справочник.НомераГТД.ПустаяСсылка");
	КонецЕсли;
	
	ПроверкаРНПТКлиент.ЗапуститьПроверкуРНПТВФормеПодбора(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Подбор.ТекущиеДанные;
	ТекущиеДанные.КоличествоПрослеживаемости = ТекущиеДанные.Количество;
	Если ЗначениеЗаполнено(ТекущиеДанные.РНПТ)
		И ЗначениеЗаполнено(ТекущиеДанные.Количество) Тогда
		ПроверкаРНПТКлиент.ЗапуститьПроверкуРНПТВФормеПодбора(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборСуммаБезНДСПриИзменении(Элемент)
	
	Если ЭтоПродажа Тогда
		Строка = Элементы.Подбор.ТекущиеДанные;
		Строка.СуммаНДС = УчетНДСКлиентСервер.РассчитатьСуммуНДС(Строка.Сумма, Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтавкаНДС,Ложь));
	КонецЕсли;

	ОбновитьИтоги(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборПослеУдаления(Элемент)
	
	ОбновитьИтоги(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборКоличествоПрослеживаемостиПриИзменении(Элемент)
	
	ПроверкаРНПТКлиент.ЗапуститьПроверкуРНПТВФормеПодбора(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборПриАктивизацииСтроки(Элемент)
	
	Если ИспользованиеПроверкиВозможно Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ОбновитьПояснение", 0.2, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если ИспользованиеПроверкиВозможно И НоваяСтрока И НЕ Копирование Тогда
		Элемент.ТекущиеДанные.СостояниеПроверкиРНПТ = 4;
		Элемент.ТекущиеДанные.ОписаниеСостояния     = "";
	КонецЕсли;
	
	ПроверкаРНПТКлиент.ПриНачалеРедактированияТабличнойЧасти(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ПроверкаРНПТКлиент.ПриОкончанииРедактированияТабличнойЧастиПодбора(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборРНПТПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Подбор.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.РНПТ)
		И ЗначениеЗаполнено(ТекущиеДанные.Количество) Тогда
		ПроверкаРНПТКлиент.ЗапуститьПроверкуРНПТВФормеПодбора(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	ПеренестиВДокумент = НЕ ЭтаФорма.ТолькоПросмотр;
	Закрыть(КодВозвратаДиалога.OK);

КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Модифицированность = Ложь;
	ПеренестиВДокумент = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыбрать(Команда)
	
	ОбработатьПодборРНПТ();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработатьПодборРНПТ()
	
	СтрокаПодбора = Элементы.ОстаткиТаблица.ТекущиеДанные;
	
	Если СтрокаПодбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоПодобрано = Подбор.Итог("Количество");
	
	Если СтрокаПодбора.Количество + КоличествоПодобрано > Количество
		И НЕ ПрослеживаемыйКомплект И Не ЭтоСоставноеОС Тогда
	
		КоличествоСкорректированное = Количество - КоличествоПодобрано;
		
		Если КоличествоСкорректированное = 0 Тогда
			ТекстСообщения = НСтр("ru='Все РНПТ подобраны.'");
			ПоказатьПредупреждение(, ТекстСообщения);
			Возврат;
		КонецЕсли;
		
		СтруктураОтбора = Новый Структура("РНПТ", СтрокаПодбора.РНПТ);
		Если ЭтоОС Или ГрупповойОбъектОС Тогда
			СтруктураОтбора.Вставить("СтранаПроисхождения", СтрокаПодбора.СтранаПроисхождения);
		КонецЕсли;
		СтрокиСРНПТ = Подбор.НайтиСтроки(СтруктураОтбора);
		Если СтрокиСРНПТ.Количество() = 0 Тогда
			НоваяСтрока = Подбор.Добавить();
			НоваяСтрока.РНПТ = СтрокаПодбора.РНПТ;
			НоваяСтрока.Комитент = СтрокаПодбора.Комитент;
			НоваяСтрока.Количество = КоличествоСкорректированное;
			НоваяСтрока.КоличествоПрослеживаемости = КоличествоПрослеживаемости(
			СтрокаПодбора.Количество, СтрокаПодбора.КоличествоПрослеживаемости, КоличествоСкорректированное);
			Если ЭтоОС Или ГрупповойОбъектОС Тогда
				НоваяСтрока.СтранаПроисхождения = СтрокаПодбора.СтранаПроисхождения;
			КонецЕсли;
			Если ИспользованиеПроверкиВозможно Тогда
				НоваяСтрока.СостояниеПроверкиРНПТ = 4;
				НоваяСтрока.ОписаниеСостояния     = "";
			КонецЕсли;
		Иначе
			СтрокиСРНПТ[0].Количество = СтрокиСРНПТ[0].Количество + КоличествоСкорректированное;
			СтрокиСРНПТ[0].КоличествоПрослеживаемости = СтрокиСРНПТ[0].КоличествоПрослеживаемости + КоличествоПрослеживаемости(
			СтрокаПодбора.Количество, СтрокаПодбора.КоличествоПрослеживаемости, КоличествоСкорректированное);
			Если РазныеЕдиницыИзмерения Тогда
				СтрокиСРНПТ[0].КоличествоПрослеживаемости = СтрокиСРНПТ[0].КоличествоПрослеживаемости + КоличествоПрослеживаемости(
					СтрокаПодбора.Количество, СтрокаПодбора.КоличествоПрослеживаемости, КоличествоСкорректированное);
			Иначе
				СтрокиСРНПТ[0].КоличествоПрослеживаемости = СтрокиСРНПТ[0].Количество;
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		Если ПрослеживаемыйКомплект Или ЭтоСоставноеОС Тогда
			СтрокиСРНПТ = Подбор.НайтиСтроки(Новый Структура("Номенклатура, СтранаПроисхождения, РНПТ", 
			СтрокаПодбора.Номенклатура, СтрокаПодбора.СтранаПроисхождения, СтрокаПодбора.РНПТ));
		Иначе
			СтрокиСРНПТ = Подбор.НайтиСтроки(Новый Структура("РНПТ", СтрокаПодбора.РНПТ));
		КонецЕсли;
		
		Если СтрокиСРНПТ.Количество() = 0 Тогда
			НоваяСтрока = Подбор.Добавить();
			Если ПрослеживаемыйКомплект Или ЭтоСоставноеОС Тогда
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПодбора);
			Иначе
				НоваяСтрока.РНПТ                       = СтрокаПодбора.РНПТ;
				НоваяСтрока.Комитент                   = СтрокаПодбора.Комитент;
				НоваяСтрока.Количество                 = СтрокаПодбора.Количество;
				НоваяСтрока.КоличествоПрослеживаемости = СтрокаПодбора.КоличествоПрослеживаемости;
				Если ГрупповойОбъектОС Тогда
					НоваяСтрока.СтранаПроисхождения = СтрокаПодбора.СтранаПроисхождения;
				КонецЕсли;
			КонецЕсли;
			Если ИспользованиеПроверкиВозможно Тогда
				НоваяСтрока.СостояниеПроверкиРНПТ = 4;
				НоваяСтрока.ОписаниеСостояния     = "";
			КонецЕсли;
			
		Иначе
			СтрокиСРНПТ[0].Количество = СтрокиСРНПТ[0].Количество + СтрокаПодбора.Количество;
			СтрокиСРНПТ[0].КоличествоПрослеживаемости = СтрокиСРНПТ[0].КоличествоПрослеживаемости + СтрокаПодбора.КоличествоПрослеживаемости;
		КонецЕсли;
		
	КонецЕсли;
	
	КоличествоПодобрано = Подбор.Итог("Количество");
	УстановитьТекстПодсказки(ЭтотОбъект);
	ОбновитьИтоги(ЭтотОбъект);
	Модифицированность = Истина;
	
	ПроверкаРНПТКлиент.ЗапуститьПроверкуРНПТВФормеПодбора(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Функция КоличествоПрослеживаемости(ОстатокВУчете, ОстатокВПрослеживаемости, ПодобранноеКоличество)
	
	МассивКоэффициентов = Новый Массив;
	МассивКоэффициентов.Добавить(ОстатокВУчете - ПодобранноеКоличество);
	МассивКоэффициентов.Добавить(ПодобранноеКоличество);
	МассивСумм = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
		ОстатокВПрослеживаемости, МассивКоэффициентов, 11);
	
	Если Не ЗначениеЗаполнено(МассивСумм) Тогда
		Возврат 0;
	Иначе
		Возврат МассивСумм[1];
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПоместитьРНПТВХранилище()
	
	Для Каждого СтрокаРНПТ Из Подбор Цикл
		Если НЕ РазныеЕдиницыИзмерения Тогда
			СтрокаРНПТ.КоличествоПрослеживаемости = СтрокаРНПТ.Количество;
		КонецЕсли;
		СтрокаРНПТ.ЭтоСтрокаСИсходнымиРНПТ = ЭтоИсходныеРНПТ;
	КонецЦикла;
	
	Если Не НесколькоРНПТ И ЭтоОС И ЭтоПоступление Тогда
		КоличествоРНПТ = Подбор.Количество();
		Если КоличествоРНПТ > 0 Тогда
			Подбор[0].СтранаПроисхождения = СтранаПроисхождения;
			Подбор[0].РНПТ = РНПТ ;
			Подбор[0].Количество = 1;
			Подбор[0].КоличествоПрослеживаемости = 1;
		Иначе
			НоваяСтрока = Подбор.Добавить();
			НоваяСтрока.СтранаПроисхождения = СтранаПроисхождения;
			НоваяСтрока.РНПТ = РНПТ ;
			НоваяСтрока.Количество = 1;
			НоваяСтрока.КоличествоПрослеживаемости = 1;
		КонецЕсли;
	ИначеЕсли ГрупповойОбъектОС И Не ЭтоПродажа и Не СписаниеОС Тогда
		Для Каждого Строка Из Подбор Цикл
			Строка.СтранаПроисхождения = СтранаПроисхождения;
		КонецЦикла;
	КонецЕсли;

	ТаблицаРНПТ = Подбор.Выгрузить();
	АдресТаблицыРНПТВХранилище = ПоместитьВоВременноеХранилище(ТаблицаРНПТ, УникальныйИдентификатор);
	
	Возврат АдресТаблицыРНПТВХранилище;
	
КонецФункции

&НаСервере
Процедура УстановитьЗаголовкиКолонок(СвойстваНоменклатуры)
	
	ТекстЗаголовкаКоличество = НСтр("ru = 'Количество'");
	ТекстЗаголовкаКоличествоПрослеживаемости = НСтр("ru = 'Количество прослеживаемости'");
	Если РазныеЕдиницыИзмерения Тогда
		ТекстЗаголовкаКоличество = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 (%2)'"),
			ТекстЗаголовкаКоличество,
			СвойстваНоменклатуры.ЕдиницаИзмерения);
		ТекстЗаголовкаКоличествоПрослеживаемости = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 (%2)'"),
			ТекстЗаголовкаКоличествоПрослеживаемости,
			СвойстваНоменклатуры.КодТНВЭДЕдиницаИзмерения);
	КонецЕсли;
	Элементы.ОстаткиТаблицаКоличество.Заголовок = ТекстЗаголовкаКоличество;
	Элементы.ОстаткиТаблицаКоличествоПрослеживаемости.Заголовок  = ТекстЗаголовкаКоличествоПрослеживаемости;
	Элементы.ПодборКоличество.Заголовок  = ТекстЗаголовкаКоличество;
	Элементы.ПодборКоличествоПрослеживаемости.Заголовок   = ТекстЗаголовкаКоличествоПрослеживаемости;

КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
		
	// КоличествоПрослеживаемости в остатках
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ОстаткиТаблицаКоличествоПрослеживаемости");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"РазныеЕдиницыИзмерения", ВидСравненияКомпоновкиДанных.Равно, Ложь);
		
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// Номенклатура в остатках
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ОстаткиТаблицаНоменклатура");
	ГруппаОтбора1 = КомпоновкаДанныхКлиентСервер.ДобавитьГруппуОтбора(ЭлементУО.Отбор.Элементы, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);

		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора1,
			"ПрослеживаемыйКомплект", ВидСравненияКомпоновкиДанных.Равно, Ложь);
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора1,
			"ЭтоСоставноеОС", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// Страна происхождения в остатках
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ОстаткиТаблицаСтранаПроисхождения");
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ТребуетсяКолонкаСтранаПроисхождения", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// Комитент в остатках
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ОстаткиТаблицаКомитент");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ТоварКомитентаНаПродажу", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);


	// СуммаБезНДС в подборе
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ПодборСуммаБезНДС");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ТребуетсяОтображениеКолонкиСумма", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// Номенклатура в подборе
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ПодборНоменклатура");
	ГруппаОтбора1 = КомпоновкаДанныхКлиентСервер.ДобавитьГруппуОтбора(ЭлементУО.Отбор.Элементы, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);

		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора1,
			"ПрослеживаемыйКомплект", ВидСравненияКомпоновкиДанных.Равно, Ложь);
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора1,
			"НужнаКолонкаНоменклатураВПодборе", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// СтранаПроисхождения в подборе
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ПодборСтранаПроисхождения");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ТребуетсяКолонкаСтранаПроисхождения", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// КоличествоПрослеживаемости в подборе
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ПодборКоличествоПрослеживаемости");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"РазныеЕдиницыИзмерения", ВидСравненияКомпоновкиДанных.Равно, Ложь);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// Комитент в подборе
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ПодборКомитент");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ТоварКомитентаНаПродажу", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// СуммаНДС в подборе
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ПодборСуммаНДС");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ТребуетсяСуммаНДС", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// СуммаНДС в подборе
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ПодборСуммаНДС");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ТребуетсяСуммаНДС", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
	// Проверка РНПТ
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ПодборСостояниеПроверкиРНПТ");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ПодборОписаниеСостояния");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ИспользованиеПроверкиВозможно", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПеренестиВДокументЗавершение(ОтветНаВопрос, ДополнительныеПараметры) Экспорт
	
	Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
		ПеренестиВДокумент = Истина;
		Закрыть();
	ИначеЕсли ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		ПеренестиВДокумент = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьТекстПодсказки(Форма)
	
	Форма.НадписьПодобраноРНПТ = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Подобрано %1 РНПТ из %2:'"), Форма.КоличествоПодобрано, Форма.Количество);
	
КонецПроцедуры

&НаСервере
Функция ТекстЗапросаВозвратТоваровРозница()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СправочникНомераГТД.Ссылка КАК РНПТ,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.СтранаПроисхождения, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) КАК СтранаПроисхождения,
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыйКомплект
	|			ТОГДА ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Комплектующие, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|		ИНАЧЕ ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|	КОНЕЦ КАК Номенклатура,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Комитент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Комитент,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемости, 0) КАК КоличествоПрослеживаемости,
	|	ПрослеживаемыеТоварыОстатки.Комплектующие КАК Комплектующие,
	|	ИСТИНА КАК ПрослеживаемыйТовар
	|ИЗ
	|	Справочник.НомераГТД КАК СправочникНомераГТД
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			РеализацияМинусВозврат.РНПТ КАК РНПТ,
	|			РеализацияМинусВозврат.Организация КАК Организация,
	|			РеализацияМинусВозврат.СтранаПроисхождения КАК СтранаПроисхождения,
	|			РеализацияМинусВозврат.Номенклатура КАК Номенклатура,
	|			РеализацияМинусВозврат.Комитент КАК Комитент,
	|			СУММА(РеализацияМинусВозврат.Количество) КАК Количество,
	|			СУММА(РеализацияМинусВозврат.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|			РеализацияМинусВозврат.Комплектующие КАК Комплектующие
	|		ИЗ
	|			(ВЫБРАТЬ
	|				РеализованныеТовары.Организация КАК Организация,
	|				РеализованныеТовары.Номенклатура КАК Номенклатура,
	|				РеализованныеТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|				РеализованныеТовары.Количество КАК Количество,
	|				РеализованныеТовары.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|				РеализованныеТовары.РНПТ КАК РНПТ,
	|				РеализованныеТовары.Комитент КАК Комитент,
	|				РеализованныеТовары.Комплектующие КАК Комплектующие
	|			ИЗ
	|				РегистрНакопления.ПрослеживаемыеТовары КАК РеализованныеТовары
	|			ГДЕ
	|				РеализованныеТовары.Организация = &Организация
	|				И РеализованныеТовары.Номенклатура = &Номенклатура
	|				И ВЫБОР
	|						КОГДА &ПрослеживаемыйКомплект
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ РеализованныеТовары.СтранаПроисхождения = &СтранаПроисхождения
	|					КОНЕЦ
	|				И РеализованныеТовары.Комиссионер = &Комиссионер
	|				И РеализованныеТовары.ВидЗапасов = &ВидЗапасов
	|				И &ДатаРеализации = НАЧАЛОПЕРИОДА(РеализованныеТовары.Период, ДЕНЬ)
	|				И РеализованныеТовары.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|				И РеализованныеТовары.Регистратор <> &ТекущийДокумент
	|				И РеализованныеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				ВозвращенныеТовары.Организация,
	|				ВозвращенныеТовары.Номенклатура,
	|				ВозвращенныеТовары.СтранаПроисхождения,
	|				-ВозвращенныеТовары.Количество,
	|				-ВозвращенныеТовары.КоличествоПрослеживаемости,
	|				ВозвращенныеТовары.РНПТ,
	|				ВозвращенныеТовары.Комитент,
	|				ВозвращенныеТовары.Комплектующие
	|			ИЗ
	|				РегистрНакопления.ПрослеживаемыеТовары КАК ВозвращенныеТовары
	|			ГДЕ
	|				ВозвращенныеТовары.Организация = &Организация
	|				И ВозвращенныеТовары.Номенклатура = &Номенклатура
	|				И ВЫБОР
	|						КОГДА &ПрослеживаемыйКомплект
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ВозвращенныеТовары.СтранаПроисхождения = &СтранаПроисхождения
	|					КОНЕЦ
	|				И ВозвращенныеТовары.Комиссионер = &Комиссионер
	|				И ВозвращенныеТовары.ВидЗапасов = &ВидЗапасов
	|				И ВозвращенныеТовары.Период <= &ДатаТекущегоДокумента
	|				И ВозвращенныеТовары.Регистратор <> &ТекущийДокумент
	|				И ВозвращенныеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И ВозвращенныеТовары.ДатаРеализации = &ДатаРеализации) КАК РеализацияМинусВозврат
	|		
	|		СГРУППИРОВАТЬ ПО
	|			РеализацияМинусВозврат.РНПТ,
	|			РеализацияМинусВозврат.СтранаПроисхождения,
	|			РеализацияМинусВозврат.Номенклатура,
	|			РеализацияМинусВозврат.Организация,
	|			РеализацияМинусВозврат.Комитент,
	|			РеализацияМинусВозврат.Комплектующие) КАК ПрослеживаемыеТоварыОстатки
	|		ПО СправочникНомераГТД.Ссылка = ПрослеживаемыеТоварыОстатки.РНПТ
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ПоказыватьТолькоОстатки
	|				ТОГДА ПрослеживаемыеТоварыОстатки.Количество > 0
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Комитент,
	|	Номенклатура";
	
	Если ТипЗнч(ТекущийДокумент) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
			"И ВозвращенныеТовары.Регистратор <> &ТекущийДокумент", 
			"И ВозвращенныеТовары.Регистратор <> &ТекущийДокумент И ВозвращенныеТовары.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя");
	ИначеЕсли ТипЗнч(ТекущийДокумент) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
			"И ВозвращенныеТовары.Регистратор <> &ТекущийДокумент", 
			"И ВозвращенныеТовары.Регистратор <> &ТекущийДокумент И ВозвращенныеТовары.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервере
Функция ТекстЗапросаВозвратТоваровПоставщику(ПоставщикРезидентТаможенногоСоюза)
	
	Если ПоставщикРезидентТаможенногоСоюза Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	УведомлениеОВвозеПрослеживаемыхТоваров.Ссылка КАК Уведомление,
		|	УведомлениеОВвозеПрослеживаемыхТоваров.НомерКорректировки КАК НомерКорректировки,
		|	МАКСИМУМ(УведомлениеОВвозеПрослеживаемыхТоваров.НомерКорректировки) КАК НомерКорректировкиМаксимальный
		|ПОМЕСТИТЬ ТаблицаТекущихУведомлений
		|ИЗ
		|	Документ.УведомлениеОВвозеПрослеживаемыхТоваров КАК УведомлениеОВвозеПрослеживаемыхТоваров
		|ГДЕ
		|	УведомлениеОВвозеПрослеживаемыхТоваров.ПервичныйДокумент = &ДокументРеализации
		|
		|СГРУППИРОВАТЬ ПО
		|	УведомлениеОВвозеПрослеживаемыхТоваров.Ссылка,
		|	УведомлениеОВвозеПрослеживаемыхТоваров.НомерКорректировки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УведомлениеОВвозеПрослеживаемыхТоваров.РНПТ КАК РНПТ,
		|	УведомлениеОВвозеПрослеживаемыхТоваров.Организация КАК Организация,
		|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.Номенклатура КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА УведомлениеОВвозеПрослеживаемыхТоваров.НомерКорректировки = 0
		|			ТОГДА УведомлениеОВвозеПрослеживаемыхТоваровТовары.СтранаПроисхождения
		|		ИНАЧЕ УведомлениеОВвозеПрослеживаемыхТоваровТовары.СтранаПроисхожденияПослеИзменения
		|	КОНЕЦ КАК СтранаПроисхождения
		|ПОМЕСТИТЬ ДанныеПоУведомлению
		|ИЗ
		|	Документ.УведомлениеОВвозеПрослеживаемыхТоваров КАК УведомлениеОВвозеПрослеживаемыхТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОВвозеПрослеживаемыхТоваров.Товары КАК УведомлениеОВвозеПрослеживаемыхТоваровТовары
		|		ПО (УведомлениеОВвозеПрослеживаемыхТоваровТовары.Ссылка = УведомлениеОВвозеПрослеживаемыхТоваров.Ссылка)
		|ГДЕ
		|	УведомлениеОВвозеПрослеживаемыхТоваров.Ссылка В
		|			(ВЫБРАТЬ
		|				ТаблицаТекущихУведомлений.Уведомление КАК Уведомление
		|			ИЗ
		|				ТаблицаТекущихУведомлений КАК ТаблицаТекущихУведомлений
		|			ГДЕ
		|				ТаблицаТекущихУведомлений.НомерКорректировки = ТаблицаТекущихУведомлений.НомерКорректировкиМаксимальный)
		|
		|СГРУППИРОВАТЬ ПО
		|	УведомлениеОВвозеПрослеживаемыхТоваров.РНПТ,
		|	УведомлениеОВвозеПрослеживаемыхТоваров.Организация,
		|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.Номенклатура,
		|	ВЫБОР
		|		КОГДА УведомлениеОВвозеПрослеживаемыхТоваров.НомерКорректировки = 0
		|			ТОГДА УведомлениеОВвозеПрослеживаемыхТоваровТовары.СтранаПроисхождения
		|		ИНАЧЕ УведомлениеОВвозеПрослеживаемыхТоваровТовары.СтранаПроисхожденияПослеИзменения
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПрослеживаемыеТоварыОстатки.РНПТ КАК РНПТ,
		|	ПрослеживаемыеТоварыОстатки.Организация КАК Организация,
		|	ПрослеживаемыеТоварыОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ПрослеживаемыеТоварыОстатки.КоличествоОстаток КАК Количество,
		|	ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемостиОстаток КАК КоличествоПрослеживаемости,
		|	ИСТИНА КАК ПрослеживаемыйТовар,
		|	ПрослеживаемыеТоварыОстатки.Комплектующие КАК Номенклатура
		|ИЗ
		|	РегистрНакопления.ПрослеживаемыеТовары.Остатки(
		|			&ДатаТекущегоДокумента,
		|			(РНПТ, Номенклатура, СтранаПроисхождения) В
		|				(ВЫБРАТЬ
		|					ДанныеПоУведомлению.РНПТ КАК РНПТ,
		|					ДанныеПоУведомлению.Номенклатура КАК Номенклатура,
		|					ДанныеПоУведомлению.СтранаПроисхождения КАК СтранаПроисхождения
		|				ИЗ
		|					ДанныеПоУведомлению КАК ДанныеПоУведомлению)) КАК ПрослеживаемыеТоварыОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НомераГТД КАК НомераГТД
		|		ПО ПрослеживаемыеТоварыОстатки.РНПТ = НомераГТД.Ссылка
		|ГДЕ
		|	ПрослеживаемыеТоварыОстатки.Организация = &Организация
		|	И ПрослеживаемыеТоварыОстатки.СтранаПроисхождения = &СтранаПроисхождения
		|	И ПрослеживаемыеТоварыОстатки.Номенклатура = &Номенклатура
		|	И ПрослеживаемыеТоварыОстатки.Комиссионер = &Комиссионер
		|	И ПрослеживаемыеТоварыОстатки.ВидЗапасов = &ВидЗапасов
		|	И ПрослеживаемыеТоварыОстатки.Комитент = &Комитент
		|	И НЕ &ЭтоПоступление
		|	И ВЫБОР
		|			КОГДА &ПоказыватьТолькоОстатки
		|				ТОГДА ПрослеживаемыеТоварыОстатки.КоличествоОстаток > 0
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ";
		
	Иначе
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СправочникНомераГТД.Ссылка КАК РНПТ,
		|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
		|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.СтранаПроисхождения, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) КАК СтранаПроисхождения,
		|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Комитент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Комитент,
		|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Количество, 0) КАК Количество,
		|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемости, 0) КАК КоличествоПрослеживаемости,
		|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Комплектующие, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
		|	ИСТИНА КАК ПрослеживаемыйТовар
		|ИЗ
		|	Справочник.НомераГТД КАК СправочникНомераГТД
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ПоступленияМинусВозврат.РНПТ КАК РНПТ,
		|			ПоступленияМинусВозврат.Организация КАК Организация,
		|			ПоступленияМинусВозврат.СтранаПроисхождения КАК СтранаПроисхождения,
		|			ПоступленияМинусВозврат.Номенклатура КАК Номенклатура,
		|			ПоступленияМинусВозврат.Комитент КАК Комитент,
		|			СУММА(ПоступленияМинусВозврат.Количество) КАК Количество,
		|			СУММА(ПоступленияМинусВозврат.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
		|			ПоступленияМинусВозврат.Комплектующие КАК Комплектующие
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ЗакупленныеТовары.Организация КАК Организация,
		|				ЗакупленныеТовары.Номенклатура КАК Номенклатура,
		|				ЗакупленныеТовары.СтранаПроисхождения КАК СтранаПроисхождения,
		|				ЗакупленныеТовары.Количество КАК Количество,
		|				ЗакупленныеТовары.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
		|				ЗакупленныеТовары.РНПТ КАК РНПТ,
		|				ЗакупленныеТовары.Комитент КАК Комитент,
		|				ЗакупленныеТовары.Комплектующие КАК Комплектующие
		|			ИЗ
		|				РегистрНакопления.ПрослеживаемыеТовары КАК ЗакупленныеТовары
		|			ГДЕ
		|				ЗакупленныеТовары.Организация = &Организация
		|				И ЗакупленныеТовары.Номенклатура = &Номенклатура
		|				И ЗакупленныеТовары.СтранаПроисхождения = &СтранаПроисхождения
		|				И ЗакупленныеТовары.Комиссионер = &Комиссионер
		|				И ЗакупленныеТовары.Комитент = &Комитент
		|				И ЗакупленныеТовары.ВидЗапасов = &ВидЗапасов
		|				И ЗакупленныеТовары.Регистратор = &ДокументРеализации
		|			
		|			ОБЪЕДИНИТЬ ВСЕ
		|			
		|			ВЫБРАТЬ
		|				ВозвращенныеТовары.Организация,
		|				ВозвращенныеТовары.Номенклатура,
		|				ВозвращенныеТовары.СтранаПроисхождения,
		|				ВЫБОР
		|					КОГДА ВозвращенныеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|						ТОГДА ВозвращенныеТовары.Количество
		|					ИНАЧЕ -ВозвращенныеТовары.Количество
		|				КОНЕЦ,
		|				ВЫБОР
		|					КОГДА ВозвращенныеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|						ТОГДА ВозвращенныеТовары.КоличествоПрослеживаемости
		|					ИНАЧЕ -ВозвращенныеТовары.КоличествоПрослеживаемости
		|				КОНЕЦ,
		|				ВозвращенныеТовары.РНПТ,
		|				ВозвращенныеТовары.Комитент,
		|				ВозвращенныеТовары.Комплектующие
		|			ИЗ
		|				РегистрНакопления.ПрослеживаемыеТовары КАК ВозвращенныеТовары
		|			ГДЕ
		|				ВозвращенныеТовары.Организация = &Организация
		|				И ВозвращенныеТовары.Номенклатура = &Номенклатура
		|				И ВозвращенныеТовары.СтранаПроисхождения = &СтранаПроисхождения
		|				И ВозвращенныеТовары.Комиссионер = &Комиссионер
		|				И ВозвращенныеТовары.Комитент = &Комитент
		|				И ВозвращенныеТовары.ВидЗапасов = &ВидЗапасов
		|				И ВозвращенныеТовары.Период <= &ДатаТекущегоДокумента
		|				И ВозвращенныеТовары.Регистратор <> &ТекущийДокумент
		|				И ВозвращенныеТовары.ОснованиеДляВозврата = &ДокументРеализации) КАК ПоступленияМинусВозврат
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПоступленияМинусВозврат.РНПТ,
		|			ПоступленияМинусВозврат.СтранаПроисхождения,
		|			ПоступленияМинусВозврат.Номенклатура,
		|			ПоступленияМинусВозврат.Организация,
		|			ПоступленияМинусВозврат.Комитент,
		|			ПоступленияМинусВозврат.Комплектующие) КАК ПрослеживаемыеТоварыОстатки
		|		ПО СправочникНомераГТД.Ссылка = ПрослеживаемыеТоварыОстатки.РНПТ
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ПоказыватьТолькоОстатки
		|				ТОГДА ПрослеживаемыеТоварыОстатки.Количество > 0
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Комитент,
		|	Номенклатура";

	КонецЕсли;
	
	Возврат ТекстЗапроса;
		
КонецФункции

&НаСервере
Функция ТекстЗапросаВозвратТоваровКомиссия()
	
	Возврат
	"ВЫБРАТЬ
	|	ОтчетКомиссионераОПродажахТовары.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(ОтчетКомиссионераОПродажахПокупатели.Покупатель, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Покупатель,
	|	ОтчетКомиссионераОПродажахПокупатели.СчетФактура КАК СчетФактура,
	|	ЕСТЬNULL(ОтчетКомиссионераОПродажахПокупатели.ВыставленСФ, Ложь) КАК ВыставленСФ,
	|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Комитент КАК Комитент,
	|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Количество КАК Количество,
	|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	ОтчетКомиссионераОПродажахТовары.Ссылка.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ОтчетКомиссионераОПродажахТовары.ПрослеживаемыйКомплект
	|			ТОГДА ОтчетКомиссионераОПродажахСведенияПрослеживаемости.СтранаПроисхождения
	|		ИНАЧЕ ОтчетКомиссионераОПродажахТовары.СтранаПроисхождения
	|	КОНЕЦ КАК СтранаПроисхождения,
	|	ОтчетКомиссионераОПродажахТовары.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект,
	|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Номенклатура КАК Комплектующие
	|ПОМЕСТИТЬ РеализацияИВозврат
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Товары КАК ОтчетКомиссионераОПродажахТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.Покупатели КАК ОтчетКомиссионераОПродажахПокупатели
	|		ПО ОтчетКомиссионераОПродажахПокупатели.Ссылка = ОтчетКомиссионераОПродажахТовары.Ссылка
	|			И ОтчетКомиссионераОПродажахПокупатели.КлючСтроки = ОтчетКомиссионераОПродажахТовары.КлючСтроки
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.СведенияПрослеживаемости КАК ОтчетКомиссионераОПродажахСведенияПрослеживаемости
	|		ПО ОтчетКомиссионераОПродажахТовары.Ссылка = ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Ссылка
	|			И ОтчетКомиссионераОПродажахТовары.ИдентификаторСтроки = ОтчетКомиссионераОПродажахСведенияПрослеживаемости.ИдентификаторСтроки
	|ГДЕ
	|	ОтчетКомиссионераОПродажахТовары.Ссылка = &ДокументРеализации
	|	И ЕСТЬNULL(ОтчетКомиссионераОПродажахПокупатели.Покупатель, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) = &Покупатель
	|	И ОтчетКомиссионераОПродажахТовары.Номенклатура = &Номенклатура
	|	И ВЫБОР
	|			КОГДА &ПрослеживаемыйКомплект
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ОтчетКомиссионераОПродажахТовары.СтранаПроисхождения = &СтранаПроисхождения
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА ОтчетКомиссионераОПродажахПокупатели.ВыставленСФ
	|				ТОГДА ОтчетКомиссионераОПродажахПокупатели.СчетФактура В (&СчетФактура)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ЕСТЬNULL(ОтчетКомиссионераОПродажахПокупатели.ВыставленСФ, Ложь) = &ВыставленСФ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтчетКомиссионераОПродажахТоварыВозвращенные.Номенклатура,
	|	ОтчетКомиссионераОПродажахВозвраты.Покупатель,
	|	ОтчетКомиссионераОПродажахВозвратыИсходныеДокументы.ИсходныйДокумент,
	|	ОтчетКомиссионераОПродажахВозвраты.ВыставленСФ,
	|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.РНПТ,
	|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Комитент,
	|	-ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Количество,
	|	-ОтчетКомиссионераОПродажахСведенияПрослеживаемости.КоличествоПрослеживаемости,
	|	ВложенныйЗапрос.Организация,
	|	ВЫБОР
	|		КОГДА ОтчетКомиссионераОПродажахТоварыВозвращенные.ПрослеживаемыйКомплект
	|			ТОГДА ОтчетКомиссионераОПродажахСведенияПрослеживаемости.СтранаПроисхождения
	|		ИНАЧЕ ОтчетКомиссионераОПродажахТоварыВозвращенные.СтранаПроисхождения
	|	КОНЕЦ,
	|	ОтчетКомиссионераОПродажахТоварыВозвращенные.ПрослеживаемыйКомплект,
	|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Номенклатура
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПрослеживаемыеТовары.Регистратор КАК Регистратор,
	|		ПрослеживаемыеТовары.Организация КАК Организация
	|	ИЗ
	|		РегистрНакопления.ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
	|	ГДЕ
	|		ПрослеживаемыеТовары.Организация = &Организация
	|		И ПрослеживаемыеТовары.Номенклатура = &Номенклатура
	|		И ВЫБОР
	|				КОГДА &ПрослеживаемыйКомплект
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ПрослеживаемыеТовары.СтранаПроисхождения = &СтранаПроисхождения
	|			КОНЕЦ
	|		И ПрослеживаемыеТовары.Комиссионер = &Комиссионер
	|		И ПрослеживаемыеТовары.Период <= &ДатаТекущегоДокумента
	|		И ПрослеживаемыеТовары.Регистратор <> &ТекущийДокумент
	|		И ПрослеживаемыеТовары.ОснованиеДляВозврата = &ДокументРеализации) КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.ТоварыВозвращенные КАК ОтчетКомиссионераОПродажахТоварыВозвращенные
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.ВозвратыИсходныеДокументы КАК ОтчетКомиссионераОПродажахВозвратыИсходныеДокументы
	|			ПО ОтчетКомиссионераОПродажахТоварыВозвращенные.Ссылка = ОтчетКомиссионераОПродажахВозвратыИсходныеДокументы.Ссылка
	|				И ОтчетКомиссионераОПродажахТоварыВозвращенные.КлючСтроки = ОтчетКомиссионераОПродажахВозвратыИсходныеДокументы.КлючСтроки
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.СведенияПрослеживаемости КАК ОтчетКомиссионераОПродажахСведенияПрослеживаемости
	|			ПО ОтчетКомиссионераОПродажахТоварыВозвращенные.Ссылка = ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Ссылка
	|				И ОтчетКомиссионераОПродажахТоварыВозвращенные.ИдентификаторСтроки = ОтчетКомиссионераОПродажахСведенияПрослеживаемости.ИдентификаторСтроки
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.Возвраты КАК ОтчетКомиссионераОПродажахВозвраты
	|			ПО ОтчетКомиссионераОПродажахТоварыВозвращенные.Ссылка = ОтчетКомиссионераОПродажахВозвраты.Ссылка
	|				И ОтчетКомиссионераОПродажахТоварыВозвращенные.КлючСтроки = ОтчетКомиссионераОПродажахВозвраты.КлючСтроки
	|		ПО ВложенныйЗапрос.Регистратор = ОтчетКомиссионераОПродажахТоварыВозвращенные.Ссылка
	|ГДЕ
	|	ОтчетКомиссионераОПродажахТоварыВозвращенные.Номенклатура = &Номенклатура
	|	И ОтчетКомиссионераОПродажахТоварыВозвращенные.ДокументРеализации = &ДокументРеализации
	|	И ВЫБОР
	|			КОГДА &ПрослеживаемыйКомплект
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ОтчетКомиссионераОПродажахТоварыВозвращенные.СтранаПроисхождения = &СтранаПроисхождения
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ВыставленСФ
	|				ТОГДА ОтчетКомиссионераОПродажахВозвратыИсходныеДокументы.ИсходныйДокумент В (&СчетФактура)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ОтчетКомиссионераОПродажахВозвраты.ВыставленСФ = &ВыставленСФ
	|	И ОтчетКомиссионераОПродажахВозвраты.Покупатель = &Покупатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияИВозврат.Номенклатура КАК Номенклатура,
	|	РеализацияИВозврат.РНПТ КАК РНПТ,
	|	РеализацияИВозврат.Комитент КАК Комитент,
	|	СУММА(РеализацияИВозврат.Количество) КАК Количество,
	|	СУММА(РеализацияИВозврат.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	РеализацияИВозврат.Организация КАК Организация,
	|	РеализацияИВозврат.СтранаПроисхождения КАК СтранаПроисхождения,
	|	РеализацияИВозврат.Комплектующие КАК Комплектующие,
	|	РеализацияИВозврат.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект
	|ПОМЕСТИТЬ РеализацияМинусВозвратИтого
	|ИЗ
	|	РеализацияИВозврат КАК РеализацияИВозврат
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияИВозврат.Номенклатура,
	|	РеализацияИВозврат.РНПТ,
	|	РеализацияИВозврат.Комитент,
	|	РеализацияИВозврат.Организация,
	|	РеализацияИВозврат.СтранаПроисхождения,
	|	РеализацияИВозврат.Комплектующие,
	|	РеализацияИВозврат.ПрослеживаемыйКомплект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(РеализацияМинусВозвратИтого.Комплектующие, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
	|	ЕСТЬNULL(РеализацияМинусВозвратИтого.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(РеализацияМинусВозвратИтого.КоличествоПрослеживаемости, 0) КАК КоличествоПрослеживаемости,
	|	НомераГТД.Ссылка КАК РНПТ,
	|	ЕСТЬNULL(РеализацияМинусВозвратИтого.Комитент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Комитент,
	|	ЕСТЬNULL(РеализацияМинусВозвратИтого.СтранаПроисхождения, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) КАК СтранаПроисхождения,
	|	РеализацияМинусВозвратИтого.Организация КАК Организация,
	|	ИСТИНА КАК ПрослеживаемыйТовар
	|ИЗ
	|	Справочник.НомераГТД КАК НомераГТД
	|		ЛЕВОЕ СОЕДИНЕНИЕ РеализацияМинусВозвратИтого КАК РеализацияМинусВозвратИтого
	|		ПО (РеализацияМинусВозвратИтого.РНПТ = НомераГТД.Ссылка)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ПоказыватьТолькоОстатки
	|				ТОГДА РеализацияМинусВозвратИтого.Количество > 0
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Комитент,
	|	Номенклатура";
	
КонецФункции

&НаСервере
Функция ТекстЗапросаПринятиеКУчетуОСОбъектСтроительства()
	
	Возврат
	"ВЫБРАТЬ
	|	ПрослеживаемыеОСОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПрослеживаемыеОСОстатки.Организация КАК Организация,
	|	ПрослеживаемыеОСОстатки.РНПТ КАК РНПТ,
	|	ПрослеживаемыеОСОстатки.Комплектующие КАК Номенклатура,
	|	ПрослеживаемыеОСОстатки.КоличествоОстаток КАК Количество,
	|	ПрослеживаемыеОСОстатки.КоличествоПрослеживаемостиОстаток КАК КоличествоПрослеживаемости
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеОсновныеСредства.Остатки(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство = &ОбъектСтроительства) КАК ПрослеживаемыеОСОстатки
	|ГДЕ
	|	ПрослеживаемыеОСОстатки.КоличествоОстаток > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрослеживаемыеОСОстатки.Организация,
	|	ПрослеживаемыеОСОстатки.СтранаПроисхождения,
	|	ПрослеживаемыеОСОстатки.РНПТ,
	|	ПрослеживаемыеОСОстатки.Комплектующие,
	|	ПрослеживаемыеОСОстатки.КоличествоОстаток,
	|	ПрослеживаемыеОСОстатки.КоличествоПрослеживаемостиОстаток
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура";
	
КонецФункции

&НаСервере
Функция ТекстЗапросаПодборРНПТПоГрупповымОС()
	
	Возврат
	"ВЫБРАТЬ
	|	ПрослеживаемыеОСОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПрослеживаемыеОСОстатки.Организация КАК Организация,
	|	ПрослеживаемыеОСОстатки.РНПТ КАК РНПТ,
	|	ПрослеживаемыеОСОстатки.КоличествоОстаток КАК Количество,
	|	ПрослеживаемыеОСОстатки.КоличествоПрослеживаемостиОстаток КАК КоличествоПрослеживаемости,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеОсновныеСредства.Остатки(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство = &ОсновноеСредство) КАК ПрослеживаемыеОСОстатки
	|ГДЕ
	|	ПрослеживаемыеОСОстатки.КоличествоОстаток > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрослеживаемыеОСОстатки.Организация,
	|	ПрослеживаемыеОСОстатки.СтранаПроисхождения,
	|	ПрослеживаемыеОСОстатки.РНПТ,
	|	ПрослеживаемыеОСОстатки.КоличествоОстаток,
	|	ПрослеживаемыеОСОстатки.КоличествоПрослеживаемостиОстаток";
	
КонецФункции

&НаСервере
Функция ТекстЗапросаПринятиеКУчетуОСОборудование()
	
	Возврат
	"ВЫБРАТЬ
	|	ПрослеживаемыеТоварыОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПрослеживаемыеТоварыОстатки.Организация КАК Организация,
	|	ПрослеживаемыеТоварыОстатки.РНПТ КАК РНПТ,
	|	СУММА(ПрослеживаемыеТоварыОстатки.КоличествоОстаток) КАК Количество,
	|	СУММА(ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемостиОстаток) КАК КоличествоПрослеживаемости,
	|	ПрослеживаемыеТоварыОстатки.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТовары.Остатки(
	|			&Период,
	|			Организация = &Организация
	|				И Номенклатура = &Номенклатура
	|				И Комиссионер = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И Комитент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И ВидЗапасов = ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка)) КАК ПрослеживаемыеТоварыОстатки
	|ГДЕ
	|	ПрослеживаемыеТоварыОстатки.КоличествоОстаток > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрослеживаемыеТоварыОстатки.Организация,
	|	ПрослеживаемыеТоварыОстатки.СтранаПроисхождения,
	|	ПрослеживаемыеТоварыОстатки.РНПТ,
	|	ПрослеживаемыеТоварыОстатки.Номенклатура";
	
КонецФункции

&НаСервере
Функция ТекстЗапросаПоУмолчанию()
	
	Возврат
	"ВЫБРАТЬ
	|	СправочникНомераГТД.Ссылка КАК РНПТ,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.СтранаПроисхождения, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) КАК СтранаПроисхождения,
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыйКомплект
	|			ТОГДА ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Комплектующие, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|		ИНАЧЕ ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|	КОНЕЦ КАК Номенклатура,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.КоличествоОстаток, 0) КАК Количество,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемостиОстаток, 0) КАК КоличествоПрослеживаемости,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Комитент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Комитент,
	|	ИСТИНА КАК ПрослеживаемыйТовар
	|ИЗ
	|	Справочник.НомераГТД КАК СправочникНомераГТД
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПрослеживаемыеТовары.Остатки(
	|				&Период,
	|				Организация = &Организация
	|					И ВЫБОР
	|						КОГДА &ПрослеживаемыйКомплект
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ СтранаПроисхождения = &СтранаПроисхождения
	|					КОНЕЦ
	|					И Номенклатура = &Номенклатура
	|					И Комитент = &Комитент
	|					И Комиссионер = &Комиссионер
	|					И ВидЗапасов = &ВидЗапасов
	|					И ВЫБОР
	|						КОГДА &ЭтоРазукомплектация
	|							ТОГДА Комплектующие = &Комплектующие
	|						ИНАЧЕ ИСТИНА
	|					КОНЕЦ) КАК ПрослеживаемыеТоварыОстатки
	|		ПО (ПрослеживаемыеТоварыОстатки.РНПТ = СправочникНомераГТД.Ссылка)
	|ГДЕ
	|	НЕ &ЭтоПоступление
	|	И ВЫБОР
	|			КОГДА &ПоказыватьТолькоОстатки
	|				ТОГДА ПрослеживаемыеТоварыОстатки.КоличествоОстаток > 0
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	СправочникНомераГТД.Ссылка,
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)),
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.СтранаПроисхождения, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)),
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.КоличествоОстаток, 0),
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемостиОстаток, 0),
	|	ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Комитент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)),
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыйКомплект
	|			ТОГДА ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Комплектующие, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|		ИНАЧЕ ЕСТЬNULL(ПрослеживаемыеТоварыОстатки.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Комитент,
	|	Номенклатура";
	
КонецФункции

&НаСервере
Процедура ПолучитьОстаткиРНПТ()
	
	Запрос = Новый Запрос;
	ТекстЗапроса = ТекстЗапросаПоУмолчанию();
	Запрос.УстановитьПараметр("Организация",             Организация);
	Запрос.УстановитьПараметр("Период",                  Новый Граница(КонецДня(Период), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Номенклатура",            Номенклатура);
	Запрос.УстановитьПараметр("СтранаПроисхождения",     СтранаПроисхождения);
	Запрос.УстановитьПараметр("Комиссионер",             Комиссионер);
	Запрос.УстановитьПараметр("Комитент",                Комитент);
	Запрос.УстановитьПараметр("ЭтоПоступление",          ЭтоПоступление ИЛИ ОткрыватьДляПросмотра);
	Запрос.УстановитьПараметр("ПоказыватьТолькоОстатки", ПоказыватьТолькоОстатки);
	Запрос.УстановитьПараметр("ПрослеживаемыйКомплект",  ПрослеживаемыйКомплект);
	Запрос.УстановитьПараметр("Комплектующие",           Комплектующие);
	Запрос.УстановитьПараметр("ЭтоРазукомплектация",     ЭтоРазукомплектация);
	
	Если ТоварКомитентаНаПродажу Тогда
		Запрос.УстановитьПараметр("ВидЗапасов", Перечисления.ВидыЗапасовПрослеживаемыхТоваров.ТоварыОтКомитентаНаРеализацию);
	Иначе
		Запрос.УстановитьПараметр("ВидЗапасов", ВидЗапасов);
	КонецЕсли;
	
	Если ЭтоВозвратРозница Тогда
		ТекстЗапроса = ТекстЗапросаВозвратТоваровРозница();
		Запрос.УстановитьПараметр("ДатаРеализации",        ДатаРеализации);
		Запрос.УстановитьПараметр("ДатаТекущегоДокумента", ДатаТекущегоДокумента);
		Запрос.УстановитьПараметр("ТекущийДокумент",       ТекущийДокумент);
		
	ИначеЕсли ЭтоВозвратПоставщику И Не ТоварКомитентаНаПродажу Тогда
		ТекстЗапроса = ТекстЗапросаВозвратТоваровПоставщику(ПоставщикРезидентТаможенногоСоюза);
		Запрос.УстановитьПараметр("ДатаТекущегоДокумента", ДатаТекущегоДокумента);
		Запрос.УстановитьПараметр("ДокументРеализации",    ДокументРеализации);
		
		Если НЕ ПоставщикРезидентТаможенногоСоюза Тогда
			Запрос.УстановитьПараметр("ТекущийДокумент", ТекущийДокумент);
		КонецЕсли;
		
	ИначеЕсли ЭтоВозвратКомиссия И Не ВозвратКомиссияПоТекДокументу Тогда
		ТекстЗапроса = ТекстЗапросаВозвратТоваровКомиссия();
		Запрос.УстановитьПараметр("ВыставленСФ",           ВыставленСФ); 
		Запрос.УстановитьПараметр("ДокументРеализации",    ДокументРеализации);
		Запрос.УстановитьПараметр("ДатаТекущегоДокумента", ДатаТекущегоДокумента);
		Запрос.УстановитьПараметр("ТекущийДокумент",       ТекущийДокумент);
		Запрос.УстановитьПараметр("СчетФактура",           СчетФактура);
		Запрос.УстановитьПараметр("Покупатель",            Покупатель);
		
	ИначеЕсли ТоварКомитентаНаПродажу Тогда
		Если Не ЗначениеЗаполнено(Комитент) Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Комитент = &Комитент", "ИСТИНА");
		КонецЕсли;
	ИначеЕсли ЭтоСоставноеОС Тогда 
		ТекстЗапроса = ТекстЗапросаПринятиеКУчетуОСОбъектСтроительства();
		Запрос.УстановитьПараметр("ОбъектСтроительства", ОбъектСтроительства);
	ИначеЕсли ЭтоОС Тогда
		ТекстЗапроса = ТекстЗапросаПринятиеКУчетуОСОборудование();
	ИначеЕсли ГрупповойОбъектОС И (ЭтоПродажа Или СписаниеОС) Тогда
		ТекстЗапроса = ТекстЗапросаПодборРНПТПоГрупповымОС();
		Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство); 
	ИначеЕсли ПередачаТоваровВСоставеРабот Тогда
		ТекстЗапроса = ТекстЗапросаТоварыПередаваемыеВСоставеРабот();
		Запрос.УстановитьПараметр("ВидЗапасов", Перечисления.ВидыЗапасовПрослеживаемыхТоваров.ТоварыПередаваемыеВСоставеРабот);
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.Выполнить().Выгрузить();
	ОстаткиТаблица.Загрузить(Результат);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьИтоги(Форма)
	
	Форма.ИтогиВсего = Форма.Подбор.Итог("Сумма");
	Если Форма.ЭтоПродажа тогда
		Форма.ИтогиВсегоНДС = Форма.Подбор.Итог("СуммаНДС");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСведенияПоРНПТДляСоставногоОС(КоличествоРНПТ)
	
	Если КоличествоРНПТ > 0 Тогда
		Подбор[0].СтранаПроисхождения = СтранаПроисхождения;
		Подбор[0].РНПТ = РНПТ ;
		Подбор[0].Количество = 1;
		Подбор[0].КоличествоПрослеживаемости = 1;
	Иначе
		НоваяСтрока = Подбор.Добавить();
		НоваяСтрока.СтранаПроисхождения = СтранаПроисхождения;
		НоваяСтрока.РНПТ = РНПТ ;
		НоваяСтрока.Количество = 1;
		НоваяСтрока.КоличествоПрослеживаемости = 1;
	КонецЕсли;
	
	Если ИспользованиеПроверкиВозможно И Не ЗначениеЗаполнено(РНПТ) Тогда
		Подбор[0].СостояниеПроверкиРНПТ = 4;
		Подбор[0].ОписаниеСостояния     = "";
	КонецЕсли;
	
	Если ЭтоПродажа 
		И СтавкаНДС <> ПредопределенноеЗначение("Перечисление.СтавкиНДС.БезНДС")
		И СтавкаНДС <> ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС0")
		И НесколькоРНПТ Тогда
		ТребуетсяСуммаНДС = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСведенияПоРНПТДляПростогоОС()
	
	СтранаПроисхождения = Подбор[0].СтранаПроисхождения;
	РНПТ                = Подбор[0].РНПТ;
	Количество          = Подбор[0].Количество;
	Подбор[0].Номенклатура = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПризнакПрослеживаемости(Номенклатура, Дата)
	
	РеквизитыПрослеживаемости = Справочники.Номенклатура.ПризнакПрослеживаемостиНаДату(Номенклатура, Дата);
	
	Возврат РеквизитыПрослеживаемости.ПрослеживаемыйТовар;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьПояснение()
	
	ТекДанные = Элементы.Подбор.ТекущиеДанные;
	ТекстПояснения = "";
	Если Элементы.ГруппаРеквизитыПростогоОС.Видимость
		И Подбор.Количество() > 0
		И НЕ ГрупповойОбъектОС Тогда
		ТекДанные = Подбор[0];
	ИначеЕсли ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекДанные.СостояниеПроверкиРНПТ = 0 Тогда
		ТекстПояснения = Новый ФорматированнаяСтрока(НСтр("ru = 'РНПТ успешно проверен сервисом ФНС. ТНВЭД товара совпадает с данными ФНС, количество не превышает количество ввезенного товара по данным ФНС.'"));
	ИначеЕсли ТекДанные.СостояниеПроверкиРНПТ = 2 Тогда
		ТекстПояснения = Новый ФорматированнаяСтрока(НСтр("ru = 'РНПТ документа проверяется на соответствие данным ФНС. В зависимости от нагрузки сервиса проверка может занять от нескольких секунд до нескольких минут.'"));
	ИначеЕсли ТекДанные.СписокОшибок.Количество() > 0 Тогда
		Если ЭтоПоступление Тогда
			ТекстРекомендации = НСтр("ru = '2.Поставщик указал некорректный РНПТ – запросите у поставщика исправленный документ.'");
		Иначе
			ТекстРекомендации = НСтр("ru = '2.Указан некорректный РНПТ – исправьте РНПТ в документе.'");
		КонецЕсли;
		
		Если ТекДанные.СписокОшибок[0].Значение = "Валидность" Тогда
			ШаблонПояснения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Указанный РНПТ не найден в данных ФНС. 
			|Возможные проблемы и рекомендации:
			|1.При заполнении карточки РНПТ была допущена ошибка – исправьте номер в карточке.
			|%1'"), ТекстРекомендации);
			ТекстПояснения = Новый ФорматированнаяСтрока(ШаблонПояснения);
		ИначеЕсли ТекДанные.СписокОшибок[0].Значение = "Количество" Тогда
			ШаблонПояснения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Количество товара в документе превышает количество ввезенного товара по данным ФНС: 
			|в документе %1%2
			|Возможные проблемы и рекомендации:
			|1.При вводе документа была допущена ошибка – исправьте количество в строке.
			|%3'"), 
			ТекДанные.КоличествоПрослеживаемости, ТекДанные.Пояснение, ТекстРекомендации);
			ТекстПояснения = Новый ФорматированнаяСтрока(ШаблонПояснения);
		ИначеЕсли ТекДанные.СписокОшибок[0].Значение = "КодТНВЭД" Тогда
			ТекстПоясненияДоСсылки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'ТН ВЭД товара не совпадает с данными ФНС:
			|%1
			|Возможные проблемы и рекомендации:
			|1.В карточке товара установлен некорректный ТН ВЭД - исправьте '"), 
			ТекДанные.Пояснение);
			ГиперссылкаКарточка = Новый ФорматированнаяСтрока("карточку товара",,,,"ОткрытьКарточкуТовара");
			ТекстПоясненияПослеСсылки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '
			|%1'"), ТекстРекомендации);
			ЭлементыСообщения = Новый Массив;
			ЭлементыСообщения.Добавить(ТекстПоясненияДоСсылки);
			ЭлементыСообщения.Добавить(ГиперссылкаКарточка);
			ЭлементыСообщения.Добавить(ТекстПоясненияПослеСсылки);
			ТекстПояснения = Новый ФорматированнаяСтрока(ЭлементыСообщения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьРезультатПроверкиРНПТ() Экспорт
	ПроверкаРНПТ.ОтобразитьРезультатПроверкиРНПТВФормеПодбора(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ЗапуститьПроверкуРНПТВПодборе()
	ПроверкаРНПТКлиент.ЗапуститьПроверкуРНПТВФормеПодбора(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьПояснение()
	ОбновитьПояснение();
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработатьРезультатПроверкиРНПТ()
	Обработано = Ложь;
	ПроверкаРНПТКлиент.ОбработатьРезультатПроверкиРНПТВФормеПодбора(ЭтотОбъект, Обработано);
	Если Обработано Тогда
		ОбновитьПояснение();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПроверитьРНПТФоновоеЗадание() Экспорт
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("Номенклатура",        ?(ЭтоОС, ОсновноеСредство, Номенклатура));
	ПроверкаРНПТ.ПроверитьРНПТВФормеПодбораФоновоеЗадание(ЭтотОбъект, ПараметрыЗадания);
КонецПроцедуры

&НаСервере
Функция ТекстЗапросаТоварыПередаваемыеВСоставеРабот()
	
	Возврат
	"ВЫБРАТЬ
	|	ПрослеживаемыеТоварыОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПрослеживаемыеТоварыОстатки.Организация КАК Организация,
	|	ПрослеживаемыеТоварыОстатки.РНПТ КАК РНПТ,
	|	СУММА(ПрослеживаемыеТоварыОстатки.КоличествоОстаток) КАК Количество,
	|	СУММА(ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемостиОстаток) КАК КоличествоПрослеживаемости,
	|	ПрослеживаемыеТоварыОстатки.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТовары.Остатки(
	|			&Период,
	|			Организация = &Организация
	|				И Комиссионер = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И Комитент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И ВидЗапасов = &ВидЗапасов) КАК ПрослеживаемыеТоварыОстатки
	|ГДЕ
	|	ПрослеживаемыеТоварыОстатки.КоличествоОстаток > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрослеживаемыеТоварыОстатки.Организация,
	|	ПрослеживаемыеТоварыОстатки.СтранаПроисхождения,
	|	ПрослеживаемыеТоварыОстатки.РНПТ,
	|	ПрослеживаемыеТоварыОстатки.Номенклатура";
	
КонецФункции

#КонецОбласти
