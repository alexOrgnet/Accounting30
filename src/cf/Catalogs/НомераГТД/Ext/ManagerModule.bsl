#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаВыбора" И Параметры.Свойство("ВыборПоОстаткам") И Параметры.ВыборПоОстаткам Тогда
		// Если требуется форма с выбором по остаткам, то проверим есть ли у пользователя доступ к регистру бухгалтерии.
		СтандартнаяОбработка = Ложь;
		Если ПравоДоступа("Просмотр", Метаданные.РегистрыБухгалтерии.Хозрасчетный) Тогда
			ВыбраннаяФорма = "ФормаВыбораПоОстаткам";
		Иначе
			ВыбраннаяФорма = "ФормаВыбора";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Определяет регистрационный номер декларации на товары для каждого элемента справочника "Номера ГТД".
// Если регистрационный номер определить не удалось устанавливает признак "СтранаВвозаНеРФ".
Процедура ОпределитьРегистрационныйНомерИСтрануВвозаОтложенно(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1000
	|	НомераГТД.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.НомераГТД КАК НомераГТД
	|ГДЕ
	|	НомераГТД.РегистрационныйНомер = """"
	|	И НЕ НомераГТД.СтранаВвозаНеРФ
	|	И НЕ НомераГТД.ЭтоГруппа";
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Если РезультатЗапроса.Количество() = 0 Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Ложь;
	
	ПроблемныхОбъектов = 0;
	ОбъектовОбработано = 0;
	
	Для Каждого СтрокаРезультата Из РезультатЗапроса Цикл
		
		Попытка
			
			ОпределитьРегистрационныйНомерИСтрануВвоза(СтрокаРезультата);
			ОбъектовОбработано = ОбъектовОбработано + 1;
			
		Исключение
			// Если не удалось обработать какой-либо элемент справочника, повторяем попытку снова.
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось обработать элемент справочника: %1 по причине:
					|%2'"),
					СтрокаРезультата.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Справочники.НомераГТД, СтрокаРезультата.Ссылка, ТекстСообщения);
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбъектовОбработано = 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процедуре ОпределитьРегистрационныйНомерИСтрануВвозаОтложенно
				|не удалось обработать некоторые элементы справочника Номера ГТД (пропущены): %1'"),
				ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
			УровеньЖурналаРегистрации.Информация,
			Метаданные.Справочники.НомераГТД,,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Процедура ОпределитьРегистрационныйНомерИСтрануВвозаОтложенно
					|обработала очередную порцию элементов справочника Номера ГТД: %1'"), ОбъектовОбработано));
	КонецЕсли;
	
КонецПроцедуры

Процедура ОпределитьРегистрационныйНомерИСтрануВвоза(ЭлементСправочника)
	
	НачатьТранзакцию();
	Попытка
		
		// Блокируем объект от изменения другими сеансами.
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Справочник.НомераГТД");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", ЭлементСправочника.Ссылка);
		Блокировка.Заблокировать();
		
		СправочникОбъект = ЭлементСправочника.Ссылка.ПолучитьОбъект();
		
		// Если объект ранее был удален или обработан другими сеансами, пропускаем его.
		Если СправочникОбъект = Неопределено Тогда
			ОтменитьТранзакцию();
			Возврат;
		КонецЕсли;
		Если ЗначениеЗаполнено(СправочникОбъект.РегистрационныйНомер)
			ИЛИ СправочникОбъект.СтранаВвозаНеРФ Тогда
			// Элемент справочника уже обработан.
			ОтменитьТранзакцию();
			Возврат;
		КонецЕсли;
		
		Реквизиты = ПараметрыТаможеннойДекларации(СправочникОбъект.Код);
		ЗаполнитьЗначенияСвойств(СправочникОбъект, Реквизиты, "РегистрационныйНомер,СтранаВвозаНеРФ");
		
		// Запись обработанного объекта.
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СправочникОбъект);
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

Процедура УстановитьПризнакРНПТОтложено(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1000
	|	НомераГТД.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА СвойстваРНПТ.РНПТ ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоРНПТ
	|ИЗ
	|	Справочник.НомераГТД КАК НомераГТД
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвойстваРНПТ КАК СвойстваРНПТ
	|		ПО (СвойстваРНПТ.РНПТ = НомераГТД.Ссылка)
	|ГДЕ
	|	НЕ НомераГТД.ЭтоГруппа
	|	И НЕ НомераГТД.ЭтоРНПТ
	|	И НЕ НомераГТД.ЭтоНомерТД";
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Если РезультатЗапроса.Количество() = 0 Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Ложь;
	
	ПроблемныхОбъектов = 0;
	ОбъектовОбработано = 0;
	
	Для Каждого СтрокаРезультата Из РезультатЗапроса Цикл
		
		Попытка
			
			УстановитьПризнакРНПТ(СтрокаРезультата, СтрокаРезультата.ЭтоРНПТ);
			ОбъектовОбработано = ОбъектовОбработано + 1;
			
		Исключение
			// Если не удалось обработать какой-либо элемент справочника, повторяем попытку снова.
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось обработать элемент справочника: %1 по причине:
					|%2'"),
					СтрокаРезультата.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Справочники.НомераГТД, СтрокаРезультата.Ссылка, ТекстСообщения);
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбъектовОбработано = 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процедуре УстановитьПризнакРНПТОтложено
				|не удалось обработать некоторые элементы справочника Номера ГТД (пропущены): %1'"),
				ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
			УровеньЖурналаРегистрации.Информация,
			Метаданные.Справочники.НомераГТД,,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Процедура УстановитьПризнакРНПТОтложено
					|обработала очередную порцию элементов справочника Номера ГТД: %1'"), ОбъектовОбработано));
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьПризнакРНПТ(ЭлементСправочника, ЭтоРНПТ = Истина, ЗаписыватьВТранзакции = Истина) Экспорт
	
	Если ЗаписыватьВТранзакции Тогда
		НачатьТранзакцию();
	КонецЕсли;
	Попытка
		
		// Блокируем объект от изменения другими сеансами.
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Справочник.НомераГТД");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", ЭлементСправочника.Ссылка);
		Блокировка.Заблокировать();
		
		СправочникОбъект = ЭлементСправочника.Ссылка.ПолучитьОбъект();
		
		// Если объект ранее был удален или обработан другими сеансами, пропускаем его.
		Если СправочникОбъект = Неопределено Тогда
			Если ЗаписыватьВТранзакции Тогда
				ОтменитьТранзакцию();
			КонецЕсли;
			Возврат;
		КонецЕсли;
		Если СправочникОбъект.ЭтоРНПТ
			ИЛИ (СправочникОбъект.ЭтоНомерТД И НЕ ЭтоРНПТ)
			ИЛИ (ЭтоРНПТ И СправочникОбъект.ЭтоРНПТ) Тогда
			// Элемент справочника уже обработан.
			Если ЗаписыватьВТранзакции Тогда
				ОтменитьТранзакцию();
			КонецЕсли;
			Возврат;
		КонецЕсли;
		
		Если Не ЭтоРНПТ Тогда
			// Проверим подходит ли номер по формату для РНПТ.
			ЭтоРНПТ = ЭтоРНПТ(СправочникОбъект.Код);
		КонецЕсли;
		
		СправочникОбъект.ЭтоРНПТ    = ЭтоРНПТ;
		СправочникОбъект.ЭтоНомерТД = НЕ ЭтоРНПТ;
		
		// Запись обработанного объекта.
		Если ЗаписыватьВТранзакции Тогда
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(СправочникОбъект);
			ЗафиксироватьТранзакцию();
		Иначе
			СправочникОбъект.Записать();
		КонецЕсли;
	Исключение
		Если ЗаписыватьВТранзакции Тогда
			ОтменитьТранзакцию();
		КонецЕсли;
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

// Возвращает параметры таможенной декларации - регистрационный номер и признак того, декларировался ли товар в РФ.
// Порядок получения регистрационного номера таможенной декларации см. в описании функции РегистрационныйНомер(). 
// Если РегистрационныйНомер() вернет пустую строку, будет установлен признак, что товар декларировался не в РФ.
//
// Параметры
//    НомерТаможеннойДекларации - Строка - номер таможенной декларации или регистрационный номер таможенной декларации.
//
// Возвращаемое значение:
//    Структура 
//      * РегистрационныйНомер - Строка -  регистрационный номер таможенной декларации либо пустая строка, 
//                                         если его не удалось определить.
//      * СтранаВвозаНеРФ      - Булево - признак, что товар декларировался не в РФ.
//      * ЭтоРНПТ              - Булево - признак, что номер по формату является РНПТ.
//      * ЭтоНомерТД           - Булево - признак, что номер по формату является номером таможенной декларации.
//
Функция ПараметрыТаможеннойДекларации(НомерТаможеннойДекларации) Экспорт
	
	РегистрационныйНомер = РегистрационныйНомер(НомерТаможеннойДекларации);
	
	Реквизиты = Новый Структура();
	Реквизиты.Вставить("РегистрационныйНомер", РегистрационныйНомер);
	Реквизиты.Вставить("СтранаВвозаНеРФ", НЕ ЗначениеЗаполнено(РегистрационныйНомер));
	ЭтоРНПТ = ЭтоРНПТ(НомерТаможеннойДекларации);
	Реквизиты.Вставить("ЭтоРНПТ", ЭтоРНПТ);
	Реквизиты.Вставить("ЭтоНомерТД", Не ЭтоРНПТ);
	
	Возврат Реквизиты;
	
КонецФункции

// Возвращает дату принятия декларации на товары.
// Если номер таможенной декларации указан некорректно или декларация была выдана 
// не российским таможенным органом - будет возвращена пустая дата.
//
// Параметры
//    НомерТаможеннойДекларации - Строка - номер таможенной декларации или регистрационный номер таможенной декларации.
//
// Возвращаемое значение:
//    ДатаПринятияДекларацииНаТовары - Дата - дата принятия декларации на товары, зашифрованная во втором разряде
//                                            номера таможенной декларации.
Функция ДатаПринятияДекларацииНаТовары(НомерТаможеннойДекларации) Экспорт
	
	ДатаПринятияДекларацииНаТовары = '00010101';
	
	Если НЕ ЗначениеЗаполнено(НомерТаможеннойДекларации) Тогда
		Возврат ДатаПринятияДекларацииНаТовары;
	КонецЕсли;
	
	РегистрационныйНомер = РегистрационныйНомер(НомерТаможеннойДекларации);
	
	Если НЕ ЗначениеЗаполнено(РегистрационныйНомер) Тогда
		Возврат ДатаПринятияДекларацииНаТовары;
	КонецЕсли;
	
	МассивТД = СтрРазделить(РегистрационныйНомер, "/");
	РазрядДатаПринятияДекларацииНаТовары = МассивТД[1];
	
	Возврат СтроковыеФункцииКлиентСервер.СтрокаВДату(РазрядДатаПринятияДекларацииНаТовары)
	
КонецФункции

// Возвращает регистрационный номер таможенной декларции по переданному полному номеру
// декларации на товары.
// Регистрационный номер не будет определен если "полный" номер таможенной декларации не соответствует 
// структуре номера декларации, выдаваемой российскими таможенными органами.
// 
// Регистрационный номер таможенной декларации может быть получен из "полного" номера таможенной декларации
// или регистрационного номера при условиях:
// 1. Длина номера таможенной декларации от 23 до 28 символов.
// 2. Количество элементов, разделенных знаком дробь ("/") 3 или 4.
// 3. Длина первого элемента 8 символов, второго 6, третьего 7 или 8 (в этом случае первые два символа "ОБ" или "ЗВ"), 
//    четвертого (при наличии) от 1 до 3 символов.
// 4. Второй элемент можно преобразовать в дату.
// Регистрационный номер таможенной декларации будет получен из "полного" номера таможенной декларации
// путем отсечения последнего (4-го) элемента номера.
//
// Параметры
//    НомерТаможеннойДекларации - номер таможенной декларации или регистрационный номер таможенной декларации.
//
// Возвращаемое значение:
//    Регистрационный номер - Строка - регистрационный номер таможенной декларации либо пустая строка, 
//                                     если его не удалось определить.
Функция РегистрационныйНомер(НомерТаможеннойДекларации) Экспорт
	
	НомерДекларацииНаТовары = СокрЛП(НомерТаможеннойДекларации);
	ПустойРегистрационныйНомер = "";
	
	Если СтрДлина(НомерДекларацииНаТовары) < 23
	 ИЛИ СтрДлина(НомерДекларацииНаТовары) > 28 Тогда
		Возврат ПустойРегистрационныйНомер;
	КонецЕсли;
	
	МассивТД = СтрРазделить(НомерДекларацииНаТовары, "/");
	
	Если МассивТД.Количество() > 4
	 ИЛИ МассивТД.Количество() < 3 Тогда
		// Номер декларации на товары указан с ошибками.
		Возврат ПустойРегистрационныйНомер;
	КонецЕсли;
	
	КодТаможенногоОргана = МассивТД[0];
	
	Если СтрДлина(КодТаможенногоОргана) <> 8 Тогда
		Возврат ПустойРегистрационныйНомер;
	КонецЕсли;
	
	ДатаПринятияДекларацииНаТовары = МассивТД[1];
	
	Если СтрДлина(ДатаПринятияДекларацииНаТовары) <> 6 Тогда
		Возврат ПустойРегистрационныйНомер;
	Иначе
		Если НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ДатаПринятияДекларацииНаТовары) Тогда
			Возврат ПустойРегистрационныйНомер;
		КонецЕсли;
		СтрокаВДату = СтроковыеФункцииКлиентСервер.СтрокаВДату(ДатаПринятияДекларацииНаТовары);
		Если НЕ ЗначениеЗаполнено(СтрокаВДату) Тогда
			Возврат ПустойРегистрационныйНомер;
		КонецЕсли;
	КонецЕсли;

	ПорядковыйНомерДекларацииНаТовары = МассивТД[2];
	
	Если СтрДлина(ПорядковыйНомерДекларацииНаТовары) > 8
	 ИЛИ СтрДлина(ПорядковыйНомерДекларацииНаТовары) < 7 Тогда
		Возврат ПустойРегистрационныйНомер;
	КонецЕсли;
	
	// В устаревшем формате предварительной таможенной декларации (ориентировочно 2008 год)
	// порядковый номер декларации на товары состоит из 7 символов, первый символ - буква "П",
	// шесть оставшихся - цифры.
	// В случае представления заявления о выпуске товаров до подачи декларации на товары (ориентировочно с 4 августа 2019 года) 
	// регистрационный номер таможенной декларации имеет вид
	//    X......X/XXXXXX/BXXXXXX
	//   ________ ______ ________,
	// 
	//      1      2        3
	//(в ред. решения Коллегии Евразийской экономической комиссии от 02.07.2019 N 108)
	Если СтрДлина(ПорядковыйНомерДекларацииНаТовары) = 7 Тогда
		ПервыйСимвол = ВРег(Лев(ПорядковыйНомерДекларацииНаТовары, 1));
		ПоследниеШестьСимволов = ВРег(Прав(ПорядковыйНомерДекларацииНаТовары, 6));
		УстаревшийНомерТД = ПервыйСимвол = "П" И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ПоследниеШестьСимволов);
		ЗаявлениеОВыпускеТоваров2019 = ПервыйСимвол = "В" И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ПоследниеШестьСимволов);
		Если НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ПорядковыйНомерДекларацииНаТовары)
		   И НЕ УстаревшийНомерТД 
		   И НЕ ЗаявлениеОВыпускеТоваров2019 Тогда
			// Ошибочный формат поля порядковый номер.
			Возврат ПустойРегистрационныйНомер;
		КонецЕсли;
	КонецЕсли;
	
	// В случае выпуска товаров до подачи таможенной декларации импортер представляет в налоговый орган
	// обязательство о подаче таможенной декларации (до 2018 года) 
	// или заявление о выпуске товаров (с 1 января 2018 года по 4 августа 2019 года).
	// При этом порядковый номер декларации на товары состоит из 8 символов.
	// Порядковый принимает вид "ОБ123456" или "ЗВ123456" соответственно.
	Если СтрДлина(ПорядковыйНомерДекларацииНаТовары) = 8 Тогда
		ПервыеДваСимвола = ВРег(Лев(ПорядковыйНомерДекларацииНаТовары, 2));
		Если ПервыеДваСимвола <> "ОБ"
		   И ПервыеДваСимвола <> "OБ"
		   И ПервыеДваСимвола <> "ЗВ"
		   И ПервыеДваСимвола <> "ЗB" Тогда
			Возврат ПустойРегистрационныйНомер;
		КонецЕсли;
		ПоследниеШестьСимволов = ВРег(Прав(ПорядковыйНомерДекларацииНаТовары, 6));
		Если НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ПоследниеШестьСимволов) Тогда
			Возврат ПустойРегистрационныйНомер;
		КонецЕсли;
	КонецЕсли;
	
	Если МассивТД.Количество() = 4 Тогда
		ПорядковыйНомерТовара = МассивТД[3];
		Если СтрДлина(ПорядковыйНомерТовара) > 3
		 ИЛИ СтрДлина(ПорядковыйНомерТовара) < 1 Тогда
			Возврат ПустойРегистрационныйНомер;
		КонецЕсли;
		МассивТД.Удалить(3);
	КонецЕсли;
	
	Возврат СтрСоединить(МассивТД, "/");
	
КонецФункции

Функция ЭтоРНПТ(НомерТаможеннойДекларации) Экспорт
	
	НомерДекларацииНаТовары = СокрЛП(НомерТаможеннойДекларации);
	
	Если СтрДлина(НомерДекларацииНаТовары) < 25
	 ИЛИ СтрДлина(НомерДекларацииНаТовары) > 27 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	МассивЭлементов = СтрРазделить(НомерДекларацииНаТовары, "/");
	Если МассивЭлементов.Количество() <> 4 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если СтрДлина(МассивЭлементов[0]) <> 8 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если СтрДлина(МассивЭлементов[1]) <> 6 Тогда
		Возврат Ложь;
	Иначе
		Если НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(МассивЭлементов[1]) Тогда
			Возврат Ложь;
		КонецЕсли;
		СтрокаВДату = СтроковыеФункцииКлиентСервер.СтрокаВДату(МассивЭлементов[1]);
		Если НЕ ЗначениеЗаполнено(СтрокаВДату) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если СтрДлина(МассивЭлементов[2]) <> 7 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если СтрДлина(МассивЭлементов[3]) < 1 
		ИЛИ СтрДлина(МассивЭлементов[3]) > 3 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#КонецЕсли
