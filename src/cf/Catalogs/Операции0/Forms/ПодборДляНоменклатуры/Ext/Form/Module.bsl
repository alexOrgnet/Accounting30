#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Организация = Параметры.Организация;
	Период.ДатаНачала = Параметры.НачалоПериода;
	Период.ДатаОкончания = Параметры.КонецПериода;
	
	ИспользоватьНесколькоОрганизаций = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизацийБухгалтерскийУчет");
	ЭтоГруппа = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "ЭтоГруппа");
	Элементы.ДекорацияЗаголовок.Заголовок = ЗаголовокДекорации(ИспользоватьНесколькоОрганизаций, Период, Организация, Номенклатура, ЭтоГруппа);
	Элементы.Организация.Видимость = ИспользоватьНесколькоОрганизаций;
	
	ИсключитьОперации = Новый Массив;
	ИсключитьОперации.Добавить("");
	ИсключитьОперации.Добавить("ВозвратОтказ");
	ИсключитьОперации.Добавить("КорректировкаЦены");
	ИсключитьОперации.Добавить("Реэкспорт");
	Дата = ОбщегоНазначения.ТекущаяДатаПользователя();
	ТаблицаКодовОпераций.Загрузить(УчетНДС.ПредставлениеОперацийПоСтавке0(Дата, , ИсключитьОперации));
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПоискНоменклатурОпераций0();
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьОперации0(Команда)
	
	ИзменитьОперацииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура Применить(Команда)
	ЭтоГруппа = ЭтоГруппа(Номенклатура);
	Элементы.ДекорацияЗаголовок.Заголовок = ЗаголовокДекорации(ИспользоватьНесколькоОрганизаций, Период, Организация, Номенклатура, ЭтоГруппа);
	Элементы.ГруппаНастройки.Скрыть();
	
	ПоискНоменклатурОпераций0();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Элементы.ГруппаНастройки.Скрыть();
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияЗакрытьПодсказкуНажатие(Элемент)
	Элементы.ДекорацияПодсказка.Видимость = Ложь;
	Элементы.ДекорацияЗакрытьПодсказку.Видимость= Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПодсказкаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	Если НавигационнаяСсылкаФорматированнойСтроки = "Номенклатура" Тогда
		ПерейтиПоНавигационнойСсылке("e1cib/list/Справочник.Номенклатура");
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРезультатПоискаПустойОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	Если НавигационнаяСсылкаФорматированнойСтроки = "Номенклатура" Тогда
		ПерейтиПоНавигационнойСсылке("e1cИндексb/lИндексst/Справочник.Номенклатура");
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенное(Команда)
	
	ИзменитьВыделенное = Истина;
	ОповещениеОВыборе = Новый ОписаниеОповещения("ПослеВыбораОперации0",ЭтотОбъект,Новый Структура);
	ПараметрыФормы = Новый Структура("Операции0",Элементы.ТаблицаНомерклатурОпераций0.ТекущиеДанные.Операции);
	ОткрытьФорму("Справочник.Операции0.ФормаВыбора",ПараметрыФормы, ЭтотОбъект, Истина,,,ОповещениеОВыборе);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элементы.ТаблицаНомерклатурОпераций0.ТекущиеДанные <> Неопределено Тогда
	
		Если Поле.Имя = "ТаблицаОперации0" Тогда
			
			Если Элементы.ТаблицаНомерклатурОпераций0.ТекущиеДанные.КлючСтроки = "" Тогда
				
				ТекДанныеСостав = Элементы.ТаблицаНомерклатурОпераций0.ТекущиеДанные;
				ТекДанныеСостав.КлючСтроки = Новый УникальныйИдентификатор;
			
			КонецЕсли;
			
			Если СтрНачинаетсяС(Элементы.ТаблицаНомерклатурОпераций0.ТекущиеДанные.ПредставлениеОпераций,"Выбрать") Тогда
				
				ПараметрыФормы = Новый Структура;
				ПодобранныеОперации = Новый Массив;
				МассивСтрок = ТаблицаПодобранныхОпераций.НайтиСтроки(Новый Структура("КлючСтроки",Элементы.ТаблицаНомерклатурОпераций0.ТекущиеДанные.КлючСтроки));
				
				Для Каждого СтрокаТЧ Из МассивСтрок Цикл
					ПодобранныеОперации.Добавить(СтрокаТЧ.Операции);
				КонецЦикла;
				
				Если ПодобранныеОперации.Количество() > 0 Тогда
					ПараметрыФормы.Вставить("Операции0",ПодобранныеОперации[0]);
				КонецЕсли;
				
				ОповещениеОВыборе = Новый ОписаниеОповещения("ПослеВыбораОперации0",ЭтотОбъект,Новый Структура);
				ПараметрыФормы.Вставить("ПодобранныеОперации", ПодобранныеОперации);
				ОткрытьФорму("Справочник.Операции0.ФормаВыбора",ПараметрыФормы, ЭтотОбъект, Истина,,,ОповещениеОВыборе);
				
			Иначе
				
				ОповещениеОВыборе = Новый ОписаниеОповещения("ПослеВыбораОперации0",ЭтотОбъект,Новый Структура);
				ПараметрыФормы = Новый Структура("Операции0",Элементы.ТаблицаНомерклатурОпераций0.ТекущиеДанные.Операции);
				ОткрытьФорму("Справочник.Операции0.ФормаВыбора",ПараметрыФормы, ЭтотОбъект, Истина,,,ОповещениеОВыборе);
				
			КонецЕсли;
			
			СтандартнаяОбработка = Ложь;
			
		КонецЕсли;
		
		Если Поле.Имя = "ТаблицаНоменклатура" Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Ключ",Элементы.ТаблицаНомерклатурОпераций0.ТекущиеДанные.Номенклатура);
			ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаЭлемента",ПараметрыФормы, ЭтотОбъект, Истина);
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПередУдалением(Элемент, Отказ)
	
	ВыделенныеСтроки = Элементы.ТаблицаНомерклатурОпераций0.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Для Каждого ИдСтроки Из ВыделенныеСтроки Цикл
		ТекДанные = ТаблицаНомерклатурОпераций0.НайтиПоИдентификатору(ИдСтроки);
		Если ТекДанные <> Неопределено Тогда
			Если ЗначениеЗаполнено(ТекДанные.КлючСтроки) Тогда
				// Необходимо очистить дополнительные сведения
				НоваяСтрока = ТаблицаУдаленныхКлючей.Добавить();
				НоваяСтрока.КлючСтроки = ТекДанные.КлючСтроки;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ПодключитьОбработчикОжидания("Подключаемый_УдалитьСвязанныеЗаписи", 0.1, Истина);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИзменитьОперацииНаСервере()
	
	Если ТаблицаНомерклатурОпераций0.Количество() > 0 Тогда
		
		Отбор = Новый Структура();
		Отбор.Вставить("РазныеОперации", Истина);
		СтрокиТаблицы = ТаблицаНомерклатурОпераций0.НайтиСтроки(Отбор);
		
		Если СтрокиТаблицы.Количество() > 0 Тогда
			
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("ru = 'Изменения не выполнены. '")+
				НСтр("ru = 'В таблице присутствует неоднозначное определение операций НДС 0% для номенклатурных позициий. Устраните дубли.'");
			Сообщение.Сообщить();
			
			Возврат;
			
		КонецЕсли;
		
		КоличествоУспешных = 0;
		ТекстНеуспешныхСообщений = "";
		
		Для Каждого СтрокаТаблицы Из ТаблицаНомерклатурОпераций0 Цикл
			
			Если ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура)
				И ЗначениеЗаполнено(СтрокаТаблицы.Операции) Тогда
			
				Попытка
					
					ОбъектНоменклатура = СтрокаТаблицы.Номенклатура.ПолучитьОбъект();
					ОбъектНоменклатура.Операции0 = СтрокаТаблицы.Операции;
					ОбъектНоменклатура.Записать();
					
					СтрокаТаблицы.ПредставлениеТекущихОпераций = СтрокаТаблицы.ПредставлениеОпераций;
					
					КоличествоУспешных = КоличествоУспешных + 1;
					
				Исключение
					
					ТекстСообщения = НСтр("ru = 'Ошибка при попытке изменить реквизит ""Операции НДС 0%"" для номенклатуры '")+
						СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = '""%1"" по причине: %2'"),
							СтрокаТаблицы.Номенклатура,
							ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
							
					ЗаписьЖурналаРегистрации("Попытка изменить реквизит ""Операции НДС 0%"" для номенклатуры", УровеньЖурналаРегистрации.Ошибка,, 
							СтрокаТаблицы.Номенклатура, ТекстСообщения);
							
					ТекстНеуспешныхСообщений = ТекстНеуспешныхСообщений + ТекстСообщения + Символы.ПС;
					
				КонецПопытки;
			
			КонецЕсли;
			
		КонецЦикла;
		
		Сообщение = Новый СообщениеПользователю();

		Если КоличествоУспешных = ТаблицаНомерклатурОпераций0.Количество() Тогда
			
			Сообщение.Текст = НСтр("ru = 'Изменения приняты для всех номенклатурных позиций.'");
			
		Иначе
			
			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Изменено номенклатурных позиций: %1 из %2 .'"), 
						КоличествоУспешных,
						ТаблицаНомерклатурОпераций0.Количество());
			
		КонецЕсли;
		
		Сообщение.Сообщить();
		
		Если ТекстНеуспешныхСообщений <> "" Тогда
			
			Сообщение.Текст = ТекстНеуспешныхСообщений;
			Сообщение.Сообщить();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискНоменклатурОпераций0()
	// 1. Запуск фонового задания на сервере.
	ДлительнаяОперация = НачатьПоиск();
	
	// 2. Подключение обработчика завершения фонового задания.
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	Оповещение = Новый ОписаниеОповещения("ПриЗавершенииПоиска", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоГруппа(Знач Номенклатура)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "ЭтоГруппа");
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЗаголовокДекорации( Знач ИспользоватьНесколькоОрганизаций, Знач Период, Знач Организация, Знач Номенклатура, Знач ЭтоГруппа)
	
	НДС0Шаблон = НСтр("ru = 'НДС 0%'");
	ДатаНачалаШаблон = "";
	ДатаОкончанияШаблон = "";
	ОрганизацияШаблон = "";
	НоменклатураШаблон = "";
	
	Если ЗначениеЗаполнено(Период.ДатаНачала) Тогда
		ДатаНачалаШаблон = СтрШаблон(НСтр("ru = ' с %1'"),
			Формат(Период.ДатаНачала, "ДЛФ=Д"));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Период.ДатаОкончания) Тогда
		ДатаОкончанияШаблон = СтрШаблон(НСтр("ru = ' по %1'"),
			Формат(Период.ДатаОкончания, "ДЛФ=Д"));
	КонецЕсли;
	
	Если ИспользоватьНесколькоОрганизаций
		И ЗначениеЗаполнено(Организация) Тогда
		ОрганизацияШаблон = СтрШаблон(НСтр("ru = ' (%1)'"),
			СокрЛП(Строка(Организация)));
	КонецЕсли;
		
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		ГруппаШаблон = "";
		Если ЭтоГруппа Тогда
			ГруппаШаблон = НСтр("ru = 'группы '");
		КонецЕсли;
		НоменклатураШаблон = СтрШаблон(НСтр("ru = '%1""%2"" '"),
			ГруппаШаблон,
			СокрЛП(Строка(Номенклатура)));
	КонецЕсли;
	
	Возврат СтрШаблон(
			НСтр("ru = 'Номенклатура %1из реализаций по ставке %2%3%4%5'"),
				НоменклатураШаблон,
				НДС0Шаблон,
				ДатаНачалаШаблон,
				ДатаОкончанияШаблон,
				ОрганизацияШаблон);
	
КонецФункции

&НаСервере
Функция НачатьПоиск()
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыЗначений = Новый Структура;
	ПараметрыЗначений.Вставить("ТаблицаКодовОпераций", ДанныеФормыВЗначение(ТаблицаКодовОпераций,Тип("ТаблицаЗначений")));
	ПараметрыЗначений.Вставить("НачалоПериода",        Период.ДатаНачала);
	ПараметрыЗначений.Вставить("КонецПериода",         Период.ДатаОкончания);
	ПараметрыЗначений.Вставить("Организация",          Организация);
	ПараметрыЗначений.Вставить("Номенклатура",         Номенклатура);
	ПараметрыЗначений.Вставить("ЭтоГруппа",            Номенклатура.ЭтоГруппа);
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, 
												"Справочники.Операции0.ПодобратьОперации0",
												ПараметрыЗначений);
												
КонецФункции

// Обработка результата выполнения фонового задания
&НаКлиенте
Процедура ПриЗавершенииПоиска(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда // Пользователь отменил задание.
		Элементы.ГруппаДекораций.Видимость = Ложь;
		Элементы.ТаблицаНомерклатурОпераций0.Видимость = Ложь;
		Элементы.ДекорацияРезультатПоискаПустой.Видимость = Истина;
		Возврат;
	КонецЕсли;

	Если Результат.Статус = "Ошибка" Тогда
		Элементы.ГруппаДекораций.Видимость = Ложь;
		Элементы.ТаблицаНомерклатурОпераций0.Видимость = Ложь;
		Элементы.ДекорацияРезультатПоискаПустой.Видимость = Истина;
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
	РезультатПоиска(Результат);
	УдалитьИзВременногоХранилища(Результат.АдресРезультата);

КонецПроцедуры

&НаСервере
Процедура РезультатПоиска(Результат)
	
	ТаблицаНомерклатурОпераций0.Загрузить(ПолучитьИзВременногоХранилища(Результат.АдресРезультата));
	
	Если ТаблицаНомерклатурОпераций0.Количество() > 0 Тогда
		
		Элементы.ДекорацияРезультатПоискаПустой.Видимость = Ложь;
		Элементы.ГруппаДекораций.Видимость = Истина;
		Элементы.ТаблицаНомерклатурОпераций0.Видимость = Истина;
		Элементы.ИзменитьОперации0.Доступность = Истина;
		
		НайденныеСтроки = ТаблицаНомерклатурОпераций0.НайтиСтроки(Новый Структура("РазныеОперации",Истина));
		Индекс = 0;
		КоличествоСтрок = НайденныеСтроки.Количество();
		ТаблицаПодобранныхОпераций.Очистить();
		УдалитьСтроки = Новый Массив;
		
		Пока Индекс < КоличествоСтрок Цикл
			
			НоменклатурнаяПозиция = НайденныеСтроки[Индекс].Номенклатура;
			НайденныеСтроки[Индекс].КлючСтроки = Новый УникальныйИдентификатор;
			КоличествоОпераций = 0;
			Позиция = 0;
			Пока НоменклатурнаяПозиция = НайденныеСтроки[Индекс + Позиция].Номенклатура Цикл
				
				Если КоличествоОпераций > 0 Тогда
					УдалитьСтроки.Добавить(НайденныеСтроки[Индекс + Позиция]);
				КонецЕсли;
				
				СтрокаПодобранныхОпераций = ТаблицаПодобранныхОпераций.Добавить();
				СтрокаПодобранныхОпераций.Операции = НайденныеСтроки[Индекс + Позиция].Операции;
				СтрокаПодобранныхОпераций.КлючСтроки = НайденныеСтроки[Индекс].КлючСтроки;
				
				КоличествоОпераций = КоличествоОпераций + 1;
				Позиция = Позиция + 1;
				Если Индекс + Позиция = КоличествоСтрок Тогда
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			НайденныеСтроки[Индекс].ПредставлениеОпераций = НСтр("ru = 'Выбрать из списка:. '")+
								НайденныеСтроки[Индекс].Операции + НСтр("ru = 'и ещё '")+
								Формат(КоличествоОпераций - 1, "ЧН=0; ЧГ=");
			Индекс = Индекс + Позиция;
			
		КонецЦикла;
		
		Индекс = 0;
		КоличествоСтрок = УдалитьСтроки.Количество();
		
		Пока Индекс < КоличествоСтрок Цикл
			ТаблицаНомерклатурОпераций0.Удалить(УдалитьСтроки[Индекс]);
			Индекс = Индекс + 1;
		КонецЦикла;
		
	Иначе
		
		Элементы.ДекорацияРезультатПоискаПустой.Видимость = Истина;
		Элементы.ГруппаДекораций.Видимость = Ложь;
		Элементы.ТаблицаНомерклатурОпераций0.Видимость = Ложь;
		Элементы.ИзменитьОперации0.Доступность = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеВыбораОперации0(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		Если ИзменитьВыделенное Тогда
			
			ВыделенныеСтроки = Элементы.ТаблицаНомерклатурОпераций0.ВыделенныеСтроки;
			
			Если ВыделенныеСтроки.Количество() = 0 Тогда
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			
			Для Каждого ИдСтроки Из ВыделенныеСтроки Цикл
				ТекДанные = ТаблицаНомерклатурОпераций0.НайтиПоИдентификатору(ИдСтроки);
				Если ТекДанные <> Неопределено Тогда
					Отбор = Новый Структура("Операции", Результат);
					НайденныеСтроки = ТаблицаКодовОпераций.НайтиСтроки(Отбор);
					Если НайденныеСтроки.Количество() > 0 Тогда
						ТекДанные.Операции = НайденныеСтроки[0].Операции;
						ТекДанные.ПредставлениеОпераций = НайденныеСтроки[0].ПредставлениеОпераций;
						ТекДанные.РазныеОперации = Ложь;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			ИзменитьВыделенное = Ложь;
			
		ИначеЕсли Элементы.ТаблицаНомерклатурОпераций0.ТекущиеДанные <> Неопределено Тогда
		
			Отбор = Новый Структура("Операции", Результат);
			
			НайденныеСтроки = ТаблицаКодовОпераций.НайтиСтроки(Отбор);
			Если НайденныеСтроки.Количество() > 0 Тогда
				Элементы.ТаблицаНомерклатурОпераций0.ТекущиеДанные.Операции = НайденныеСтроки[0].Операции;
				Элементы.ТаблицаНомерклатурОпераций0.ТекущиеДанные.ПредставлениеОпераций = НайденныеСтроки[0].ПредставлениеОпераций;
				Элементы.ТаблицаНомерклатурОпераций0.ТекущиеДанные.РазныеОперации = Ложь;
			КонецЕсли;
		
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_УдалитьСвязанныеЗаписи()
	
	УдалитьСвязанныеЗаписиНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСвязанныеЗаписиНаСервере()
	
	Для Каждого СтрокаКлюча Из ТаблицаУдаленныхКлючей Цикл
		
		КлючПоиска = Новый Структура("КлючСтроки", СтрокаКлюча.КлючСтроки);
		
		МассивСтрок = ТаблицаПодобранныхОпераций.НайтиСтроки(КлючПоиска);
		Для Каждого СтрокаТЧ Из МассивСтрок Цикл
			ТаблицаПодобранныхОпераций.Удалить(СтрокаТЧ);
		КонецЦикла;
		
	КонецЦикла;
	
	ТаблицаУдаленныхКлючей.Очистить();
	
КонецПроцедуры

#КонецОбласти

