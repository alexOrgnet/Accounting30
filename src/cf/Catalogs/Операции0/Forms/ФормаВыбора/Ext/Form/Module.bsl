#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ПодобранныеОперации") Тогда
		ПолучитьТаблицуГруппКодовОпераций(Параметры.ПодобранныеОперации);
		Элементы.ПоказатьВсе.Видимость = Истина;
		ЭтотОбъект.Заголовок = "Операции НДС 0%: Рекомендуемые операции";
	Иначе
		ПолучитьТаблицуГруппКодовОпераций();
	КонецЕсли;

	Если Параметры.Свойство("Операции0") Тогда
		НайденныеСтроки = ТаблицаСКодами.НайтиСтроки(Новый Структура ("Ссылка",Параметры.Операции0));
		Если НайденныеСтроки.Количество() > 0 Тогда
			Элементы.ТаблицаСКодами.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСКодамиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ТаблицаСКодамиСсылка" Тогда
		Закрыть(Элементы.ТаблицаСКодами.ТекущиеДанные.Ссылка);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура Выбрать(Команда)
	Закрыть(Элементы.ТаблицаСКодами.ТекущиеДанные.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсе(Команда)
	Элементы.ПоказатьВсе.Видимость = Ложь;
	ЭтотОбъект.Заголовок = "Операции НДС 0%";
	ПолучитьТаблицуГруппКодовОпераций();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПолучитьТаблицуГруппКодовОпераций(ПодобранныеОперации = Неопределено)
	
	КлассификаторXML = ПолучитьОбщийМакет("ПереченьКодовОпераций0").ПолучитьТекст();
	
	Чтение = Новый ЧтениеXML;
	Чтение.УстановитьСтроку(КлассификаторXML);
	ТаблицаКодовОпераций0 = СериализаторXDTO.ПрочитатьXML(Чтение); // ТаблицаЗначений
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Исключения = Новый Массив;
	Исключения.Добавить("ВозвратОтказ");
	Исключения.Добавить("КорректировкаЦены");
	Исключения.Добавить("Реэкспорт");
	
	Запрос.Параметры.Вставить("ДатаЗапроса", ОбщегоНазначения.ТекущаяДатаПользователя());
	Запрос.Параметры.Вставить("ТаблицаКодовОпераций0", ТаблицаКодовОпераций0);
	Запрос.Параметры.Вставить("Исключения",Исключения);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаКодовОпераций0.Код КАК Код,
		|	ТаблицаКодовОпераций0.ДатаНачала КАК ДатаНачала,
		|	ТаблицаКодовОпераций0.ДатаОкончания КАК ДатаОкончания,
		|	ТаблицаКодовОпераций0.Классификация КАК Классификация
		|ПОМЕСТИТЬ КодыОпераций0
		|ИЗ
		|	&ТаблицаКодовОпераций0 КАК ТаблицаКодовОпераций0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Код,
		|	ДатаОкончания,
		|	ДатаНачала,
		|	Классификация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Операции0.Ссылка КАК Ссылка,
		|	КодыОпераций0.Код КАК КодОперации
		|ИЗ
		|	Справочник.Операции0 КАК Операции0
		|		ЛЕВОЕ СОЕДИНЕНИЕ КодыОпераций0 КАК КодыОпераций0
		|		ПО Операции0.Код = КодыОпераций0.Классификация
		|ГДЕ
		|	НЕ КодыОпераций0.Классификация В (&Исключения)
		|	И (КодыОпераций0.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
		|				И КодыОпераций0.ДатаНачала <= &ДатаЗапроса
		|			ИЛИ &ДатаЗапроса МЕЖДУ КодыОпераций0.ДатаНачала И КодыОпераций0.ДатаОкончания)
		|	И &ПодобранныеОперации
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|ИТОГИ ПО
		|	Ссылка
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	Если ПодобранныеОперации = Неопределено Тогда
		
		Запрос.Параметры.Вставить("ПодобранныеОперации", Истина);
		
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ПодобранныеОперации", "Операции0.Ссылка В (&ПодобранныеОперации)");
		Запрос.Параметры.Вставить("ПодобранныеОперации", ПодобранныеОперации);
		
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаПоГруппам = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТаблицаСКодами.Очистить();
	
	Пока ВыборкаПоГруппам.Следующий() Цикл
		
		СтрокаТаблицы = ТаблицаСКодами.Добавить();
		СтрокаТаблицы.Ссылка = ВыборкаПоГруппам.Ссылка;
		
		ВыборкаПоКодам = ВыборкаПоГруппам.Выбрать();
		
		Пока ВыборкаПоКодам.Следующий() Цикл
			
			СтрокаТаблицы.КодОперации = СтрокаТаблицы.КодОперации + ?(ЗначениеЗаполнено(СтрокаТаблицы.КодОперации), "; ", "") + ВыборкаПоКодам.КодОперации;
			
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти
