
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбновлениеИнформационнойБазы

Процедура ЗаполнитьПериодКратностьОстатокПоКурсу(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
	|	РегламентнаяОперация.Дата КАК Период,
	|	РасчетПереоценки.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрСведений.РасчетПереоценкиВалютныхСредств КАК РасчетПереоценки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|		ПО РасчетПереоценки.Регистратор = РегламентнаяОперация.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО РасчетПереоценки.Организация = Организации.Ссылка
	|ГДЕ
	|	(РасчетПереоценки.Период = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ РасчетПереоценки.Кратность = 0
	|			ИЛИ РасчетПереоценки.ОстатокПоКурсуПереоценки = 0
	|				И РасчетПереоценки.ОстатокВРублях + РасчетПереоценки.СуммаПереоценки <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ,
	|	Регистратор УБЫВ";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Ложь;
	ОбъектовОбработано = 0;
	ПроблемныхОбъектов = 0;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбъектовОбработано = ОбъектовОбработано + 1;
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.РасчетПереоценкиВалютныхСредств.НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Регистратор);
			Блокировка.Заблокировать();
			
			Набор = РегистрыСведений.РасчетПереоценкиВалютныхСредств.СоздатьНаборЗаписей();
			Набор.Отбор.Регистратор.Установить(Выборка.Регистратор);
			Набор.Прочитать();
			
			Для каждого Запись Из Набор Цикл
				Запись.Период = Выборка.Период;
				Если Запись.Кратность = 0 Тогда
					Запись.Кратность = 1;
				КонецЕсли;
				Если Запись.ОстатокПоКурсуПереоценки = 0 Тогда
					Запись.ОстатокПоКурсуПереоценки = Запись.ОстатокВРублях + Запись.СуммаПереоценки;
				КонецЕсли;
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(Набор);
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			ОтменитьТранзакцию();
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В процедуре РегистрСведений.РасчетПереоценкиВалютныхСредств.ЗаполнитьПериодКратностьОстатокПоКурсу() не удалось обработать набор записей по причине:
					|%1'"),
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.РегистрыСведений.РасчетПереоценкиВалютныхСредств, 
				Выборка.Регистратор, 
				ТекстСообщения);
				
		КонецПопытки;
		
	КонецЦикла;
	
	Если ПроблемныхОбъектов > 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'В процедуре РегистрСведений.РасчетПереоценкиВалютныхСредств.ЗаполнитьПериодКратностьОстатокПоКурсу() не удалось обработать часть наборов записей: в %1 из %2 возникли ошибки'"),
				ПроблемныхОбъектов,
				ОбъектовОбработано);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Информация,
			Метаданные.РегистрыСведений.РасчетПереоценкиВалютныхСредств, ,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Процедура РегистрСведений.РасчетПереоценкиВалютныхСредств.ЗаполнитьПериодКратностьОстатокПоКурсу() обработала очередную порцию: %1 наборов записей'"), 
				ОбъектовОбработано));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
