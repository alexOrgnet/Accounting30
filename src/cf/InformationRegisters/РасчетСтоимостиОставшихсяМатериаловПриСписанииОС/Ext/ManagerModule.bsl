#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция НовыйТаблицаРасчетСтоимостиТоваров() Экспорт
	
	РасчетСтоимостиТоваров = Новый ТаблицаЗначений;
	
	МетаданныеРегистра = Метаданные.РегистрыСведений.РасчетСтоимостиОставшихсяМатериаловПриСписанииОС;
	РасчетСтоимостиТоваров.Колонки.Добавить("ОсновноеСредство", МетаданныеРегистра.Измерения.ОсновноеСредство.Тип);
	РасчетСтоимостиТоваров.Колонки.Добавить("НомерСтрокиМатериала", МетаданныеРегистра.Измерения.НомерСтрокиМатериала.Тип);
	
	РасчетСтоимостиТоваров.Колонки.Добавить("Количество", МетаданныеРегистра.Ресурсы.Количество.Тип);
	РасчетСтоимостиТоваров.Колонки.Добавить("Стоимость", МетаданныеРегистра.Ресурсы.Стоимость.Тип);
	РасчетСтоимостиТоваров.Колонки.Добавить("СтоимостьБухгалтерскийУчет", МетаданныеРегистра.Ресурсы.СтоимостьБухгалтерскийУчет.Тип);
	РасчетСтоимостиТоваров.Колонки.Добавить("ДоляСтоимости", МетаданныеРегистра.Ресурсы.ДоляСтоимости.Тип);
	
	РасчетСтоимостиТоваров.Колонки.Добавить("БалансоваяСтоимостьОС", МетаданныеРегистра.Реквизиты.БалансоваяСтоимостьОС.Тип);
	РасчетСтоимостиТоваров.Колонки.Добавить("ЗатратыНаСписаниеОС", МетаданныеРегистра.Реквизиты.ЗатратыНаСписаниеОС.Тип);
	РасчетСтоимостиТоваров.Колонки.Добавить("Номенклатура", МетаданныеРегистра.Реквизиты.Номенклатура.Тип);
	
	Возврат РасчетСтоимостиТоваров;
	
КонецФункции

Процедура СформироватьДвиженияРасчетаСтоимостиОставшихсяЦенностей(РасчетСтоимости, ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	Если Не ЗначениеЗаполнено(РасчетСтоимости) Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыРасчетаСтоимостиОставшихсяЦенностей(РасчетСтоимости, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
	
	Для Каждого СтрокаТаблицы Из Параметры.РасчетСтоимости Цикл
		
		Запись = Движения.РасчетСтоимостиОставшихсяМатериаловПриСписанииОС.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, СтрокаТаблицы);
		Запись.Организация = Реквизиты.Организация;
		
	КонецЦикла;
	
	Движения.РасчетСтоимостиОставшихсяМатериаловПриСписанииОС.Записывать = Истина;
	
КонецПроцедуры

Функция ПечатьСправкиРасчета(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_СтоимостьОставшихсяМатериаловПриСписанииОС";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("РегистрСведений.РасчетСтоимостиОставшихсяМатериаловПриСписанииОС.ПФ_MXL_РасчетСтоимостиОставшихсяМатериалов");
	
	ДанныеДляПечатиНакладной = ДанныеДляПечатиСправки(МассивОбъектов);
	
	ПерваяПечатнаяФорма = Истина;
	ТекущийДокумент = Неопределено;
	
	Для Каждого Шапка Из ДанныеДляПечатиНакладной Цикл
		
		Если Не ПерваяПечатнаяФорма Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПерваяПечатнаяФорма = Ложь;
		
		Если ТекущийДокумент = Неопределено
			Или ТекущийДокумент <> Шапка.Ссылка Тогда
			// Запомним номер строки, с которой начали выводить текущий документ.
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		КонецЕсли;
		
		// Выводим шапку справки-расчета
		СведенияОбОрганизации    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации,
			"НаименованиеДляПечатныхФорм,");
		
		ЗначенияПечатнойФормы = Новый Структура();
		ЗначенияПечатнойФормы.Вставить("ОрганизацияПредставление", ПредставлениеОрганизации);
		ЗначенияПечатнойФормы.Вставить("ОсновноеСредство", Шапка.ОсновноеСредство);
		ЗначенияПечатнойФормы.Вставить("ОсновноеСредствоПредставление", Шапка.ОсновноеСредствоПредставление);
		ЗначенияПечатнойФормы.Вставить("ДокументПредставление", Шапка.ДокументПредставление);
		ЗначенияПечатнойФормы.Вставить("Ссылка", Шапка.Ссылка);
		ЗначенияПечатнойФормы.Вставить("РасходыПриСписании", Шапка.БалансоваяСтоимостьОС + Шапка.ЗатратыНаСписаниеОС);
		ЗначенияПечатнойФормы.Вставить("БалансоваяСтоимостьОС", Шапка.БалансоваяСтоимостьОС);
		ЗначенияПечатнойФормы.Вставить("ЗатратыНаСписаниеОС", Шапка.ЗатратыНаСписаниеОС);
		ЗначенияПечатнойФормы.Вставить("СтоимостьМатериалов", Шапка.Стоимость);
		ЗначенияПечатнойФормы.Вставить("СтоимостьМатериаловБухгалтерскийУчет", Шапка.СтоимостьБухгалтерскийУчет);
		УбытокОтСписания = Шапка.БалансоваяСтоимостьОС + Шапка.ЗатратыНаСписаниеОС - Шапка.СтоимостьБухгалтерскийУчет;
		ЗначенияПечатнойФормы.Вставить("УбытокОтСписания", УбытокОтСписания);
		
		Если Шапка.Стоимость <> Шапка.СтоимостьБухгалтерскийУчет Тогда
			ЗначенияПечатнойФормы.Вставить("СноскаСтоимостьМатериалов", "*");
			ЗначенияПечатнойФормы.Вставить("СноскаСтоимостьБУ", "**");
		КонецЕсли;
		
		Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Организация, Шапка.Дата);
		ЗначенияПечатнойФормы.Вставить("ДолжностьОтветственногоЗаРегистрыБухУчета",
			Руководители.ОтветственныйЗаБухгалтерскиеРегистрыДолжностьПредставление);
		ЗначенияПечатнойФормы.Вставить("РасшифровкаПодписиОтветственногоЗаРегистрыБухУчета",
			Руководители.ОтветственныйЗаБухгалтерскиеРегистрыПредставление);
		
		// Выводим печатную форму
		ВывестиСекцию("Шапка", ЗначенияПечатнойФормы, Макет, ТабличныйДокумент);
		
		ВывестиСекцию("Показатели", ЗначенияПечатнойФормы, Макет, ТабличныйДокумент);
		
		ВывестиСекцию("ШапкаРаздел2", ЗначенияПечатнойФормы, Макет, ТабличныйДокумент);
		
		ВывестиСекцию("ШапкаСтрокиДокумента", ЗначенияПечатнойФормы, Макет, ТабличныйДокумент);
		
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаДокумента");
		Для Каждого СтрокаМатериала Из Шапка.Материалы Цикл
			ОбластьМакета.Параметры.Заполнить(СтрокаМатериала);
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
		
		ВывестиСекцию("ПодвалСтрокиДокумента", ЗначенияПечатнойФормы, Макет, ТабличныйДокумент);
		
		ВывестиСекцию("Подвал", ЗначенияПечатнойФормы, Макет, ТабличныйДокумент);
		
		Если ЗначенияПечатнойФормы.Свойство("СноскаСтоимостьМатериалов") Тогда
			ВывестиСекцию("СноскиСтоимости", ЗначенияПечатнойФормы, Макет, ТабличныйДокумент);
		КонецЕсли;
		
		Если ТекущийДокумент = Неопределено
			Или ТекущийДокумент <> Шапка.Ссылка Тогда
			// В табличном документе зададим имя области, в которую был 
			// выведен объект. Нужно для возможности печати покомплектно.
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
				НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		КонецЕсли;
		ТекущийДокумент = Шапка.Ссылка;
	
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеДляПечатиСправки(МассивОбъектов)
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписаниеОСОС.Ссылка КАК Ссылка,
	|	СписаниеОСОС.НомерСтроки КАК НомерСтроки,
	|	СписаниеОСОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(МАКСИМУМ(РасчетСтоимостиОставшихсяМатериаловПриСписанииОС.БалансоваяСтоимостьОС), 0) КАК БалансоваяСтоимостьОС,
	|	ЕСТЬNULL(МАКСИМУМ(РасчетСтоимостиОставшихсяМатериаловПриСписанииОС.ЗатратыНаСписаниеОС), 0) КАК ЗатратыНаСписаниеОС,
	|	ЕСТЬNULL(СУММА(РасчетСтоимостиОставшихсяМатериаловПриСписанииОС.Стоимость), 0) КАК Стоимость,
	|	ЕСТЬNULL(СУММА(РасчетСтоимостиОставшихсяМатериаловПриСписанииОС.СтоимостьБухгалтерскийУчет), 0) КАК СтоимостьБухгалтерскийУчет,
	|	ЕСТЬNULL(РасчетСтоимостиОставшихсяМатериаловПриСписанииОС.ОсновноеСредство.Наименование, """") КАК ОсновноеСредствоНаименование,
	|	ЕСТЬNULL(СписаниеОС.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|	ЕСТЬNULL(СписаниеОС.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата
	|ПОМЕСТИТЬ ВТ_СписанияОС
	|ИЗ
	|	Документ.СписаниеОС.ОС КАК СписаниеОСОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеОС КАК СписаниеОС
	|		ПО СписаниеОСОС.Ссылка = СписаниеОС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетСтоимостиОставшихсяМатериаловПриСписанииОС КАК РасчетСтоимостиОставшихсяМатериаловПриСписанииОС
	|		ПО СписаниеОСОС.Ссылка = РасчетСтоимостиОставшихсяМатериаловПриСписанииОС.Регистратор
	|			И СписаниеОСОС.ОсновноеСредство = РасчетСтоимостиОставшихсяМатериаловПриСписанииОС.ОсновноеСредство
	|ГДЕ
	|	СписаниеОСОС.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	СписаниеОСОС.Ссылка,
	|	СписаниеОСОС.НомерСтроки,
	|	СписаниеОСОС.ОсновноеСредство,
	|	РасчетСтоимостиОставшихсяМатериаловПриСписанииОС.ОсновноеСредство.Наименование,
	|	ЕСТЬNULL(СписаниеОС.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)),
	|	ЕСТЬNULL(СписаниеОС.Дата, ДАТАВРЕМЯ(1, 1, 1))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведенияОСБухгалтерскийУчет.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОСБухгалтерскийУчет.Организация КАК Организация,
	|	МАКСИМУМ(ПервоначальныеСведенияОСБухгалтерскийУчет.Период) КАК ПериодУстановки,
	|	ВТ_СписанияОС.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_ИнвентарныеНомераОС_Периоды
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК ПервоначальныеСведенияОСБухгалтерскийУчет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СписанияОС КАК ВТ_СписанияОС
	|		ПО ПервоначальныеСведенияОСБухгалтерскийУчет.ОсновноеСредство = ВТ_СписанияОС.ОсновноеСредство
	|			И ПервоначальныеСведенияОСБухгалтерскийУчет.Организация = ВТ_СписанияОС.Организация
	|			И ПервоначальныеСведенияОСБухгалтерскийУчет.Период <= ВТ_СписанияОС.Дата
	|
	|СГРУППИРОВАТЬ ПО
	|	ПервоначальныеСведенияОСБухгалтерскийУчет.ОсновноеСредство,
	|	ПервоначальныеСведенияОСБухгалтерскийУчет.Организация,
	|	ВТ_СписанияОС.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ИнвентарныеНомераОС_Периоды.Ссылка КАК Ссылка,
	|	ВТ_ИнвентарныеНомераОС_Периоды.ОсновноеСредство КАК ОсновноеСредство,
	|	ВТ_ИнвентарныеНомераОС_Периоды.Организация КАК Организация,
	|	ПервоначальныеСведенияОСБухгалтерскийУчет.ИнвентарныйНомер КАК ИнвентарныйНомер
	|ПОМЕСТИТЬ ВТ_ИнвентарныеНомера
	|ИЗ
	|	ВТ_ИнвентарныеНомераОС_Периоды КАК ВТ_ИнвентарныеНомераОС_Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК ПервоначальныеСведенияОСБухгалтерскийУчет
	|		ПО ВТ_ИнвентарныеНомераОС_Периоды.ОсновноеСредство = ПервоначальныеСведенияОСБухгалтерскийУчет.ОсновноеСредство
	|			И ВТ_ИнвентарныеНомераОС_Периоды.Организация = ПервоначальныеСведенияОСБухгалтерскийУчет.Организация
	|			И ВТ_ИнвентарныеНомераОС_Периоды.ПериодУстановки = ПервоначальныеСведенияОСБухгалтерскийУчет.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СписанияОС.Ссылка КАК Ссылка,
	|	ВТ_СписанияОС.НомерСтроки КАК НомерСтроки,
	|	ВТ_СписанияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ВТ_СписанияОС.ОсновноеСредствоНаименование КАК ОсновноеСредствоНаименование,
	|	ВТ_СписанияОС.БалансоваяСтоимостьОС КАК БалансоваяСтоимостьОС,
	|	ВТ_СписанияОС.ЗатратыНаСписаниеОС КАК ЗатратыНаСписаниеОС,
	|	ВТ_СписанияОС.Стоимость КАК Стоимость,
	|	ВТ_СписанияОС.СтоимостьБухгалтерскийУчет КАК СтоимостьБухгалтерскийУчет,
	|	ВТ_СписанияОС.Организация КАК Организация,
	|	ВТ_СписанияОС.Дата КАК Дата,
	|	ЕСТЬNULL(ВТ_ИнвентарныеНомера.ИнвентарныйНомер, """") КАК ОсновноеСредствоИнвентарныйНомер
	|ИЗ
	|	ВТ_СписанияОС КАК ВТ_СписанияОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИнвентарныеНомера КАК ВТ_ИнвентарныеНомера
	|		ПО ВТ_СписанияОС.Ссылка = ВТ_ИнвентарныеНомера.Ссылка
	|			И ВТ_СписанияОС.ОсновноеСредство = ВТ_ИнвентарныеНомера.ОсновноеСредство
	|			И ВТ_СписанияОС.Организация = ВТ_ИнвентарныеНомера.Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетСтоимостиОставшихсяМатериаловПриСписанииОС.Регистратор КАК Ссылка,
	|	РасчетСтоимостиОставшихсяМатериаловПриСписанииОС.ОсновноеСредство КАК ОсновноеСредство,
	|	РасчетСтоимостиОставшихсяМатериаловПриСписанииОС.НомерСтрокиМатериала КАК НомерСтроки,
	|	РасчетСтоимостиОставшихсяМатериаловПриСписанииОС.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(РасчетСтоимостиОставшихсяМатериаловПриСписанииОС.Номенклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)) КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(РасчетСтоимостиОставшихсяМатериаловПриСписанииОС.Номенклатура.ЕдиницаИзмерения.Представление, """") КАК ЕдиницаИзмеренияПредставление,
	|	РасчетСтоимостиОставшихсяМатериаловПриСписанииОС.Количество КАК Количество,
	|	РасчетСтоимостиОставшихсяМатериаловПриСписанииОС.Стоимость КАК Стоимость,
	|	РасчетСтоимостиОставшихсяМатериаловПриСписанииОС.СтоимостьБухгалтерскийУчет КАК СтоимостьБухгалтерскийУчет,
	|	ВЫБОР
	|		КОГДА РасчетСтоимостиОставшихсяМатериаловПриСписанииОС.Номенклатура.НаименованиеПолное = """"
	|			ТОГДА ЕСТЬNULL(РасчетСтоимостиОставшихсяМатериаловПриСписанииОС.Номенклатура.Наименование, """")
	|		ИНАЧЕ ЕСТЬNULL(РасчетСтоимостиОставшихсяМатериаловПриСписанииОС.Номенклатура.НаименованиеПолное, """")
	|	КОНЕЦ КАК НоменклатураПредставление
	|ИЗ
	|	РегистрСведений.РасчетСтоимостиОставшихсяМатериаловПриСписанииОС КАК РасчетСтоимостиОставшихсяМатериаловПриСписанииОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство,
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ДанныеДляПечати = РезультатЗапроса[РезультатЗапроса.Количество() - 2].Выгрузить();
	ДанныеДляПечати.Колонки.Добавить("Материалы", Новый ОписаниеТипов("ТаблицаЗначений"));
	ДанныеДляПечати.Колонки.Добавить("ДокументПредставление", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	ДанныеДляПечати.Колонки.Добавить("ОсновноеСредствоПредставление", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	ДанныеСтрок = РезультатЗапроса[РезультатЗапроса.Количество() - 1].Выгрузить();
	
	ПредставленияДокументов = ПредставленияДокументов(ДанныеДляПечати.ВыгрузитьКолонку("Ссылка"));
	
	Для Каждого СтрокаПечати Из ДанныеДляПечати Цикл
		
		ОтборСтрок = Новый Структура("Ссылка,ОсновноеСредство", СтрокаПечати.Ссылка, СтрокаПечати.ОсновноеСредство);
		СтрокаПечати.Материалы = ДанныеСтрок.Скопировать(ОтборСтрок);
		СтрокаПечати.Материалы.Сортировать("НомерСтроки");
		
		СтрокаПечати.ДокументПредставление = ПредставленияДокументов.Получить(СтрокаПечати.Ссылка);
		СтрокаПечати.ОсновноеСредствоПредставление = СтрШаблон(НСтр("ru = '%1, инв.№ %2'"),
			СтрокаПечати.ОсновноеСредствоНаименование, СтрокаПечати.ОсновноеСредствоИнвентарныйНомер);
		
	КонецЦикла;
	
	Возврат ДанныеДляПечати;
	
КонецФункции

Функция ВывестиСекцию(ИмяСекции, ЗначенияПечатнойФормы, Макет, ТабличныйДокумент)
	
	ОбластьМакета = Макет.ПолучитьОбласть(ИмяСекции);
	ОбластьМакета.Параметры.Заполнить(ЗначенияПечатнойФормы);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПодготовитьПараметрыРасчетаСтоимостиОставшихсяЦенностей(РасчетСтоимости, ТаблицаРеквизиты)
	
	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.РасчетСтоимости

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство,"           // <СправочникСсылка.ОсновныеСредства> - основное средство, по которому получен доход от оприходования ценностей.
	+ "НомерСтрокиМатериала,"       // <Число,10,0> - номер строки ценности по конкретному ОС
	+ "Количество,"                 // <Число,15,3> - количество полученных товаров
	+ "Стоимость,"                  // <Число,15,2> - рыночная стоимость материалов
	+ "СтоимостьБухгалтерскийУчет," // <Число,15,2> - стоимость материала в бухгалтерском учете
	+ "ДоляСтоимости,"              // <Число,6,5> - доля рыночной стоимости материала по сравнению с рыночной стоимостью всех материалов
	+ "БалансоваяСтоимостьОС,"      // <Число,15,2> - балансовая стоимость ОС в бухгалтерском учете
	+ "ЗатратыНаСписаниеОС,"        // <Число,15,2> - затраты на списание ОС в бухгалтерском учете
	+ "Номенклатура";               // <СправочникСсылка.Номенклатура> - оставшийся материал.
	
	Параметры.Вставить("РасчетСтоимости",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(РасчетСтоимости, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Регистратор,"                // <ДокументСсылка.*> - документ-регистратор движений
	+ "Организация";                // <СправочникСсылка.Организация> - организация, в которую приходуется товар

	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;
	
КонецФункции

Функция ПредставленияДокументов(ДокументыДляПолученияПредставления)
	
	ПредставленияДокументов = Новый Соответствие;
	
	РеквизитыДокументов = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(ДокументыДляПолученияПредставления, "Дата,Номер");
	Для Каждого РеквизитыДокумента Из РеквизитыДокументов Цикл
		
		Если ТипЗнч(РеквизитыДокумента.Ключ) = Тип("ДокументСсылка.СписаниеОС") Тогда
			ПредставлениеТипа = НСтр("ru = 'Акт о списании объекта основных средств'");
		Иначе
			ПредставлениеТипа = РеквизитыДокумента.Ключ.Метаданные().Синоним;
		КонецЕсли;
		
		ПредставленияДокументов.Вставить(РеквизитыДокумента.Ключ,
			СтрШаблон(НСтр("ru = '%1 № %2 от %3'"),
				ПредставлениеТипа,
				ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыДокумента.Значение.Номер, Истина, Ложь),
				Формат(РеквизитыДокумента.Значение.Дата, "ДЛФ=D")));
		
	КонецЦикла;
	
	Возврат ПредставленияДокументов;
	
КонецФункции

#КонецОбласти

#КонецЕсли
