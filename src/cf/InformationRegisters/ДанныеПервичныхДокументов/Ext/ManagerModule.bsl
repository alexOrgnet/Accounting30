#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает основные реквизиты документа по данным регистра
//
// Параметры:
//   ДокументСсылка - документ, для которого требуется получить основные реквизиты
//
// Возвращаемое значение:
//   Структура    - из КлючИЗначение, с ключами Дата, Номер, ДатаРегистратора, НомерРегистратора;
//                  в качестве значений ключей берутся значения соответствующих ресурсов регистра.
//   Неопределено - если по документу нет данных в регистре
Функция ДанныеПервичногоДокумента(ДокументСсылка) Экспорт
	
	Перем РеквизитыДокумента;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеПервичныхДокументов.Дата,
	|	ДанныеПервичныхДокументов.Номер,
	|	ДанныеПервичныхДокументов.ДатаРегистратора,
	|	ДанныеПервичныхДокументов.НомерРегистратора
	|ИЗ
	|	РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|ГДЕ
	|	ДанныеПервичныхДокументов.Документ = &Ссылка";
	
	УстановитьПривилегированныйРежим(Истина);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		РеквизитыДокумента = Новый Структура("Дата, Номер, ДатаРегистратора, НомерРегистратора");
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, Выборка);
	КонецЕсли;
	
	Возврат РеквизитыДокумента;
	
КонецФункции

// Возвращает представление документа по данным регистра.
// Для некоторых типов документов представление получается особым образом.
//
// Параметры:
//   ДокументСсылка - документ, для которого требуется получить представление
//   МетаданныеДокумента - ОбъектМетаданных: Документ - метаданные документа
//
// Возвращаемое значение:
//   Строка - представление документа
Функция ПредставлениеДокумента(ДокументСсылка, Знач МетаданныеДокумента = Неопределено) Экспорт
	
	Результат = "";
	
	Если Не ЗначениеЗаполнено(ДокументСсылка) Тогда
		Возврат Результат;
	КонецЕсли;
	
	ТипДокумента = ТипЗнч(ДокументСсылка);
	
	Если ТипДокумента = Тип("ДокументСсылка.УведомлениеОВвозеПрослеживаемыхТоваров") Тогда
		Результат = ПрослеживаемостьБРУ.ОпределитьПредставлениеУведомленияОВвозе(ДокументСсылка);
		
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.АктОРасхождениях") Тогда
		СтруктураПредставления = Документы.АктОРасхождениях.ПолучитьПредставлениеДокумента(ДокументСсылка);
		Результат = СтруктураПредставления.ПредставлениеДокумента;
		
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.АктОРасхожденияхПолученный") Тогда
		СтруктураПредставления = Документы.АктОРасхожденияхПолученный.ПолучитьПредставлениеДокумента(ДокументСсылка);
		Результат = СтруктураПредставления.ПредставлениеДокумента;
		
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
		СтруктураПредставления = Документы.КорректировкаПоступления.ПолучитьПредставлениеДокумента(ДокументСсылка);
		Результат = СтруктураПредставления.ПредставлениеДокумента;
		
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		СтруктураПредставления = Документы.КорректировкаРеализации.ПолучитьПредставлениеДокумента(ДокументСсылка);
		Результат = СтруктураПредставления.ПредставлениеДокумента;
		
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
		ВидСчетаФактуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылка, "ВидСчетаФактуры");
		СтруктураПредставления = Документы.СчетФактураВыданный.ПолучитьПредставлениеДокумента(
			ДокументСсылка, ВидСчетаФактуры);
		Результат = СтруктураПредставления.СчетФактураПредставление;
		
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
		ВидСчетаФактуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылка, "ВидСчетаФактуры");
		СтруктураПредставления = Документы.СчетФактураПолученный.ПолучитьПредставлениеДокумента(
			ДокументСсылка, ВидСчетаФактуры);
		Результат = СтруктураПредставления.СчетФактураПредставление;
		
	Иначе
		РеквизитыДокумента = ДанныеПервичногоДокумента(ДокументСсылка);
		Если РеквизитыДокумента <> Неопределено Тогда
			Если МетаданныеДокумента = Неопределено Тогда
				МетаданныеДокумента = ДокументСсылка.Метаданные();
			КонецЕсли;
			Результат = СтрШаблон(НСтр("ru = '%1 %2 от %3'"),
				МетаданныеДокумента.Синоним,
				РеквизитыДокумента.НомерРегистратора,
				Формат(РеквизитыДокумента.ДатаРегистратора, "ДФ=dd.MM.yyyy"));
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#КонецЕсли
