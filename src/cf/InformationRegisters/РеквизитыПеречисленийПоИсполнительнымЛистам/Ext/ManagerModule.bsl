#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция СтруктураРеквизитов() Экспорт
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Организация",                        Справочники.Организации.ПустаяСсылка());
	СтруктураРеквизитов.Вставить("Сотрудник",                          Справочники.ФизическиеЛица.ПустаяСсылка());
	СтруктураРеквизитов.Вставить("ИсполнительныйЛист",                 Документы.ИсполнительныйЛист.ПустаяСсылка());
	СтруктураРеквизитов.Вставить("ПеречислениеВБюджет",                Ложь);
	СтруктураРеквизитов.Вставить("СтатусСоставителя",                  "");
	СтруктураРеквизитов.Вставить("ОчередностьПлатежа",                 "");
	СтруктураРеквизитов.Вставить("КодБК",                              "");
	СтруктураРеквизитов.Вставить("КодОКАТО",                           "");
	СтруктураРеквизитов.Вставить("ПоказательОснования",                "");
	СтруктураРеквизитов.Вставить("ПоказательПериода",                  "");
	СтруктураРеквизитов.Вставить("ПоказательНомера",                   "");
	СтруктураРеквизитов.Вставить("ПоказательДаты",                     "");
	СтруктураРеквизитов.Вставить("НазначениеПлатежа",                  "");
	СтруктураРеквизитов.Вставить("ИдентификаторПлатежа",               "");
	СтруктураРеквизитов.Вставить("НастройкиЗаданы",                    Ложь);
	СтруктураРеквизитов.Вставить("ПеречислениеПоИсполнительномуЛисту", Истина);
	
	Возврат СтруктураРеквизитов;
	
КонецФункции

Процедура ЗаписатьРеквизитыПеречисленияПоИсполнительномуЛистуРаботника(РеквизитыПеречисления) Экспорт
	
	Если НЕ ЗначениеЗаполнено(РеквизитыПеречисления.Организация)
		ИЛИ НЕ ЗначениеЗаполнено(РеквизитыПеречисления.Сотрудник)
		ИЛИ НЕ ЗначениеЗаполнено(РеквизитыПеречисления.ИсполнительныйЛист) Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерЗаписи = РегистрыСведений.РеквизитыПеречисленийПоИсполнительнымЛистам.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, РеквизитыПеречисления);
	
	НазначениеПлатежа = РеквизитыПеречисления.НазначениеПлатежа;
	Если ЗначениеЗаполнено(НазначениеПлатежа) Тогда
		
		НазначениеПлатежа = СтрПолучитьСтроку(НазначениеПлатежа, 1);
		
		ПозицияСумма      = Найти(НазначениеПлатежа, "Сумма");
		НазначениеПлатежа = ?(ПозицияСумма = 0, НазначениеПлатежа, Лев(НазначениеПлатежа, ПозицияСумма - 1));
		
		МенеджерЗаписи.НазначениеПлатежа = СокрЛП(НазначениеПлатежа);
		
	КонецЕсли;
	
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

Функция РеквизитыПеречисленияПоИсполнительномуЛистуРаботника(Организация,
															 Сотрудник,
															 ИсполнительныйЛист,
															 ДатаСреза = Неопределено) Экспорт
	
	РеквизитыПолучателяПлатежа = СтруктураРеквизитов();
	
	Если НЕ ЗначениеЗаполнено(Организация)
		ИЛИ НЕ ЗначениеЗаполнено(Сотрудник)
		ИЛИ НЕ ЗначениеЗаполнено(ИсполнительныйЛист) Тогда
		Возврат РеквизитыПолучателяПлатежа;
	КонецЕсли;
	
	МенеджерЗаписи = РегистрыСведений.РеквизитыПеречисленийПоИсполнительнымЛистам.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Организация        = Организация;
	МенеджерЗаписи.Сотрудник          = Сотрудник;
	МенеджерЗаписи.ИсполнительныйЛист = ИсполнительныйЛист;
	МенеджерЗаписи.Прочитать();
	
	НастройкиЗаданы = МенеджерЗаписи.Выбран();
	
	ЗаполнитьЗначенияСвойств(РеквизитыПолучателяПлатежа, МенеджерЗаписи);
	РеквизитыПолучателяПлатежа.Вставить("НастройкиЗаданы", НастройкиЗаданы);
	Если Не НастройкиЗаданы Тогда
		АвтоРеквизиты = ПоказателиПоУмолчанию(Сотрудник, ИсполнительныйЛист, ДатаСреза);
		ЗаполнитьЗначенияСвойств(РеквизитыПолучателяПлатежа, АвтоРеквизиты);
	КонецЕсли;
	
	Возврат РеквизитыПолучателяПлатежа;
	
КонецФункции

Функция ПолучитьНазначениеПлатежа(Организация, Сотрудник, ИсполнительныйЛист) Экспорт
	
	МенеджерЗаписи = РегистрыСведений.РеквизитыПеречисленийПоИсполнительнымЛистам.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Организация        = Организация;
	МенеджерЗаписи.Сотрудник          = Сотрудник;
	МенеджерЗаписи.ИсполнительныйЛист = ИсполнительныйЛист;
	МенеджерЗаписи.Прочитать();
	
	Возврат МенеджерЗаписи.НазначениеПлатежа;
	
КонецФункции

Функция СформироватьНазначениеПлатежа(Сотрудник, ИсполнительныйЛист, ДатаСреза = Неопределено) Экспорт
	
	ТекстПолучатель = "";
	
	Если ДатаСреза = Неопределено Тогда
		ДатаСреза = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Сотрудник) Тогда
		
		ДанныеАвтореквизитов = УчетЗарплаты.ДанныеФизическогоЛицаДляИсполнительногоЛиста(Сотрудник, ДатаСреза);
		ТекстНазначения = ПолучитьТекстНазначениеПлатежа(ДанныеАвтореквизитов.ТекстПолучатель, ИсполнительныйЛист);
		
	КонецЕсли;
	
	Возврат ТекстНазначения;
	
КонецФункции

Функция РеквизитыЗаполнены(Организация, Сотрудник, ИсполнительныйЛист) Экспорт
	
	МенеджерЗаписи = РегистрыСведений.РеквизитыПеречисленийПоИсполнительнымЛистам.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Организация        = Организация;
	МенеджерЗаписи.Сотрудник          = Сотрудник;
	МенеджерЗаписи.ИсполнительныйЛист = ИсполнительныйЛист;
	МенеджерЗаписи.Прочитать();
	
	Возврат МенеджерЗаписи.Выбран();
	
КонецФункции

Процедура СинхронизироватьЗапись(Организация, Сотрудник, ИсполнительныйЛист) Экспорт
	
	Если РеквизитыЗаполнены(Организация, Сотрудник, ИсполнительныйЛист) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	НаборЗаписей = РегистрыСведений.РеквизитыПеречисленийПоИсполнительнымЛистам.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ИсполнительныйЛист.Установить(ИсполнительныйЛист);
	
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() <> 0 Тогда
		Запись = НаборЗаписей[0];
		Запись.Организация        = Организация;
		Запись.Сотрудник          = Сотрудник;
		Запись.ИсполнительныйЛист = ИсполнительныйЛист;
		НаборЗаписей.Записать();
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТекстНазначениеПлатежа(ТекстПолучатель, ИсполнительныйЛист)
	
	ТекстНазначения = "";
	
	Если ЗначениеЗаполнено(ИсполнительныйЛист) Тогда
		РеквизитыИсполнительногоЛиста = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ИсполнительныйЛист, "Дата, Номер");
		ТекстНазначения = СтрШаблон(НСтр("ru = '%1. Исполнительное производство №%2 от %3 г.'"), ТекстПолучатель,
		РеквизитыИсполнительногоЛиста.Номер,
		Формат(РеквизитыИсполнительногоЛиста.Дата, "ДФ=dd.MM.yyyy"));
	Иначе
		ТекстНазначения = ТекстПолучатель;
	КонецЕсли;
	
	Возврат ТекстНазначения;
	
КонецФункции

Функция ПоказателиПоУмолчанию(Сотрудник, ИсполнительныйЛист, ДатаСреза = Неопределено)
	
	РеквизитыПолучателяПлатежа = СтруктураРеквизитов();
	
	Если НЕ ЗначениеЗаполнено(Сотрудник)
		ИЛИ НЕ ЗначениеЗаполнено(ИсполнительныйЛист) Тогда
		Возврат РеквизитыПолучателяПлатежа;
	КонецЕсли;
	
	Если ДатаСреза = Неопределено Тогда
		ДатаСреза = ТекущаяДатаСеанса();
	КонецЕсли;
	
	ДанныеАвтореквизитов = УчетЗарплаты.ДанныеФизическогоЛицаДляИсполнительногоЛиста(Сотрудник, ДатаСреза);
	СтатусСоставителя    = ПлатежиВБюджетКлиентСервер.НезаполненноеЗначение();
	ПоказательОснования  = ПлатежиВБюджетКлиентСервер.НезаполненноеЗначение();
	
	Получатель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ИсполнительныйЛист, "Получатель");
	Если ЗначениеЗаполнено(Получатель) Тогда
		ГоловнойКонтрагент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Получатель, "ГоловнойКонтрагент");
		СведенияОПолучателе = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ГоловнойКонтрагент, "ГосударственныйОрган, ВидГосударственногоОргана");
		Если СведенияОПолучателе.ГосударственныйОрган Тогда
			СтатусСоставителя = ПлатежиВБюджетКлиентСервер.СтатусПлательщикаПоИсполнительномуЛисту();
			Если СведенияОПолучателе.ВидГосударственногоОргана = Перечисления.ВидыГосударственныхОрганов.НалоговыйОрган Тогда
				ПлатежиВБюджетКлиентСервер.ЭтоДобровольноеПогашениеЗадолженности(ПоказательОснования);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	РеквизитыПолучателяПлатежа.НазначениеПлатежа   = ПолучитьТекстНазначениеПлатежа(ДанныеАвтореквизитов.ТекстПолучатель, ИсполнительныйЛист);
	РеквизитыПолучателяПлатежа.ПоказательНомера    = ДанныеАвтореквизитов.ПоказательНомера;
	РеквизитыПолучателяПлатежа.СтатусСоставителя   = СтатусСоставителя;
	РеквизитыПолучателяПлатежа.ПоказательОснования = ПоказательОснования;
	РеквизитыПолучателяПлатежа.ОчередностьПлатежа  = УчетДенежныхСредствКлиентСервер.ОчередностьПлатежаПоИсполнительномуЛисту();
	
	Возврат РеквизитыПолучателяПлатежа;
	
КонецФункции

#КонецОбласти

#КонецЕсли