
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПроверятьОбновления = Не ОбщегоНазначения.РазделениеВключено()
		И Не ПолучитьФункциональнуюОпцию("РаботаВАвтономномРежиме")
		И ИнтернетПоддержкаПользователей.ЗаполненыДанныеАутентификацииПользователяИнтернетПоддержки()
		И РаботаСКлассификаторами.ИнтерактивнаяЗагрузкаКлассификаторовДоступна();
	
	РежимВыбора = Параметры.РежимВыбора;
	
	Элементы.ФормаВыбрать.Видимость = РежимВыбора;
	
	Если ЗначениеЗаполнено(Параметры.ТекущийКод) Тогда
		СтруктураКлюча = Новый Структура;
		СтруктураКлюча.Вставить("Код", Параметры.ТекущийКод);
		КлючЗаписи = РегистрыСведений.КлассификаторОКВЭД2.СоздатьКлючЗаписи(СтруктураКлюча);
		Элементы.Список.ТекущаяСтрока = КлючЗаписи;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ПроверятьОбновления Тогда
		ПодключитьОбработчикОжидания("ПроверитьОбновленияКлассификатора", 1, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	ПриВыборе();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеКлассификатора(Команда)
	
	НачатьОбновлениеДанныхСписка();
	ОжидатьЗавершениеОбновленияДанныхСписка();
	
	// Если Интернет-поддержка не подключена, то загрузка не начнется, и будет взведен флаг ТребуетсяПодключениеИнтернетПоддержки.
	// В этом случае позже повторно запустим загрузку, если пользователь введет данные авторизации.
	Если ТребуетсяПодключениеИнтернетПоддержки Тогда
		
		ТекстСообщения = НСтр("ru = 'Для автоматического обновления классификатора ОКВЭД ред. 2 необходимо подключить Интернет-поддержку пользователей.'");
		
		Если ИнтернетПоддержкаПользователейКлиент.ДоступноПодключениеИнтернетПоддержки() Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = '%1
				|Подключить Интернет-поддержку?'"), ТекстСообщения);
			ОбработчикЗавершения = Новый ОписаниеОповещения("ПриОтветеНаВопросПодключитьИнтернетПоддержку", ЭтотОбъект);
			ПоказатьВопрос(ОбработчикЗавершения, ТекстСообщения, РежимДиалогаВопрос.ДаНет);
		Иначе
			ТекстСообщения = СтрШаблон(НСтр("ru = '%1
				|Обратитесь к администратору.'"), ТекстСообщения);
			ПоказатьПредупреждение(ОбработчикЗавершения, ТекстСообщения);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновленииеИзСервисаКлассификаторов

&НаКлиенте
Процедура ПроверитьОбновленияКлассификатора() Экспорт
	
	ДлительнаяОперация = НачатьПроверкуОбновленияНаСервере();
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбработатьРезультатПроверкиОбновления", ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция НачатьПроверкуОбновленияНаСервере()
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения,
		"РаботаСКлассификаторами.ДоступныеОбновленияКлассификаторов",
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(
			РегистрыСведений.КлассификаторОКВЭД2.ИдентификаторВСервисеКлассификаторов()));
	
КонецФункции

&НаКлиенте
Процедура ОбработатьРезультатПроверкиОбновления(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИнформацияОбОбновлениях = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	ДоступноОбновление = ИнформацияОбОбновлениях.ДоступныеВерсии.Количество() > 0;
	
	Элементы.ГруппаДоступноОбновление.Видимость = ДоступноОбновление;
	
	ДлительнаяОперация = Неопределено;
	
КонецПроцедуры

&НаСервере
Процедура НачатьОбновлениеДанныхСписка()
	
	ТребуетсяПодключениеИнтернетПоддержки = Ложь;
	
	// В режиме сервиса или АРМ данные обновляются менеджером сервиса, т.к. это общие данные
	Если ОбщегоНазначения.РазделениеВключено() Или ПолучитьФункциональнуюОпцию("РаботаВАвтономномРежиме") Тогда
		Возврат;
	КонецЕсли;
	
	Классификаторы = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(
		РегистрыСведений.КлассификаторОКВЭД2.ИдентификаторВСервисеКлассификаторов());
	
	ПроверкаАктуальностиДанныхСписка = РаботаСКлассификаторами.ДоступныеОбновленияКлассификаторов(Классификаторы);
	
	Если ЗначениеЗаполнено(ПроверкаАктуальностиДанныхСписка.КодОшибки) Тогда
		
		Если ПроверкаАктуальностиДанныхСписка.КодОшибки = "НеверныйЛогинИлиПароль" Тогда
			// Перед следующей попыткой загрузки запросим данные подключения к ИПП 
			ТребуетсяПодключениеИнтернетПоддержки = Истина;
		Иначе	
			ШаблонСообщения = НСтр("ru = 'При загрузке классификатора ОКВЭД ред. 2 из сервиса классификаторов возникла ошибка:
				|%1'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ПроверкаАктуальностиДанныхСписка.ИнформацияОбОшибке);
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Обновление классификатора ОКВЭД ред. 2'", ОбщегоНазначения.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.РегистрыСведений.КлассификаторОКВЭД2, ,
				ТекстСообщения);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
	Если ПроверкаАктуальностиДанныхСписка.ДоступныеВерсии.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Загружен актуальный классификатор ОКВЭД ред. 2'"));
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация <> Неопределено Тогда
		// Не завершено предыдущее фоновое задание, новое не запускаем.
		Возврат;
	КонецЕсли;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение           = 0; // Не ждем завершения.
	ПараметрыВыполнения.ЗапуститьВФоне              = Истина;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Обновление классификатора ОКВЭД ред. 2'");
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
		"РегистрыСведений.КлассификаторОКВЭД2.ЗагрузитьДанныеИзСервисаКлассификаторов",
		Новый Структура(),
		ПараметрыВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОжидатьЗавершениеОбновленияДанныхСписка()

	Если ДлительнаяОперация = Неопределено Тогда
		// Фоновое задание не запущено или обновление не требуется.
		Возврат;
	КонецЕсли;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.ТекстСообщения = НСтр("ru='Идет загрузка классификатора ОКВЭД ред. 2.'");
	
	ОповещенияОЗавершении = Новый ОписаниеОповещения("ОбновлениеДанныхСпискаЗавершение", ЭтотОбъект);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещенияОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеДанныхСпискаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Успешно = Истина;
	Если ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Результат, "Статус", "") = "Ошибка" Тогда
		Успешно = Ложь;
		ШаблонСообщения = НСтр("ru = 'При загрузке классификатора ОКВЭД ред. 2 из сервиса классификаторов возникла ошибка:
			|%1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, Результат.КраткоеПредставлениеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
	ДлительнаяОперация = Неопределено; // Сбросим признак выполнения.
	
	Если Успешно Тогда
		ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.КлассификаторОКВЭД2"));
		Элементы.ГруппаДоступноОбновление.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОтветеНаВопросПодключитьИнтернетПоддержку(КодВозврата, ДополнительныеПараметры) Экспорт
	
	Если КодВозврата = КодВозвратаДиалога.Да Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПодключенияИнтернетПоддержки", ЭтотОбъект);	
		ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(ОписаниеОповещения, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодключенияИнтернетПоддержки(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		// Получаем коды регистрирующих органов и обновляем данные на форме.
		НачатьОбновлениеДанныхСписка();
		ОжидатьЗавершениеОбновленияДанныхСписка();
		
		ТребуетсяПодключениеИнтернетПоддержки = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Не РежимВыбора Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ПриВыборе();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриВыборе()
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрЗакрытия = Новый Структура;
	ПараметрЗакрытия.Вставить("Код", ТекущиеДанные.Код);
	ПараметрЗакрытия.Вставить("Наименование", ТекущиеДанные.Наименование);
	
	Закрыть(ПараметрЗакрытия);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
