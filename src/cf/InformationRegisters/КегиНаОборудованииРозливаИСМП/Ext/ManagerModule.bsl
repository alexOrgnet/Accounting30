#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Новая таблица поиска кодов маркировки на оборудовании розлива.
//
// Возвращаемое значение:
//  ТаблицаЗначений - Новая таблица поиска кодов маркировки на оборудовании розлива:
// * Номенклатура - ОпределяемыйТип.Номенклатура -
// * Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатуры -
// * Серия - ОпределяемыйТип.СерияНоменклатуры -
// * Количество - Число -
// * УчитыватьСерии - Булево -
// * ИндексИсходнойСтроки - Число
Функция НоваяТаблицаПоискаКодовМаркировкиНаОборудованииРозлива() Экспорт
	
	ТаблицаТовары = Новый ТаблицаЗначений;
	ТаблицаТовары.Колонки.Добавить("Номенклатура",         Метаданные.ОпределяемыеТипы.Номенклатура.Тип);
	ТаблицаТовары.Колонки.Добавить("Характеристика",       Метаданные.ОпределяемыеТипы.ХарактеристикаНоменклатуры.Тип);
	ТаблицаТовары.Колонки.Добавить("Серия",                Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип);
	ТаблицаТовары.Колонки.Добавить("Количество",           ОбщегоНазначения.ОписаниеТипаЧисло(18, 2));
	ТаблицаТовары.Колонки.Добавить("УчитыватьСерии",       Новый ОписаниеТипов("Булево"));
	ТаблицаТовары.Колонки.Добавить("ИндексИсходнойСтроки", ОбщегоНазначения.ОписаниеТипаЧисло(10));
	
	Возврат ТаблицаТовары;
	
КонецФункции

// Коды маркировки подключенные к оборудованию розлива.
//
// Параметры:
//  ТаблицаТовары - см. НоваяТаблицаПоискаКодовМаркировкиНаОборудованииРозлива
//  ПараметрыСканирования - См. ШтрихкодированиеИСКлиент.ПараметрыСканирования
//  ТребуетсяПолныйКодМаркировки - Булево - Требуется полный код маркировки
//  ТолькоПолноеСоответствие - Булево - Искать без учета подменной номенклатуры
//
// Возвращаемое значение:
//  ТаблицаЗначений - Коды маркировки подключенные к оборудованию розлива:
// * Номенклатура - ОпределяемыйТип.Номенклатура -
// * Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатуры -
// * Серия - ОпределяемыйТип.СерияНоменклатуры -
// * ИндексИсходнойСтроки - Число -
// * УчитыватьСерии - Булево -
// * ВариантЧастичногоВыбытия - ПеречислениеСсылка.ВариантыУчетаЧастичногоВыбытияИС -
// * КодМаркировки - Строка -
// * Комментарий - ОпределяемыйТип.ОборудованиеРозливаИСМП -
// * КодМаркировкиСтрокой - Строка -
Функция КодыМаркировкиПодключенныеКОборудованиюРозлива(ТаблицаТовары, ПараметрыСканирования, ТребуетсяПолныйКодМаркировки = Ложь, ТолькоПолноеСоответствие = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ИсходнаяТаблицаТовары.Номенклатура         КАК Номенклатура,
		|	ИсходнаяТаблицаТовары.Характеристика       КАК Характеристика,
		|	ИсходнаяТаблицаТовары.Серия                КАК Серия,
		|	ИсходнаяТаблицаТовары.УчитыватьСерии       КАК УчитыватьСерии,
		|	ИсходнаяТаблицаТовары.ИндексИсходнойСтроки КАК ИндексИсходнойСтроки,
		|	ИсходнаяТаблицаТовары.Количество           КАК Количество
		|ПОМЕСТИТЬ ИсходнаяТаблицаТовары
		|ИЗ
		|	&Товары КАК ИсходнаяТаблицаТовары
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	Серия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкиЧастичногоВыбытияПродукцииИС.Номенклатура   КАК Номенклатура,
		|	НастройкиЧастичногоВыбытияПродукцииИС.Характеристика КАК Характеристика,
		|	ИсходнаяТаблицаТовары.Серия                          КАК Серия,
		|	ИсходнаяТаблицаТовары.УчитыватьСерии                 КАК УчитыватьСерии,
		|	ИсходнаяТаблицаТовары.ИндексИсходнойСтроки           КАК ИндексИсходнойСтроки,
		|	ИсходнаяТаблицаТовары.Количество                     КАК Количество,
		|	ОписаниеНоменклатурыИС.ВариантЧастичногоВыбытия      КАК ВариантЧастичногоВыбытия
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	ИсходнаяТаблицаТовары КАК ИсходнаяТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиЧастичногоВыбытияПродукцииИС КАК НастройкиЧастичногоВыбытияПродукцииИС
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОписаниеНоменклатурыИС КАК ОписаниеНоменклатурыИС
		|			ПО НастройкиЧастичногоВыбытияПродукцииИС.Номенклатура = ОписаниеНоменклатурыИС.Номенклатура
		|		ПО ИсходнаяТаблицаТовары.Номенклатура = НастройкиЧастичногоВыбытияПродукцииИС.НоменклатураЧастичногоВыбытия
		|		И ИсходнаяТаблицаТовары.Характеристика = НастройкиЧастичногоВыбытияПродукцииИС.ХарактеристикаЧастичногоВыбытия
		|ГДЕ
		|	ОписаниеНоменклатурыИС.ВариантЧастичногоВыбытия = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаЧастичногоВыбытияИС.НастроеннаяНоменклатура)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ИсходнаяТаблицаТовары.Номенклатура,
		|	ИсходнаяТаблицаТовары.Характеристика,
		|	ИсходнаяТаблицаТовары.Серия,
		|	ИсходнаяТаблицаТовары.УчитыватьСерии,
		|	ИсходнаяТаблицаТовары.ИндексИсходнойСтроки,
		|	ИсходнаяТаблицаТовары.Количество,
		|	ОписаниеНоменклатурыИС.ВариантЧастичногоВыбытия
		|ИЗ
		|	ИсходнаяТаблицаТовары КАК ИсходнаяТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОписаниеНоменклатурыИС КАК ОписаниеНоменклатурыИС
		|		ПО ИсходнаяТаблицаТовары.Номенклатура = ОписаниеНоменклатурыИС.Номенклатура
		|ГДЕ
		|	ВЫБОР
		|		КОГДА &ТолькоПолноеСоответствие
		|			ТОГДА ОписаниеНоменклатурыИС.ВариантЧастичногоВыбытия = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаЧастичногоВыбытияИС.ТекущаяНоменклатура)
		|			ИНАЧЕ ИСТИНА
		|	КОНЕЦ
		|	
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	Товары.Номенклатура                                        КАК Номенклатура,
		|	Товары.Характеристика                                      КАК Характеристика,
		|	ШтрихкодыУпаковокТоваров.Серия                             КАК Серия,
		|	Товары.ИндексИсходнойСтроки                                КАК ИндексИсходнойСтроки,
		|	Товары.УчитыватьСерии                                      КАК УчитыватьСерии,
		|	Товары.ВариантЧастичногоВыбытия                            КАК ВариантЧастичногоВыбытия,
		|	КегиНаОборудованииРозливаИСМП.КодМаркировки                КАК КодМаркировки,
		|	КегиНаОборудованииРозливаИСМП.Комментарий                  КАК Комментарий,
		|	ПРЕДСТАВЛЕНИЕ(КегиНаОборудованииРозливаИСМП.КодМаркировки) КАК КодМаркировкиСтрокой
		|ИЗ
		|	РегистрСведений.КегиНаОборудованииРозливаИСМП КАК КегиНаОборудованииРозливаИСМП
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК ШтрихкодыУпаковокТоваров
		|		ПО КегиНаОборудованииРозливаИСМП.КодМаркировки = ШтрихкодыУпаковокТоваров.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Товары КАК Товары
		|		ПО ШтрихкодыУпаковокТоваров.Номенклатура = Товары.Номенклатура
		|		И ШтрихкодыУпаковокТоваров.Характеристика = Товары.Характеристика
		|		И ВЫБОР
		|			КОГДА Товары.УчитыватьСерии
		|				ТОГДА ШтрихкодыУпаковокТоваров.Серия = Товары.Серия
		|				ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|		
		|ГДЕ
		|	КегиНаОборудованииРозливаИСМП.Склад         = &Склад
		|	И КегиНаОборудованииРозливаИСМП.Организация = &Организация
		|	И КегиНаОборудованииРозливаИСМП.Статус      = ЗНАЧЕНИЕ(Перечисление.СтатусыПодключенияКОборудованиюРозливаИСМП.Подключено)";
	
	Запрос.УстановитьПараметр("Товары",                   ТаблицаТовары);
	Запрос.УстановитьПараметр("ТолькоПолноеСоответствие", ТолькоПолноеСоответствие);
	Запрос.УстановитьПараметр("Склад",                    ПараметрыСканирования.Склад);
	Запрос.УстановитьПараметр("Организация",              ПараметрыСканирования.Организация);
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаКодовМаркировки = Запрос.Выполнить().Выгрузить();
	
	ВозвращаемоеЗначение = ТаблицаКодовМаркировки.СкопироватьКолонки();
	
	Если ТребуетсяПолныйКодМаркировки Тогда
		
		ВозвращаемоеЗначение.Колонки.Добавить("ПолныйКодМаркировки", Метаданные.РегистрыСведений.ПулКодовМаркировкиСУЗ.Реквизиты.ПолныйКодМаркировки.Тип);
		
		СтрокиТаблицыПоКодамМаркировки = Новый Соответствие();
		ТаблицаПоиска = ШтрихкодированиеИСМП.НоваяТаблицаПоискаКодаМаркировкивПуле();
		Для Каждого СтрокаТаблицы Из ТаблицаКодовМаркировки Цикл
			СтрокиТаблицыПоКодамМаркировки.Вставить(СтрокаТаблицы.КодМаркировкиСтрокой, СтрокаТаблицы);
			ШтрихкодированиеИСМП.ДобавитьКодМаркировкиВТаблицуДляПоискаВПуле(
					СтрокаТаблицы.КодМаркировкиСтрокой,
					ТаблицаПоиска);
		КонецЦикла;
		
		КодыМаркировкиВПуле = ШтрихкодированиеИСМП.РезультатПоискаВПулеКодовМаркировки(ТаблицаПоиска, "ПолныйКодМаркировки");
		
		Для Каждого СтрокаТаблицы Из КодыМаркировкиВПуле Цикл
			
			ИсходнаяСтрока = СтрокиТаблицыПоКодамМаркировки[СтрокаТаблицы.КодМаркировки];
			НоваяСтрока = ВозвращаемоеЗначение.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ИсходнаяСтрока);
			НоваяСтрока.ПолныйКодМаркировки = СтрокаТаблицы.ПолныйКодМаркировки;
			
		КонецЦикла;
		
	Иначе
		ВозвращаемоеЗначение = ТаблицаКодовМаркировки;
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Возвращает описание подключенных к оборудованию кег
//
// Параметры:
//   КодМаркировки - СправочникСсылка.ШтрихкодыУпаковокТоваров, Массив Из СправочникСсылка.ШтрихкодыУпаковокТоваров - Кеги
//
// Возвращаемое значение:
//   Соответствие из КлючИЗначение - найденные кеги с их описанием:
//    * Ключ - СправочникСсылка.ШтрихкодыУпаковокТоваров - Кега
//    * Значение - см. ИнициализироватьДанныеПодключенияКОборудованию
Функция ПолучитьПодключениеКОборудованию(КодМаркировки) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = Новый Соответствие;
	
	Если Не ЗначениеЗаполнено(КодМаркировки) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КегиНаОборудованииРозливаИСМП.КодМаркировки,
	|	КегиНаОборудованииРозливаИСМП.Организация,
	|	КегиНаОборудованииРозливаИСМП.Подразделение,
	|	КегиНаОборудованииРозливаИСМП.Комментарий,
	|	КегиНаОборудованииРозливаИСМП.Статус,
	|	КегиНаОборудованииРозливаИСМП.Склад,
	|	КегиНаОборудованииРозливаИСМП.Документ,
	|	КегиНаОборудованииРозливаИСМП.СрокРеализации,
	|	КегиНаОборудованииРозливаИСМП.ДатаПодключения,
	|	КегиНаОборудованииРозливаИСМП.Ответственный,
	|	КегиНаОборудованииРозливаИСМП.КодФИАС,
	|	КегиНаОборудованииРозливаИСМП.АдресПодключения,
	|	КегиНаОборудованииРозливаИСМП.АдресПодключенияСтрокой,
	|	КегиНаОборудованииРозливаИСМП.ОбъемСлива,
	|	СтатусыДокументовИСМП.Статус              КАК СтатусИСМП,
	|	СтатусыДокументовИСМП.ДальнейшееДействие1 КАК ДальнейшееДействие
	|ИЗ
	|	РегистрСведений.КегиНаОборудованииРозливаИСМП КАК КегиНаОборудованииРозливаИСМП
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовИСМП КАК СтатусыДокументовИСМП
	|		ПО СтатусыДокументовИСМП.Документ = КегиНаОборудованииРозливаИСМП.Документ
	|ГДЕ
	|	КегиНаОборудованииРозливаИСМП.КодМаркировки В (&КодМаркировки)");
	
	Запрос.УстановитьПараметр("КодМаркировки", КодМаркировки);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ДанныеПодключения = ИнициализироватьДанныеПодключенияКОборудованию();
		ЗаполнитьЗначенияСвойств(ДанныеПодключения, Выборка);
		Результат.Вставить(Выборка.КодМаркировки, ДанныеПодключения);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Инициализировать данные подключения к оборудованию.
// 
// Возвращаемое значение:
//  Структура - Инициализировать данные подключения к оборудованию:
// * КодМаркировки - СправочникСсылка.ШтрихкодыУпаковокТоваров
// * Организация - ОпределяемыйТип.Организация
// * Подразделение - ОпределяемыйТип.Подразделение
// * Склад - ОпределяемыйТип.Склад
// * Комментарий - ОпределяемыйТип.ОборудованиеРозливаИСМП
// * Статус - ПеречислениеСсылка.СтатусыПодключенияКОборудованиюРозливаИСМП
// * СтатусИСМП - ПеречислениеСсылка.СтатусыОбработкиПодключениеКОборудованиюРозливаИСМП
// * ДальнейшееДействие - ПеречислениеСсылка.ДальнейшиеДействияПоВзаимодействиюИСМП
// * Документ - ДокументСсылка.ПодключениеКегаКОборудованиюРозливаИСМП
// * КодФИАС - ОпределяемыйТип.УникальныйИдентификаторИС
// * СрокРеализации - Дата
// * ДатаПодключения - Дата
Функция ИнициализироватьДанныеПодключенияКОборудованию() Экспорт
	
	ДанныеПодключения = Новый Структура();
	ДанныеПодключения.Вставить("КодМаркировки");
	ДанныеПодключения.Вставить("Организация");
	ДанныеПодключения.Вставить("Подразделение");
	ДанныеПодключения.Вставить("Склад");
	ДанныеПодключения.Вставить("Комментарий");
	ДанныеПодключения.Вставить("Статус");
	ДанныеПодключения.Вставить("Документ");
	ДанныеПодключения.Вставить("СрокРеализации");
	ДанныеПодключения.Вставить("ДатаПодключения");
	ДанныеПодключения.Вставить("Ответственный");
	ДанныеПодключения.Вставить("АдресПодключения");
	ДанныеПодключения.Вставить("АдресПодключенияСтрокой");
	ДанныеПодключения.Вставить("ОбъемСлива");
	ДанныеПодключения.Вставить("КодФИАС");
	ДанныеПодключения.Вставить("СтатусИСМП");
	ДанныеПодключения.Вставить("ДальнейшееДействие");
	
	Возврат ДанныеПодключения;
	
КонецФункции

// Сохраняет подключенные к оборудованию кеги
//
// Параметры:
//   ДанныеПодключения - См. ИнициализироватьДанныеПодключенияКОборудованию
//   СохраненныеДанные - Неопределено
//                     - см. ИнициализироватьДанныеПодключенияКОборудованию.
//
Процедура УстановитьПодключениеКОборудованию(ДанныеПодключения, СохраненныеДанные = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если СохраненныеДанные = Неопределено Тогда
		КодМаркировки = ДанныеПодключения.КодМаркировки;
	Иначе
		КодМаркировки = СохраненныеДанные.КодМаркировки;
	КонецЕсли;
	
	НаборЗаписей = СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.КодМаркировки.Установить(КодМаркировки, Истина);
	
	Если СохраненныеДанные = Неопределено Тогда
		НаборЗаписей.Прочитать();
	КонецЕсли;
	
	Если НаборЗаписей.Выбран() И СохраненныеДанные = Неопределено Тогда
		
		Если НаборЗаписей.Количество() Тогда
			ЗаписьНабора = НаборЗаписей[0];
		Иначе
			ЗаписьНабора = НаборЗаписей.Добавить();
			ЗаписьНабора.КодМаркировки = КодМаркировки;
		КонецЕсли;
		
		Для Каждого Реквизит Из Метаданные.РегистрыСведений.КегиНаОборудованииРозливаИСМП.Реквизиты Цикл
			ЗаписьНабора[Реквизит.Имя] = ДанныеПодключения[Реквизит.Имя];
		КонецЦикла;
		
	ИначеЕсли СохраненныеДанные <> Неопределено Тогда
		
		Если НаборЗаписей.Количество() Тогда
			ЗаписьНабора = НаборЗаписей[0];
		Иначе
			ЗаписьНабора = НаборЗаписей.Добавить();
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ЗаписьНабора, СохраненныеДанные);
		
		Для Каждого Реквизит Из Метаданные.РегистрыСведений.КегиНаОборудованииРозливаИСМП.Реквизиты Цикл
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДанныеПодключения, Реквизит.Имя)
				И ДанныеПодключения[Реквизит.Имя] <> Неопределено Тогда
				ЗаписьНабора[Реквизит.Имя] = ДанныеПодключения[Реквизит.Имя];
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		
		ЗаписьНабора = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(ЗаписьНабора, ДанныеПодключения);
		
	КонецЕсли;
	
	ЗаписьНабора.Комментарий = СокрЛП(ЗаписьНабора.Комментарий);
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	УправлениеДоступомИСПереопределяемый.ПриЗаполненииОграниченияДоступа(
		Метаданные.РегистрыСведений.КегиНаОборудованииРозливаИСМП, Ограничение);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

Процедура ПриОпределенииКомандПодключенныхКОбъекту(Команды) Экспорт
	Возврат;
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УдалитьПодключениеКОборудованию(КодМаркировки) Экспорт
	
	Если ТипЗнч(КодМаркировки) = Тип("Массив") Тогда
		НаборКодовМаркировки = КодМаркировки;
	Иначе
		НаборКодовМаркировки = Новый Массив();
		НаборКодовМаркировки.Добавить(КодМаркировки);
	КонецЕсли;
	
	Для Каждого ЗначениеКодаМаркировки Из НаборКодовМаркировки Цикл
		
		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.КодМаркировки.Установить(ЗначениеКодаМаркировки, Истина);
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Функция НоваяТаблицаОтключенияКегОтОборудованияРозлива() Экспорт
	
	ТаблицаКодыМаркировки = Новый ТаблицаЗначений();
	ТаблицаКодыМаркировки.Колонки.Добавить("КодМаркировки", Новый ОписаниеТипов("СправочникСсылка.ШтрихкодыУпаковокТоваров"));
	
	Возврат ТаблицаКодыМаркировки;
	
КонецФункции

// Подключает кег к оборудованию розлива и готовит документ для передачи в ГИС МТ
// 
// Параметры:
//  ДанныеПодключения - см. ИнициализироватьДанныеПодключенияКОборудованию 
//  ДанныеОтключения  - Неопределено
//                    - см. ИнициализироватьДанныеПодключенияКОборудованию
// Возвращаемое значение:
//  Структура - результат подключения кега к оборудованию розлива:
// * Документ - ДокументСсылка.ПодключениеКегаКОборудованиюРозливаИСМП - документ подключения кега
// * ТекстОшибки - Строка, Неопределено                                - текст ошибки подключения при наличии
Функция ПодключитьКегКОборудованиюРозлива(ДанныеПодключения, ДанныеОтключения = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("Документ",    Документы.ПодключениеКегаКОборудованиюРозливаИСМП.ПустаяСсылка());
	ВозвращаемоеЗначение.Вставить("ТекстОшибки", Неопределено);
	
	Блокировка = Новый БлокировкаДанных();
	
	ЭлементБлокировки = Блокировка.Добавить(Метаданные.РегистрыСведений.КегиНаОборудованииРозливаИСМП.ПолноеИмя());
	ЭлементБлокировки.УстановитьЗначение("КодМаркировки", ДанныеПодключения.КодМаркировки);
	
	НачатьТранзакцию();
	
	Попытка
		
		Блокировка.Заблокировать();
		
		ДокументОбъект = Документы.ПодключениеКегаКОборудованиюРозливаИСМП.СоздатьДокумент();
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, ДанныеПодключения);
		ДокументОбъект.КодМаркировки = ДанныеПодключения.КодМаркировки;
		ДокументОбъект.Дата          = ТекущаяДатаСеанса();
		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
		ВозвращаемоеЗначение.Документ = ДокументОбъект.Ссылка;
		ДанныеПодключения.Документ    = ДокументОбъект.Ссылка;
		
		УстановитьПодключениеКОборудованию(ДанныеПодключения);
		
		Если ДанныеОтключения <> Неопределено Тогда
			
			ТаблицаДанных = НоваяТаблицаОтключенияКегОтОборудованияРозлива();
			НоваяСтрока = ТаблицаДанных.Добавить();
			НоваяСтрока.КодМаркировки = ДанныеОтключения.КодМаркировки;
			ОтключитьКегиОтОборудованияРозлива(ТаблицаДанных);
			
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ИнформацияОбОшибке = ИнформацияОбОшибке();
				
		ВозвращаемоеЗначение.ТекстОшибки = СтрШаблон(
			НСтр("ru = 'Ошибка записи данных подключения к оборудованию розлива %1:
				       |%2'"),
			ДанныеПодключения.КодМаркировки,
			ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке));
		
		ТекстОшибкиПодробно = СтрШаблон(
			НСтр("ru = 'Ошибка записи данных подключения к оборудованию розлива %1:
				       |%2'"),
			ДанныеПодключения.КодМаркировки,
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке));
		
		ИнтеграцияИСМПСлужебный.ЗаписатьОшибкуВЖурналРегистрации(ТекстОшибкиПодробно);
		
	КонецПопытки;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция ОтключитьКегиОтОборудованияРозлива(ТаблицаКодыМаркировки) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура();
	ВозвращаемоеЗначение.Вставить("ТекстОшибки");
	
	Блокировка = Новый БлокировкаДанных();
	
	ЭлементБлокировки = Блокировка.Добавить(Метаданные.РегистрыСведений.КегиНаОборудованииРозливаИСМП.ПолноеИмя());
	ЭлементБлокировки.ИсточникДанных = ТаблицаКодыМаркировки;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("КодМаркировки", "КодМаркировки");
	
	НачатьТранзакцию();
	
	Попытка
		
		Блокировка.Заблокировать();
		
		ДанныеПодключений = ПолучитьПодключениеКОборудованию(ТаблицаКодыМаркировки.ВыгрузитьКолонку("КодМаркировки"));
		
		Для Каждого СтрокаТаблицы Из ТаблицаКодыМаркировки Цикл
			
			ДанныеПодключения = ДанныеПодключений[СтрокаТаблицы.КодМаркировки];
			Если ДанныеПодключения = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Если (ДанныеПодключения.СтатусИСМП = Перечисления.СтатусыОбработкиПодключениеКОборудованиюРозливаИСМП.ПодключеноКОборудованию
				Или ДанныеПодключения.ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюИСМП.НеТребуется) Тогда
				УдалитьПодключениеКОборудованию(СтрокаТаблицы.КодМаркировки);
			ИначеЕсли ДанныеПодключения.Статус <> Перечисления.СтатусыПодключенияКОборудованиюРозливаИСМП.Отключено Тогда
				НовыеДанныеПодключения = ИнициализироватьДанныеПодключенияКОборудованию();
				НовыеДанныеПодключения.Статус = Перечисления.СтатусыПодключенияКОборудованиюРозливаИСМП.Отключено;
				УстановитьПодключениеКОборудованию(НовыеДанныеПодключения, ДанныеПодключения);
			КонецЕсли;
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ТекстОшибки = СтрШаблон(
			НСтр("ru = 'Ошибка отключения кега от оборудования розлива:
				       |%1'"),
			ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ТекстОшибкиПодробно = СтрШаблон(
			НСтр("ru = 'Ошибка отключения кега от оборудования розлива:
				       |%1'"),
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
		ВозвращаемоеЗначение.ТекстОшибки = ТекстОшибки;
		
		ИнтеграцияИСМПСлужебный.ЗаписатьОшибкуВЖурналРегистрации(ТекстОшибкиПодробно);
		
	КонецПопытки;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти

#КонецЕсли