#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИсторияКоличестваЗастрахованных.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресИсторияКоличествоЗастрахованных));
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, "ДатаНачалаСписания, ДатаОкончанияСписания, АдресИсторияКоличествоЗастрахованных");
	
	Если Параметры.ДобавитьСтроку Или ИсторияКоличестваЗастрахованных.Количество() = 0 Тогда

		НоваяСтрока = ИсторияКоличестваЗастрахованных.Добавить();
	
		Если ИсторияКоличестваЗастрахованных.Количество() = 1 Тогда
			
			Если ЗначениеЗаполнено(ДатаНачалаСписания) Тогда
				НоваяСтрока.ДатаНачалаДействия = ДатаНачалаСписания;
			КонецЕсли;
			
			// Используется в условном оформлении.
			НоваяСтрока.НачальноеЗначение = Истина;
			
		Иначе
			НоваяСтрока.ДатаНачалаДействия = ДатаНовойСтроки(ЭтотОбъект);
		КонецЕсли;
		
		НоваяСтрока.Количество = Параметры.КоличествоЗастрахованных;
	ИначеЕсли ЗначениеЗаполнено(ДатаНачалаСписания) Тогда
		
		Для Каждого ЗаписьИстории Из ИсторияКоличестваЗастрахованных Цикл
		
			Если Не ЗначениеЗаполнено(ЗаписьИстории.ДатаНачалаДействия) Тогда
				ЗаписьИстории.ДатаНачалаДействия = ДатаНачалаСписания;
			КонецЕсли;
		
		КонецЦикла;
		
	ИначеЕсли Не ЗначениеЗаполнено(ИсторияКоличестваЗастрахованных[0].ДатаНачалаДействия) Тогда
		ИсторияКоличестваЗастрахованных[0].НачальноеЗначение = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаНачалаСписания) Тогда
		ЭлементУО = УсловноеОформление.Элементы.Добавить();
		КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ИсторияКоличестваЗастрахованныхДатаНачалаДействия");
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор, "ИсторияКоличестваЗастрахованных.ДатаНачалаДействия",
			ВидСравненияКомпоновкиДанных.НеЗаполнено);
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор, "ИсторияКоличестваЗастрахованных.НачальноеЗначение",
			ВидСравненияКомпоновкиДанных.Равно, Истина);
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Начальное значение'"));
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыИсторияКоличестваЗастрахованных

&НаКлиенте
Процедура ИсторияКоличестваЗастрахованныхПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		ТекущиеДанные = Элемент.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			
			ТекущиеДанные.ДатаНачалаДействия = ДатаНовойСтроки(ЭтотОбъект);
			
			Если ЗначениеЗаполнено(ТекущиеДанные.ДатаНачалаДействия) Тогда
				ТекущийЭлемент = Элементы.ИсторияКоличестваЗастрахованныхКоличество;
			КонецЕсли;
			
			Если Копирование Тогда
				ТекущиеДанные.НачальноеЗначение = Ложь;
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияКоличестваЗастрахованныхКоличествоПриИзменении(Элемент)
	СортироватьИсторию();
КонецПроцедуры

&НаКлиенте
Процедура ИсторияКоличестваЗастрахованныхДатаНачалаДействияПриИзменении(Элемент)
	СортироватьИсторию();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Отказ = Ложь;
	
	РезультатВыбора = ПодготовитьДанныеДляОтправки(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ОповеститьОВыборе(РезультатВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПодготовитьДанныеДляОтправки(Отказ)
	
	Отказ = ПроверитьКорректностьЗаполненияИстории();
	ПоместитьВоВременноеХранилище(ИсторияКоличестваЗастрахованных.Выгрузить(), АдресИсторияКоличествоЗастрахованных);

	КоличествоЗастрахованных = 0;
	Если ИсторияКоличестваЗастрахованных.Количество() > 0 Тогда
		НомерПоследнейСтроки = ИсторияКоличестваЗастрахованных.Количество() - 1;
		КоличествоЗастрахованных = ИсторияКоличестваЗастрахованных[НомерПоследнейСтроки].Количество;
	КонецЕсли;
	
	ДанныеДляОтправки = Новый Структура;	
	ДанныеДляОтправки.Вставить("КоличествоЗастрахованных",                 КоличествоЗастрахованных);
	ДанныеДляОтправки.Вставить("ИсторияКоличестваЗастрахованныхЗаполнена", ИсторияКоличестваЗастрахованных.Количество() > 0);
	
	Возврат ДанныеДляОтправки;
	
КонецФункции

&НаСервере
Функция ПроверитьКорректностьЗаполненияИстории()
	Отказ = Ложь;
	ПериодыСтрок = Новый Соответствие();
	
	Для Каждого Запись Из ИсторияКоличестваЗастрахованных Цикл
		
		ИндексСтроки = ИсторияКоличестваЗастрахованных.Индекс(Запись);
		ПрефиксСообщенияСтроки = "ИсторияКоличестваЗастрахованных[" + XMLСтрока(ИндексСтроки) + "].";
		
		Если Не Запись.НачальноеЗначение И Не ЗначениеЗаполнено(Запись.ДатаНачалаДействия) Тогда
			СообщениеОбОшибке = НСтр("ru = 'Нужно указать дату начала действия'");
			ОбщегоНазначения.СообщитьПользователю(СообщениеОбОшибке, , ПрефиксСообщенияСтроки + "ДатаНачалаДействия", , Отказ);
		КонецЕсли;
		
		Если ПериодыСтрок[Запись.ДатаНачалаДействия] = Неопределено Тогда
			Если ЗначениеЗаполнено(Запись.ДатаНачалаДействия) Тогда
				ПериодыСтрок.Вставить(Запись.ДатаНачалаДействия, Истина);
			КонецЕсли;
		Иначе
			// Строка с такой датой уже была раньше, это ошибка.
			// Не может быть 2 строки с одинаковой датой.
			СообщениеОбОшибке = НСтр("ru = 'Уже есть запись с указанной датой сведений'");
			ОбщегоНазначения.СообщитьПользователю(СообщениеОбОшибке, , ПрефиксСообщенияСтроки + "ДатаНачалаДействия", , Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Отказ;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ДатаНовойСтроки(Форма)
	
	ПоследнийПериодДействия = Форма.ДатаНачалаСписания;
	ТекущаяДата = НачалоДня(ОбщегоНазначенияБПВызовСервера.ТекущаяДатаНаСервере());
	Для Каждого ЗаписьИстории Из Форма.ИсторияКоличестваЗастрахованных Цикл
		Если ЗаписьИстории.ДатаНачалаДействия > ПоследнийПериодДействия Тогда
			ПоследнийПериодДействия = ЗаписьИстории.ДатаНачалаДействия;
		КонецЕсли;
	КонецЦикла;

	ДатаНовойСтроки = Макс(ПоследнийПериодДействия + 60 * 60 * 24, ТекущаяДата);
	Если Форма.ДатаНачалаСписания <= ДатаНовойСтроки 
		И (ДатаНовойСтроки <= Форма.ДатаОкончанияСписания Или Не ЗначениеЗаполнено(Форма.ДатаОкончанияСписания)) Тогда
		Возврат ДатаНовойСтроки;
	Иначе
		Возврат Дата(1, 1, 1);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура СортироватьИсторию()

	ИсторияКоличестваЗастрахованных.Сортировать("ДатаНачалаДействия");
	
КонецПроцедуры


#КонецОбласти
