#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура устанавливает значения констант, отвечающих за командный интерфейс
//
// Параметры:
//   ТребуетсяСоздатьПоставляемыеВидыНалогов - Булево - признак того, что требуется заполнить справочник налогов
//
Процедура ОбновитьИспользуемыеСистемыНалогообложения(ТребуетсяСоздатьПоставляемыеВидыНалогов = Истина) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если СервисЭлектронныхТрудовыхКнижек.ИспользуетсяСервисЭлектронныхТрудовыхКнижек() Тогда
		Возврат;
	КонецЕсли;
	
	ИспользуемыеСистемыНалогообложения = ИспользуемыеСистемыНалогообложения();
	
	ЕстьИзменения = Ложь;
	
	Если Константы.ИспользуетсяОСНО.Получить() <> ИспользуемыеСистемыНалогообложения.ИспользуетсяОСНО Тогда
		Константы.ИспользуетсяОСНО.Установить(ИспользуемыеСистемыНалогообложения.ИспользуетсяОСНО);
		ЕстьИзменения = Истина;
	КонецЕсли;
	
	Если Константы.ИспользуетсяУСН.Получить() <> ИспользуемыеСистемыНалогообложения.ИспользуетсяУСН Тогда
		Константы.ИспользуетсяУСН.Установить(ИспользуемыеСистемыНалогообложения.ИспользуетсяУСН);
		ЕстьИзменения = Истина;
	КонецЕсли;
	
	Если Константы.ИспользуетсяНДФЛИП.Получить() <> ИспользуемыеСистемыНалогообложения.ИспользуетсяНДФЛИП Тогда
		Константы.ИспользуетсяНДФЛИП.Установить(ИспользуемыеСистемыНалогообложения.ИспользуетсяНДФЛИП);
		ЕстьИзменения = Истина;
	КонецЕсли;
	
	Если Константы.ИспользуетсяУСНПатент.Получить() <> ИспользуемыеСистемыНалогообложения.ИспользуетсяУСНПатент Тогда
		Константы.ИспользуетсяУСНПатент.Установить(ИспользуемыеСистемыНалогообложения.ИспользуетсяУСНПатент);
		ЕстьИзменения = Истина;
	КонецЕсли;
	
	Если Константы.ИспользуетсяЕНВД.Получить() <> ИспользуемыеСистемыНалогообложения.ИспользуетсяЕНВД Тогда
		Константы.ИспользуетсяЕНВД.Установить(ИспользуемыеСистемыНалогообложения.ИспользуетсяЕНВД);
		ЕстьИзменения = Истина;
	КонецЕсли;
	
	Если Константы.УплачиваетсяТорговыйСбор.Получить() <> ИспользуемыеСистемыНалогообложения.ИспользуетсяТорговыйСбор Тогда
		Константы.УплачиваетсяТорговыйСбор.Установить(ИспользуемыеСистемыНалогообложения.ИспользуетсяТорговыйСбор);
		ЕстьИзменения = Истина;
	КонецЕсли;
	
	Если Константы.ИспользуетсяРаздельныйУчетНДС.Получить() <> ИспользуемыеСистемыНалогообложения.ИспользуетсяРаздельныйУчетНДС Тогда
		Константы.ИспользуетсяРаздельныйУчетНДС.Установить(ИспользуемыеСистемыНалогообложения.ИспользуетсяРаздельныйУчетНДС);
		ЕстьИзменения = Истина;
	КонецЕсли;
	
	Если Константы.ИспользуетсяНалогНаПрофессиональныйДоход.Получить() <> ИспользуемыеСистемыНалогообложения.ИспользуетсяНалогНаПрофессиональныйДоход Тогда
		Константы.ИспользуетсяНалогНаПрофессиональныйДоход.Установить(ИспользуемыеСистемыНалогообложения.ИспользуетсяНалогНаПрофессиональныйДоход);
		ЕстьИзменения = Истина;
	КонецЕсли;
	
	Если Константы.ИспользуетсяАУСН.Получить() <> ИспользуемыеСистемыНалогообложения.ИспользуетсяАУСН Тогда
		Константы.ИспользуетсяАУСН.Установить(ИспользуемыеСистемыНалогообложения.ИспользуетсяАУСН);
		ЕстьИзменения = Истина;
	КонецЕсли;
	
	Если ЕстьИзменения Тогда
		НастройкиУчета.ПослеОбновленияИспользуемыхСистемНалогообложения();
	КонецЕсли;
	
	Если ТребуетсяСоздатьПоставляемыеВидыНалогов И ЕстьИзменения Тогда
		Справочники.ВидыНалоговИПлатежейВБюджет.СоздатьПоставляемыеЭлементы();
	КонецЕсли;
	
КонецПроцедуры

// Функция возвращает список всех используемых в информационной базе систем налогообложения
//
// Параметры:
//   НаДату - Дата - дата, на которую выполняется проверка
//            Неопределено - если нужен список за всю историю
//
// Возвращаемое значение:
//  Структура - где ключ - название системы налогообложения, значение - Истина или Ложь
//
Функция ИспользуемыеСистемыНалогообложения(НаДату = Неопределено) Экспорт
	
	СистемыНалогообложения = Новый Структура();
	СистемыНалогообложения.Вставить("ИспользуетсяОСНО", Ложь);
	СистемыНалогообложения.Вставить("ИспользуетсяУСН", Ложь);
	СистемыНалогообложения.Вставить("ИспользуетсяАУСН", Ложь);
	СистемыНалогообложения.Вставить("ИспользуетсяУСНДоходы", Ложь);
	СистемыНалогообложения.Вставить("ИспользуетсяУСНДоходыМинусРасходы", Ложь);
	СистемыНалогообложения.Вставить("ИспользуетсяНДФЛИП", Ложь);
	СистемыНалогообложения.Вставить("ИспользуетсяУСНПатент", Ложь);
	СистемыНалогообложения.Вставить("ИспользуетсяЕНВД", Ложь);
	СистемыНалогообложения.Вставить("ИспользуетсяТорговыйСбор", Ложь);
	СистемыНалогообложения.Вставить("ИспользуетсяРаздельныйУчетНДС", Ложь);
	СистемыНалогообложения.Вставить("ИспользуетсяНалогНаПрофессиональныйДоход", Ложь);
	СистемыНалогообложения.Вставить("УплачиваетсяЕдиныйНалоговыйПлатеж", Ложь);
	СистемыНалогообложения.Вставить("ИспользуетсяАУСН", Ложь);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МАКСИМУМ(СистемыНалогообложения.ИспользуетсяОСНО), ЛОЖЬ) КАК ИспользуетсяОСНО,
	|	ЕСТЬNULL(МАКСИМУМ(СистемыНалогообложения.ИспользуетсяУСН), ЛОЖЬ) КАК ИспользуетсяУСН,
	|	ЕСТЬNULL(МАКСИМУМ(СистемыНалогообложения.ИспользуетсяУСНДоходы), ЛОЖЬ) КАК ИспользуетсяУСНДоходы,
	|	ЕСТЬNULL(МАКСИМУМ(СистемыНалогообложения.ИспользуетсяУСНДоходыМинусРасходы), ЛОЖЬ) КАК ИспользуетсяУСНДоходыМинусРасходы,
	|	ЕСТЬNULL(МАКСИМУМ(СистемыНалогообложения.ИспользуетсяНДФЛИП), ЛОЖЬ) КАК ИспользуетсяНДФЛИП,
	|	ЕСТЬNULL(МАКСИМУМ(СистемыНалогообложения.ИспользуетсяУСНПатент), ЛОЖЬ) КАК ИспользуетсяУСНПатент,
	|	ЕСТЬNULL(МАКСИМУМ(СистемыНалогообложения.ИспользуетсяЕНВД), ЛОЖЬ) КАК ИспользуетсяЕНВД,
	|	ЕСТЬNULL(МАКСИМУМ(СистемыНалогообложения.ПлательщикТорговогоСбора), ЛОЖЬ) КАК ИспользуетсяТорговыйСбор,
	|	ЕСТЬNULL(МАКСИМУМ(СистемыНалогообложения.ИспользуетсяРаздельныйУчетНДС), ЛОЖЬ) КАК ИспользуетсяРаздельныйУчетНДС,
	|	ЕСТЬNULL(МАКСИМУМ(СистемыНалогообложения.ПрименяетсяНалогНаПрофессиональныйДоход), ЛОЖЬ) КАК ИспользуетсяНалогНаПрофессиональныйДоход,
	|	ЕСТЬNULL(МАКСИМУМ(СистемыНалогообложения.УплачиваетсяЕдиныйНалоговыйПлатеж), ЛОЖЬ) КАК УплачиваетсяЕдиныйНалоговыйПлатеж,
	|	ЕСТЬNULL(МАКСИМУМ(СистемыНалогообложения.ИспользуетсяАУСН), ЛОЖЬ) КАК ИспользуетсяАУСН
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		НастройкиСистемыНалогообложения.ПлательщикНалогаНаПрибыль КАК ИспользуетсяОСНО,
	|		НастройкиСистемыНалогообложения.ПрименяетсяУСН КАК ИспользуетсяУСН,
	|		НастройкиСистемыНалогообложения.ПрименяетсяУСНДоходы КАК ИспользуетсяУСНДоходы,
	|		НастройкиСистемыНалогообложения.ПрименяетсяУСНДоходыМинусРасходы КАК ИспользуетсяУСНДоходыМинусРасходы,
	|		НастройкиСистемыНалогообложения.ПлательщикНДФЛ КАК ИспользуетсяНДФЛИП,
	|		НастройкиСистемыНалогообложения.ПрименяетсяУСНПатент КАК ИспользуетсяУСНПатент,
	|		НастройкиСистемыНалогообложения.ПлательщикЕНВД КАК ИспользуетсяЕНВД,
	|		НастройкиСистемыНалогообложения.ПлательщикТорговогоСбора КАК ПлательщикТорговогоСбора,
	|		ЛОЖЬ КАК ИспользуетсяРаздельныйУчетНДС,
	|		НастройкиСистемыНалогообложения.ПрименяетсяНалогНаПрофессиональныйДоход КАК ПрименяетсяНалогНаПрофессиональныйДоход,
	|		НастройкиСистемыНалогообложения.ПлательщикЕНП КАК УплачиваетсяЕдиныйНалоговыйПлатеж,
	|		НастройкиСистемыНалогообложения.ПрименяетсяАУСН КАК ИспользуетсяАУСН
	|	ИЗ
	|		РегистрСведений.НастройкиСистемыНалогообложения КАК НастройкиСистемыНалогообложения
	|	ГДЕ
	|		НЕ НастройкиСистемыНалогообложения.Организация.ПометкаУдаления
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		НастройкиУчетаНДС.СложныйУчетНДС,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ
	|	ИЗ
	|		РегистрСведений.НастройкиУчетаНДС КАК НастройкиУчетаНДС
	|	ГДЕ
	|		НЕ НастройкиУчетаНДС.Организация.ПометкаУдаления) КАК СистемыНалогообложения";
	
	Запрос = Новый Запрос;
	Если НаДату <> Неопределено Тогда
		Запрос.УстановитьПараметр("НаДату", НаДату);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"РегистрСведений.НастройкиСистемыНалогообложения",
			"РегистрСведений.НастройкиСистемыНалогообложения.СрезПоследних(&НаДату)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"РегистрСведений.НастройкиУчетаНДС",
			"РегистрСведений.НастройкиУчетаНДС.СрезПоследних(&НаДату)");
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СистемыНалогообложения, Выборка);
	КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Не СистемыНалогообложения.ИспользуетсяУСН И Не СистемыНалогообложения.ИспользуетсяАУСН Тогда
		СистемыНалогообложения.ИспользуетсяУСНДоходы             = Ложь;
		СистемыНалогообложения.ИспользуетсяУСНДоходыМинусРасходы = Ложь;
	КонецЕсли;
	
	Возврат СистемыНалогообложения;
	
КонецФункции

// Проверяет использование систем налогообложения, отсутствующих в тарифе абонента.
// 
// Возвращаемое значение:
//   Булево - Истина, если используется недоступная система налогообложения
//
Функция ЕстьИспользуемыеСистемыНалогообложенияБезТарифа() Экспорт
	
	Для Каждого Описание Из ОписаниеНалоговыхРежимов() Цикл
		
		Если Описание.Используется И Не Описание.ВходитВТариф Тогда
			Возврат Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

// Возвращает представление систем налогообложения, используемых на указанную дату.
//
// Параметры:
//   ДатаСведений - Дата
//
// Возвращаемое значение:
//   Массив - массив представлений используемых систем налогообложения
//
Функция ПредставлениеИспользуемыхСистемНалогообложения(ДатаСведений) Экспорт
	
	ИспользуемыеСНО = Новый Массив;
	
	Для Каждого Описание Из ОписаниеНалоговыхРежимов(ДатаСведений) Цикл
		
		Если Описание.Используется И Не Описание.ВходитВТариф Тогда
			ИспользуемыеСНО.Добавить(Описание.Представление);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ОбщегоНазначенияКлиентСервер.СвернутьМассив(ИспользуемыеСНО);
	
КонецФункции

// Функция возвращает список всех используемых в информационной базе систем налогообложения
//
// Параметры:
//  ВидОрганизации         - Строка - имя вида организации
//  СистемаНалогообложения - Строка - имя системы налогообложения
//  ПлательщикЕНВД         - Булево - признак плательщика ЕНВД
//
// Возвращаемое значение:
//  Структура - где ключ - имя ресурса регистра настройки учета
//
Функция СтруктураУчетнойПолитики(ВидОрганизации, СистемаНалогообложения, ПлательщикЕНВД = Ложь, ПрименяетсяУСНПатент = Ложь) Экспорт
	
	СтруктураУчетнойПолитики = НастройкиУчета.ОписаниеСтруктурыУчетнойПолитики();
	
	СтруктураУчетнойПолитики.Вставить("ПлательщикЕНВД", ПлательщикЕНВД);
	СтруктураУчетнойПолитики.Вставить("ПрименяетсяУСНПатент", ПрименяетсяУСНПатент);
	
	Если СистемаНалогообложения = "УпрощеннаяДоходы" Тогда
		
		СтруктураУчетнойПолитики.Вставить("СистемаНалогообложения",
			ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.Упрощенная"));
		СтруктураУчетнойПолитики.Вставить("ОбъектНалогообложенияУСН",
			ПредопределенноеЗначение("Перечисление.ОбъектыНалогообложенияПоУСН.Доходы"));
		
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяУСН",       Истина);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяУСНДоходы", Истина);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяНалогНаПрофессиональныйДоход", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяАУСН", Ложь);
		
		СтруктураУчетнойПолитики.Вставить("СпособОценкиМПЗ", ПредопределенноеЗначение("Перечисление.СпособыОценки.ПоСредней"));
		
	ИначеЕсли СистемаНалогообложения = "УпрощеннаяДоходыМинусРасходы" Тогда
		
		СтруктураУчетнойПолитики.Вставить("СистемаНалогообложения",
			ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.Упрощенная"));
		СтруктураУчетнойПолитики.Вставить("ОбъектНалогообложенияУСН",
			ПредопределенноеЗначение("Перечисление.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы"));
		
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяУСН",                   Истина);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяУСНДоходыМинусРасходы", Истина);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяНалогНаПрофессиональныйДоход", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяАУСН", Ложь);
		
		СтруктураУчетнойПолитики.Вставить("СпособОценкиМПЗ", ПредопределенноеЗначение("Перечисление.СпособыОценки.ФИФО"));
		
	ИначеЕсли СистемаНалогообложения = "АУСНДоходы" Тогда
		
		СтруктураУчетнойПолитики.Вставить("СистемаНалогообложения",
			ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.АУСН"));
		СтруктураУчетнойПолитики.Вставить("ОбъектНалогообложенияУСН",
			ПредопределенноеЗначение("Перечисление.ОбъектыНалогообложенияПоУСН.Доходы"));
		
		СтруктураУчетнойПолитики.Вставить("ПлательщикЕНВД",       Ложь);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяУСН",       Ложь);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяУСНПатент", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяУСНДоходы", Истина);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяНалогНаПрофессиональныйДоход", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяАУСН", Истина);
		
		СтруктураУчетнойПолитики.Вставить("СпособОценкиМПЗ", ПредопределенноеЗначение("Перечисление.СпособыОценки.ПоСредней"));
		
	ИначеЕсли СистемаНалогообложения = "АУСНДоходыМинусРасходы" Тогда
		
		СтруктураУчетнойПолитики.Вставить("СистемаНалогообложения",
			ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.АУСН"));
		СтруктураУчетнойПолитики.Вставить("ОбъектНалогообложенияУСН",
			ПредопределенноеЗначение("Перечисление.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы"));
		
		СтруктураУчетнойПолитики.Вставить("ПлательщикЕНВД",       Ложь);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяУСН",       Ложь);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяУСНПатент", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяУСНДоходыМинусРасходы", Истина);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяНалогНаПрофессиональныйДоход", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяАУСН", Истина);
		
		СтруктураУчетнойПолитики.Вставить("СпособОценкиМПЗ", ПредопределенноеЗначение("Перечисление.СпособыОценки.ФИФО"));
			
		
	ИначеЕсли СистемаНалогообложения = "Патентная" Тогда
		
		СтруктураУчетнойПолитики.Вставить("СистемаНалогообложения",
			ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.ОсобыйПорядок"));
		
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяУСНПатент", Истина);
		СтруктураУчетнойПолитики.Вставить("ПлательщикЕНВД", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПлательщикТорговогоСбора", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяНалогНаПрофессиональныйДоход", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяАУСН", Ложь);
		
		СтруктураУчетнойПолитики.Вставить("СпособОценкиМПЗ", ПредопределенноеЗначение("Перечисление.СпособыОценки.ПоСредней"));
		
	ИначеЕсли СистемаНалогообложения = "ЕНВД" Тогда
		
		СтруктураУчетнойПолитики.Вставить("СистемаНалогообложения",
			ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.ОсобыйПорядок"));
		
		СтруктураУчетнойПолитики.Вставить("ПлательщикЕНВД", Истина);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяУСНПатент", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПлательщикТорговогоСбора", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяНалогНаПрофессиональныйДоход", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяАУСН", Ложь);
		
		СтруктураУчетнойПолитики.Вставить("СпособОценкиМПЗ", ПредопределенноеЗначение("Перечисление.СпособыОценки.ПоСредней"));
		
	ИначеЕсли СистемаНалогообложения = "НалогНаПрофессиональныйДоход" Тогда
		
		СтруктураУчетнойПолитики.Вставить("СистемаНалогообложения",
			ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.НалогНаПрофессиональныйДоход"));
		
		СтруктураУчетнойПолитики.Вставить("ПлательщикЕНВД", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяУСНПатент", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПлательщикТорговогоСбора", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяНалогНаПрофессиональныйДоход", Истина);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяАУСН", Ложь);
		
		СтруктураУчетнойПолитики.Вставить("СпособОценкиМПЗ", ПредопределенноеЗначение("Перечисление.СпособыОценки.ПоСредней"));
		
	ИначеЕсли СистемаНалогообложения = "АУСН" Тогда
		
		СтруктураУчетнойПолитики.Вставить("СистемаНалогообложения",
			ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.АУСН"));
			
		СтруктураУчетнойПолитики.Вставить("ПлательщикЕНВД", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяУСНПатент", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПлательщикТорговогоСбора", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяНалогНаПрофессиональныйДоход", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяАУСН", Истина);
		
	Иначе
		
		СтруктураУчетнойПолитики.Вставить("СистемаНалогообложения",
			ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.Общая"));
		
		СтруктураУчетнойПолитики.Вставить("ПлательщикНДС", Истина);
		Если ВидОрганизации = "ИндивидуальныйПредприниматель" Тогда
			СтруктураУчетнойПолитики.Вставить("СпособОценкиМПЗ", ПредопределенноеЗначение("Перечисление.СпособыОценки.ФИФО"));
		Иначе
			СтруктураУчетнойПолитики.Вставить("ПлательщикНалогаНаПрибыль", Истина);
			СтруктураУчетнойПолитики.Вставить("СпособОценкиМПЗ", ПредопределенноеЗначение("Перечисление.СпособыОценки.ПоСредней"));
		КонецЕсли;
		
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяНалогНаПрофессиональныйДоход", Ложь);
		СтруктураУчетнойПолитики.Вставить("ПрименяетсяАУСН", Ложь);
		
	КонецЕсли;
	
	Возврат СтруктураУчетнойПолитики;
	
КонецФункции

// Процедура устанавливает значения регистра по умолчанию
//
// Параметры:
//   Запись           - РегистрСведенийЗапись - запись регистра
//   ДанныеЗаполнения - Структура - где ключ - имя ресурса
//
Процедура УстановкаНастроекПоУмолчанию(Запись, ДанныеЗаполнения) Экспорт
	
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"Период",
		НачалоГода(ТекущаяДатаСеанса()));
	
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"Организация",
		БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация"));
	
	ЭтоФизЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Организация, "ЮридическоеФизическоеЛицо")
		= Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
	
	// Общие сведения
	ОсновнаяСистемаНалогообложения = Перечисления.СистемыНалогообложения.ОсновнаяСистемаНалогообложения(ЭтоФизЛицо);
	
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"СистемаНалогообложения",
		ОсновнаяСистемаНалогообложения);
		
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"ПлательщикЕНВД",
		Ложь);
		
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"ПрименяетсяУСНПатент",
		Ложь);
		
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"ПлательщикТорговогоСбора",
		Ложь);
		
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"ДатаИзменения",
		НачалоМесяца(Запись.Период));
	
	Если Запись.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Упрощенная Тогда
		
		ОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.Доходы;
		Если ДанныеЗаполнения.Свойство("ОбъектНалогообложенияУСН") Тогда
			ОбъектНалогообложенияУСН = ДанныеЗаполнения.ОбъектНалогообложенияУСН;
		КонецЕсли;
		
		Запись.ПрименяетсяУСН                          = Истина;
		Запись.ПрименяетсяУСНДоходы                    = ОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.Доходы;
		Запись.ПрименяетсяУСНДоходыМинусРасходы        = ОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы;
		Запись.ПлательщикНалогаНаПрибыль               = Ложь;
		Запись.ПлательщикНДС                           = Ложь;
		Запись.ПлательщикНДФЛ                          = Ложь;
		Запись.ПрименяетсяОсобыйПорядокНалогообложения = Ложь;
		Запись.ОбъектНалогообложенияУСН                = ОбъектНалогообложенияУСН;
		Запись.ПрименяетсяНалогНаПрофессиональныйДоход = Ложь;
		Запись.ПрименяетсяАУСН                    = Ложь;
	ИначеЕсли Запись.СистемаНалогообложения = Перечисления.СистемыНалогообложения.ОсобыйПорядок Тогда
		Если Запись.ПлательщикЕНВД Тогда
			// Только ЕНВД
			Запись.ПрименяетсяУСНПатент                = Ложь;
		Иначе
			// Только Патент
			Запись.ПлательщикЕНВД                      = Ложь;
			Запись.ПрименяетсяУСНПатент                = Истина;
		КонецЕсли;
		Запись.ПрименяетсяУСН                          = Ложь;
		Запись.ПрименяетсяУСНДоходы                    = Ложь;
		Запись.ПрименяетсяУСНДоходыМинусРасходы        = Ложь;
		Запись.ПлательщикНалогаНаПрибыль               = Ложь;
		Запись.ПлательщикНДС                           = Ложь;
		Запись.ПлательщикНДФЛ                          = Ложь;
		Запись.ПрименяетсяОсобыйПорядокНалогообложения = Истина;
		Запись.ПрименяетсяНалогНаПрофессиональныйДоход = Ложь;
		Запись.ПрименяетсяАУСН                    = Ложь;
	ИначеЕсли Запись.СистемаНалогообложения = Перечисления.СистемыНалогообложения.НалогНаПрофессиональныйДоход Тогда
		Запись.ПлательщикЕНВД                          = Ложь;
		Запись.ПрименяетсяУСНПатент                    = Ложь;
		Запись.ПрименяетсяУСН                          = Ложь;
		Запись.ПрименяетсяУСНДоходы                    = Ложь;
		Запись.ПрименяетсяУСНДоходыМинусРасходы        = Ложь;
		Запись.ПлательщикНалогаНаПрибыль               = Ложь;
		Запись.ПлательщикНДС                           = Ложь;
		Запись.ПлательщикНДФЛ                          = Ложь;
		Запись.ПрименяетсяОсобыйПорядокНалогообложения = Ложь;
		Запись.ПрименяетсяНалогНаПрофессиональныйДоход = Истина;
		Запись.ПрименяетсяАУСН                    = Ложь;
	ИначеЕсли Запись.СистемаНалогообложения = Перечисления.СистемыНалогообложения.АУСН Тогда
		ОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.Доходы;
		Если ДанныеЗаполнения.Свойство("ОбъектНалогообложенияУСН") Тогда
			ОбъектНалогообложенияУСН = ДанныеЗаполнения.ОбъектНалогообложенияУСН;
		КонецЕсли;
		Запись.ПлательщикЕНВД                          = Ложь;
		Запись.ПрименяетсяУСНПатент                    = Ложь;
		Запись.ПрименяетсяУСН                          = Ложь;
		Запись.ПрименяетсяУСНДоходы                    = Ложь;
		Запись.ПрименяетсяУСНДоходыМинусРасходы        = Ложь;
		Запись.ПлательщикНалогаНаПрибыль               = Ложь;
		Запись.ПлательщикНДС                           = Ложь;
		Запись.ПлательщикНДФЛ                          = Ложь;
		Запись.ПрименяетсяОсобыйПорядокНалогообложения = Ложь;
		Запись.ОбъектНалогообложенияУСН                = ОбъектНалогообложенияУСН;
		Запись.ПрименяетсяНалогНаПрофессиональныйДоход = Ложь;
		Запись.ПрименяетсяАУСН                    = Истина;
	Иначе
		Запись.ПрименяетсяУСН                          = Ложь;
		Запись.ПрименяетсяУСНДоходы                    = Ложь;
		Запись.ПрименяетсяУСНДоходыМинусРасходы        = Ложь;
		Запись.ПлательщикНалогаНаПрибыль               = НЕ ЭтоФизЛицо;
		Запись.ПлательщикНДС                           = Истина;
		Запись.ПлательщикНДФЛ                          = ЭтоФизЛицо;
		Запись.ПрименяетсяОсобыйПорядокНалогообложения = Ложь;
		Запись.ПрименяетсяНалогНаПрофессиональныйДоход = Ложь;
		Запись.ПрименяетсяАУСН                    = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Функция ПлательщикФиксированныхВзносов(Запись) Экспорт
	
	Возврат ЗначениеЗаполнено(Запись.Организация) И Не ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Запись.Организация)
		И (Запись.ПлательщикНДФЛ Или Запись.ПрименяетсяУСН Или Запись.ПрименяетсяАУСН Или Запись.ПлательщикЕНВД
		Или Запись.ПрименяетсяУСНПатент Или Запись.ПрименяетсяНалогНаПрофессиональныйДоход);
	
КонецФункции

Функция ВозможнаРеализацияАлкогольнойПродукции(Запись) Экспорт
	
	Возврат Запись.ПлательщикНалогаНаПрибыль Или Запись.ПлательщикНДФЛ Или Запись.ПрименяетсяУСН
	Или Запись.ПрименяетсяАУСН Или Запись.ПлательщикЕНВД Или Запись.ПрименяетсяУСНПатент;
	
КонецФункции

Функция ВозможнаРеализацияПодакцизныхТоваров(Запись) Экспорт
	
	Возврат Запись.ПлательщикНалогаНаПрибыль Или Запись.ПлательщикНДФЛ Или Запись.ПрименяетсяУСН 
	Или Запись.ПрименяетсяАУСН Или Запись.ПлательщикЕНВД Или Запись.ПрименяетсяУСНПатент;
	
КонецФункции

Функция ВозможенЕСХН(Запись) Экспорт
	
	Возврат Запись.ПлательщикНалогаНаПрибыль Или Запись.ПлательщикНДФЛ Или Запись.ПрименяетсяУСН 
		Или Запись.ПлательщикЕНВД Или Запись.ПрименяетсяУСНПатент;
	
КонецФункции

Функция ВозможенНДПИ(Запись) Экспорт
	
	ПризнакиПримененияНДПИ = Новый Массив();
	ПризнакиПримененияНДПИ.Добавить("ПлательщикНалогаНаПрибыль");
	ПризнакиПримененияНДПИ.Добавить("ПлательщикНДФЛ");
	ПризнакиПримененияНДПИ.Добавить("ПрименяетсяУСН");
	ПризнакиПримененияНДПИ.Добавить("ПрименяетсяАУСН");
	ПризнакиПримененияНДПИ.Добавить("ПлательщикЕНВД");
	ПризнакиПримененияНДПИ.Добавить("ПрименяетсяУСНПатент");
	
	Результат = Ложь;
	Для Каждого Признак Из ПризнакиПримененияНДПИ Цикл
		Результат = Результат Или Запись[Признак];
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПрименяетсяЕдинаяУпрощеннаяДекларация(Запись) Экспорт
	
	Возврат Запись.ПлательщикНалогаНаПрибыль Или Запись.ПлательщикНДФЛ Или Запись.ПрименяетсяУСН Или Запись.ПлательщикЕНВД Или Запись.ПрименяетсяУСНПатент;
	
КонецФункции

// Возвращает таблицу с интервалами, в которых ИП являлся плательщиком налога на профессиональный доход
//
// Параметры:
//  Организация - СправочникСсылка.Организации
//  ДатаНачала - Дата
//  ДатаОкончания - Дата
//
// Возвращаемое значение:
//  ТаблицаЗначений:
//   * ДатаНачала - Дата
//   * ДатаОкончания - Дата
//
Функция ИнтервалыИППрименяетНПД(Организация, ДатаНачала, ДатаОкончания) Экспорт
	
	Интервалы = Новый ТаблицаЗначений;
	ТипДата = ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата);
	Интервалы.Колонки.Добавить("ДатаНачала", ТипДата);
	Интервалы.Колонки.Добавить("ДатаОкончания", ТипДата);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиСистемыНалогообложенияСрезПоследних.ПрименяетсяНалогНаПрофессиональныйДоход КАК ПрименяетсяНПД,
		|	НастройкиСистемыНалогообложенияСрезПоследних.ДатаИзменения КАК ДатаИзменения
		|ИЗ
		|	РегистрСведений.НастройкиСистемыНалогообложения.СрезПоследних(&ДатаНачала, Организация = &Организация) КАК НастройкиСистемыНалогообложенияСрезПоследних
		|ГДЕ
		|	НастройкиСистемыНалогообложенияСрезПоследних.ДатаИзменения < &ДатаНачала
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НастройкиСистемыНалогообложения.ПрименяетсяНалогНаПрофессиональныйДоход,
		|	НастройкиСистемыНалогообложения.ДатаИзменения
		|ИЗ
		|	РегистрСведений.НастройкиСистемыНалогообложения КАК НастройкиСистемыНалогообложения
		|ГДЕ
		|	НастройкиСистемыНалогообложения.Организация = &Организация
		|	И НастройкиСистемыНалогообложения.ДатаИзменения МЕЖДУ &ДатаНачала И &ДатаОкончания
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаИзменения";
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПредыдущаяСтрока = Неопределено;
	Пока Выборка.Следующий() Цикл
		Если Не Выборка.ПрименяетсяНПД И ПредыдущаяСтрока = Неопределено Тогда
			Продолжить;
		ИначеЕсли Не Выборка.ПрименяетсяНПД И Не ЗначениеЗаполнено(ПредыдущаяСтрока.ДатаОкончания) Тогда
			ПредыдущаяСтрока.ДатаОкончания = НачалоДня(Выборка.ДатаИзменения) - 1;
		Иначе
			НоваяСтрока = Интервалы.Добавить();
			НоваяСтрока.ДатаНачала = ?(Выборка.ДатаИзменения < ДатаНачала, ДатаНачала, Выборка.ДатаИзменения);
			Если ПредыдущаяСтрока <> Неопределено И Не ЗначениеЗаполнено(ПредыдущаяСтрока.ДатаОкончания) Тогда
				ПредыдущаяСтрока.ДатаОкончания = НачалоДня(Выборка.ДатаИзменения) - 1;
			КонецЕсли;
			ПредыдущаяСтрока = НоваяСтрока;
		КонецЕсли;
	КонецЦикла;
	
	Если ПредыдущаяСтрока <> Неопределено И Не ЗначениеЗаполнено(ПредыдущаяСтрока.ДатаОкончания) Тогда
		ПредыдущаяСтрока.ДатаОкончания = ДатаОкончания;
	КонецЕсли;
	
	Возврат Интервалы;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"ПрисоединитьДополнительныеТаблицы
	|ЭтотСписок КАК ЭтотСписок
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОбособленныеПодразделения 
	|	ПО ОбособленныеПодразделения.ГоловнаяОрганизация = ЭтотСписок.Организация.ГоловнаяОрганизация
	|;
	|РазрешитьЧтение
	|ГДЕ
	| ЗначениеРазрешено(ОбособленныеПодразделения.Ссылка)
	|
	|;
	|РазрешитьИзменениеЕслиРазрешеноЧтение
	|ГДЕ
	| ЗначениеРазрешено(ЭтотСписок.Организация)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

// Функция возвращает таблицу значений периодов смены объекта УСН
//
// Параметры:
//  Организация - СправочникСсылка.Организация - Организация.
// 
// Возвращаемое значение:
//  Таблица - Таблица периодов смены и объектов, создается конструктором НовыйПериодыСменыОбъектаУСН()
//
Функция ПериодыСменыОбъектаУСН(Организация) Экспорт
	ПериодыПерехода = НовыйПериодыСменыОбъектаУСН();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиСистемыНалогообложения.Период КАК Период,
		|	НастройкиСистемыНалогообложения.ПрименяетсяУСНДоходы КАК ПрименяетсяУСНДоходы,
		|	НастройкиСистемыНалогообложения.ПрименяетсяУСНДоходыМинусРасходы КАК ПрименяетсяУСНДоходыМинусРасходы
		|ИЗ
		|	РегистрСведений.НастройкиСистемыНалогообложения КАК НастройкиСистемыНалогообложения
		|ГДЕ
		|	НастройкиСистемыНалогообложения.Организация = &Организация
		|	И НастройкиСистемыНалогообложения.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Упрощенная)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	ТаблицаРежимов = Запрос.Выполнить().Выгрузить();
	
	Для СтрокаТаблицыРежимов = 0 По ТаблицаРежимов.Количество() - 2 Цикл
		Если ТаблицаРежимов[СтрокаТаблицыРежимов + 1].ПрименяетсяУСНДоходы = ТаблицаРежимов[СтрокаТаблицыРежимов].ПрименяетсяУСНДоходыМинусРасходы
			И Год(ТаблицаРежимов[СтрокаТаблицыРежимов].Период) - Год(ТаблицаРежимов[СтрокаТаблицыРежимов + 1].Период) = 1 Тогда
			СтрокаТЗ = ПериодыПерехода.Добавить();
			СтрокаТЗ.ПериодПерехода = НачалоДня(КонецГода(ТаблицаРежимов[СтрокаТаблицыРежимов + 1].Период));
			Если ТаблицаРежимов[СтрокаТаблицыРежимов].ПрименяетсяУСНДоходы Тогда
				СтрокаТЗ.ОбъектНалогообложения = Перечисления.ОбъектыНалогообложенияПоУСН.Доходы;
			Иначе
				СтрокаТЗ.ОбъектНалогообложения = Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат ПериодыПерехода;
КонецФункции

// Снимает признак пилотного проекта для пользователй ПСБ
Процедура ИсправитьОшибкуПилотногоПроектаПСБ() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	БанковскиеСчетаИнтеграцииСБанком.Организация КАК Организация
	|ПОМЕСТИТЬ ВТ_Организации
	|ИЗ
	|	РегистрСведений.БанковскиеСчетаИнтеграцииСБанком КАК БанковскиеСчетаИнтеграцииСБанком
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиСистемыНалогообложения.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.НастройкиСистемыНалогообложения КАК НастройкиСистемыНалогообложения,
	|	ВТ_Организации КАК ВТ_Организации
	|ГДЕ
	|	НастройкиСистемыНалогообложения.СистемаНалогообложения = &СистемаНалогообложения
	|	И НастройкиСистемыНалогообложения.ПрименяетсяУСНДоходы
	|	И НастройкиСистемыНалогообложения.ПлательщикЕНП
	|	И ВТ_Организации.Организация = НастройкиСистемыНалогообложения.Организация";
	
	Запрос.УстановитьПараметр("СистемаНалогообложения", Перечисления.СистемыНалогообложения.Упрощенная);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.НастройкиСистемыНалогообложения.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Организация.Установить(Выборка.Организация);
		НаборЗаписей.Прочитать();
		Для Каждого Запись Из НаборЗаписей Цикл
			Запись.ПлательщикЕНП = Ложь;
		КонецЦикла;
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Обработка обновления ИБ.
//
Процедура ЗаполнитьДатуИзменения() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ПустаяДатаИзменения
	|ИЗ
	|	РегистрСведений.НастройкиСистемыНалогообложения КАК НастройкиСистемыНалогообложения
	|ГДЕ
	|	НастройкиСистемыНалогообложения.ДатаИзменения = ДАТАВРЕМЯ(1, 1, 1)";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.НастройкиСистемыНалогообложения.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	
	Для Каждого Запись Из НаборЗаписей Цикл
		Если Не ЗначениеЗаполнено(Запись.ДатаИзменения) Тогда
			Запись.ДатаИзменения = Запись.Период;
		КонецЕсли;
	КонецЦикла;
	
	Если НаборЗаписей.Количество() > 0 Тогда
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей, Истина);
	КонецЕсли;
	
КонецПроцедуры

// Обработка обновления ИБ.
//
Процедура ЗаполнитьПризнакПримененияАУСНДоходы() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ПрименяетсяАУСНДоходы
	|ИЗ
	|	РегистрСведений.НастройкиСистемыНалогообложения КАК НастройкиСистемыНалогообложения
	|ГДЕ
	|	НастройкиСистемыНалогообложения.ПрименяетсяАУСН
	|	И НастройкиСистемыНалогообложения.ОбъектНалогообложенияУСН = ЗНАЧЕНИЕ(Перечисление.ОбъектыНалогообложенияПоУСН.Доходы)";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.НастройкиСистемыНалогообложения.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	
	ВнесеныИзмененияВНаборЗаписей = Ложь;
	Для Каждого Запись Из НаборЗаписей Цикл
		ПрименяетсяАУСН = Запись.ПрименяетсяАУСН;
		ОбъектНалогообложенияУСНДоходы = Запись.ОбъектНалогообложенияУСН = Перечисления.ОбъектыНалогообложенияПоУСН.Доходы;
		Если ПрименяетсяАУСН И ОбъектНалогообложенияУСНДоходы Тогда
			Запись.ПрименяетсяАУСНДоходы = Истина;
			ВнесеныИзмененияВНаборЗаписей = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если ВнесеныИзмененияВНаборЗаписей Тогда
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОписаниеНалоговыхРежимов(Знач НаДату = Неопределено)
	
	Если НаДату = Неопределено Тогда
		НаДату = ТекущаяДатаСеанса();
	КонецЕсли;
	
	ИспользуемыеСистемыНалогообложения = ИспользуемыеСистемыНалогообложения(НаДату);
	
	Описание = НовыйОписаниеНалоговыхРежимов();
	
	НоваяСтрока = Описание.Добавить();
	НоваяСтрока.Имя = "НалогНаПрофессиональныйДоход";
	НоваяСтрока.Представление = НСтр("ru = 'Налог на профессиональный доход (""самозанятые"")'");
	НоваяСтрока.Используется = ИспользуемыеСистемыНалогообложения.ИспользуетсяНалогНаПрофессиональныйДоход;
	НоваяСтрока.ВходитВТариф = ТарификацияБП.РазрешенНалогНаПрофессиональныйДоход();
	
	НоваяСтрока = Описание.Добавить();
	НоваяСтрока.Имя = "Патент";
	НоваяСтрока.Представление = НСтр("ru = 'Патент'");
	НоваяСтрока.Используется = ИспользуемыеСистемыНалогообложения.ИспользуетсяУСНПатент;
	НоваяСтрока.ВходитВТариф = ТарификацияБП.РазрешенаПатентнаяСистемаНалогообложения();
	
	НоваяСтрока = Описание.Добавить();
	НоваяСтрока.Имя = "АУСН";
	НоваяСтрока.Представление = "Автоматизированная УСН";
	НоваяСтрока.Используется = ИспользуемыеСистемыНалогообложения.ИспользуетсяАУСН;
	НоваяСтрока.ВходитВТариф = ТарификацияБП.РазрешенаАУСН();
	
	НоваяСтрока = Описание.Добавить();
	НоваяСтрока.Имя = "УСНДоходы";
	НоваяСтрока.Представление = НСтр("ru = 'УСН (доходы)'");
	НоваяСтрока.Используется = ИспользуемыеСистемыНалогообложения.ИспользуетсяУСНДоходы;
	НоваяСтрока.ВходитВТариф = ТарификацияБП.РазрешенаУСН();
	
	НоваяСтрока = Описание.Добавить();
	НоваяСтрока.Имя = "УСНДоходыМинусРасходы";
	НоваяСтрока.Представление = НСтр("ru = 'УСН (доходы минус расходы)'");
	НоваяСтрока.Используется = ИспользуемыеСистемыНалогообложения.ИспользуетсяУСНДоходыМинусРасходы;
	НоваяСтрока.ВходитВТариф = ТарификацияБП.РазрешенаУСН();
	
	НоваяСтрока = Описание.Добавить();
	НоваяСтрока.Имя = "ЕНВД";
	НоваяСтрока.Представление = НСтр("ru = 'ЕНВД'");
	НоваяСтрока.Используется = ИспользуемыеСистемыНалогообложения.ИспользуетсяЕНВД;
	НоваяСтрока.ВходитВТариф = ТарификацияБП.РазрешенЕНВД();
	
	НоваяСтрока = Описание.Добавить();
	НоваяСтрока.Имя = "НДФЛИП";
	НоваяСтрока.Представление = НСтр("ru = 'Общая'");
	НоваяСтрока.Используется = ИспользуемыеСистемыНалогообложения.ИспользуетсяНДФЛИП;
	НоваяСтрока.ВходитВТариф = ТарификацияБП.РазрешенНДФЛИП();
	
	НоваяСтрока = Описание.Добавить();
	НоваяСтрока.Имя = "Общая";
	НоваяСтрока.Представление = НСтр("ru = 'Общая'");
	НоваяСтрока.Используется = ИспользуемыеСистемыНалогообложения.ИспользуетсяОСНО;
	НоваяСтрока.ВходитВТариф = ТарификацияБП.РазрешенаОбщаяСистемаНалогообложения();
	
	Возврат Описание;
	
КонецФункции

Функция НовыйОписаниеНалоговыхРежимов()
	
	Описание = Новый ТаблицаЗначений();
	
	Описание.Колонки.Добавить("Имя", ОбщегоНазначения.ОписаниеТипаСтрока(100));
	Описание.Колонки.Добавить("Представление", ОбщегоНазначения.ОписаниеТипаСтрока(100));
	Описание.Колонки.Добавить("Используется", Новый ОписаниеТипов("Булево"));
	Описание.Колонки.Добавить("ВходитВТариф", Новый ОписаниеТипов("Булево"));
	
	Возврат Описание;
	
КонецФункции

Функция НовыйПериодыСменыОбъектаУСН()
	
	Периоды = Новый ТаблицаЗначений();
	
	Периоды.Колонки.Добавить("ПериодПерехода", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	Периоды.Колонки.Добавить("ОбъектНалогообложения",
		Новый ОписаниеТипов("ПеречислениеСсылка.ОбъектыНалогообложенияПоУСН"));
	
	Возврат Периоды;
	
КонецФункции

#КонецОбласти

#КонецЕсли
