#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс


#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьРегистрРасчетТорговогоСбора(Параметры) Экспорт
	
	// Рассчитаем суммы торгового сбора для периода каждой регоперации чтобы заполнить регистр РасчетТорговогоСбора
	// Для этого:
	// 1. Отберем все регоперации у которых нет записей регистра
	// 2. Рассчитаем суммы налога на дату каждой регоперации, с учетом требования, что изменения параметров торговых точек которые приводят к увеличению суммы налога, 
	//     учитываются в периоде изменения, а изменения параметров торговых точек, которые приводят к уменьшению суммы налога, учитываются только со след. налогового периода. 
	//     Поэтому для расчета суммы сбора нужно получить максимальную сумму из суммы налога рассчитанной по параметрам торговой точки на начало периода и всех сумм налога за период.
	// 2.1 Определим последнюю запись параметров (и сумму налога) до начала регпериода. 
	// 2.2 Определим запись параметров в течении регпериода которая привела к максимальной сумме налога в течении периода
	// 2.3. Определим ту запись параметров (из п. 2.1 и 2.2) сумма налога в которой максимальна.
	// 3. Также определим дату изменения параметров торговой точки, которые привели к установке текущей суммы сбора. Эта информация потребуется для справки расчета
	//    Это будет самая поздняя запись параметров с такой суммой сбора - для случая когда параметры несколько раз увеличивались и уменьшались в течении периода.
	// Таким образом в регистре будет хранится как сумма сбора, так и дата сведений из регистра ПараметрыТорговыхТочек по которым эта сумма сбора была рассчитана
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ // Отберем только те операции по которым нет записей регистра
	|	МАКСИМУМ(РегламентнаяОперация.Ссылка) КАК РегламентнаяОперацияСсылка,
	|	КОНЕЦПЕРИОДА(РегламентнаяОперация.Дата, КВАРТАЛ) КАК ПериодРасчета,
	|	РегламентнаяОперация.Организация КАК Организация
	|ПОМЕСТИТЬ ВТ_РегламентныеОперации
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетТорговогоСбора КАК РасчетТорговогоСбора
	|		ПО РегламентнаяОперация.Ссылка = РасчетТорговогоСбора.Регистратор
	|ГДЕ
	|	НЕ РегламентнаяОперация.ПометкаУдаления
	|	И РегламентнаяОперация.Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийРегламентныхОпераций.Выполнено)
	|	И РегламентнаяОперация.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыРегламентныхОпераций.РасчетТорговогоСбора)
	|	И РасчетТорговогоСбора.Регистратор ЕСТЬ NULL
	|	И КОНЕЦПЕРИОДА(РегламентнаяОперация.Дата, КВАРТАЛ) = КОНЕЦПЕРИОДА(РегламентнаяОперация.Дата, МЕСЯЦ)
	|СГРУППИРОВАТЬ ПО
	|	РегламентнаяОперация.Организация,
	|	КОНЕЦПЕРИОДА(РегламентнаяОперация.Дата, КВАРТАЛ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ // Выберем параметры торговых точек на момент каждой регоперации
	|	ПараметрыТорговыхТочек.Организация КАК Организация,
	|	ПараметрыТорговыхТочек.ТорговаяТочка КАК ТорговаяТочка,
	|	ВТ_РегламентныеОперации.ПериодРасчета КАК ПериодРасчета,
	|	ПараметрыТорговыхТочек.Период КАК ПериодЗаписи,
	|	ПараметрыТорговыхТочек.Ставка КАК Ставка,
	|	ПараметрыТорговыхТочек.СуммаЛьготы КАК СуммаЛьготы,
	|	ПараметрыТорговыхТочек.СуммаСбора КАК СуммаСбора,
	|	ПараметрыТорговыхТочек.РасшифровкаРасчета КАК РасшифровкаРасчета
	|ПОМЕСТИТЬ ВТ_ПараметрыТорговыхТочекПоПериодам
	|ИЗ
	|	ВТ_РегламентныеОперации КАК ВТ_РегламентныеОперации
	|		// Параметры торговых точек до конца периода регоперации - из них будем брать последнюю
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТорговыхТочек КАК ПараметрыТорговыхТочек 
	|		ПО ВТ_РегламентныеОперации.ПериодРасчета >= ПараметрыТорговыхТочек.Период
	|			И ВТ_РегламентныеОперации.Организация = ПараметрыТорговыхТочек.Организация
	|		// запись на начало периода - это всегда изменение ставки, она учитывается всегда в текущем периоде
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыТорговыхТочек КАК ПараметрыТорговыхТочекНачалоПериода 
	|		ПО (ПараметрыТорговыхТочекНачалоПериода.Период = НАЧАЛОПЕРИОДА(ВТ_РегламентныеОперации.ПериодРасчета, КВАРТАЛ))
	|			И (ПараметрыТорговыхТочекНачалоПериода.Организация = ПараметрыТорговыхТочек.Организация)
	|			И (ПараметрыТорговыхТочекНачалоПериода.ТорговаяТочка = ПараметрыТорговыхТочек.ТорговаяТочка)
	|ГДЕ
	|	// не берем те записи, сумма сбора которых меньше чем была на начало периода, такие записи будут учитываться только со следующего квартала
	|	(КОНЕЦПЕРИОДА(ПараметрыТорговыхТочек.Период, КВАРТАЛ) <> ВТ_РегламентныеОперации.ПериодРасчета 
	|			ИЛИ ПараметрыТорговыхТочек.СуммаСбора >= ЕСТЬNULL(ПараметрыТорговыхТочекНачалоПериода.СуммаСбора, ПараметрыТорговыхТочек.СуммаСбора))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ТорговаяТочка,
	|	ПериодЗаписи
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Для каждой регоперации получим дату записи параметров торговой точки для СрезПервых на начало квартала
	|// В дальнейшем получим сумму сбора как максимум от суммы на начало периода и всех записей за период
	|ВЫБРАТЬ
	|	ВТ_ПараметрыТорговыхТочекПоПериодам.Организация КАК Организация,
	|	ВТ_ПараметрыТорговыхТочекПоПериодам.ТорговаяТочка КАК ТорговаяТочка,
	|	ВТ_ПараметрыТорговыхТочекПоПериодам.ПериодРасчета КАК ПериодРасчета, // дата регоперации
	|	МАКСИМУМ(ВТ_ПараметрыТорговыхТочекПоПериодам.ПериодЗаписи) КАК ПериодЗаписи // дата записи 
	|ПОМЕСТИТЬ ВТ_ПараметрыТорговыхТочекСрезПервых
	|ИЗ
	|	ВТ_ПараметрыТорговыхТочекПоПериодам КАК ВТ_ПараметрыТорговыхТочекПоПериодам
	|ГДЕ
	|	ВТ_ПараметрыТорговыхТочекПоПериодам.ПериодЗаписи <= НАЧАЛОПЕРИОДА(ВТ_ПараметрыТорговыхТочекПоПериодам.ПериодРасчета, КВАРТАЛ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПараметрыТорговыхТочекПоПериодам.Организация,
	|	ВТ_ПараметрыТорговыхТочекПоПериодам.ТорговаяТочка,
	|	ВТ_ПараметрыТорговыхТочекПоПериодам.ПериодРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПараметрыТорговыхТочекСрезПервых.Организация КАК Организация,
	|	ВТ_ПараметрыТорговыхТочекСрезПервых.ТорговаяТочка КАК ТорговаяТочка,
	|	ВТ_ПараметрыТорговыхТочекСрезПервых.ПериодРасчета КАК ПериодРасчета,
	|	МАКСИМУМ(ВТ_ПараметрыТорговыхТочекПоПериодам.СуммаСбора) КАК СуммаСбора // сумма сбора - максимальная сумма среди записи на начало периода и всех записей за период
	|ПОМЕСТИТЬ ВТ_СуммаСбораЗаКвартал
	|ИЗ
	|	ВТ_ПараметрыТорговыхТочекСрезПервых КАК ВТ_ПараметрыТорговыхТочекСрезПервых
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыТорговыхТочекПоПериодам КАК ВТ_ПараметрыТорговыхТочекПоПериодам
	|		ПО ВТ_ПараметрыТорговыхТочекСрезПервых.Организация = ВТ_ПараметрыТорговыхТочекПоПериодам.Организация
	|			И ВТ_ПараметрыТорговыхТочекСрезПервых.ТорговаяТочка = ВТ_ПараметрыТорговыхТочекПоПериодам.ТорговаяТочка
	|			И ВТ_ПараметрыТорговыхТочекСрезПервых.ПериодРасчета = ВТ_ПараметрыТорговыхТочекПоПериодам.ПериодРасчета
	|			И ВТ_ПараметрыТорговыхТочекСрезПервых.ПериодЗаписи <= ВТ_ПараметрыТорговыхТочекПоПериодам.ПериодЗаписи
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПараметрыТорговыхТочекСрезПервых.Организация,
	|	ВТ_ПараметрыТорговыхТочекСрезПервых.ТорговаяТочка,
	|	ВТ_ПараметрыТорговыхТочекСрезПервых.ПериодРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Найдем запись параметров торговой точки из предыдущего шага, чтобы записать в регистр дату установки параметров
	|// Так как записей с такой суммой может быть несколько (например если течении квартала площадь уменьшалась и увеличивалась несколько раз),
	|// то возьмем последнюю из них
	|ВЫБРАТЬ
	|	ВТ_СуммаСбораЗаКвартал.Организация КАК Организация,
	|	ВТ_СуммаСбораЗаКвартал.ТорговаяТочка КАК ТорговаяТочка,
	|	ВТ_СуммаСбораЗаКвартал.ПериодРасчета КАК ПериодРасчета,
	|	МАКСИМУМ(ВТ_ПараметрыТорговыхТочекПоПериодам.ПериодЗаписи) КАК ПериодЗаписи
	|ПОМЕСТИТЬ ВТ_ПараметрыТорговыхТочекСрезПоследних
	|ИЗ
	|	ВТ_СуммаСбораЗаКвартал КАК ВТ_СуммаСбораЗаКвартал
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыТорговыхТочекПоПериодам КАК ВТ_ПараметрыТорговыхТочекПоПериодам
	|		ПО ВТ_СуммаСбораЗаКвартал.Организация = ВТ_ПараметрыТорговыхТочекПоПериодам.Организация
	|			И ВТ_СуммаСбораЗаКвартал.ТорговаяТочка = ВТ_ПараметрыТорговыхТочекПоПериодам.ТорговаяТочка
	|			И ВТ_СуммаСбораЗаКвартал.ПериодРасчета = ВТ_ПараметрыТорговыхТочекПоПериодам.ПериодРасчета
	|			И ВТ_СуммаСбораЗаКвартал.СуммаСбора = ВТ_ПараметрыТорговыхТочекПоПериодам.СуммаСбора
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_СуммаСбораЗаКвартал.Организация,
	|	ВТ_СуммаСбораЗаКвартал.ТорговаяТочка,
	|	ВТ_СуммаСбораЗаКвартал.ПериодРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_РегламентныеОперации.РегламентнаяОперацияСсылка КАК РегламентнаяОперацияСсылка,
	|	ВТ_ПараметрыТорговыхТочекСрезПоследних.Организация КАК Организация,
	|	ВТ_ПараметрыТорговыхТочекСрезПоследних.ТорговаяТочка КАК ТорговаяТочка,
	|	ВТ_ПараметрыТорговыхТочекСрезПоследних.ПериодРасчета КАК ПериодРасчета, // период регоперации
	|	ВТ_ПараметрыТорговыхТочекСрезПоследних.ПериодЗаписи КАК ДатаРегистрационныхДанных, // дата когда были установлены параметры по которым произведен расчет
	|	ВТ_ПараметрыТорговыхТочекПоПериодам.Ставка КАК Ставка,
	|	ВТ_ПараметрыТорговыхТочекПоПериодам.СуммаЛьготы КАК СуммаЛьготы,
	|	ВТ_ПараметрыТорговыхТочекПоПериодам.СуммаСбора КАК СуммаСбора,
	|	ВТ_ПараметрыТорговыхТочекПоПериодам.РасшифровкаРасчета КАК РасшифровкаРасчета
	|ИЗ
	|	ВТ_ПараметрыТорговыхТочекСрезПоследних КАК ВТ_ПараметрыТорговыхТочекСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыТорговыхТочекПоПериодам КАК ВТ_ПараметрыТорговыхТочекПоПериодам
	|		ПО ВТ_ПараметрыТорговыхТочекСрезПоследних.Организация = ВТ_ПараметрыТорговыхТочекПоПериодам.Организация
	|			И ВТ_ПараметрыТорговыхТочекСрезПоследних.ТорговаяТочка = ВТ_ПараметрыТорговыхТочекПоПериодам.ТорговаяТочка
	|			И ВТ_ПараметрыТорговыхТочекСрезПоследних.ПериодРасчета = ВТ_ПараметрыТорговыхТочекПоПериодам.ПериодРасчета
	|			И ВТ_ПараметрыТорговыхТочекСрезПоследних.ПериодЗаписи = ВТ_ПараметрыТорговыхТочекПоПериодам.ПериодЗаписи
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РегламентныеОперации КАК ВТ_РегламентныеОперации
	|		ПО ВТ_ПараметрыТорговыхТочекСрезПоследних.Организация = ВТ_РегламентныеОперации.Организация
	|			И ВТ_ПараметрыТорговыхТочекСрезПоследних.ПериодРасчета = ВТ_РегламентныеОперации.ПериодРасчета
	|ИТОГИ ПО
	|	РегламентнаяОперацияСсылка";
	
	ВыборкаПоРегистратору = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ОбработаноЗаписей = 0;
	НеУдалосьОбработать = 0;
	
	Пока ВыборкаПоРегистратору.Следующий() Цикл
		НачатьТранзакцию();
		
		Попытка
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить("Документ.РегламентнаяОперация");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаПоРегистратору.РегламентнаяОперацияСсылка);
			
			Блокировка.Заблокировать();
			
			ДокументОбъект = ВыборкаПоРегистратору.РегламентнаяОперацияСсылка.ПолучитьОбъект();
			Если ДокументОбъект = Неопределено Тогда
			
				ШаблонСообщения = НСтр("ru = 'Не удалось получить объект по ссылке
		                               |%1'");
				ТекстСообщения = СтрШаблон(ШаблонСообщения, ВыборкаПоРегистратору.РегламентнаяОперацияСсылка);
				
				ЗаписьЖурналаРегистрации(
					ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
					УровеньЖурналаРегистрации.Ошибка,
					Метаданные.РегистрыСведений.РасчетТорговогоСбора,
					, 
					ТекстСообщения);
					
				Продолжить;
			
			КонецЕсли;
			
			ДокументОбъект.РучнаяКорректировка = Истина;
			
			НаборЗаписейРасчетТорговогоСбора = РегистрыСведений.РасчетТорговогоСбора.СоздатьНаборЗаписей();
			НаборЗаписейРасчетТорговогоСбора.Отбор.Регистратор.Установить(ВыборкаПоРегистратору.РегламентнаяОперацияСсылка);
			
			ВыборкаПоЗаписям = ВыборкаПоРегистратору.Выбрать();
			Пока ВыборкаПоЗаписям.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(НаборЗаписейРасчетТорговогоСбора.Добавить(), ВыборкаПоЗаписям);
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписейРасчетТорговогоСбора);
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
			
			ОбработаноЗаписей = ОбработаноЗаписей + 1;
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ШаблонСообщения = НСтр("ru = 'Не удалось создать записи расчета торгового сбора по причине
	                               |%1'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.РегистрыСведений.РасчетТорговогоСбора,
				, 
				ТекстСообщения);
				
			НеУдалосьОбработать = НеУдалосьОбработать + 1;
		КонецПопытки;
	КонецЦикла; 
	
	Если НеУдалосьОбработать > 0 Тогда 
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процедуре РегистрСведений.РасчетТорговогоСбора.ЗаполнитьРегистрРасчетТорговогоСбора() не удалось обработать %1 из %2 записей.'"),
				НеУдалосьОбработать, НеУдалосьОбработать+ОбработаноЗаписей);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Информация,
		Метаданные.РегистрыСведений.РасчетТорговогоСбора, ,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Процедура РегистрСведений.РасчетТорговогоСбора.ЗаполнитьРегистрРасчетТорговогоСбора() обработала %1 записей.'"), ОбработаноЗаписей));
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Истина;
КонецПроцедуры

// Функция проверяет, обработан ли документ процедурой обновления (см. ЗаполнитьРегистрРасчетТорговогоСбора).
//  Определена в свойстве ПроцедураПроверки соответствующего обработчика обновления.
//
// Параметры:
//  Параметры - Структура - см. документацию к БСП
// 
// Возвращаемое значение:
//   - Булево - если Истина, то можно редактировать и записывать данные, Ложь - данные недоступны, пока не будут обработаны процедурой обновления.

Функция РегистрТорговогоСбораЗаполнен(Параметры) Экспорт
	Если Параметры.Метаданные <> Метаданные.Документы.РегламентнаяОперация Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если Параметры.ЭтоНовый Тогда
		Возврат Истина;
	КонецЕсли;
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Отбор, "Ссылка, Дата, ВидОперации");
	
	Если РеквизитыДокумента.ВидОперации <> Перечисления.ВидыРегламентныхОпераций.РасчетТорговогоСбора Тогда
		Возврат Истина;
	КонецЕсли; 

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСведений", КонецКвартала(РеквизитыДокумента.Дата));
	Запрос.УстановитьПараметр("Регистратор",  РеквизитыДокумента.Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	РасчетТорговогоСбора.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрСведений.ПараметрыТорговыхТочек.СрезПоследних(&ДатаСведений, ) КАК ПараметрыТорговыхТочекСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетТорговогоСбора КАК РасчетТорговогоСбора
	|		ПО ПараметрыТорговыхТочекСрезПоследних.Организация = РасчетТорговогоСбора.Организация
	|			И ПараметрыТорговыхТочекСрезПоследних.ТорговаяТочка = РасчетТорговогоСбора.ТорговаяТочка
	|			И (РасчетТорговогоСбора.Регистратор = &Регистратор)
	|ГДЕ
	|	ПараметрыТорговыхТочекСрезПоследних.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийТорговыеТочки.СнятиеСУчета)
	|	И ПараметрыТорговыхТочекСрезПоследних.ДатаПодачиУведомления < &ДатаСведений
	|	И РасчетТорговогоСбора.Регистратор ЕСТЬ NULL";
	
	Возврат Запрос.Выполнить().Пустой();
КонецФункции
 

#КонецОбласти

#КонецЕсли