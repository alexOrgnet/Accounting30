#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Читает данные регистра. Используется для обработки обновления при отказе от этого регистра.
//
// Параметры:
//  Настройки   - Структура - см. Справочники.НастройкиУчетаЗатрат.НовыйБазовыеНастройкиУчетаЗатрат;
//                Заполняемая коллекция
//  Период      - Дата - период действия записей регистра
//  Организация - СправочникСсылка.Организации
//
Процедура ПрочитатьНастройки(Настройки, Период, Организация) Экспорт
	
	// Для совместимости с предыдущими версиями в качестве основной базы распределения указываем ту,
	// что использовалась для затрат внутри счета 20.
	ОбщаяБазаРаспределения = БазаРаспределенияНаКалькуляционномСчете(Период, Организация);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ВсяОрганизация = БухгалтерскийУчетПереопределяемый.ВсяОрганизация(Организация);
	ЕстьФилиалы    = (ВсяОрганизация.Количество() > 1);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Период",      КонецМесяца(Период));
	Запрос.УстановитьПараметр("Организации", ВсяОрганизация);
	Запрос.УстановитьПараметр("ЕстьФилиалы", ЕстьФилиалы);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &ЕстьФилиалы
	|			ТОГДА Настройки.Организация
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	КОНЕЦ КАК Филиал,
	|	Настройки.СчетЗатрат КАК Счет,
	|	Настройки.Подразделение КАК Подразделение,
	|	Настройки.СтатьяЗатрат КАК СтатьяЗатрат,
	|	Настройки.БазаРаспределения КАК БазаРаспределения,
	|	ВЫБОР
	|		КОГДА Настройки.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.БазыРаспределенияКосвенныхРасходов.ОтдельныеСтатьиПрямыхЗатрат)
	|			ТОГДА Настройки.СписокСтатейЗатрат
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СписокСтатейЗатратВключенныхВБазуРаспределенияКосвенныхРасходов.ПустаяСсылка)
	|	КОНЕЦ КАК СписокСтатейЗатрат,
	|	ВЫБОР
	|		КОГДА Настройки.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.БазыРаспределенияКосвенныхРасходов.Выручка)
	|			ТОГДА Настройки.СчетПрямыхЗатрат
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	КОНЕЦ КАК СчетПрямыхЗатрат,
	|	ВЫБОР
	|		КОГДА Настройки.БазаРаспределения = ЗНАЧЕНИЕ(Перечисление.БазыРаспределенияКосвенныхРасходов.Выручка)
	|			ТОГДА Настройки.ПодразделениеЗатрат
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|	КОНЕЦ КАК ПодразделениеЗатрат,
	|	Настройки.Период КАК ПериодНастройки,
	|	Настройки.Организация КАК Организация
	|ПОМЕСТИТЬ ДанныеРегистра
	|ИЗ
	|	РегистрСведений.УдалитьМетодыРаспределенияКосвенныхРасходовОрганизаций.СрезПоследних(&Период, Организация В (&Организации)) КАК Настройки
	|ГДЕ
	|	Настройки.БазаРаспределения <> ЗНАЧЕНИЕ(Перечисление.БазыРаспределенияКосвенныхРасходов.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
	|	ДанныеРегистра.БазаРаспределения КАК БазаРаспределения,
	|	ДанныеРегистра.СписокСтатейЗатрат КАК СписокСтатейЗатрат,
	|	ДанныеРегистра.СчетПрямыхЗатрат КАК СчетПрямыхЗатрат,
	|	ДанныеРегистра.ПодразделениеЗатрат КАК ПодразделениеЗатрат
	|ИЗ
	|	ДанныеРегистра КАК ДанныеРегистра
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетПрямыхЗатрат,
	|	ПодразделениеЗатрат,
	|	СписокСтатейЗатрат";
		
	Выборка = Запрос.Выполнить().Выбрать();
	КоличествоЗаписей = Выборка.Количество();
	Если КоличествоЗаписей = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Выборка.Следующий();
	
	ТребуютсяДетальныеНастройки =
		// Сохранение данных филиалов
		ЕстьФилиалы
		// Сохранение других записей регистра
		Или КоличествоЗаписей > 1
		// Разделение настроек калькуляционного счета и счетов косвенных затрат
		Или ОбщаяБазаРаспределения <> Выборка.БазаРаспределения
		// Сохранение модификаторов базы распределения косвенных затрат
		Или ИспользуютсяМодификаторыРаспределения(Выборка);
		
	Если Не ТребуютсяДетальныеНастройки Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрываемыеСчета = УчетЗатрат.ПредопределенныеСчетаКосвенныхРасходов();
	
	Если КоличествоЗаписей = 1 Тогда
		НастройкаРаспределения = Настройки.Распределение.Добавить();
		ЗаполнитьЗначенияСвойств(НастройкаРаспределения, Выборка);
		Возврат;
	КонецЕсли;
	
	// Далее приоритезируем детальные записи регистра.
	
	// Учтем иерархию счетов в настройках: может быть указан
	// - пустой счет в значении "все счета"
	// - счет-группа в значении "все субсчета"
	//
	// В отличие от регистра, в настройке не допускается указывать пустые счета.
	//
	// Определим иерархию записей с незаполненными статьями затрат и подразделениями.
	// В настройке используется подход "незаполненное поле означает <все, для которых не указано явно>".
	// Поэтому одни и те же расходы могут попасть под две настройки и применяется приоритезация настроек.
	// Порядок записей в регистре не определен, поэтому приоритет определяется условным правилом:
	// если есть две подходящие настройки, в одной из которых заполнено только подразделение, а в другой - только статья,
	// то применять следует первую.
	
	СчетаНастройки = Новый ТаблицаЗначений;
	СчетаНастройки.Колонки.Добавить("СчетРегистра",  Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	СчетаНастройки.Колонки.Добавить("СчетНастройки", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	СчетаНастройки.Колонки.Добавить("Приоритет",     Новый ОписаниеТипов("Число"));
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Настройки.Счет КАК СчетРегистра,
	|	НЕ Хозрасчетный.Ссылка ЕСТЬ NULL КАК СчетСуществует
	|ИЗ
	|	ДанныеРегистра КАК Настройки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|		ПО Настройки.Счет = Хозрасчетный.Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.СчетРегистра) Тогда
			Запись = СчетаНастройки.Добавить();
			Запись.СчетРегистра  = Выборка.СчетРегистра;
			Запись.СчетНастройки = Выборка.СчетРегистра;
			Если Выборка.СчетСуществует Тогда
				Запись.Приоритет = Выборка.СчетРегистра.Уровень();
			КонецЕсли;
		Иначе
			Для Каждого СчетНастройки Из ЗакрываемыеСчета Цикл
				Запись = СчетаНастройки.Добавить();
				Запись.СчетРегистра  = Выборка.СчетРегистра;
				Запись.СчетНастройки = СчетНастройки;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СчетаНастройки", СчетаНастройки);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетаНастройки.СчетРегистра КАК СчетРегистра,
	|	СчетаНастройки.СчетНастройки КАК СчетНастройки,
	|	СчетаНастройки.Приоритет КАК Приоритет
	|ПОМЕСТИТЬ СчетаНастройки
	|ИЗ
	|	&СчетаНастройки КАК СчетаНастройки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетРегистра
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаНастройки.Приоритет КАК Приоритет,
	|	ЕСТЬNULL(Настройки.Счет.Код, """") КАК СчетКод,
	|	СчетаНастройки.СчетНастройки КАК Счет,
	|	Настройки.Филиал КАК Филиал,
	|	Настройки.Подразделение КАК Подразделение,
	|	Настройки.СтатьяЗатрат КАК СтатьяЗатрат,
	|	Настройки.БазаРаспределения КАК БазаРаспределения,
	|	Настройки.СписокСтатейЗатрат КАК СписокСтатейЗатрат,
	|	Настройки.СчетПрямыхЗатрат КАК СчетПрямыхЗатрат,
	|	Настройки.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
	|	"""" КАК ОтборБазыРаспределения
	|ИЗ
	|	ДанныеРегистра КАК Настройки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаНастройки КАК СчетаНастройки
	|		ПО Настройки.Счет = СчетаНастройки.СчетРегистра
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет,
	|	СчетКод,
	|	Счет,
	|	Филиал,
	|	Подразделение,
	|	СтатьяЗатрат
	|ИТОГИ ПО
	|	Счет";
	
	ВыборкаСчет = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСчет.Следующий() Цикл
		
		НастройкиЗакрытияСчета = Настройки.Закрытие[ВыборкаСчет.Счет];
		Если НастройкиЗакрытияСчета = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		НастройкиЗакрытияСчета.Распределение.Очистить();
		
		Выборка = ВыборкаСчет.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ВсеНастройкиТривиальны = Истина;
		
		Пока Выборка.Следующий() Цикл
		
			ВсеНастройкиТривиальны = ВсеНастройкиТривиальны
				И Выборка.БазаРаспределения = ОбщаяБазаРаспределения
				И Не ИспользуютсяМодификаторыРаспределения(Выборка);
				
			Если ВсеНастройкиТривиальны Тогда
				Продолжить;
			КонецЕсли;
			
			НастройкаРаспределения = НастройкиЗакрытияСчета.Распределение.Добавить();
			ЗаполнитьЗначенияСвойств(НастройкаРаспределения, Выборка);
			Справочники.НастройкиУчетаЗатрат.УстановитьМодификаторБазыРаспределения(НастройкаРаспределения, Выборка);
			
		КонецЦикла;
		
	КонецЦикла;
	
	// применим общую базу распределения
	ПеренестиОбщуюБазуРаспределения(Настройки, ОбщаяБазаРаспределения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция БазаРаспределенияНаКалькуляционномСчете(Период, Организация)
	
	// Для совместимости с предыдущими версиями в качестве основной базы распределения указываем ту,
	// что использовалась для затрат внутри счета 20.
	Если УчетнаяПолитика.ПлановаяСебестоимость(Организация, Период) Тогда
		Возврат Перечисления.БазыРаспределенияКосвенныхРасходов.ПлановаяСебестоимость;
	Иначе
		Возврат Перечисления.БазыРаспределенияКосвенныхРасходов.ПрямыеЗатраты;
	КонецЕсли;
	
КонецФункции

Функция ИспользуютсяМодификаторыРаспределения(Запись)
	
	Возврат ЗначениеЗаполнено(Запись.СписокСтатейЗатрат)
		Или ЗначениеЗаполнено(Запись.СчетПрямыхЗатрат)
		Или ЗначениеЗаполнено(Запись.ПодразделениеЗатрат);
		
КонецФункции

Процедура ПеренестиОбщуюБазуРаспределения(Настройки, ОбщаяБазаРаспределения)
	
	Если Не ЗначениеЗаполнено(ОбщаяБазаРаспределения) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ОписаниеНастройкиЗакрытияСчета Из Настройки.Закрытие Цикл
		
		НастройкиРаспределения = ОписаниеНастройкиЗакрытияСчета.Значение.Распределение;
		
		Если ЗначениеЗаполнено(НастройкиРаспределения)
			И Не ЗначениеЗаполнено(НастройкиРаспределения[0].Филиал)
			И Не ЗначениеЗаполнено(НастройкиРаспределения[0].Подразделение)
			И Не ЗначениеЗаполнено(НастройкиРаспределения[0].СтатьяЗатрат) Тогда
			// Для счета задана максимально общая настройка, устанавливать другую общую нет смысла
			Продолжить;
		КонецЕсли;
		
		НастройкаРаспределения = НастройкиРаспределения.Вставить(0);
		НастройкаРаспределения.БазаРаспределения = ОбщаяБазаРаспределения;
		Справочники.НастройкиУчетаЗатрат.УстановитьМодификаторБазыРаспределения(НастройкаРаспределения);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
