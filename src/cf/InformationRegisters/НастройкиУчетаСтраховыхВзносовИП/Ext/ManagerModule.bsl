#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает признак того, что в ИБ есть плательщики добровольных взносов в ФСС
//
// Возвращаемые значения:
//  Булево - признак уплаты добровольных взносов в ФСС
//
Функция УплачиваютсяДобровольныеВзносыВФСС() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК УплачиваютсяДобровольныеВзносыВФСС
	|ИЗ
	|	РегистрСведений.НастройкиУчетаСтраховыхВзносовИП КАК НастройкиУчетаСтраховыхВзносовИП
	|ГДЕ
	|	НЕ НастройкиУчетаСтраховыхВзносовИП.Организация.ПометкаУдаления
	|	И НастройкиУчетаСтраховыхВзносовИП.УплачиватьДобровольныеВзносыВФСС";
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

// Процедура устанавливает значения регистра по умолчанию
//
// Параметры:
//   Запись           - РегистрСведенийЗапись - запись регистра
//   ДанныеЗаполнения - Структура - где ключ - имя ресурса
//
Процедура УстановкаНастроекПоУмолчанию(Запись, ДанныеЗаполнения) Экспорт
	
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"Период",
		НачалоГода(ТекущаяДатаСеанса()));
	
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"Организация",
		БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация"));
		
	ЭтоФизЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Организация, "ЮридическоеФизическоеЛицо")
		= Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
		
	Если НЕ ЭтоФизЛицо Тогда
			Запись.Организация = Справочники.Организации.ПустаяСсылка();
		Возврат;
	КонецЕсли;
		
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"УплачиватьДобровольныеВзносыВФСС",
		Ложь);
	
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"РайонныйКоэффициент",
		РайонныйКоэффициентПоУмолчанию());
	
	ИспользоватьРайонныйКоэффициент = Запись.УплачиватьДобровольныеВзносыВФСС
		И УчетСтраховыхВзносовИПКлиентСервер.ПрименяетсяРайонныйКоэффициентСтраховыхВзносовФСС(Запись.Период);
	Если Не ИспользоватьРайонныйКоэффициент Тогда 
		Запись.РайонныйКоэффициент = РайонныйКоэффициентПоУмолчанию();
	КонецЕсли;
	
КонецПроцедуры

// Возвращает районный коэффициент, применяемый при расчете страховых взносов ФСС
//
// Параметры:
//  Организация - СправочникСсылка.Организации - организация-ИП
//  Период - Дата - страховой период
//
// Возвращаемое значение:
//  Число - районный коэффициент
Функция РайонныйКоэффициентСтраховыхВзносовФСС(Организация, Период) Экспорт 
	
	РайонныйКоэффициент = РайонныйКоэффициентПоУмолчанию();
	
	Если Не УчетСтраховыхВзносовИПКлиентСервер.ПрименяетсяРайонныйКоэффициентСтраховыхВзносовФСС(Период) Тогда 
		Возврат РайонныйКоэффициент;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиУчетаСтраховыхВзносовИП.РайонныйКоэффициент КАК РайонныйКоэффициент
	|ИЗ
	|	РегистрСведений.НастройкиУчетаСтраховыхВзносовИП.СрезПоследних(&Период, Организация = &Организация) КАК НастройкиУчетаСтраховыхВзносовИП";
	
	Запрос.УстановитьПараметр("Период", НачалоГода(Период));
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий()
		И ЗначениеЗаполнено(Выборка.РайонныйКоэффициент) Тогда 
		РайонныйКоэффициент = Выборка.РайонныйКоэффициент;
	КонецЕсли;
	
	Возврат РайонныйКоэффициент;
	
КонецФункции

// Возвращает районный коэффициент, применяемый по умолчанию
//
// Возвращаемое значение:
//  Число - районный коэффициент
Функция РайонныйКоэффициентПоУмолчанию() Экспорт
	
	Возврат 1;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"ПрисоединитьДополнительныеТаблицы
	|ЭтотСписок КАК ЭтотСписок
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОбособленныеПодразделения 
	|	ПО ОбособленныеПодразделения.ГоловнаяОрганизация = ЭтотСписок.Организация.ГоловнаяОрганизация
	|;
	|РазрешитьЧтение
	|ГДЕ
	| ЗначениеРазрешено(ОбособленныеПодразделения.Ссылка)
	|
	|;
	|РазрешитьИзменениеЕслиРазрешеноЧтение
	|ГДЕ
	| ЗначениеРазрешено(ЭтотСписок.Организация)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура Подключаемый_ПередЗаписью(Запись) Экспорт
	
	Если Не ЗначениеЗаполнено(Запись.РайонныйКоэффициент)
		Или Не Запись.УплачиватьДобровольныеВзносыВФСС 
		Или Не УчетСтраховыхВзносовИПКлиентСервер.ПрименяетсяРайонныйКоэффициентСтраховыхВзносовФСС(Запись.Период) Тогда 
		Запись.РайонныйКоэффициент = РайонныйКоэффициентПоУмолчанию();
	КонецЕсли;
	
КонецПроцедуры

Процедура Подключаемый_ПриЗаписи(Запись) Экспорт
	
	Если Запись.УплачиватьДобровольныеВзносыВФСС Тогда
		Справочники.ВидыНалоговИПлатежейВБюджет.СоздатьПоставляемыеЭлементы();
	КонецЕсли;
	
КонецПроцедуры

// Обработчик обновления БП 3.0.109.54
//
// В существующих записях регистра там, где не заполнен районный коэффициент,
// устанавливает значение районного коэффициента по умолчанию
//
Процедура ЗаполнитьРайонныйКоэффициентПоУмолчанию() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиУчетаСтраховыхВзносовИП.Период КАК Период,
	|	НастройкиУчетаСтраховыхВзносовИП.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.НастройкиУчетаСтраховыхВзносовИП КАК НастройкиУчетаСтраховыхВзносовИП
	|ГДЕ
	|	НастройкиУчетаСтраховыхВзносовИП.РайонныйКоэффициент = 0";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		НаборЗаписей = РегистрыСведений.НастройкиУчетаСтраховыхВзносовИП.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Период.Установить(Выборка.Период);
		НаборЗаписей.Отбор.Организация.Установить(Выборка.Организация);
		НаборЗаписей.Прочитать();
		Для Каждого Запись Из НаборЗаписей Цикл 
			Если Не ЗначениеЗаполнено(Запись.РайонныйКоэффициент) Тогда 
				Запись.РайонныйКоэффициент = РайонныйКоэффициентПоУмолчанию();
			КонецЕсли;
		КонецЦикла;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли