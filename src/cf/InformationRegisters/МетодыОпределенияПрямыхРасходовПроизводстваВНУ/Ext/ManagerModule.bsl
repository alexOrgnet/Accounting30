#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

// Определяет состояние заполнения регистра.
//
// Параметры:
//  Организация	 - СправочникСсылка.Организации - организация, состояние регистра которой проверяется
//  Период		 - Дата - период, на который определяется состояние
//  
// Возвращаемое значение:
//  Строка         - "Заполнен", "НеЗаполнен", "ЗаполненПоУмолчанию"
//
Функция СостояниеЗаполнения(Организация, Период) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПериодДействующейНастройки", ПериодДействующейНастройки(Период, Организация));
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЕстьЗаписи
	|ИЗ
	|	РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК Настройка
	|ГДЕ
	|	Настройка.Организация = &Организация
	|	И Настройка.ПериодДействия = &ПериодДействующейНастройки";
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат "НеЗаполнен";
	КонецЕсли;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СоздатьНастройкиПоУмолчанию(Запрос.МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Отличия.ВидРасходовНУ КАК ВидРасходовНУ,
	|	Отличия.Подразделение КАК Подразделение,
	|	Отличия.Счет КАК Счет,
	|	Отличия.КорСчет КАК КорСчет,
	|	Отличия.СтатьяЗатрат КАК СтатьяЗатрат
	|ИЗ
	|	(ВЫБРАТЬ
	|		МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ВидРасходовНУ КАК ВидРасходовНУ,
	|		МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Подразделение КАК Подразделение,
	|		МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Счет КАК Счет,
	|		МетодыОпределенияПрямыхРасходовПроизводстваВНУ.КорСчет КАК КорСчет,
	|		МетодыОпределенияПрямыхРасходовПроизводстваВНУ.СтатьяЗатрат КАК СтатьяЗатрат,
	|		1 КАК ПризнакИзменен
	|	ИЗ
	|		РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК МетодыОпределенияПрямыхРасходовПроизводстваВНУ
	|	ГДЕ
	|		МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Организация = &Организация
	|		И МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия = &ПериодДействующейНастройки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НастройкиПоУмолчанию.ВидРасходовНУ,
	|		НастройкиПоУмолчанию.Подразделение,
	|		НастройкиПоУмолчанию.Счет,
	|		НастройкиПоУмолчанию.КорСчет,
	|		НастройкиПоУмолчанию.СтатьяЗатрат,
	|		-1
	|	ИЗ
	|		НастройкиПоУмолчанию КАК НастройкиПоУмолчанию) КАК Отличия
	|
	|СГРУППИРОВАТЬ ПО
	|	Отличия.ВидРасходовНУ,
	|	Отличия.Подразделение,
	|	Отличия.КорСчет,
	|	Отличия.СтатьяЗатрат,
	|	Отличия.Счет
	|
	|ИМЕЮЩИЕ
	|	СУММА(Отличия.ПризнакИзменен) <> 0";
	
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат "ЗаполненПоУмолчанию";
	Иначе
		Возврат "Заполнен";
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Помещает во временную таблицу перечень прямых затрат в соответствии с требованиями ст. 318 НК РФ.
//
// Параметры:
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц, в который помещается таблица НастройкиПоУмолчанию.
//
Процедура СоздатьНастройкиПоУмолчанию(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.ВидРасходовНУ КАК ВидРасходовНУ,
	|	ВложенныйЗапрос.Счет КАК Счет,
	|	ВложенныйЗапрос.КорСчет КАК КорСчет,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка) КАК СтатьяЗатрат
	|ПОМЕСТИТЬ НастройкиПоУмолчанию
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.МатериальныеРасходы) КАК ВидРасходовНУ,
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет,
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК КорСчет
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.Амортизация),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ОплатаТруда),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.СтраховыеВзносы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОсновноеПроизводство),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.СтраховыеВзносы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВспомогательныеПроизводства),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.СтраховыеВзносы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОсновноеПроизводство),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПФР_Страх)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.СтраховыеВзносы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВспомогательныеПроизводства),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПФР_Страх)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.СтраховыеВзносы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОсновноеПроизводство),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПФР_Нак)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.СтраховыеВзносы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВспомогательныеПроизводства),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПФР_Нак)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.СтраховыеВзносы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОсновноеПроизводство),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПФР_Доп)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.СтраховыеВзносы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВспомогательныеПроизводства),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПФР_Доп)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.СтраховыеВзносы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОсновноеПроизводство),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПФР_доп_шахтеры)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.СтраховыеВзносы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВспомогательныеПроизводства),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПФР_доп_шахтеры)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.СтраховыеВзносы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОсновноеПроизводство),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.СтраховыеВзносы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВспомогательныеПроизводства),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПФР_доп_ВредныеУсловияТруда)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.СтраховыеВзносы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОсновноеПроизводство),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.СтраховыеВзносы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВспомогательныеПроизводства),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПФР_доп_ТяжелыеУсловияТруда)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.СтраховыеВзносы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОсновноеПроизводство),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПФР_ОПС)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.СтраховыеВзносы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВспомогательныеПроизводства),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПФР_ОПС)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.СтраховыеВзносы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОсновноеПроизводство),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФФОМС)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.СтраховыеВзносы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВспомогательныеПроизводства),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФФОМС)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.СтраховыеВзносы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОсновноеПроизводство),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТФОМС)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.СтраховыеВзносы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВспомогательныеПроизводства),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТФОМС)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.СтраховыеВзносы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОсновноеПроизводство),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СтраховыеВзносыЕдиныйТариф)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.СтраховыеВзносы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВспомогательныеПроизводства),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СтраховыеВзносыЕдиныйТариф)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.СтраховыеВзносы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОсновноеПроизводство),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОценочныеОбязательстваПостраховымВзносам)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.СтраховыеВзносы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВспомогательныеПроизводства),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОценочныеОбязательстваПостраховымВзносам)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ПрочиеРасходы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОсновноеПроизводство),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС_НСиПЗ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ПрочиеРасходы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВспомогательныеПроизводства),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ФСС_НСиПЗ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ПрочиеРасходы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОсновноеПроизводство),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОценочныеОбязательстваПостраховымВзносам)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ПрочиеРасходы),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВспомогательныеПроизводства),
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОценочныеОбязательстваПостраховымВзносам)) КАК ВложенныйЗапрос";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ЗапрещенныеВидыРасходовНУ() Экспорт
	
	// Прямыми не могут быть нормируемые расходы и не учитываем в целях налогообложения
	ЗапрещенныеВидыРасходовНУ = Перечисления.ВидыРасходовНУ.НормируемыеРасходы();
	ЗапрещенныеВидыРасходовНУ.Добавить(Перечисления.ВидыРасходовНУ.АмортизационнаяПремия);
	ЗапрещенныеВидыРасходовНУ.Добавить(Перечисления.ВидыРасходовНУ.ЕСН);
	
	Возврат ЗапрещенныеВидыРасходовНУ;
	
КонецФункции

Функция ДопустимыеВидыРасходовНУ() Экспорт
	
	// Все, что не запрещено - допустимо
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Запрещенные", ЗапрещенныеВидыРасходовНУ());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыРасходовНУ.Ссылка КАК Ссылка,
	|	ВидыРасходовНУ.Порядок КАК Порядок
	|ИЗ
	|	Перечисление.ВидыРасходовНУ КАК ВидыРасходовНУ
	|ГДЕ
	|	НЕ ВидыРасходовНУ.Ссылка В (&Запрещенные)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Процедура УдалитьЗаписиНеСНачалаГода() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия,
	|	НАЧАЛОПЕРИОДА(МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия, ГОД) КАК ПравильныйПериодДействия,
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Организация КАК Организация,
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ВидРасходовНУ КАК ВидРасходовНУ,
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Подразделение КАК Подразделение,
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Счет КАК Счет,
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.КорСчет КАК КорСчет,
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.СтатьяЗатрат КАК СтатьяЗатрат
	|ПОМЕСТИТЬ НеправильныеЗаписи
	|ИЗ
	|	РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК МетодыОпределенияПрямыхРасходовПроизводстваВНУ
	|ГДЕ
	|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия <> НАЧАЛОПЕРИОДА(МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия, ГОД)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПравильныйПериодДействия,
	|	Организация,
	|	ВидРасходовНУ,
	|	Подразделение,
	|	Счет,
	|	КорСчет,
	|	СтатьяЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НеправильныеЗаписи.ПериодДействия КАК ПериодДействия,
	|	НеправильныеЗаписи.Организация,
	|	НеправильныеЗаписи.ВидРасходовНУ,
	|	НеправильныеЗаписи.Подразделение,
	|	НеправильныеЗаписи.Счет,
	|	НеправильныеЗаписи.КорСчет,
	|	НеправильныеЗаписи.СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Лишняя,
	|	НеправильныеЗаписи.ПравильныйПериодДействия
	|ИЗ
	|	НеправильныеЗаписи КАК НеправильныеЗаписи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК МетодыОпределенияПрямыхРасходовПроизводстваВНУ
	|		ПО НеправильныеЗаписи.ПравильныйПериодДействия = МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия
	|			И НеправильныеЗаписи.Организация = МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Организация
	|			И НеправильныеЗаписи.ВидРасходовНУ = МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ВидРасходовНУ
	|			И НеправильныеЗаписи.Подразделение = МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Подразделение
	|			И НеправильныеЗаписи.Счет = МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Счет
	|			И НеправильныеЗаписи.КорСчет = МетодыОпределенияПрямыхРасходовПроизводстваВНУ.КорСчет
	|			И НеправильныеЗаписи.СтатьяЗатрат = МетодыОпределенияПрямыхРасходовПроизводстваВНУ.СтатьяЗатрат
	|
	|УПОРЯДОЧИТЬ ПО
	|	Лишняя УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		// Записей не будет много, поэтому записываем маленькими наборами
		
		МенеджерЗаписи = СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Выборка);
		НачатьТранзакцию();
		МенеджерЗаписи.Удалить();
		Если Не Выборка.Лишняя Тогда
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Выборка);
			МенеджерЗаписи.ПериодДействия = Выборка.ПравильныйПериодДействия;
			МенеджерЗаписи.Записать();
		КонецЕсли;
		ЗафиксироватьТранзакцию();
		
	КонецЦикла;
	
КонецПроцедуры

// Параметры:
//   ЗаполнятьДаннымиЗаПредыдущийГод - 
//    Булево - 
//       Истина - заполнять данными за предыдущий год, вне зависимости от того, есть они или нет
//       Ложь   - заполнять в соответствии с требованиями ст. 318 НК РФ
//    Неопределено - заполнять данными за предыдущий год, если они есть, или требованиями ст. 318, если данных за предыдущий год нет
Процедура Настроить(Организация, Знач Период, ЗаполнятьДаннымиЗаПредыдущийГод = Неопределено, Перезаписывать = Истина) Экспорт
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Период) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗаполнятьДаннымиЗаПредыдущийГод = Истина Тогда
		МетодЗаполнения = "ПредыдущийПериод";
	ИначеЕсли ЗаполнятьДаннымиЗаПредыдущийГод = Ложь Тогда
		МетодЗаполнения = "ПоУмолчанию";
	Иначе
		МетодЗаполнения = Неопределено;
	КонецЕсли;
	
	// В регистре допускаются записи только на начало года.
	// При этом допускаются записи на такое начало года, которое не является началом налогового периода - 
	// см. ПериодДействующейНастройки()	
	Период = НачалоГода(Период);
	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Установить(Организация);
	НаборЗаписей.Отбор.ПериодДействия.Установить(Период);
	
	Если Не Перезаписывать Тогда
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() > 0 Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	НаборЗаписей.Заполнить(МетодЗаполнения);
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Определяет период, в который введена актуальная (действующая в заданном периоде) настройка списка прямых расходов.
// Это значение, хранящееся в измерении ПериодДействия регистра.
// Позволяет выбрать из регистра записи, относящиеся к заданному периоду (действующие в течение этого периода).
//
// Параметры:
//  Период		 - Дата - период, настройку, относящуюся к которому нужно найти
//  Организация	 - СправочникСсылка.Организации - организация, настройку которой нужно найти
// 
// Возвращаемое значение:
//  Дата         - дата, хранящаяся в измерении ПериодДействия регистра
//  Неопределено - нет ни одной подходящей записи в регистре
//
Функция ПериодДействующейНастройки(Период, Организация) Экспорт
	
	// Обычно это тот же период, в котором введены остальные сведения о налоге на прибыль.
	// Но может быть исключение: настройка налога на прибыль в целом действует с предыдущих лет,
	// а в список прямых расходов в текущем году внесены изменения.
	// Такое исключение могло быть задано в предыдущих версиях программы.
	
	Если Не ЗначениеЗаполнено(Период) Или Не ЗначениеЗаполнено(Организация) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	// Если первый налоговый период организации включает часть года регистрации организации и следующий за ней год,
	// используется настройка, относящаяся к отчетному году (следующему за годом регистрации).
	ОписаниеОтчетногоГода = ИнтерфейсыВзаимодействияБРО.БлижайшийНалоговыйПериод(
		Организация,
		Период,
		Перечисления.ВариантыРасширенногоПервогоНалоговогоПериода.РегистрацияВДекабре,
		Перечисления.Периодичность.Год);
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Период",      ОписаниеОтчетногоГода.Период);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НАЧАЛОПЕРИОДА(НастройкиУчетаНалогаНаПрибыль.Период, ГОД) КАК Год
	|ИЗ
	|	РегистрСведений.НастройкиУчетаНалогаНаПрибыль.СрезПоследних(&Период, Организация = &Организация) КАК НастройкиУчетаНалогаНаПрибыль";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Не Выборка.Следующий() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ГодДействующейОбщейНастройки", Выборка.Год);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(СписокПрямыхРасходов.ПериодДействия) КАК ПериодДействия
	|ИЗ
	|	РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК СписокПрямыхРасходов
	|ГДЕ
	|	СписокПрямыхРасходов.Организация = &Организация
	|	И СписокПрямыхРасходов.ПериодДействия <= &Период
	|	И СписокПрямыхРасходов.ПериодДействия >= &ГодДействующейОбщейНастройки
	|	И СписокПрямыхРасходов.ПериодДействия = НАЧАЛОПЕРИОДА(СписокПрямыхРасходов.ПериодДействия, ГОД)";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Не Выборка.Следующий() Тогда
		Возврат Неопределено;
	ИначеЕсли Не ЗначениеЗаполнено(Выборка.ПериодДействия) Тогда
		Возврат Неопределено;
	Иначе
		Возврат Выборка.ПериодДействия;
	КонецЕсли;
	
КонецФункции

// Дополняет записи регистра новой записью, соответствующей расходам на ремонт основных средств, чтобы
// расходы на ремонт основных средств в налоговом учете по умолчанию были прямыми или косвенными в зависимости от того,
// прямыми или косвенными являются расходы на амортизацию.
// Если в регистр внесены записи с видом расходов "Амортизация", то перечень прямых расходов дополняется
// предопределенной статьей затрат "РемонтОС". Выполянется в одной транзакции с записью предопределенной статьи затрат "РемонтОС".
// 
// Параметры:
//  СтатьяЗатрат - СправочникОбъект.СтатьиЗатрат
//
Процедура ДополнитьПриЗаписиСтатьиРемонтОС(СтатьяЗатрат) Экспорт
	
	Если Не ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
		СтатьяЗатрат.ДополнительныеСвойства, "ОбновитьМетодыОпределенияПрямыхРасходовНУРемонтОС", Ложь) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("СтатьяЗатратРемонтОС", СтатьяЗатрат.Ссылка);
	Запрос.УстановитьПараметр("Амортизация", Перечисления.ВидыРасходовНУ.Амортизация);
	Запрос.УстановитьПараметр("ПрочиеРасходы", Перечисления.ВидыРасходовНУ.ПрочиеРасходы);
	
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА КАК ЕстьЗапись
		|ИЗ
		|	РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК МетодыОпределенияПрямыхРасходовПроизводстваВНУ
		|ГДЕ
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.СтатьяЗатрат = &СтатьяЗатратРемонтОС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия КАК ПериодДействия,
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Организация КАК Организация,
		|	&ПрочиеРасходы КАК ВидРасходовНУ,
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Подразделение КАК Подразделение,
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Счет КАК Счет,
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.КорСчет КАК КорСчет,
		|	&СтатьяЗатратРемонтОС КАК СтатьяЗатрат
		|ИЗ
		|	РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК МетодыОпределенияПрямыхРасходовПроизводстваВНУ
		|ГДЕ
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ВидРасходовНУ = &Амортизация";

	Если ТранзакцияАктивна() Тогда
		Блокировка = Новый БлокировкаДанных;
		Блокировка.Добавить("РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ");
		Блокировка.Заблокировать();
	КонецЕсли;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Если Не РезультатЗапроса[0].Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Если Не РезультатЗапроса[1].Пустой() Тогда
		
		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ВидРасходовНУ.Установить(Перечисления.ВидыРасходовНУ.ПрочиеРасходы);
		
		ВыборкаЗаписей = РезультатЗапроса[1].Выбрать();
		
		Пока ВыборкаЗаписей.Следующий() Цикл
			Запись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, ВыборкаЗаписей);
		КонецЦикла;
		
		НаборЗаписей.Записать(Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

#Область ОбработчикиОбновления

Процедура ОбновитьМетодыОпределенияПрямыхРасходовПроизводстваВНУ() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", БухгалтерскийУчетПереопределяемый.ПустоеПодразделение());
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ПериодДействия,
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Организация,
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.ВидРасходовНУ,
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Подразделение,
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Счет,
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.КорСчет,
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.СтатьяЗатрат
		|ИЗ
		|	РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК МетодыОпределенияПрямыхРасходовПроизводстваВНУ
		|ГДЕ
		|	МетодыОпределенияПрямыхРасходовПроизводстваВНУ.Подразделение <> &Подразделение";

	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Запись = СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		Запись.Прочитать();
		Запись.Удалить();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьНастройкуСчетаСтраховыеВзносыЕдиныйТариф(Параметры) Экспорт
	
	СчетСтраховыеВзносыЕдиныйТариф = ПланыСчетов.Хозрасчетный.СтраховыеВзносыЕдиныйТариф;
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("СчетСтраховыеВзносыЕдиныйТариф", СчетСтраховыеВзносыЕдиныйТариф);
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МетодыОпределенияРасходов.Организация КАК Организация
		|ПОМЕСТИТЬ Организации
		|ИЗ
		|	РегистрСведений.МетодыОпределенияПрямыхРасходовПроизводстваВНУ КАК МетодыОпределенияРасходов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
		|		ПО МетодыОпределенияРасходов.Организация = Организации.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Хозрасчетный.Организация КАК Организация
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			,
		|			,
		|			,
		|			Счет = &СчетСтраховыеВзносыЕдиныйТариф,
		|			,
		|			Организация В
		|				(ВЫБРАТЬ
		|					Организации.Организация
		|				ИЗ
		|					Организации),
		|			,
		|			) КАК Хозрасчетный
		|
		|УПОРЯДОЧИТЬ ПО
		|	Организация";

	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	НачалоГода = НачалоГода(ТекущаяДатаСеанса());
	Пока Выборка.Следующий() Цикл
		ПериодДействующейНастройки = ПериодДействующейНастройки(НачалоГода, Выборка.Организация);
		Если Не ЗначениеЗаполнено(ПериодДействующейНастройки) Тогда
			Продолжить;
		КонецЕсли;
		
		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Организация.Установить(Выборка.Организация);
		НаборЗаписей.Отбор.ПериодДействия.Установить(ПериодДействующейНастройки);
		НаборЗаписей.Отбор.КорСчет.Установить(СчетСтраховыеВзносыЕдиныйТариф);
		
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() > 0 Тогда
			// Записи могли быть уже добавлены вручную.
			Продолжить;
		КонецЕсли;
		
		Если ПериодДействующейНастройки < НачалоГода Тогда
			// Если для текущего периода отсутствует настройка, создадим её на основании действующей.
			МетодЗаполнения = "ПредыдущийПериод";
			НаборЗаписейТекущийГод = СоздатьНаборЗаписей();
			НаборЗаписейТекущийГод.Отбор.Организация.Установить(Выборка.Организация);
			НаборЗаписейТекущийГод.Отбор.ПериодДействия.Установить(НачалоГода);
			
			НаборЗаписейТекущийГод.Заполнить(МетодЗаполнения);
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписейТекущийГод);
		КонецЕсли;
		
		// Добавим записи для счета 69.09.
		НаборЗаписей.Отбор.ПериодДействия.Установить(НачалоГода);
		НаборЗаписей.Прочитать();
		
		ЗаписьОсновноеПроизводство = НаборЗаписей.Добавить();
		ЗаписьОсновноеПроизводство.ПериодДействия = НачалоГода;
		ЗаписьОсновноеПроизводство.Организация = Выборка.Организация;
		ЗаписьОсновноеПроизводство.ВидРасходовНУ = Перечисления.ВидыРасходовНУ.СтраховыеВзносы;
		ЗаписьОсновноеПроизводство.Счет = ПланыСчетов.Хозрасчетный.ОсновноеПроизводство;
		ЗаписьОсновноеПроизводство.КорСчет = СчетСтраховыеВзносыЕдиныйТариф;
		
		ЗаписьВспомогательныеПроизводства = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(ЗаписьВспомогательныеПроизводства, ЗаписьОсновноеПроизводство);
		ЗаписьВспомогательныеПроизводства.Счет = ПланыСчетов.Хозрасчетный.ВспомогательныеПроизводства;
		
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Истина;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли