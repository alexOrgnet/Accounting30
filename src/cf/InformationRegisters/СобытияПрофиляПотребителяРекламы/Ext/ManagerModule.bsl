// @strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Зафиксировать событие.
// 
// Параметры:
//  ТекущийПрофильПотребителя - ОпределяемыйТип.ПрофильПотребителяРекламы
//
Процедура ЗафиксироватьСобытие(Знач ТекущийПрофильПотребителя) Экспорт
	
	НачатьТранзакцию();
	
	Попытка
		
		УстановитьПривилегированныйРежим(Истина);
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СобытияПрофиляПотребителяРекламы");
		ЭлементБлокировки.УстановитьЗначение("ПрофильПотребителя", ТекущийПрофильПотребителя);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		
		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ПрофильПотребителя.Установить(ТекущийПрофильПотребителя);
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() = 0 Тогда
			Запись = НаборЗаписей.Добавить();
		Иначе
			Запись = НаборЗаписей[0];
		КонецЕсли;
		
		Запись.ПрофильПотребителя = ТекущийПрофильПотребителя;
		Запись.ДатаЗакрытияРекламы = ТекущаяДатаСеанса();
		
		НаборЗаписей.Записать();
		
		УстановитьПривилегированныйРежим(Ложь);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ИмяСобытия = РекламныйСервисСлужебный.ИмяСобытияЗакрытияРекламногоНосителя();
		ЗаписьЖурналаРегистрации(
			ИмяСобытия, 
			УровеньЖурналаРегистрации.Ошибка, , 
			ТекущийПрофильПотребителя, 
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
