#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Устанавливает значения регистра по умолчанию
//
// Параметры:
//   Запись - РегистрСведенийЗапись
//   ДанныеЗаполнения - Структура - где ключ - имя ресурса
//
Процедура УстановкаНастроекПоУмолчанию(Запись, ДанныеЗаполнения) Экспорт
	
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"Период",
		ТекущаяДатаСеанса());
	
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"Организация",
		БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация"));
		
	ЭтоЮрЛицо = ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Запись.Организация);
		
	Если ЭтоЮрЛицо Тогда
		Запись.Организация = Справочники.Организации.ПустаяСсылка();
		Возврат;
	КонецЕсли;
	
	ПлательщикСтраховыхВзносовПФР_ФФОМС = ПлательщикСтраховыхВзносов(ДанныеЗаполнения);
	Если ПлательщикСтраховыхВзносовПФР_ФФОМС Тогда
		НастройкиУчета.УстановитьЗначениеПоУмолчанию(
			Запись,
			ДанныеЗаполнения,
			"Тариф",
			Перечисления.ИПТарифыФиксированныхВзносов.Единый);
	КонецЕсли;
	
	НастройкиУчета.УстановитьЗначениеПоУмолчанию(
		Запись,
		ДанныеЗаполнения,
		"ПлательщикСтраховыхВзносовПФР_ФФОМС",
		ПлательщикСтраховыхВзносовПФР_ФФОМС);
	
КонецПроцедуры

// Возвращает интервалы, в течение которых ИП не оплачивает страховые взносы в ПФР и ФФОМС
//
// Параметры:
//  Организация - СправочникСсылка.Организация
//  ДатаНачала - Дата
//  ДатаОкончания - Дата
//
// Возвращаемое значение:
//  ТаблицаЗначений:
//   * ДатаНачала - Дата
//   * ДатаОкончания - Дата
//
Функция ИнтервалыИПНеОплачиваетСтраховыеВзносы(Организация, ДатаНачала, ДатаОкончания) Экспорт
	
	Интервалы = Новый ТаблицаЗначений;
	ТипДата = ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата);
	Интервалы.Колонки.Добавить("ДатаНачала", ТипДата);
	Интервалы.Колонки.Добавить("ДатаОкончания", ТипДата);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМССрезПоследних.Период КАК Период,
		|	НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМССрезПоследних.ПлательщикСтраховыхВзносовПФР_ФФОМС КАК ПлательщикСтраховыхВзносовПФР_ФФОМС
		|ИЗ
		|	РегистрСведений.НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.СрезПоследних(&ДатаНачала, Организация = &Организация) КАК НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМССрезПоследних
		|ГДЕ
		|	НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМССрезПоследних.Период < &ДатаНачала
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.Период,
		|	НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.ПлательщикСтраховыхВзносовПФР_ФФОМС
		|ИЗ
		|	РегистрСведений.НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС КАК НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС
		|ГДЕ
		|	НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.Организация = &Организация
		|	И НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ДатаНачала));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаОкончания));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПредыдущаяСтрока = Неопределено;
	ЭтоПерваяСтрока = Истина;
	Пока Выборка.Следующий() Цикл
		Если Выборка.ПлательщикСтраховыхВзносовПФР_ФФОМС И ПредыдущаяСтрока <> Неопределено
			И Не ЗначениеЗаполнено(ПредыдущаяСтрока.ДатаОкончания) Тогда
			ПредыдущаяСтрока.ДатаОкончания = НачалоДня(Выборка.Период) - 1;
		ИначеЕсли Не Выборка.ПлательщикСтраховыхВзносовПФР_ФФОМС Тогда
			НоваяСтрока = Интервалы.Добавить();
			НоваяСтрока.ДатаНачала = ?(Выборка.Период < ДатаНачала, ДатаНачала, Выборка.Период);
			Если ПредыдущаяСтрока <> Неопределено И Не ЗначениеЗаполнено(ПредыдущаяСтрока.ДатаОкончания) Тогда
				ПредыдущаяСтрока.ДатаОкончания = НачалоДня(Выборка.Период) - 1;
			КонецЕсли;
			ПредыдущаяСтрока = НоваяСтрока;
		КонецЕсли;
		Если ЭтоПерваяСтрока Тогда
			Если Выборка.Период > ДатаНачала Тогда
				НоваяСтрока = Интервалы.Вставить(0);
				НоваяСтрока.ДатаНачала = ДатаНачала;
				НоваяСтрока.ДатаОкончания = НачалоДня(Выборка.Период) - 1;
			КонецЕсли;
			ЭтоПерваяСтрока = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Если ПредыдущаяСтрока <> Неопределено И Не ЗначениеЗаполнено(ПредыдущаяСтрока.ДатаОкончания) Тогда
		ПредыдущаяСтрока.ДатаОкончания = ДатаОкончания;
	КонецЕсли;
	
	Возврат Интервалы;
	
КонецФункции

// Добавляет в регистр сведений "НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС" новые записи, если
// значение ресурса "ПлательщикСтраховыхВзносовПФР_ФФОМС" поменялось. Это может произойти при изменении
// системы налогообложения ИП, снятии ИП с регистрации и обратной постановки ИП на учет
//
// Параметры:
//  НастройкиПлатежейСтраховыхВзносов - ТаблицаЗначений - см. НовыеНастройкиУчетаСтраховыхВзносов_ПФР_ФФОМС
//
Процедура ОтразитьИзменениеНастройкиПлательщикСтраховыхВзносов(НастройкиПлатежейСтраховыхВзносов) Экспорт
	
	Если НастройкиПлатежейСтраховыхВзносов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// Через параметр в запрос передаем новые настройки системы налогообложения, выбираем записи из предыдущей настройки
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиУчетаСтраховыхВзносов.Организация КАК Организация,
		|	НастройкиУчетаСтраховыхВзносов.Период КАК Период,
		|	НастройкиУчетаСтраховыхВзносов.УплачиваютсяСтраховыеВзносы КАК УплачиваютсяСтраховыеВзносы,
		|	НастройкиУчетаСтраховыхВзносов.ПлательщикАУСН КАК ПлательщикАУСН,
		|	НастройкиУчетаСтраховыхВзносов.ДатаИзменения КАК ДатаИзменения,
		|	НастройкиУчетаСтраховыхВзносов.Тариф КАК Тариф
		|ПОМЕСТИТЬ ВТ_ИзменяемыеДанные
		|ИЗ
		|	&НастройкиУчетаСтраховыхВзносов КАК НастройкиУчетаСтраховыхВзносов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ИзменяемыеДанные.Организация КАК Организация,
		|	ВТ_ИзменяемыеДанные.Период КАК Период,
		|	ВТ_ИзменяемыеДанные.УплачиваютсяСтраховыеВзносы КАК УплачиваютсяСтраховыеВзносы,
		|	ВТ_ИзменяемыеДанные.ПлательщикАУСН КАК ПлательщикАУСН,
		|	ВТ_ИзменяемыеДанные.ДатаИзменения КАК ДатаИзменения,
		|	ВТ_ИзменяемыеДанные.Тариф КАК Тариф,
		|	МАКСИМУМ(ЕСТЬNULL(НастройкиСистемыНалогообложения.Период, ВТ_ИзменяемыеДанные.Период)) КАК ПериодНастроекСистемыНалогообложения,
		|	МАКСИМУМ(ЕСТЬNULL(НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.Период, ВТ_ИзменяемыеДанные.ДатаИзменения)) КАК ПериодНастроекУчетаСтраховыхВзносов
		|ПОМЕСТИТЬ ПериодыНастроек
		|ИЗ
		|	ВТ_ИзменяемыеДанные КАК ВТ_ИзменяемыеДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиСистемыНалогообложения КАК НастройкиСистемыНалогообложения
		|		ПО ВТ_ИзменяемыеДанные.Организация = НастройкиСистемыНалогообложения.Организация
		|			И ВТ_ИзменяемыеДанные.Период >= НастройкиСистемыНалогообложения.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС КАК НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС
		|		ПО ВТ_ИзменяемыеДанные.Организация = НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.Организация
		|			И ВТ_ИзменяемыеДанные.ДатаИзменения >= НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ИзменяемыеДанные.Организация,
		|	ВТ_ИзменяемыеДанные.Период,
		|	ВТ_ИзменяемыеДанные.УплачиваютсяСтраховыеВзносы,
		|	ВТ_ИзменяемыеДанные.ПлательщикАУСН,
		|	ВТ_ИзменяемыеДанные.ДатаИзменения,
		|	ВТ_ИзменяемыеДанные.Тариф
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПериодыНастроек.Организация КАК Организация,
		|	ПериодыНастроек.УплачиваютсяСтраховыеВзносы КАК УплачиваютсяСтраховыеВзносы,
		|	ПериодыНастроек.ПлательщикАУСН КАК ПлательщикАУСН,
		|	ПериодыНастроек.ДатаИзменения КАК ДатаИзменения,
		|	ПериодыНастроек.Тариф КАК Тариф,
		|	ЕСТЬNULL(НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.Тариф, НЕОПРЕДЕЛЕНО) КАК ТарифДоИзменения,
		|	ЕСТЬNULL(НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.ПлательщикСтраховыхВзносовПФР_ФФОМС, НЕОПРЕДЕЛЕНО) КАК ПлательщикСтраховыхВзносов
		|ИЗ
		|	ПериодыНастроек КАК ПериодыНастроек
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиСистемыНалогообложения КАК НастройкиСистемыНалогообложения
		|		ПО ПериодыНастроек.Организация = НастройкиСистемыНалогообложения.Организация
		|			И ПериодыНастроек.ПериодНастроекСистемыНалогообложения = НастройкиСистемыНалогообложения.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС КАК НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС
		|		ПО ПериодыНастроек.Организация = НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.Организация
		|			И ПериодыНастроек.ПериодНастроекУчетаСтраховыхВзносов = НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.Период";
	
	Запрос.Параметры.Вставить("НастройкиУчетаСтраховыхВзносов", НастройкиПлатежейСтраховыхВзносов);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		// Проверяем, нужно ли изменить настройку плательщика страховых взносов
		// Выборка.ПлательщикСтраховыхВзносов - значение настройки на настоящий момент времени
		// Выборка.УплачиваютсяСтраховыеВзносы - признак уплаты взносов по системе налогообложения
		// Соответственно, если ИП стал плательщиком НПД или УСН-онлайн (не платит взносы), а ранее платил страховые взносы,
		// значит нужно добавить новую запись, с отключенным признаком плательщика и т.д.
		ПризнакПлательщикСтраховыхВзносов = Неопределено;
		Если Выборка.УплачиваютсяСтраховыеВзносы = Неопределено
			Или Выборка.ПлательщикСтраховыхВзносов = Неопределено
			Или Не Выборка.ПлательщикСтраховыхВзносов Тогда
			
			ПризнакПлательщикСтраховыхВзносов = Выборка.УплачиваютсяСтраховыеВзносы;
		ИначеЕсли Не Выборка.УплачиваютсяСтраховыеВзносы И Выборка.ПлательщикСтраховыхВзносов Тогда
			ПризнакПлательщикСтраховыхВзносов = Ложь;
		ИначеЕсли Выборка.Тариф <> Выборка.ТарифДоИзменения Тогда
			ПризнакПлательщикСтраховыхВзносов = Выборка.УплачиваютсяСтраховыеВзносы;
		КонецЕсли;
		Если ПризнакПлательщикСтраховыхВзносов <> Неопределено Тогда
			МенеджерЗаписи = РегистрыСведений.НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Организация = Выборка.Организация;
			МенеджерЗаписи.Период = Выборка.ДатаИзменения;
			МенеджерЗаписи.ПлательщикСтраховыхВзносовПФР_ФФОМС = ПризнакПлательщикСтраховыхВзносов;
			Если Не ПризнакПлательщикСтраховыхВзносов Тогда
				МенеджерЗаписи.Тариф = Неопределено;
			ИначеЕсли ЗначениеЗаполнено(Выборка.Тариф) Тогда
				МенеджерЗаписи.Тариф = Выборка.Тариф;
			Иначе
				МенеджерЗаписи.Тариф = Перечисления.ИПТарифыФиксированныхВзносов.Единый;
			КонецЕсли;
			МенеджерЗаписи.Записать(Истина);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Находит и удаляет запись регистра "НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС", соответствующую
// удаляемой записи регистра "НастройкиСистемыНалогообложения", которая определяется по
// переданным через параметры значениям отбора
//
// Параметры:
//  Организация - СправочникСсылка.Организации
//  Период - Дата
//
Процедура ПриУдаленииЗаписиНастройкиСистемыНалогообложения(Организация, Период, Тариф = Неопределено) Экспорт
	
	ТарифыВзносов = Новый Массив;
	ТарифыВзносов.Добавить(Перечисления.ИПТарифыФиксированныхВзносов.ПустаяСсылка()); // Строку с пустым тарифом всегда удаляем
	Если Не ЗначениеЗаполнено(Тариф) Тогда
		// Тариф по умолчанию
		ТарифыВзносов.Добавить(Перечисления.ИПТарифыФиксированныхВзносов.Единый);
	Иначе
		ТарифыВзносов.Добавить(Тариф);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	НастройкиСистемыНалогообложения.ДатаИзменения КАК ДатаИзменения,
		|	НастройкиСистемыНалогообложения.Организация КАК Организация
		|ПОМЕСТИТЬ ВТ_ПараметрыУдаляемойЗаписи
		|ИЗ
		|	РегистрСведений.НастройкиСистемыНалогообложения КАК НастройкиСистемыНалогообложения
		|ГДЕ
		|	НастройкиСистемыНалогообложения.Организация = &Организация
		|	И НастройкиСистемыНалогообложения.Период = &Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.Организация КАК Организация,
		|	НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.Период КАК Период
		|ИЗ
		|	ВТ_ПараметрыУдаляемойЗаписи КАК ВТ_ПараметрыУдаляемойЗаписи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС КАК НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС
		|		ПО ВТ_ПараметрыУдаляемойЗаписи.Организация = НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.Организация
		|			И ВТ_ПараметрыУдаляемойЗаписи.ДатаИзменения = НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.Период
		|			И (НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.Тариф В (&Тарифы))";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Тарифы", ТарифыВзносов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		МенеджерЗаписи = РегистрыСведений.НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Организация = Выборка.Организация;
		МенеджерЗаписи.Период = Выборка.Период;
		МенеджерЗаписи.Прочитать();
		Если МенеджерЗаписи.Выбран() Тогда
			МенеджерЗаписи.Удалить();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Возвращает признак того, что в ИБ есть плательщики страховых взносов в ПФР и ФФОМС
//
// Возвращаемые значения:
//  Булево - признак уплаты страховых взносов в ПФР и ФФОМС
//
Функция УплачиваютсяСтраховыеВзносы() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ПлательщикСтраховыхВзносов
	|ИЗ
	|	РегистрСведений.НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС КАК НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС
	|ГДЕ
	|	НЕ НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.Организация.ПометкаУдаления
	|	И НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.ПлательщикСтраховыхВзносовПФР_ФФОМС";
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

// Возвращает сведения о применяемом ИП тарифе страховых взносов в ПФР и ФФОМС на указанную дату
//
// Параметры:
//  Организация - СправочникСсылка.Организация
// Возвращаемое значение:
//  Структура:
//   * Период - Дата
//   * ПлательщикСтраховыхВзносовПФР_ФФОМС - Булево
//   * Тариф - Строка - Наименование тарифа
//
Функция ТарифСтраховыхВзносовИП(Организация) Экспорт
	
	СведенияОТарифе = Новый Структура;
	СведенияОТарифе.Вставить("Период", '00010101');
	СведенияОТарифе.Вставить("ПлательщикСтраховыхВзносовПФР_ФФОМС", Ложь);
	СведенияОТарифе.Вставить("Тариф", Неопределено);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМССрезПоследних.Период КАК Период,
		|	НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМССрезПоследних.ПлательщикСтраховыхВзносовПФР_ФФОМС КАК ПлательщикСтраховыхВзносовПФР_ФФОМС,
		|	ПРЕДСТАВЛЕНИЕ(НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМССрезПоследних.Тариф) КАК Тариф
		|ИЗ
		|	РегистрСведений.НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.СрезПоследних(&Период, Организация = &Организация) КАК НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМССрезПоследних";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", ТекущаяДатаСеанса());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СведенияОТарифе, Выборка);
	КонецЕсли;
	
	Возврат СведенияОТарифе;

КонецФункции

#Область ОбработчикиОбновления

// Заполнение первичное ресурса Тариф для ранее добавленных записей регистра
//
Процедура ЗаполнитьТарифФиксированныхВзносов(ПараметрыВыполнения) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1000
	|	НастройкиУчета.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС КАК НастройкиУчета
	|ГДЕ
	|	НастройкиУчета.Тариф = ЗНАЧЕНИЕ(Перечисление.ИПТарифыФиксированныхВзносов.ПустаяСсылка)
	|	И НастройкиУчета.ПлательщикСтраховыхВзносовПФР_ФФОМС";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ПараметрыВыполнения.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	ОбъектовОбработано = 0;
	ПроблемныхОбъектов = 0;
	ПараметрыВыполнения.ОбработкаЗавершена = Ложь;
	
	ИмяПроцедуры = "РегистрыСведений.НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.ЗаполнитьТарифФиксированныхВзносов()";
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			ОбъектовОбработано = ОбъектовОбработано + 1;
			
			// Блокируем объект от изменения другими сеансами.
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС");
			ЭлементБлокировки.УстановитьЗначение("Организация", Выборка.Организация);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
			НаборЗаписей = РегистрыСведений.НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Организация.Установить(Выборка.Организация);
			НаборЗаписей.Прочитать();
			
			Для Каждого Запись Из НаборЗаписей Цикл
				
				Если Не ЗначениеЗаполнено(Запись.Тариф) Тогда
					Запись.Тариф = Перечисления.ИПТарифыФиксированныхВзносов.Единый;
				КонецЕсли;
				
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			ЗафиксироватьТранзакцию();
			
		Исключение
			// Если не удалось обработать какую-либо запись, повторяем попытку снова.
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			ОтменитьТранзакцию();
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'В процедуре %1 не удалось обработать организацию %2 по причине:
					|%3'"),
					ИмяПроцедуры,
					Выборка.Организация,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.РегистрыСведений.НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС, Выборка.Организация, ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Если ПроблемныхОбъектов > 0 Тогда
		
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Процедуре %1 не удалось обработать записи: в %2 из %3 возникли ошибки'"),
			ИмяПроцедуры,
			ПроблемныхОбъектов,
			ОбъектовОбработано);
		
		ВызватьИсключение ТекстСообщения;
		
	Иначе
		
		ЗаписьЖурналаРегистрации(
			ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Информация,
			Метаданные.РегистрыСведений.НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС, ,
			СтрШаблон(НСтр("ru = 'Процедура %1 обработала очередную порцию записей: %2 записей'"),
				ИмяПроцедуры,
				ОбъектовОбработано));
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Создает новые записи в регистре "НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС"
// при обновлении информационной базы
//
Процедура ЗаполнитьРегистр() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.Организация КАК Организация
		|ПОМЕСТИТЬ ВТ_ОрганизацииВСуществующихЗаписях
		|ИЗ
		|	РегистрСведений.НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС КАК НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА НастройкиСистемыНалогообложения.ДатаИзменения = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА НастройкиСистемыНалогообложения.Период
		|		ИНАЧЕ НастройкиСистемыНалогообложения.ДатаИзменения
		|	КОНЕЦ КАК ДатаИзменения,
		|	Организации.Ссылка КАК Организация,
		|	МИНИМУМ(ЕСТЬNULL(НастройкиСистемыНалогообложения.ПрименяетсяНалогНаПрофессиональныйДоход, ЛОЖЬ)) КАК ПрименяетсяНалогНаПрофессиональныйДоход,
		|	МИНИМУМ(ВЫБОР
		|			КОГДА НастройкиСистемыНалогообложения.СистемаНалогообложения ЕСТЬ NULL
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ) КАК СистемаНалогообложенияНайдена,
		|	МИНИМУМ(НастройкиСистемыНалогообложения.Период) КАК Период
		|ИЗ
		|	Справочник.Организации КАК Организации
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиСистемыНалогообложения КАК НастройкиСистемыНалогообложения
		|		ПО (НастройкиСистемыНалогообложения.Организация = Организации.Ссылка)
		|ГДЕ
		|	НЕ Организации.Ссылка В
		|				(ВЫБРАТЬ
		|					ВТ_ОрганизацииВСуществующихЗаписях.Организация КАК Организация
		|				ИЗ
		|					ВТ_ОрганизацииВСуществующихЗаписях КАК ВТ_ОрганизацииВСуществующихЗаписях)
		|	И Организации.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА НастройкиСистемыНалогообложения.ДатаИзменения = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА НастройкиСистемыНалогообложения.Период
		|		ИНАЧЕ НастройкиСистемыНалогообложения.ДатаИзменения
		|	КОНЕЦ,
		|	Организации.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Организация,
		|	Период
		|ИТОГИ ПО
		|	Организация";
	
	ВыборкаОрганизация = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаОрганизация.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Организация.Установить(ВыборкаОрганизация.Организация);
		Выборка = ВыборкаОрганизация.Выбрать();
		ПерваяЗапись = Истина;
		ПлательщикСтраховыхВзносов = Истина;
		Пока Выборка.Следующий() Цикл
			ТребуетсяДобавитьЗапись = ПерваяЗапись Или
				(Выборка.СистемаНалогообложенияНайдена И ПлательщикСтраховыхВзносов = Выборка.ПрименяетсяНалогНаПрофессиональныйДоход);
			Если Не ТребуетсяДобавитьЗапись Тогда
				Продолжить;
			КонецЕсли;
			Запись = НаборЗаписей.Добавить();
			Если Выборка.СистемаНалогообложенияНайдена Тогда
				Запись.Организация = Выборка.Организация;
				Запись.Период = ?(ПерваяЗапись, Выборка.Период, Выборка.ДатаИзменения);
				Запись.ПлательщикСтраховыхВзносовПФР_ФФОМС = Не Выборка.ПрименяетсяНалогНаПрофессиональныйДоход;
			Иначе
				ДанныеЗаполнения = Новый Структура;
				ДанныеЗаполнения.Вставить("Организация", Выборка.Организация);
				УстановкаНастроекПоУмолчанию(Запись, ДанныеЗаполнения);
			КонецЕсли;
			ПлательщикСтраховыхВзносов = Запись.ПлательщикСтраховыхВзносовПФР_ФФОМС;
			ПерваяЗапись = Ложь;
		КонецЦикла;
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
	КонецЦикла;
	
КонецПроцедуры

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"ПрисоединитьДополнительныеТаблицы
	|ЭтотСписок КАК ЭтотСписок
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОбособленныеПодразделения 
	|	ПО ОбособленныеПодразделения.ГоловнаяОрганизация = ЭтотСписок.Организация.ГоловнаяОрганизация
	|;
	|РазрешитьЧтение
	|ГДЕ
	| ЗначениеРазрешено(ОбособленныеПодразделения.Ссылка)
	|
	|;
	|РазрешитьИзменениеЕслиРазрешеноЧтение
	|ГДЕ
	| ЗначениеРазрешено(ЭтотСписок.Организация)";
	
КонецПроцедуры

Функция НовыеНастройкиУчетаСтраховыхВзносов_ПФР_ФФОМС() Экспорт
	
	НастройкиУчетаСтраховыхВзносов = Новый ТаблицаЗначений;
	ОписаниеТипаДата = ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата);
	НастройкиУчетаСтраховыхВзносов.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	НастройкиУчетаСтраховыхВзносов.Колонки.Добавить("Период", ОписаниеТипаДата);
	НастройкиУчетаСтраховыхВзносов.Колонки.Добавить("ДатаИзменения", ОписаниеТипаДата);
	НастройкиУчетаСтраховыхВзносов.Колонки.Добавить("УплачиваютсяСтраховыеВзносы", Новый ОписаниеТипов("Булево"));
	НастройкиУчетаСтраховыхВзносов.Колонки.Добавить("ПлательщикАУСН", Новый ОписаниеТипов("Булево"));
	НастройкиУчетаСтраховыхВзносов.Колонки.Добавить("Тариф", Новый ОписаниеТипов("ПеречислениеСсылка.ИПТарифыФиксированныхВзносов"));
	Возврат НастройкиУчетаСтраховыхВзносов;
	
КонецФункции

Функция ПлательщикСтраховыхВзносов(ДанныеЗаполнения)
	
	ПлательщикНПД = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеЗаполнения, "ПрименяетсяНалогНаПрофессиональныйДоход", Ложь);
	ПлательщикАУСН = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеЗаполнения, "ПрименяетсяАУСН", Ложь);
	
	Возврат Не ПлательщикНПД И Не ПлательщикАУСН;
	
КонецФункции

#Область ПубликацияДанных

// Возвращает идентификатор для вызова через внешний программный интерфейс.
//
// Возвращаемое значение:
//   Строка - идентификатор данных о тарифе страховых взносов.
//
Функция ПубликуемыйИдентификатор() Экспорт
	
	Возврат "insurance_tariff";
	
КонецФункции

// Возвращает данные для публикации через внешний программный интерфейс.
// Параметры:
//  Организация - СправочникСсылка.Организация
//
// Возвращаемое значение:
//  Структура:
//   * tariff - Строка
//   * payment - Булево
//   * date - Дата
//
Функция ПубликуемыеДанные(Организация) Экспорт
	
	ПубликуемыеДанные = Новый Структура;

	СведенияОТарифе = ТарифСтраховыхВзносовИП(Организация);
	Для Каждого ПравилоПубликации Из ПравилаПубликацииТарифаСтраховыхВзносов() Цикл
		ПубликацияДанных.ОпубликоватьЗначениеПоПравилу(СведенияОТарифе, ПравилоПубликации, ПубликуемыеДанные);
	КонецЦикла;
	
	Возврат ПубликуемыеДанные;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПравилаПубликацииТарифаСтраховыхВзносов()
	
	Правила = ПубликацияДанных.НовыеПравилаПубликации();

	ПубликацияДанных.ДобавитьПравилоПубликации(Правила, "Тариф", "tariff");
	ПубликацияДанных.ДобавитьПравилоПубликации(Правила, "ПлательщикСтраховыхВзносовПФР_ФФОМС", "payment");
	ПубликацияДанных.ДобавитьПравилоПубликации(Правила, "Период", "date");
	
	Возврат Правила;
	
КонецФункции

#КонецОбласти

#КонецЕсли