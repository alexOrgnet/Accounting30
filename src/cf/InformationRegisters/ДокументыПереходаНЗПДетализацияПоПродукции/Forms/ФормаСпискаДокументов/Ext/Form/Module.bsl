#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Не Справочники.Организации.ИспользуетсяНесколькоОрганизаций() Тогда
		Элементы.ОтборОрганизация.Видимость = Ложь;
	КонецЕсли;
	
	Если Не Параметры.Отбор.Свойство("СчетУчета") Тогда
		Элементы.ОтборСчетУчета.Видимость = Ложь;
	Иначе
		СчетУчета = Параметры.Отбор.СчетУчета;
	КонецЕсли;

	ПериодАктуализации = Параметры.ДатаПереходаНЗПДетализацияПоПродукции;
		
	Организация = Параметры.Организация;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Не задано значение параметра ""Организация"". Форма не может быть открыта.'"), , , , Отказ);
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоОбособленноеПодразделение(Организация) Тогда
		ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(Список, "Организация", Организация);
	Иначе
		ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(Список, "ГоловнаяОрганизация", Организация);
	КонецЕсли;

	ПроверитьИОтобразитьАктуальность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Оповестить("ПеречитатьПериодПерехода", ВладелецФормы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура АктуализироватьОстатки(Команда)
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ВыборПериодаАктуализацииЗавершение", ЭтотОбъект);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПериодАктуализации", ПериодАктуализации);
	ПараметрыФормы.Вставить("Организация", Организация);
	ПараметрыФормы.Вставить("ОстаткиАктуальны", ОстаткиАктуальны);

	ОткрытьФорму("РегистрСведений.ДокументыПереходаНЗПДетализацияПоПродукции.Форма.ВыборПериодаАктуализации",
		ПараметрыФормы,
		ЭтотОбъект,
		Истина,
		,
		,
		ОповещениеОЗакрытии,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыборПериодаАктуализацииЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ДлительнаяОперация = АктуализироватьОстаткиВФоне(Результат);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ОповещениеОЗавершении = Новый ОписаниеОповещения("АктуализироватьОстаткиЗавершение", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция АктуализироватьОстаткиВФоне(ДатаАктуализации)
	
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = "АктуализироватьОстаткиПереходНЗПДетализацияПоПродукции";
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Организация", Организация);
	СтруктураПараметров.Вставить("ДатаАктуализации", ДатаАктуализации);
	СтруктураПараметров.Вставить("СчетаУчета", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(СчетУчета));
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
		"РегистрыСведений.ДокументыПереходаНЗПДетализацияПоПродукции.АктуализироватьОстатки",
		СтруктураПараметров,
		ПараметрыВыполнения);
		
	Возврат ДлительнаяОперация;
		
КонецФункции

&НаКлиенте
Процедура АктуализироватьОстаткиЗавершение(ДлительнаяОперация, ДополнительныеПараметры) Экспорт
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Ошибка" Тогда
	
		ПоказатьПредупреждение( , СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Актуализация остатков не может быть выполнена по причине: 
			           |%1'"), ДлительнаяОперация.КраткоеПредставлениеОшибки));
			
	ИначеЕсли ДлительнаяОперация.Статус = "Выполнено" Тогда
		
		ПериодАктуализации = ПолучитьИзВременногоХранилища(ДлительнаяОперация.АдресРезультата);
		ПроверитьИОтобразитьАктуальность();
		Элементы.Список.Обновить();
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПроверитьИОтобразитьАктуальность()
	
	ЗапросОстатки = Новый Запрос;
	
	ЗапросОстатки.УстановитьПараметр("Организация", Организация);
	ЗапросОстатки.УстановитьПараметр("Счет", СчетУчета);
	ЗапросОстатки.УстановитьПараметр("Период", ПериодАктуализации);
	ЗначениеПустойПродукции = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Продукция.ТипЗначения.ПривестиЗначение();
	ЗапросОстатки.УстановитьПараметр("ЗначениеПоУмолчанию", ЗначениеПустойПродукции);
	
	ЗапросОстатки.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ХозрасчетныйОстатки.Субконто1 КАК Продукция,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаОстаток
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет = &Счет,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Продукция),
	|			Организация = &Организация
	|				И Субконто1 = &ЗначениеПоУмолчанию) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	ХозрасчетныйОстатки.СуммаОстаток < 0";
	
	РезультатОстатки = ЗапросОстатки.Выполнить();
	ОстаткиАктуальны = Истина;
	Если Не РезультатОстатки.Пустой() Тогда
		
		ШаблонЗаголовка = НСтр("ru = 'Данные остатков НЗП в разрезе продукции неактуальны: требуется актуализация на %1'");
		Элементы.НеАктуальныеОстатки.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонЗаголовка, Формат(ПериодАктуализации, "ДФ='ММMM yyyy ""г.""'"));
		
		ОстаткиАктуальны = Ложь;
				
	КонецЕсли;

	УстановитьВидимостьЭлементовАктуальностиОстатков(ЭтотОбъект, ОстаткиАктуальны);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьЭлементовАктуальностиОстатков(Форма, ОстаткиАктуальны)
	
	Форма.Элементы.ГруппаБаннер.Видимость = Не ОстаткиАктуальны;
	Форма.Элементы.АктуализироватьОстатки.Видимость = ОстаткиАктуальны;

КонецПроцедуры

#КонецОбласти