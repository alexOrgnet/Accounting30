#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

Функция СопоставлениеНоменклатуры(ТаблицаНоменклатурыОФД) Экспорт
	ТаблицаРезультат = Новый ТаблицаЗначений;
	ТаблицаРезультат.Колонки.Добавить("Идентификатор", ТаблицаНоменклатурыОФД.Колонки.Идентификатор.ТипЗначения);
	ТаблицаРезультат.Колонки.Добавить("Номенклатура",  Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	
	Если ТаблицаНоменклатурыОФД.Количество() = 0 Тогда
		Возврат ТаблицаРезультат;
	КонецЕсли;

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ТаблицаНоменклатурыОФД", ТаблицаНоменклатурыОФД);
	ТекстыЗапросов = Новый Массив;
	ТекстыЗапросов.Добавить(
	"ВЫБРАТЬ
	|	НоменклатураЧеков.Идентификатор КАК Идентификатор,
	|	НоменклатураЧеков.Наименование КАК Наименование,
	|	НоменклатураЧеков.Штрихкод КАК Штрихкод
	|ПОМЕСТИТЬ ВТ_НоменклатураЧеков
	|ИЗ
	|	&ТаблицаНоменклатурыОФД КАК НоменклатураЧеков");
	ТекстыЗапросов.Добавить(ТекстЗапросаПоискПодходящего());
	ТекстыЗапросов.Добавить(
	"ВЫБРАТЬ
	|	ВТ_СопоставленнаяНоменклатура.ИдентификаторСтроки КАК Идентификатор,
	|	ВТ_СопоставленнаяНоменклатура.НоменклатураСсылка КАК Номенклатура
	|ИЗ
	|	ВТ_СопоставленнаяНоменклатура КАК ВТ_СопоставленнаяНоменклатура");
	
	Запрос.Текст = СтрСоединить(ТекстыЗапросов, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета());
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Запрос.Выполнить().Выгрузить(), ТаблицаРезультат);
	
	Возврат ТаблицаРезультат;
КонецФункции

// Текст запроса для поиска подходящей номенклатуры
// Номенклатура подбирается по приоритетам 
// - высший у совпадения по штрихкоду и наименованию
// - средний у только штрихкода (возможно переименовали позицию в ККТ)
// - низжий - только наименование (возможно изменился производитель)
Функция ТекстЗапросаПоискПодходящего() Экспорт
	Возврат 
	"ВЫБРАТЬ // Ищем по полному совпадению (номенклатура + штрихкод) - 1 приоритет
	|	СопоставлениеНоменклатурыОФД.Номенклатура КАК НоменклатураСсылка,
	|	1 КАК Приоритет,
	|	ВТ_НоменклатураЧеков.Идентификатор КАК Идентификатор
	|ПОМЕСТИТЬ ВТ_СопоставлениеНоменклатуры
	|ИЗ
	|	ВТ_НоменклатураЧеков КАК ВТ_НоменклатураЧеков
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеНоменклатурыОФД КАК СопоставлениеНоменклатурыОФД
	|		ПО ВТ_НоменклатураЧеков.Наименование = СопоставлениеНоменклатурыОФД.НоменклатураНаименование
	|			И ВТ_НоменклатураЧеков.Штрихкод = СопоставлениеНоменклатурыОФД.Штрихкод
	|ГДЕ
	|	ВТ_НоменклатураЧеков.Штрихкод <> """"
	|	И НЕ СопоставлениеНоменклатурыОФД.Номенклатура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Ищем по ранее сопоставленному штрихкоду (возможно в кассе изменили наименование) - 2 приоритет
	|	СопоставлениеНоменклатурыОФД.Номенклатура,
	|	2,
	|	ВТ_НоменклатураЧеков.Идентификатор
	|ИЗ
	|	ВТ_НоменклатураЧеков КАК ВТ_НоменклатураЧеков
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеНоменклатурыОФД КАК СопоставлениеНоменклатурыОФД
	|		ПО ВТ_НоменклатураЧеков.Штрихкод = СопоставлениеНоменклатурыОФД.Штрихкод
	|ГДЕ
	|	ВТ_НоменклатураЧеков.Штрихкод <> """"
	|	И НЕ СопоставлениеНоменклатурыОФД.Номенклатура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // ищем по ранее сопоставленному наименованию (возможно в кассе поменяли наименованием - самый неточный поиск) - 3 приоритет
	|	СопоставлениеНоменклатурыОФД.Номенклатура,
	|	3,
	|	ВТ_НоменклатураЧеков.Идентификатор
	|ИЗ
	|	ВТ_НоменклатураЧеков КАК ВТ_НоменклатураЧеков
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СопоставлениеНоменклатурыОФД КАК СопоставлениеНоменклатурыОФД
	|		ПО ВТ_НоменклатураЧеков.Наименование = СопоставлениеНоменклатурыОФД.НоменклатураНаименование
	|ГДЕ
	|	НЕ СопоставлениеНоменклатурыОФД.Номенклатура ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СопоставлениеНоменклатуры.Идентификатор КАК ИдентификаторСтроки,
	|	МАКСИМУМ(ВТ_СопоставлениеНоменклатуры.НоменклатураСсылка) КАК НоменклатураСсылка
	|ПОМЕСТИТЬ ВТ_СопоставленнаяНоменклатура
	|ИЗ
	|	ВТ_СопоставлениеНоменклатуры КАК ВТ_СопоставлениеНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВТ_СопоставлениеНоменклатуры.Идентификатор КАК Идентификатор,
	|			МИНИМУМ(ВТ_СопоставлениеНоменклатуры.Приоритет) КАК Приоритет
	|		ИЗ
	|			ВТ_СопоставлениеНоменклатуры КАК ВТ_СопоставлениеНоменклатуры
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВТ_СопоставлениеНоменклатуры.Идентификатор) КАК ВТ_ПодходящаяНоменклатура
	|		ПО ВТ_СопоставлениеНоменклатуры.Идентификатор = ВТ_ПодходящаяНоменклатура.Идентификатор
	|			И ВТ_СопоставлениеНоменклатуры.Приоритет = ВТ_ПодходящаяНоменклатура.Приоритет
	|ГДЕ 
	|	НЕ ВТ_ПодходящаяНоменклатура.Идентификатор ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_СопоставлениеНоменклатуры.Идентификатор
	|
	|ИМЕЮЩИЕ // в резульат отбираем только строки в которых нет неоднозначности 
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_СопоставлениеНоменклатуры.НоменклатураСсылка) = 1";
КонецФункции

#КонецОбласти

#КонецЕсли

