#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Если не выполнен обработчик начального заполнения новых настроек, то блокируем работу с регистром.
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(
		РегистрыСведений.ПорядокУплатыНалоговПоРегионам.СоздатьНаборЗаписей(),
		ЭтотОбъект);
	
	КодРегионаРегистрации = Формат(Запись.КодРегиона, "ЧЦ=2; ЧН=; ЧВН=");
	НастройкиУчетаНалогаНаПрибыльФормы.ЗаполнитьСписокВыбораРегиона(Элементы.КодРегионаРегистрации.СписокВыбора, Ложь);
		
	ПериодЧислом = Год(Запись.Период);
	
	ЗаполнитьСписокВыбораНалога();
	
	ВыборНалогаДоступен = Истина;
		
	Если Параметры.ЗначенияЗаполнения.Свойство("Налог")
	   И ЗначениеЗаполнено(Параметры.ЗначенияЗаполнения.Налог) Тогда
		ВыборНалогаДоступен = Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("ВыборНалогаДоступен") Тогда
		ВыборНалогаДоступен = Параметры.ВыборНалогаДоступен;
	КонецЕсли;
	
	Элементы.Налог.Видимость = ВыборНалогаДоступен;
	Если Не ВыборНалогаДоступен Тогда
		КодНалога = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.Налог, "Код");
		Если КодНалога = ЗадачиБухгалтераКлиентСервер.КодЗадачиНалогНаИмущество() Тогда
			АвтоЗаголовок = Ложь;
			Заголовок = НСтр("ru='Налог на имущество: уплата авансов'");
		ИначеЕсли КодНалога = ЗадачиБухгалтераКлиентСервер.КодЗадачиТранспортныйНалог() Тогда
			АвтоЗаголовок = Ложь;
			Заголовок = НСтр("ru='Транспортный налог: уплата авансов'");
		КонецЕсли;			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ ЗначениеЗаполнено(КодРегионаРегистрации) ИЛИ КодРегионаРегистрации = "00" Тогда
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Заполнение", "Регион");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "КодРегионаРегистрации", , Отказ);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПериодЧисломПриИзменении(Элемент)
	
	Если Запись.Период = Дата(ПериодЧислом, 1, 1) Тогда
		Возврат;
	КонецЕсли;	
	
	Запись.Период = Дата(ПериодЧислом, 1, 1);
	
	Если ВыборНалогаДоступен Тогда
		ПриИзмененииПериода();
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ПериодЧисломОчистка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура КодРегионаПриИзменении(Элемент)
	
	Запись.КодРегиона = КодРегионаРегистрации;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныепроцедурыИФункции

&НаСервере
Процедура ПриИзмененииПериода()
	
	ЗаполнитьСписокВыбораНалога();

	Если Элементы.Налог.СписокВыбора.НайтиПоЗначению(Запись.Налог) = Неопределено Тогда
		Запись.Налог = Неопределено;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораНалога()
	
	Элементы.Налог.СписокВыбора.Очистить();
	РегиональныеНалоги = РегистрыСведений.ПорядокУплатыНалоговПоРегионам.НалогиПорядокКоторыхНастраиваетсяПоРегионам(Запись.Период);
	Для Каждого Налог Из РегиональныеНалоги Цикл
		Элементы.Налог.СписокВыбора.Добавить(Налог);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти