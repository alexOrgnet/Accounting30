#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ОбработчикиОбновлений 

Процедура ПеренестиДанныеКБКиОКТМОвИзмерения(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПустойКБК",   "");
	Запрос.УстановитьПараметр("ПустойОКТМО", "");
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1000
	|	СведенияФНСОбОплатахНалогов.Организация КАК Организация,
	|	СведенияФНСОбОплатахНалогов.Год КАК Год,
	|	СведенияФНСОбОплатахНалогов.ДатаПлатежа КАК ДатаПлатежа,
	|	СведенияФНСОбОплатахНалогов.НомерПлатежа КАК НомерПлатежа,
	|	СведенияФНСОбОплатахНалогов.СуммаПлатежа КАК СуммаПлатежа,
	|	СведенияФНСОбОплатахНалогов.СрокУплаты КАК СрокУплаты
	|ИЗ
	|	РегистрСведений.СведенияФНСОбОплатахНалогов КАК СведенияФНСОбОплатахНалогов
	|ГДЕ
	|	СведенияФНСОбОплатахНалогов.КБК = &ПустойКБК
	|	И СведенияФНСОбОплатахНалогов.ОКТМО = &ПустойОКТМО
	|	И СведенияФНСОбОплатахНалогов.УдалитьКБК <> &ПустойКБК
	|	И СведенияФНСОбОплатахНалогов.УдалитьОКТМО <> &ПустойОКТМО";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Ложь;
	
	ПроблемныхОбъектов = 0;
	ОбъектовОбработано = 0;
	
	Пока Выборка.Следующий() Цикл
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СведенияФНСОбОплатахНалогов");
			ЭлементБлокировки.УстановитьЗначение("Год", Выборка.Год);
			Блокировка.Заблокировать();
			
			Набор = РегистрыСведений.СведенияФНСОбОплатахНалогов.СоздатьНаборЗаписей();
			Набор.Отбор.Организация.Установить(Выборка.Организация);
			Набор.Отбор.Год.Установить(Выборка.Год);
			Набор.Отбор.ДатаПлатежа.Установить(Выборка.ДатаПлатежа);
			Набор.Отбор.НомерПлатежа.Установить(Выборка.НомерПлатежа);
			Набор.Отбор.СуммаПлатежа.Установить(Выборка.СуммаПлатежа);
			Набор.Отбор.СрокУплаты.Установить(Выборка.СрокУплаты);
			Набор.Прочитать();
			
			Для Каждого Запись Из Набор Цикл
				Запись.КБК = Запись.УдалитьКБК;
				Запись.ОКТМО = Запись.УдалитьОКТМО;
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
			
			ОбъектовОбработано = ОбъектовОбработано + 1;
			
			ЗафиксироватьТранзакцию();
		Исключение
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			ОтменитьТранзакцию();
			
			ТекстСообщения = СтрШаблон(
				НСтр("ru = 'Процедуре РегистрыСведений.СведенияФНСОбОплатахНалогов.ПеренестиДанныеКБКиОКТМОвИзмерения
				|не удалось обработать записи по причине:
				|%1'"), 
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.РегистрыСведений.СведенияФНСОбОплатахНалогов,,
				ТекстСообщения);
		КонецПопытки;
	КонецЦикла;
	
	Если ОбъектовОбработано = 0 Тогда
		ТекстСообщения = СтрШаблон(
			НСтр("ru = 'Процедуре РегистрыСведений.СведенияФНСОбОплатахНалогов.ПеренестиДанныеКБКиОКТМОвИзмерения
			|не удалось обработать записи (пропущены): %1'"),
			ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
			УровеньЖурналаРегистрации.Информация,
			Метаданные.РегистрыСведений.СведенияФНСОбОплатахНалогов,
			,
			СтрШаблон(
				НСтр("ru = 'Процедура РегистрыСведений.СведенияФНСОбОплатахНалогов.ПеренестиДанныеКБКиОКТМОвИзмерения
				|обработала очередную порцию наборов записей: %1'"), 
				ОбъектовОбработано));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли