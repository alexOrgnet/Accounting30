#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ЕстьЛьготыПоКадастровойНедвижимости(Организация, Период, Периодичность) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НачалоПериода = ИнтерфейсыВзаимодействияБРОКлиентСервер.НачалоПериода(Периодичность, Период);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организации", ОбщегоНазначенияБПВызовСервераПовтИсп.ВсяОрганизация(Организация));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	
	Запрос.Текст = ТекстЗапросаДействиеЛьготПоПериодамДляКадастровыхОбъектов() +
		ОбщегоНазначения.РазделительПакетаЗапросов() +	
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДействиеЛьготПоПериодам.ОсновноеСредство
	|ИЗ
	|	ДействиеЛьготПоПериодам КАК ДействиеЛьготПоПериодам
	|ГДЕ
	|	ДействиеЛьготПоПериодам.ОкончаниеДействияЛьготы = ДАТАВРЕМЯ(1, 1, 1)
	|	ИЛИ ДействиеЛьготПоПериодам.ОкончаниеДействияЛьготы >= &НачалоПериода";
		
	Возврат Не Запрос.Выполнить().Пустой();	
		
КонецФункции

Функция КБКПоИмуществуНеВходящемуВЕСГС() Экспорт
	
	Возврат "18210602010021000110";
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

Функция ПолучитьПараметрыФормыВыбораДляКода(НазваниеМакета, ТекущийПериод) Экспорт
	
	КодыЛьгот = Новый ТаблицаЗначений;
	
	КодыЛьгот.Колонки.Добавить("Код");
	КодыЛьгот.Колонки.Добавить("Наименование");
	КодыЛьгот.Колонки.Добавить("КодЕдиницыИзмерения");
	
	Макет	= ПолучитьМакет(НазваниеМакета);
	
	НазваниеОбласти = "";
	СписокОбластей = Новый СписокЗначений;
	ОпределитьПараметрыСпискаКодов(Макет, ТекущийПериод, НазваниеОбласти, СписокОбластей);
	
	ТекущаяОбласть = Макет.Области.Найти("Область" + НазваниеОбласти);
	
	Если НЕ (ТекущаяОбласть = Неопределено) Тогда	
		
		Для НомерСтр = ТекущаяОбласть.Верх По ТекущаяОбласть.Низ Цикл
			
			// Перебираем строки макета.
			КодПоказателя       = СокрП(Макет.Область(НомерСтр, 1).Текст);
			Название            = СокрП(Макет.Область(НомерСтр, 2).Текст);
			КодЕдиницыИзмерения = СокрП(Макет.Область(НомерСтр, 3).Текст);
			
			Если КодПоказателя = "###" Тогда
				Прервать;
			ИначеЕсли ПустаяСтрока(КодПоказателя) Тогда
				Продолжить;
			Иначе
				НоваяСтрока = КодыЛьгот.Добавить();
				НоваяСтрока.Код                 = КодПоказателя;
				НоваяСтрока.Наименование        = Название;
				НоваяСтрока.КодЕдиницыИзмерения = КодЕдиницыИзмерения;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Параметры = Новый Структура;
	Параметры.Вставить("СписокКодов"           , КодыЛьгот);
	Параметры.Вставить("СписокПериодовДействия", СписокОбластей);
	Параметры.Вставить("ТекущийПериод"         , НазваниеОбласти);
	
	Возврат Параметры;
	
КонецФункции

Процедура ОпределитьПараметрыСпискаКодов(Макет, ТекущийПериод, НазваниеОбласти, СписокОбластей)
	
	Области = Макет.Области;
	Если Области.Количество() = 0 Тогда
		НазваниеОбласти = "";
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекОбласть Из Области Цикл
		СписокОбластей.Добавить(Прав(ТекОбласть.Имя,4));
	КонецЦикла;
	
	ТекущаяОбласть = СписокОбластей[0].Значение;
	Для Каждого ТекОбласть Из СписокОбластей Цикл
		Если Год(ТекущийПериод) < Число(ТекОбласть.Значение) Тогда
			Прервать;
		КонецЕсли;
		
		ТекущаяОбласть = ТекОбласть.Значение;
	КонецЦикла;
	
	НазваниеОбласти = ТекущаяОбласть;
	
КонецПроцедуры

Процедура ЗаполнитьКодВидаИмущества() Экспорт
	
	НаборЗаписей = РегистрыСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	
	ТребуетсяЗаписатьДанные = Ложь;
	Для каждого СтрокаНабора Из НаборЗаписей Цикл
		
		Если ЗначениеЗаполнено(СтрокаНабора.КодВидаИмущества) Тогда
			Продолжить;
		КонецЕсли;
		
		ТребуетсяЗаписатьДанные = Истина;
		
		СтрокаНабора.КодВидаИмущества = "03";
		
		Если СтрокаНабора.ДоляСтоимостиЧислитель > 0 И СтрокаНабора.ДоляСтоимостиЗнаменатель > 0 Тогда
			СтрокаНабора.КодВидаИмущества = "02";
		КонецЕсли;
		
		Если СтрокаНабора.НалоговаяБаза = Перечисления.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость Тогда
			СтрокаНабора.КодВидаИмущества = "11";
		ИначеЕсли СтрокаНабора.УдалитьВидИмущества = Перечисления.УдалитьВидыИмущества.ВходитВСоставЕСГС Тогда
			СтрокаНабора.КодВидаИмущества = "01";
		ИначеЕсли СтрокаНабора.УдалитьВидИмущества = Перечисления.УдалитьВидыИмущества.НаходитсяНаТерриторииДругогоГосударства Тогда
			СтрокаНабора.КодВидаИмущества = "04";
		ИначеЕсли СтрокаНабора.УдалитьВидИмущества = Перечисления.УдалитьВидыИмущества.ИспользуетсяВОЭЗКалининградскойОбласти Тогда
			СтрокаНабора.КодВидаИмущества = "05";
		КонецЕсли;
		
		СтрокаНабора.УдалитьВидИмущества = Неопределено;
		
	КонецЦикла;
	
	Если Не ТребуетсяЗаписатьДанные Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
	Исключение
		ШаблонСообщения = НСтр("ru = 'Не выполнено обновление записей регистра сведений ""Ставки налога на имущество по отдельным основным средствам""
                                |%1'");
		
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации(
			ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.РегистрыСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам,, 
			ТекстСообщения);
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

Процедура ЗаполнитьПорядокОпределенияНалоговойБазы() Экспорт
	
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда // В подчиненных узлах РИБ не выполняется
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.НалоговаяБаза
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
	|ГДЕ
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.ПустаяСсылка)";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
	
		НаборЗаписей = РегистрыСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СоздатьНаборЗаписей();
		НаборЗаписей.Прочитать();
		
		Для каждого Запись Из НаборЗаписей Цикл
			
			Если НЕ ЗначениеЗаполнено(Запись.НалоговаяБаза) Тогда
				Запись.НалоговаяБаза = Перечисления.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость;
			КонецЕсли;
			
		КонецЦикла;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьКадастровыйНомер() Экспорт
	
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда // В подчиненных узлах РИБ не выполняется
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновныеСредства.Ссылка КАК ОсновноеСредство,
	|	ОсновныеСредства.УдалитьКадастровыйНомер КАК КадастровыйНомер,
	|	ОсновныеСредства.УдалитьПомещение КАК Помещение
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	Справочник.ОсновныеСредства КАК ОсновныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
	|		ПО ОсновныеСредства.Ссылка = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство
	|ГДЕ
	|	ОсновныеСредства.УдалитьКадастровыйНомер <> """"
	|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	|	СостоянияОСОрганизаций.Организация,
	|	СостоянияОСОрганизаций.ДатаСостояния КАК ДатаСостояния,
	|	ТаблицаОС.КадастровыйНомер,
	|	ТаблицаОС.Помещение
	|ПОМЕСТИТЬ СостоянияОС
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|		ПО (СостоянияОСОрганизаций.Активность = ИСТИНА)
	|			И (СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
	|			И ТаблицаОС.ОсновноеСредство = СостоянияОСОрганизаций.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	ДатаСостояния
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(СостоянияОС.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ ДатыПоследнихСостоянийОС
	|ИЗ
	|	СостоянияОС КАК СостоянияОС
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОС.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	ДатаСостояния
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДАТАВРЕМЯ(2014, 1, 1, 0, 0, 0) КАК Период,
	|	СостоянияОС.Организация,
	|	ДатыПоследнихСостоянийОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ПоМестуНахожденияОрганизации) КАК ПостановкаНаУчетВНалоговомОргане,
	|	ЗНАЧЕНИЕ(Перечисление.УдалитьПорядокНалогообложенияИмущества.ОсобыеЛьготыНеУстановлены) КАК УдалитьПорядокНалогообложения,
	|	ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость) КАК НалоговаяБаза,
	|	ВЫБОР
	|		КОГДА НЕ СостоянияОС.Помещение
	|			ТОГДА СостоянияОС.КадастровыйНомер
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КадастровыйНомер,
	|	ВЫБОР
	|		КОГДА СостоянияОС.Помещение
	|			ТОГДА СостоянияОС.КадастровыйНомер
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КадастровыйНомерПомещения
	|ИЗ
	|	ДатыПоследнихСостоянийОС КАК ДатыПоследнихСостоянийОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СостоянияОС КАК СостоянияОС
	|		ПО ДатыПоследнихСостоянийОС.ОсновноеСредство = СостоянияОС.ОсновноеСредство
	|			И ДатыПоследнихСостоянийОС.ДатаСостояния = СостоянияОС.ДатаСостояния";
	
	ТаблицаОС = Запрос.Выполнить().Выгрузить();
	
	НаборЗаписей = РегистрыСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();

	Для каждого Запись Из НаборЗаписей Цикл
		
		ОсновноеСредство = Запись.ОсновноеСредство;
		
		Если НЕ ЗначениеЗаполнено(Запись.КадастровыйНомер)
			И НЕ ОсновноеСредство.УдалитьПомещение
			И ЗначениеЗаполнено(ОсновноеСредство.УдалитьКадастровыйНомер) Тогда
				Запись.КадастровыйНомер = ОсновноеСредство.УдалитьКадастровыйНомер;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Запись.КадастровыйНомерПомещения)
			И ОсновноеСредство.УдалитьПомещение
			И ЗначениеЗаполнено(ОсновноеСредство.УдалитьКадастровыйНомер) Тогда
				Запись.КадастровыйНомерПомещения = ОсновноеСредство.УдалитьКадастровыйНомер;
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого СтрокаТаблицы Из ТаблицаОС Цикл
		
		НоваяЗапись = НаборЗаписей.Добавить();
	    ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаТаблицы);
		
	КонецЦикла;	
		
	Попытка
		НаборЗаписей.Записать();
	Исключение
		ШаблонСообщения = НСтр("ru = 'Не выполнено обновление записей регистра сведений ""Ставки налога на имущество по отдельным основным средствам""
                                |%1'");
		
		ТекстСообщения = СтрШаблон(ШаблонСообщения, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации(
			ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.РегистрыСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам,, 
			ТекстСообщения);
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

Функция ТекстЗапросаДействиеЛьготПоПериодамДляКадастровыхОбъектов() Экспорт

	// Налоговая база в виде кадастровой стоимости может быть установлена только добавлением записи для объекта с особым
	// порядком налогообложения.
	// В то же время льгота может быть установлена как индивидуально для объекта (также в настройке особого порядка 
	// налогообложения), так и для организации в целом - в регистре Налога на имущество.
	// Запрос ниже учитывает как индивидуальные льготы по "кадастровым" объектам, так и общие льготы.
	// 1. Сначала получаем все особые настройки по "кадастровым" объектам, которые применялись начиная с указанной даты (1-й запрос пакета).
	// 2. Далее получаем действующую общую настройку на дату применения каждой индивидуальной настройки и, наоборот,
	//    на дату изменения общей настройки получаем действующие индивидуальные настройки (2-й и 3-й запросы)
	// 3. В итоге получаем фактически применяемые настройки льгот на даты действия индивидуальных настроек по объектам, а также общих настроек (4-й запрос) 
	ТекстЗапроса = 	
	"ВЫБРАТЬ
	|	&НачалоПериода КАК Период,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.Организация КАК Организация,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КадастровыйНомер = """"
	|			ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КадастровыйНомерПомещения
	|		ИНАЧЕ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КадастровыйНомер
	|	КОНЕЦ КАК КадастровыйНомер,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане КАК ПостановкаНаУчетВНалоговомОргане,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОснованиеЛьготы КАК ОснованиеЛьготы,
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОснованиеЛьготы.ВидЛьготы, ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) КАК ВидЛьготы,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НачалоДействияЛьготы КАК НачалоДействияЛьготы,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОкончаниеДействияЛьготы КАК ОкончаниеДействияЛьготы
	|ПОМЕСТИТЬ ВсеНастройкиПоКадастровымОбъектам
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&НачалоПериода, Организация В (&Организации)) КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
	|ГДЕ
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость)
	|	И НЕ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НеПодлежитНалогообложению
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.КадастровыйНомер = """"
	|			ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.КадастровыйНомерПомещения
	|		ИНАЧЕ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.КадастровыйНомер
	|	КОНЕЦ,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ПостановкаНаУчетВНалоговомОргане,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОснованиеЛьготы,
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОснованиеЛьготы.ВидЛьготы, ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)),
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.НачалоДействияЛьготы,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОкончаниеДействияЛьготы
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
	|ГДЕ
	|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация В(&Организации)
	|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период > &НачалоПериода
	|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость)
	|	И НЕ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.НеПодлежитНалогообложению
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтавкиНалогаНаИмущество.Период КАК ПериодОбщейНастройки,
	|	СтавкиНалогаНаИмущество.Организация КАК Организация,
	|	МАКСИМУМ(ВсеНастройкиПоКадастровымОбъектам.Период) КАК Период
	|ПОМЕСТИТЬ ОбщиеНастройки
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество КАК СтавкиНалогаНаИмущество
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсеНастройкиПоКадастровымОбъектам КАК ВсеНастройкиПоКадастровымОбъектам
	|		ПО СтавкиНалогаНаИмущество.Организация = ВсеНастройкиПоКадастровымОбъектам.Организация
	|			И СтавкиНалогаНаИмущество.Период >= ВсеНастройкиПоКадастровымОбъектам.Период
	|ГДЕ
	|	СтавкиНалогаНаИмущество.Организация В(&Организации)
	|	И СтавкиНалогаНаИмущество.Период > &НачалоПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	СтавкиНалогаНаИмущество.Период,
	|	СтавкиНалогаНаИмущество.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеНастройкиПоКадастровымОбъектам.Период КАК Период,
	|	ВсеНастройкиПоКадастровымОбъектам.Организация КАК Организация,
	|	ВсеНастройкиПоКадастровымОбъектам.ОсновноеСредство КАК ОсновноеСредство,
	|	ВсеНастройкиПоКадастровымОбъектам.КадастровыйНомер КАК КадастровыйНомер,
	|	ВсеНастройкиПоКадастровымОбъектам.ПостановкаНаУчетВНалоговомОргане КАК ПостановкаНаУчетВНалоговомОргане,
	|	ВсеНастройкиПоКадастровымОбъектам.ОснованиеЛьготы КАК ОснованиеЛьготы,
	|	ВсеНастройкиПоКадастровымОбъектам.ВидЛьготы КАК ВидЛьготы,
	|	ВсеНастройкиПоКадастровымОбъектам.НачалоДействияЛьготы КАК НачалоДействияЛьготы,
	|	ВсеНастройкиПоКадастровымОбъектам.ОкончаниеДействияЛьготы КАК ОкончаниеДействияЛьготы,
	|	МАКСИМУМ(СтавкиНалогаНаИмущество.Период) КАК ПериодОбщейНастройки
	|ПОМЕСТИТЬ ВсеНастройкиПоКадастровымОбъектамИПериодОбщихНастроек
	|ИЗ
	|	ВсеНастройкиПоКадастровымОбъектам КАК ВсеНастройкиПоКадастровымОбъектам
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаИмущество КАК СтавкиНалогаНаИмущество
	|		ПО ВсеНастройкиПоКадастровымОбъектам.Организация = СтавкиНалогаНаИмущество.Организация
	|			И ВсеНастройкиПоКадастровымОбъектам.Период >= СтавкиНалогаНаИмущество.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ВсеНастройкиПоКадастровымОбъектам.Период,
	|	ВсеНастройкиПоКадастровымОбъектам.Организация,
	|	ВсеНастройкиПоКадастровымОбъектам.ОсновноеСредство,
	|	ВсеНастройкиПоКадастровымОбъектам.ОснованиеЛьготы,
	|	ВсеНастройкиПоКадастровымОбъектам.ВидЛьготы,
	|	ВсеНастройкиПоКадастровымОбъектам.НачалоДействияЛьготы,
	|	ВсеНастройкиПоКадастровымОбъектам.ОкончаниеДействияЛьготы,
	|	ВсеНастройкиПоКадастровымОбъектам.КадастровыйНомер,
	|	ВсеНастройкиПоКадастровымОбъектам.ПостановкаНаУчетВНалоговомОргане
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВсеНастройкиПоКадастровымОбъектам.Период,
	|	ВсеНастройкиПоКадастровымОбъектам.Организация,
	|	ВсеНастройкиПоКадастровымОбъектам.ОсновноеСредство,
	|	ВсеНастройкиПоКадастровымОбъектам.КадастровыйНомер,
	|	ВсеНастройкиПоКадастровымОбъектам.ПостановкаНаУчетВНалоговомОргане,
	|	ВсеНастройкиПоКадастровымОбъектам.ОснованиеЛьготы,
	|	ВсеНастройкиПоКадастровымОбъектам.ВидЛьготы,
	|	ВсеНастройкиПоКадастровымОбъектам.НачалоДействияЛьготы,
	|	ВсеНастройкиПоКадастровымОбъектам.ОкончаниеДействияЛьготы,
	|	ОбщиеНастройки.ПериодОбщейНастройки
	|ИЗ
	|	ВсеНастройкиПоКадастровымОбъектам КАК ВсеНастройкиПоКадастровымОбъектам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбщиеНастройки КАК ОбщиеНастройки
	|		ПО ВсеНастройкиПоКадастровымОбъектам.Организация = ОбщиеНастройки.Организация
	|			И ВсеНастройкиПоКадастровымОбъектам.Период = ОбщиеНастройки.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеНастройкиПоКадастровымОбъектам.Период КАК Период,
	|	ВсеНастройкиПоКадастровымОбъектам.Организация КАК Организация,
	|	ВсеНастройкиПоКадастровымОбъектам.ОсновноеСредство КАК ОсновноеСредство,
	|	ВсеНастройкиПоКадастровымОбъектам.КадастровыйНомер КАК КадастровыйНомер,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтавкиНалогаНаИмущество.ОснованиеЛьготы, ЗНАЧЕНИЕ(Справочник.ОснованияЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ОснованияЛьготПоИмущественнымНалогам.ПустаяСсылка)
	|			ТОГДА ВсеНастройкиПоКадастровымОбъектам.ОснованиеЛьготы
	|		КОГДА СтавкиНалогаНаИмущество.ОснованиеЛьготы.ВидЛьготы = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
	|				И НЕ ВсеНастройкиПоКадастровымОбъектам.ВидЛьготы = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
	|			ТОГДА СтавкиНалогаНаИмущество.ОснованиеЛьготы
	|		ИНАЧЕ ВсеНастройкиПоКадастровымОбъектам.ОснованиеЛьготы
	|	КОНЕЦ КАК ОснованиеЛьготы,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтавкиНалогаНаИмущество.ОснованиеЛьготы, ЗНАЧЕНИЕ(Справочник.ОснованияЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ОснованияЛьготПоИмущественнымНалогам.ПустаяСсылка)
	|			ТОГДА ВсеНастройкиПоКадастровымОбъектам.НачалоДействияЛьготы
	|		КОГДА СтавкиНалогаНаИмущество.ОснованиеЛьготы.ВидЛьготы = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
	|				И НЕ ВсеНастройкиПоКадастровымОбъектам.ВидЛьготы = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
	|			ТОГДА СтавкиНалогаНаИмущество.НачалоДействияЛьготы
	|		ИНАЧЕ ВсеНастройкиПоКадастровымОбъектам.НачалоДействияЛьготы
	|	КОНЕЦ КАК НачалоДействияЛьготы,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтавкиНалогаНаИмущество.ОснованиеЛьготы, ЗНАЧЕНИЕ(Справочник.ОснованияЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ОснованияЛьготПоИмущественнымНалогам.ПустаяСсылка)
	|			ТОГДА ВсеНастройкиПоКадастровымОбъектам.ОкончаниеДействияЛьготы
	|		КОГДА СтавкиНалогаНаИмущество.ОснованиеЛьготы.ВидЛьготы = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
	|				И НЕ ВсеНастройкиПоКадастровымОбъектам.ВидЛьготы = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
	|			ТОГДА СтавкиНалогаНаИмущество.ОкончаниеДействияЛьготы
	|		ИНАЧЕ ВсеНастройкиПоКадастровымОбъектам.ОкончаниеДействияЛьготы
	|	КОНЕЦ КАК ОкончаниеДействияЛьготы
	|ПОМЕСТИТЬ ДействиеЛьготПоПериодам
	|ИЗ
	|	ВсеНастройкиПоКадастровымОбъектамИПериодОбщихНастроек КАК ВсеНастройкиПоКадастровымОбъектам
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаИмущество КАК СтавкиНалогаНаИмущество
	|		ПО ВсеНастройкиПоКадастровымОбъектам.Организация = СтавкиНалогаНаИмущество.Организация
	|			И ВсеНастройкиПоКадастровымОбъектам.ПериодОбщейНастройки = СтавкиНалогаНаИмущество.Период
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ЕСТЬNULL(СтавкиНалогаНаИмущество.ОснованиеЛьготы, ЗНАЧЕНИЕ(Справочник.ОснованияЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ОснованияЛьготПоИмущественнымНалогам.ПустаяСсылка)
	|				ТОГДА ВсеНастройкиПоКадастровымОбъектам.ОснованиеЛьготы
	|			КОГДА СтавкиНалогаНаИмущество.ОснованиеЛьготы.ВидЛьготы = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
	|					И НЕ ВсеНастройкиПоКадастровымОбъектам.ВидЛьготы = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
	|				ТОГДА СтавкиНалогаНаИмущество.ОснованиеЛьготы
	|			ИНАЧЕ ВсеНастройкиПоКадастровымОбъектам.ОснованиеЛьготы
	|		КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.ОснованияЛьготПоИмущественнымНалогам.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВсеНастройкиПоКадастровымОбъектам.Период,
	|	ВсеНастройкиПоКадастровымОбъектам.Организация,
	|	ВсеНастройкиПоКадастровымОбъектам.ОсновноеСредство,
	|	ВсеНастройкиПоКадастровымОбъектам.КадастровыйНомер,
	|	СтавкиНалогаНаИмущество.ОснованиеЛьготы,
	|	СтавкиНалогаНаИмущество.НачалоДействияЛьготы,
	|	СтавкиНалогаНаИмущество.ОкончаниеДействияЛьготы
	|ИЗ
	|	ВсеНастройкиПоКадастровымОбъектамИПериодОбщихНастроек КАК ВсеНастройкиПоКадастровымОбъектам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаИмущество КАК СтавкиНалогаНаИмущество
	|		ПО ВсеНастройкиПоКадастровымОбъектам.Организация = СтавкиНалогаНаИмущество.Организация
	|			И ВсеНастройкиПоКадастровымОбъектам.ПериодОбщейНастройки = СтавкиНалогаНаИмущество.Период
	|ГДЕ
	|	НЕ ВсеНастройкиПоКадастровымОбъектам.ВидЛьготы В (ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение), ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаПроцент))
	|	И НЕ ВсеНастройкиПоКадастровымОбъектам.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
	|	И СтавкиНалогаНаИмущество.ОснованиеЛьготы.ВидЛьготы = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаПроцент)";

	Возврат ТекстЗапроса;

КонецФункции

Процедура ПроверитьОпциюУплачиваетсяНалогНаИмуществоПоКадастровойСтоимости(НаборЗаписей) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	УплачиваетсяНалогНаИмуществоПоКадастровойСтоимости =
		Константы.УплачиваетсяНалогНаИмуществоПоКадастровойСтоимости.Получить();
	ВНабореЕстьРегистрация = Ложь;
	
	// Если записывается первая регистрация "кадастрового" имущества (других нет), то включаем опцию
	Для Каждого Запись Из НаборЗаписей Цикл
		ЭтоЗаписьРегистрацииПоКадастровойСтоимости =
			(Запись.НалоговаяБаза = Перечисления.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость
			И Не Запись.НеПодлежитНалогообложению);
		ВНабореЕстьРегистрация = ВНабореЕстьРегистрация Или ЭтоЗаписьРегистрацииПоКадастровойСтоимости;
		Если ЭтоЗаписьРегистрацииПоКадастровойСтоимости
			 И Не УплачиваетсяНалогНаИмуществоПоКадастровойСтоимости Тогда
			Константы.УплачиваетсяНалогНаИмуществоПоКадастровойСтоимости.Установить(Истина);
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	// Если в наборе нет записей регистрации (т.е. либо только записи о прекращении учета, либо удаление регистрации),
	// то, возможно, опцию нужно отключить
	Если УплачиваетсяНалогНаИмуществоПоКадастровойСтоимости 
			И Не ВНабореЕстьРегистрация
			И Не УправлениеВнеоборотнымиАктивамиПовтИсп.ЕстьИмуществоПоКадастровойСтоимости() Тогда
		Константы.УплачиваетсяНалогНаИмуществоПоКадастровойСтоимости.Установить(Ложь);
	КонецЕсли;
	
КонецПроцедуры

#Область ОбработчикиОбновления

Процедура ЗаполнитьДанныеЛьгот(Параметры) Экспорт

	// Ранее ресурс ПорядокНалогообложения использовался для двух сценариев:
	// - указать, что применяется льгота, а также указать вид применяемой льготы
	// - указать, что объект не подлежит налогообложению.
	// В новой архитектуре для первого сценария есть ресурс ОснованиеЛьготы, а для второго - НеПодлежитНалогообложению.
	// Обработчик заполняет эти два новых ресурса на основании ПорядокНалогообложения. В процессе создаются элементы
	// справочника ОснованияЛьготПоИмущественнымНалогам
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1000
	|	ЗаписиКОбработке.Период КАК Период,
	|	ЗаписиКОбработке.Организация КАК Организация,
	|	ЗаписиКОбработке.ОсновноеСредство КАК ОсновноеСредство,
	|	ЗаписиКОбработке.КодПоОКТМО КАК КодПоОКТМО,
	|	ЗаписиКОбработке.КодПоОКАТО КАК КодПоОКАТО
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период КАК Период,
	|		СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация КАК Организация,
	|		СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство КАК ОсновноеСредство,
	|		СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.КодПоОКТМО КАК КодПоОКТМО,
	|		СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.КодПоОКАТО КАК КодПоОКАТО
	|	ИЗ
	|		РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|			ПО СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация = Организации.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОсновныеСредства
	|			ПО СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство = ОсновныеСредства.Ссылка
	|	ГДЕ
	|		СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.УдалитьПорядокНалогообложения В 
	|		(ЗНАЧЕНИЕ(Перечисление.УдалитьПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения),
	|		ЗНАЧЕНИЕ(Перечисление.УдалитьПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке),
	|		ЗНАЧЕНИЕ(Перечисление.УдалитьПорядокНалогообложенияИмущества.УменьшениеНалоговойБазы))
	|		И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОснованиеЛьготы = ЗНАЧЕНИЕ(Справочник.ОснованияЛьготПоИмущественнымНалогам.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период,
	|		СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация,
	|		СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство,
	|		СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.КодПоОКТМО,
	|		СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.КодПоОКАТО
	|	ИЗ
	|		РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|			ПО СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация = Организации.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОсновныеСредства
	|			ПО СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство = ОсновныеСредства.Ссылка
	|	ГДЕ
	|		СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.УдалитьПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.УдалитьПорядокНалогообложенияИмущества.НеПодлежитНалогообложению)
	|		И НЕ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.НеПодлежитНалогообложению) КАК ЗаписиКОбработке
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаписиКОбработке.Период УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
		
	Если РезультатЗапроса.Пустой() Тогда
		// Обработаны все записи
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;					
	КонецЕсли; 
	
	ВыборкаЗаписей = РезультатЗапроса.Выбрать();
	
	// Для региональных льгот указываем тип региона (по коду регистрации в налоговом органе)
	ОписаниеТипаКодРегиона = ОбщегоНазначения.ОписаниеТипаЧисло(2, 0, ДопустимыйЗнак.Неотрицательный);
	
	// Созданные элементы справочника льгот кэшируем в таблице
	Если Параметры.Свойство("Льготы") Тогда
		Льготы = Параметры.Льготы;
	Иначе
		
		Льготы = Новый ТаблицаЗначений;
		Льготы.Колонки.Добавить("ОснованиеЛьготы", Новый ОписаниеТипов("СправочникСсылка.ОснованияЛьготПоИмущественнымНалогам"));
		Льготы.Колонки.Добавить("КодЛьготы", ОбщегоНазначения.ОписаниеТипаСтрока(7));
		Льготы.Колонки.Добавить("ВидЛьготы", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыЛьготПоИмущественнымНалогам"));
		Льготы.Колонки.Добавить("ПроцентУменьшения", ОбщегоНазначения.ОписаниеТипаЧисло(5, 2, ДопустимыйЗнак.Неотрицательный));
		Льготы.Колонки.Добавить("КодРегиона", ОписаниеТипаКодРегиона);
		Льготы.Колонки.Добавить("УстановленаМестнымНормативнымАктом", Новый ОписаниеТипов("Булево"));
		
		Параметры.Вставить("Льготы", Льготы);
		
	КонецЕсли;	 
	
	// Для создания региональных льгот и для поиска уже созданных требуются данные классификатора
	ОписаниеЛьгот = ЛьготыПоИмущественнымНалогамПовтИсп.ДанныеОЛьготахПоИмущественнымНалогам(
		Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество,
		Ложь);
	
	КэшКодовРегионов = Новый Соответствие;
	КоличествоОшибок = 0;
	
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		МенеджерЗаписи = СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ВыборкаЗаписей);
		МенеджерЗаписи.Прочитать();
		
		Если Не МенеджерЗаписи.Выбран() Тогда
			Продолжить;
		КонецЕсли;
				
		ЕстьЛьгота = Ложь;
		ПоискЛьготы = Новый Структура;
		ОснованиеЛьготы = Неопределено;
		
		Если Не МенеджерЗаписи.НеПодлежитНалогообложению 
			 И МенеджерЗаписи.УдалитьПорядокНалогообложения = Перечисления.УдалитьПорядокНалогообложенияИмущества.НеПодлежитНалогообложению Тогда
			 
			МенеджерЗаписи.НеПодлежитНалогообложению = Истина;
						
		ИначеЕсли Не ЗначениеЗаполнено(МенеджерЗаписи.ОснованиеЛьготы) 
			 И МенеджерЗаписи.УдалитьПорядокНалогообложения = Перечисления.УдалитьПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения Тогда
			 			
			ЕстьЛьгота = Истина;
			
			ПоискЛьготы.Вставить("КодЛьготы", МенеджерЗаписи.УдалитьКодНалоговойЛьготыОсвобождениеОтНалогообложения);
			ПоискЛьготы.Вставить("ВидЛьготы", Перечисления.ВидыЛьготПоИмущественнымНалогам.Освобождение);
			
			Если Не ЗначениеЗаполнено(МенеджерЗаписи.УдалитьКодНалоговойЛьготыОсвобождениеОтНалогообложения) Тогда
				// Считаем, что это региональная льгота в виде освобождения. Код 2012000.
				ПоискЛьготы.Вставить("КодЛьготы", "2012000");
				ПоискЛьготы.Вставить("КодРегиона", КодРегионаПоМенеджеруЗаписи(МенеджерЗаписи, КэшКодовРегионов, ОписаниеТипаКодРегиона));
				ПоискЛьготы.Вставить("УстановленаМестнымНормативнымАктом", Истина); 
			ИначеЕсли Лев(МенеджерЗаписи.УдалитьКодНалоговойЛьготыОсвобождениеОтНалогообложения, 4) = "2012" Тогда
				// С 2012 начинаются коды региональных льгот (в ином случае будет найдена/создана федеральная льгота)
				ПоискЛьготы.Вставить("КодРегиона", КодРегионаПоМенеджеруЗаписи(МенеджерЗаписи, КэшКодовРегионов, ОписаниеТипаКодРегиона));
				ПоискЛьготы.Вставить("УстановленаМестнымНормативнымАктом", Истина); 
			КонецЕсли;	
			
		ИначеЕсли Не ЗначениеЗаполнено(МенеджерЗаписи.ОснованиеЛьготы) 
			 И МенеджерЗаписи.УдалитьПорядокНалогообложения = Перечисления.УдалитьПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке Тогда	 
			 
			ЕстьЛьгота = Истина;
			
			ПоискЛьготы.Вставить("ВидЛьготы", Перечисления.ВидыЛьготПоИмущественнымНалогам.СнижениеСтавкиДоУказанной);
			
			// Такая льгота всегда региональная, за исключением одного случая - см. ниже
			КодРегиона = КодРегионаПоМенеджеруЗаписи(МенеджерЗаписи, КэшКодовРегионов, ОписаниеТипаКодРегиона);
			
			// Льгота 2010402 является федеральной (указана в НК), но применяется только в Калининградской области.
			// Это льгота в виде снижения ставки налога на 50%.
			Если КодРегиона = 39 И МенеджерЗаписи.СниженнаяНалоговаяСтавка / МенеджерЗаписи.НалоговаяСтавка = 0.5 Тогда
				// Федеральная льгота
				ПоискЛьготы.Вставить("КодЛьготы", "2010402");
				ПоискЛьготы.Вставить("ВидЛьготы", Перечисления.ВидыЛьготПоИмущественнымНалогам.СнижениеСтавкиНаПроцент);
				ПоискЛьготы.Вставить("ПроцентУменьшения", 50); 
				
			Иначе					
				// Региональная льгота
				ПоискЛьготы.Вставить("КодРегиона", КодРегиона);
				ПоискЛьготы.Вставить("УстановленаМестнымНормативнымАктом", Истина); 
				
				ОписаниеЛьготы = ОписаниеЛьгот.МестныеЛьготы[ПоискЛьготы.ВидЛьготы];
				Если ОписаниеЛьготы = Неопределено Тогда
					// Считаем, что это региональная льгота с кодом 2012400.
					ПоискЛьготы.Вставить("КодЛьготы", "2012400");
				Иначе 
					ПоискЛьготы.Вставить("КодЛьготы", ОписаниеЛьготы.КодЛьготы);
				КонецЕсли;	
								
			КонецЕсли;	
			
		ИначеЕсли Не ЗначениеЗаполнено(МенеджерЗаписи.ОснованиеЛьготы) 
			 И МенеджерЗаписи.УдалитьПорядокНалогообложения = Перечисления.УдалитьПорядокНалогообложенияИмущества.УменьшениеНалоговойБазы Тогда	 
			// Региональная льгота
			ЕстьЛьгота = Истина;
			
			ПоискЛьготы.Вставить("ВидЛьготы", Перечисления.ВидыЛьготПоИмущественнымНалогам.СнижениеНалоговойБазыНаСумму);
			ПоискЛьготы.Вставить("КодРегиона", КодРегионаПоМенеджеруЗаписи(МенеджерЗаписи, КэшКодовРегионов, ОписаниеТипаКодРегиона));
			ПоискЛьготы.Вставить("УстановленаМестнымНормативнымАктом", Истина); 
			
			ОписаниеЛьготы = ОписаниеЛьгот.МестныеЛьготы[ПоискЛьготы.ВидЛьготы];
			Если ОписаниеЛьготы = Неопределено Тогда
				// Считаем, что это региональная льгота с кодом 2012000.
				ПоискЛьготы.Вставить("КодЛьготы", "2012000");
			Иначе 
				ПоискЛьготы.Вставить("КодЛьготы", ОписаниеЛьготы.КодЛьготы);
			КонецЕсли;	
						
		КонецЕсли;	 
		
		НачатьТранзакцию();
		
		Попытка
			
			Если ЕстьЛьгота Тогда
				
				СозданныеЛьготы = Льготы.НайтиСтроки(ПоискЛьготы);		
				Если СозданныеЛьготы.Количество() > 0 Тогда
					ОснованиеЛьготы = СозданныеЛьготы[0].ОснованиеЛьготы;
				ИначеЕсли ПоискЛьготы.Свойство("УстановленаМестнымНормативнымАктом") И ПоискЛьготы.УстановленаМестнымНормативнымАктом Тогда
					ОснованиеЛьготы = Справочники.ОснованияЛьготПоИмущественнымНалогам.МестнаяЛьготаПоПараметрам(
						Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество,
						ПоискЛьготы);
				Иначе
					ОснованиеЛьготы = Справочники.ОснованияЛьготПоИмущественнымНалогам.ФедеральнаяЛьготаПоКоду(
						Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество,
						ПоискЛьготы.КодЛьготы);
				КонецЕсли;	
				
				Если Не ЗначениеЗаполнено(ОснованиеЛьготы) Тогда
					ОснованиеЛьготыОбъект = Справочники.ОснованияЛьготПоИмущественнымНалогам.СоздатьЭлемент();
					ОснованиеЛьготыОбъект.Заполнить(ПоискЛьготы);
					ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ОснованиеЛьготыОбъект);
					ОснованиеЛьготы = ОснованиеЛьготыОбъект.Ссылка;
				КонецЕсли;
				
				МенеджерЗаписи.ОснованиеЛьготы = ОснованиеЛьготы;
				СтрокаКэша = Льготы.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаКэша, ПоискЛьготы);
				СтрокаКэша.ОснованиеЛьготы = ОснованиеЛьготы;
				
			КонецЕсли;	
			
			МенеджерЗаписи.Записать();
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			КоличествоОшибок = КоличествоОшибок + 1;
			
			ТекстСообщения = Новый Массив;
			Описание = НСтр("ru = 'Не удалось обработать запись регистра ""Налог на имущество:
				|объекты с особым порядком налогообложения""
				|(период: %1, организация: %2, основное средство: %3, код ОКТМО: %4) по причине:'");
			
			Описание = СтрЗаменить(Описание, Символы.ПС, " ");
			Описание = СтрШаблон(Описание, 
				Формат(ВыборкаЗаписей.Период, "ДЛФ=D"),
				ВыборкаЗаписей.Организация,
				ВыборкаЗаписей.ОсновноеСредство,
				ВыборкаЗаписей.КодПоОКТМО);
			
			ТекстСообщения.Добавить(Описание);
			ТекстСообщения.Добавить(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ТекстСообщения = СтрСоединить(ТекстСообщения, Символы.ПС);
						
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.РегистрыСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам,
				,
				ТекстСообщения);
						
		КонецПопытки;
		
	КонецЦикла;	
	
	Если КоличествоОшибок > 0 Тогда
				
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процедуре ""РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ЗаполнитьДанныеЛьгот""
			|не удалось обработать некоторые записи со льготами. Количество ошибок: %1'"), 
			КоличествоОшибок);
			
		ВызватьИсключение ТекстСообщения;
		
	КонецЕсли;
	
КонецПроцедуры	

// Функция проверяет, обработана ли запись (см. ЗаполнитьДанныеЛьгот()).
//  Определена в свойстве ПроцедураПроверки соответствующего обработчика обновления.
//
// Параметры:
//  Параметры - Структура - см. документацию к БСП
// 
// Возвращаемое значение:
//   - Булево - если Истина, то можно редактировать и записывать данные, Ложь - данные недоступны, пока не будут обработаны процедурой обновления
//
Функция ЗаписьОбработана(Параметры) Экспорт

	Данные = Неопределено;
	
  	Если ТипЗнч(Параметры.Данные) = Тип("РегистрСведенийМенеджерЗаписи.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам") 
  		 Или ТипЗнч(Параметры.Данные) = Тип("ДанныеФормыСтруктура") Тогда
    	Данные = Параметры.Данные;
  	ИначеЕсли ТипЗнч(Параметры.Данные) = Тип("РегистрСведенийНаборЗаписей.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам")
  		 И Параметры.Данные.Количество() > 0 Тогда
    	Данные = Параметры.Данные[0];
    КонецЕсли;
	
	Если Данные = Неопределено Тогда
		Возврат Истина;
	КонецЕсли;

	Если Данные.УдалитьПорядокНалогообложения = Перечисления.УдалитьПорядокНалогообложенияИмущества.НеПодлежитНалогообложению 
		 И Не Данные.НеПодлежитНалогообложению Тогда
		Возврат Ложь;
	КонецЕсли;	

	Возврат ЗначениеЗаполнено(Данные.ОснованиеЛьготы) 
		 Или Не(Данные.УдалитьПорядокНалогообложения = Перечисления.УдалитьПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения
		 Или Данные.УдалитьПорядокНалогообложения = Перечисления.УдалитьПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке
		 Или Данные.УдалитьПорядокНалогообложения = Перечисления.УдалитьПорядокНалогообложенияИмущества.УменьшениеНалоговойБазы);

КонецФункции	

Процедура УстановитьОпциюУплачиваетсяНалогНаИмуществоПоКадастровойСтоимости() Экспорт
	
	Если УправлениеВнеоборотнымиАктивамиПовтИсп.ЕстьИмуществоПоКадастровойСтоимости() Тогда
		Константы.УплачиваетсяНалогНаИмуществоПоКадастровойСтоимости.Установить(Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция КодРегионаПоМенеджеруЗаписи(МенеджерЗаписи, КэшКодовРегионов, ОписаниеТипаКодРегиона)
	
	Если МенеджерЗаписи.ПостановкаНаУчетВНалоговомОргане = Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане Тогда
		КодРегиона = КэшКодовРегионов[МенеджерЗаписи.НалоговыйОрган];
		Если КодРегиона = Неопределено Тогда
			КодРегиона = ОписаниеТипаКодРегиона.ПривестиЗначение(
				Лев(Строка(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(МенеджерЗаписи.НалоговыйОрган, "Код")), 2));
			КэшКодовРегионов.Вставить(МенеджерЗаписи.НалоговыйОрган, КодРегиона);
		КонецЕсли;		
	Иначе
		КодРегиона = КэшКодовРегионов[МенеджерЗаписи.Организация];
		Если КодРегиона = Неопределено Тогда
			КодРегиона = ОписаниеТипаКодРегиона.ПривестиЗначение(
				Лев(Строка(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(МенеджерЗаписи.Организация, "РегистрацияВНалоговомОргане.Код")), 2));
			КэшКодовРегионов.Вставить(МенеджерЗаписи.Организация, КодРегиона);
		КонецЕсли;				
	КонецЕсли;	

	Возврат КодРегиона;
	
КонецФункции

#КонецОбласти

#КонецЕсли