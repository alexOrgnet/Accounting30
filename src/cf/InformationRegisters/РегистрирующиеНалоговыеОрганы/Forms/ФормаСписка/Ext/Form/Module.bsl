
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// В режиме сервиса или АРМ коды регистрирующих органов обновляются менеджером сервиса, т.к. это общие данные
	Если ОбщегоНазначения.РазделениеВключено() Или ПолучитьФункциональнуюОпцию("РаботаВАвтономномРежиме") Тогда
		Элементы.СписокЗагрузитьДанные.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьДанные(Команда)
	
	НачатьОбновлениеДанныхСписка();
	ОжидатьЗавершениеОбновленияДанныхСписка();
	
	// Если Интернет-поддержка не подключена, то загрузка не начнется, и будет взведен флаг ТребуетсяПодключениеИнтернетПоддержки.
	// В этом случае позже повторно запустим загрузку, если пользователь введет данные авторизации.
	Если ТребуетсяПодключениеИнтернетПоддержки Тогда
		
		ТекстСообщения = НСтр("ru = 'Для автоматического обновления кодов регистрирующих органов необходимо подключить Интернет-поддержку пользователей.'");
		
		Если ИнтернетПоддержкаПользователейКлиент.ДоступноПодключениеИнтернетПоддержки() Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = '%1
				|Подключить Интернет-поддержку?'"), ТекстСообщения);
			ОбработчикЗавершения = Новый ОписаниеОповещения("ПриОтветеНаВопросПодключитьИнтернетПоддержку", ЭтотОбъект);
			ПоказатьВопрос(ОбработчикЗавершения, ТекстСообщения, РежимДиалогаВопрос.ДаНет);
		Иначе
			ТекстСообщения = СтрШаблон(НСтр("ru = '%1
				|Обратитесь к администратору.'"), ТекстСообщения);
			ПоказатьПредупреждение(ОбработчикЗавершения, ТекстСообщения);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновленииеИзСервисаКлассификаторов

&НаСервере
Процедура НачатьОбновлениеДанныхСписка()
	
	ТребуетсяПодключениеИнтернетПоддержки = Ложь;
	
	// В режиме сервиса или АРМ данные обновляются менеджером сервиса, т.к. это общие данные
	Если ОбщегоНазначения.РазделениеВключено() Или ПолучитьФункциональнуюОпцию("РаботаВАвтономномРежиме") Тогда
		Возврат;
	КонецЕсли;
	
	Классификаторы = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(
		РегистрыСведений.РегистрирующиеНалоговыеОрганы.ИдентификаторВСервисеКлассификаторов());
	
	ПроверкаАктуальностиДанныхСписка = РаботаСКлассификаторами.ДоступныеОбновленияКлассификаторов(Классификаторы);
	
	Если ЗначениеЗаполнено(ПроверкаАктуальностиДанныхСписка.КодОшибки) Тогда
		
		Если ПроверкаАктуальностиДанныхСписка.КодОшибки = "НеверныйЛогинИлиПароль" Тогда
			// Перед следующей попыткой загрузки запросим данные подключения к ИПП 
			ТребуетсяПодключениеИнтернетПоддержки = Истина;
		Иначе	
			ШаблонСообщения = НСтр("ru = 'При загрузке кодов регистрирующих органов с сервиса классификаторов возникла ошибка:
				|%1'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ПроверкаАктуальностиДанныхСписка.ИнформацияОбОшибке);
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Обновление кодов регистрирующих органов'", ОбщегоНазначения.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.РегистрыСведений.РегистрирующиеНалоговыеОрганы, ,
				ТекстСообщения);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
	Если ПроверкаАктуальностиДанныхСписка.ДоступныеВерсии.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Загружены актуальные данные о регистрирующих органах'"));
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация <> Неопределено Тогда
		// Не завершено предыдущее фоновое задание, новое не запускаем.
		Возврат;
	КонецЕсли;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение           = 0; // Не ждем завершения.
	ПараметрыВыполнения.ЗапуститьВФоне              = Истина;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Обновление кодов регистрирующих органов'");
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
		"РегистрыСведений.РегистрирующиеНалоговыеОрганы.ЗагрузитьДанныеИзСервисаКлассификаторов",
		Новый Структура(),
		ПараметрыВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОжидатьЗавершениеОбновленияДанныхСписка()

	Если ДлительнаяОперация = Неопределено Тогда
		// Фоновое задание не запущено или обновление не требуется.
		Возврат;
	КонецЕсли;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.ТекстСообщения = НСтр("ru='Идет загрузка данных о регистрирующих органах.'");
	
	ОповещенияОЗавершении = Новый ОписаниеОповещения("ОбновлениеДанныхСпискаЗавершение", ЭтотОбъект);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещенияОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеДанныхСпискаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Успешно = Истина;
	Если ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Результат, "Статус", "") = "Ошибка" Тогда
		Успешно = Ложь;
		ШаблонСообщения = НСтр("ru = 'При загрузке кодов регистрирующих органов с сервиса классификаторов возникла ошибка:
			|%1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, Результат.КраткоеПредставлениеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
	ДлительнаяОперация = Неопределено; // Сбросим признак выполнения.
	
	Если Успешно Тогда
		ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.РегистрирующиеНалоговыеОрганы"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОтветеНаВопросПодключитьИнтернетПоддержку(КодВозврата, ДополнительныеПараметры) Экспорт
	
	Если КодВозврата = КодВозвратаДиалога.Да Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПодключенияИнтернетПоддержки", ЭтотОбъект);	
		ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(ОписаниеОповещения, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодключенияИнтернетПоддержки(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		// Получаем коды регистрирующих органов и обновляем данные на форме.
		НачатьОбновлениеДанныхСписка();
		ОжидатьЗавершениеОбновленияДанныхСписка();
		
		ТребуетсяПодключениеИнтернетПоддержки = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
