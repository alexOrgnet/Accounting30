#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает признак участия контрагента в системе маркировки по определенной группе товаров
// по данным пользователя и ИСМП
//
// Параметры:
//  <Контрагент>  - <СправочникСсылка.Контрагенты> - проверяемый контрагент
//  <ВидыМаркируемойПродукции>  - <Массив> - список проверяемых видов продукции
//
// Возвращаемое значение:
//   <Булево, Неопределено>   - ИСТИНА - контрагент является участником
//            ЛОЖЬ - не является участником
//            НЕОПРЕДЕЛЕНО - не удалось определить статус участника
//
Функция УчастникСистемыМаркировки(Контрагент, ВидыМаркируемойПродукции) Экспорт
	Запрос = Новый Запрос;
	
	Если ВидыМаркируемойПродукции.Количество() = 0 
		ИЛИ НЕ ЗначениеЗаполнено(Контрагент) Тогда
		
		Возврат Неопределено;
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("Контрагент",    Контрагент);
	Запрос.УстановитьПараметр("ВидыПродукции", ВидыМаркируемойПродукции);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СправочникКонтрагенты.ИНН КАК ИНН,
	|	ВидыПродукцииИС.Ссылка КАК ВидМаркируемойПродукции,
	|	ЕСТЬNULL(СтатусыКонтрагентовИСМП.СтатусУчастника, 0) КАК СтатусУчастника
	|ИЗ
	|	Перечисление.ВидыПродукцииИС КАК ВидыПродукцииИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыКонтрагентовИСМП КАК СтатусыКонтрагентовИСМП
	|		ПО ВидыПродукцииИС.Ссылка = СтатусыКонтрагентовИСМП.ВидПродукции
	|			И (СтатусыКонтрагентовИСМП.Контрагент = &Контрагент)
	|		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК СправочникКонтрагенты
	|		ПО (СправочникКонтрагенты.Ссылка = &Контрагент)
	|ГДЕ
	|	ВидыПродукцииИС.Ссылка В(&ВидыПродукции)";
	
	ТаблицаСтатусов = Запрос.Выполнить().Выгрузить();
	
	ПерезаписатьСтатусы = ЛОЖЬ;
	
	ИтоговыйСтатусУчастника = 2;
	Для каждого СтрокаСтатуса Из ТаблицаСтатусов Цикл
		Если СтрокаСтатуса.СтатусУчастника = 0 Тогда
			ПерезаписатьСтатусы = ИСТИНА;
			
			ИтоговыйСтатусУчастника = 0;
			Прервать;
		КонецЕсли;
		
		ИтоговыйСтатусУчастника = Мин(ИтоговыйСтатусУчастника, СтрокаСтатуса.СтатусУчастника);
	КонецЦикла;
	
	Если ПерезаписатьСтатусы Тогда
		НаборЗаписей = РегистрыСведений.СтатусыКонтрагентовИСМП.СоздатьНаборЗаписей();
		
		НаборЗаписей.Отбор.Контрагент.Установить(Контрагент);
		
		НаборЗаписей.Прочитать();
		
		ТаблицаРегистраСтатусов = НаборЗаписей.Выгрузить();
		
		Для каждого СтрокаСтатуса Из ТаблицаСтатусов Цикл
			Отбор = Новый Структура("ВидПродукции", СтрокаСтатуса.ВидМаркируемойПродукции);
			
			ЗаписиРегистра = ТаблицаРегистраСтатусов.НайтиСтроки(Отбор);
			Если ЗаписиРегистра.Количество() > 0 Тогда
				ЗаписьРегистра = ЗаписиРегистра[0];
			Иначе
				ЗаписьРегистра = ТаблицаРегистраСтатусов.Добавить();
			КонецЕсли; 
			
			ЗаписьРегистра.Контрагент      = Контрагент;
			ЗаписьРегистра.ВидПродукции    = СтрокаСтатуса.ВидМаркируемойПродукции;
			ЗаписьРегистра.СтатусУчастника = СтрокаСтатуса.СтатусУчастника;
		КонецЦикла;
		
		НаборЗаписей.Загрузить(ТаблицаРегистраСтатусов);
		
		УстановитьПривилегированныйРежим(Истина);
		НаборЗаписей.Записать();
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Если ИтоговыйСтатусУчастника = 0 Тогда
		Возврат Неопределено;
	Иначе
		Возврат ИтоговыйСтатусУчастника = 1;
	КонецЕсли; 
КонецФункции

#КонецОбласти

#КонецЕсли
 