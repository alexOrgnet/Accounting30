
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбновлениеИнформационнойБазы

// Записывает значение константы при обновлении ИБ, а также записывать "шаблоны" для проверки
// в регистры "СведенияОРНПТИзФНС" и "СтатусыПроверокРНПТДокументов".
//
// Параметры:
//  Параметры - Структура - см. документацию к БСП
//
Процедура ВключитьПроверкуРНПТ(Параметры) Экспорт
	
	Если НЕ Константы.ИспользоватьПроверкуРНПТ.Получить() 
		И ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров") Тогда
		МенеджерКонстанты = СоздатьМенеджерЗначения();
		МенеджерКонстанты.Значение = Истина;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(МенеджерКонстанты);
	КонецЕсли;
	
	Если Константы.ИспользоватьПроверкуРНПТ.Получить()
		И ИнтернетПоддержкаПользователей.ЗаполненыДанныеАутентификацииПользователяИнтернетПоддержки() Тогда
		ЗаписатьШаблоныПроверкиРНПТ(Параметры);
	Иначе
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьШаблоныПроверкиРНПТ(Параметры)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоступлениеТоваровУслугСведенияПрослеживаемости.Ссылка КАК Ссылка,
	|	ПоступлениеТоваровУслугСведенияПрослеживаемости.РНПТ КАК РНПТ
	|ПОМЕСТИТЬ ДокументыСРНПТ
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.СведенияПрослеживаемости КАК ПоступлениеТоваровУслугСведенияПрослеживаемости
	|ГДЕ
	|	ПоступлениеТоваровУслугСведенияПрослеживаемости.Ссылка.Дата >= &НачалоПериода
	|	И НЕ ПоступлениеТоваровУслугСведенияПрослеживаемости.Ссылка.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеализацияТоваровУслугСведенияПрослеживаемости.Ссылка,
	|	РеализацияТоваровУслугСведенияПрослеживаемости.РНПТ
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.СведенияПрослеживаемости КАК РеализацияТоваровУслугСведенияПрослеживаемости
	|ГДЕ
	|	РеализацияТоваровУслугСведенияПрослеживаемости.Ссылка.Дата >= &НачалоПериода
	|	И НЕ РеализацияТоваровУслугСведенияПрослеживаемости.Ссылка.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 500
	|	ДокументыСРНПТ.Ссылка КАК Ссылка
	|ИЗ
	|	ДокументыСРНПТ КАК ДокументыСРНПТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыПроверокРНПТДокументов КАК СтатусыПроверокРНПТДокументов
	|		ПО ДокументыСРНПТ.Ссылка = СтатусыПроверокРНПТДокументов.Документ
	|ГДЕ
	|	СтатусыПроверокРНПТДокументов.Документ ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 500
	|	ДокументыСРНПТ.РНПТ КАК РНПТ,
	|	ДокументыСРНПТ.РНПТ.Код КАК РНПТКод
	|ИЗ
	|	ДокументыСРНПТ КАК ДокументыСРНПТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОРНПТИзФНС КАК СведенияОРНПТИзФНС
	|		ПО ДокументыСРНПТ.РНПТ = СведенияОРНПТИзФНС.РНПТ
	|ГДЕ
	|	СведенияОРНПТИзФНС.РНПТ ЕСТЬ NULL
	|	И ДокументыСРНПТ.РНПТ <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)";
	
	// Обрабатываем документы и связанные с ними РНПТ с начала квартала.
	Запрос.УстановитьПараметр("НачалоПериода", НачалоКвартала(ОбщегоНазначения.ТекущаяДатаПользователя()));
	
	Результат = Запрос.ВыполнитьПакет();
	ЕстьДокументыКОбработке = НЕ Результат[1].Пустой();
	ЕстьРНПТКОбработке      = НЕ Результат[2].Пустой();
	
	Если НЕ ЕстьДокументыКОбработке И НЕ ЕстьРНПТКОбработке Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	Иначе
		Параметры.ОбработкаЗавершена = Ложь;
	КонецЕсли;
	
	ПроблемныхДокументов = 0;
	ДокументовОбработано = 0;
	Если ЕстьДокументыКОбработке Тогда
		ТаблицаДокументов = Результат[1].Выгрузить();
		Для Каждого Документ Из ТаблицаДокументов Цикл
			Попытка
				РегистрыСведений.СтатусыПроверокРНПТДокументов.УстановитьСтатусПроверкиРНПТ(Документ.Ссылка);
				ДокументовОбработано = ДокументовОбработано + 1;
			Исключение
				ПроблемныхДокументов = ПроблемныхДокументов + 1;
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Не удалось обработать документ: %1 по причине:
					|%2'"),
				Документ.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ЗаписьЖурналаРегистрации(
					ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
					УровеньЖурналаРегистрации.Предупреждение,,
					Документ.Ссылка, ТекстСообщения);
			КонецПопытки;
		КонецЦикла;
	КонецЕсли;
	
	ПроблемныхРНПТ = 0;
	РНПТОбработано = 0;
	Если ЕстьРНПТКОбработке Тогда
		ТаблицаРНПТ = Результат[2].Выгрузить();
		Для Каждого СтрокаСРНПТ Из ТаблицаРНПТ Цикл
			Попытка
				СведенияОРНПТ = ПроверкаРНПТ.НовыйСведенияОРНПТ();
				СведенияОРНПТ.КодРНПТ = СтрокаСРНПТ.РНПТКод;
				ПроверкаРНПТ.ЗаписатьСведенияОРНПТИзФНС(СтрокаСРНПТ.РНПТ, СведенияОРНПТ, Ложь);
				РНПТОбработано = РНПТОбработано + 1;
			Исключение
				ПроблемныхРНПТ = ПроблемныхРНПТ + 1;
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Не удалось обработать РНПТ: %1 по причине:
					|%2'"),
					СтрокаСРНПТ.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ЗаписьЖурналаРегистрации(
					ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
					УровеньЖурналаРегистрации.Предупреждение,, 
					СтрокаСРНПТ.Ссылка, ТекстСообщения);
			КонецПопытки;
		КонецЦикла;
	КонецЕсли;
	
	Если ДокументовОбработано = 0 И РНПТОбработано = 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процедуре ВключитьПроверкуРНПТ
				|не удалось обработать некоторые объекты (пропущены): %1'"),
				ПроблемныхДокументов + ПроблемныхРНПТ);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
			УровеньЖурналаРегистрации.Информация,,,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Процедура ВключитьПроверкуРНПТ
					|обработала очередную порцию объектов: %1'"), ДокументовОбработано + РНПТОбработано));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли