#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОтправлятьУведомленияПоЭлектроннойПочте = СписокЗадачУведомленияПоЭлектроннойПочте.ОтправлятьУведомления();
	Получатель = СписокЗадачУведомленияПоЭлектроннойПочте.Получатель();
	ПолучательТекст = Получатель;
	
	ТолькоПросмотр = Не Пользователи.ЭтоПолноправныйПользователь();
	
	ПроверитьТекстПолучателя(ЭтотОбъект);
	
	ПрочитатьАдресСистемнойУчетнойЗаписи();
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_УчетнаяЗаписьЭлектроннойПочты" Тогда
		ПрочитатьАдресСистемнойУчетнойЗаписи();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтправлятьУведомленияПоЭлектроннойПочтеПриИзменении(Элемент)
	
	Если ОтправлятьУведомленияПоЭлектроннойПочте Тогда
		
		// В облаке по умолчанию подставляется адрес текущего пользователя
		Если ПустаяСтрока(ПолучательТекст) Тогда
			ПолучательТекст = АдресЭлектроннойПочтыПользователяАбонента();
			ЗаписатьПолучателя(ПолучательТекст);
			Получатель = ПолучательТекст;
		КонецЕсли;
		
		// Если в базе одна организация, подставляеется ее адрес электронной почты
		Если ПустаяСтрока(ПолучательТекст) Тогда
			ПолучательТекст = АдресЭлектроннойПочтыОрганизации();
			ЗаписатьПолучателя(ПолучательТекст);
			Получатель = ПолучательТекст;
		КонецЕсли;
		
	КонецЕсли;
	
	ПроверитьТекстПолучателя(ЭтотОбъект);
	
	ЗаписатьОтправлятьУведомленияПоЭлектроннойПочте(ОтправлятьУведомленияПоЭлектроннойПочте);
	
	ЗапланироватьОбновлениеЗадачБухгалтераНаСервере(ОтправлятьУведомленияПоЭлектроннойПочте);
	
	УправлениеФормой(ЭтотОбъект);
	
	ОповеститьОбИзмененииНастроек();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	ПолучательТекст = Текст;
	ОтключитьОбработчикОжидания("Подключаемый_ПолучательИзменениеТекстаРедактирования");
	ПодключитьОбработчикОжидания("Подключаемый_ПолучательИзменениеТекстаРедактирования", 1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура УчетнаяЗаписьЭлектроннойПочтыГиперссылкаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не УчетнаяЗаписьНастроена() Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеНастройкиУчетнойЗаписиЭлектроннойПочты", ЭтотОбъект);
		РаботаСПочтовымиСообщениямиКлиент.ПроверитьНаличиеУчетнойЗаписиДляОтправкиПочты(ОписаниеОповещения);
	Иначе
		ОткрытьФорму("Справочник.УчетныеЗаписиЭлектроннойПочты.ФормаОбъекта",
			Новый Структура("Ключ", СистемнаяУчетнаяЗапись()));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ОтправлятьУведомленияПоЭлектроннойПочте.Доступность = Не Форма.ТолькоПросмотр;
	Элементы.Получатель.Доступность = Не Форма.ТолькоПросмотр И Форма.ОтправлятьУведомленияПоЭлектроннойПочте;
	Элементы.УчетнаяЗаписьЭлектроннойПочтыГиперссылка.Доступность = Не Форма.ТолькоПросмотр И Форма.ОтправлятьУведомленияПоЭлектроннойПочте;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция АдресЭлектроннойПочтыПользователяАбонента()
	
	Если Не ОбщегоНазначения.РазделениеВключено() Тогда
		Возврат "";
	КонецЕсли;
	
	СвойстваПользователя = ПрограммныйИнтерфейсСервиса.СвойстваПользователяАбонента(
		ПользователиИнформационнойБазы.ТекущийПользователь().Имя);
	
	Если ТипЗнч(СвойстваПользователя) = Тип("Структура") Тогда
		Возврат СвойстваПользователя.Почта;
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

&НаСервереБезКонтекста
Функция АдресЭлектроннойПочтыОрганизации()
	
	Если Справочники.Организации.КоличествоОрганизаций() <> 1 Тогда
		Возврат "";
	КонецЕсли;
	
	СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Справочники.Организации.ОрганизацияПоУмолчанию());
	
	Возврат СведенияОбОрганизации.Email;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаписатьОтправлятьУведомленияПоЭлектроннойПочте(Знач ОтправлятьУведомленияПоЭлектроннойПочте)
	
	СписокЗадачУведомленияПоЭлектроннойПочте.УстановитьОтправлятьУведомления(ОтправлятьУведомленияПоЭлектроннойПочте);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьПолучателя(Знач Получатель)
	
	СписокЗадачУведомленияПоЭлектроннойПочте.УстановитьПолучателя(Получатель);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПолучательИзменениеТекстаРедактирования() Экспорт
	
	ПроверитьТекстПолучателя(ЭтотОбъект);
	
	ЗаписатьПолучателя(ПолучательТекст);
	
	ОповеститьОбИзмененииНастроек();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПроверитьТекстПолучателя(Форма)
	
	Элементы = Форма.Элементы;
	
	Если Не Форма.ОтправлятьУведомленияПоЭлектроннойПочте Тогда
		Элементы.ПолучательРасширеннаяПодсказка.Заголовок = Неопределено;
		Возврат;
	КонецЕсли;
	
	Текст = Форма.ПолучательТекст;
	
	Если ПустаяСтрока(Текст) Тогда
		Элементы.ПолучательРасширеннаяПодсказка.Заголовок = Новый ФорматированнаяСтрока(
			НСтр("ru = 'Укажите хотя бы один адрес'"),, ЦветОшибки());
	Иначе
		Элементы.ПолучательРасширеннаяПодсказка.Заголовок = Неопределено;
		Адреса = ОбщегоНазначенияКлиентСервер.АдресаЭлектроннойПочтыИзСтроки(Текст);
		Для каждого Адрес Из Адреса Цикл
			Если Не ПустаяСтрока(Адрес.ОписаниеОшибки) Тогда
				Элементы.ПолучательРасширеннаяПодсказка.Заголовок = Новый ФорматированнаяСтрока(
					СокрЛП(Адрес.ОписаниеОшибки),, ЦветОшибки());
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьАдресСистемнойУчетнойЗаписи()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не УчетнаяЗаписьНастроена() Тогда
		УчетнаяЗаписьЭлектроннойПочтыГиперссылка = НСтр("ru = 'Настроить системную учетную запись электронной почты'");
		Элементы.УчетнаяЗаписьЭлектроннойПочтыГиперссылка.ЦветТекста = ЦветаСтиля.ЦветШрифтаОшибки;
	Иначе
		АдресСистемнойУчетнойЗаписи = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СистемнаяУчетнаяЗапись(), "АдресЭлектроннойПочты");
		УчетнаяЗаписьЭлектроннойПочтыГиперссылка = СтрШаблон(НСтр("ru = '%1 (системная учетная запись электронной почты)'"),
			АдресСистемнойУчетнойЗаписи);
		Элементы.УчетнаяЗаписьЭлектроннойПочтыГиперссылка.ЦветТекста = Новый Цвет();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеНастройкиУчетнойЗаписиЭлектроннойПочты(УчетнаяЗаписьНастроена, Контекст) Экспорт
	
	ПрочитатьАдресСистемнойУчетнойЗаписи();
	
	ОповеститьОбИзмененииНастроек();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция УчетнаяЗаписьНастроена()
	
	УстановитьПривилегированныйРежим(Истина);
	
	СистемнаяУчетнаяЗапись = РаботаСПочтовымиСообщениями.СистемнаяУчетнаяЗапись();
	УчетнаяЗаписьНастроена = РаботаСПочтовымиСообщениями.УчетнаяЗаписьНастроена(СистемнаяУчетнаяЗапись, Истина, Ложь);
	
	Возврат УчетнаяЗаписьНастроена;
	
КонецФункции 

&НаСервереБезКонтекста
Функция СистемнаяУчетнаяЗапись()
	
	Возврат РаботаСПочтовымиСообщениями.СистемнаяУчетнаяЗапись();
	
КонецФункции

&НаСервереБезКонтекста
Функция ЦветОшибки()
	
	Возврат ЦветаСтиля.ЦветШрифтаОшибки;
	
КонецФункции

&НаКлиенте
Процедура ОповеститьОбИзмененииНастроек()
	
	Оповестить("СписокЗадачНастройкаУведомленийПоЭлектроннойПочтеИзменение");
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗапланироватьОбновлениеЗадачБухгалтераНаСервере(Знач ОтправлятьУведомленияПоЭлектроннойПочте)
	
	Если Не ОтправлятьУведомленияПоЭлектроннойПочте Тогда
		Возврат;
	КонецЕсли;
	
	КалендарьБухгалтера.ЗапланироватьОбновлениеЗадачБухгалтера();
	
КонецПроцедуры

#КонецОбласти
