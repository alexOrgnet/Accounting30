#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьРазделы();
	ЗагрузитьКлассификатор();
	
	Если ЗначениеЗаполнено(Параметры.ТекущийКод) Тогда
		Отбор = Новый Структура("Код", Параметры.ТекущийКод);
		РезультатыПоиска = ЭлементыКатегорий.НайтиСтроки(Отбор);
		Если РезультатыПоиска.Количество() > 0 Тогда
			НайденныйЭлемент = РезультатыПоиска[0];
			Элементы.ЭлементыКатегорий.ТекущаяСтрока = НайденныйЭлемент.ПолучитьИдентификатор();
			Отбор = Новый Структура("Наименование", НайденныйЭлемент.Категория);
			РезультатыПоиска = Разделы.НайтиСтроки(Отбор);
			Если РезультатыПоиска.Количество() > 0 Тогда
				Элементы.Разделы.ТекущаяСтрока = РезультатыПоиска[0].ПолучитьИдентификатор();
			КонецЕсли;
		Иначе
			РезультатыПоиска = Классификатор.НайтиСтроки(Отбор);
			Если РезультатыПоиска.Количество() > 0 Тогда
				Элементы.Классификатор.ТекущаяСтрока = РезультатыПоиска[0].ПолучитьИдентификатор();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	МножественныйВыбор = Параметры.МножественныйВыбор;
	РежимВыделенияТаблиц = ?(МножественныйВыбор, РежимВыделенияТаблицы.Множественный, РежимВыделенияТаблицы.Одиночный);
	Элементы.Классификатор.РежимВыделения     = РежимВыделенияТаблиц;
	Элементы.ЭлементыКатегорий.РежимВыделения = РежимВыделенияТаблиц;
	
	ПроверятьОбновления = Не ОбщегоНазначения.РазделениеВключено()
		И Не ПолучитьФункциональнуюОпцию("РаботаВАвтономномРежиме")
		И ИнтернетПоддержкаПользователей.ЗаполненыДанныеАутентификацииПользователяИнтернетПоддержки()
		И РаботаСКлассификаторами.ИнтерактивнаяЗагрузкаКлассификаторовДоступна();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ПроверятьОбновления Тогда
		ПодключитьОбработчикОжидания("ПроверитьОбновленияКлассификатора", 1, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	
	ОтобразитьНайденные();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыРазделы

&НаКлиенте
Процедура РазделыПриАктивизацииСтроки(Элемент)
	
	РазделыТекущиеДанные = Разделы.НайтиПоИдентификатору(Элементы.Разделы.ТекущаяСтрока);
	
	Если РазделыТекущиеДанные.ЭтоКлассификатор Тогда
		ТекущаяСтраница = Элементы.СтраницаКлассификатор;
		ОтобразитьНайденные();
	Иначе
		ТекущаяСтраница = Элементы.СтраницаЭлементыКатегорий;
		Элементы.ЭлементыКатегорий.ОтборСтрок = Новый ФиксированнаяСтруктура("Категория", РазделыТекущиеДанные.Наименование);
		СтрокаПоиска = "";
	КонецЕсли;
	
	Если Элементы.СтраницыРазделы.ТекущаяСтраница <> ТекущаяСтраница Тогда
		Элементы.СтраницыРазделы.ТекущаяСтраница = ТекущаяСтраница;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыКлассификатор

&НаКлиенте
Процедура КлассификаторВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ЗавершитьВыбор();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыКатегорииЭлементы

&НаКлиенте
Процедура ЭлементыКатегорийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ЗавершитьВыбор();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьВидДеятельности(Команда)
	
	ЗавершитьВыбор();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеКлассификатора(Команда)
	
	НачатьОбновлениеДанныхСписка();
	ОжидатьЗавершениеОбновленияДанныхСписка();
	
	// Если Интернет-поддержка не подключена, то загрузка не начнется, и будет взведен флаг ТребуетсяПодключениеИнтернетПоддержки.
	// В этом случае позже повторно запустим загрузку, если пользователь введет данные авторизации.
	Если ТребуетсяПодключениеИнтернетПоддержки Тогда
		
		ТекстСообщения = НСтр("ru = 'Для автоматического обновления классификатора ОКВЭД2 необходимо подключить Интернет-поддержку пользователей.'");
		
		Если ИнтернетПоддержкаПользователейКлиент.ДоступноПодключениеИнтернетПоддержки() Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = '%1
				|Подключить Интернет-поддержку?'"), ТекстСообщения);
			ОбработчикЗавершения = Новый ОписаниеОповещения("ПриОтветеНаВопросПодключитьИнтернетПоддержку", ЭтотОбъект);
			ПоказатьВопрос(ОбработчикЗавершения, ТекстСообщения, РежимДиалогаВопрос.ДаНет);
		Иначе
			ТекстСообщения = СтрШаблон(НСтр("ru = '%1
				|Обратитесь к администратору.'"), ТекстСообщения);
			ПоказатьПредупреждение(ОбработчикЗавершения, ТекстСообщения);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузитьКлассификатор()
	
	КлассификаторОКВЭД2 = РегистрыСведений.КлассификаторОКВЭД2.ТаблицаКлассификатора(Истина);
	АдресХранилищаКлассификатораПоиска = ПоместитьВоВременноеХранилище(КлассификаторОКВЭД2, Новый УникальныйИдентификатор);
	
	Классификатор.Загрузить(КлассификаторОКВЭД2);
	
	КлассификаторЗагруженПоОтбору = "";
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРазделы()
	
	Раздел = Разделы.Добавить();
	
	Раздел.ЭтоКлассификатор = Истина;
	Раздел.Наименование = НСтр("ru = 'Все виды деятельности'");
	Раздел.Иконка       = БиблиотекаКартинок.ВыборОКВЭДВсе;
	
	ЗаполнитьПопулярныеКодыВЭД();
	
	Разделы.Сортировать("Порядок");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПопулярныеКодыВЭД()
	
	МакетыСКатегориями = Новый Массив;
	МакетыСКатегориями.Добавить(ПолучитьОбщийМакет("КатегорииОКВЭД_ИП"));
	МакетыСКатегориями.Добавить(ПолучитьОбщийМакет("КатегорииОКВЭД_ООО"));
	
	Для Каждого Макет Из МакетыСКатегориями Цикл
		
		Для Каждого ОбластьКатегория Из Макет.Области Цикл
			
			Верх = ОбластьКатегория.Верх;
			Низ  = ОбластьКатегория.Низ;
			
			НаименованиеКатегории = СокрП(Макет.Область(Верх, 2).Текст);
			
			Если Разделы.НайтиСтроки(Новый Структура("Наименование", НаименованиеКатегории)).Количество() <> 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Категория = Разделы.Добавить();
			
			Категория.Иконка       = ИконкаКатегории(ОбластьКатегория.Имя);
			Категория.Порядок      = Число(Макет.Область(Верх, 1).Текст);
			Категория.Наименование = НаименованиеКатегории;
			
			Для НомерСтр = Верх + 1 По Низ Цикл
				
				Элемент = ЭлементыКатегорий.Добавить();
				
				Элемент.Категория    = Категория.Наименование;
				Элемент.Код          = СокрП(Макет.Область(НомерСтр, 1).Текст);
				Элемент.Наименование = СокрП(Макет.Область(НомерСтр, 2).Текст);
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ИконкаКатегории(Наименование)
	
	Иконка = Неопределено;
	
	Если Метаданные.ОбщиеКартинки.Найти("ВыборОКВЭД" + Наименование) <> Неопределено Тогда
		Иконка = БиблиотекаКартинок["ВыборОКВЭД" + Наименование];
	КонецЕсли;
	
	Возврат Иконка;
	
КонецФункции

&НаКлиенте
Процедура ЗавершитьВыбор()
	
	РезультатВыбора = Неопределено;
	
	Если Элементы.СтраницыРазделы.ТекущаяСтраница = Элементы.СтраницаЭлементыКатегорий Тогда
		ТекущийСписок = Элементы.ЭлементыКатегорий;
	Иначе
		ТекущийСписок = Элементы.Классификатор;
	КонецЕсли;
	
	Если МножественныйВыбор Тогда
		РезультатВыбора = Новый Массив;
		Для Каждого ВыделеннаяСтрока Из ТекущийСписок.ВыделенныеСтроки Цикл
			ТекущаяСтрока = ТекущийСписок.ДанныеСтроки(ВыделеннаяСтрока);
			Если ТекущаяСтрока <> Неопределено Тогда
				РезультатВыбора.Добавить(Новый Структура("Код, Наименование", ТекущаяСтрока.Код, ТекущаяСтрока.Наименование));
			КонецЕсли;
		КонецЦикла;
	Иначе
		ТекущаяСтрока = ТекущийСписок.ТекущиеДанные;
		Если ТекущаяСтрока <> Неопределено Тогда
			РезультатВыбора = Новый Структура("Код, Наименование", ТекущаяСтрока.Код, ТекущаяСтрока.Наименование);
		КонецЕсли;
	КонецЕсли;
	
	Если РезультатВыбора <> Неопределено Тогда
		Закрыть(РезультатВыбора);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьНайденные()
	
	ОтобразитьНайденные = ЗначениеЗаполнено(СтрокаПоиска);
	
	Если ОтобразитьНайденные Тогда
		
		Если КлассификаторЗагруженПоОтбору <> СтрокаПоиска Тогда
			
			ТаблицаОКВЭД = ПолучитьИзВременногоХранилища(АдресХранилищаКлассификатораПоиска);
			
			СписокВыбранныхКодов = Новый СписокЗначений;
			КлассификаторСОтбором = РегистрыСведений.КлассификаторОКВЭД2.НайтиВКлассификаторе(
				СтрокаПоиска, СписокВыбранныхКодов, ТаблицаОКВЭД);
			
			Классификатор.Загрузить(КлассификаторСОтбором);
			
			КлассификаторЗагруженПоОтбору = СтрокаПоиска;
			
		КонецЕсли;
		
	ИначеЕсли ЗначениеЗаполнено(КлассификаторЗагруженПоОтбору) Тогда
		
		ТаблицаОКВЭД = ПолучитьИзВременногоХранилища(АдресХранилищаКлассификатораПоиска);
		
		Классификатор.Загрузить(ТаблицаОКВЭД);
		
		КлассификаторЗагруженПоОтбору = "";
		
	КонецЕсли;
	
	Элементы.Разделы.ТекущаяСтрока = 0;
	
КонецПроцедуры

#Область ОбновленииеИзСервисаКлассификаторов

&НаКлиенте
Процедура ПроверитьОбновленияКлассификатора() Экспорт
	
	ДлительнаяОперация = НачатьПроверкуОбновленияНаСервере();
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбработатьРезультатПроверкиОбновления", ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция НачатьПроверкуОбновленияНаСервере()
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения,
		"РаботаСКлассификаторами.ДоступныеОбновленияКлассификаторов",
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(
			РегистрыСведений.КлассификаторОКВЭД2.ИдентификаторВСервисеКлассификаторов()));
	
КонецФункции

&НаКлиенте
Процедура ОбработатьРезультатПроверкиОбновления(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИнформацияОбОбновлениях = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	ДоступноОбновление = ИнформацияОбОбновлениях.ДоступныеВерсии.Количество() > 0;
	
	Элементы.ГруппаДоступноОбновление.Видимость = ДоступноОбновление;
	
	ДлительнаяОперация = Неопределено;
	
КонецПроцедуры

&НаСервере
Процедура НачатьОбновлениеДанныхСписка()
	
	ТребуетсяПодключениеИнтернетПоддержки = Ложь;
	
	// В режиме сервиса или АРМ данные обновляются менеджером сервиса, т.к. это общие данные
	Если ОбщегоНазначения.РазделениеВключено() Или ПолучитьФункциональнуюОпцию("РаботаВАвтономномРежиме") Тогда
		Возврат;
	КонецЕсли;
	
	Классификаторы = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(
		РегистрыСведений.КлассификаторОКВЭД2.ИдентификаторВСервисеКлассификаторов());
	
	ПроверкаАктуальностиДанныхСписка = РаботаСКлассификаторами.ДоступныеОбновленияКлассификаторов(Классификаторы);
	
	Если ЗначениеЗаполнено(ПроверкаАктуальностиДанныхСписка.КодОшибки) Тогда
		
		Если ПроверкаАктуальностиДанныхСписка.КодОшибки = "НеверныйЛогинИлиПароль" Тогда
			// Перед следующей попыткой загрузки запросим данные подключения к ИПП 
			ТребуетсяПодключениеИнтернетПоддержки = Истина;
		Иначе	
			ШаблонСообщения = НСтр("ru = 'При загрузке классификатора ОКВЭД2 из сервиса классификаторов возникла ошибка:
				|%1'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ПроверкаАктуальностиДанныхСписка.ИнформацияОбОшибке);
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Обновление классификатора ОКВЭД2'", ОбщегоНазначения.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.РегистрыСведений.КлассификаторОКВЭД2, ,
				ТекстСообщения);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
	Если ПроверкаАктуальностиДанныхСписка.ДоступныеВерсии.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Загружен актуальный классификатор ОКВЭД2'"));
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация <> Неопределено Тогда
		// Не завершено предыдущее фоновое задание, новое не запускаем.
		Возврат;
	КонецЕсли;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.ОжидатьЗавершение           = 0; // Не ждем завершения.
	ПараметрыВыполнения.ЗапуститьВФоне              = Истина;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Обновление классификатора ОКВЭД2'");
	
	ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
		"РегистрыСведений.КлассификаторОКВЭД2.ЗагрузитьДанныеИзСервисаКлассификаторов",
		Новый Структура(),
		ПараметрыВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОжидатьЗавершениеОбновленияДанныхСписка()

	Если ДлительнаяОперация = Неопределено Тогда
		// Фоновое задание не запущено или обновление не требуется.
		Возврат;
	КонецЕсли;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
	ПараметрыОжидания.ТекстСообщения = НСтр("ru='Идет загрузка классификатора ОКВЭД2.'");
	
	ОповещенияОЗавершении = Новый ОписаниеОповещения("ОбновлениеДанныхСпискаЗавершение", ЭтотОбъект);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещенияОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеДанныхСпискаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Успешно = Истина;
	Если ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Результат, "Статус", "") = "Ошибка" Тогда
		Успешно = Ложь;
		ШаблонСообщения = НСтр("ru = 'При загрузке классификатора ОКВЭД2 из сервиса классификаторов возникла ошибка:
			|%1'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, Результат.КраткоеПредставлениеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
	ДлительнаяОперация = Неопределено; // Сбросим признак выполнения.
	
	Если Успешно Тогда
		ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.КлассификаторОКВЭД2"));
		Элементы.ГруппаДоступноОбновление.Видимость = Ложь;
		ЗагрузитьКлассификатор();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОтветеНаВопросПодключитьИнтернетПоддержку(КодВозврата, ДополнительныеПараметры) Экспорт
	
	Если КодВозврата = КодВозвратаДиалога.Да Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПодключенияИнтернетПоддержки", ЭтотОбъект);	
		ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(ОписаниеОповещения, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодключенияИнтернетПоддержки(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		// Получаем классификатор и обновляем данные на форме.
		НачатьОбновлениеДанныхСписка();
		ОжидатьЗавершениеОбновленияДанныхСписка();
		
		ТребуетсяПодключениеИнтернетПоддержки = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
