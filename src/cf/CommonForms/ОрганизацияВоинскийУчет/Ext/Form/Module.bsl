
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнтерактивнаяЗапись = Не ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыРасширенная");
	
	Если ИнтерактивнаяЗапись Тогда
		ОрганизацияСсылка = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	Иначе
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "ОрганизацияСсылка");
	КонецЕсли;
	
	РасчетныйГод = Год(ТекущаяДатаСеанса());
	
	ПрочитатьДанные();
	
	Элементы.ПотребностьВСпециалистахНаПериодМобилизацииКатегорияДолжности.СписокВыбора.Добавить(Перечисления.КатегорииДолжностейДляВоинскогоУчета.Руководители, НСтр("ru = 'Руководители'"));
	Элементы.ПотребностьВСпециалистахНаПериодМобилизацииКатегорияДолжности.СписокВыбора.Добавить(Перечисления.КатегорииДолжностейДляВоинскогоУчета.Специалисты, НСтр("ru = 'Специалисты'"));
	Элементы.ПотребностьВСпециалистахНаПериодМобилизацииКатегорияДолжности.СписокВыбора.Добавить(Перечисления.КатегорииДолжностейДляВоинскогоУчета.ДругиеСлужащие, НСтр("ru = 'Другие служащие'"));
	Элементы.ПотребностьВСпециалистахНаПериодМобилизацииКатегорияДолжности.СписокВыбора.Добавить(Перечисления.КатегорииДолжностейДляВоинскогоУчета.Рабочие, НСтр("ru = 'Рабочие'"));
	Элементы.ПотребностьВСпециалистахНаПериодМобилизацииКатегорияДолжности.СписокВыбора.Добавить(Перечисления.КатегорииДолжностейДляУчетаЗабронированных.Водители, НСтр("ru = 'Водители (из числа рабочих)'"));
	
	НаименованиеОрганизации = "";
	Параметры.Свойство("Заголовок", Заголовок);
	
	ИспользоватьБронирование = ПолучитьФункциональнуюОпцию("ИспользоватьБронированиеГраждан");
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаЗаписатьИЗакрыть", "Видимость", ИспользоватьБронирование);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ФормаОтмена", "Видимость", ИспользоватьБронирование);
	
	КоманднаяПанель.Видимость = Не ИнтерактивнаяЗапись;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ОрганизацияСсылка", "Видимость", ИнтерактивнаяЗапись);
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияСсылкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОрганизацияСсылкаТекущая = ОрганизацияСсылка;
	
	Если Модифицированность Тогда
		СтандартнаяОбработка = Ложь;
		Отказ = ложь;
		ПроверитьУникальностьЗаписейНаСервере(Отказ);
		Если Не Отказ Тогда
			СохранитьДанныеНаСервере();
			ОрганизацияСсылка = ДанныеВыбора;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияСсылкаПриИзменении(Элемент)
	
	ПрочитатьДанные();
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияСсылкаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетныйГодПриИзменении(Элемент)
	
	ПотребностьВСпециалистахУстановитьОтбор();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПотребностьВСпециалистахНаПериодМобилизации

&НаКлиенте
Процедура ПотребностьВСпециалистахНаПериодМобилизацииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда 
		
		Элемент.ТекущиеДанные.Организация = ОрганизацияСсылка;
		Элемент.ТекущиеДанные.Год 		  = РасчетныйГод;
		
	Иначе
		
		КатегорияВоинскогоУчетаТекущая = Элемент.ТекущиеДанные.КатегорияВоинскогоУчета;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПотребностьВСпециалистахНаПериодМобилизацииПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Не ИнтерактивнаяЗапись Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ОтменаРедактирования Тогда
		ПроверитьУникальностьЗаписейНаСервере(Отказ);
	Иначе
		Модифицированность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПотребностьВСпециалистахНаПериодМобилизацииПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Не ИнтерактивнаяЗапись Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ОтменаРедактирования Тогда
		СохранитьДанныеНаСервере();
	Иначе
		Если Не НоваяСтрока И Элемент.ТекущиеДанные.КатегорияВоинскогоУчета <> КатегорияВоинскогоУчетаТекущая Тогда
			Элемент.ТекущиеДанные.КатегорияВоинскогоУчета = КатегорияВоинскогоУчетаТекущая;
			СохранитьДанныеНаСервере();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Перечитать(Команда)
	
	ПрочитатьДанные();
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриказОбОрганизацииВоинскогоУчета(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Обработка.ПечатьФормВоинскогоУчета", "ПФ_MXL_ПриказОбОрганизацииВоинскогоУчета", 
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ОрганизацияСсылка), ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланРаботыПоОсуществлениюВоинскогоУчета(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Обработка.ПечатьФормВоинскогоУчета", "ПФ_MXL_ПланРаботыПоОсуществлениюВоинскогоУчета", 
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ОрганизацияСсылка), ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	СохранитьДанныеНаСервере();
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПотребностьВСпециалистахУстановитьОтбор()

	Элементы.ПотребностьВСпециалистахНаПериодМобилизации.ОтборСтрок = Новый ФиксированнаяСтруктура("Год", РасчетныйГод);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДанные()
	
	ТаблицаЗаписей = ТаблицаЗаписейРегистраПотребностьВСпециалистахНаПериодМобилизации();
	
	ПотребностьВСпециалистахНаПериодМобилизации.Загрузить(ТаблицаЗаписей);
	
	ПотребностьВСпециалистахУстановитьОтбор();
	
КонецПроцедуры

&НаСервере
Процедура СохранитьДанныеНаСервере()
	
	ТаблицаЗаписейФормы = ПотребностьВСпециалистахНаПериодМобилизации.Выгрузить();
	ТаблицаЗаписейФормы.Колонки.Удалить("ИсходныйНомерСтроки");
	
	ТаблицаЗаписейБазыДанных = ТаблицаЗаписейРегистраПотребностьВСпециалистахНаПериодМобилизации();
	
	Если НЕ ОбщегоНазначения.КоллекцииИдентичны(ТаблицаЗаписейФормы, ТаблицаЗаписейБазыДанных) Тогда
		
		НаборЗаписей = РегистрыСведений.ПотребностьВСпециалистахНаПериодМобилизации.СоздатьНаборЗаписей();
		
		НаборЗаписей.Отбор.Организация.Значение = ОрганизацияСсылка;
		НаборЗаписей.Отбор.Организация.Использование = Истина;
		
		НаборЗаписей.Загрузить(ТаблицаЗаписейФормы);
		
		НаборЗаписей.Записать();
		
	КонецЕсли; 
		
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервере
Функция ТаблицаЗаписейРегистраПотребностьВСпециалистахНаПериодМобилизации()
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.ПотребностьВСпециалистахНаПериодМобилизации.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Организация.Значение = ОрганизацияСсылка;
	НаборЗаписей.Отбор.Организация.Использование = Истина;
	
	НаборЗаписей.Прочитать();
	
	Возврат НаборЗаписей.Выгрузить();
	
КонецФункции

&НаКлиенте
Процедура СохранитьИЗакрыть(Результат, ДополнительныеПараметры) Экспорт 
	
	СохранитьДанныеНаСервере();
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьУникальностьЗаписейНаСервере(Отказ)
	
	ТаблицаЗаписейФормы = ПотребностьВСпециалистахНаПериодМобилизации.Выгрузить(Новый Структура("Год", РасчетныйГод));
	МассивВведеныхЗаписей = ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаЗаписейФормы, "КатегорияВоинскогоУчета");
	МассивСвернутыхЗаписей = ОбщегоНазначенияКлиентСервер.СвернутьМассив(МассивВведеныхЗаписей);
	
	Если МассивВведеныхЗаписей.Количество() <> МассивСвернутыхЗаписей.Количество() Тогда
		
		ОтборСтрок = Новый Структура("Год, КатегорияВоинскогоУчета");
		ОтборСтрок.Год = РасчетныйГод;
		Для Каждого СтрокаТаблицы Из ТаблицаЗаписейФормы Цикл
			ОтборСтрок.КатегорияВоинскогоУчета = СтрокаТаблицы.КатегорияВоинскогоУчета;
			МассивСтрок = ПотребностьВСпециалистахНаПериодМобилизации.НайтиСтроки(ОтборСтрок);
			Если МассивСтрок.Количество() = 1 Тогда
				Продолжить;
			КонецЕсли;
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Дублируется категория должности ""%1""'"),
				ОтборСтрок.КатегорияВоинскогоУчета);
				
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ,
				"ПотребностьВСпециалистахНаПериодМобилизацииКатегорияДолжности",
				,
				Отказ);
			
			Если Отказ Тогда
				Возврат;
			КонецЕсли;
				
				
		КонецЦикла;
			
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УправлениеФормой()
	
	ОрганизацияСсылкаЗаполнена =  ЗначениеЗаполнено(ОрганизацияСсылка);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"ПотребностьВСпециалистахНаПериодМобилизации",
		"ТолькоПросмотр",
		ОрганизацияСсылкаЗаполнена И Не ИспользоватьБронирование);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"КоманднаяПанель",
		"Доступность",
		ОрганизацияСсылкаЗаполнена);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"ГруппаПотребностьВСпециалистах",
		"Доступность",
		ОрганизацияСсылкаЗаполнена);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"ГруппаОсновное",
		"Доступность",
		ОрганизацияСсылкаЗаполнена);
		
КонецПроцедуры

#КонецОбласти
