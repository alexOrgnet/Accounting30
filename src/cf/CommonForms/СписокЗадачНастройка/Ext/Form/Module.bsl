#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПоказыватьНалогиИОтчеты = ПолучитьФункциональнуюОпцию("ИнтерфейсТакси")
		Или ПолучитьФункциональнуюОпцию("ИнтерфейсТаксиПростой")
		Или ПолучитьФункциональнуюОпцию("ИнтерфейсБухгалтерия77");
	
	ПоказыватьСинхронизациюСКалендаремGoogle = СинхронизацияСКалендаремGoogle.ДоступнаНастройкаСинхронизации();
	
	Если ПоказыватьНалогиИОтчеты Тогда
		ПроверитьСистемуНалогообложения();
	КонецЕсли;
	
	Если ПоказыватьСинхронизациюСКалендаремGoogle Тогда
		ДлительнаяОперацияПриОткрытии = ПроверитьСостояниеСинхронизацииСКалендаремGoogle();
	КонецЕсли;
	
	ПроверитьСостояниеУведомленийПоЭлектроннойПочте();
	
	Элементы.ГруппаНалогиИОтчеты.Видимость = ПоказыватьНалогиИОтчеты;
	Элементы.ГруппаСинхронизацияСКалендаремGoogle.Видимость = ПоказыватьСинхронизациюСКалендаремGoogle;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ДлительнаяОперацияПриОткрытии <> Неопределено Тогда
		ОжидатьЗавершенияПроверкиСостоянияСинхронизацииСКалендаремGoogle(ДлительнаяОперацияПриОткрытии);
		ДлительнаяОперацияПриОткрытии = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_Организации"
		Или ИмяСобытия = "ИзменениеУчетнойПолитики" Тогда
		ПроверитьСистемуНалогообложения();
	ИначеЕсли ИмяСобытия = "СписокЗадачНастройкаУведомленийПоЭлектроннойПочтеИзменение" Тогда
		ПроверитьСостояниеУведомленийПоЭлектроннойПочте();
	ИначеЕсли ИмяСобытия = "НастройкаСинхронизацииСКалендаремGoogleИзменение" Тогда
		ПроверитьСостояниеСинхронизацииСКалендаремGoogle();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НалогиИОтчеты(Команда)
	
	ПараметрыОткрытия = ОбщегоНазначенияБПКлиентСервер.ПараметрыОткрытияФормыСОжиданием();
	ПараметрыОткрытия.Заголовок = НСтр("ru = 'Настройки налогов и отчетов'");
	ПараметрыОткрытия.ИмяФормы = "ОбщаяФорма.НалогиИОтчеты";
	
	ОбщегоНазначенияБПКлиент.ОткрытьФормуСОжиданием(ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаУведомленийПоЭлектроннойПочте(Команда)
	
	ОткрытьФорму("ОбщаяФорма.СписокЗадачНастройкаУведомленийПоЭлектроннойПочте");
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаСинхронизацииСКалендаремGoogle(Команда)
	
	ОбщегоНазначенияБПКлиент.ОткрытьФормуНастройкиСинхронизацииСКалендаремGoogle();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПроверитьСистемуНалогообложения()
	
	Если Справочники.Организации.КоличествоОрганизаций() = 1 Тогда
		Элементы.НалогиИОтчеты.Заголовок = ОрганизацииФормыКлиентСервер.ПредставлениеСистемыНалогообложения(
			Справочники.Организации.ОрганизацияПоУмолчанию());
	Иначе
		Элементы.НалогиИОтчеты.Заголовок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьСостояниеУведомленийПоЭлектроннойПочте()
	
	Если Не СписокЗадачУведомленияПоЭлектроннойПочте.КорректностьНастройки() Тогда
		Элементы.НастройкаУведомленийПоЭлектроннойПочте.Заголовок = НСтр("ru = 'Настройка не завершена'");
		Элементы.НастройкаУведомленийПоЭлектроннойПочте.ЦветТекста = ЦветаСтиля.ЦветШрифтаОшибки;
		Возврат;
	КонецЕсли;
	
	Элементы.НастройкаУведомленийПоЭлектроннойПочте.ЦветТекста = Новый Цвет();
	
	Если Не СписокЗадачУведомленияПоЭлектроннойПочте.ОтправлятьУведомления() Тогда
		Элементы.НастройкаУведомленийПоЭлектроннойПочте.Заголовок = НСтр("ru = 'Выключено'");
		Возврат;
	КонецЕсли;
	
	ПолучателиУведомлений = СтрРазделить(СписокЗадачУведомленияПоЭлектроннойПочте.Получатель(), ",", Ложь);
	Если ПолучателиУведомлений.Количество() = 1 Тогда
		ОписаниеПолучателей = ПолучателиУведомлений[0];
	ИначеЕсли ПолучателиУведомлений.Количество() > 1 Тогда
		ОписаниеПолучателей = СтрШаблон(НСтр("ru = '%1 и еще %2'"),
			ПолучателиУведомлений[0],
			ПолучателиУведомлений.Количество() - 1);
	КонецЕсли;
	
	Элементы.НастройкаУведомленийПоЭлектроннойПочте.Заголовок = 
		СтрШаблон(НСтр("ru = 'Включено для %1'"), ОписаниеПолучателей);
	
КонецПроцедуры

#Область ПроверкаСостоянияСинхронизацииСКалендаремGoogle

&НаСервере
Функция ПроверитьСостояниеСинхронизацииСКалендаремGoogle()
	
	Пользователь = Пользователи.ТекущийПользователь();
	НастройкиСинхронизации = СинхронизацияСКалендаремGoogle.НастройкиСинхронизации(Пользователь);
	Если Не НастройкиСинхронизации.Включено Тогда
		Элементы.НастройкаСинхронизацииСКалендаремGoogle.Заголовок = НСтр("ru = 'Выключено'");
	Иначе
		ПараметрыПроцедуры = Новый Структура();
		ПараметрыПроцедуры.Вставить("ВыполнитьСинхронизациюПослеПроверки", Ложь);
		
		ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
		ПараметрыВыполненияВФоне.Вставить("НаименованиеФоновогоЗадания", НСтр("ru = 'Проверка доступа к календарю Google'"));
		ПараметрыВыполненияВФоне.Вставить("ОжидатьЗавершение", 0);
		
		ДлительнаяОперация = ДлительныеОперации.ВыполнитьВФоне(
			"СинхронизацияСКалендаремGoogle.ПроверитьДоступностьСинхронизацииВФоне",
			ПараметрыПроцедуры,
			ПараметрыВыполненияВФоне);
		
		Если ДлительнаяОперация.Статус = "Выполняется" Тогда
			Элементы.НастройкаСинхронизацииСКалендаремGoogle.Заголовок = Неопределено;
			Возврат ДлительнаяОперация;
		КонецЕсли;
		
		ЗавершитьПроверкуСостоянияСинхронизацииСКалендаремGoogleНаСервере(ДлительнаяОперация);
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Процедура ЗавершитьПроверкуСостоянияСинхронизацииСКалендаремGoogleНаСервере(ДлительнаяОперация)
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		РезультатПроверки = ПолучитьИзВременногоХранилища(ДлительнаяОперация.АдресРезультата);
		Элементы.НастройкаСинхронизацииСКалендаремGoogle.Заголовок = 
			?(РезультатПроверки.СинхронизацияДоступна,
				НСтр("ru = 'Включено'"),
				НСтр("ru = 'Выключено'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОжидатьЗавершенияПроверкиСостоянияСинхронизацииСКалендаремGoogle(ДлительнаяОперация)
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗавершитьПроверкуСостоянияСинхронизацииСКалендаремGoogle", ЭтотОбъект);
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьПроверкуСостоянияСинхронизацииСКалендаремGoogle(ДлительнаяОперация, ДополнительныеПараметры) Экспорт
	
	ЗавершитьПроверкуСостоянияСинхронизацииСКалендаремGoogleНаСервере(ДлительнаяОперация);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти