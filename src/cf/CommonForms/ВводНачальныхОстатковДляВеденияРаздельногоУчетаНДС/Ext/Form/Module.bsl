#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбщегоНазначенияБПВызовСервера.ЗаполнитьСписокОрганизаций(Элементы.ПолеОрганизация, СоответствиеОрганизаций);
	
	Организация                       = Параметры.Организация;
	ВключатьОбособленныеПодразделения = Параметры.ВключатьОбособленныеПодразделения;
	ДоступенОтборПоОрганизации        = Параметры.ДоступенОтборПоОрганизации;
	
	ПолеОрганизация = СтрЗаменить(Строка(ВключатьОбособленныеПодразделения) + Организация.УникальныйИдентификатор(), "-", "");
	
	Если ВключатьОбособленныеПодразделения Тогда
		Организации         = БухгалтерскийУчетПереопределяемый.ВсяОрганизация(Организация);
	Иначе
		Организации = Новый Массив;
		Организации.Добавить(Организация);
	КонецЕсли;
	
	СписокДокументов.Параметры.УстановитьЗначениеПараметра("Организации",       Организации);
	СписокДокументов.Параметры.УстановитьЗначениеПараметра("ОтборПоОрганизации", Истина);
	
	ОтборОрганизацияИспользование = Истина;
	
	Элементы.ГруппаОтборОрганизация.Доступность = ДоступенОтборПоОрганизации;
	
	Если ПравоДоступа("Изменение", Метаданные.РегистрыСведений.НастройкиУчетаНДС)Тогда
		ДоступнаАктуализацияОстатков = Истина;
	Иначе
		ДоступнаАктуализацияОстатков = Ложь;
		ЭтотОбъект.Элементы.НеАктуальныеОстатки.Заголовок = НСтр(
		"ru = 'Данные остатков по раздельному учету неактуальны. Для актуализации остатков обратитесь к администратору'"); 
	КонецЕсли;
	
	ЭтотОбъект.Элементы.ФормаАктуализироватьОстатки.Доступность = ДоступнаАктуализацияОстатков;
	
	ЕстьПодразделения = БухгалтерскийУчетПереопределяемый.ВестиУчетПоПодразделениям();
	ЭтотОбъект.Элементы.СписокДокументовПодразделениеОрганизации.Видимость = ЕстьПодразделения;
	
	УстановитьВидимостьБаннера(Организации);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПолеОрганизацияПриИзменении(Элемент)
	
	ОбщегоНазначенияБПКлиент.ПолеОрганизацияПриИзменении(Элемент, ПолеОрганизация,
		Организация, ВключатьОбособленныеПодразделения); 
		
	ПриИзмененииОрганизации();

КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияИспользованиеПриИзменении(Элемент)
	
	ПриИзмененииОрганизации();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеОрганизацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОбщегоНазначенияБПКлиент.ПолеОрганизацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка, 
		СоответствиеОрганизаций, Организация, ВключатьОбособленныеПодразделения);
		
	ПриИзмененииОрганизации();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокДокументов

&НаСервере
Процедура УстановитьВидимостьБаннера(Организации);
	
	ПараметрыРУ = УчетНДСРаздельныйФормированиеНачальныхОстатков.ДатаОстатков(Организация);
	Если ПараметрыРУ.ВедетсяРаздельныйУчетНаСчете19 = Истина Тогда
		ДатаВключенияРУ = ПараметрыРУ.Дата;
	Иначе
		Возврат;
	КонецЕсли;
	
	// Остатки заполняются одновременно для основной организации и для обособленных подразделений
	УжеЗаполнялисьОстатки = РегистрыСведений.ВыполнениеРегламентныхОперацийНДС.УжеЗаполнялисьОстаткиПоРУ(Организация, ДатаВключенияРУ);
	
	НужнаАктуализация = Ложь;
	
	Для Каждого СтрокаОрганизации Из Организации Цикл
		НужнаАктуализация = НужнаАктуализация Или РегистрыСведений.ВыполнениеРегламентныхОперацийНДС.НеобходимоАктуализироватьОстаткиПоРаздельномуУчету(СтрокаОрганизации,
		ДатаВключенияРУ);
	КонецЦикла;
	
	Элементы.ГруппаБаннер.Видимость = НужнаАктуализация И УжеЗаполнялисьОстатки;

КонецПроцедуры

&НаКлиенте
Процедура СписокДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбрабротка = Ложь;
	
	ОтборДокумента = Новый Структура ("Ключ", Элемент.ТекущиеДанные.ДокументОперации);
	Если ТипЗнч(Элемент.ТекущиеДанные.ДокументОперации) = Тип("ДокументСсылка.ВводНачальныхОстатков") Тогда
		ОткрытьФорму("Документ.ВводНачальныхОстатков.ФормаОбъекта",ОтборДокумента, ,ЭтотОбъект.УникальныйИдентификатор);
	ИначеЕсли ТипЗнч(Элемент.ТекущиеДанные.ДокументОперации) = Тип("ДокументСсылка.ОперацияБух") Тогда 
		ОткрытьФорму("Документ.ОперацияБух.ФормаОбъекта", ОтборДокумента, ,ЭтотОбъект.УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура АктуализироватьОстатки(Команда)
	
	Если Не ОтборОрганизацияИспользование Или Не ЗначениеЗаполнено(Организация) Тогда
		Текст  = НСтр("ru = 'Для актуализации остатков установите отбор по организации'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(Текст);
		
		Возврат;
	КонецЕсли;
	
	Если ВключатьОбособленныеПодразделения Тогда
		Организации         = ПолучитьОрганизациюСОбособленнымиПодразделениями(Организация);
	Иначе
		Организации = Новый Массив;
		Организации.Добавить(Организация);
	КонецЕсли;
	
	Результат = ВыполнитьОбработкиПоПереходуНаРаздельныйУчет(Организации, ДатаВключенияРУ);
	
	Если Результат.Статус = "Выполнено" Тогда
		
		Элементы.СписокДокументов.Обновить();
		Элементы.ГруппаБаннер.Видимость = Ложь;
		Оповестить("ОстаткиАктуализированы");
		
	Иначе
		
		ОповещениеОЗавершении = Новый ОписаниеОповещения("КнопкаВыполнитьЗавершение", ЭтотОбъект);
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьСообщения = Истина;
		ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
		ДлительныеОперацииКлиент.ОжидатьЗавершение(Результат,
						ОповещениеОЗавершении, ПараметрыОжидания);

	КонецЕсли;

 КонецПроцедуры

&НаКлиенте
Процедура КнопкаВыполнитьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(Результат)
		Или Не Результат.Свойство("Статус") Тогда
		
		Элементы.СписокДокументов.Обновить();

		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		СохранитьИнформациюОбОшибкеВЖурналРегистрации(Результат.ПодробноеПредставлениеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.КраткоеПредставлениеОшибки);
	ИначеЕсли Результат.Статус = "Отменено" Тогда
		
		Элементы.СписокДокументов.Обновить();
		
	ИначеЕсли Результат.Статус = "Выполнено" Тогда
		
		Элементы.ГруппаБаннер.Видимость = Ложь;
		Элементы.СписокДокументов.Обновить();
		Оповестить("ОстаткиАктуализированы");

	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьОбработкиПоПереходуНаРаздельныйУчет(Организации, Дата)
	
	Для Каждого СтрокаОрганизации Из Организации Цикл
		УчетНДСРаздельныйФормированиеНачальныхОстатков.ОтменитьФормированиеНачальныхОстатковДляВеденияРаздельногоУчетаНДС(
																									СтрокаОрганизации, Дата );
	КонецЦикла;

	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("Организации", Организации);
	ПараметрыПроцедуры.Вставить("Период", Дата);
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Заполнение остатков по раздельному учету'");
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(
		"УчетНДСРаздельныйФормированиеНачальныхОстатков.СформироватьОстатки",
		ПараметрыПроцедуры, ПараметрыВыполнения);

КонецФункции

&НаСервере
Процедура СохранитьИнформациюОбОшибкеВЖурналРегистрации(ТекстОшибки)
	
	ЗаписьЖурналаРегистрации(
		НСтр("ru = 'Формирование остатков по раздельному учету НДС'", ОбщегоНазначения.КодОсновногоЯзыка()),
		УровеньЖурналаРегистрации.Ошибка,,,ТекстОшибки);

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОрганизациюСОбособленнымиПодразделениями(Организация)
	
	Возврат БухгалтерскийУчетПереопределяемый.ВсяОрганизация(Организация);
	
КонецФункции
	
&НаКлиенте
Процедура ПриИзмененииОрганизации()
	
	Если ВключатьОбособленныеПодразделения Тогда
		Организации         = ПолучитьОрганизациюСОбособленнымиПодразделениями(Организация);
	Иначе
		Организации = Новый Массив;
		Организации.Добавить(Организация);
	КонецЕсли;

	СписокДокументов.Параметры.УстановитьЗначениеПараметра("Организации",        Организации);
	СписокДокументов.Параметры.УстановитьЗначениеПараметра("ОтборПоОрганизации", ОтборОрганизацияИспользование);
		
	Если ОтборОрганизацияИспользование И ЗначениеЗаполнено(Организация) Тогда
		УстановитьВидимостьБаннера(Организации);
	Иначе
		Элементы.ГруппаБаннер.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


