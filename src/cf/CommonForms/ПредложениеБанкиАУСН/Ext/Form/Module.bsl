
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СведенияОСервисе = УниверсальныйОбменСБанками.СведенияОСервисе(
		Перечисления.СервисыОбменаСБанками.ЗаявкиНаОткрытиеСчета);
	
	Если СведенияОСервисе.ДанныеАктуальны Тогда
		ЗаполнитьПредложенияБанков();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не СведенияОСервисе.ДанныеАктуальны Тогда
		ПодключитьОбработчикОжидания("Подключаемый_НачатьОбновлениеДанныхСервисаОбменаСБанками", 0.2, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПереходНаСтраницуБанкаНажатие(Элемент)
	
	ОтборПоЭлементу = Новый Структура("ИмяКоманды", Элемент.Имя);
	СтрокиБанк = БанкиАУСН.НайтиСтроки(ОтборПоЭлементу);
	Если Не ЗначениеЗаполнено(СтрокиБанк) Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаБанк = СтрокиБанк[0];
	СтраницаБанка = СтрокаБанк.СсылкаНаСтраницу;
	Если ЗначениеЗаполнено(СтраницаБанка) Тогда
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(СтраницаБанка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьСчет(Команда)
	
	ОтборПоКоманде = Новый Структура("ИмяКоманды", ТекущийЭлемент.Имя);
	СтрокиБанк = БанкиАУСН.НайтиСтроки(ОтборПоКоманде);
	Если Не ЗначениеЗаполнено(СтрокиБанк) Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаБанк = СтрокиБанк[0];
	
	СведенияОСервисе.ДанныеАктуальны = Истина;
	СведенияОСервисе.ТребуетсяПодключениеИнтернетПоддержки = Ложь;
	ПараметрыОткрываемойФормы = Новый Структура;
	ПараметрыОткрываемойФормы.Вставить("СведенияОСервисе", СведенияОСервисе);
	
	ДанныеБанка = Новый Структура;
	ДанныеБанка.Вставить("Банк", СтрокаБанк.Банк);
	ДанныеБанка.Вставить("ИдентификаторПродукта", СтрокаБанк.Идентификатор);
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Банки", ДанныеБанка);
	ЗначенияЗаполнения.Вставить("ТребуетсяИнтеграцияССервисомАУСН", Истина);
	ПараметрыОткрываемойФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	ФормаДокумента = ОткрытьФорму("Документ.ЗаявкаНаОткрытиеСчета.Форма.ФормаДокумента", ПараметрыОткрываемойФормы);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьПредложенияБанков()
	
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаБанкиАУСН;
	
	СведенияОЗаявителе = Документы.ЗаявкаНаОткрытиеСчета.НовыеСведенияОЗаявителе();
	ПолныеСведения = Документы.ЗаявкаНаОткрытиеСчета.СведенияОБанкахИСтопФакторах(СведенияОЗаявителе,
		ТекущаяДата(), Истина);
	ПредложенияБанков = ПолныеСведения.ТаблицаБанков;
	ПодходящиеПредложения = Новый Массив;
	Для Каждого Предложение Из ПредложенияБанков Цикл
		Если Предложение.ИнтеграцияССервисомАУСН Тогда
			ПодходящиеПредложения.Добавить(Предложение);
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(ПодходящиеПредложения) Тогда
		Возврат;
	КонецЕсли;
	
	ПредложенияАУСН = ПредложенияБанков.Скопировать(ПодходящиеПредложения);
	КоличествоПредложений = ПредложенияАУСН.Количество();
	ДобавляемыеРеквизиты = Новый Массив;
	Для Сч = 1 По КоличествоПредложений Цикл
		РеквизитФормы = Новый РеквизитФормы(СтрШаблон("Лого%1", Формат(Сч, "ЧГ=")), ОбщегоНазначения.ОписаниеТипаСтрока(0));
		ДобавляемыеРеквизиты.Добавить(РеквизитФормы);
	КонецЦикла;
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	ПредложенияАУСН.Сортировать("ПорядокСортировки");
	Индекс = 1;
	СтраницаБанкиАУСН = Элементы.СтраницаБанкиАУСН;
	Банки = ПредложенияАУСН.ВыгрузитьКолонку("Банк");
	ЛоготипыБанков = УниверсальныйОбменСБанками.РеквизитыБанков(Банки, "Логотип");
	Для Каждого Предложение Из ПредложенияАУСН Цикл
		ИндексСтрокой = Формат(Индекс, "ЧГ=");
		Разделитель = Элементы.Добавить(СтрШаблон("РазделительБанк%1", ИндексСтрокой), Тип("ДекорацияФормы"), СтраницаБанкиАУСН);
		Разделитель.Вид = ВидДекорацииФормы.Картинка;
		Разделитель.Картинка = БиблиотекаКартинок.ГоризонтальныйРазделитель;
		Разделитель.РазмерКартинки = РазмерКартинки.Черепица;
		Разделитель.Ширина = 87;
		Лого = Элементы.Добавить(СтрШаблон("ЛоготипБанка%1", ИндексСтрокой), Тип("ПолеФормы"), СтраницаБанкиАУСН);
		Лого.Вид = ВидПоляФормы.ПолеКартинки;
		Лого.ПутьКДанным = СтрШаблон("Лого%1", ИндексСтрокой);
		Лого.Ширина = 15;
		Лого.Высота = 3;
		Лого.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		Лого.АвтоМаксимальнаяШирина = Ложь;
		Лого.АвтоМаксимальнаяВысота = Ложь;
		Лого.РазмерКартинки = РазмерКартинки.Пропорционально;
		Лого.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки);
		Лого.РастягиватьПоГоризонтали = Ложь;
		Лого.РастягиватьПоВертикали = Ложь;
		
		НайденнаяСтрокаЛого = ЛоготипыБанков.Найти(Предложение.Банк, "Банк");
		Если НайденнаяСтрокаЛого <> Неопределено Тогда
			ДвоичныеДанныеЛого = НайденнаяСтрокаЛого.Логотип;
			Если ТипЗнч(ДвоичныеДанныеЛого) = Тип("ДвоичныеДанные") Тогда
				Картинка = Новый Картинка(ДвоичныеДанныеЛого, Истина);
				ИмяРеквизитаЛого = СтрШаблон("Лого%1", ИндексСтрокой);
				ЭтотОбъект[ИмяРеквизитаЛого] = ПоместитьВоВременноеХранилище(Картинка, УникальныйИдентификатор);
			КонецЕсли;
		КонецЕсли;
		
		Описание = Элементы.Добавить(СтрШаблон("ОписаниеБанка%1", ИндексСтрокой), Тип("ДекорацияФормы"), СтраницаБанкиАУСН);
		Описание.Вид = ВидДекорацииФормы.Надпись;
		Описание.Заголовок = Предложение.КраткоеОписание;
		Описание.АвтоМаксимальнаяШирина = Ложь;
		
		Если Предложение.УслугаАктивна Тогда
			Кнопка = Элементы.Добавить(СтрШаблон("ОткрытьСчет%1", ИндексСтрокой), Тип("КнопкаФормы"), СтраницаБанкиАУСН);
			Кнопка.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
			Кнопка.ИмяКоманды = "ОткрытьСчет";
			Кнопка.ЦветФона = ЦветаСтиля.ЦветВажного;
			Кнопка.Шрифт = Новый Шрифт(Кнопка.Шрифт, , , Истина);
		
			СтрокаБанк = БанкиАУСН.Добавить();
			СтрокаБанк.Банк = Предложение.Банк;
			СтрокаБанк.ИмяКоманды = Кнопка.Имя;
			СтрокаБанк.Идентификатор = Предложение.ИдентификаторПродукта;
		Иначе
			ПереходНаСайт = Элементы.Добавить(
				СтрШаблон("Перейти%1", ИндексСтрокой), Тип("ДекорацияФормы"), СтраницаБанкиАУСН);
			ПереходНаСайт.Вид = ВидДекорацииФормы.Надпись;
			ПереходНаСайт.Гиперссылка = Истина;
			ПереходНаСайт.Заголовок = НСтр("ru = 'Узнать подробнее'");
			
			СтрокаБанк = БанкиАУСН.Добавить();
			СтрокаБанк.Банк = Предложение.Банк;
			СтрокаБанк.ИмяКоманды = ПереходНаСайт.Имя;
			СтрокаБанк.СсылкаНаСтраницу = Предложение.СсылкаНаТаблицуТарифа;
			ПереходНаСайт.УстановитьДействие("Нажатие", "ПереходНаСтраницуБанкаНажатие");
		КонецЕсли;
		
		Индекс = Индекс + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОбновитьДанныеСервисаОбменаСБанками()
	
	СервисОбменаСБанками = Перечисления.СервисыОбменаСБанками.ЗаявкиНаОткрытиеСчета;
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияПроцедуры();
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = СтрШаблон(НСтр("ru = 'Обновление данных сервиса %1'"), СервисОбменаСБанками);
	
	ПараметрыПроцедуры = Новый Структура();
	ПараметрыПроцедуры.Вставить("СервисОбменаСБанками", СервисОбменаСБанками);
	АдресХранилища = "";
	
	ИмяПроцедуры = "УниверсальныйОбменСБанками.ОбновитьДанныеСервиса";
	Возврат ДлительныеОперации.ВыполнитьПроцедуру(ПараметрыВыполнения, ИмяПроцедуры, ПараметрыПроцедуры, АдресХранилища);
	
КонецФункции

&НаКлиенте
Процедура ПослеОбновленияДанныхСервисаОбменаСБанками(ДлительнаяОперация, ДополнительныеПараметры) Экспорт
	
	Если ДлительнаяОперация = Неопределено Или ДлительнаяОперация.Статус = "Ошибка" Тогда
		ОшибкаОбновленияДанныхСервиса = Истина;
		УправлениеФормой();
	ИначеЕсли ДлительнаяОперация.Статус = "Выполнено" Тогда
		СведенияОСервисе.ДанныеАктуальны = Истина;
		ЗаполнитьПредложенияБанков();
		УправлениеФормой();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеФормой()
	
	Если ОшибкаОбновленияДанныхСервиса Тогда
		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаОшибкаВыполненияОперации;
	ИначеЕсли Не СведенияОСервисе.ДанныеАктуальны Тогда
		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаОбновлениеДанныхСервиса;
	ИначеЕсли Элементы.СтраницаБанкиАУСН.ПодчиненныеЭлементы.Количество() = 0 Тогда
		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаНетПредложений;
	Иначе
		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаБанкиАУСН;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_НачатьОбновлениеДанныхСервисаОбменаСБанками()
	
	ДлительнаяОперация = ОбновитьДанныеСервисаОбменаСБанками();
	Если ДлительнаяОперация = Неопределено Или ДлительнаяОперация.Статус = "Ошибка" Тогда
		ОшибкаОбновленияДанныхСервиса = Истина;
		УправлениеФормой();
	Иначе
		НастройкиОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		НастройкиОжидания.ВыводитьОкноОжидания = Ложь;
		Обработчик = Новый ОписаниеОповещения("ПослеОбновленияДанныхСервисаОбменаСБанками", ЭтотОбъект);
	
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Обработчик, НастройкиОжидания);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
