#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИсторияПрослеживаемогоТовара.Загрузить(Параметры.ИсторияПрослеживаемогоТовара.Выгрузить());
	ИсторияОтсутствовала = ИсторияПрослеживаемогоТовара.Количество() = 0;
	ЭтоОС = Параметры.ЭтоОС;
	Если ИсторияПрослеживаемогоТовара.Количество() = 0 Тогда
		НачальнаяСтрока = ИсторияПрослеживаемогоТовара.Добавить();
		Если Параметры.ПрослеживаемыйКомплект Или Параметры.ПрослеживаемыйТовар Тогда
			НоваяСтрокаИстории = ИсторияПрослеживаемогоТовара.Добавить();
			НоваяСтрокаИстории.ПрослеживаемыйТовар = Параметры.ПрослеживаемыйТовар;
			НоваяСтрокаИстории.ПрослеживаемыйКомплект = Параметры.ПрослеживаемыйКомплект;
			НоваяСтрокаИстории.Период = '20210701';
		КонецЕсли;
	КонецЕсли;
	
	Если ЭтоОС Тогда
		Заголовок = НСтр("ru = 'История прослеживаемости основного средства'");
		ЕстьПравоДоступа = ПравоДоступа("Редактирование", Метаданные.Справочники.ОсновныеСредства);
	Иначе
		ЕстьПравоДоступа = ПравоДоступа("Редактирование", Метаданные.Справочники.Номенклатура);
	КонецЕсли;
	
	Если НЕ ЕстьПравоДоступа Или Параметры.ТолькоПросмотр Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если ТолькоПросмотр Тогда
		Элементы.ФормаКомандаОтмена.КнопкаПоУмолчанию = Истина;
		ЭтотОбъект.ТолькоПросмотр = Истина;
		ЭтотОбъект.Доступность = Ложь;
	КонецЕсли;
	
	УстановитьПризнакПервоначальногоЗначения(ИсторияПрослеживаемогоТовара);
	
	Если ИсторияПрослеживаемогоТовара.Количество() > 0 Тогда
		Элементы.ИсторияПрослеживаемогоТовара.ТекущаяСтрока = ИсторияПрослеживаемогоТовара[ИсторияПрослеживаемогоТовара.Количество() - 1].ПолучитьИдентификатор();
	КонецЕсли;
	
	Если ЭтоОС Тогда
		Элементы.ИсторияОтражениеВПрослеживаемости.СписокВыбора.Добавить("ПрослеживаемыйТовар", НСтр("ru = 'Прослеживаемый объект'"));
	Иначе
		Элементы.ИсторияОтражениеВПрослеживаемости.СписокВыбора.Добавить("ПрослеживаемыйТовар", НСтр("ru = 'Прослеживаемый товар'"));
		Элементы.ИсторияОтражениеВПрослеживаемости.СписокВыбора.Добавить("ПрослеживаемыйКомплект", НСтр("ru = 'Прослеживаемый товар(ы) в составе комплекта'"));
	КонецЕсли;
	
	Для Каждого Строка Из ИсторияПрослеживаемогоТовара Цикл
		Если Строка.ПрослеживаемыйТовар Тогда
			Строка.ОтражениеВПрослеживаемости = "ПрослеживаемыйТовар";
		ИначеЕсли Строка.ПрослеживаемыйКомплект Тогда
			Строка.ОтражениеВПрослеживаемости = "ПрослеживаемыйКомплект";
		Иначе
			Строка.ОтражениеВПрослеживаемости = "Нет";
		КонецЕсли;
	КонецЦикла;

	УстановитьУсловноеОформление();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыИсторияПрослеживаемогоТовара

&НаКлиенте
Процедура ИсторияОтражениеВПрослеживаемостиПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ИсторияПрослеживаемогоТовара.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Если ТекущиеДанные.ОтражениеВПрослеживаемости = "ПрослеживаемыйТовар" Тогда
			ТекущиеДанные.ПрослеживаемыйТовар = Истина;
			ТекущиеДанные.ПрослеживаемыйКомплект = Ложь;
		ИначеЕсли ТекущиеДанные.ОтражениеВПрослеживаемости = "ПрослеживаемыйКомплект" Тогда
			ТекущиеДанные.ПрослеживаемыйТовар = Ложь;
			ТекущиеДанные.ПрослеживаемыйКомплект = Истина;
		Иначе
			ТекущиеДанные.ПрослеживаемыйТовар = Ложь;
			ТекущиеДанные.ПрослеживаемыйКомплект = Ложь;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИсторияПрослеживаемогоТовараПередУдалением(Элемент, Отказ)
	ТекущиеДанные = Элементы.ИсторияПрослеживаемогоТовара.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ТекущиеДанные.ПервоначальноеЗначение Тогда
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ИсторияПрослеживаемогоТовараПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		Если Элемент.ТекущиеДанные <> Неопределено Тогда
			
			НовыйПериод = НачалоДня(ОбщегоНазначенияКлиент.ДатаСеанса());
			
			// Получим максимальный период в таблице
			ПоследнийПериод = '00010101000000';
			Для Каждого ЗаписьИстории ИЗ ИсторияПрослеживаемогоТовара Цикл
				Если ЗаписьИстории.Период > ПоследнийПериод Тогда
					ПоследнийПериод = ЗаписьИстории.Период;
				КонецЕсли;
			КонецЦикла;
			
			Если ПоследнийПериод < '20230306' Тогда
				НовыйПериод = '20230306';
			ИначеЕсли НовыйПериод <= ПоследнийПериод Тогда
				НовыйПериод = НачалоДня(ПоследнийПериод + 60*60*24);
			КонецЕсли;
			
			Элемент.ТекущиеДанные.Период = НовыйПериод;
			Элемент.ТекущиеДанные.ОтражениеВПрослеживаемости = "Нет";
			Элемент.ТекущиеДанные.ПрослеживаемыйТовар = Ложь;
			Элемент.ТекущиеДанные.ПрослеживаемыйКомплект = Ложь;
			ЭтотОбъект.ТекущийЭлемент = Элементы.ИсторияПериод;
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура КомандаОК(Команда)
	Отказ = Ложь;
	
	Если Не Модифицированность И ИсторияОтсутствовала Тогда
		Закрыть();
		Возврат;
	КонецЕсли;

	ПроверитьЗаполнениеИстории(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РезультатВыбора = Новый Структура;
	РезультатВыбора.Вставить("ИсторияПрослеживаемогоТовара", ИсторияПрослеживаемогоТовара);
	
	ОповеститьОВыборе(РезультатВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗаполнениеИстории(Отказ)
	
	ПериодыСтрок = Новый Массив;
	
	Для Каждого Запись Из ИсторияПрослеживаемогоТовара Цикл
		
		ИндексСтроки = ИсторияПрослеживаемогоТовара.Индекс(Запись);
		ПрефиксСообщенияСтроки = "ИсторияПрослеживаемогоТовара["+ Формат(ИндексСтроки, "ЧЦ=; ЧДЦ=; ЧГ=") + "].";
		
		Если НЕ ЗначениеЗаполнено(Запись.Период) И Не Запись.ПервоначальноеЗначение Тогда
			СообщениеОбОшибке = НСтр("ru = 'Нужно указать дату начала действия'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, , ПрефиксСообщенияСтроки + "Период", , Отказ);
		КонецЕсли;
		
		Если ПериодыСтрок.Найти(Запись.Период) = Неопределено Тогда
			Если ЗначениеЗаполнено(Запись.Период) Тогда
				ПериодыСтрок.Добавить(Запись.Период);
			КонецЕсли;
		Иначе
			// Строка с такой датой уже была раньше, это ошибка.
			// Не может быть 2 строки с одинаковой датой.
			СообщениеОбОшибке = НСтр("ru = 'Уже есть запись с указанной датой сведений'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, , ПрефиксСообщенияСтроки + "Период", , Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Запись.ОтражениеВПрослеживаемости) Тогда
			СообщениеОбОшибке = НСтр("ru = 'Поле ""Отражение в прослеживаемости"" не заполнено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, , ПрефиксСообщенияСтроки + "ОтражениеВПрослеживаемости",  , Отказ);
		КонецЕсли;
		
		Если (Запись.ПрослеживаемыйТовар Или Запись.ПрослеживаемыйКомплект) И Запись.Период < '20210701' Тогда
			СообщениеОбОшибке = НСтр("ru = 'Объект не может стать прослеживаемым ранее даты вступления в силу прослеживаемости (01.07.2021 г.)'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, , ПрефиксСообщенияСтроки + "Период", , Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Закрыть();

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПризнакПервоначальногоЗначения(ТаблицаИстории)
	
	ТаблицаИстории.Сортировать("Период");
	// Первая строка должна быть первоначальным значением
	Если ТаблицаИстории.Количество() > 0 Тогда
		ПерваяСтрока = ТаблицаИстории[0];
		ПерваяСтрока.ПервоначальноеЗначение = Истина;
		ПерваяСтрока.Период = '00010101';
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();
	
	// Первоначальное значение не редактируется, только для просмотра
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ИсторияПериод");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ИсторияОтражениеВПрослеживаемости");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ИсторияПрослеживаемогоТовара.ПервоначальноеЗначение", ВидСравненияКомпоновкиДанных.Равно, Истина);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ИсторияПериод");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ИсторияПрослеживаемогоТовара.ПервоначальноеЗначение", ВидСравненияКомпоновкиДанных.Равно, Истина);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Начальное значение'"));

	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ИсторияПериод");
	
	// Все реквизиты обязательны для заполнения
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ИсторияПрослеживаемогоТовара.ПервоначальноеЗначение", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ИсторияПрослеживаемогоТовара.Период", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
	
	// ИсторияОтражениеВПрослеживаемости
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ИсторияОтражениеВПрослеживаемости");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ИсторияПрослеживаемогоТовара.ПрослеживаемыйТовар", ВидСравненияКомпоновкиДанных.Равно, Истина);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ЭтоОС", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", "Прослеживаемый товар");
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ИсторияОтражениеВПрослеживаемости");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ИсторияПрослеживаемогоТовара.ПрослеживаемыйТовар", ВидСравненияКомпоновкиДанных.Равно, Истина);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ЭтоОС", ВидСравненияКомпоновкиДанных.Равно, Истина);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", "Прослеживаемый объект");
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ИсторияОтражениеВПрослеживаемости");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ИсторияПрослеживаемогоТовара.ПрослеживаемыйКомплект", ВидСравненияКомпоновкиДанных.Равно, Истина);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", "Прослеживаемый товар(ы) в составе комплекта");

КонецПроцедуры

#КонецОбласти