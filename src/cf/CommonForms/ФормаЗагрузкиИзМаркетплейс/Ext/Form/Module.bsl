#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Организация") Тогда
		Организация = Параметры.Организация;
	Иначе
		Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	КонецЕсли;
	
	ВидМаркетплейс = Параметры.ВидМаркетплейс;
	
	Заголовок = СтрШаблон(НСтр("ru = 'Отчет о продажах %1'"),
		Строка(ВидМаркетплейс));
		
	ПериодичностьНеделя = (ВидМаркетплейс =  Перечисления.ВидыМаркетплейсов.Wildberries);
	ПериодичностьМесяц = (ВидМаркетплейс =  Перечисления.ВидыМаркетплейсов.OZON);
		
	Элементы.СписокПериодовНеделя.Видимость = ПериодичностьНеделя;
	Элементы.ПредставлениеПериодаМесяц.Видимость = ПериодичностьМесяц;
	
	Если ЗначениеЗаполнено(Организация) Тогда
		ЗаполнитьНастройки();
	КонецЕсли;
	
	Элементы.Организация.Видимость = Справочники.Организации.ИспользуетсяНесколькоОрганизаций();
	
	КлючСохраненияПоложенияОкна = ВидМаркетплейс;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ВладелецФормы = Неопределено Тогда
		Отказ = Истина;
		ТекстПредупреждения = НСтр("ru='Данная форма не может использоваться самостоятельно.
										|Форма предназначена для открытия
										|из списка документов Отчет комиссионера о продажах!'");
		ПоказатьПредупреждение(, ТекстПредупреждения, НСтр("ru='Форма загрузки из маркетплейса.'"));
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаписьНастройкаИнтеграцииМаркетплейс"
		И ЗначениеЗаполнено(Параметр) Тогда
		НастройкаИнтеграции = Параметр;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	НастройкаИнтеграции = Неопределено;
	ЗаполнитьНастройки();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура Настроить(Команда)
	
	РедактироватьНастройку();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОтчет(Команда)
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Выберите организацию, по которой требуется загрузить отчет'"),,"Организация");
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НастройкаИнтеграции) Тогда
		РедактироватьНастройку();
		Возврат;
	КонецЕсли;
	
	ПараметрыОтчета = ПараметрыОтчета(ДатаНачала, ВидМаркетплейс, НастройкаИнтеграции);
	
	Если ЗначениеЗаполнено(ПараметрыОтчета.СсылкаНаДокумент) Тогда
		
		ВопросЗавершение = Новый ОписаниеОповещения("ПерезаполнитьОтчетЗавершение", ЭтотОбъект, ПараметрыОтчета);
		ТекстВопрос = СтрШаблон(
			НСтр("ru = 'В отчетах о продажах за %1 найден документ:
			|%2'"),
			Формат(ПараметрыОтчета.ОкончаниеПериода, "ДФ=dd.MM.yyyy"),
			ПараметрыОтчета.СсылкаНаДокумент);
		
		Заголовок = СтрШаблон(НСтр("ru = 'Загрузка отчета о продажах %1'"), Строка(ВидМаркетплейс));
		СписокКнопок = Новый СписокЗначений;
		СписокКнопок.Добавить("НОВЫЙ", "Создать новый");
		СписокКнопок.Добавить("ЗАПОЛНИТЬ", "Заполнить существующий");
		СписокКнопок.Добавить("", "Отмена");
		ПоказатьВопрос(ВопросЗавершение, ТекстВопрос, СписокКнопок,,"НОВЫЙ", Заголовок);
	Иначе
		НачатьЗагрузкуОтчета(ПараметрыОтчета);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПараметрыОтчета(НачалоПериода, ВидМаркетплейс, НастройкаИнтеграции)
	
	Если ВидМаркетплейс = Перечисления.ВидыМаркетплейсов.Wildberries Тогда
		ОкончаниеПериода = КонецНедели(НачалоПериода);
	ИначеЕсли ВидМаркетплейс = Перечисления.ВидыМаркетплейсов.OZON Тогда
		ОкончаниеПериода = КонецМесяца(НачалоПериода);
	КонецЕсли;
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("НачалоПериода",       НачалоПериода);
	ПараметрыОтчета.Вставить("ОкончаниеПериода",    ОкончаниеПериода);
	ПараметрыОтчета.Вставить("ВидМаркетплейс",      ВидМаркетплейс);
	ПараметрыОтчета.Вставить("НастройкаИнтеграции", НастройкаИнтеграции);
	ПараметрыОтчета.Вставить("СсылкаНаДокумент",    Неопределено);
	
	ДанныеПоследнегоОтчета =  ДанныеПоследнегоВходящегоРозничногоОтчетаКомиссионера(НастройкаИнтеграции,
		НачалоДня(ОкончаниеПериода));
	
	ПараметрыОтчета.СсылкаНаДокумент = ДанныеПоследнегоОтчета.СсылкаНаДокумент;
	
	Возврат ПараметрыОтчета;
	
КонецФункции

&НаСервере
Процедура УстановитьПериод()
	
	ДанныеОтчетаКомиссионера = ДанныеПоследнегоВходящегоРозничногоОтчетаКомиссионера(НастройкаИнтеграции);
	
	Если ВидМаркетплейс = Перечисления.ВидыМаркетплейсов.Wildberries Тогда
		
		Элемент = Элементы.СписокПериодовНеделя;
		// Чтобы избежать дублирования элементов, очищаем список выбора в поле формы
		Элемент.СписокВыбора.Очистить();
		
		НачалоПрошлогоПериода = НачалоНедели(ТекущаяДатаСеанса() - ИнтервалМеждуОтчетамиВБ());
		//ВБ хранит данные за последние 90 дней
		ПределЗагрузки = НачалоНедели(ТекущаяДатаСеанса() - 90*86400);
		
		Для каждого Период Из СписокПериодовВБ(НачалоПрошлогоПериода, ПределЗагрузки) Цикл
			Элемент.СписокВыбора.Добавить(Период.Значение, Период.Представление);
		КонецЦикла;
		
		Если ЗначениеЗаполнено(ДанныеОтчетаКомиссионера.ДатаВходящегоДокумента) Тогда
			
			СледующийПериод = КонецНедели(ДанныеОтчетаКомиссионера.ДатаВходящегоДокумента)+1;
			ДатаНачала = Мин(СледующийПериод, НачалоПрошлогоПериода);
			
		Иначе
			ДатаНачала = НачалоПрошлогоПериода;
		КонецЕсли;
		
		ДатаНачала = Макс(ПределЗагрузки, ДатаНачала);
		
		ПредставлениеПериода = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(
			НачалоНедели(ДатаНачала), КонецНедели(ДатаНачала), Истина);
		
	ИначеЕсли ВидМаркетплейс = Перечисления.ВидыМаркетплейсов.OZON Тогда
		
		ДатаНачала = НачалоМесяца(НачалоМесяца(ТекущаяДатаСеанса())-1);
		
		Если ЗначениеЗаполнено(ДанныеОтчетаКомиссионера.ДатаВходящегоДокумента) Тогда
			СледующийПериод = КонецМесяца(ДанныеОтчетаКомиссионера.ДатаВходящегоДокумента)+1;
			ДатаНачала = Мин(ДатаНачала, СледующийПериод);
		КонецЕсли;
		
		ПредставлениеПериода = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(
			НачалоМесяца(ДатаНачала), КонецМесяца(ДатаНачала), Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНастройки()
	
	НастройкаИнтеграции = Справочники.НастройкиИнтеграцииМаркетплейс.НастройкаПоУмолчанию(Организация, ВидМаркетплейс);
	
	УстановитьПериод();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПредставлениеПериода(НачалоПериода = '00010101', КонецПериода = '00010101')
	
	ТекстПериод = "";
	
	Если ЗначениеЗаполнено(КонецПериода) Тогда 
		Если КонецПериода >= НачалоПериода Тогда
			ТекстПериод = ПредставлениеПериода(НачалоДня(НачалоПериода), КонецДня(КонецПериода), "ФП = Истина");
		Иначе
			ТекстПериод = "";
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(НачалоПериода) Тогда
		ТекстПериод = ПредставлениеПериода(НачалоДня(НачалоПериода), КонецДня(Дата(3999, 11, 11)), "ФП = Истина");
		ТекстПериод = СтрЗаменить(ТекстПериод, Сред(ТекстПериод, СтрНайти(ТекстПериод, " - ")), " - ...");
	КонецЕсли;
	
	Возврат ТекстПериод;
	
КонецФункции

&НаСервереБезКонтекста
Функция ДанныеПоследнегоВходящегоРозничногоОтчетаКомиссионера(Знач НастройкаИнтеграции, Знач ДатаОтчета = Неопределено)
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(НастройкаИнтеграции, "Владелец,Контрагент");
	
	Результат = Новый Структура();
	Результат.Вставить("СсылкаНаДокумент");
	Результат.Вставить("ДатаВходящегоДокумента");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ОтчетКомиссионераОПродажах.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	|	ОтчетКомиссионераОПродажах.Ссылка КАК СсылкаНаДокумент
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах КАК ОтчетКомиссионераОПродажах
	|ГДЕ
	|	ОтчетКомиссионераОПродажах.Организация = &Организация
	|	И ОтчетКомиссионераОПродажах.Контрагент = &Контрагент
	|	И ОтчетКомиссионераОПродажах.ВидОперации = &ВидОперации
	|	И ОтчетКомиссионераОПродажах.Проведен
	|	И &УсловиеПоДатаВходящегодокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОтчетКомиссионераОПродажах.ДатаВходящегоДокумента УБЫВ,
	|	ОтчетКомиссионераОПродажах.Дата УБЫВ";
	
	Запрос.УстановитьПараметр("Организация", Реквизиты.Владелец);
	Запрос.УстановитьПараметр("Контрагент", Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("ВидОперации", Перечисления.ВидыОперацийОтчетКомиссионера.ОтчетОРозничныхПродажах);
	Запрос.УстановитьПараметр("ДатаВходящегоДокумента", ДатаОтчета);
	
	Если ЗначениеЗаполнено(ДатаОтчета) тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
			"&УсловиеПоДатаВходящегодокумента",
			"ОтчетКомиссионераОПродажах.ДатаВходящегоДокумента  = &ДатаВходящегоДокумента");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
			"&УсловиеПоДатаВходящегодокумента",
			"ОтчетКомиссионераОПродажах.ДатаВходящегоДокумента <> ДАТАВРЕМЯ(1,1,1)");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат.ДатаВходящегоДокумента = Выборка.ДатаВходящегоДокумента;
		Результат.СсылкаНаДокумент = Выборка.СсылкаНаДокумент;
	КонецЕСли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПерезаполнитьОтчетЗавершение(Результат, ПараметрыОтчета) Экспорт
	
	Если Результат = "НОВЫЙ" Тогда
		ПараметрыОтчета.СсылкаНаДокумент = Неопределено;
	ИначеЕсли Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	НачатьЗагрузкуОтчета(ПараметрыОтчета);
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьЗагрузкуОтчета(ПараметрыОтчета)
	
	Закрыть(ПараметрыОтчета);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СписокПериодовВБ( НачалоСписка, ПределЗагрузки)
	
	СписокПериодов = Новый СписокЗначений;
	СписокПериодов.Очистить();
	
	ДатаНачала = НачалоНедели(НачалоСписка);
	ДатаОкончания = НачалоНедели(ПределЗагрузки);
	Пока ДатаНачала >= ДатаОкончания Цикл
		СписокПериодов.Добавить(ДатаНачала, ПолучитьПредставлениеПериода(ДатаНачала, КонецНедели(ДатаНачала)));
		ДатаНачала = НачалоНедели(ДатаНачала - ИнтервалМеждуОтчетамиВБ());
	КонецЦикла;
	
	Возврат СписокПериодов;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИнтервалМеждуОтчетамиВБ()
	
	Возврат 7*86400;
	
КонецФункции

&НаКлиенте
Процедура РедактироватьНастройку()
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Укажите организацию, для которой требуется настройка'"),,"Организация");
		Возврат;
	КонецЕсли;
	
	ЗначенияЗаполнения = Новый Структура();
	ЗначенияЗаполнения.Вставить("Владелец", Организация);
	ЗначенияЗаполнения.Вставить("ВидМаркетплейса", ВидМаркетплейс);
	 
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", НастройкаИнтеграции);
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	ОткрытьФорму("Справочник.НастройкиИнтеграцииМаркетплейс.Форма.ФормаЭлемента", ПараметрыФормы, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПериодаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	//ограничение API OZON
	ОграничениеСнизу = ДобавитьМесяц(НачалоМесяца(ОбщегоНазначенияКлиент.ДатаСеанса()),-5);
	
	ПараметрыВыбора = Новый Структура;
	ПараметрыВыбора.Вставить("НачалоПериода",     НачалоМесяца(ДатаНачала));
	ПараметрыВыбора.Вставить("КонецПериода",      КонецМесяца(ДатаНачала));
	ПараметрыВыбора.Вставить("ОграничениеСнизу",  ОграничениеСнизу);
	ПараметрыВыбора.Вставить("ВидПериода",        ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Месяц"));
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПериодЗавершениеВыбора", ЭтотОбъект);
	
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериодаМесяц", 
		ПараметрыВыбора, Элементы.ПредставлениеПериодаМесяц, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодЗавершениеВыбора(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора <> Неопределено Тогда
		ДатаНачала = НачалоМесяца(РезультатВыбора.НачалоПериода);
	КонецЕсли;
	
	ПредставлениеПериода = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(
			НачалоМесяца(ДатаНачала), КонецМесяца(ДатаНачала), Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеПериодаOZONОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

#КонецОбласти
