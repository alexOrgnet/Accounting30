
#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПараметрыРазмещения.КоманднаяПанель = Элементы.ГруппаКоманднаяПанель;
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ОсновнаяОрганизация = Справочники.Организации.ОрганизацияПоУмолчанию();
	
	УправлениеКассовойСменойДоступно = КассовыеСменыВызовСервераБП.ДоступноУправлениеКассовойСменой();
	НастроитьБаннерКассаНеПодключена();
	
	НастроитьВидимостьЭлементовФормы();
	
	НастроитьПодменюУправленияКассовойСменой(Элементы);
	
	АдресХранилищаНастройкиДинСпискаДляРеестра = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	
	ПомеченныеНаУдалениеСервер.СкрытьПомеченныеНаУдаление(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("ПоказатьИнформациюОПравеПримененияСпецрежима", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = КассовыеСменыКлиентБП.СобытиеВыполняетсяОперацияКассовойСмены() Тогда
		Доступность = Ложь;
	ИначеЕсли ИмяСобытия = КассовыеСменыКлиентБП.СобытиеЗавершиласьОперацияКассовойСмены() Тогда
		Доступность = Истина;
	ИначеЕсли ИмяСобытия = КассовыеСменыКлиентБП.СобытиеОшибкаОткрытияСмены() Тогда
		ПроверитьНаличиеПодключеннойКассовойТехники();
	ИначеЕсли ИмяСобытия = "ИзменениеСтатусаКассовойСмены" Тогда
		НастроитьПодменюУправленияКассовойСменой(Элементы);
	ИначеЕсли ИмяСобытия = "ОбновитьБаннеры_РозничнаяТорговля" Тогда
		ОбновитьВидимостьБаннера(Элементы);
	ИначеЕсли ИмяСобытия = "ИзменениеОсновнойОрганизации" Тогда
		Если ОсновнаяОрганизация <> Параметр Тогда
			ОсновнаяОрганизация = Параметр;
			ПодключитьОбработчикОжидания("ПоказатьИнформациюОПравеПримененияСпецрежима", 0.1, Истина);
		КонецЕсли;
	
	ИначеЕсли ИмяСобытия = "ПоказатьИнформациюОПравеПримененияСпецрежима" Тогда
		
		Если Источник <> ЭтотОбъект И Параметр = ОсновнаяОрганизация Тогда
			ПодключитьОбработчикОжидания("ПоказатьИнформациюОПравеПримененияСпецрежима", 0.1, Истина);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если СтрНачинаетсяС(ИсточникВыбора.ИмяФормы, "Обработка.ЗагрузкаИзОФД.Форма")  Тогда
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗагрузитьИзОФДПоСпискуКассЗавершение", ЭтотОбъект);
		ЗагрузкаИзОФДКлиент.ЗагрузитьИзОФДПоСпискуКасс(ВыбранноеЗначение, УникальныйИдентификатор, ОповещениеОЗавершении);
	ИначеЕсли ЗначениеЗаполнено(ОтборДокумент) Тогда
		
		ПараметрыФормы = Новый Структура;
		Если ВыбранноеЗначение = "РозничныйВозврат" Тогда
			ЗначенияЗаполнения = Новый Структура;
			ЗначенияЗаполнения.Вставить("ВидОперации",
				ПредопределенноеЗначение("Перечисление.ВидыОперацийРозничнаяПродажа.Возврат"));
			ЗначенияЗаполнения.Вставить("Основание", ОтборДокумент);
			ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
			ПараметрыФормы.Вставить("ИзменитьВидОперации", Истина);
			ИмяДокумента = "РозничнаяПродажа";
		ИначеЕсли ВыбранноеЗначение = "РозничнаяПродажа" Тогда
			ЗначенияЗаполнения = Новый Структура;
			ЗначенияЗаполнения.Вставить("ВидОперации",
				ПредопределенноеЗначение("Перечисление.ВидыОперацийРозничнаяПродажа.Продажа"));
			ЗначенияЗаполнения.Вставить("Основание", ОтборДокумент);
			ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
			ПараметрыФормы.Вставить("ИзменитьВидОперации", Истина);
			ИмяДокумента = "РозничнаяПродажа";
		Иначе
			ПараметрыФормы.Вставить("Основание", ОтборДокумент);
			ИмяДокумента = ВыбранноеЗначение;
		КонецЕсли;
		
		ОтборДокумент = Неопределено;
		ОткрытьФорму("Документ." + ИмяДокумента + ".ФормаОбъекта", ПараметрыФормы);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НапомнитьПозжеНажатие(Элемент)
	
	ОтложитьПоказНапоминанияНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодробнееНажатие(Элемент)
	
	КонтрольПраваПримененияСпецрежимаКлиент.ПодробнееНажатие(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриИзменении(Элемент)
	
	ПодключитьОбработчикОжидания("ПоказатьИнформациюОПравеПримененияСпецрежима", 0.1, Истина);
	Оповестить("ПоказатьИнформациюОПравеПримененияСпецрежима",ОсновнаяОрганизация, ЭтотОбъект);
	
	ПомеченныеНаУдалениеКлиент.ПриИзмененииСписка(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки, ИспользуютсяСтандартныеНастройки)
	
	ПомеченныеНаУдалениеСервер.УдалитьОтборПометкаУдаления(Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область КомандыУправленияКассовойСменой

&НаКлиенте
Процедура ОткрытьКассовуюСмену(Команда)
	
	Если ДоступнаРаботаСКассовойСменой() Тогда
		ОчиститьСообщения();
		КассовыеСменыКлиентБП.НачатьОткрытиеКассовойСмены(УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетОТекущемСостоянииРасчетов(Команда)
	
	Если ДоступнаРаботаСКассовойСменой() Тогда
		ОчиститьСообщения();
		Доступность = Ложь;
		
		ПараметрыОперации = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыВыполненияОперации();
		КассовыеСменыВызовСервераБП.ЗаполнитьПараметрыОперацииДляОрганизацииПоУмолчанию(ПараметрыОперации);
		
		ОповещениеЗавершения = Новый ОписаниеОповещения("ОперацияЗавершение", ЭтотОбъект);
		ОборудованиеЧекопечатающиеУстройстваКлиент.НачатьФормированиеОтчетаОТекущемСостоянииРасчетов(
			ОповещениеЗавершения, УникальныйИдентификатор, ,ПараметрыОперации);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетБезГашения(Команда)
	
	Если ДоступнаРаботаСКассовойСменой() Тогда
		ОчиститьСообщения();
		Доступность = Ложь;
		
		ПараметрыОперации = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыВыполненияОперации();
		КассовыеСменыВызовСервераБП.ЗаполнитьПараметрыОперацииДляОрганизацииПоУмолчанию(ПараметрыОперации);
			
		ОповещениеЗавершения = Новый ОписаниеОповещения("ОперацияЗавершение", ЭтотОбъект);
		ОборудованиеЧекопечатающиеУстройстваКлиент.НачатьФормированиеОтчетаБезГашения(
			ОповещениеЗавершения, УникальныйИдентификатор, ,ПараметрыОперации);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьКассовуюСмену(Команда)
	
	Если ДоступнаРаботаСКассовойСменой() Тогда
		ОчиститьСообщения();
		КассовыеСменыКлиентБП.ЗакрытьСмену(УникальныйИдентификатор, Список.КомпоновщикНастроек);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура СоздатьРозничнаяПродажаЧек(Команда)
	
	КлючеваяОперация = "СозданиеФормыРозничнаяПродажа";
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
	
	ТекущаяСтрока = Элементы.Список.ТекущиеДанные;
	
	СтруктураПараметров = Новый Структура;
	
	ЗначенияЗаполнения = ОбщегоНазначенияБПВызовСервера.ЗначенияЗаполненияДинамическогоСписка(Список.КомпоновщикНастроек);
	ЗначенияЗаполнения.Вставить("ВидОперации", ПредопределенноеЗначение("Перечисление.ВидыОперацийРозничнаяПродажа.Продажа"));
	Если ТекущаяСтрока <> Неопределено
		И ТекущаяСтрока.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРозничнаяПродажа.Предоплата") Тогда
		
		ЗначенияЗаполнения.Вставить("Основание", ТекущаяСтрока.Ссылка);
	КонецЕсли;
	
	СтруктураПараметров.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	СтруктураПараметров.Вставить("ИзменитьВидОперации", Истина);
	
	ОткрытьФорму("Документ.РозничнаяПродажа.Форма.ФормаДокументаОбщая", СтруктураПараметров, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВозвратПоЧеку(Команда)
	
	КлючеваяОперация = "СозданиеФормыРозничнаяПродажа";
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
	
	ТекущаяСтрока = Элементы.Список.ТекущиеДанные;
	
	СтруктураПараметров = Новый Структура;
	ЗначенияЗаполнения = Новый Структура;
	
	ВидыОперацийДляВозврата = Новый Массив;
	ВидыОперацийДляВозврата.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийРозничнаяПродажа.Предоплата"));
	ВидыОперацийДляВозврата.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийРозничнаяПродажа.Продажа"));
	
	
	ЗначенияЗаполнения.Вставить("ВидОперации", ПредопределенноеЗначение("Перечисление.ВидыОперацийРозничнаяПродажа.Возврат"));
	Если ТекущаяСтрока <> Неопределено
		И ВидыОперацийДляВозврата.Найти(ТекущаяСтрока.ВидОперации) <> Неопределено Тогда
		
		ЗначенияЗаполнения.Вставить("Основание", ТекущаяСтрока.Ссылка);
	КонецЕсли;
	
	СтруктураПараметров.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	СтруктураПараметров.Вставить("ИзменитьВидОперации", Истина);
	
	ОткрытьФорму("Документ.РозничнаяПродажа.Форма.ФормаДокументаОбщая", СтруктураПараметров, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодключаемоеОборудование(Команда)
	
	ОткрытьФорму("Справочник.ПодключаемоеОборудование.ФормаСписка", , , , , ,
		Новый ОписаниеОповещения("ОповещениеОбновленияБаннера", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВидовОплат(Команда)
	
	ОткрытьФорму("Справочник.ВидыОплатОрганизаций.ФормаСписка", , , , , ,
		Новый ОписаниеОповещения("ОповещениеОбновленияБаннера", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНаОсновании(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КлючНазначенияИспользования",
		?(ПустаяСтрока(КлючНазначенияИспользования), "ДокументыРозничнойТорговли", КлючНазначенияИспользования));
	
	Если ТекущиеДанные <> Неопределено Тогда
		ОтборДокумент = ТекущиеДанные.Ссылка;
		ПараметрыФормы.Вставить("Основание", ТекущиеДанные.Ссылка);
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.ВыборТипаДокументаПоОснованию", ПараметрыФормы, ЭтотОбъект, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзОФД(Команда)
	СписокКассОФДПоОрганизации = ЗагрузкаИзОФДВызовСервера.СписокКассОФДПоОрганизации(ОсновнаяОрганизация);

	Если ЗначениеЗаполнено(СписокКассОФДПоОрганизации) > 0 Тогда
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗагрузитьИзОФДПоСпискуКассЗавершение", ЭтотОбъект);
		ЗагрузкаИзОФДКлиент.ЗагрузитьИзОФДПоСпискуКасс(СписокКассОФДПоОрганизации, УникальныйИдентификатор, ОповещениеОЗавершении);
	Иначе
		ОткрытьФорму("Обработка.ЗагрузкаИзОФД.Форма",,ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастроитьЗагрузкуИзОФД(Команда)
	ОткрытьФорму("Обработка.ЗагрузкаИзОФД.Форма",,ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЧекНаПредоплату(Команда)
	КлючеваяОперация = "СозданиеФормыРозничнаяПродажа";
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);

	СтруктураПараметров = Новый Структура;
	
	ЗначенияЗаполнения = ОбщегоНазначенияБПВызовСервера.ЗначенияЗаполненияДинамическогоСписка(Список.КомпоновщикНастроек);
	ЗначенияЗаполнения.Вставить("ВидОперации", ПредопределенноеЗначение("Перечисление.ВидыОперацийРозничнаяПродажа.Предоплата"));
	
	СтруктураПараметров.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	СтруктураПараметров.Вставить("ИзменитьВидОперации", Истина);
	
	ОткрытьФорму("Документ.РозничнаяПродажа.Форма.ФормаДокументаОбщая", СтруктураПараметров, ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеФункцииИПроцедуры

#Область СлужебныеПроцедурыИФункцииБСП

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	Если УправлениеПечатьюБПКлиентСервер.ЭтоИмяКомандыРеестрДокументов(Команда.Имя) Тогда
		НастройкиДинамическогоСписка();
	КонецЕсли;
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
	ОбновитьДоступностьКомандыСоздатьНаОсновании();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДоступностьКомандыСоздатьНаОсновании()
	
	Элементы.СоздатьНаОсновании.Доступность = Элементы.Список.ТекущаяСтрока <> Неопределено;
	
КонецПроцедуры

#КонецОбласти

#Область УправлениеВидимостьюИДоступностьюЭлементовФормы

&НаСервере
Процедура НастроитьВидимостьЭлементовФормы()
	
	ОбновитьВидимостьБаннера(Элементы);
	
	ДоступСозданиеРозничнойПродажи = ПравоДоступа("ИнтерактивноеДобавление", Метаданные.Документы.РозничнаяПродажа);
	
	Если ОбщегоНазначения.ОбъектМетаданныхДоступенПоФункциональнымОпциям(Метаданные.Документы.РозничнаяПродажа) Тогда
		Элементы.ЧекСоздать.Видимость = ДоступСозданиеРозничнойПродажи;
		Элементы.ВозвратСоздать.Видимость = ДоступСозданиеРозничнойПродажи;
	КонецЕсли;
	
	Элементы.ФормаГруппаЗагрузитьИзОФД.Видимость = ЗагрузкаИзОФД.ЗагрузкаИзОФДДоступна();
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьПодменюУправленияКассовойСменой(Элементы)
	
	Параметры = ПараметрыПодменюУправленияКассовойСменой();
	Если Параметры <> Неопределено Тогда
		ДоступныеКоманды = Параметры.ДоступныеКоманды;
		Для Каждого Команда Из Элементы.КассоваяСменаПодменю.ПодчиненныеЭлементы Цикл
			Команда.Доступность
				= ДоступныеКоманды.Найти(Команда.Имя) <> Неопределено;
		КонецЦикла;
		Элементы.КассоваяСменаПодменю.Картинка = Параметры.КартинкаСостоянияСмены;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПараметрыПодменюУправленияКассовойСменой()
	
	Возврат ЖурналыДокументов.РозничныеПродажи.ПараметрыПодменюУправленияКассовойСменой();
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьВидимостьБаннера(Элементы)
	
	Баннер = ИмяВидимогоБаннераНаСервере();
	Если ЗначениеЗаполнено(Баннер)
		И Элементы.БаннерСтраницы.ПодчиненныеЭлементы.Найти(Баннер) <> Неопределено Тогда
		Элементы.БаннерСтраницы.ТекущаяСтраница = Элементы[Баннер];
	Иначе
		Элементы.БаннерСтраницы.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура НастроитьБаннерКассаНеПодключена()
	
	НастройкиБаннера = ЖурналыДокументов.РозничныеПродажи.НастройкиБаннераКассаНеПодключена();
	Элементы.НадписьКассаНеПодключена.Заголовок = НастройкиБаннера.ЗаголовокБаннера;
	Элементы.ОткрытьПодключаемоеОборудование.Видимость = НастройкиБаннера.ПодключениеКассыДоступно;
	
КонецПроцедуры

// Проверяет есть ли хоть один экземпляр подключенной контрольно-кассовой техники
// и в случае его отсутствия предлагает пользователю перейти к настройке
// подключаемого оборудования
//
&НаКлиенте
Процедура ПроверитьНаличиеПодключеннойКассовойТехники()
	
	СписокОборудованияОтбор = МенеджерОборудованияКлиентСервер.СписокОборудованияОтбор();
	СписокОборудованияОтбор.ТипыПО = МенеджерОборудованияКлиентСерверБП.ТипыКонтрольноКассовойТехники();
	
	ПодключеннаяКассоваяТехника = МенеджерОборудованияВызовСервера.СписокОборудования(СписокОборудованияОтбор);
	Если ПодключеннаяКассоваяТехника.Количество() = 0 Тогда
		Оповещение = Новый ОписаниеОповещения("ПерейтиКПодключаемомуОборудованиюЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, НСтр("ru =
			|'Касса не подключена, работа с кассовой сменой недоступна.
			|Перейти к подключению оборудования?'"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ДоступнаРаботаСКассовойСменой()
	
	Если Не УправлениеКассовойСменойДоступно Тогда
		ПоказатьПредупреждение( , НСтр("ru='Недостаточно прав для выполнения операции'"));
	КонецЕсли;
	Возврат УправлениеКассовойСменойДоступно;
	
КонецФункции

&НаКлиенте
Процедура ОперацияЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	Доступность = Истина;
	
	Если РезультатВыполнения <> Неопределено И Не РезультатВыполнения.Результат Тогда
		ТекстСообщения = РезультатВыполнения.ОписаниеОшибки;
		Если ЗначениеЗаполнено(ТекстСообщения) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОбновленияБаннера(Результат = Неопределено, Параметры = Неопределено) Экспорт
	
	Оповестить("ОбновитьБаннеры_РозничнаяТорговля");
	
КонецПроцедуры

&НаСервере
Процедура НастройкиДинамическогоСписка()
	
	Отчеты.РеестрДокументов.НастройкиДинамическогоСписка(ЭтотОбъект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИмяВидимогоБаннераНаСервере() Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ВедетсяРозничнаяТорговля") Тогда
		ИмяБаннера = "";
	Иначе
		ИмяБаннера = ЖурналыДокументов.РозничныеПродажи.ИмяВидимогоБаннера_РозничнаяТорговля();
	КонецЕсли;
	
	Возврат ИмяБаннера;
	
КонецФункции

&НаКлиенте
Процедура ПерейтиКПодключаемомуОборудованиюЗавершение(Ответ, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ОткрытьПодключаемоеОборудование(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

#Область ПравоПримененияСпецрежима

&НаКлиенте
Процедура ПоказатьИнформациюОПравеПримененияСпецрежима()
	
	Если Не КонтрольПраваПримененияСпецрежимаКлиент.Контролировать(ОсновнаяОрганизация) Тогда
		Элементы.ИнформацияОПравеПримененияСпецрежима.Видимость = Ложь;
	Иначе
		ПоказатьИнформациюОПравеПримененияСпецрежимаНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьИнформациюОПравеПримененияСпецрежимаНаСервере()
	
	ИнформацияОПравеПримененияСпецрежима = КонтрольПраваПримененияСпецрежима.ИнформацияОПравеПримененияСпецрежима(
		ОсновнаяОрганизация, 
		КонтрольПраваПримененияСпецрежима.ИмяПоказателяСпецрежимаДоходы());
		
	СледующееЗначениеНапоминания         = ИнформацияОПравеПримененияСпецрежима.СледующееЗначениеНапоминания;
	СсылкаНаПояснение                    = ИнформацияОПравеПримененияСпецрежима.СсылкаНаПояснение;
	
	Элементы.ИнформацияОПравеПримененияСпецрежима.Видимость = ИнформацияОПравеПримененияСпецрежима.Показать;
	Элементы.ИнформацияОПравеПримененияСпецрежима.ЦветФона = ИнформацияОПравеПримененияСпецрежима.ЦветФонаГруппы;
	Элементы.ТекстИнформации.Заголовок = ИнформацияОПравеПримененияСпецрежима.ТекстИнформации;
	Элементы.ТекстИнформацииРасширеннаяПодсказка.Заголовок = ИнформацияОПравеПримененияСпецрежима.ПодсказкаТекстИнформации;
	
	Элементы.Подробнее.Видимость       = ЗначениеЗаполнено(СсылкаНаПояснение);
	
	Элементы.НапомнитьПозже.Заголовок  = ИнформацияОПравеПримененияСпецрежима.ТекстНапомнитьПозже;
	Элементы.НапомнитьПозже.Видимость  = ИнформацияОПравеПримененияСпецрежима.ОтображатьНапоминание;
	
КонецПроцедуры

&НаСервере
Процедура ОтложитьПоказНапоминанияНаСервере()
	
	КонтрольПраваПримененияСпецрежима.ОтложитьПоказНапоминания(
		ОсновнаяОрганизация, 
		КонтрольПраваПримененияСпецрежима.ИмяПоказателяСпецрежимаДоходы(), 
		СледующееЗначениеНапоминания);
		
	Элементы.ИнформацияОПравеПримененияСпецрежима.Видимость = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ЗагрузкаИзОФД

&НаКлиенте
Процедура ЗагрузитьИзОФДПоСпискуКассЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если НЕ ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьУсловноеОформление(Результат);
КонецПроцедуры


&НаСервере
Процедура УстановитьУсловноеОформление(ВыделяемыеЗначения = Неопределено)
	
	УсловноеОформление.Элементы.Очистить();
	
	Если НЕ ЗначениеЗаполнено(ВыделяемыеЗначения) Тогда
		Возврат;
	КонецЕсли;
	
	СписокВыделенияЗначений = Новый СписокЗначений();
	СписокВыделенияЗначений.ЗагрузитьЗначения(ВыделяемыеЗначения);
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "Список");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Список.Ссылка", ВидСравненияКомпоновкиДанных.ВСписке, СписокВыделенияЗначений);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(Новый Шрифт(),,, Истина));
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти