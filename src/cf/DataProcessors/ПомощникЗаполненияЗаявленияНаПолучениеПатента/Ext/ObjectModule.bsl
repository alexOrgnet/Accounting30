#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если СтавкаНалога = УчетПСНКлиентСервер.НалоговаяСтавкаПоУмолчанию() Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НормаЗакона");
	КонецЕсли;
	
	Если Не РегистрацияНовогоБизнеса И Не КодНалоговогоОрганаНаходитсяВРегионеРегистрации() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Код инспекции не принадлежит региону регистрации!'"),, "КодНалоговогоОргана", "Объект", Отказ);
	КонецЕсли;
	
	Классификатор =
		Обработки.ПомощникЗаполненияЗаявленияНаПолучениеПатента.КлассификаторВидовПредпринимательскойДеятельностиПСН(
			ДатаНачала);
	
	ВидДеятельности = Классификатор.Найти(КодВидаДеятельности, "Код");
	Если ВидДеятельности = Неопределено Тогда
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Неправильно задан вид деятельности!'"),, "КодВидаДеятельности", "Объект", Отказ);
	Иначе
		Если ВидДеятельности.УказатьОбъекты Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ТранспортныеСредства");
			ПроверитьКорректностьВводаАдресов("Объекты", НСтр("ru = 'Сведения об объектах'"), Отказ);
		ИначеЕсли ВидДеятельности.ЭтоПеревозкаГрузов Или ВидДеятельности.ЭтоперевозкаПассажиров Тогда
			МассивНепроверяемыхРеквизитов.Добавить("Объекты");
			Если ВидДеятельности.ЭтоПеревозкаГрузов Тогда
				МассивНепроверяемыхРеквизитов.Добавить("ТранспортныеСредства.Количество");
			Иначе
				МассивНепроверяемыхРеквизитов.Добавить("ТранспортныеСредства.Грузоподъемность");
			КонецЕсли;
		Иначе
			МассивНепроверяемыхРеквизитов.Добавить("Объекты");
			МассивНепроверяемыхРеквизитов.Добавить("ТранспортныеСредства");
			ПроверитьКорректностьВводаАдресов("Адреса", НСтр("ru = 'Адреса места осуществления деятельности'"), Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Если РегистрацияНовогоБизнеса Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ДатаНачала");
		
	ИначеЕсли ЗначениеЗаполнено(ДатаНачала) И ЗначениеЗаполнено(ДатаОкончания) Тогда
		
		Если ДатаНачала > ДатаОкончания Тогда
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru = 'Дата окончания не может быть ранее даты начала'"),, "ДатаОкончания", "Объект", Отказ);
		ИначеЕсли Год(ДатаОкончания) <> Год(ДатаНачала) Тогда
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru = 'Срок действия патента может быть только в пределах одного календарного года'"),,
					"ДатаОкончания", "Объект", Отказ);
		Иначе
			МинимальнаяДатаОкончания
				= Обработки.ПомощникЗаполненияЗаявленияНаПолучениеПатента.МинимальнаяДатаОкончанияПатента(ДатаНачала);
			Если ДатаОкончания < МинимальнаяДатаОкончания Тогда
				ОбщегоНазначения.СообщитьПользователю(
					НСтр("ru = 'Срок действия патента должен быть не менее одного календарного месяца'"),,
						"ДатаОкончания", "Объект", Отказ);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция КодНалоговогоОрганаНаходитсяВРегионеРегистрации()
	
	КодРегионаПоНалоговомуОргану = ДанныеГосударственныхОрганов.КодРегионаПоКодуНалоговогоОргана(КодНалоговогоОргана);
	КодРегионаРегистрации = УчетПСНКлиентСервер.КодРегионаСУчетомОбъединенияРегионов(КодРегиона);
	
	Возврат (КодРегионаРегистрации = КодРегионаПоНалоговомуОргану);
	
КонецФункции

Процедура ПроверитьКорректностьВводаАдресов(ИмяТабличнойЧасти, ИмяРазделаФормы, Отказ)
	
	Если ЭтотОбъект[ИмяТабличнойЧасти].Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоОбъекты = ИмяТабличнойЧасти = "Объекты";
	Если ЭтоОбъекты Тогда
		ОбъектыБезАдреса  = Обработки.ПомощникЗаполненияЗаявленияНаПолучениеПатента.ВидыОбъектовБезАдреса();
		ОбъектыБезПлощади = Обработки.ПомощникЗаполненияЗаявленияНаПолучениеПатента.ВидыОбъектовБезПлощади();
	КонецЕсли;
	
	КодНО = "";
	
	ШаблонПоляОшибки = "%1[%2].%3";
	ШаблонАдресНекорректный  = НСтр("ru = 'Указанный адрес не принадлежит региону регистрации %1: строка №%2 списка ""%3""'");
	ШаблонНеЗаполненАдрес    = НСтр("ru = 'Не заполнена колонка ""Адрес"" в строке №%1 списка ""%2""'");
	ШаблонНеЗаполненаПлощадь = НСтр("ru = 'Не заполнена колонка ""Площадь"" в строке №%1 списка ""%2""'");
	
	Если КодВидаДеятельности = Обработки.ПомощникЗаполненияЗаявленияНаПолучениеПатента.ВидДеятельностиТорговляБезТорговогоЗала() Тогда
		ИсключитьПроверкуПлощади = Истина;
	Иначе
		ИсключитьПроверкуПлощади = Ложь;
	КонецЕсли;
	
	Для Каждого ТекСтрока Из ЭтотОбъект[ИмяТабличнойЧасти] Цикл
		
		ПустойАдрес = ПустаяСтрока(ТекСтрока.Адрес);
		
		Если Не ПустойАдрес Тогда
			
			НаименованиеРегиона = РаботаСАдресами.РегионАдресаКонтактнойИнформации(ТекСтрока.Адрес);
			ТекСтрокаКодРегиона = АдресныйКлассификатор.КодРегионаПоНаименованию(НаименованиеРегиона);
			Если Число(КодРегиона) <> ТекСтрокаКодРегиона Тогда
				НаименованиеРегионРегистрации = АдресныйКлассификатор.НаименованиеРегионаПоКоду(КодРегиона);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтрШаблон(ШаблонАдресНекорректный, НаименованиеРегионРегистрации, ТекСтрока.НомерСтроки, ИмяРазделаФормы),,
					СтрШаблон(ШаблонПоляОшибки, ИмяТабличнойЧасти, ТекСтрока.НомерСтроки - 1, "АдресСтрокой"),
					"Объект",
					Отказ);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЭтоОбъекты И ПустойАдрес И ОбъектыБезАдреса.НайтиПоЗначению(ТекСтрока.ВидОбъекта) = Неопределено Тогда 
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрШаблон(ШаблонНеЗаполненАдрес, ТекСтрока.НомерСтроки, ИмяРазделаФормы),,
				СтрШаблон(ШаблонПоляОшибки, ИмяТабличнойЧасти, ТекСтрока.НомерСтроки - 1, "АдресСтрокой"),
				"Объект",
				Отказ);
			
		КонецЕсли;
		
		Если ЭтоОбъекты И ТекСтрока.Площадь = 0
			И ОбъектыБезПлощади.НайтиПоЗначению(ТекСтрока.ВидОбъекта) = Неопределено
			И Не ИсключитьПроверкуПлощади Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтрШаблон(ШаблонНеЗаполненаПлощадь, ТекСтрока.НомерСтроки, ИмяРазделаФормы),,
				СтрШаблон(ШаблонПоляОшибки, ИмяТабличнойЧасти, ТекСтрока.НомерСтроки - 1, "Площадь"),
				"Объект",
				Отказ);
			
		КонецЕсли;
			
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли