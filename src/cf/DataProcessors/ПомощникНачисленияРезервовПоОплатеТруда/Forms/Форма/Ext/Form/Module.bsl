
#Область ОбъявлениеПеременных

&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МожноРедактировать = ПравоДоступа("Редактирование", Метаданные.Документы.РезервыПоОплатеТруда);
	
	ТолькоПросмотр = Параметры.ТолькоПросмотр = Истина
		Или Не МожноРедактировать;
	
	Параметры.Свойство("Организация",      Объект.Организация);
	Параметры.Свойство("МесяцНачисления",  Объект.МесяцНачисления);
	Параметры.Свойство("КонтекстныйВызов", КонтекстныйВызов);
	Параметры.Свойство("ИсточникВызова",   ИсточникВызова);
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		Объект.Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.МесяцНачисления) Тогда
		РабочаяДатаПользователя = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
		Если РабочаяДатаПользователя = НачалоДня(ТекущаяДатаСеанса()) Тогда
			Объект.МесяцНачисления = НачалоМесяца(ТекущаяДатаСеанса() - 21*24*60*60);
		Иначе
			Объект.МесяцНачисления = НачалоМесяца(РабочаяДатаПользователя);
		КонецЕсли;
	КонецЕсли;
	
	ПредставлениеПериодаРегистрации = ВыборПериодаКлиентСервер.ПолучитьПредставлениеПериодаОтчета(
										Перечисления.ДоступныеПериодыОтчета.Месяц,
										НачалоМесяца(Объект.МесяцНачисления),
										КонецМесяца(Объект.МесяцНачисления));
	
	
	НаименованиеСокращенное = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Организация, "НаименованиеСокращенное");
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Начисление резервов по оплате труда за %1 г. (%2)'"),
																		ПредставлениеПериодаРегистрации,
																		НаименованиеСокращенное);
	
	
	РезервыОтпусковАрхивные =
		Не УчетЗарплаты.ЕстьНастройкиРезерваОтпусков(Объект.Организация, Объект.МесяцНачисления)
		И УчетЗарплаты.ВедетсяУчетРезервовОтпусков(Объект.Организация, Объект.МесяцНачисления);
	
	ВедетсяУчетРезервовОтпусков   = УчетЗарплаты.ВедетсяУчетРезервовОтпусков(Объект.Организация, Объект.МесяцНачисления);
	ВедетсяУчетРезервовПремий     = УчетЗарплаты.ВедетсяУчетРезервовПремий(Объект.Организация, Объект.МесяцНачисления);
	ВедетсяУчетРезервовОтпусковНУ = УчетЗарплаты.ВедетсяУчетРезервовОтпусковНУ(Объект.Организация, Объект.МесяцНачисления);
	ВедетсяУчетРезервовПремийНУ   = УчетЗарплаты.ВедетсяУчетРезервовПремийНУ(Объект.Организация, Объект.МесяцНачисления);
	
	Элементы.ГруппаРезервыОтпусков.Видимость                 = ВедетсяУчетРезервовОтпусков;
	Элементы.ОписаниеРасчетАрхивное.Видимость                = РезервыОтпусковАрхивные;
	Элементы.ОписаниеРасчетРезервОтпусков.Видимость          = Не РезервыОтпусковАрхивные;
	Элементы.ГруппаРезервыПремий.Видимость                   = ВедетсяУчетРезервовПремий;
	Элементы.ДействиеРезервыОтпусковИнвентаризация.Видимость = Месяц(Объект.МесяцНачисления) = 12;
	Элементы.ДействиеРезервыПремийИнвентаризация.Видимость   = Месяц(Объект.МесяцНачисления) = 12;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Результат = СформироватьДокументыНаСервере();
	
	Если НЕ Результат.ЗаданиеВыполнено Тогда
		ИдентификаторЗадания = Результат.ИдентификаторЗадания;
		АдресХранилища       = Результат.АдресХранилища;
		
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 0.5, Истина);
		ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ЭтаФорма, ИдентификаторЗадания);
	Иначе
		ЗагрузитьРезультат();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Оповестить("ОбновитьЗакрытиеМесяца");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДействиеРезервыОтпусковАрхивныеНажатие(Элемент)
	
	ГиперссылкаНажатие("Документы_РезервОтпусков", Ложь, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ДействиеРезервыОтпусковНачислениеНажатие(Элемент)
	
	ГиперссылкаНажатие("Документы_РезервОтпусков", Ложь, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ДействиеРезервыОтпусковИнвентаризацияНажатие(Элемент)
	
	ГиперссылкаНажатие("Документы_РезервОтпусков", Истина, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ДействиеРезервыПремийНачислениеНажатие(Элемент)
	
	ГиперссылкаНажатие("Документы_РезервПремий", Ложь, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ДействиеРезервыПремийИнвентаризацияНажатие(Элемент)
	
	ГиперссылкаНажатие("Документы_РезервПремий", Истина, Элемент);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СправкаРасчетРезервыОтпусковАрхивное(Команда)
	
	ФормаОтчета = ПолучитьФорму("Отчет.СправкаРасчетРезервыОтпусков.Форма.ФормаОтчета",
		Новый Структура("КлючНазначенияИспользования", "РегламентнаяОперация"));
		
	ПредставлениеПериодаРегистрации = ВыборПериодаКлиентСервер.ПолучитьПредставлениеПериодаОтчета(
		ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Месяц"),
		НачалоМесяца(Объект.МесяцНачисления),
		КонецМесяца(Объект.МесяцНачисления));
		
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Организация",            Объект.Организация);
	ПараметрыОтчета.Вставить("НачалоПериода",          НачалоМесяца(Объект.МесяцНачисления));
	ПараметрыОтчета.Вставить("КонецПериода",           КонецМесяца(Объект.МесяцНачисления));
	ПараметрыОтчета.Вставить("Период",                 ПредставлениеПериодаРегистрации);
	ПараметрыОтчета.Вставить("НаборПоказателейОтчета", 1);
	ПараметрыОтчета.Вставить("ВыводитьЗаголовок",      Истина);
	ПараметрыОтчета.Вставить("ВыводитьПодвал",         Истина);
	ПараметрыОтчета.Вставить("СНачалаГода",            Ложь);
	ПараметрыОтчета.Вставить("ПолеОрганизация",        Объект.Организация);
	
	ФормаОтчета.ОткрытьИСформировать(ПараметрыОтчета);
	
КонецПроцедуры

&НаКлиенте
Процедура СправкаРасчетРезервыОтпусков(Команда)
	
	ПечатьДокументов("Документы_РезервОтпусков", ВедетсяУчетРезервовОтпусковНУ);
	
КонецПроцедуры

&НаКлиенте
Процедура СправкаРасчетРезервовПремий(Команда)
	
	ПечатьДокументов("Документы_РезервПремий", ВедетсяУчетРезервовПремийНУ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьИменаРазделов()
	
	// Начисления
	НачислениеОтсутствует = СтрШаблон(НСтр("ru = '<Отсутствует начисление резерва за %1 г.>'"), Формат(Объект.МесяцНачисления, "ДФ='ММММ гггг'"));
	НачислениеИмя = СтрШаблон(НСтр("ru = 'Начисление резерва за %1 г.'"), Формат(Объект.МесяцНачисления, "ДФ='ММММ гггг'"));
	
	МассивСтрок = Документы_РезервОтпусков.НайтиСтроки(Новый Структура("Инвентаризация", Ложь));
	Если МассивСтрок.Количество() = 0 Тогда
		ЗаголовокЭлемента = НачислениеОтсутствует;
		ДоступностьЭлемента = Ложь;
	Иначе
		ЗаголовокЭлемента = НачислениеИмя;
		ДоступностьЭлемента = Истина;
	КонецЕсли;
	Элементы.ДействиеРезервыОтпусковАрхивные.Заголовок     = ЗаголовокЭлемента;
	Элементы.ДействиеРезервыОтпусковАрхивные.Доступность   = ДоступностьЭлемента;
	Элементы.ДействиеРезервыОтпусковНачисление.Заголовок   = ЗаголовокЭлемента;
	Элементы.ДействиеРезервыОтпусковНачисление.Доступность = ДоступностьЭлемента;
	
	МассивСтрок = Документы_РезервПремий.НайтиСтроки(Новый Структура("Инвентаризация", Ложь));
	Если Документы_РезервПремий.Количество() = 0 Тогда
		ЗаголовокЭлемента = НачислениеОтсутствует;
		ДоступностьЭлемента = Ложь;
	Иначе
		ЗаголовокЭлемента = НачислениеИмя;
		ДоступностьЭлемента = Истина;
	КонецЕсли;
	Элементы.ДействиеРезервыПремийНачисление.Заголовок = ЗаголовокЭлемента;
	Элементы.ДействиеРезервыПремийНачисление.Доступность = ДоступностьЭлемента;
	
	// Инвентаризация
	НачислениеОтсутствует = СтрШаблон(НСтр("ru = '<Отсутствует инвентаризация резерва на %1 г.>'"), Формат(КонецГода(Объект.МесяцНачисления), "ДФ='дд ММММ гггг'"));
	НачислениеИмя = СтрШаблон(НСтр("ru = 'Инвентаризация резерва на %1 г.'"), Формат(КонецГода(Объект.МесяцНачисления), "ДФ='дд ММММ гггг'"));
	
	МассивСтрок = Документы_РезервОтпусков.НайтиСтроки(Новый Структура("Инвентаризация", Истина));
	Если МассивСтрок.Количество() = 0 Тогда
		ЗаголовокЭлемента = НачислениеОтсутствует;
		ДоступностьЭлемента = Ложь;
	Иначе
		ЗаголовокЭлемента = НачислениеИмя;
		ДоступностьЭлемента = Истина;
	КонецЕсли;
	Элементы.ДействиеРезервыОтпусковИнвентаризация.Заголовок   = ЗаголовокЭлемента;
	Элементы.ДействиеРезервыОтпусковИнвентаризация.Доступность = ДоступностьЭлемента;
	
	МассивСтрок = Документы_РезервПремий.НайтиСтроки(Новый Структура("Инвентаризация", Истина));
	Если Документы_РезервПремий.Количество() = 0 Тогда
		ЗаголовокЭлемента = НачислениеОтсутствует;
		ДоступностьЭлемента = Ложь;
	Иначе
		ЗаголовокЭлемента = НачислениеИмя;
		ДоступностьЭлемента = Истина;
	КонецЕсли;
	Элементы.ДействиеРезервыПремийИнвентаризация.Заголовок = ЗаголовокЭлемента;
	Элементы.ДействиеРезервыПремийИнвентаризация.Доступность = ДоступностьЭлемента;
	
КонецПроцедуры

&НаСервере
Функция СформироватьДокументыНаСервере()
	
	ПараметрыОбработки = Обработки.ПомощникНачисленияРезервовПоОплатеТруда.ПараметрыФормированияДокументов();
	ПараметрыОбработки.Вставить("Организация",                 Объект.Организация);
	ПараметрыОбработки.Вставить("МесяцНачисления",             Объект.МесяцНачисления);
	ПараметрыОбработки.Вставить("Документы_РезервОтпусков",    РеквизитФормыВЗначение("Документы_РезервОтпусков"));
	ПараметрыОбработки.Вставить("Документы_РезервПремий",      РеквизитФормыВЗначение("Документы_РезервПремий"));
	ПараметрыОбработки.Вставить("ВедетсяУчетРезервовОтпусков", ВедетсяУчетРезервовОтпусков);
	ПараметрыОбработки.Вставить("ВедетсяУчетРезервовПремий",   ВедетсяУчетРезервовПремий);
	ПараметрыОбработки.Вставить("ТолькоПросмотр",              ТолькоПросмотр);
	ПараметрыОбработки.Вставить("ПодготовитьДанные",           Истина);
	
	НаименованиеЗадания = НСтр("ru = 'Помощник начисления резервов по оплате труда: формирование документов'");
	Результат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
			УникальныйИдентификатор,
			"Обработки.ПомощникНачисленияРезервовПоОплатеТруда.СформироватьДокументы",
			ПараметрыОбработки, 
			НаименованиеЗадания);
			
		АдресХранилища = Результат.АдресХранилища;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗаданиеВыполнено(ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания);
	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьРезультат()
	
	ЗагрузитьРезультатНаСервере();
	Элементы.СтраницыСобытий.ТекущаяСтраница = Элементы.СтраницаСобытияРабочая;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьРезультатНаСервере()
	
	Результат = ПолучитьИзВременногоХранилища(АдресХранилища);
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		ЗначениеВРеквизитФормы(Результат.Документы_РезервОтпусков, "Документы_РезервОтпусков");
		ЗначениеВРеквизитФормы(Результат.Документы_РезервПремий, "Документы_РезервПремий");
	КонецЕсли;
	
	СформироватьИменаРазделов();
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаНажатие(ИмяТаблицы, Инвентаризация, Элемент)
	
	МассивСтрок = ЭтотОбъект[ИмяТаблицы].НайтиСтроки(Новый Структура("Инвентаризация", Инвентаризация));
	Если МассивСтрок.Количество() = 1 Тогда
		ПоказатьЗначение(, МассивСтрок[0].Документ);
	ИначеЕсли МассивСтрок.Количество() > 1 Тогда
		СписокВыбора = Новый СписокЗначений;
		Для Каждого ЗначениеМассива Из МассивСтрок Цикл
			СписокВыбора.Добавить(ЗначениеМассива.Документ, ЗначениеМассива.ДокументПредставление);
		КонецЦикла;
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьДокументЗавершение", ЭтотОбъект);
		ПоказатьВыборИзМеню(ОписаниеОповещения, СписокВыбора, Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьДокументЗавершение(Результат, Параметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ПоказатьЗначение(, Результат.Значение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьДокументов(ИмяТаблицы, ПечататьНУ)
	
	ПараметрыКоманды = Новый Массив;
	Для Каждого СтрокаТаблицы Из ЭтотОбъект[ИмяТаблицы] Цикл
		ПараметрыКоманды.Добавить(СтрокаТаблицы.Документ);
	КонецЦикла;
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		"Документ.РезервыПоОплатеТруда",
		"ПФ_MXL_СправкаРасчетРезервовПоОплатеТруда", 
		ПараметрыКоманды,
		ЭтотОбъект,
		Новый Структура("ЗаголовокФормы", ИмяКомандыОтчетОВыполненииОпераций(НСтр("ru = 'бухгалтерский учет'"))));
		
	Если ПечататьНУ Тогда
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			"Документ.РезервыПоОплатеТруда",
			"ПФ_MXL_СправкаРасчетРезервовПоОплатеТрудаНУ", 
			ПараметрыКоманды,
			ЭтотОбъект,
			Новый Структура("ЗаголовокФормы", ИмяКомандыОтчетОВыполненииОпераций(НСтр("ru = 'налоговый учет'"))));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ИмяКомандыОтчетОВыполненииОпераций(ВидУчета)
	Возврат СтрШаблон(НСтр("ru = 'Отчет о выполнении операций (%1)'"), ВидУчета);
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Попытка
		Если ФормаДлительнойОперации.Открыта() 
			И ФормаДлительнойОперации.ИдентификаторЗадания = ИдентификаторЗадания Тогда
			Если ЗаданиеВыполнено(ИдентификаторЗадания) Тогда 
				ЗагрузитьРезультат();
				ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
			Иначе
				ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
				ПодключитьОбработчикОжидания(
					"Подключаемый_ПроверитьВыполнениеЗадания", 
					ПараметрыОбработчикаОжидания.ТекущийИнтервал, 
					Истина);
			КонецЕсли;
		КонецЕсли;
	Исключение
		ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		ВызватьИсключение;
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти
