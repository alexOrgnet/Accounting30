#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеУчетнойПолитики" Тогда
		УправлениеФормой(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПланСчетовОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = ОбщегоНазначенияБПКлиентСервер.ПараметрыОткрытияФормыСОжиданием();
	ПараметрыОткрытия.Заголовок = Элемент.Заголовок;
	ПараметрыОткрытия.ИмяФормы = "ПланСчетов.Хозрасчетный.ФормаСписка";

	ОбщегоНазначенияБПКлиент.ОткрытьФормуСОжиданием(ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура КорреспонденцииСчетовОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	ПараметрыОткрытия = ОбщегоНазначенияБПКлиентСервер.ПараметрыОткрытияФормыСОжиданием();
	ПараметрыОткрытия.Заголовок = Элемент.Заголовок;
	ПараметрыОткрытия.ИмяФормы = "РегистрСведений.КорреспонденцииСчетов.ФормаСписка";

	ОбщегоНазначенияБПКлиент.ОткрытьФормуСОжиданием(ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура СправкиРасчетыОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	ПараметрыВыполненияКоманды = Новый Структура("ПутьКПодсистеме", "Отчеты.СправкиРасчеты");
	
	ПараметрыОткрытия = ОбщегоНазначенияБПКлиентСервер.ПараметрыОткрытияФормыСОжиданием();
	ПараметрыОткрытия.Заголовок = Элемент.Заголовок;
	ПараметрыОткрытия.ОбработчикОткрытияФормы = Новый ОписаниеОповещения("ОбработчикОткрытияФормы",
		ЭтотОбъект, ПараметрыВыполненияКоманды);

	ОбщегоНазначенияБПКлиент.ОткрытьФормуСОжиданием(ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура РегистрыУчетаМалыхПредприятийОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыВыполненияКоманды = Новый Структура("ПутьКПодсистеме",
		"Отчеты.РегистрыБУСубъектовМалогоПредпринимательства");
	
	ПараметрыОткрытия = ОбщегоНазначенияБПКлиентСервер.ПараметрыОткрытияФормыСОжиданием();
	ПараметрыОткрытия.Заголовок = Элемент.Заголовок;
	ПараметрыОткрытия.ОбработчикОткрытияФормы = Новый ОписаниеОповещения("ОбработчикОткрытияФормы",
		ЭтотОбъект, ПараметрыВыполненияКоманды);

	ОбщегоНазначенияБПКлиент.ОткрытьФормуСОжиданием(ПараметрыОткрытия);

КонецПроцедуры

&НаКлиенте
Процедура РегистрыНалоговогоУчетаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыВыполненияКоманды = Новый Структура("ПутьКПодсистеме",
		"Отчеты.НалогНаПрибыль");
	
	ПараметрыОткрытия = ОбщегоНазначенияБПКлиентСервер.ПараметрыОткрытияФормыСОжиданием();
	ПараметрыОткрытия.Заголовок = Элемент.Заголовок;
	ПараметрыОткрытия.ОбработчикОткрытияФормы = Новый ОписаниеОповещения("ОбработчикОткрытияФормы",
		ЭтотОбъект, ПараметрыВыполненияКоманды);

	ОбщегоНазначенияБПКлиент.ОткрытьФормуСОжиданием(ПараметрыОткрытия);
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаписиКнигиДоходовИРасходовУСНОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = ОбщегоНазначенияБПКлиентСервер.ПараметрыОткрытияФормыСОжиданием();
	ПараметрыОткрытия.Заголовок    = НСтр("ru = 'Записи книги доходов и расходов УСН'");
	ПараметрыОткрытия.ИмяФормы     = "Документ.ЗаписьКУДиР.ФормаСписка";
	ПараметрыОткрытия.Уникальность = "ФормаСписка_ЗаписьКУДиР";
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор",     Новый Структура("ДеятельностьНаПатенте", Ложь));
	ПараметрыФормы.Вставить("Заголовок", ПараметрыОткрытия.Заголовок);
	
	ОбщегоНазначенияБПКлиент.ОткрытьФормуСОжиданием(ПараметрыОткрытия, ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписиКнигиУчетаДоходовПатентОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = ОбщегоНазначенияБПКлиентСервер.ПараметрыОткрытияФормыСОжиданием();
	ПараметрыОткрытия.Заголовок    = НСтр("ru = 'Записи книги доходов по патенту'");
	ПараметрыОткрытия.ИмяФормы     = "Документ.ЗаписьКУДиР.ФормаСписка";
	ПараметрыОткрытия.Уникальность = "ФормаСписка_ЗаписьКнигиУчетаДоходовПатент";
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор",     Новый Структура("ДеятельностьНаПатенте", Истина));
	ПараметрыФормы.Вставить("Заголовок", ПараметрыОткрытия.Заголовок);
	
	ОбщегоНазначенияБПКлиент.ОткрытьФормуСОжиданием(ПараметрыОткрытия, ПараметрыФормы);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	ФункциональныеОпции = ФункциональныеОпцииФормы();
	
	Элементы.ЗаписиКнигиДоходовИРасходовУСН.Видимость = ФункциональныеОпции.ИспользуетсяУСН;
	Элементы.РегистрацияСуммыУбыткаУСН.Видимость      = ФункциональныеОпции.ИспользуетсяУСН;
	Элементы.АнализУчетаПоУСН.Видимость               = ФункциональныеОпции.ИспользуетсяУСН;
	
	Элементы.РегистрыНалоговогоУчета.Видимость        = ФункциональныеОпции.ИспользуетсяОСНО;
	Элементы.АнализУчетаПоНалогуНаПрибыль.Видимость   = ФункциональныеОпции.ИспользуетсяОСНО;
	
	Элементы.ГруппаНДС.Видимость                      = ФункциональныеОпции.ИспользуетсяНДС;
	Элементы.РегламентныеОперацииНДС.Видимость        = ФункциональныеОпции.ИспользуетсяНДС;
	Элементы.АнализУчетаПоНДС.Видимость               = ФункциональныеОпции.ИспользуетсяНДС;
	Элементы.НаличиеСчетовФактур.Видимость            = ФункциональныеОпции.ИспользуетсяНДС;
	
	Элементы.ГруппаНПД.Видимость                      = ФункциональныеОпции.ИспользуетсяНПД;
	
	Элементы.ЗаписьКнигиУчетаДоходовИРасходовИП.Видимость = ФункциональныеОпции.ИспользуетсяНДФЛИП;
	Элементы.ЗаписиКнигиУчетаДоходовПатент.Видимость      = ФункциональныеОпции.ИспользуетсяУСНПатент;
	
	Элементы.ГруппаПрослеживаемость.Видимость = ФункциональныеОпции.ВестиУчетПрослеживаемыхТоваров;
	
	Элементы.СверкаРасчетаНалогаНаИмущество.Видимость    = ФункциональныеОпции.УплачиваетсяНалогНаИмуществоПоКадастровойСтоимости;
	Элементы.СверкаРасчетаЗемельногоНалога.Видимость     = ФункциональныеОпции.УплачиваетсяЗемельныйНалог;
	Элементы.СверкаРасчетаТранспортногоНалога.Видимость  = ФункциональныеОпции.УплачиваетсяТранспортныйНалог;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ФункциональныеОпцииФормы()
	
	ФункциональныеОпции = Новый Структура;
	ФункциональныеОпции.Вставить("ИспользуетсяУСН",
		ПолучитьФункциональнуюОпцию("ИспользуетсяУСН"));
	ФункциональныеОпции.Вставить("ИспользуетсяУСНПатент",
		ПолучитьФункциональнуюОпцию("ИспользуетсяУСНПатент"));
	ФункциональныеОпции.Вставить("ИспользуетсяНПД",
		ПолучитьФункциональнуюОпцию("ДоступнаИнтеграцияСПлатформойСамозанятые"));
	ФункциональныеОпции.Вставить("ИспользуетсяНДС",
		ПолучитьФункциональнуюОпцию("ИспользуетсяОСНО") ИЛИ ПолучитьФункциональнуюОпцию("ИспользуетсяНДФЛИП"));
	ФункциональныеОпции.Вставить("ИспользуетсяОСНО",
		ПолучитьФункциональнуюОпцию("ИспользуетсяОСНО"));
	ФункциональныеОпции.Вставить("ИспользуетсяНДФЛИП",
		ПолучитьФункциональнуюОпцию("ИспользуетсяНДФЛИП"));
	ФункциональныеОпции.Вставить("ВестиУчетПрослеживаемыхТоваров",
		ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров"));
	ФункциональныеОпции.Вставить("УплачиваетсяНалогНаИмуществоПоКадастровойСтоимости",
		ПолучитьФункциональнуюОпцию("УплачиваетсяНалогНаИмуществоПоКадастровойСтоимости"));
	ФункциональныеОпции.Вставить("УплачиваетсяТранспортныйНалог",
		ПолучитьФункциональнуюОпцию("УплачиваетсяТранспортныйНалог"));
	ФункциональныеОпции.Вставить("УплачиваетсяЗемельныйНалог",
		ПолучитьФункциональнуюОпцию("УплачиваетсяЗемельныйНалог"));
	
	Возврат ФункциональныеОпции;
	
КонецФункции

&НаКлиенте
Процедура ОбработчикОткрытияФормы(ПараметрыФормы, ПараметрыВыполненияКоманды) Экспорт

	ВариантыОтчетовКлиент.ПоказатьПанельОтчетов(ПараметрыВыполненияКоманды.ПутьКПодсистеме, Неопределено);
	
КонецПроцедуры

#КонецОбласти