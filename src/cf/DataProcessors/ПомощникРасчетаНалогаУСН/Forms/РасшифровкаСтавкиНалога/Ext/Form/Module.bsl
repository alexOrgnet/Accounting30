#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Организация = Параметры.Организация;
	ОтчетныйПериод = Параметры.ОтчетныйПериод;
	НачалоНалоговогоПериода = Параметры.НачалоНалоговогоПериода;
	ОбъектНалогообложенияДоходы = Параметры.ОбъектНалогообложенияДоходы;
	СтавкаНалога = Параметры.СтавкаНалога;
	ОсновнаяСтавкаПриПревышении = Ложь;
	
	ТолькоПросмотр = Не ПравоДоступа("Изменение", Метаданные.РегистрыСведений.СредняяЧисленностьРаботниковОрганизаций);
	
	НалоговыеКаникулы = УчетнаяПолитика.НалоговыеКаникулыУСН(Организация, ОтчетныйПериод);
	УчетЗарплатыВоВнешнейПрограмме = ПолучитьФункциональнуюОпцию("УчетЗарплатыИКадровВоВнешнейПрограмме");
	ЕстьНаемныеРаботники = ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Организация)
		Или УчетЗарплаты.ИПИспользуетТрудНаемныхРаботников(Организация, Ложь);
	
	Заголовок = ТекстЗаголовка();
	
	Элементы.ЗаголовокЧисленностьРаботниковРасширеннаяПодсказка.Заголовок =
		ТекстПодсказкиЧисленностьРаботников(УчетЗарплатыВоВнешнейПрограмме);
	
	ИнициализироватьОтчетныеПериоды();
	
	ОбновитьДоходыНаСервере();
	
	ЗаполнитьЧисленностьРаботниковНаСервере();
	
	РассчитатьСтавкуНалога();
	
	УправлениеФормой(ЭтотОбъект);
	
	СброситьРазмерыИПоложениеОкна();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Или Не Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения,
		НСтр("ru = 'Данные были изменены. Сохранить изменения?'"),
		РежимДиалогаВопрос.ДаНетОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ВРег(ИмяСобытия) = ВРег("ОбновитьПоказателиРасчетаУСН")
		Или ВРег(ИмяСобытия) = ВРег("ИзменениеЗаписиКУДиР")
		Или ВРег(ИмяСобытия) = ВРег("ИзменениеВыписки") Тогда
		
		ОбновитьДоходыИРассчитатьСтавкуНалогаНаСервере();
		
	ИначеЕсли ВРег(ИмяСобытия) = ВРег("Запись_СредняяЧисленностьРаботниковОрганизаций")
		И Не ОповещениеПолученоИзЭтойФормы(Источник)
		И ТипЗнч(Параметр) = Тип("Структура")
		И Параметр.Свойство("Организация")
		И Параметр.Организация = Организация Тогда
		
		ЗаполнитьЧисленностьРаботниковИРассчитатьСтавкуНалогаНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДоходКварталНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	КонецПериода = КонецКвартала(Дата(Год(ОтчетныйПериод), 1, 1));
	РасшифроватьДоходы(КонецПериода);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоходПолугодиеНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	КонецПериода = КонецКвартала(Дата(Год(ОтчетныйПериод), 4, 1));
	РасшифроватьДоходы(КонецПериода);

КонецПроцедуры

&НаКлиенте
Процедура Доход9МесяцевНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	КонецПериода = КонецКвартала(Дата(Год(ОтчетныйПериод), 7, 1));
	РасшифроватьДоходы(КонецПериода);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоходГодНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	РасшифроватьДоходы(КонецГода(ОтчетныйПериод));
	
КонецПроцедуры

&НаКлиенте
Процедура ЧисленностьРаботниковКварталПриИзменении(Элемент)
	
	ПриИзмененииЧисленностиРаботников(1, ЧисленностьРаботниковКвартал);
	
КонецПроцедуры

&НаКлиенте
Процедура ЧисленностьРаботниковКварталИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	ЧисленностьРаботниковИзменениеТекста(1, Текст);
	
КонецПроцедуры

&НаКлиенте
Процедура ЧисленностьРаботниковПолугодиеПриИзменении(Элемент)
	
	ПриИзмененииЧисленностиРаботников(2, ЧисленностьРаботниковПолугодие);
	
КонецПроцедуры

&НаКлиенте
Процедура ЧисленностьРаботниковПолугодиеИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	ЧисленностьРаботниковИзменениеТекста(2, Текст);
	
КонецПроцедуры

&НаКлиенте
Процедура ЧисленностьРаботников9МесяцевПриИзменении(Элемент)
	
	ПриИзмененииЧисленностиРаботников(3, ЧисленностьРаботников9Месяцев);
	
КонецПроцедуры

&НаКлиенте
Процедура ЧисленностьРаботников9МесяцевИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	ЧисленностьРаботниковИзменениеТекста(3, Текст);
	
КонецПроцедуры

&НаКлиенте
Процедура ЧисленностьРаботниковГодПриИзменении(Элемент)
	
	ПриИзмененииЧисленностиРаботников(4, ЧисленностьРаботниковГод);
	
КонецПроцедуры

&НаКлиенте
Процедура ЧисленностьРаботниковГодИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	
	ЧисленностьРаботниковИзменениеТекста(4, Текст);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	ЗаписатьИЗакрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ОповещениеПолученоИзЭтойФормы(ИсточникОповещения)
	
	Если ТипЗнч(ИсточникОповещения) <> Тип("ФормаКлиентскогоПриложения") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат ИсточникОповещения.ИмяФормы = ЭтотОбъект.ИмяФормы;
	
КонецФункции

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаписатьИЗакрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть()

	Если Не ЕстьНаемныеРаботники Тогда
		
		Модифицированность = Ложь;
		Закрыть();
		
	ИначеЕсли ЗаписатьДанные() Тогда
		
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("Организация", Организация);
		ПараметрыОповещения.Вставить("Период", ОтчетныйПериод);
		
		Оповестить("Запись_СредняяЧисленностьРаботниковОрганизаций", ПараметрыОповещения, ЭтотОбъект);
			
		Модифицированность = Ложь;
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СброситьРазмерыИПоложениеОкна()
	
	Если ПравоДоступа("СохранениеДанныхПользователя", Метаданные) Тогда
		ХранилищеСистемныхНастроек.Удалить(
			ЭтотОбъект.ИмяФормы,
			"",
			ПользователиИнформационнойБазы.ТекущийПользователь().Имя);
	КонецЕсли;
	
	КлючСохраненияПоложенияОкна = Строка(Новый УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	Если Форма.НалоговыеКаникулы И Не Форма.ПрименяетсяПовышеннаяСтавкаНалога Тогда
		Элементы.СтавкаНалога.Заголовок =
			СтрШаблон(НСтр("ru = 'Ставка налога %1%% (налоговые каникулы)'"), Форма.СтавкаНалога);
	ИначеЕсли Не Форма.ПрименяетсяПовышеннаяСтавкаНалога
		И УчетУСНКлиентСервер.ЭтоЛьготнаяСтавка(Форма.СтавкаНалога, Форма.ОбъектНалогообложенияДоходы) Тогда
		Элементы.СтавкаНалога.Заголовок =
			СтрШаблон(НСтр("ru = 'Ставка налога %1%% (льготная)'"), Форма.СтавкаНалога);
	Иначе
		Элементы.СтавкаНалога.Заголовок = СтрШаблон(НСтр("ru = 'Ставка налога %1%%'"), Форма.СтавкаНалога);
	КонецЕсли;
	
	Элементы.СтавкаНалогаРасширеннаяПодсказка.Заголовок = ТекстПодсказкиСтавкаНалога(Форма);
	
	ЛишниеЭлементыПоказателей = ВсеЭлементыРазмещенияПоказателей(); 
	Для Индекс = 0 По Форма.ОтчетныеПериоды.Количество() - 1 Цикл
		
		ДанныеОтчетногоПериода = Форма.ОтчетныеПериоды[Индекс];
		
		ИмяЭлементаДоходы = ИмяПоШаблону("Доход", ДанныеОтчетногоПериода.НомерКвартала);
		ИндексДоходы = ЛишниеЭлементыПоказателей.Найти(ИмяЭлементаДоходы);
		Если ИндексДоходы <> Неопределено Тогда
			ЛишниеЭлементыПоказателей.Удалить(ИндексДоходы);
		КонецЕсли;
		
		ИмяЭлементаЧисленностьРаботников =
			ИмяПоШаблону("ЧисленностьРаботников", ДанныеОтчетногоПериода.НомерКвартала);
		ИндексРаботники = ЛишниеЭлементыПоказателей.Найти(ИмяЭлементаЧисленностьРаботников);
		Если ИндексРаботники <> Неопределено Тогда
			ЛишниеЭлементыПоказателей.Удалить(ИндексРаботники);
		КонецЕсли;
		
		ИмяЭлемента = ИмяПоШаблону(
			"ЧисленностьРаботниковПоДаннымУчета", ДанныеОтчетногоПериода.НомерКвартала);
		Если ДанныеОтчетногоПериода.ЧисленностьРаботников <> ДанныеОтчетногоПериода.ЧисленностьРаботниковПоДаннымУчета Тогда
			Элементы[ИмяЭлемента].Видимость = Истина;
		Иначе
			Элементы[ИмяЭлемента].Видимость = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого ИмяЭлемента Из ЛишниеЭлементыПоказателей Цикл
		Элементы[СтрШаблон("Группа%1", ИмяЭлемента)].Видимость = Ложь;
	КонецЦикла;
	
	Если Не Форма.ЕстьНаемныеРаботники Тогда
		Элементы.ГруппаЗаголовокЧисленностьРаботников.Видимость = Ложь;
		Для Каждого ИмяЭлемента Из ВсеЭлементыРазмещенияПоказателей() Цикл
			Если СтрНачинаетсяС(ИмяЭлемента, "ЧисленностьРаботников") Тогда
				Форма.Элементы[СтрШаблон("Группа%1", ИмяЭлемента)].Видимость = Ложь;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЧисленностьРаботниковИзменениеТекста(НомерКвартала, Знач Текст)
	
	ЧисленностьРаботников = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(Текст);
	Если ЧисленностьРаботников = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НайденныеПериоды = ОтчетныеПериоды.НайтиСтроки(Новый Структура("НомерКвартала", НомерКвартала));
	Если НайденныеПериоды.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеОтчетногоПериода = НайденныеПериоды[0];
	
	ИмяЭлемента = ИмяПоШаблону(
		"ЧисленностьРаботниковПоДаннымУчета", ДанныеОтчетногоПериода.НомерКвартала);
	Если ЧисленностьРаботников <> ДанныеОтчетногоПериода.ЧисленностьРаботниковПоДаннымУчета Тогда
		Элементы[ИмяЭлемента].Видимость = Истина;
	Иначе
		Элементы[ИмяЭлемента].Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТекстПодсказкиЧисленностьРаботников(УчетЗарплатыВоВнешнейПрограмме)
	
	ТекстПодсказки = "";
	
	Если УчетЗарплатыВоВнешнейПрограмме Тогда
		ТекстПодсказки = "Средняя численность наемных работников за отчетный период складывается из:
		|   - Среднесписочной численности сотрудников;
		|   - Средней численности внешних совместителей;
		|   - Средней численности работников по договорам ГПХ.
		|
		|Если учет зарплаты ведется в программе ""Зарплата и управление персоналом"", численность работников можно определить с помощью отчета ""Численность и текучесть кадров"". Данные о средней численности загружаются в документ <a href = ""e1cib/list/Документ.СтатистикаПерсонала"">Статистика персонала</a>.
		|
		|Подробнее о том, как рассчитывается средняя численность работников в <a href = ""https://its.1c.ru/db/stafft#content:35040:hdoc"">статье на ИТС</a>";
	Иначе
		ТекстПодсказки = "Средняя численность наемных работников за отчетный период складывается из:
		|   - Среднесписочной численности сотрудников;
		|   - Средней численности внешних совместителей;
		|   - Средней численности работников по договорам ГПХ.
		|
		|Подробнее о том, как рассчитывается средняя численность работников в <a href = ""https://its.1c.ru/db/stafft#content:35040:hdoc"">статье на ИТС</a>";
	КонецЕсли;
	
	Возврат СтроковыеФункции.ФорматированнаяСтрока(ТекстПодсказки);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ВсеЭлементыРазмещенияПоказателей()
	
	Результат = Новый Массив;
	Результат.Добавить("ДоходКвартал");
	Результат.Добавить("ДоходПолугодие");
	Результат.Добавить("Доход9Месяцев");
	Результат.Добавить("ДоходГод");
	Результат.Добавить("ЧисленностьРаботниковКвартал");
	Результат.Добавить("ЧисленностьРаботниковПолугодие");
	Результат.Добавить("ЧисленностьРаботников9Месяцев");
	Результат.Добавить("ЧисленностьРаботниковГод");
	
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТекстПодсказкиСтавкаНалога(Форма)
	
	Если Форма.ПрименяетсяПовышеннаяСтавкаНалога Тогда
		Возврат ТекстПодсказкиПовышеннаяСтавкаНалога(Форма);
	Иначе
		Возврат ТекстПодсказкиОсновнаяСтавкаНалога(Форма);
	КонецЕсли;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТекстПодсказкиОсновнаяСтавкаНалога(Форма)
	
	ГраницаДоходов = ГраницаДоходов(Форма.ОтчетныйПериод);
	ГраницаЧисленностиРаботников = ГраницаЧисленностиРаботников();
	
	Если Форма.НалоговыеКаникулы Тогда
		Возврат СтрШаблон(
			НСтр("ru = 'Налоговые каникулы действуют до достижения суммы доходов уровня в %1 млн. рублей и средней численности наемных работников не%2более%2%3%2человек.'"),
			ГраницаДоходов,
			Символы.НПП,
			ГраницаЧисленностиРаботников);
	Иначе
		Возврат СтрШаблон(
			НСтр("ru = 'Действует до достижения суммы доходов уровня в %1 млн. руб. и средней численности наемных работников не%2более%2%3%2человек.'"),
			ГраницаДоходов,
			Символы.НПП,
			ГраницаЧисленностиРаботников);
	КонецЕсли;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТекстПодсказкиПовышеннаяСтавкаНалога(Форма)
	
	ГраницаДоходов = ГраницаДоходов(Форма.ОтчетныйПериод);
	ГраницаЧисленностиРаботников = ГраницаЧисленностиРаботников();
	
	ЧастиПодсказки = Новый Массив;
	ДанныеПериодаПревышенияЛимитов = ПервыйПериодСПревышениемЛимитов(Форма);
	Если ДанныеПериодаПревышенияЛимитов = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	НомерКвартала = ДанныеПериодаПревышенияЛимитов.НомерКвартала;
	
	Если НомерКвартала = 1 Тогда
		ЧастиПодсказки.Добавить(НСтр("ru = 'Совокупная величина доходов за первый квартал'"));
	ИначеЕсли НомерКвартала = 2 Тогда
		ЧастиПодсказки.Добавить(НСтр("ru = 'Совокупная величина доходов за полугодие'"));
	ИначеЕсли НомерКвартала = 3 Тогда
		ЧастиПодсказки.Добавить(НСтр("ru = 'Совокупная величина доходов за 9 месяцев'"));
	Иначе
		ЧастиПодсказки.Добавить(НСтр("ru = 'Совокупная величина доходов за год'"));
	КонецЕсли;
	
	Если ДанныеПериодаПревышенияЛимитов.ПревышенЛимитДоходов
		И ДанныеПериодаПревышенияЛимитов.ПревышенЛимитРаботников Тогда
		
		Если НомерКвартала = 1 Тогда
			ПерваяЧастьПодсказки = СтрШаблон(
				НСтр("ru = 'Совокупная величина доходов за первый квартал превысила %1 млн. рублей и средняя численность наемных работников превысила%3%2%3человек.'"),
				ГраницаДоходов, ГраницаЧисленностиРаботников, Символы.НПП);
		ИначеЕсли НомерКвартала = 2 Тогда
			ПерваяЧастьПодсказки = СтрШаблон(
				НСтр("ru = 'Совокупная величина доходов за полугодие превысила %1 млн. рублей и средняя численность наемных работников превысила%3%2%3человек.'"),
				ГраницаДоходов, ГраницаЧисленностиРаботников, Символы.НПП);
		ИначеЕсли НомерКвартала = 3 Тогда
			ПерваяЧастьПодсказки = СтрШаблон(
				НСтр("ru = 'Совокупная величина доходов за 9 месяцев превысила %1 млн. рублей и средняя численность наемных работников превысила%3%2%3человек.'"),
				ГраницаДоходов, ГраницаЧисленностиРаботников, Символы.НПП);
		Иначе
			ПерваяЧастьПодсказки = СтрШаблон(
				НСтр("ru = 'Совокупная величина доходов за год превысила %1 млн. рублей и средняя численность наемных работников превысила%3%2%3человек.'"),
				ГраницаДоходов, ГраницаЧисленностиРаботников, Символы.НПП);
		КонецЕсли;
		
	ИначеЕсли ДанныеПериодаПревышенияЛимитов.ПревышенЛимитДоходов Тогда
		Если НомерКвартала = 1 Тогда
			ПерваяЧастьПодсказки = СтрШаблон(
				НСтр("ru = 'Совокупная величина доходов за первый квартал превысила %1 млн. рублей.'"),
				ГраницаДоходов);
		ИначеЕсли НомерКвартала = 2 Тогда
			ПерваяЧастьПодсказки = СтрШаблон(
				НСтр("ru = 'Совокупная величина доходов за полугодие превысила %1 млн. рублей.'"),
				ГраницаДоходов);
		ИначеЕсли НомерКвартала = 3 Тогда
			ПерваяЧастьПодсказки = СтрШаблон(
				НСтр("ru = 'Совокупная величина доходов за 9 месяцев превысила %1 млн. рублей.'"),
				ГраницаДоходов);
		Иначе
			ПерваяЧастьПодсказки = СтрШаблон(
				НСтр("ru = 'Совокупная величина доходов за год превысила %1 млн. рублей.'"),
				ГраницаДоходов);
		КонецЕсли;
	ИначеЕсли ДанныеПериодаПревышенияЛимитов.ПревышенЛимитРаботников Тогда
		Если НомерКвартала = 2 Тогда
			ПерваяЧастьПодсказки = СтрШаблон(
				НСтр("ru = 'Во 2 квартале средняя численность наемных работников превысила %1 человек.'"),
				ГраницаЧисленностиРаботников);
		Иначе
			ПерваяЧастьПодсказки = СтрШаблон(
				НСтр("ru = 'В %1 квартале средняя численность наемных работников превысила %2 человек.'"),
				НомерКвартала, ГраницаЧисленностиРаботников);
		КонецЕсли;
	КонецЕсли; 
	
	Если Форма.ПрименяетсяПовышеннаяСтавкаНалога
		И Форма.ОсновнаяСтавкаПриПревышении Тогда
		ТекстПодсказки = СтрШаблон(
			НСтр("ru = '%1%2Доходы, полученные с начала %3 квартала, облагаются по основной ставке %4%%,
				|так как налоговая база в текущем периоде снизилась.'"),
			ПерваяЧастьПодсказки,
			Символы.ПС,
			НомерКвартала,
			Форма.СтавкаНалога);
	Иначе
		ТекстПодсказки = СтрШаблон(
			НСтр("ru = '%1%2Доходы, полученные с начала %3 квартала, облагаются по повышенной ставке %4%%'"),
			ПерваяЧастьПодсказки,
			Символы.ПС,
			НомерКвартала,
			Форма.СтавкаНалога);
	КонецЕсли;
		
	Возврат ТекстПодсказки;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ГраницаДоходов(Дата)
	
	ГраницаДоходов = КонтрольПраваПримененияСпецрежимаКлиентСервер.ГраницаДоходовДляПримененияОсновнойСтавкиУСН(Дата);
	
	Возврат ГраницаДоходов / 1000000;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ГраницаЧисленностиРаботников()
	
	ГраницаЧисленностиРаботников =
		КонтрольПраваПримененияСпецрежимаКлиентСервер.ГраницаЧисленностиРаботниковДляПримененияОсновнойСтавкиУСН();
	
	Возврат ГраницаЧисленностиРаботников;
	
КонецФункции

&НаКлиенте
Процедура РасшифроватьДоходы(КонецПериода)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация",   Организация);
	ПараметрыФормы.Вставить("НачалоПериода", НачалоНалоговогоПериода);
	ПараметрыФормы.Вставить("КонецПериода",  КонецПериода);
	
	Если ЭтоИнтерфейсИнтеграцииСБанком() Тогда
		ИмяОткрываемойФормы = "РасшифровкаДоходовИнтеграцияСБанком";
	Иначе
		ИмяОткрываемойФормы = "РасшифровкаДоходов";
	КонецЕсли;
	
	ОткрытьФорму("Обработка.ПомощникРасчетаНалогаУСН.Форма." + ИмяОткрываемойФормы, ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоИнтерфейсИнтеграцииСБанком()
	Возврат ОбщегоНазначенияБП.ЭтоИнтерфейсИнтеграцииСБанком();
КонецФункции

&НаСервере
Процедура ПриИзмененииЧисленностиРаботников(НомерКвартала, НовоеЗначение)
	
	ДанныеОтчетныхПериодов = ОтчетныеПериоды.НайтиСтроки(Новый Структура("НомерКвартала", НомерКвартала));
	Если ДанныеОтчетныхПериодов.Количество() > 0 Тогда
		ГраницаЧисленностиРаботников =
			КонтрольПраваПримененияСпецрежимаКлиентСервер.ГраницаЧисленностиРаботниковДляПримененияОсновнойСтавкиУСН();
		ДанныеОтчетныхПериодов[0].ЧисленностьРаботников = НовоеЗначение;
		ДанныеОтчетныхПериодов[0].ПревышенЛимитРаботников = (НовоеЗначение > ГраницаЧисленностиРаботников);
	КонецЕсли;
	
	РассчитатьСтавкуНалога();
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьОтчетныеПериоды()
	
	ТекущийПериод = КонецКвартала(НачалоНалоговогоПериода);
	Пока ТекущийПериод <= КонецКвартала(ОтчетныйПериод) Цикл
		
		ДобавитьДанныеОтчетногоПериода(ТекущийПериод);
		
		ТекущийПериод = КонецКвартала(ДобавитьМесяц(ТекущийПериод, 3));
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьСтавкуНалога()
	ПервыйПериодСПревышениемЛимитов = ПервыйПериодСПревышениемЛимитов(ЭтотОбъект);
	
	Если ОтчетныйПериод >= УчетУСНКлиентСервер.ДатаНачалаПрогрессивнойШкалы()
		И ПервыйПериодСПревышениемЛимитов <> Неопределено Тогда
		ПрименяетсяПовышеннаяСтавкаНалога = Истина;
		Если СтавкаНалога = УчетУСН.СтавкиНалогаУСН(Организация, ОтчетныйПериод).ОсновнаяСтавка
			И ПервыйПериодСПревышениемЛимитов.НомерКвартала <> 1 Тогда
			ОсновнаяСтавкаПриПревышении = Истина;
		Иначе
			СтавкаНалога = УчетУСН.СтавкиНалогаУСН(Организация, ОтчетныйПериод).ПовышеннаяСтавка;
			ОсновнаяСтавкаПриПревышении = Ложь;
		КонецЕсли;
	Иначе
		СтавкаНалога = УчетУСН.СтавкиНалогаУСН(Организация, ОтчетныйПериод).ОсновнаяСтавка;
		ОсновнаяСтавкаПриПревышении = Ложь;
		ПрименяетсяПовышеннаяСтавкаНалога = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПервыйПериодСПревышениемЛимитов(Форма)
	
	Для Индекс = 0 По Форма.ОтчетныеПериоды.Количество() - 1 Цикл
		
		ДанныеПериода = Форма.ОтчетныеПериоды[Индекс];
		Если ДанныеПериода.ПревышенЛимитДоходов Или ДанныеПериода.ПревышенЛимитРаботников Тогда
			Возврат ДанныеПериода;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция ТекстЗаголовка()
	
	НазваниеФормы = НСтр("ru = 'Ставка налога УСН'");
	
	ПредставлениеПериода = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(
		НачалоГода(ОтчетныйПериод), КонецКвартала(ОтчетныйПериод), Истина);
	
	Если Справочники.Организации.ИспользуетсяНесколькоОрганизаций() Тогда
		Возврат СтрШаблон(НСтр("ru = '%1 за %2 %3'"),
			НазваниеФормы,
			ПредставлениеПериода,
			БухгалтерскиеОтчетыВызовСервера.ПолучитьТекстОрганизация(Организация));
	Иначе
		Возврат СтрШаблон(НСтр("ru = '%1 за %2'"),
			НазваниеФормы,
			ПредставлениеПериода);
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ОбновитьДоходыИРассчитатьСтавкуНалогаНаСервере()
	
	ОбновитьДоходыНаСервере();
	
	РассчитатьСтавкуНалога();
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЧисленностьРаботниковИРассчитатьСтавкуНалогаНаСервере()
	
	ЗаполнитьЧисленностьРаботниковНаСервере();
	
	РассчитатьСтавкуНалога();
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЧисленностьРаботниковНаСервере()
	
	Если Не ЕстьНаемныеРаботники Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийПериод = КонецКвартала(НачалоНалоговогоПериода);
	Пока ТекущийПериод <= КонецКвартала(ОтчетныйПериод) Цикл
		
		ЧисленностьРаботников = УчетУСН.СредняяЧисленностьРаботников(
			Организация, НачалоНалоговогоПериода, ТекущийПериод);
		
		ЧисленностьПоДаннымУчета = УчетУСН.СредняяЧисленностьРаботников(
			Организация, НачалоНалоговогоПериода, ТекущийПериод, Ложь);
		
		Если ЧисленностьРаботников = Неопределено Тогда
			ЧисленностьРаботников = -1;
		КонецЕсли;
		
		ДобавитьДанныеОтчетногоПериода(ТекущийПериод, , ЧисленностьРаботников, ЧисленностьПоДаннымУчета);
		
		ТекущийПериод = КонецКвартала(ДобавитьМесяц(ТекущийПериод, 3));
		
		Для Каждого ДанныеПериода Из ОтчетныеПериоды Цикл
			ИмяРеквизитаЧисленностьРаботников =
				ИмяПоШаблону("ЧисленностьРаботников", ДанныеПериода.НомерКвартала);
			ЭтотОбъект[ИмяРеквизитаЧисленностьРаботников] = ДанныеПериода.ЧисленностьРаботников;
			
			ИмяРеквизитаЧисленностьПоДаннымУчета =
				ИмяПоШаблону("ЧисленностьРаботниковПоДаннымУчета", ДанныеПериода.НомерКвартала);
			ЭтотОбъект[ИмяРеквизитаЧисленностьПоДаннымУчета] = ДанныеПериода.ЧисленностьРаботниковПоДаннымУчета;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДоходыНаСервере()
	
	РазрядностьОкругленияПоказателей = УчетУСНКлиентСервер.РазрядностьОкругленияПоказателей(ОтчетныйПериод);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КнигаУчетаДоходовИРасходовОбороты.Период КАК Период,
	|	КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот КАК Доходы
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов.Обороты(&НачалоПериода, &КонецПериода, Квартал,
	|		Организация = &Организация) КАК КнигаУчетаДоходовИРасходовОбороты
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоНалоговогоПериода);
	Запрос.УстановитьПараметр("КонецПериода", Новый Граница(КонецКвартала(ОтчетныйПериод), ВидГраницы.Включая));
	
	Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ДоходыНакопительнымИтогом = 0;
	Для Индекс = 0 По ОтчетныеПериоды.Количество() - 1 Цикл
		
		ДанныеПериода = ОтчетныеПериоды[Индекс];
		
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(НачалоКвартала(ДанныеПериода.ОтчетныйПериод)) Тогда
			ДоходыНакопительнымИтогом = ДоходыНакопительнымИтогом + Выборка.Доходы;
		КонецЕсли;
		
		ДобавитьДанныеОтчетногоПериода(ДанныеПериода.ОтчетныйПериод, Окр(ДоходыНакопительнымИтогом, РазрядностьОкругленияПоказателей));
		
	КонецЦикла;
	
	Для Каждого ДанныеПериода Из ОтчетныеПериоды Цикл
		ИмяРеквизитаДоходы = ИмяПоШаблону("Доход", ДанныеПериода.НомерКвартала);
		ЭтотОбъект[ИмяРеквизитаДоходы] = ДанныеПериода.Доход;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьДанныеОтчетногоПериода(Период, Доход = Неопределено, ЧисленностьРаботников = Неопределено, ЧисленностьРаботниковПоДаннымУчета = Неопределено)
	
	НомерКвартала = ОбщегоНазначенияБПКлиентСервер.НомерКвартала(Период);
	МассивДанныхПериода = ОтчетныеПериоды.НайтиСтроки(Новый Структура("НомерКвартала", НомерКвартала));
	
	Если МассивДанныхПериода.Количество() = 0 Тогда
		ДанныеПериода = ОтчетныеПериоды.Добавить();
	Иначе
		ДанныеПериода = МассивДанныхПериода[0];
	КонецЕсли;
	
	ДанныеПериода.НомерКвартала = НомерКвартала;
	ДанныеПериода.ОтчетныйПериод = КонецКвартала(Период);
	
	Если Доход <> Неопределено Тогда
		ДанныеПериода.Доход = Доход;
		ДанныеПериода.ПревышенЛимитДоходов =
			Доход > КонтрольПраваПримененияСпецрежимаКлиентСервер.ГраницаДоходовДляПримененияОсновнойСтавкиУСН(Период);
	КонецЕсли;
	
	Если ЧисленностьРаботников <> Неопределено Тогда
		ГраницаЧисленностиРаботников =
			КонтрольПраваПримененияСпецрежимаКлиентСервер.ГраницаЧисленностиРаботниковДляПримененияОсновнойСтавкиУСН();
		ДанныеПериода.ЧисленностьРаботников = Макс(0, ЧисленностьРаботников);
		ДанныеПериода.ЧисленностьРаботниковИсходная = ЧисленностьРаботников;
		ДанныеПериода.ПревышенЛимитРаботников = ДанныеПериода.ЧисленностьРаботников > ГраницаЧисленностиРаботников;
	КонецЕсли;
	
	Если ЧисленностьРаботниковПоДаннымУчета <> Неопределено Тогда
		ДанныеПериода.ЧисленностьРаботниковПоДаннымУчета = ЧисленностьРаботниковПоДаннымУчета;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИмяПоШаблону(ПрефиксИмени, НомерКвартала)
	
	ПредставлениеПериода = "";
	Если НомерКвартала = 1 Тогда
		ПредставлениеПериода = "Квартал";
	ИначеЕсли НомерКвартала = 2 Тогда
		ПредставлениеПериода = "Полугодие";
	ИначеЕсли НомерКвартала = 3 Тогда
		ПредставлениеПериода = "9Месяцев";
	ИначеЕсли НомерКвартала = 4 Тогда
		ПредставлениеПериода = "Год";
	КонецЕсли;
	
	Возврат СтрШаблон("%1%2", ПрефиксИмени, ПредставлениеПериода);
	
КонецФункции

&НаСервере
Функция ЗаписатьДанные()
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	МинимальныйПериод = Неопределено;
	
	Для Индекс = 0 По ОтчетныеПериоды.Количество() - 1 Цикл
		
		ДанныеПериода = ОтчетныеПериоды[Индекс];
		
		Если ДанныеПериода.ЧисленностьРаботников = ДанныеПериода.ЧисленностьРаботниковИсходная Тогда
			Продолжить;
		КонецЕсли;
		
		Если МинимальныйПериод = Неопределено Или МинимальныйПериод > ДанныеПериода.ОтчетныйПериод Тогда
			МинимальныйПериод = ДанныеПериода.ОтчетныйПериод;
		КонецЕсли;
		
		МенеджерЗаписи = РегистрыСведений.СредняяЧисленностьРаботниковОрганизаций.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Период = ДанныеПериода.ОтчетныйПериод; 
		МенеджерЗаписи.Организация = Организация;
		МенеджерЗаписи.ЧисленностьРаботников = ДанныеПериода.ЧисленностьРаботников;
		
		МенеджерЗаписи.Записать(Истина);
		
	КонецЦикла;
	
	Если МинимальныйПериод <> Неопределено Тогда
		РегистрыСведений.СредняяЧисленностьРаботниковОрганизаций.СдвинутьГраницуАктуальности(
			Организация, КонецМесяца(МинимальныйПериод));
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти
