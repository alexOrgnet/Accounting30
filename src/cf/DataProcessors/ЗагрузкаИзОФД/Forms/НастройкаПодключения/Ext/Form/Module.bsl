
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ОФДСлужебный.НастройкаПодключенияДоступна() Тогда
		ВызватьИсключение НСтр("ru = 'У пользователя недостаточно прав для создания настройки.'");
	КонецЕсли;
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДлительнаяОперация;
	Элементы.ДекорацияСостояние.Заголовок   = НСтр("ru = 'Получение списка участников ОФД, пожалуйста, подождите...'");
	
	ЕстьНастройкиПодключения
		= Справочники.НастройкиПодключенияКОФД.ЕстьНастройкиПодключения();
	
	Если Не ЕстьНастройкиПодключения Тогда
		
		НастройкиИнтеграцииОФД = ОФДСлужебный.НастройкиИнтеграции();
		
		Элементы.ДекорацияВозможностиСервиса.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			Элементы.ДекорацияВозможностиСервиса.Заголовок,
			?(
				НастройкиИнтеграцииОФД.ИспользоватьЗагрузкуИтоговСмены = Истина,
				НСтр("ru = '- Выполнять сверки итогов смены учетной системы и ОФД.'"),
				""),
			?(
				НастройкиИнтеграцииОФД.ИспользоватьЗагрузкуДокументов,
				НСтр("ru = '- Позволяет загружать отчеты о розничных продажах из ОФД в учетную систему.'"),
				""));
		
	КонецЕсли;
		
	ЗаполненыДанныеАутентификации
		= ИнтернетПоддержкаПользователей.ЗаполненыДанныеАутентификацииПользователяИнтернетПоддержки();
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания(
		"ПолучитьУчастниковОФД",
		0.1,
		Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МагазинОбработкаВыбора(
		Элемент,
		ВыбранноеЗначение,
		ДополнительныеДанные,
		СтандартнаяОбработка)
	
	МагазинПредставление    = Элемент.СписокВыбора.НайтиПоЗначению(ВыбранноеЗначение);
	Магазин = ВыбранноеЗначение;
	
	РегистрационныйНомерККТ = "";
	ЗаводскойНомерФН        = "";
	
	ЗаполнитьСписокКасс();
	
КонецПроцедуры

&НаКлиенте
Процедура КассаОбработкаВыбора(
		Элемент,
		ВыбранноеЗначение,
		ДополнительныеДанные,
		СтандартнаяОбработка)
	
	КассаПредставление = Элемент.СписокВыбора.НайтиПоЗначению(ВыбранноеЗначение);
	Касса = ВыбранноеЗначение;
	
	РегистрационныйНомерККТ = ДанныеКасс[Магазин][Касса].РегистрационныйНомер;
	ЗаводскойНомерФН        = ДанныеКасс[Магазин][Касса].НомерФискальногоНакопителя;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПодробнееОСервисеОбработкаНавигационнойСсылки(
		Элемент,
		НавигационнаяСсылкаФорматированнойСтроки,
		СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "open:ofdDescription" Тогда
		СтандартнаяОбработка = Ложь;
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(
			"https://v8.1c.ru/");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПользовательскоеСоглашениеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "open:userAgreement" Тогда
		СтандартнаяОбработка = Ложь;
		ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(
			"https://v8.1c.ru/");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОписаниеРезультатаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "open:log" Тогда
		СтандартнаяОбработка = Ложь;
		ОФДКлиент.ОткрытьЖурналРегистрации();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьПоясненияПодключенияАвторизацияОбработкаНавигационнойСсылки(
		Элемент,
		НавигационнаяСсылкаФорматированнойСтроки,
		СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "action:openPortal" Тогда
		СтандартнаяОбработка = Ложь;
		ИнтернетПоддержкаПользователейКлиент.ОткрытьВебСтраницу(
			ИнтернетПоддержкаПользователейКлиентСервер.URLСтраницыСервисаLogin(
				,
				ИнтернетПоддержкаПользователейКлиент.НастройкиСоединенияССерверами()));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПарольИПППриИзменении(Элемент)
	
	ИнтернетПоддержкаПользователейКлиент.ПриИзмененииСекретныхДанных(
		Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПарольИППНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ИнтернетПоддержкаПользователейКлиент.ОтобразитьСекретныеДанные(
		ЭтотОбъект,
		Элемент,
		"ПарольИПП");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУчастникиОФД

&НаКлиенте
Процедура УчастникиОФДВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Далее(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Далее(Команда)
	
	Отказ = Ложь;
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОбщаяИнформация Тогда
		
		Если Не ЗаполненыДанныеАутентификации Тогда
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПодключениеКПорталу;
		Иначе
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборУчастника;
		КонецЕсли;
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПодключениеКПорталу Тогда
		
		Результат = ИнтернетПоддержкаПользователейКлиентСервер.ПроверитьДанныеАутентификации(
			Новый Структура("Логин, Пароль",
			ЛогинИПП, ПарольИПП));
		
		Если Результат.Отказ Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				Результат.СообщениеОбОшибке,
				,
				Результат.Поле);
			Возврат;
		КонецЕсли;
		
		ПроверитьПодключениеКПорталу1СИТС(
			ЛогинИПП,
			ПарольИПП,
			Отказ);
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		ЛогинИПП = "";
		ПарольИПП = "";
		
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборУчастника;
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборУчастника Тогда
		
		СтрокаУчастникОФД = УчастникиОФД.НайтиПоИдентификатору(
			Элементы.УчастникиОФД.ТекущаяСтрока);
		Если СтрокаУчастникОФД = Неопределено Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Не выбран ОФД для которого настраивается подключение.'"),
				,
				,
				"УчастникиОФД");
			Возврат;
		КонецЕсли;
		
		ИдентификаторУчастника   = СтрокаУчастникОФД.ИдентификаторУчастника;
		ТипАутентификации        = СтрокаУчастникОФД.ТипАутентификации;
		Наименование             = СтрокаУчастникОФД.Участник;
		АдресЛичногоКабинета     = СтрокаУчастникОФД.АдресЛичногоКабинета;
		
		ДобавитьНастройкиПодключения();
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиПодключения Тогда
		
		ПроверитьПараметрыПодключения(Отказ);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПрикладныеНастройки Тогда
		
		ПодключитьКассу();
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаРезультат Тогда
		ПараметрыКассы = Новый Структура;
		ПараметрыКассы.Вставить("ИдентификаторУстройства", ИдентификаторУстройства);
		ПараметрыКассы.Вставить("ЗагрузитьДанные",         ЗагрузитьДанныеПриЗакрытии);
		ПараметрыКассы.Вставить("ДатаЗагрузки",            ДатаЗагрузки);
		
		ОповеститьОВыборе(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПараметрыКассы));
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьКассу() Экспорт
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Операция подключения кассы на портале.'");
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("РегистрационныйНомерККТ", РегистрационныйНомерККТ);
	ПараметрыПроцедуры.Вставить("ИдентификаторТарифа",     "ИспользоватьЗагрузкуДокументов");
	ПараметрыПроцедуры.Вставить("НастройкаПодключения",    НастройкаПодключения);
	ПараметрыПроцедуры.Вставить(
		"Касса",
		Элементы.Касса.СписокВыбора.НайтиПоЗначению(Касса).Представление);
	
	РезультатВыполнения = ПодключитьКассуЗапускЗадания(
		ПараметрыПроцедуры,
		ЭтотОбъект.УникальныйИдентификатор);
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ПодключитьКассуЗавершение",
		ЭтотОбъект);
	
	Если РезультатВыполнения.Статус = "Выполнено" Или РезультатВыполнения.Статус = "Ошибка" Тогда
		ПодключитьКассуЗавершение(РезультатВыполнения, Неопределено);
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДлительнаяОперация;
	Элементы.ДекорацияСостояние.Заголовок   = НСтр("ru = 'Выполняется попытка подключения кассы.'");
	
	УстановитьВидимостьДоступность();
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
	

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПодключитьКассуЗапускЗадания(
	Знач ПараметрыФункции,
	Знач УникальныйИдентификатор)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания
		= НСтр("ru = 'Подключение кассы на портале.'");
	
	РезультатВыполнения = ДлительныеОперации.ВыполнитьФункцию(
		ПараметрыВыполнения,
		"СервисИнтеграцииСОФД.ПодключитьКассу",
		ПараметрыФункции);
	
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура ПодключитьКассуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		
		РезультатОперации = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Если ЗначениеЗаполнено(РезультатОперации.КодОшибки) Тогда
			УстановитьОтображениеИнформацииОбОшибке(РезультатОперации.СообщениеОбОшибке);
		Иначе
			
			РезультатНастройки = Новый Структура;
			РезультатНастройки.Вставить("СценарийИспользования",   "ИспользоватьЗагрузкуДокументов");
			РезультатНастройки.Вставить("НастройкаПодключения",    НастройкаПодключения);
			РезультатНастройки.Вставить("РегистрационныйНомерККТ", РегистрационныйНомерККТ);
			РезультатНастройки.Вставить("ЗаводскойНомерФН",        ЗаводскойНомерФН);
			РезультатНастройки.Вставить("СценарийИспользования",   "ИспользоватьЗагрузкуДокументов");
			РезультатНастройки.Вставить(
				"Магазин",
				Элементы.Магазин.СписокВыбора.НайтиПоЗначению(Магазин).Представление);
			РезультатНастройки.Вставить(
				"ПредставлениеКассы",
				Элементы.Касса.СписокВыбора.НайтиПоЗначению(Касса).Представление);
				
			// Создание экз.подключаемого оборудования
			МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента();
			
			ИдентификаторУстройства = СоздатьЭкземплярПодключаемогоОборудованияНаСервере(
				Организация, Склад, СтрШаблон(НСтр("ru = 'Магазин:%1 Касса:%2'"), МагазинПредставление, КассаПредставление));
			
			ОповещениеОЗавершении = Новый ОписаниеОповещения("СоздатьЭкземплярОборудованияЗавершение", ЭтотОбъект, РезультатНастройки);
			МенеджерОфлайнОборудованияКлиент.ВыполнитьНастройкуОборудования(ИдентификаторУстройства, ОповещениеОЗавершении,Ложь);
			
			// создание экз.подключаемого оборудования.завершение
			
			
		КонецЕсли;
		
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		
		УстановитьОтображениеИнформацииОбОшибке(Результат.КраткоеПредставлениеОшибки)
		
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры 

&НаКлиенте
Процедура СоздатьЭкземплярОборудованияЗавершение(Результат, РезультатНастройки) Экспорт
	Если НЕ Результат Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не удалось подключить кассу. '"));
		Возврат;
	КонецЕсли;

	ЗаписатьНастройкиКассы(ИдентификаторУстройства, РезультатНастройки);
	
	УстановитьОтображениеУспешногоЗавершения();
	
	ДатаЗагрузки = ТекущаяДата();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьНастройкиКассы(Знач КассаОФД, Знач РезультатНастройки)
	
	РегистрыСведений.НастройкиКассОФД.ЗаписатьНастройкиКассы(
		КассаОФД,
		РезультатНастройки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СоздатьЭкземплярПодключаемогоОборудованияНаСервере(Организация, Склад, Наименование)
	ОбъектКассаОФД = Справочники.ОфлайнОборудование.СоздатьЭлемент();
	
	ОбъектКассаОФД.Организация = Организация;
	ОбъектКассаОФД.Наименование = Наименование;
	ОбъектКассаОФД.ТипОфлайнОборудования = Перечисления.ТипыОфлайнОборудования.ОФД;
	ОбъектКассаОФД.ОбработчикОфлайнОборудования = Перечисления.ОбработчикиОфлайнОборудования.ОбработчикОФД;
	
	ОбъектКассаОФД.ТипПодключенияОборудования = Перечисления.ТипыПодключенияОборудования.ЛокальноеПодключение;
	ОбъектКассаОФД.РабочееМесто = МенеджерОборудованияВызовСервера.РабочееМестоКлиента();
	
	ОбъектКассаОФД.Записать();
	
	МенеджерЗаписи = РегистрыСведений.ОборудованиеПоОрганизациям.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Оборудование = ОбъектКассаОФД.Ссылка;
	МенеджерЗаписи.Организация  = Организация;
	МенеджерЗаписи.Склад        = Склад;
	МенеджерЗаписи.Записать(Истина);
	
	Возврат ОбъектКассаОФД.Ссылка;
КонецФункции

&НаКлиенте
Процедура Назад(Команда)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиПодключения Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборУчастника;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаРезультат Тогда
		Если ДанныеУчастниковЗагружены Тогда
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиПодключения;
		Иначе
			ПолучитьУчастниковОФД();
		КонецЕсли;
	КонецЕсли;

	УстановитьВидимостьДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Подключение

&НаСервереБезКонтекста
Процедура ПроверитьПодключениеКПорталу1СИТС(Логин, Пароль, Отказ)
	
	РезультатПроверки = ИнтернетПоддержкаПользователей.ПроверитьЛогинИПароль(
		Логин,
		Пароль);
	
	Если РезультатПроверки.Результат Тогда
		
		ДанныеАутентификации = Новый Структура;
		ДанныеАутентификации.Вставить("Логин", Логин);
		ДанныеАутентификации.Вставить("Пароль", Пароль);
		
		УстановитьПривилегированныйРежим(Истина);
		ИнтернетПоддержкаПользователей.СохранитьДанныеАутентификации(
			ДанныеАутентификации);
		УстановитьПривилегированныйРежим(Ложь);
	Иначе
		ОбщегоНазначения.СообщитьПользователю(
			РезультатПроверки.СообщениеОбОшибке,
			,
			,
			,
			Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПараметрыПодключения(Отказ)
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	РезультатВыполнения = ПроверитьПараметрыПодключенияЗапускЗадания(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ПроверитьПараметрыПодключенияЗавершение",
		ЭтотОбъект);
		
	Если РезультатВыполнения.Статус = "Выполнено" Или РезультатВыполнения.Статус = "Ошибка" Тогда
		ПроверитьПараметрыПодключенияЗавершение(РезультатВыполнения, Неопределено);
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДлительнаяОперация;
	Элементы.ДекорацияСостояние.Заголовок   = НСтр("ru = 'Проверка параметров подключения к оператору фискальных данных, пожалуйста, подождите.'");
	
	УстановитьВидимостьДоступность();
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьПараметрыПодключенияЗапускЗадания(Отказ)
	
	ОФДСлужебный.ПроверитьНастройкиАутентификации(
		ЭтотОбъект,
		Отказ);
	
	Если Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПараметрыАутентификации = ОФДСлужебный.НастройкиАутентификацииПоДаннымФормы(ЭтотОбъект);
	ПараметрыАутентификации.Вставить("ТипАутентификации", ТипАутентификации);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(
		ЭтотОбъект.УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания
		= НСтр("ru = 'Проверка параметров подключения к оператору фискальных данных.'");
	
	РезультатВыполнения = ДлительныеОперации.ВыполнитьФункцию(
		ПараметрыВыполнения,
		"ОФДСлужебный.ПроверитьПараметрыПодключения",
		ИдентификаторУчастника,
		ПараметрыАутентификации);
	
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура ПроверитьПараметрыПодключенияЗавершение(
		Результат,
		ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		
		РезультатОперации = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Если ЗначениеЗаполнено(РезультатОперации.КодОшибки) Тогда
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиПодключения;
			ПоказатьПредупреждение(
				Неопределено,
				РезультатОперации.СообщениеОбОшибке);
		Иначе
			НоваяНастройкаПодключения();
			ПолучитьКассы();
		КонецЕсли;
		
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиПодключения;
		ИнформацияОбОшибке = Результат.КраткоеПредставлениеОшибки;
		ПоказатьПредупреждение(
			Неопределено,
			ИнформацияОбОшибке);
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьНастройкиПодключения()
	
	ОФДСлужебный.УдалитьНастройкиАутентификации(
		ЭтотОбъект);
		
	ПараметрыПодсказки = ОФДСлужебный.НовыйПараметрПодсказки();
	ПараметрыПодсказки.ОтобразитьПодсказку  = ЗначениеЗаполнено(АдресЛичногоКабинета);
	ПараметрыПодсказки.АдресЛичногоКабинета = АдресЛичногоКабинета;
	
	ДанныеНастройки = Новый Структура;
	ДанныеНастройки.Вставить("НастройкаПодключения",  Справочники.НастройкиПодключенияКОФД.ПустаяСсылка());
	ДанныеНастройки.Вставить("ТипАутентификации",     ТипАутентификации);
	ДанныеНастройки.Вставить("НаименованиеУчастника", Наименование);
	
	ОФДСлужебный.ДобавитьНастройкиАутентификации(
		ЭтотОбъект,
		Элементы.ГруппаНастройкиАутентификации,
		ДанныеНастройки,
		ПараметрыПодсказки);
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиПодключения;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьКассы()
	
	ДанныеКасс = Неопределено;
	Магазин    = Неопределено;
	Касса      = Неопределено;
	
	Элементы.Магазин.СписокВыбора.Очистить();
	Элементы.Касса.СписокВыбора.Очистить();
	
	Если Не ЗначениеЗаполнено(НастройкаПодключения) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	РезультатВыполнения = ПолучитьКассыЗапускЗадания();
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ПолучитьКассыЗавершение",
		ЭтотОбъект);
		
	Если РезультатВыполнения.Статус = "Выполнено" Или РезультатВыполнения.Статус = "Ошибка" Тогда
		ПолучитьКассыЗавершение(РезультатВыполнения, Неопределено);
		Возврат;
	КонецЕсли;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);

КонецПроцедуры

&НаСервере
Функция ПолучитьКассыЗапускЗадания()
	
	Элементы.ДекорацияСостояние.Заголовок =
		НСтр("ru = 'Получение списка касс по данным ОФД. Пожалуйста подождите.'");
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДлительнаяОперация;
	
	ПараметрыФункции = Новый Структура;
	ПараметрыФункции.Вставить("НастройкаПодключения", НастройкаПодключения);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(
		ЭтотОбъект.УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания
		= НСтр("ru = 'Получение списка касс по данным оператора фискальных данных.'");
	
	РезультатВыполнения = ДлительныеОперации.ВыполнитьФункцию(
		ПараметрыВыполнения,
		"ОФДСлужебный.КассыНастройкиПодключения",
		ПараметрыФункции);
	
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура ПолучитьКассыЗавершение(
		Результат,
		ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		
		РезультатОперации = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		
		Если ЗначениеЗаполнено(РезультатОперации.КодОшибки) Тогда
			УстановитьОтображениеИнформацииОбОшибке(РезультатОперации.СообщениеОбОшибке);
		Иначе
			
			ДанныеКасс = Новый Структура;
			
			Для Каждого КлючЗначение Из РезультатОперации.ДанныеКасс Цикл
				
				ОписаниеКасс = Новый Структура;
				
				Для Каждого ОписаниеКассы Из КлючЗначение.ПереченьКасс Цикл
					
					ДанныеКассы = Новый Структура;
					ДанныеКассы.Вставить(
						"Наименование",
						ОписаниеКассы.Наименование);
					ДанныеКассы.Вставить(
						"НомерФискальногоНакопителя",
						ОписаниеКассы.НомерФискальногоНакопителя);
					ДанныеКассы.Вставить(
						"РегистрационныйНомер",
						ОписаниеКассы.РегистрационныйНомер);
					
					ОписаниеКасс.Вставить(ОписаниеКассы.Идентификатор, ДанныеКассы);
					
				КонецЦикла;
				
				Элементы.Магазин.СписокВыбора.Добавить(
					КлючЗначение.Идентификатор,
					КлючЗначение.Наименование);
				ДанныеКасс.Вставить(
					КлючЗначение.Идентификатор,
					ОписаниеКасс);
				
			КонецЦикла;
			
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПрикладныеНастройки;
			
			СписокКассПолучен = Истина;
			
		КонецЕсли;
		
		УстановитьВидимостьДоступность();
		
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		
		УстановитьОтображениеИнформацииОбОшибке(Результат.КраткоеПредставлениеОшибки);
		
		УстановитьВидимостьДоступность();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокКасс()
	
	Элементы.Касса.СписокВыбора.Очистить();
	
	Для Каждого ОписаниеКассы Из ДанныеКасс[Магазин] Цикл
		Элементы.Касса.СписокВыбора.Добавить(
			ОписаниеКассы.Ключ,
			ОписаниеКассы.Значение.Наименование);
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти

#Область УчастникиОФД

&НаКлиенте
Процедура ПолучитьУчастниковОФД()
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	РезультатВыполнения = ПолучитьУчастниковОФДЗапускЗадания(
		ЭтотОбъект.УникальныйИдентификатор);
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ПолучитьУчастниковОФДЗапускЗаданияЗавершение",
		ЭтотОбъект);
		
	Если РезультатВыполнения.Статус = "Выполнено" Или РезультатВыполнения.Статус = "Ошибка" Тогда
		ПолучитьУчастниковОФДЗапускЗаданияЗавершение(
			РезультатВыполнения,
			Неопределено);
		Возврат;
	КонецЕсли;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьУчастниковОФДЗапускЗадания(УникальныйИдентификатор)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Получение актуального списка участников ОФД.'");
	
	РезультатВыполнения = ДлительныеОперации.ВыполнитьФункцию(
		ПараметрыВыполнения,
		"ОФДСлужебный.ПолучитьУчастниковОФД");
	
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура ПолучитьУчастниковОФДЗапускЗаданияЗавершение(
		Результат,
		ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		
		РезультатОперации = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		Если ЗначениеЗаполнено(РезультатОперации.КодОшибки) Тогда
			УстановитьОтображениеИнформацииОбОшибке(
				РезультатОперации.СообщениеОбОшибке,
				Ложь,
				Ложь);
		Иначе
			
			Для Каждого КлючЗначение Из РезультатОперации.ДанныеУчастников Цикл
				
				НовыйУчастник                          = УчастникиОФД.Добавить();
				НовыйУчастник.Участник                 = КлючЗначение.Значение.Представление;
				НовыйУчастник.ИдентификаторУчастника   = КлючЗначение.Ключ;
				НовыйУчастник.ТипАутентификации        = КлючЗначение.Значение.ТипАутентификации;
				НовыйУчастник.АдресЛичногоКабинета     = КлючЗначение.Значение.АдресЛичногоКабинета; 
				
				ДанныеУчастников = РезультатОперации.ДанныеУчастников;
				
			КонецЦикла;
			
			Если Не ЕстьНастройкиПодключения Тогда
				Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОбщаяИнформация;
			ИначеЕсли Не ЗаполненыДанныеАутентификации Тогда
				Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПодключениеКПорталу;
			Иначе
				Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборУчастника;
			КонецЕсли;
			
			ДанныеУчастниковЗагружены = Истина;
			
			Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборУчастника 
				И УчастникиОФД.Количество() = 1 Тогда
			
				СтрокаУчастникОФД = УчастникиОФД[0];
				
				ИдентификаторУчастника   = СтрокаУчастникОФД.ИдентификаторУчастника;
				ТипАутентификации        = СтрокаУчастникОФД.ТипАутентификации;
				Наименование             = СтрокаУчастникОФД.Участник;
				АдресЛичногоКабинета     = СтрокаУчастникОФД.АдресЛичногоКабинета;
				
				ДобавитьНастройкиПодключения();
			
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ИнформацияОбОшибке = Результат.КраткоеПредставлениеОшибки;
		УстановитьОтображениеИнформацииОбОшибке(ИнформацияОбОшибке);
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область УчастникиОФД

&НаСервере
Процедура УстановитьОтображениеИнформацииОбОшибке(
		ИнформацияОбОшибке,
		Ошибка = Истина,
		ОтображатьЖР = Истина)
	
	Если ОтображатьЖР Тогда
		ПредставлениеОшибки = ИнтернетПоддержкаПользователейКлиентСервер.ФорматированнаяСтрокаИзHTML(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1
					|
					|
					|Подробную информацию см. в %2.'"),
				ИнформацияОбОшибке,
				?(
					ОФДВызовСервера.ЭтоПолноправныйПользователь(),
					НСтр("ru = '<a href = ""open:log"">Журнале регистрации</a>'"),
					НСтр("ru = 'Журнале регистрации'"))));
		
	Иначе
		ПредставлениеОшибки = ИнформацияОбОшибке;
	КонецЕсли;
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница        = Элементы.ГруппаРезультат;
	Элементы.ДекорацияОписаниеРезультата.Заголовок = ПредставлениеОшибки;
	Элементы.ДекорацияКартинкаРезультат.Картинка   = ?(Ошибка,
		БиблиотекаКартинок.Ошибка32,
		БиблиотекаКартинок.Предупреждение32);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображениеУспешногоЗавершения()
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаРезультат;
	Элементы.ДекорацияКартинкаРезультат.Картинка = БиблиотекаКартинок.Успешно32;
	ПодключениеЗавершено = Истина;
	Элементы.ДекорацияОписаниеРезультата.Заголовок = НСтр("ru = 'Настройка подключения создана.'");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступность()
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОбщаяИнформация
		Или Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПодключениеКПорталу
		Или Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыборУчастника Тогда
		Элементы.Назад.Видимость = Ложь;
		Элементы.Далее.Видимость = Истина;
	ИначеЕсли  Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаНастройкиПодключения
		ИЛИ Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПрикладныеНастройки Тогда
		Элементы.Назад.Видимость = Истина;
		Элементы.Далее.Видимость = Истина;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДлительнаяОперация Тогда
		Элементы.Назад.Видимость = Ложь;
		Элементы.Далее.Видимость = Ложь;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаРезультат Тогда
		Если ПодключениеЗавершено Тогда
			Элементы.Назад.Видимость  = Ложь;
			Элементы.Отмена.Видимость = Ложь;
			Элементы.Далее.Видимость  = Истина;
			Элементы.Далее.Заголовок  = НСтр("ru = 'Готово'");
		ИначеЕсли Не ДанныеУчастниковЗагружены Тогда
			Элементы.Назад.Видимость  = Ложь;
			Элементы.Отмена.Видимость = Истина;
			Элементы.Далее.Видимость  = Ложь;
		Иначе
			Элементы.Назад.Видимость  = Истина;
			Элементы.Отмена.Видимость = Истина;
			Элементы.Далее.Видимость  = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура НоваяНастройкаПодключения()
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("Наименование", Наименование);
	ПараметрыЗаполнения.Вставить("ИдентификаторУчастника", ИдентификаторУчастника);
	
	ПараметрыАутентификации = ОФДСлужебный.НастройкиАутентификацииПоДаннымФормы(ЭтотОбъект);
	ПараметрыАутентификации.Вставить("ТипАутентификации", ТипАутентификации);
	
	Результат = Справочники.НастройкиПодключенияКОФД.НоваяНастройкаПодключения(
		ПараметрыЗаполнения,
		ПараметрыАутентификации);
	
	Если Результат.Ошибка Тогда
		УстановитьОтображениеИнформацииОбОшибке(
			Результат.СообщениеОбОшибке,
			Истина,
			Ложь);
	Иначе
		НастройкаПодключения = Результат.Ссылка;
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
