
#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДокументЗагрузки = Параметры.ДокументЗагрузки;
	
	ЗаполнитьТаблицуТовары();
	
	УстановитьУсловноеОформление();
	
	Если Не ЗначениеЗаполнено(ВидНоменклатуры) Тогда
		ВидНоменклатуры = Справочники.ВидыНоменклатуры.ЭлементВидНоменклатурыПоУмолчанию(
			РаботаСНоменклатуройБП.УслугаПриоритетныйВидНоменклатуры());
	КонецЕсли;
	
	// Установка значений реквизитов для новой номенклатуры по умолчанию
	НоменклатурнаяГруппа = ?(ЗначениеЗаполнено(НоменклатурнаяГруппа), НоменклатурнаяГруппа,
		БухгалтерскийУчетВызовСервераПовтИсп.ОсновнаяНоменклатурнаяГруппа());
	ЕдиницаИзмерения     = ?(ЗначениеЗаполнено(ЕдиницаИзмерения), ЕдиницаИзмерения,
		Справочники.КлассификаторЕдиницИзмерения.ЕдиницаИзмеренияПоКоду("796")); // единица измерения по умолчанию - штука
	СтавкаНДС            = ?(ЗначениеЗаполнено(СтавкаНДС), СтавкаНДС, УчетНДСКлиентСервер.СтавкаНДСПользователя(ТекущаяДата()));
	ДатаУстановкиЦен     = ТекущаяДатаСеанса();
	
	УстановитьОтборВТаблице(ЭтотОбъект, ОтборТаблицы);
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	ЕстьНесопоставленные = Ложь;
	Для каждого СтрокаТовары Из ТаблицаТовары Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТовары.НоменклатураСсылка) Тогда
			ЕстьНесопоставленные = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьНесопоставленные Тогда
		ПоказатьВопрос(НОвый ОписаниеОповещения("ВопросСозданиеЗавершение", ЭтотОбъект),НСтр("ru = 'Для части наименований из чека не сопоставлена номенклатура.
	                          |В документе эти строки останутся незаполненными
	                          |Продолжить?'"),РежимДиалогаВопрос.ДаНет,15);
	Иначе
		СопоставитьНоменклатуруНаСервере(ТаблицаТовары);
		Закрыть();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыСопоставленияНоменклатуры
&НаКлиенте
Процедура ТаблицаСопоставленияНоменклатураАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ТекДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекДанные <> Неопределено
		И ТекДанные.НоменклатураСсылка.Пустая()
		И ТекДанные.СписокНоменклатуры.Количество() > 1 Тогда
		
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = Новый СписокЗначений;
		Представление = СтрШаблон(НСтр("ru = 'Найдено в моей базе (%1)'"), ТекДанные.СписокНоменклатуры);
		ДанныеВыбора.Добавить("ВыбратьИзСписка", Представление,, БиблиотекаКартинок.ВыбратьЗначение);
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСопоставленияНоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекДанные <> Неопределено 
		И ТипЗнч(ВыбранноеЗначение) = Тип("Строка") Тогда
		СтандартнаяОбработка = Ложь;
		Отбор = Новый Структура();
		
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("РежимВыбора", Истина);
		ПараметрыФормы.Вставить("Заголовок", НСтр("ru = 'Выберите номенклатуру из списка'"));
		ПараметрыФормы.Вставить("Отбор", Новый Структура("Ссылка", Новый ФиксированныйМассив(ТекДанные.СписокНоменклатуры.ВыгрузитьЗначения())));
		ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора",ПараметрыФормы, Элемент,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураСоздание(Элемент, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", 
		Новый Структура("Наименование", ТекущиеДанные.НоменклатураНаименование));
	ПараметрыФормы.Вставить("Штрихкоды", ТекущиеДанные.Штрихкод);
	
	ОповещениеОСоздании = Новый ОписаниеОповещения("ТоварыНоменклатураСозданиеЗавершение", ЭтотОбъект, 
		Новый Структура("ТекущиеДанные", ТекущиеДанные));
	
	ОткрытьФорму("Справочник.Номенклатура.ФормаОбъекта", ПараметрыФормы, Элемент,,,,ОповещениеОСоздании);
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборТаблицыПриИзменении(Элемент)
	
	УстановитьОтборВТаблице(ЭтотОбъект, ОтборТаблицы);
	
КонецПроцедуры 
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
	
&НаКлиенте
Процедура ВопросСозданиеЗавершение(Значение, Допреквизиты) Экспорт

	Если Значение = КодВозвратаДиалога.Да Тогда
		СопоставитьНоменклатуруНаСервере(ТаблицаТовары);
		Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура СопоставитьНоменклатуруНаСервере(Знач ТаблицаТовары)
	
	Для каждого СтрокаТовары Из ТаблицаТовары Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТовары.НоменклатураСсылка) Тогда
			Продолжить;
		КонецЕсли;
		
		НаборЗаписей = РегистрыСведений.СопоставлениеНоменклатурыОФД.СоздатьНаборЗаписей();
		
		// Считаем поиск по штрихкоду в приоритете. 
		// Если в ИБ уже есть номенклатура с другим наименованием, но этим штрихкодом - перепишем наименование во избежании коллизий
		Если НЕ ЗначениеЗаполнено(СтрокаТовары.Штрихкод) Тогда
			НаборЗаписей.Отбор.НоменклатураНаименование.Установить(СтрокаТовары.НоменклатураНаименование);
		КонецЕсли;
		
		НаборЗаписей.Отбор.Штрихкод.Установить(СтрокаТовары.Штрихкод);
		
		НоваяЗапись = НаборЗаписей.Добавить();
	
		НоваяЗапись.НоменклатураНаименование = СтрокаТовары.НоменклатураНаименование;
		НоваяЗапись.Номенклатура             = СтрокаТовары.НоменклатураСсылка;
		НоваяЗапись.Штрихкод                 = СтрокаТовары.Штрихкод;
		
		НаборЗаписей.Записать();
	КонецЦикла;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СтатусНайденный()
	Возврат 2;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтатусНовый()
	Возврат 0;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтатусДубль()
	Возврат 1;
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуТовары()

	ТекстыЗапросов = Новый Массив;
	ТекстыЗапросов.Добавить(
	"ВЫБРАТЬ
	|	НоменклатураДокументовОФД.ДокументЗагрузки КАК ДокументЗагрузки,
	|	НоменклатураДокументовОФД.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	НоменклатураДокументовОФД.НоменклатураНаименование КАК НоменклатураНаименование,
	|	НоменклатураДокументовОФД.Штрихкод КАК Штрихкод
	|ПОМЕСТИТЬ ВТ_НоменклатураЧековДокументов
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураДокументовОФД КАК НоменклатураДокументовОФД
	|		ПО ОтчетОРозничныхПродажах.Ссылка = НоменклатураДокументовОФД.ДокументЗагрузки
	|			И ОтчетОРозничныхПродажах.Организация = НоменклатураДокументовОФД.Организация
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка = &ДокументЗагрузки
	|	И НЕ НоменклатураДокументовОФД.ДокументЗагрузки ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НоменклатураЧековДокументов.НоменклатураНаименование КАК Наименование,
	|	ВТ_НоменклатураЧековДокументов.Штрихкод КАК Штрихкод,
	|	ВТ_НоменклатураЧековДокументов.ИдентификаторСтроки КАК Идентификатор
	|ПОМЕСТИТЬ ВТ_НоменклатураЧеков
	|ИЗ
	|	ВТ_НоменклатураЧековДокументов КАК ВТ_НоменклатураЧековДокументов");
	ТекстыЗапросов.Добавить(РегистрыСведений.СопоставлениеНоменклатурыОФД.ТекстЗапросаПоискПодходящего());
	ТекстыЗапросов.Добавить(
	"ВЫБРАТЬ
	|	ВТ_НоменклатураЧековДокументов.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ЕСТЬNULL(ВТ_СопоставленнаяНоменклатура.НоменклатураСсылка, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК НоменклатураСсылка,
	|	ВТ_НоменклатураЧековДокументов.Штрихкод КАК Штрихкод,
	|	ВЫБОР ВТ_НоменклатураЧековДокументов.Штрихкод
	|		КОГДА """"
	|			ТОГДА ""<штрихкод не указан>""
	|		ИНАЧЕ ""Штрихкод:"" + ВТ_НоменклатураЧековДокументов.Штрихкод
	|	КОНЕЦ КАК ШтрихкодПредставление,
	|	ВТ_НоменклатураЧековДокументов.НоменклатураНаименование КАК Представление
	|ИЗ
	|	ВТ_НоменклатураЧековДокументов КАК ВТ_НоменклатураЧековДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СопоставленнаяНоменклатура КАК ВТ_СопоставленнаяНоменклатура
	|		ПО ВТ_НоменклатураЧековДокументов.ИдентификаторСтроки = ВТ_СопоставленнаяНоменклатура.ИдентификаторСтроки
	|ИТОГИ ПО
	|	Представление,
	|	Штрихкод,
	|	НоменклатураСсылка,
	|	ИдентификаторСтроки");
	
	Запрос = Новый Запрос(СтрСоединить(ТекстыЗапросов, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета()));
	
	Запрос.УстановитьПараметр("ДокументЗагрузки", ДокументЗагрузки);
	
	Справочник = Метаданные.Справочники.Номенклатура; 
	Документ = Метаданные.Документы.ОтчетОРозничныхПродажах.ТабличныеЧасти.Товары;
	ИзмерениеШтрихкод = Метаданные.РегистрыСведений.ШтрихкодыНоменклатуры.Измерения.Штрихкод;
	
	ДанныеПоиска = Новый ТаблицаЗначений;
	ДанныеПоиска.Колонки.Добавить("НомерСтроки",        Новый ОписаниеТипов("УникальныйИдентификатор"));
	ДанныеПоиска.Колонки.Добавить("Наименование",       ОбщегоНазначения.ОписаниеТипаСтрока(Справочник.ДлинаНаименования));
	ДанныеПоиска.Колонки.Добавить("НаименованиеПолное", Справочник.Реквизиты.НаименованиеПолное.Тип);
	ДанныеПоиска.Колонки.Добавить("Артикул",            Справочник.Реквизиты.Артикул.Тип);
	ДанныеПоиска.Колонки.Добавить("Штрихкод",           ИзмерениеШтрихкод.Тип);
	ДанныеПоиска.Колонки.Добавить("ЕдиницаИзмерения",   Новый ОписаниеТипов("СправочникСсылка.КлассификаторЕдиницИзмерения"));
	ДанныеПоиска.Колонки.Добавить("Номенклатура",       Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	
	ВыборкаНаименование = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНаименование.Следующий() Цикл
		ВыборкаШтрихкод = ВыборкаНаименование.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаШтрихкод.Следующий() Цикл
			ВыборкаСсылка = ВыборкаШтрихкод.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаСсылка.Следующий() Цикл 
				Ключ = Новый УникальныйИдентификатор;
				
				Если ВыборкаСсылка.НоменклатураСсылка.Пустая() Тогда
					ЗаписьПоиска = ДанныеПоиска.Добавить();
					
					ЗаписьПоиска.НомерСтроки        = Ключ;
					ЗаписьПоиска.Наименование       = ВыборкаСсылка.Представление;
					ЗаписьПоиска.НаименованиеПолное = ВыборкаСсылка.Представление;
					ЗаписьПоиска.Штрихкод           = ВыборкаСсылка.Штрихкод;
				КонецЕсли;
				
				СтрокаСопоставление = ТаблицаТовары.Добавить();
				
				СтрокаСопоставление.ИдентификаторНоменклатуры = Ключ;
				СтрокаСопоставление.Статус                    = СтатусНовый();
				СтрокаСопоставление.Представление             = ВыборкаСсылка.Представление;
				СтрокаСопоставление.НоменклатураНаименование  = ВыборкаСсылка.Представление;
				СтрокаСопоставление.НоменклатураСсылка        = ВыборкаСсылка.НоменклатураСсылка;
				СтрокаСопоставление.Штрихкод                  = ВыборкаСсылка.Штрихкод;
				СтрокаСопоставление.ШтрихкодПредставление     = ВыборкаСсылка.ШтрихкодПредставление;
				
				ВыборкаНомераСтрок = ВыборкаСсылка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаНомераСтрок.Следующий() Цикл
					СтрокаСопоставление.ИдентификаторСтроки.Добавить(ВыборкаНомераСтрок.ИдентификаторСтроки);
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Запрос = Обработки.ЗагрузкаНоменклатурыИзФайла.ЗапросПоискаНоменклатуры(ДанныеПоиска);
	ВыборкаНомерСтроки = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Результат = Новый Соответствие;
	
	Пока ВыборкаНомерСтроки.Следующий() Цикл
		
		НайденнаяНоменклатура = Новый Массив;
		
		ВыборкаВесСтроки = ВыборкаНомерСтроки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаВесСтроки.Следующий() Цикл
			ВыборкаНоменклатура = ВыборкаВесСтроки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаНоменклатура.Следующий() Цикл
				НайденнаяНоменклатура.Добавить(ВыборкаНоменклатура.Номенклатура);
			КонецЦикла;
		КонецЦикла;
		
		Если Не ЗначениеЗаполнено(НайденнаяНоменклатура) Тогда
			Продолжить;
		Иначе
			Значение = НайденнаяНоменклатура;
		КонецЕсли;
		
		Результат.Вставить(ВыборкаНомерСтроки.НомерСтроки, Значение);
		
	КонецЦикла;
	
	Для каждого СтрокаТаблицы Из ТаблицаТовары Цикл
	
		НайденноеЗначение = Результат[СтрокаТаблицы.ИдентификаторНоменклатуры];
		Если НайденноеЗначение = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТаблицы.СписокНоменклатуры.ЗагрузитьЗначения(НайденноеЗначение);
		Если НайденноеЗначение.Количество() = 1 Тогда
			СтрокаТаблицы.НоменклатураСсылка = НайденноеЗначение[0];
			СтрокаТаблицы.Статус = СтатусНайденный();
		Иначе
			СтрокаТаблицы.Представление = СтрШаблон(НСтр("ru = 'Найдено в моей базе (%1)'"), НайденноеЗначение.Количество());
			СтрокаТаблицы.Статус = СтатусДубль();
		КонецЕсли;
	
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// Серый текст для новой номенклатуры
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТоварыНоменклатура");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ТаблицаТовары.НоменклатураСсылка", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ТаблицаТовары.Статус", ВидСравненияКомпоновкиДанных.Равно, СтатусНовый());
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.ТемноСерый);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", Новый ПолеКомпоновкиДанных("ТаблицаТовары.Представление"));
	
	// Красный текст для дублей
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТоварыНоменклатура");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ТаблицаТовары.НоменклатураСсылка", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ТаблицаТовары.Статус", ВидСравненияКомпоновкиДанных.Равно, СтатусДубль());
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Кирпичный);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", Новый ПолеКомпоновкиДанных("ТаблицаТовары.Представление"));
	
	// Устанавливаем отметку незаполненного, если номенклатура была сначала найдена, а потом очищена
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ТоварыНоменклатура");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ТаблицаТовары.НоменклатураСсылка", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ТаблицаТовары.Статус", ВидСравненияКомпоновкиДанных.Равно, СтатусНайденный());
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыНовойНоменклатурыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено И НЕ Результат = КодВозвратаДиалога.Отмена Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Результат);
		ГруппаНоменклатуры = Результат.Родитель;
		Модифицированность =Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборВТаблице(Форма, ОтборТаблицы)
	
	Элементы = Форма.Элементы;
	
	Если ОтборТаблицы Тогда
		Элементы.Товары.ОтборСтрок = Новый ФиксированнаяСтруктура("НоменклатураСсылка", ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"));
	Иначе
		Элементы.Товары.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураСозданиеЗавершение(Значение, ДополнительныеПараметры) Экспорт
	ДополнительныеПараметры.ТекущиеДанные.НоменклатураСсылка = ДополнительныеПараметры.НоменклатураСсылка;
КонецПроцедуры

#КонецОбласти


