#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтаОбработка = РеквизитФормыВЗначение("Объект");
	СКД = ЭтаОбработка.ПолучитьМакет("РасшифровкаСумм");
	СКД.Параметры.ДатаПереходаНачалоДня.Значение = НачалоДня(Параметры.ДатаПерехода);
	СКД.Параметры.ДатаПерехода.Значение = Новый Граница(КонецДня(Параметры.ДатаПерехода), ВидГраницы.Включая);
	СКД.Параметры.Организация.Значение = Параметры.Организация;
	
	ИнформацияШапка = Новый Структура();
	ИнформацияШапка.Вставить("Организация", Параметры.Организация);
	ИнформацияШапка.Вставить("ДатаПерехода", Параметры.ДатаПерехода);
	ИнформацияШапка.Вставить("ДатаПереходаСтрокой", Формат(Параметры.ДатаПерехода, "ДЛФ=D"));
	ИнформацияШапка.Вставить("ТекущаяДатаСтрокой", Формат(ТекущаяДатаСеанса(), "ДЛФ=D"));
	ИнформацияШапка.Вставить("ГодУчетаОстатковСтрокой", Формат(ДобавитьМесяц(Параметры.ДатаПерехода,1), "ДФ=yyyy"));
	
	Если Параметры.РазделУчета = "Товары" Тогда
		ВывестиРасшифровкуПоТоварам(СКД, ИнформацияШапка, Параметры.ТребуетсяИсправление);
	ИначеЕсли Параметры.РазделУчета = "Материалы" Тогда
		ВывестиРасшифровкуПоМатериалам(СКД, ИнформацияШапка, Параметры.ТребуетсяИсправление);
	ИначеЕсли Параметры.РазделУчета = "Зарплата" Тогда
		ВывестиРасшифровкуПоЗарплате(СКД, ИнформацияШапка, Параметры.ТребуетсяИсправление);
	ИначеЕсли Параметры.РазделУчета = "Взносы" Тогда
		ВывестиРасшифровкуПоВзносам(СКД, ИнформацияШапка, Параметры.ТребуетсяИсправление);
	ИначеЕсли Параметры.РазделУчета = "Расходы" Тогда
		ВывестиРасшифровкуПоРасходам(СКД, ИнформацияШапка, Параметры.ТребуетсяИсправление);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаСервере
Процедура ВывестиШапкуОтчета(Результат, Контекст)
	
	Макет = ПолучитьОбщийМакет("ОбщиеОбластиСтандартногоОтчета");
	
	// Организация
	ОбластьВывода = Макет.ПолучитьОбласть("Организация");
	ОбластьВывода.Параметры.НазваниеОрганизации = БухгалтерскиеОтчетыВызовСервера.ПолучитьТекстОрганизация(
		Контекст.Организация,
		Ложь);
	Результат.Вывести(ОбластьВывода);
	
	// Название отчета
	ОбластьВывода = Макет.ПолучитьОбласть("ОбластьЗаголовок");
	ОбластьВывода.Параметры.ЗаголовокОтчета = СтрШаблон(Контекст.Заголовок, Контекст.ДатаПереходаСтрокой);
	Результат.Вывести(ОбластьВывода);
	
	// Организация и название образуют заголовок
	ОбластьЗаголовка = Результат.Область(1, , Результат.ВысотаТаблицы);
	ОбластьЗаголовка.Имя = "Заголовок";
	
	// Описание настроек
	ОбластьВывода = Макет.ПолучитьОбласть("ОписаниеНастроек");
	Если Контекст.ИмяНастроекОтчета = "Учитывать" Тогда
		ТекстНастроекОтчета = НСтр("ru = 'Сформировано по состоянию на %1.
			|Могут быть учтены, как расходы в новом налоговом периоде в %2 г.'");
	ИначеЕсли Контекст.ИмяНастроекОтчета = "Исключать" Тогда
		ТекстНастроекОтчета = НСтр("ru = 'Сформировано по состоянию на %1.
			|Будут исключены из расходов в новом налоговом периоде в %2 г.'")
	КонецЕсли;
	ОбластьВывода.Параметры.ИмяНастроекОтчета = СтрШаблон(ТекстНастроекОтчета,
		Контекст.ТекущаяДатаСтрокой,
		Контекст.ГодУчетаОстатковСтрокой);
	Результат.Вывести(ОбластьВывода);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВывестиРасшифровкуПоТоварам(СКД, ИнформацияШапка, ТребуетсяИсправление)
	ЭтотОбъект.Заголовок = НСтр("ru = 'Расшифровка сумм по товарам'");
	
	ИнформацияШапка.Вставить("Заголовок", НСтр("ru = 'Остатки товаров на %1г.'"));
	ИнформацияШапка.Вставить("ИмяНастроекОтчета", "Учитывать");
	ВывестиШапкуОтчета(Результат, ИнформацияШапка);
	
	Если Не ТребуетсяИсправление Тогда
		Настройки = СКД.ВариантыНастроек.Товары.Настройки;
		ВнешняяТаблицаДанных = Новый Структура("ВнешняяТаблицаДанныхСКД",
		Обработки.ВводОстатковПриИзмененииОбъектаУСН.РасшифровкаПоТоварам(Параметры));
	Иначе
		Настройки = СКД.ВариантыНастроек.ТоварыМатериалыРасхождения.Настройки;
		ВнешняяТаблицаДанных = Новый Структура("ВнешняяТаблицаДанныхСРасхождениямиСКД",
		Обработки.ВводОстатковПриИзмененииОбъектаУСН.РасшифровкаПоТоварамМатериаламСРасхождениями(Параметры,
			Перечисления.РазделыУчетаДляВводаОстатков.Товары));
	КонецЕсли;
	ВывестиВТаблицу(СКД, Настройки, ВнешняяТаблицаДанных);
КонецПроцедуры

&НаСервере
Процедура ВывестиРасшифровкуПоМатериалам(СКД, ИнформацияШапка, ТребуетсяИсправление)
	ЭтотОбъект.Заголовок = НСтр("ru = 'Расшифровка сумм по материалам'");
	
	ИнформацияШапка.Вставить("Заголовок", НСтр("ru = 'Остатки материалов на %1г.'"));
	ИнформацияШапка.Вставить("ИмяНастроекОтчета", "Учитывать");
	ВывестиШапкуОтчета(Результат, ИнформацияШапка);
	
	Если Не ТребуетсяИсправление Тогда
		Настройки = СКД.ВариантыНастроек.Материалы.Настройки;
		ВнешняяТаблицаДанных = Новый Структура("ВнешняяТаблицаДанныхСКД",
		Обработки.ВводОстатковПриИзмененииОбъектаУСН.РасшифровкаПоМатериалам(Параметры));
	Иначе
		Настройки = СКД.ВариантыНастроек.ТоварыМатериалыРасхождения.Настройки;
		ВнешняяТаблицаДанных = Новый Структура("ВнешняяТаблицаДанныхСРасхождениямиСКД",
		Обработки.ВводОстатковПриИзмененииОбъектаУСН.РасшифровкаПоТоварамМатериаламСРасхождениями(Параметры,
			Перечисления.РазделыУчетаДляВводаОстатков.Материалы));
	КонецЕсли;
	ВывестиВТаблицу(СКД, Настройки, ВнешняяТаблицаДанных);
КонецПроцедуры

&НаСервере
Процедура ВывестиРасшифровкуПоЗарплате(СКД, ИнформацияШапка, ТребуетсяИсправление)
	ЭтотОбъект.Заголовок = НСтр("ru = 'Расшифровка сумм по заработной плате и НДФЛ'");
	СКД.Параметры.СчетЗП.Значение = ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда;
	СКД.Параметры.ЗаработнаяПлата.Значение = НСтр("ru = 'Заработная плата'");
	СКД.Параметры.СубконтоРаботникОрганизации.Значение = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций;
	Если Не ТребуетсяИсправление Тогда
		Настройки = СКД.ВариантыНастроек.Зарплата.Настройки;
	Иначе
		Настройки = СКД.ВариантыНастроек.ЗарплатаРасхождения.Настройки;
	КонецЕсли;
	
	МассивСчетовУчета = Новый Массив;
	МассивСчетовУчета.Добавить(ПланыСчетов.Хозрасчетный.НДФЛ_НалоговогоАгента);
	СКД.Параметры.СчетНДФЛ.Значение = БухгалтерскийУчет.СформироватьМассивСубсчетов(МассивСчетовУчета);
	
	МассивСчетовУчета = Новый Массив;
	МассивСчетовУчета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию);
	СКД.Параметры.Счет.Значение = БухгалтерскийУчет.СформироватьМассивСубсчетов(МассивСчетовУчета);
	СКД.Параметры.НДФЛ.Значение = НСтр("ru = 'НДФЛ'");
	СКД.Параметры.СубконтоВидыПлатежейВБюджет.Значение = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет;
	
	ИнформацияШапка.Вставить("Заголовок", НСтр("ru = 'Остатки заработной платы и НДФЛ на %1г.'"));
	ИнформацияШапка.Вставить("ИмяНастроекОтчета", "Исключать");
	ВывестиШапкуОтчета(Результат, ИнформацияШапка);
	
	ВывестиВТаблицу(СКД, Настройки);
КонецПроцедуры

&НаСервере
Процедура ВывестиРасшифровкуПоВзносам(СКД, ИнформацияШапка, ТребуетсяИсправление)
	ЭтотОбъект.Заголовок = НСтр("ru = 'Расшифровка сумм по взносам'");
	
	МассивСчетовУчета = Новый Массив;
	МассивСчетовУчета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию);
	СКД.Параметры.СчетВзносы.Значение = БухгалтерскийУчет.СформироватьМассивСубсчетов(МассивСчетовУчета);
	
	МассивСчетовУчета = Новый Массив;
	МассивСчетовУчета.Добавить(ПланыСчетов.Хозрасчетный.НДФЛ_НалоговогоАгента);
	СКД.Параметры.Счет.Значение = БухгалтерскийУчет.СформироватьМассивСубсчетов(МассивСчетовУчета);
	
	СКД.Параметры.СубконтоВидыПлатежейВБюджет.Значение = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет;
	Если Не ТребуетсяИсправление Тогда
		Настройки = СКД.ВариантыНастроек.Взносы.Настройки;
	Иначе
		Настройки = СКД.ВариантыНастроек.ВзносыРасхождения.Настройки;
	КонецЕсли;
	
	ИнформацияШапка.Вставить("Заголовок", НСтр("ru = 'Остатки взносов на %1г.'"));
	ИнформацияШапка.Вставить("ИмяНастроекОтчета", "Исключать");
	ВывестиШапкуОтчета(Результат, ИнформацияШапка);
	
	ВывестиВТаблицу(СКД, Настройки);
КонецПроцедуры

&НаСервере
Процедура ВывестиРасшифровкуПоРасходам(СКД, ИнформацияШапка, ТребуетсяИсправление)
	ЭтотОбъект.Заголовок = НСтр("ru = 'Расшифровка сумм по расходам'");
	СКД.Параметры.БезПартии.Значение = НСтр("ru = 'Без партии'");
	
	Если Не ТребуетсяИсправление Тогда
		Настройки = СКД.ВариантыНастроек.Расходы.Настройки;
	Иначе
		Настройки = СКД.ВариантыНастроек.РасходыРасхождения.Настройки;
	КонецЕсли;
	
	ИнформацияШапка.Вставить("Заголовок", НСтр("ru = 'Не принятые расходы на %1г.'"));
	ИнформацияШапка.Вставить("ИмяНастроекОтчета", "Исключать");
	ВывестиШапкуОтчета(Результат, ИнформацияШапка);
	
	ВывестиВТаблицу(СКД, Настройки);
КонецПроцедуры

&НаСервере
Процедура ВывестиВТаблицу(СКД, Настройки, ВнешняяТаблицаДанных = Неопределено)
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпановщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпановщикМакета.Выполнить(СКД, Настройки, ДанныеРасшифровки);
	
	ПроцессорКД = Новый ПроцессорКомпоновкиДанных;
	Если ВнешняяТаблицаДанных = Неопределено Тогда
		ПроцессорКД.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки);
	Иначе
		ПроцессорКД.Инициализировать(МакетКомпоновки, ВнешняяТаблицаДанных, ДанныеРасшифровки);
	КонецЕсли;
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ЭтотОбъект.Результат);
	
	АдресДанныхВХранилище = ПоместитьВоВременноеХранилище(ДанныеРасшифровки, УникальныйИдентификатор);
	
	ПроцессорВывода.Вывести(ПроцессорКД);
КонецПроцедуры

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	СтандартнаяОбработка = Ложь;
	ПолученныеДанныеРасшифровки = РасшифровкаИзХранилища(Расшифровка, АдресДанныхВХранилище);
	Если (ПолученныеДанныеРасшифровки <> Null) И (ПолученныеДанныеРасшифровки <> Неопределено) Тогда
		ПоказатьЗначение(, ПолученныеДанныеРасшифровки);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция РасшифровкаИзХранилища(Расшифровка, АдресДанныхВХранилище)
	ДанныеРасшифровки = ПолучитьИзВременногоХранилища(АдресДанныхВХранилище);
	Если Тип(ДанныеРасшифровки) = Тип("ДанныеРасшифровкиКомпоновкиДанных") Тогда
		Возврат ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьПоля().Получить(0).Значение;
	КонецЕсли;
КонецФункции

#КонецОбласти

