/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОписаниеПеременных

&НаКлиенте
Перем ТекущийШаг; 

&НаКлиенте
Перем ДанныеТСД;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВариантИнвентаризации 			= 0;
	ВыборДокументаИнвентаризации 	= 0;
	
	Объект.Организация 	= БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	Объект.Склад = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнойСклад");
			
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если ВебКлиент Тогда
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗаголовокФормы","Программа работает в режиме веб-клиента");
	ПараметрыФормы.Вставить("ТекстСообщения","Работа с торговым оборудованием не поддерживается в режиме веб-клиента.
							|Для использования терминала сбора данных запустите программу в режиме тонкого клиента.");
	ОткрытьФорму("Обработка.ПомощникИнвентаризацииТСД.Форма.ФормаПроверки", ПараметрыФормы, ЭтаФорма);
	Отказ = Истина;
	#КонецЕсли

	Если Не ЕстьТСД() Тогда
		ОткрытьФорму("Обработка.ПомощникИнвентаризацииТСД.Форма.ФормаПроверки", ,ЭтаФорма);
		Отказ = Истина;
	КонецЕсли;
	ТекущийШаг = 1;
	УстановитьОформлениеСтраницыНаСервере(Элементы.Страницы.ТекущаяСтраница.Имя);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокОтборПриИзменении(Элемент)
	
	Элементы.ДекорацияВсегоНаименований.Заголовок = ПолучитьКоличествоСтрок();
	
КонецПроцедуры

&НаКлиенте
Процедура НовыйДокументИнвентаризацииПриИзменении(Элемент)
	
	УстановитьВидимостьРеквизитовНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СуществующийПриИзменении(Элемент)
	
	УстановитьВидимостьРеквизитовНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Вперед(Команда)
	
	ТекущийШаг = ТекущийШаг + 1;
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.ВыборСценария Тогда
		Если ВариантИнвентаризации = 0 Тогда
			Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.ВыгрузкаВТСД;
		ИначеЕсли ВариантИнвентаризации = 1 Тогда
			Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.ЗагрузкаИзТСД;
		ИначеЕсли ВариантИнвентаризации = 2 Тогда
			Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.ЗаполнениеРеквизитов;
		КонецЕсли;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.НеизвестныеШтрихкоды Тогда
		ЗаписатьСоответствияШтрихкодов();
		Элементы.Страницы.ТекущаяСтраница = Элементы.ОформлениеРезультатовИнвентаризации;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.ЗагрузкаИзТСД Тогда
		Если КоличествоНепривязанныхШтрихкодов()>0 Тогда
			Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.НеизвестныеШтрихкоды;
		Иначе
			Элементы.Страницы.ТекущаяСтраница = Элементы.ОформлениеРезультатовИнвентаризации;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьОформлениеСтраницыНаСервере(Элементы.Страницы.ТекущаяСтраница.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	ТекущийШаг = ТекущийШаг - 1;
	
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.ОформлениеРезультатовИнвентаризации Тогда
		Если КоличествоНепривязанныхШтрихкодов()>0 Тогда
			Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.НеизвестныеШтрихкоды;
		Иначе
			Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.ЗагрузкаИзТСД;
			ЗагрузитьДанныеИзТСДНаСервере(ДанныеТСД);
		КонецЕсли;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.НеизвестныеШтрихкоды ТОгда
		Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.ЗагрузкаИзТСД;
	Иначе
		Элементы.Страницы.ТекущаяСтраница = Элементы.Страницы.ПодчиненныеЭлементы.ВыборСценария;
		ОчиститьТаблицуЗагрузкиНаСервере();
	КонецЕсли;
	
	УстановитьОформлениеСтраницыНаСервере(Элементы.Страницы.ТекущаяСтраница.Имя);

КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВТСД(Команда)
	
	Если ВариантИнвентаризации = 0 Тогда
		ТаблицаТСД = ПолучитьИзСпискаТаблицуТСД();
		НачатьВыгрузкуДанныхДляТСД(ТаблицаТСД);
	Иначе
		ДлительнаяОперация 	= НачатьПолучениеТаблицыВыгрузкиНоменклатуры();
		ПараметрыОжидания 	= ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		Оповещение 			= Новый ОписаниеОповещения("ПриПолученииТаблицыТСД", ЭтотОбъект);
 		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзТСД(Команда)
	
	ЭтаФорма.Доступность = Ложь;
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗагрузкиДанныхИзТСД",ЭтаФорма);
	МенеджерОборудованияКлиент.НачатьЗагрузкуДанныеИзТСД(Оповещение, УникальныйИдентификатор, Истина);

	ИзменитьОформлениеСтраницыЗагрузкиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОформитьРезультатИнвентаризации(Команда)
	
	Отказ = Ложь;
	ТекстОшибки = "";
	
	Если ВыборДокументаИнвентаризации = 0 Тогда
		Если Не РеквизитыЗаполнены("Организация,Склад", ТекстОшибки) Тогда
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
		СсылкаНаОбъект = СоздатьДокументИнвентаризацииНаСервере(Отказ);
	Иначе
		Если Не РеквизитыЗаполнены("ДокументИнвентаризации", ТекстОшибки) Тогда
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
		СсылкаНаОбъект = ЗаполнитьДокументИнвентаризацииНаСервере(Отказ);
	КонецЕсли;
	
	Если Не Отказ Тогда
		ПараметрыФормы = Новый Структура("Ключ",СсылкаНаОбъект);
		ОткрытьФорму("Документ.ИнвентаризацияТоваровНаСкладе.Форма.ФормаДокумента", ПараметрыФормы, ЭтаФорма);
	Иначе 
		Возврат;
	КонецЕсли;
	
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	
	ТабДок 								= СформироватьТабличныйДокументНаСервере();
	КоллекцияПечатныхФорм 				= УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм("НепривязанныеШтрихкоды");
	ПечатнаяФорма 						= УправлениеПечатьюКлиент.ОписаниеПечатнойФормы(КоллекцияПечатныхФорм,"НепривязанныеШтрихкоды");
	ПечатнаяФорма.ТабличныйДокумент 	= ТабДок;
	ПечатнаяФорма.СинонимМакета 		= "Непривязанные штрихкоды";
	ПечатнаяФорма.ИмяФайлаПечатнойФормы = "НепривязанныеШтрихкоды";
	
	УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм, Новый СписокЗначений);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура НачатьВыгрузкуДанныхДляТСД(ТаблицаТСД)
	
	ОповещениеОЗавершенииВыгрузкиДанныхТСД = Новый ОписаниеОповещения("ПослеВыгрузкиДанныхВТСД", ЭтаФорма);
	МенеджерОборудованияКлиент.НачатьВыгрузкуДанныеВТСД(ОповещениеОЗавершенииВыгрузкиДанныхТСД, УникальныйИдентификатор, ТаблицаТСД);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриПолученииТаблицыТСД(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	Иначе
		Если Результат.Статус = "Выполнено" Тогда
			ТаблицаТСД = ПолучитьТаблицуДляТСД(Результат.АдресРезультата);
			НачатьВыгрузкуДанныхДляТСД(ТаблицаТСД);
		ИначеЕсли Результат.Статус = "Ошибка" Тогда
			ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыгрузкиДанныхВТСД(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.Результат Тогда
		ПоказатьОповещениеПользователя("Данные успешно выгружены", , ,БиблиотекаКартинок.ВыгрузитьВТСД, СтатусОповещенияПользователя.Информация);
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ОписаниеОшибки);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗагрузкиДанныхИзТСД(Результат, ДополнительныеПараметры) Экспорт
	
	ЭтаФорма.Доступность = Истина;
	
	Если Результат.Результат Тогда
		ДанныеТСД = Результат.ТаблицаТоваров;
		ЗагрузитьДанныеИзТСДНаСервере(ДанныеТСД);
		ПоказатьПредупреждение(, Нстр("ru = 'Данные загружены'"));
	Иначе
		ТекстСообщения = НСтр("ru = 'При выполнении операции произошла ошибка:""%1"".'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Результат.ОписаниеОшибки);
		ПоказатьПредупреждение(, ТекстСообщения);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьОформлениеСтраницыНаСервере(ИмяСтраницы)
		
	Если ИмяСтраницы = "ВыборСценария" Тогда
		Элементы.Вперед.Видимость 						= Истина;
		Элементы.Назад.Видимость 						= Ложь;
		Элементы.ВыгрузитьВТСД.Видимость 				= Ложь;
		Элементы.ОформитьРезультат.Видимость 			= Ложь;
		Элементы.Вперед.КнопкаПоУмолчанию 				= Истина;
		Элементы.ЗагрузитьИзТСД.Видимость				= Ложь;							
		Элементы.Вперед.Заголовок 						= "Начать";
	ИначеЕсли ИмяСтраницы = "ВыгрузкаВТСД" Тогда
		Элементы.Вперед.Видимость 						= Ложь;
		Элементы.Назад.Видимость 						= Истина;
		Элементы.ВыгрузитьВТСД.Видимость 				= Истина;
		Элементы.ОформитьРезультат.Видимость 			= Ложь;
		Элементы.ВыгрузитьВТСД.КнопкаПоУмолчанию 		= Истина;
	ИначеЕсли ИмяСтраницы = "ЗагрузкаИзТСД" Тогда
		Элементы.Вперед.Видимость 						= Ложь;
		Элементы.Назад.Видимость 						= Истина;
		Элементы.ВыгрузитьВТСД.Видимость 				= Ложь;
		Элементы.ОформитьРезультат.Видимость 			= Ложь;
		Элементы.ЗагрузитьИзТСД.Видимость				= Истина;
		Элементы.ЗагрузитьИзТСД.КнопкаПоУмолчанию		= Истина;
		Элементы.Вперед.Заголовок 						= "Продолжить";
		ИзменитьОформлениеСтраницыЗагрузкиНаСервере()
	ИначеЕсли ИмяСтраницы = "ОформлениеРезультатовИнвентаризации" Тогда
		Элементы.Вперед.Видимость 						= Ложь;
		Элементы.Назад.Видимость 						= Истина;
		Элементы.ВыгрузитьВТСД.Видимость 				= Ложь;
		Элементы.ОформитьРезультат.Видимость 			= Истина;
		Элементы.ОформитьРезультат.КнопкаПоУмолчанию 	= Истина;
		УстановитьВидимостьРеквизитовНаСервере();
	ИначеЕсли ИмяСтраницы = "ЗаполнениеРеквизитов" Тогда
		Элементы.Вперед.Видимость 						= Ложь;
		Элементы.Назад.Видимость 						= Истина;
		Элементы.ВыгрузитьВТСД.Видимость 				= Истина;
		Элементы.ОформитьРезультат.Видимость 			= Ложь;
		Элементы.ВыгрузитьВТСД.КнопкаПоУмолчанию 		= Истина;
	ИначеЕсли ИмяСтраницы = "НеизвестныеШтрихкоды" Тогда
		Элементы.Вперед.Видимость 						= Истина;
		Элементы.Назад.Видимость 						= Истина;
		Элементы.ВыгрузитьВТСД.Видимость 				= Ложь;
		Элементы.ОформитьРезультат.Видимость 			= Ложь;
		Элементы.ЗагрузитьИзТСД.Видимость				= Ложь;
		Элементы.Вперед.КнопкаПоУмолчанию				= Истина;
	КонецЕсли;
	
	Элементы.ДекорацияВсегоНаименований.Заголовок 		= ПолучитьКоличествоСтрок();
	
	УстановитьВидимостьКнопкиПечатьНаСервере(ИмяСтраницы);
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьОформлениеСтраницыЗагрузкиНаСервере()
	
	Если Результат.Количество()>0 Тогда
		Если КоличествоНепривязанныхШтрихкодов() >0 Тогда
			Элементы.ЗагрузитьИзТСД.Видимость = Ложь;
			Элементы.Вперед.Видимость = Истина;
			Элементы.Вперед.КнопкаПоУмолчанию = Истина;
		Иначе
			Элементы.ЗагрузитьИзТСД.Видимость = Ложь;
			Элементы.Вперед.Видимость = Истина;
			Элементы.Вперед.КнопкаПоУмолчанию = Истина;
		КонецЕсли;
	Иначе
		Элементы.ЗагрузитьИзТСД.Видимость = Истина;
		Элементы.ЗагрузитьИзТСД.КнопкаПоУмолчанию = Истина;
		Элементы.Вперед.Видимость = Ложь;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьРеквизитовНаСервере()
	
	Если ВыборДокументаИнвентаризации = 0 Тогда
		Элементы.ГруппаРеквизитыНовогоДокумента.Видимость = Истина;
		Элементы.ГруппаСуществующаяИнвентаризация.Видимость = Ложь;
	Иначе
		Элементы.ГруппаРеквизитыНовогоДокумента.Видимость = Ложь;
		Элементы.ГруппаСуществующаяИнвентаризация.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьТаблицуЗагрузкиНаСервере()
	
	ТаблицаРезультат = РеквизитФормыВЗначение("Результат");
	ТаблицаРезультат.Очистить();
	ЗначениеВРеквизитФормы(ТаблицаРезультат,"Результат");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьКнопкиПечатьНаСервере(ИмяТекущейСтраницы)
	
	Элементы.НепривязанныеШтрихкодыПечать.Видимость = ИмяТекущейСтраницы 
		= "НеизвестныеШтрихкоды" И КоличествоНепривязанныхШтрихкодов()>0;
	
КонецПроцедуры

&НаСервере
Функция ЕстьТСД()
	
	Возврат МенеджерОборудованияБП.ИспользуетсяОборудование("ТерминалСбораДанных");
	
КонецФункции

&НаСервере
Функция РеквизитыЗаполнены(Реквизиты, СообщениеОбОшибке = "")
	
	Если ТипЗнч(Реквизиты) = Тип("Строка") Тогда
		Реквизиты = СтрРазделить(Реквизиты,",");
	ИначеЕсли ТипЗнч(Реквизиты) = Тип("СписокЗначений") Тогда
		Реквизиты = Реквизиты.ВыгрузитьЗначения;
	КонецЕсли;
	
	СчетчикОшибок = 0;
	Для Каждого Реквизит Из Реквизиты Цикл
		Если Не ЗначениеЗаполнено(Объект[СокрЛП(Реквизит)]) Тогда
			СчетчикОшибок = СчетчикОшибок+1;
			СообщениеОбОшибке = СообщениеОбОшибке + СтрШаблон(НСтр("ru='Не заполнено обязательное поле %1'"),
								ПолучитьПредставлениеРеквизита(Реквизит)) + Символы.ПС;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СчетчикОшибок = 0;
	
КонецФункции

&НаСервере
Функция СоздатьДокументИнвентаризацииНаСервере(Отказ)
	
	ТабРезультат = РеквизитФормыВЗначение("Результат");
	РезультатИнвентаризации = ТабРезультат.Скопировать(,"Номенклатура, Количество");
	ПараметрыЗаполнения = Новый Структура(
		"Дата, Организация, Склад, ДатаОкончанияИнвентаризации, СписокНоменклатуры"
			, ТекущаяДата(), Объект.Организация, Объект.Склад, ТекущаяДата(), РезультатИнвентаризации);
	ДанныеЗаполнения = Новый Структура("ДанныеЗаполнения", ПараметрыЗаполнения);
	ДокИнвентаризации = Документы.ИнвентаризацияТоваровНаСкладе.СоздатьДокумент();
	ДокИнвентаризации.Заполнить(ДанныеЗаполнения);
	ЗаполнитьРезультатНаСервере(ДокИнвентаризации, ТабРезультат);
	Попытка
		ДокИнвентаризации.Записать(РежимЗаписиДокумента.Запись);
	Исключение
		Отказ = Истина;
	КонецПопытки;
	
	Возврат ДокИнвентаризации.Ссылка;
	
КонецФункции

&НаСервере
Функция ЗаполнитьДокументИнвентаризацииНаСервере(Отказ)
	
	ТабРезультат = РеквизитФормыВЗначение("Результат");
	
	ДокОбъект = Объект.ДокументИнвентаризации.ПолучитьОбъект();
	ДокОбъект.ДатаОкончанияИнвентаризации = ТекущаяДата();
	
	ЗаполнитьРезультатНаСервере(ДокОбъект, ТабРезультат);
	
	Попытка
		ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
	Исключение
		Отказ = Истина;
	КонецПопытки;
	
	Возврат ДокОбъект.Ссылка;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьРезультатНаСервере(ДокОбъект, ТабРезультат, ВыводитьНеизвестныеШтрихкоды = Ложь)
	
	Для Каждого Строка Из ТабРезультат Цикл
		Если ЗначениеЗаполнено(Строка.Номенклатура) Тогда
			Отбор = Новый Структура("Номенклатура", Строка.Номенклатура);
			СтрокиТЧ = ДокОбъект.Товары.НайтиСтроки(Отбор);
			Если СтрокиТЧ.Количество()>0 Тогда
				СтрокиТЧ[0].Количество = Строка.Количество;
				СтрокиТЧ[0].Сумма = СтрокиТЧ[0].Цена * Строка.Количество;
			Иначе
				ЗаполнитьЗначенияСвойств(ДокОбъект.Товары.Добавить(), Строка);
			КонецЕсли;
		Иначе
			Если ВыводитьНеизвестныеШтрихкоды Тогда
				ЗаполнитьЗначенияСвойств(ДокОбъект.Товары.Добавить(), Строка);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицуДляТСД(АдресХранилища)
	
	ДанныеДляТСД 					= Новый Массив;
	ДанныеИнвентаризации 			= ПолучитьИзВременногоХранилища(АдресХранилища);
	ТаблицаТоваров					= ДанныеИнвентаризации.Скопировать(,"Номенклатура, Количество");
	ДополнитьТаблицуТоваровШтрихкодами(ТаблицаТоваров);
	Для Каждого Стр Из ТаблицаТоваров Цикл
		ДанныеВыгрузки = Новый Структура("Номенклатура,Количество,Штрихкод");
		ЗаполнитьЗначенияСвойств(ДанныеВыгрузки, Стр);
		ДанныеДляТСД.Добавить(ДанныеВыгрузки);
	КонецЦикла;
	
	Возврат ДанныеДляТСД;
	
КонецФункции

&НаСервере
Функция ПолучитьИзСпискаТаблицуТСД()
	
	ДанныеДляТСД 	= Новый Массив;
	ТаблицаВыгрузки = СписокВТаблицуЗначений();
	
	Для Каждого СтрокаТаблицы Из ТаблицаВыгрузки Цикл
		ДанныеВыгрузки = Новый Структура;
		Для Каждого Колонка Из ТаблицаВыгрузки.Колонки Цикл
			ДанныеВыгрузки.Вставить(Колонка.Имя, СтрокаТаблицы[Колонка.Имя]); 	
		КонецЦикла;
		ДанныеДляТСД.Добавить(ДанныеВыгрузки);	
	КонецЦикла;
	
	Возврат ДанныеДляТСД;
	
КонецФункции

&НаСервере
Функция НачатьПолучениеТаблицыВыгрузкиНоменклатуры()
	
	ПараметрыВыполнения 			= ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	
	ПараметрыЗаполнения 			= Документы.ИнвентаризацияТоваровНаСкладе.НовыеПараметрыЗаполнения();
	ПараметрыЗаполнения.Дата 		= ТекущаяДата();
	ПараметрыЗаполнения.Организация = Объект.Организация;
	ПараметрыЗаполнения.Склад 		= Объект.Склад;

 	Возврат ДлительныеОперации.ВыполнитьФункцию(ПараметрыВыполнения, "Документы.ИнвентаризацияТоваровНаСкладе.ЗаполнитьПоОстаткамНаСкладе", 
			ПараметрыЗаполнения);
	
КонецФункции

&НаСервере
Процедура ЗагрузитьДанныеИзТСДНаСервере(ТаблицаТСД)
	
	Таб = РеквизитФормыВЗначение("Результат");
	Таб.Очистить();
	
	Для Каждого Эл Из ТаблицаТСД Цикл
		ЗаполнитьЗначенияСвойств(Таб.Добавить(), Эл);	
	КонецЦикла;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ДанныеТСД.Штрихкод КАК Штрихкод,
	|	ДанныеТСД.Количество КАК Количество
	|ПОМЕСТИТЬ ТаблицаТСД
	|ИЗ
	|	&ДанныеТСД КАК ДанныеТСД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаТСД.Штрихкод КАК СТРОКА(128)) КАК Штрихкод,
	|	ВЫРАЗИТЬ(ТаблицаТСД.Количество КАК ЧИСЛО(15, 0)) КАК Количество,
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура
	|ПОМЕСТИТЬ НоменклатураШтрихкод
	|ИЗ
	|	ТаблицаТСД КАК ТаблицаТСД
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО ТаблицаТСД.Штрихкод = ШтрихкодыНоменклатуры.Штрихкод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураШтрихкод.Штрихкод КАК Штрихкод,
	|	НоменклатураШтрихкод.Количество КАК Количество,
	|	НоменклатураШтрихкод.Номенклатура КАК Номенклатура
	|ИЗ
	|	НоменклатураШтрихкод КАК НоменклатураШтрихкод";

	Запрос.УстановитьПараметр("ДанныеТСД", Таб);
	
	Таб = Запрос.Выполнить().Выгрузить();
	
	ЗначениеВРеквизитФормы(Таб, "Результат");
	
	ЗаполнитьТаблицуНепривязанныхНаСервере(Таб);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНепривязанныхНаСервере(ТаблицаРезультат)
	
	Отбор = Новый Структура("Номенклатура", Справочники.Номенклатура.ПустаяСсылка());
	НеизвестныеШтрихкоды = ТаблицаРезультат.Скопировать(Отбор, "Номенклатура, Штрихкод, Количество");
	ЗначениеВРеквизитФормы(НеизвестныеШтрихкоды, "НепривязанныеШтрихкоды");
		
КонецПроцедуры

&НаСервере
Функция ПолучитьКоличествоСтрок()
	
	Возврат СписокВТаблицуЗначений().Количество();
	
КонецФункции

&НаСервере
Процедура ЗаписатьСоответствиеНоменклатурыИШтрихкодаНаСервере(ПараметрыСоответствия, Отказ = Ложь)
	
	НоваяЗапись 				= РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьМенеджерЗаписи();
	НоваяЗапись.Штрихкод 		= ПараметрыСоответствия.Штрихкод;
	НоваяЗапись.Номенклатура 	= ПараметрыСоответствия.Номенклатура;
	Попытка
		НоваяЗапись.Записать();
	Исключение
		Отказ = Истина;
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьСоответствияШтрихкодов()
	
	ТаблицаСоответствия = РеквизитФормыВЗначение("НепривязанныеШтрихкоды");
	
	Для Каждого СтрокаТаблицы Из ТаблицаСоответствия Цикл
		Если ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) И ЗначениеЗаполнено(СтрокаТаблицы.Штрихкод) Тогда
			ПараметрыСоответствия = Новый Структура("Номенклатура, Штрихкод");
			ЗаполнитьЗначенияСвойств(ПараметрыСоответствия, СтрокаТаблицы);
			ЗаписатьСоответствиеНоменклатурыИШтрихкодаНаСервере(ПараметрыСоответствия);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция СписокВТаблицуЗначений(ИмяСписка = "Список")

    СКД = Элементы[ИмяСписка].ПолучитьИсполняемуюСхемуКомпоновкиДанных();

    Настройки = Элементы[ИмяСписка].ПолучитьИсполняемыеНастройкиКомпоновкиДанных();

    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
    МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД, Настройки, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));

    ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);

    ПроцессорВыводаРезультата = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
    ТЗ = ПроцессорВыводаРезультата.Вывести(ПроцессорКомпоновкиДанных);

    Возврат ТЗ;

КонецФункции

&НаСервере
Функция КоличествоНепривязанныхШтрихкодов()
	
	Если НепривязанныеШтрихкоды.Количество() = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура("Номенклатура", Справочники.Номенклатура.ПустаяСсылка());
	НезаполненныеСтроки = НепривязанныеШтрихкоды.НайтиСтроки(ПараметрыОтбора);
	
	Возврат НезаполненныеСтроки.Количество();
	
КонецФункции

&НаСервере
Функция СформироватьТабличныйДокументНаСервере()
	
	Таб 							= НепривязанныеШтрихкоды.Выгрузить();
	
	ТабДокумент 					= Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы 	= ОриентацияСтраницы.Портрет;
	ТабДокумент.АвтоМасштаб 		= Истина;
	ТабДокумент.ПолеСверху			= 5;
	ТабДокумент.ПолеСлева			= 5;
	ТабДокумент.ПолеСправа			= 5;
	ТабДокумент.ПолеСнизу 			= 5;
	ТабДокумент.ИмяПараметровПечати = "НЕИЗВЕСТНЫЕ_ШТРИХКОДЫ";

	Макет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("ПечатьНеизвестныеШтрихкоды");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("ОбластьЗаголовок");
	ОбластьЗаголовок.Параметры.ДатаЗавершенияИнвентаризации = Формат(ТекущаяДата(), "ДЛФ=ДД");
	ТабДокумент.Вывести(ОбластьЗаголовок);
	
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ОбластьШапкаТаблицы");
	ТабДокумент.Вывести(ОбластьШапкаТаблицы);
	
	Для Каждого Стр Из Таб Цикл
		ОбластьСтрока = Макет.ПолучитьОбласть("ОбластьСтрока");
		ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, Стр);
		ТабДокумент.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	ОбластьЗакрывающаяСтрока = Макет.ПолучитьОбласть("ОбластьСтрокаЗакрывающая");
	ТабДокумент.Вывести(ОбластьЗакрывающаяСтрока);
	
	Возврат ТабДокумент;
	
КонецФункции

&НаСервере
Процедура ДополнитьТаблицуТоваровШтрихкодами(ТаблицаТоваров)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Остатки.Номенклатура КАК Номенклатура,
	|	Остатки.Количество КАК Количество
	|ПОМЕСТИТЬ втОстатки
	|ИЗ
	|	&Остатки КАК Остатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Остатки.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
	|	Остатки.Количество КАК Количество,
	|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод
	|ПОМЕСТИТЬ ОстаткиШтрихкоды
	|ИЗ
	|	втОстатки КАК Остатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Остатки.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиШтрихкоды.Номенклатура КАК Номенклатура,
	|	ОстаткиШтрихкоды.Количество КАК Количество,
	|	ОстаткиШтрихкоды.Штрихкод КАК Штрихкод
	|ИЗ
	|	ОстаткиШтрихкоды КАК ОстаткиШтрихкоды
	|ГДЕ
	|	НЕ ОстаткиШтрихкоды.Штрихкод = """"";
	
	Запрос.УстановитьПараметр("Остатки", ТаблицаТоваров);
	
	ТаблицаТоваров = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПредставлениеРеквизита(ИмяРеквизита)
	
	Представление = "";
	
	Реквизиты = РеквизитФормыВЗначение("Объект").Метаданные().Реквизиты;
	Для Каждого Реквизит Из Реквизиты Цикл
		Если Реквизит.Имя = ИмяРеквизита Тогда
			Представление =  Реквизит.Представление();
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Представление;
	
КонецФункции

#КонецОбласти

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ТекущийШаг = 0;
