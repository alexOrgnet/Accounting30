#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Отправляет в сервис Мой налог запрос на изменение разрешений, предоставленных партнеру.
// 
// Параметры:
//   Организация - СправочникСсылка.Организации - организация
//   НовыеРазрешения - Массив Из Строка - элементы массива см. ИнтеграцияСПлатформойСамозанятыеКлиентСервер.ВидыРазрешенийНаДействияПартнера
// 
// Возвращаемое значение:
//   Строка - идентификатор запроса.
//   Неопределено - если не удалось выполнить запрос.
//
Функция ОтправитьЗапросНаИзменениеРазрешений(Организация, НовыеРазрешения) Экспорт
	
	МетодВзаимодействия = "ЗапросНаИзменениеРазрешений";
	
	ПараметрыМетода = ИнтеграцияСПлатформойСамозанятыеКлиентСервер.НовыеПараметрыМетодаВзаимодействия(МетодВзаимодействия);
	ПараметрыМетода.Организация = Организация;
	ПараметрыМетода.Разрешения = НовыеРазрешения;
	
	ЗапросСервиса = ИнтеграцияСПлатформойСамозанятые.ВыполнитьМетодВзаимодействия(ПараметрыМетода);
	
	Если ЗапросСервиса.Ошибка Тогда
		
		ЗаписатьОшибкуИКодВЖурналРегистрации(НСтр("ru = 'Изменение разрешений НПД'"), ЗапросСервиса);
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	СтатусыЗапросов = ИнтеграцияСПлатформойСамозанятыеКлиентСервер.СтатусыЗапросов();  
	
	МаксимальноеЧислоПовторов = ?(ИнтеграцияСПлатформойСамозанятые.РежимОтладки(), 1, 15);
	
	Для Повтор = 1 По МаксимальноеЧислоПовторов Цикл // Опрашиваем результат в течение 2-х минут
		
		ОтветСервиса = ИнтеграцияСПлатформойСамозанятые.ПолучитьРезультатВыполнения(ЗапросСервиса);
		
		Если ОтветСервиса.Статус = СтатусыЗапросов.Выполняется Тогда
			
			ОбщегоНазначенияБТС.Пауза(Повтор);
			
		ИначеЕсли ОтветСервиса.Статус = СтатусыЗапросов.Ошибка Тогда
			
			ЗаписатьОшибкуИКодВЖурналРегистрации(НСтр("ru = 'Изменение разрешений НПД'"), ОтветСервиса);
			
			Возврат Неопределено;
			
		Иначе
			
			Возврат ОтветСервиса.Результат.Идентификатор;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

// Возвращает имя события для записей событий в журнал регистрации
//
// Возвращаемое значение:
//   Строка - имя события
//
Функция ИмяСобытияЖурналаРегистрацииИзменениеРазрешений() Экспорт
	
	ИмяСобытия = НСтр("ru = 'Изменение разрешений НПД'", ОбщегоНазначения.КодОсновногоЯзыка());
	
	Возврат СтрШаблон("%1.%2", ИнтеграцияСПлатформойСамозанятыеКлиентСервер.ИмяСобытияЖурналаРегистрации(), ИмяСобытия);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаписатьОшибкуИКодВЖурналРегистрации(КонтекстОшибки, Ответ)
	
	ЧастиСообщенияОбОшибке = Новый Массив;
	ЧастиСообщенияОбОшибке.Добавить(КонтекстОшибки);
	ЧастиСообщенияОбОшибке.Добавить(Ответ.Сообщение);
	Если Ответ.Свойство("Результат") И ЗначениеЗаполнено(Ответ.Результат) И Ответ.Результат.Свойство("Код") Тогда
		ЧастиСообщенияОбОшибке.Добавить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Код ошибки: %1'"), Ответ.Результат.Код));
	КонецЕсли;
	ЗаписатьОшибкуВЖурналРегистрации(СтрСоединить(ЧастиСообщенияОбОшибке, Символы.ПС));
	
КонецПроцедуры

Процедура ЗаписатьОшибкуВЖурналРегистрации(ОписаниеОшибки)
	
	ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрацииИзменениеРазрешений(),
		УровеньЖурналаРегистрации.Ошибка,
		Метаданные.Обработки.ПомощникИнтеграцииСПлатформойСамозанятые, ,
		ОписаниеОшибки);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли