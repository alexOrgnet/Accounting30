
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Организация = Параметры.Организация;
	Разрешения = Параметры.Разрешения;
	
	СервисМойНалогПодключен = СервисМойНалогПодключен(Организация);
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПояснениеШаг1ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(
		ИнтеграцияСПлатформойСамозанятыеКлиентСервер.АдресСтраницыПартнеры());
	
КонецПроцедуры

&НаКлиенте
Процедура ПояснениеШаг3КартинкаМойНалогНажатие(Элемент)
	
	ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(
		ИнтеграцияСПлатформойСамозанятыеКлиентСервер.АдресСтраницыПартнеры());
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПроверитьРазрешения(Команда)
	
	СтатусПроверкиРазрешений = "";
	
	НачатьВыполнениеМетодаВзаимодействия(МетодыВзаимодействия().Разрешения);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	СтатусыЗапросов = ИнтеграцияСПлатформойСамозанятыеКлиентСервер.СтатусыЗапросов();
	
	Элементы.КартинкаСтатусПроверкиРазрешений.Видимость =
		(Форма.СтатусПроверкиРазрешений = СтатусыЗапросов.Выполняется);
	Элементы.ПояснениеСтатусПроверкиРазрешений.Видимость = ЗначениеЗаполнено(Форма.СтатусПроверкиРазрешений);
	Элементы.ПроверитьРазрешения.Доступность = (Форма.СтатусПроверкиРазрешений <> СтатусыЗапросов.Выполняется);
	
	Если Не Форма.СервисМойНалогПодключен Тогда
		Форма.ПояснениеСтатусПроверкиРазрешений = НСтр("ru = 'Сервис Мой налог не подключен'");
		Элементы.ПояснениеСтатусПроверкиРазрешений.ЦветТекста = ЦветНеудачнаяПроверка();
	ИначеЕсли Форма.СтатусПроверкиРазрешений = СтатусыЗапросов.Выполняется Тогда
		Форма.ПояснениеСтатусПроверкиРазрешений = НСтр("ru = 'Проверяются разрешения...'");
		Элементы.КартинкаСтатусПроверкиРазрешений.Картинка = БиблиотекаКартинок.ДлительнаяОперация16;
		Элементы.ПояснениеСтатусПроверкиРазрешений.ЦветТекста = Новый Цвет(0, 0, 0);
	ИначеЕсли Форма.РазрешенияПредоставлены Тогда
		Форма.ПояснениеСтатусПроверкиРазрешений = НСтр("ru = 'Разрешения предоставлены'");
		Элементы.ПояснениеСтатусПроверкиРазрешений.ЦветТекста = ЦветУспешнаяПроверка();
	Иначе
		Форма.ПояснениеСтатусПроверкиРазрешений = НСтр("ru = 'Разрешения не предоставлены'");
		Элементы.ПояснениеСтатусПроверкиРазрешений.ЦветТекста = ЦветНеудачнаяПроверка();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЦветУспешнаяПроверка()
	
	Возврат ЦветаСтиля.РезультатУспехЦвет;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЦветНеудачнаяПроверка()
	
	Возврат ЦветаСтиля.РезультатПроблемаЦвет;
	
КонецФункции

&НаСервереБезКонтекста
Функция СервисМойНалогПодключен(Знач Организация)

	СостояниеПодключения = РегистрыСведений.СостоянияИнтеграцииСПлатформойСамозанятые.ПолучитьСостояниеПодключения(Организация);
	
	Если СостояниеПодключения = Перечисления.СостоянияИнтеграцииСПлатформойСамозанятые.Подключено Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;

КонецФункции

#Область ВыполнениеЗапросов

&НаКлиенте
Процедура НачатьВыполнениеМетодаВзаимодействия(МетодВзаимодействия)
	
	Если Не СервисМойНалогПодключен Тогда
		УправлениеФормой(ЭтотОбъект);
		Возврат;
	КонецЕсли;

	СтатусыЗапросов = ИнтеграцияСПлатформойСамозанятыеКлиентСервер.СтатусыЗапросов();
	
	ДлительнаяОперация = ВыполнитьМетодВзаимодействияНаСервере(
		ПараметрыМетодаВзаимодействия(МетодВзаимодействия), ЭтотОбъект.УникальныйИдентификатор);
	
	Если ДлительнаяОперация = Неопределено Тогда
		ОбновитьСтатусы(ЭтотОбъект, МетодВзаимодействия, СтатусыЗапросов.Ошибка);
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус <> "Ошибка" Тогда
		ОбновитьСтатусы(ЭтотОбъект, МетодВзаимодействия, СтатусыЗапросов.Выполняется);
		
		НастройкиОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		НастройкиОжидания.ВыводитьОкноОжидания = Ложь;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Запрос", МетодВзаимодействия);
		ДополнительныеПараметры.Вставить("Организация", Организация);
		
		Обработчик = Новый ОписаниеОповещения("ПослеВыполненияМетодаВзаимодействия", ЭтотОбъект, ДополнительныеПараметры);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Обработчик, НастройкиОжидания);
	Иначе
		ПоказатьОшибкуВыполненияМетодаВзаимодействия(ДлительнаяОперация);
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыполнитьМетодВзаимодействияНаСервере(Знач ПараметрыМетода, Знач ИдентификаторФормы)
	
	НастройкиЗапуска = ДлительныеОперации.ПараметрыВыполненияВФоне(ИдентификаторФормы);
	НастройкиЗапуска.ОжидатьЗавершение = 0;
	
	Результат = ДлительныеОперации.ВыполнитьВФоне(
		"ИнтеграцияСПлатформойСамозанятые.ВыполнитьМетодВзаимодействияВФоне",
		ПараметрыМетода,
		НастройкиЗапуска);
	
	Возврат Результат;
	
КонецФункции

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ПолучитьРезультатВыполненияВФонеСписокРазрешений()
	
	НачатьПолучениеРезультатаВыполненияВФоне(МетодыВзаимодействия().Разрешения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыполненияМетодаВзаимодействия(ДлительнаяОперация, ДополнительныеПараметры) Экспорт
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры.Организация <> Организация Тогда
		Возврат; // Задание неактуально. После запуска этого задания были изменены ключевые реквизиты.
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус <> "Ошибка" Тогда
		
		ДанныеЗапроса = ПолучитьИзВременногоХранилища(ДлительнаяОперация.АдресРезультата);
		Если ЗначениеЗаполнено(ДанныеЗапроса) Тогда
			ВремяОжидания = ДанныеЗапроса.ВремяОжидания;
		Иначе 
			ВремяОжидания = 0;
		КонецЕсли;
		
		ПодключитьОбработчикОжидания(
			СтрШаблон("Подключаемый_ПолучитьРезультатВыполненияВФоне%1", ДополнительныеПараметры.Запрос),
			ВремяОжидания,
			Истина);
		
	Иначе
		ПоказатьОшибкуВыполненияМетодаВзаимодействия(ДлительнаяОперация);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьПолучениеРезультатаВыполненияВФоне(МетодВзаимодействия)
	
	ДлительнаяОперация = ПолучитьРезультатВыполненияВФонеНаСервере(ДанныеЗапроса, УникальныйИдентификатор);
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус <> "Ошибка" Тогда
		НастройкиОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		НастройкиОжидания.ВыводитьОкноОжидания = Ложь;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Запрос", МетодВзаимодействия);
		ДополнительныеПараметры.Вставить("Организация", Организация);
		
		Обработчик = Новый ОписаниеОповещения("ПослеПолученияРезультатаВыполненияМетода", ЭтотОбъект, ДополнительныеПараметры);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Обработчик, НастройкиОжидания);
	Иначе
		ПоказатьОшибкуВыполненияМетодаВзаимодействия(ДлительнаяОперация);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРезультатВыполненияВФонеНаСервере(Знач Запрос, Знач ИдентификаторФормы)
	
	НастройкиЗапуска = ДлительныеОперации.ПараметрыВыполненияВФоне(ИдентификаторФормы);
	НастройкиЗапуска.ОжидатьЗавершение = 0;
	НастройкиЗапуска.ДополнительныйРезультат = Запрос.ДополнительныйРезультат;
	
	Результат = ДлительныеОперации.ВыполнитьВФоне(
		"ИнтеграцияСПлатформойСамозанятые.ПолучитьРезультатВыполненияВФоне",
		Запрос,
		НастройкиЗапуска);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПослеПолученияРезультатаВыполненияМетода(ДлительнаяОперация, ДополнительныеПараметры) Экспорт
	
	Если ДлительнаяОперация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры.Организация <> Организация Тогда
		Возврат; // Задание неактуально. После запуска этого задания были изменены ключевые реквизиты.
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Ошибка" Тогда
		ПоказатьОшибкуВыполненияМетодаВзаимодействия(ДлительнаяОперация);
		Возврат;
	КонецЕсли;
	
	Ответ = ПолучитьИзВременногоХранилища(ДлительнаяОперация.АдресРезультата);
	
	Если Ответ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьСтатусы(ЭтотОбъект, ДополнительныеПараметры.Запрос, Ответ.Статус);
	
	СтатусыЗапросов = ИнтеграцияСПлатформойСамозанятыеКлиентСервер.СтатусыЗапросов();
	Если Ответ.Статус = СтатусыЗапросов.Выполнено Тогда
		
		ОбработатьПолученныеРезультаты(Ответ.Результат, ДополнительныеПараметры.Запрос);
		
		УправлениеФормой(ЭтотОбъект);
		
	ИначеЕсли Ответ.Статус = СтатусыЗапросов.Выполняется Тогда
		ПодключитьОбработчикОжидания(
			СтрШаблон("Подключаемый_ПолучитьРезультатВыполненияВФоне%1", ДополнительныеПараметры.Запрос),
			Ответ.ВремяОжидания,
			Истина);
	ИначеЕсли Ответ.Статус = СтатусыЗапросов.Ошибка Тогда
		
		ЗаписатьОшибкуВЖурналРегистрации(Ответ.Сообщение);
		
		УправлениеФормой(ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьПолученныеРезультаты(Ответ, МетодВзаимодействия)
	
	Если ТипЗнч(Ответ) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеРазрешения = Ответ.Разрешения;
	РазрешенияПредоставлены = Истина;
	Для Каждого ТребуемоеРазрешение Из Разрешения Цикл
		
		Если ТекущиеРазрешения.Найти(ТребуемоеРазрешение.Значение) = Неопределено Тогда
			РазрешенияПредоставлены = Ложь;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если РазрешенияПредоставлены Тогда
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("Организация", Организация);
		ПараметрыОповещения.Вставить("Разрешения", Разрешения);
		
		Оповестить("Самозанятые_ИзмененыРазрешения", ПараметрыОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПараметрыМетодаВзаимодействия(МетодВзаимодействия)
	
	ПараметрыМетода = 
		ИнтеграцияСПлатформойСамозанятыеКлиентСервер.НовыеПараметрыМетодаВзаимодействия(МетодВзаимодействия);
	
	ЗаполнитьЗначенияСвойств(ПараметрыМетода, ЭтотОбъект);
	
	Возврат ПараметрыМетода;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьСтатусы(Форма, МетодВзаимодействия, НовыйСтатус)
	
	Форма.СтатусПроверкиРазрешений = НовыйСтатус;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОшибкуВыполненияМетодаВзаимодействия(ДлительнаяОперация)
	
	СообщениеОшибкиПодключения = ДлительнаяОперация.КраткоеПредставлениеОшибки;
	
	ЗаписатьОшибкуВЖурналРегистрации(СообщениеОшибкиПодключения);
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьОшибкуВЖурналРегистрации(ТекстОшибки)
	
	ЗаписьЖурналаРегистрации(
		Обработки.ПомощникИнтеграцииСПлатформойСамозанятые.ИмяСобытияЖурналаРегистрацииИзменениеРазрешений(),
		УровеньЖурналаРегистрации.Ошибка, , ,
		ТекстОшибки);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция МетодыВзаимодействия()
	
	МетодыВзаимодействия = Новый Структура;
	МетодыВзаимодействия.Вставить("Разрешения", "СписокРазрешений");
	
	Возврат МетодыВзаимодействия;
	
КонецФункции

#КонецОбласти

#КонецОбласти