#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс 

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ИнвентарнаяЭтикеткаОС") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"ИнвентарнаяЭтикеткаОС", "Инвентарная этикетка ОС", 
			ПолучитьПечатнуюФорму(МассивОбъектов, ПараметрыПечати, ОбъектыПечати));
	КонецЕсли;
		
КонецПроцедуры

Процедура СформироватьПечатнуюФормуОбычныйПринтер(ТабДок, МакетЭтикетки, ДанныеДляПечати, Организация)
	
	СчетчикЭтикеток = 0;
	
	Для Каждого ЭлементМассива Из ДанныеДляПечати Цикл
		СчетчикЭтикеток = СчетчикЭтикеток+1;
		Для Сч = 1 По ЭлементМассива.КоличествоПоУчету Цикл
			ДанныеДляПечатиЭтикетки = ПолучитьДанныеДляПечатиЭтикетки(ЭлементМассива, Организация);
			Этикетка = СформироватьЭтикетку(МакетЭтикетки, ДанныеДляПечатиЭтикетки);
		    Если СчетчикЭтикеток = 1 Тогда
				ТабДок.Вывести(Этикетка);
			Иначе
				Если ТабДок.ПроверитьПрисоединение(Этикетка) Тогда
					ТабДок.Присоединить(Этикетка);
				Иначе
					ТабДок.ВывестиВертикальныйРазделительСтраниц();
					Если Не ТабДок.ПроверитьВывод(Этикетка) Тогда
						ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					ТабДок.Вывести(Этикетка);
				КонецЕсли
			КонецЕсли;
		КонецЦикла;
		Если СчетчикЭтикеток = ДанныеДляПечати.Количество() Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
        КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьПечатнуюФормуПринтерЭтикеток(ТабДок, МакетЭтикетки, ДанныеДляПечати, Организация)
	
	Для Каждого ЭлементМассива Из ДанныеДляПечати Цикл
		Для Сч = 1 По ЭлементМассива.КоличествоПоУчету Цикл
			ДанныеДляПечатиЭтикетки = ПолучитьДанныеДляПечатиЭтикетки(ЭлементМассива, Организация);
			Этикетка = СформироватьЭтикетку(МакетЭтикетки, ДанныеДляПечатиЭтикетки);
	        ТабДок.Вывести(Этикетка);
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьПечатнуюФорму(МассивОбъектов, ПараметрыПечати, ОбъектыПечати);
		
	ТабДок = Новый ТабличныйДокумент;
	
	МакетЭтикетки = ПолучитьМакет(ПараметрыПечати.ИмяМакета);
	Если ПараметрыПечати.ПечатьИзДокумента Тогда
		ДанныеДляПечати = ПолучитьДанныеДляПечатиИзДокумента(МассивОбъектов)	
	Иначе
		ДанныеДляПечати = ПараметрыПечати.ДанныеДляПечати;
	КонецЕсли;
	
	Если ПараметрыПечати.РазмерБумаги = "ЛистФормата_А4" Тогда
		СформироватьПечатнуюФормуОбычныйПринтер(ТабДок, МакетЭтикетки, ДанныеДляПечати, ПараметрыПечати.Организация);
	ИначеЕсли ПараметрыПечати.РазмерБумаги = "ЛентаТермоэтикеток" Тогда
		СформироватьПечатнуюФормуПринтерЭтикеток(ТабДок, МакетЭтикетки, ДанныеДляПечати, ПараметрыПечати.Организация);
	КонецЕсли;
	
	ТабДок.ИмяПараметровПечати 	= "ПЕЧАТЬ_ИНВЕНТАРНЫХ_ЭТИКЕТОК";
	ТабДок.ПолеСверху 			= 0;
	ТабДок.ПолеСлева 			= 0;
	ТабДок.ПолеСнизу 			= 0;
	ТабДок.ПолеСправа 			= 0;
	ТабДок.ОриентацияСтраницы 	= ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб 			= Истина;
	
	Возврат ТабДок;

КонецФункции

Функция СформироватьЭтикетку(Макет, ДанныеДляПечати)
	
	ОбластьЭтикетки = Макет.ПолучитьОбласть("ВысотаЭтикетки|ШиринаЭтикетки");
	ШиринаШтрихкода = Окр(ОбластьЭтикетки.Рисунки.Штрихкод.Ширина/0.26454);
	ВысотаШтрихкода = Окр(ОбластьЭтикетки.Рисунки.Штрихкод.Высота/0.26454);
	ЗаполнитьЗначенияСвойств(ОбластьЭтикетки.Параметры, ДанныеДляПечати);
	ОбластьЭтикетки.Рисунки.Штрихкод.Картинка = ПолучитьКартинкуШтрихкода(ДанныеДляПечати.Штрихкод, 1, ШиринаШтрихкода, ВысотаШтрихкода);
		
	Возврат ОбластьЭтикетки;
	
КонецФункции

Функция ПолучитьДанныеДляПечатиИзДокумента(МассивДокументов)
	
	ПоступлениеОС 	= МассивДокументов[0];
	МассивОС 		= Новый Массив; 
	Местонахождение = ПоступлениеОС.МестонахождениеОС;
	МОЛ				= Справочники.ФизическиеЛица.ПустаяСсылка();
	Если ТипЗнч(ПоступлениеОС) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		ТабОС 				= ПоступлениеОС.ОсновныеСредства.Выгрузить();
		МОЛ   				= ПоступлениеОС.МОЛ;
		ИмяТабличнойЧасти 	= "ОсновныеСредства";
	ИначеЕсли ТипЗнч(ПоступлениеОС) = Тип("ДокументСсылка.ПринятиеКУчетуОС") Тогда
		ТабОС 				= ПоступлениеОС.ОС.Выгрузить();
		МОЛ 				= ПоступлениеОС.МОЛБУ;
		ИмяТабличнойЧасти 	= "ОС";
	КонецЕсли;
	
	Для Каждого Стр Из ТабОС Цикл
		СтруктураСтроки = Новый Структура("ИнвентарныйНомер, Штрихкод, ОсновноеСредство, КоличествоПоУчету, Местонахождение, МОЛ");
		СтруктураСтроки.ИнвентарныйНомер 	= Стр.ОсновноеСредство.Код;
		СтруктураСтроки.Штрихкод 			= "299000"+Сред(Стр.ОсновноеСредство.Код, 4, СтрДлина(Стр.ОсновноеСредство.Код)-3);
		СтруктураСтроки.ОсновноеСредство 	= Стр.ОсновноеСредство;
		СтруктураСтроки.КоличествоПоУчету 	= ?(ЕстьРеквизитТабличнойЧасти(ПоступлениеОС, ИмяТабличнойЧасти, "Количество"), Стр.Количество, 1);
		СтруктураСтроки.Местонахождение 	= Местонахождение;
		СтруктураСтроки.МОЛ					= МОЛ;
		МассивОС.Добавить(СтруктураСтроки);
	КонецЦикла;

	
	Возврат МассивОС;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции 

Функция ПолучитьКартинкуШтрихкода(Штрихкод, ТипШтрихкода = 1, Ширина, Высота, ОтображатьТекст = Ложь)
	
	КартинкаШтрихкода					= БиблиотекаКартинок.MicrosoftStore;
	
	ПараметрыШтрихкода 					= ГенерацияШтрихкода.ПараметрыГенерацииШтрихкода();
	ПараметрыШтрихкода.Ширина 			= Ширина;
	ПараметрыШтрихкода.Высота 			= Высота;
	ПараметрыШтрихкода.ТипКода 			= ТипШтрихкода;
	ПараметрыШтрихкода.Штрихкод			= Штрихкод;
	ПараметрыШтрихкода.ОтображатьТекст 	= ОтображатьТекст;
	ПараметрыШтрихкода.РазмерШрифта		= 0;
	ПараметрыШтрихкода.Масштабировать 	= Истина;
	РезультатКартинка 					= ГенерацияШтрихкода.ИзображениеШтрихкода(ПараметрыШтрихкода);
	
	Если РезультатКартинка.Результат Тогда
		КартинкаШтрихкода = РезультатКартинка.Картинка;
	КонецЕсли;
	
	Возврат КартинкаШтрихкода;
	
КонецФункции

Функция ПолучитьДанныеДляПечатиЭтикетки(СтруктураДанных, Организация)
	
	ДанныеДляПечати = Новый Структура;
	
	ДанныеДляПечати.Вставить("НаименованиеОС"		, СтруктураДанных.ОсновноеСредство.Наименование);
	ДанныеДляПечати.Вставить("ИнвентарныйНомер"		, СтруктураДанных.ИнвентарныйНомер);
	ДанныеДляПечати.Вставить("Местонахождение"		, ?(ЗначениеЗаполнено(СтруктураДанных.Местонахождение), "Место: " + СтруктураДанных.Местонахождение.Наименование, ""));
	ДанныеДляПечати.Вставить("МОЛ"					, ?(ЗначениеЗаполнено(СтруктураДанных.МОЛ), "Отв: " + ФизическиеЛицаКлиентСервер.ФамилияИнициалы(СтруктураДанных.МОЛ.Наименование), ""));
	ДанныеДляПечати.Вставить("Штрихкод"				, СтруктураДанных.Штрихкод);
	ДанныеДляПечати.Вставить("Организация"			, Организация);
	
	Возврат ДанныеДляПечати;
	
КонецФункции

Функция ЕстьРеквизитТабличнойЧасти(СсылкаНаОбъект, ИмяТабличнойЧасти, ИмяРеквизита) 
	
	Возврат СсылкаНаОбъект.Метаданные().ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты.Найти(ИмяРеквизита) <> Неопределено;
	
КонецФункции

#КонецОбласти

#КонецЕсли