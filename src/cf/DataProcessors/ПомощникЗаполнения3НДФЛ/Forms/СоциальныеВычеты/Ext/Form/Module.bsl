
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресКлючейПоказателей = Параметры.АдресКлючейПоказателей;
	ВыбраннаяФорма = Параметры.Декларация3НДФЛВыбраннаяФорма;
	СуммаДохода = Параметры.СуммаДохода;
	
	Если Параметры.Свойство("СтруктураДоходовВычетов") И ЗначениеЗаполнено(Параметры.СтруктураДоходовВычетов) Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.СтруктураДоходовВычетов);
	КонецЕсли;
	
	СтруктураДоходовВычетов = Неопределено;
	Параметры.Свойство("СтруктураДоходовВычетов", СтруктураДоходовВычетов);
	
	НастройкиРаспределенияВычетов = ПомощникЗаполнения3НДФЛ.НастройкиРаспределенияВычетов(
		ЭтотОбъект,
		Параметры.ДоступныеДоходы,
		СтруктураДоходовВычетов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, НастройкиРаспределенияВычетов,
		"ВариантРаспределенияВычета, ВидДохода, СуммаВычета");
	
	РаспределениеПоДоходам.Загрузить(НастройкиРаспределенияВычетов.РаспределениеПоДоходам);
	Элементы.ВидДоходаВычета.СписокВыбора.ЗагрузитьЗначения(НастройкиРаспределенияВычетов.СписокВыбораДохода);
	
	ПересчитатьИРаспределитьСуммуВычета();
	
	УправлениеФормой(ЭтотОбъект);
	
	КлючСохраненияПоложенияОкна = СтрШаблон("%1%2", Год(Параметры.Период), ВариантРаспределенияВычета);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ПомощникЗаполнения3НДФЛКлиентСервер.ВычетыРаспределяютсяПоДоходам(ВыбраннаяФорма) Тогда
		
		РаспределеннаяСумма = РаспределениеПоДоходам.Итог("СуммаВычета");
		Если РаспределеннаяСумма < СуммаВычета 
			И РаспределениеПоДоходам.Итог("НалоговаяБаза") > РаспределеннаяСумма Тогда
			
			ТекстСообщения = НСтр("ru = 'Сумма указанного вычета не распределена по доходам'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОбучениеСвоеПриИзменении(Элемент)
	АктуализироватьДанныеОСуммеВычета();
КонецПроцедуры

&НаКлиенте
Процедура ОбучениеДетейПриИзменении(Элемент)
	АктуализироватьДанныеОСуммеВычета();
КонецПроцедуры

&НаКлиенте
Процедура МедицинскоеСтрахованиеПриИзменении(Элемент)
	АктуализироватьДанныеОСуммеВычета();
КонецПроцедуры

&НаКлиенте
Процедура ЛечениеМедикаментыПриИзменении(Элемент)
	АктуализироватьДанныеОСуммеВычета();
КонецПроцедуры

&НаКлиенте
Процедура ОбычноеЛечениеПриИзменении(Элемент)
	АктуализироватьДанныеОСуммеВычета();
КонецПроцедуры

&НаКлиенте
Процедура ДорогостоящееЛечениеПриИзменении(Элемент)
	АктуализироватьДанныеОСуммеВычета();
КонецПроцедуры

&НаКлиенте
Процедура МедикаментыПриИзменении(Элемент)
	АктуализироватьДанныеОСуммеВычета();
КонецПроцедуры

&НаКлиенте
Процедура ВычетЗаФитнесПриИзменении(Элемент)
	АктуализироватьДанныеОСуммеВычета();
КонецПроцедуры

&НаКлиенте
Процедура ПожертвованияПриИзменении(Элемент)
	АктуализироватьДанныеОСуммеВычета();
КонецПроцедуры

&НаКлиенте
Процедура СтраховыеВзносыНаПенсиюПриИзменении(Элемент)
	АктуализироватьДанныеОСуммеВычета();
КонецПроцедуры

&НаКлиенте
Процедура ОценкаКвалификацииПриИзменении(Элемент)
	АктуализироватьДанныеОСуммеВычета();
КонецПроцедуры

&НаКлиенте
Процедура ВариантРаспределенияВычетаПриИзменении(Элемент)
	
	ПомощникЗаполнения3НДФЛКлиент.ВариантРаспределенияВычетаПриИзменении(ЭтотОбъект);
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДоходаВычетаПриИзменении(Элемент)
	
	ПомощникЗаполнения3НДФЛКлиент.ВидДоходаВычетаПриИзменении(ВидДохода, СуммаВычета, РаспределениеПоДоходам);
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределениеПоДоходамПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ПомощникЗаполнения3НДФЛКлиент.РаспределениеПоДоходамПередОкончаниемРедактирования(
		ЭтотОбъект, ОтменаРедактирования, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределениеПоДоходамПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	РаспределеноВычетаВсего = РаспределениеПоДоходам.Итог("СуммаВычета");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	СуммаВычета = РассчитатьСуммуВычета();
	Если СуммаВычета = 0 Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Заполните хотя бы одно поле'"));
		Возврат;
	КонецЕсли;
	
	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить("Вид", ПредопределенноеЗначение("Перечисление.ВычетыФизическихЛиц.Социальный"));
	СтруктураОтвета.Вставить("Информация",              Строка(СтруктураОтвета.Вид));
	СтруктураОтвета.Вставить("ОбучениеСвое",            ОбучениеСвое);
	СтруктураОтвета.Вставить("ОбучениеДетей",           ОбучениеДетей);
	СтруктураОтвета.Вставить("ДорогостоящееЛечение",    ДорогостоящееЛечение);
	СтруктураОтвета.Вставить("ЛечениеМедикаменты",      ЛечениеМедикаменты);
	СтруктураОтвета.Вставить("Медикаменты",             Медикаменты);
	СтруктураОтвета.Вставить("ОбычноеЛечение",          ОбычноеЛечение);
	СтруктураОтвета.Вставить("МедицинскоеСтрахование",  МедицинскоеСтрахование);
	СтруктураОтвета.Вставить("Пожертвования",           Пожертвования);
	СтруктураОтвета.Вставить("СтраховыеВзносыНаПенсию", СтраховыеВзносыНаПенсию);
	СтруктураОтвета.Вставить("ОценкаКвалификации",      ОценкаКвалификации);
	СтруктураОтвета.Вставить("ВычетЗаФитнес",           ВычетЗаФитнес);
	
	СтруктураОтвета.Вставить("СуммаВычета", СуммаВычета);
	
	Если ПомощникЗаполнения3НДФЛКлиентСервер.ВычетыРаспределяютсяПоДоходам(ВыбраннаяФорма) Тогда
		СтруктураОтвета.Вставить("ВидДохода",
			ПомощникЗаполнения3НДФЛКлиент.СоответствиеРаспределенияПоДоходам(РаспределениеПоДоходам));
	КонецЕсли;
	
	Закрыть(СтруктураОтвета);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ЛечениеМедикаменты.Видимость =
		ЕстьКлючПоказателя("СоциальныйВычетЛечениеМедикаменты", Форма.АдресКлючейПоказателей);
	
	Элементы.Медикаменты.Видимость =
		ЕстьКлючПоказателя("СоциальныйВычетМедикаменты", Форма.АдресКлючейПоказателей);
	
	Элементы.ОбычноеЛечение.Видимость =
		ЕстьКлючПоказателя("СоциальныйВычетОбычноеЛечение", Форма.АдресКлючейПоказателей);
	
	Элементы.ВычетЗаФитнес.Видимость =
		ЕстьКлючПоказателя("СоциальныйВычетЗаФитнес", Форма.АдресКлючейПоказателей);
	
	ПомощникЗаполнения3НДФЛКлиентСервер.УправлениеФормой(Форма);
	
КонецПроцедуры

&НаСервере
Функция РассчитатьСуммуВычета()
	
	ПределыВычетов = Отчеты.РегламентированныйОтчет3НДФЛ.ПределыВычетов(ВыбраннаяФорма);
	СуммаПожертвований = Мин(Пожертвования, СуммаДохода * ПределыВычетов.ПожертвованияПроцентДохода);
	
	СуммаВычетовСОграничением = ОбучениеСвое + ЛечениеМедикаменты + МедицинскоеСтрахование
		+ ОбычноеЛечение + Медикаменты + СтраховыеВзносыНаПенсию + ОценкаКвалификации + ВычетЗаФитнес;
	
	СуммаВычетовБезОграничения = ОбучениеДетей + ДорогостоящееЛечение;
	
	СуммаВычетаИтого = Мин(СуммаВычетовСОграничением, ПределыВычетов.СоциальныеВычеты)
		+ СуммаВычетовБезОграничения
		+ СуммаПожертвований;
	
	Возврат СуммаВычетаИтого;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЕстьКлючПоказателя(Знач ИмяКлюча, Знач АдресКлючейПоказателей)
	
	Возврат Отчеты.РегламентированныйОтчет3НДФЛ.ЕстьКлючПоказателя(ИмяКлюча, АдресКлючейПоказателей);
	
КонецФункции

&НаСервере
Процедура ПересчитатьИРаспределитьСуммуВычета()
	
	СуммаВычета = РассчитатьСуммуВычета();
	
	Если СуммаВычета = РаспределениеПоДоходам.Итог("СуммаВычета") Тогда
		Возврат;
	КонецЕсли;
	
	ПомощникЗаполнения3НДФЛКлиентСервер.РаспределитьСуммуВычета(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура АктуализироватьДанныеОСуммеВычета()
	
	ПересчитатьИРаспределитьСуммуВычета();
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти
