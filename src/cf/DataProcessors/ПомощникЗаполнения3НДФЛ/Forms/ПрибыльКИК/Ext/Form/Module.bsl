#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВыбраннаяФорма = Параметры.Декларация3НДФЛВыбраннаяФорма;
	ДатаПолученияДохода = КонецГода(Параметры.Период);
	СреднийКурс = 1;
	
	СтруктураДоходовВычетов = Неопределено;
	Параметры.Свойство("СтруктураДоходовВычетов", СтруктураДоходовВычетов);
	
	Если ЗначениеЗаполнено(СтруктураДоходовВычетов)
		И СтруктураДоходовВычетов.Свойство("ДанныеФормы")
		И ЗначениеЗаполнено(СтруктураДоходовВычетов.ДанныеФормы) Тогда
		
		ЗаполнитьФормуИзДанных(СтруктураДоходовВычетов.ДанныеФормы);
	Иначе
		РассчитыватьНалогФиксированнойСуммой = Истина;
		СуммаДохода = СуммаФиксированнойПрибыли(ДатаПолученияДохода);
		ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
		ВалютаДохода = ВалютаРегламентированногоУчета;
		Страна = Справочники.СтраныМира.Россия;
		СтранаЗачисления = Страна;
		ДействуетДоговорОбИзбежанииДвойногоНалогообложения = ПризнакИзбежанияДвойногоНалогообложения(
			Страна,
			ДатаПолученияДохода);
	КонецЕсли;
	
	УправлениеФормойПриСозданииНаСервере();
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если РассчитыватьНалогФиксированнойСуммой Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НомерКИК");
		МассивНепроверяемыхРеквизитов.Добавить("Страна");
		МассивНепроверяемыхРеквизитов.Добавить("ВалютаДохода");
		МассивНепроверяемыхРеквизитов.Добавить("СуммаДоходаВВалюте");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РассчитыватьНалогФиксированнойСуммойПриИзменении(Элемент)
	
	Если РассчитыватьНалогФиксированнойСуммой Тогда
		СуммаДохода = СуммаФиксированнойПрибыли(ДатаПолученияДохода);
		ВалютаДохода = ВалютаРегламентированногоУчета;
		Страна = ПредопределенноеЗначение("Справочник.СтраныМира.Россия");
	Иначе
		СуммаДохода = 0;
		ВалютаДохода = ПредопределенноеЗначение("Справочник.Валюты.ПустаяСсылка");
		Страна = ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ИСБОЮЛПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СтранаИсточникаПриИзменении(Элемент)
	
	ДействуетДоговорОбИзбежанииДвойногоНалогообложения = ПризнакИзбежанияДвойногоНалогообложения(
		Страна,
		ДатаПолученияДохода);
	
	УправлениеФормой(ЭтотОбъект);
	УстановитьКлючСохраненияПоложенияОкна(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаДоходаПриИзменении(Элемент)
	
	ВалютаДоходаПриИзмененииНаСервере();
	РассчитатьСуммуДоходаВРублях();
	РассчитатьСуммуНалогаВРублях();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаДоходаВВалютеПриИзменении(Элемент)
	
	РассчитатьСуммуДоходаВРублях();
	РассчитатьСуммуНалогаВРублях();

КонецПроцедуры

&НаКлиенте
Процедура СуммаНалогВВалютеПриИзменении(Элемент)
	
	РассчитатьСуммуНалогаВРублях();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаУплатыНалогаПриИзменении(Элемент)
	
	КурсВалюты = КурсВалюты(ВалютаДохода, ДатаУплатыНалога);
	КурсНаДатуУплатыНалога           = КурсВалюты.Курс;
	КратностьКурсаНаДатуУплатыНалога = КурсВалюты.Кратность;
	РассчитатьСуммуНалогаВРублях();
	
КонецПроцедуры

&НаКлиенте
Процедура КурсНаДатуУплатыНалогаПриИзменении(Элемент)
	РассчитатьСуммуНалогаВРублях();
КонецПроцедуры

&НаКлиенте
Процедура КратностьКурсаНаДатуУплатыНалогаПриИзменении(Элемент)
	РассчитатьСуммуНалогаВРублях();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВсеВалюты(Команда)
	
	ОткрытьФорму("Справочник.Валюты.ФормаСписка", , ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Закрыть(ОписаниеОтвета());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВалютаДоходаПриИзмененииНаСервере()
	
	СреднийКурс = СреднийКурсВалюты(ВалютаДохода, ДатаПолученияДохода);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФормуИзДанных(ДанныеФормы)
	
	Для Каждого ИмяРеквизита Из МассивРеквизитовФормы() Цикл
		ДанныеФормы.Свойство(ИмяРеквизита, ЭтотОбъект[ИмяРеквизита]);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КодВидаДохода(ВыбраннаяФорма, ФиксированнаяПрибыль, ИСБОЮЛ)
	
	СоответствиеДоходовИсточникам = Обработки.ПомощникЗаполнения3НДФЛ.СоответствиеДоходовИсточникам(ВыбраннаяФорма);
	Если ФиксированнаяПрибыль Тогда
		Возврат СоответствиеДоходовИсточникам.Получить(Перечисления.ИсточникиДоходовФизическихЛиц.ФиксированнаяПрибыльКИК);
	ИначеЕсли ИСБОЮЛ Тогда
		Возврат СоответствиеДоходовИсточникам.Получить(Перечисления.ИсточникиДоходовФизическихЛиц.ПрибыльКИК_ИСБОЮЛ);
	Иначе
		Возврат СоответствиеДоходовИсточникам.Получить(Перечисления.ИсточникиДоходовФизическихЛиц.ПрибыльКИК);
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция КурсВалюты(Знач Валюта, Знач ДатаКурса)
	
	Возврат РаботаСКурсамиВалют.ПолучитьКурсВалюты(Валюта, ДатаКурса);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция МассивРеквизитовФормы()
	
	Массив = Новый Массив;
	Массив.Добавить("РассчитыватьНалогФиксированнойСуммой");
	Массив.Добавить("ИСБОЮЛ");
	Массив.Добавить("ВалютаДохода");
	Массив.Добавить("ДатаПолученияДохода");
	Массив.Добавить("ДатаУплатыНалога");
	Массив.Добавить("ДействуетДоговорОбИзбежанииДвойногоНалогообложения");
	Массив.Добавить("СреднийКурс");
	Массив.Добавить("КратностьКурсаНаДатуУплатыНалога");
	Массив.Добавить("КурсНаДатуУплатыНалога");
	Массив.Добавить("НомерКИК");
	Массив.Добавить("Страна");
	Массив.Добавить("СтранаЗачисления");
	Массив.Добавить("СуммаДоходаВВалюте");
	Массив.Добавить("СуммаДохода");
	Массив.Добавить("СуммаНалогаВВалюте");
	Массив.Добавить("СуммаНалогаВРублях");
	Возврат Массив;
	
КонецФункции

&НаСервереБезКонтекста
Функция НаименованиеИсточника(РассчитыватьНалогФиксированнойСуммой, НомерКИК)
	
	Если РассчитыватьНалогФиксированнойСуммой Тогда
		Возврат НСтр("ru = 'Фиксированная прибыль КИК'");
	Иначе
		Возврат НомерКИК;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ОписаниеОтвета()
	
	Результат = Новый Структура;
	
	Результат.Вставить("Вид", Перечисления.ИсточникиДоходовФизическихЛиц.ПрибыльКИК);
	Результат.Вставить("Информация", ОписаниеДохода(РассчитыватьНалогФиксированнойСуммой, НомерКИК));
	Результат.Вставить("СуммаДохода", СуммаДохода);
	Результат.Вставить("СуммаВычета", 0);
	
	СтруктураДанныхДекларации = Новый Структура;
	СтруктураДанныхДекларации.Вставить("Страна", Страна);
	СтруктураДанныхДекларации.Вставить("СтранаЗачисления", СтранаЗачисления);
	СтруктураДанныхДекларации.Вставить("Валюта", ВалютаДохода);
	СтруктураДанныхДекларации.Вставить("ДатаПолученияДохода", КонецГода(ДатаПолученияДохода));
	СтруктураДанныхДекларации.Вставить("КурсНаДатуПолученияДохода", СреднийКурс);
	СтруктураДанныхДекларации.Вставить("СуммаДоходаВРублях", СуммаДохода);
	
	Если ВалютаДохода = ВалютаРегламентированногоУчета Тогда
		СтруктураДанныхДекларации.Вставить("СуммаДоходаВВалюте", СуммаДохода);
	Иначе
		СтруктураДанныхДекларации.Вставить("СуммаДоходаВВалюте", СуммаДоходаВВалюте);
	КонецЕсли;
	
	СтруктураДанныхДекларации.Вставить("ДатаУплатыНалога", ДатаУплатыНалога);
	СтруктураДанныхДекларации.Вставить("СуммаНалогаВВалюте", СуммаНалогаВВалюте);
	СтруктураДанныхДекларации.Вставить("СуммаНалогаВРублях", СуммаНалогаВРублях);
	СтруктураДанныхДекларации.Вставить("КурсНаДатуУплатыНалога", КурсНаДатуУплатыНалога);
	СтруктураДанныхДекларации.Вставить("КратностьКурсаНаДатуУплатыНалога", КратностьКурсаНаДатуУплатыНалога);
	
	Если РассчитыватьНалогФиксированнойСуммой Тогда
		СтруктураДанныхДекларации.Вставить("ПорядокОпределенияПрибылиУбыткаКИК", "");
	Иначе
		СтруктураДанныхДекларации.Вставить("ПорядокОпределенияПрибылиУбыткаКИК", "1");
	КонецЕсли;
	
	Результат.Вставить("СтавкаНалога",
		УчетНДФЛПредпринимателяКлиентСервер.НалоговыеСтавкиПоУмолчанию().СтавкаНДФЛПовышенная);
		
	СтруктураДанныхДекларации.Вставить("СуммаНалогаИсчисленная",
		УчетНДФЛПредпринимателяКлиентСервер.СуммаНалога(СуммаДохода, ДатаПолученияДохода));
	
	СтруктураДанныхДекларации.Вставить("НаименованиеИсточника", НаименованиеИсточника(
		РассчитыватьНалогФиксированнойСуммой,
		НомерКИК));
	
	СтруктураДанныхДекларации.Вставить("КодВидаДохода", КодВидаДохода(
		ВыбраннаяФорма,
		РассчитыватьНалогФиксированнойСуммой,
		ИСБОЮЛ));
		
	Если ДействуетДоговорОбИзбежанииДвойногоНалогообложения Тогда
		СуммаНалогаПодлежащаяЗачету = Мин(СуммаНалогаВРублях, СтруктураДанныхДекларации.СуммаНалогаИсчисленная);
	Иначе
		СуммаНалогаПодлежащаяЗачету = 0;
	КонецЕсли;
	
	СтруктураДанныхДекларации.Вставить("СуммаНалогаПодлежащаяЗачету", СуммаНалогаПодлежащаяЗачету);
	СтруктураДанныхДекларации.Вставить("ИсточникДохода", СтруктураДанныхДекларации.НаименованиеИсточника);
	Результат.Вставить("ДанныеДекларации", СтруктураДанныхДекларации);
	
	// Данные формы для восстановления.
	СтруктураДанныхФормы = Новый Структура;
	Для Каждого ИмяРеквизита Из МассивРеквизитовФормы() Цикл
		СтруктураДанныхФормы.Вставить(ИмяРеквизита, ЭтотОбъект[ИмяРеквизита]);
	КонецЦикла;
	Результат.Вставить("ДанныеФормы", СтруктураДанныхФормы);
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ОписаниеДохода(РассчитыватьНалогФиксированнойСуммой, НомерКИК)
	
	Если РассчитыватьНалогФиксированнойСуммой Тогда
		Возврат НСтр("ru = 'Фиксированная прибыль КИК'");
	Иначе
		Возврат СтрШаблон(НСтр("ru = 'Прибыль КИК: %1'"), НомерКИК);
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПризнакИзбежанияДвойногоНалогообложения(Знач Страна, Знач Период)
	
	Если ЗначениеЗаполнено(Страна) Тогда
		
		КодСтраны = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Страна, "Код");
		
		МакетСтран = Обработки.ПомощникЗаполнения3НДФЛ.ПолучитьМакет("ДоговорыОбИзбежанииДвойногоНалогообложения");
		ТаблицаСтранСДоговоромОбИзбежанииДвойногоНалогообложения = 
			ОбщегоНазначения.ПрочитатьXMLВТаблицу(МакетСтран.ПолучитьТекст());
		
		НайденнаяСтрока = ТаблицаСтранСДоговоромОбИзбежанииДвойногоНалогообложения.Данные.Найти(КодСтраны, "КодСтраны");
		
		Если НайденнаяСтрока = Неопределено Тогда
			Возврат Ложь;
		Иначе
			Если ЗначениеЗаполнено(Период) Тогда
				Возврат Период >= Дата(НайденнаяСтрока.ДатаНачалаДействия);
			Иначе
				Возврат Истина;
			КонецЕсли;
		КонецЕсли;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура РассчитатьСуммуДоходаВРублях()
	
	СуммаДохода = СреднийКурс * СуммаДоходаВВалюте;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуНалогаВРублях()
	
	Если Не (ЗначениеЗаполнено(КурсНаДатуУплатыНалога) И ЗначениеЗаполнено(КратностьКурсаНаДатуУплатыНалога)) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураКурсаРуб = Новый Структура("Валюта, Курс, Кратность",
		ВалютаРегламентированногоУчета, 1, 1);
	
	СтруктураКурсаВалютыНаДатуУплаты = Новый Структура("Валюта, Курс, Кратность",
		ВалютаДохода,
		КурсНаДатуУплатыНалога,
		КратностьКурсаНаДатуУплатыНалога);
	
	СуммаНалогаВРублях = РаботаСКурсамиВалютКлиентСервер.ПересчитатьПоКурсу(
		СуммаНалогаВВалюте, СтруктураКурсаВалютыНаДатуУплаты, СтруктураКурсаРуб);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СреднийКурсВалюты(Валюта, ДатаПолученияДохода)
	
	// Средний курс рассчитывается как среднее арифметическое значение курса иностранной валюты к рублю
	// за все дни периода, за который составлена финансовая отчетность.
	// Письмо ФНС от 2 февраля 2021 г. N СД-4-3/1124@
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КурсыВалют.Валюта,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КурсыВалют.Кратность, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ КурсыВалют.Курс / КурсыВалют.Кратность
	|	КОНЕЦ КАК СуммаРуб
	|ИЗ
	|	РегистрСведений.КурсыВалют КАК КурсыВалют
	|ГДЕ
	|	КурсыВалют.Валюта = &Валюта
	|	И КурсыВалют.Период МЕЖДУ &ДатаНачала И &ДатаОкончания");
	
	Запрос.УстановитьПараметр("Валюта", Валюта);
	
	// По умолчанию признаём финансовый год - календарный год, предшествующий отчетному году
	// В иных случаях пользователь может установить средний курс самостоятельно
	Запрос.УстановитьПараметр("ДатаНачала", НачалоГода(ДатаПолученияДохода));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецГода(ДатаПолученияДохода));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат 1;
	КонецЕсли;
	
	Возврат РезультатЗапроса.Выгрузить()[0].СуммаРуб;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СуммаФиксированнойПрибыли(Период)
	
	// П. 2 Ст. 227.2 НК РФ
	Если Год(Период) = 2020 Тогда
		Возврат 38460000;
	Иначе
		Возврат 34000000;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура УправлениеФормойПриСозданииНаСервере()
	
	Элементы.ФормаКомандаОК.Доступность = Не ТолькоПросмотр;
	Элементы.РассчитыватьНалогФиксированнойСуммой.Доступность = Не ТолькоПросмотр;
	
	Элементы.ГруппаСуммаПрибыли.ТолькоПросмотр = ТолькоПросмотр;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ДекорацияИзбежаниеДвойногоНалогообложения.Видимость = Форма.ДействуетДоговорОбИзбежанииДвойногоНалогообложения;
	Элементы.ГруппаНалогИностранногоГосударства.Видимость = Форма.ДействуетДоговорОбИзбежанииДвойногоНалогообложения;
	
	Если Форма.РассчитыватьНалогФиксированнойСуммой Тогда
		Элементы.ГруппаСуммаПрибыли.Видимость = Ложь;
		Элементы.ДекорацияСуммаФиксированнойПрибыли.Видимость = Истина;
		Элементы.ДекорацияСуммаФиксированнойПрибыли.Заголовок = СтрШаблон(
			НСтр("ru = 'Фиксированная прибыль: %1 руб.'"),
			Формат(СуммаФиксированнойПрибыли(Форма.ДатаПолученияДохода), "ЧДЦ=0; ЧГ=3,0;"));
	Иначе
		Элементы.ГруппаСуммаПрибыли.Видимость = Истина;
		Элементы.ДекорацияСуммаФиксированнойПрибыли.Видимость = Ложь;
		Элементы.ДекорацияСуммаФиксированнойПрибыли.Заголовок = "";
		
		Если Форма.ИСБОЮЛ Тогда
			Элементы.НомерКИК.ПодсказкаВвода = НСтр("ru = 'ИС-00001'");
		Иначе
			Элементы.НомерКИК.ПодсказкаВвода = НСтр("ru = 'ИО-00001'");
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьКлючСохраненияПоложенияОкна(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьКлючСохраненияПоложенияОкна(Форма)
	
	Если Форма.РассчитыватьНалогФиксированнойСуммой Тогда;
		ПрефиксКлючаСохранения = "ФиксированнаяСумма";
	ИначеЕсли Форма.ДействуетДоговорОбИзбежанииДвойногоНалогообложения Тогда
		ПрефиксКлючаСохранения = "ДействуетДоговорОбИзбежанииДвойногоНалогообложения";
	Иначе
		ПрефиксКлючаСохранения = "НеДействуетДоговорОбИзбежанииДвойногоНалогообложения";
	КонецЕсли;
	
	Форма.КлючСохраненияПоложенияОкна = ПрефиксКлючаСохранения;
	
КонецПроцедуры

#КонецОбласти