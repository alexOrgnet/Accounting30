
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МожноСоздаватьДокументыУплаты = ПравоДоступа("Изменение", Метаданные.Документы.ПлатежноеПоручение)
		И ПравоДоступа("Изменение", Метаданные.Документы.РасходныйКассовыйОрдер);
	
	Организация = Параметры.Организация;
	Период      = КонецГода(Параметры.Период);
	Правило     = Параметры.Правило;
	
	Если Не ЗначениеЗаполнено(Правило) Тогда
		ЗаполнитьПравило();
	КонецЕсли;
	
	// Проверка заполнения реквизитов организации, необходимых для уплаты.
	ТекстДействия = НСтр("ru = 'уплатить задолженность по НДФЛ'");
	СообщениеТребуютсяРеквизиты = ПроверкаРеквизитовОрганизации.СтрокаСообщенияНеЗаполненыРеквизитыДляОтчетности(
		Организация, ТекстДействия);
	РеквизитыОрганизацииЗаполнены = ПроверитьРеквизитыОрганизации(Организация, Период).РеквизитыЗаполнены;
	
	ПоказыватьКомандыОплаты = ПомощникиПоУплатеНалоговИВзносов.ПоказыватьКомандыОплаты();
	
	ЗаполнитьЗадолженность();
	НайтиИОтобразитьСвязанныеПлатежи();
	УстановитьВидимостьКнопокОплаты();
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеВыписки"
		Или ИмяСобытия = "ОбновитьСостояниеОбменСБанками" Тогда
		
		ОбработкаЗаписиПлатежногоДокумента();
		
	ИначеЕсли ИмяСобытия = "Запись_ПлатежныйДокумент_УплатаНалогов" Тогда
		
		ПараметрОрганизация = Неопределено;
		Налог = Неопределено;
		УказанНалог = Параметр.Свойство("Налог", Налог) И ЗначениеЗаполнено(Налог);
		УказанаОрганизация = Параметр.Свойство("Организация", ПараметрОрганизация);
		
		Если ТипЗнч(Параметр) = Тип("Структура")
			И УказанаОрганизация И ПараметрОрганизация = Организация
			И УказанНалог И ЭтоУплатаНДФЛ(Налог) Тогда
			
			ОбработкаЗаписиПлатежногоДокумента();
			
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "Запись_Организации" И Организация = Источник Тогда
		
		РеквизитыОрганизацииЗаполнены = ПроверитьРеквизитыОрганизации(Организация, Период).РеквизитыЗаполнены;
		УправлениеФормой(ЭтотОбъект);
		
	ИначеЕсли ИмяСобытия = "УдалитьДокументУплаты" Тогда
		
		УдалитьДокументУплаты(Параметр);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	РезультатПроверкиРеквизитовОрганизации = ПроверитьРеквизитыОрганизации(Организация, Период);
	Если Не РезультатПроверкиРеквизитовОрганизации.РеквизитыЗаполнены Тогда
		ТекстОписанияОбъектаПроверки = НСтр("ru = 'уплаты задолженности по НДФЛ'");
		ПроверкаРеквизитовОрганизации.СообщитьОбОшибкеЗаполненияРеквизитовДляОтчетности(
			Организация,
			РезультатПроверкиРеквизитовОрганизации.НезаполненныеРеквизиты,
			"СообщениеТребуютсяРеквизиты",
			Отказ,
			ТекстОписанияОбъектаПроверки)
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НачисленоНажатие(Элемент)
	
	ИмяЭлемента = Элемент.Имя;
	
	ИндексПериода = Число(СтрЗаменить(ИмяЭлемента, "Начислено", ""));
	СтрокаПериода = РасчетыПоНалогу.Получить(ИндексПериода);
	
	ОткрытьРасшифровкуПлатежейВБюджет(СтрокаПериода.НалоговыйПериод, "НачисленияПлатежиНДФЛ");
	
КонецПроцедуры

&НаКлиенте
Процедура УплаченоНажатие(Элемент)
	
	ИмяЭлемента = Элемент.Имя;
	
	ИндексПериода = Число(СтрЗаменить(ИмяЭлемента, "Уплачено", ""));
	СтрокаПериода = РасчетыПоНалогу.Получить(ИндексПериода);
	
	ОткрытьРасшифровкуПлатежейВБюджет(СтрокаПериода.НалоговыйПериод, "ПлатежиНДФЛ");
	
КонецПроцедуры

&НаКлиенте
Процедура СообщениеТребуютсяРеквизитыОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Контекст = Новый Структура;
	Контекст.Вставить("Период", Период);
	Контекст.Вставить("ИмяРеглОтчета", "РегламентированныйОтчет3НДФЛ");
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Организация);
	ПараметрыФормы.Вставить("Назначение", "ДляОтчетности");
	ПараметрыФормы.Вставить("Контекст", Контекст);
	
	ОткрытьФорму("Справочник.Организации.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПлатежОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыПлатежныхДокументов = ПомощникиПоУплатеНалоговИВзносовКлиент.ПараметрыОбработкиПлатежныхДокументов(
		Платежи, "Платеж", ОповещениеУдаленияПлатежногоДокумента());
	
	ПомощникиПоУплатеНалоговИВзносовКлиент.ОбработкаНавигационнойСсылкиПлатежногоДокумента(
		Элемент, НавигационнаяСсылкаФорматированнойСтроки, ПараметрыПлатежныхДокументов);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОплатитьСБанковскогоСчета(Команда)
	
	Оплатить(ПредопределенноеЗначение("Перечисление.СпособыУплатыНалогов.БанковскийПеревод"))
	
КонецПроцедуры

&НаКлиенте
Процедура ОплатитьНаличнымиПоКвитанции(Команда)
	
	Оплатить(ПредопределенноеЗначение("Перечисление.СпособыУплатыНалогов.НаличнымиПоКвитанции"))
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПлатежиВБанк(Команда)
	
	ДокументыОплатыПоБанку = ПлатежныеДокументыДляОтправкиПоДиректБанку();
	
	Если ЗначениеЗаполнено(ДокументыОплатыПоБанку) Тогда
		ОбменСБанкамиКлиент.СформироватьПодписатьОтправитьЭД(ДокументыОплатыПоБанку);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьПлатежи(Команда)
	
	ДокументыОплатыВФайл = ПлатежныеДокументыДляВыгрузкиВФайл();
	
	Оповещение = Новый ОписаниеОповещения("ВыгрузитьПлатежныеДокументыЗавершение", ЭтотОбъект);
	ПомощникиПоУплатеНалоговИВзносовКлиент.ПроверитьИВыгрузитьПлатежныеДокументы(
		Организация, ДокументыОплатыВФайл, Оповещение, УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область УправлениеФормой

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	// Заголовок
	ЧастиЗаголовка = Новый Массив;
	Если Форма.НДФЛДолг > 0 Тогда
		ЧастиЗаголовка.Добавить(НСтр("ru = 'Задолженность по НДФЛ'"));
	ИначеЕсли Форма.НДФЛПереплата > 0 Тогда
		ЧастиЗаголовка.Добавить(НСтр("ru = 'Переплата по НДФЛ'"));
	Иначе
		ЧастиЗаголовка.Добавить(НСтр("ru = 'Расчеты по НДФЛ'"));
	КонецЕсли;
	
	ЧастиЗаголовка.Добавить(СтрШаблон(НСтр("ru = 'до %1 года'"), Формат(Год(форма.Период) + 1, "ЧГ=0")));
	
	Форма.Заголовок = СтрСоединить(ЧастиЗаголовка, " ");
	ЕстьЗадолженность = Форма.НДФЛДолг > 0;
	
	Элементы.ДекорацияЗаголовокОстатки.Видимость = ЕстьЗадолженность;
	Элементы.ГруппаОплатаЗадолженности.Видимость = ЕстьЗадолженность;
	
	Элементы.ГруппаКомандыОплаты.Видимость = Форма.ПоказыватьКомандыОплаты И ЕстьЗадолженность;
	Элементы.ГруппаОтправкаПлатежейВБанк.Видимость = Форма.ПоказыватьКомандыОплаты;
	
	Элементы.СообщениеТребуютсяРеквизиты.Видимость =
		(ЗначениеЗаполнено(Форма.Организация) И Не Форма.РеквизитыОрганизацииЗаполнены);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьКнопокОплаты()
	
	СпособОплаты = ВыполнениеЗадачБухгалтера.СпособУплатыНалогаВзноса(Организация);
	
	НадоВыбратьСпособОплаты = Не ЗначениеЗаполнено(СпособОплаты);
	
	ЗадолженностьОплаченаПолностью = ЗадолженностьОплаченаПолностью(ЭтотОбъект);
	
	ТребуетсяОтправитьДокументыОплатыПоБанку = ТребуетсяОтправитьДокументыОплатыПоДиректБанку();
	ТребуетсяВыгрузитьДокументыОплаты = Не ТребуетсяОтправитьДокументыОплатыПоБанку И ТребуетсяВыгрузитьДокументыОплаты();

	Элементы.ОтправитьПлатежиВБанк.Видимость = МожноСоздаватьДокументыУплаты И ТребуетсяОтправитьДокументыОплатыПоБанку;
	Элементы.ВыгрузитьПлатежи.Видимость = МожноСоздаватьДокументыУплаты И ТребуетсяВыгрузитьДокументыОплаты;
	
	Элементы.ОплатитьСБанковскогоСчета.Видимость = МожноСоздаватьДокументыУплаты И Не ЗадолженностьОплаченаПолностью
		И (НадоВыбратьСпособОплаты Или СпособОплаты = Перечисления.СпособыУплатыНалогов.БанковскийПеревод);
	
	Элементы.ОплатитьНаличнымиПоКвитанции.Видимость = МожноСоздаватьДокументыУплаты И Не ЗадолженностьОплаченаПолностью
		И (НадоВыбратьСпособОплаты Или СпособОплаты = Перечисления.СпособыУплатыНалогов.НаличнымиПоКвитанции);
	
	НеОтправленныеПлатежи = НеОтправленныеПлатежи(ЭтотОбъект);
	КнопкаПоУмолчаниюОтправитьВБанк = МожноСоздаватьДокументыУплаты И ЗначениеЗаполнено(НеОтправленныеПлатежи);
	
	КнопкаПоУмолчаниюУплата = Не КнопкаПоУмолчаниюОтправитьВБанк
		И МожноСоздаватьДокументыУплаты И Не ЗадолженностьОплаченаПолностью;
	
	УстановитьВидПоУмолчаниюОформлением(ЭтотОбъект, Элементы.ОплатитьСБанковскогоСчета, КнопкаПоУмолчаниюУплата);
	УстановитьВидПоУмолчаниюОформлением(ЭтотОбъект, Элементы.ОтправитьПлатежиВБанк, КнопкаПоУмолчаниюОтправитьВБанк);
	УстановитьВидПоУмолчаниюОформлением(ЭтотОбъект, Элементы.ВыгрузитьПлатежи, КнопкаПоУмолчаниюОтправитьВБанк);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЗадолженностьОплаченаПолностью(Форма)
	
	ЗадолженностьКУплате = НалогКУплате(Форма).Всего;
	
	Возврат ЗадолженностьКУплате <= 0;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидПоУмолчаниюОформлением(Форма, Элемент, ЭтоКнопкаПоУмолчанию)
	
	Элемент.Шрифт = Новый Шрифт(Элемент.Шрифт, , , ЭтоКнопкаПоУмолчанию);
	
	Если ЭтоКнопкаПоУмолчанию Тогда
		Элемент.ЦветФона = ЦветСтиля("ВыборСтандартногоПериодаФонКнопки");
	Иначе
		Элемент.ЦветФона = Новый Цвет;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЦветСтиля(ИмяЦветаСтиля)
	
#Если Клиент Тогда
	Возврат ОбщегоНазначенияКлиент.ЦветСтиля(ИмяЦветаСтиля);
#Иначе
	Возврат ЦветаСтиля[ИмяЦветаСтиля];
#КонецЕсли
	
КонецФункции

#КонецОбласти

#Область ЗаполнениеЗадолженности

&НаСервере
Процедура ЗаполнитьЗадолженность()
	
	ГраницаОтчетностиПрошлыхПериодов = ПомощникиПоУплатеНалоговИВзносов.ГраницаОтчетностиПрошлыхПериодов(Организация);
	
	// Расчеты получим за все периоды, включая год формы.
	ТаблицаРасчетов = УчетНДФЛПредпринимателя.РасчетыПоНалогуЗаПредыдущиеПериоды(Организация, КонецГода(Период) + 1);
	РасчетыПоНалогу.Загрузить(ТаблицаРасчетов);
	
	РазместитьТаблицуЗадолженностиНаФорме();
	
КонецПроцедуры

&НаСервере
Процедура РазместитьТаблицуЗадолженностиНаФорме()
	
	КоличествоПредопределенныхСтрок = КоличествоПредопределенныхСтрокПериодов();
	
	Для Каждого СтрокаРасчетов Из РасчетыПоНалогу Цикл
		
		ИндексПериода = РасчетыПоНалогу.Индекс(СтрокаРасчетов);
		
		// Добавим элементы новой строки для периода задолженности, если еще не отрисованы.
		Если ИндексПериода > (КоличествоПредопределенныхСтрок - 1) Тогда
			ДобавитьЭлементыСтрокиЗадолженности(ИндексПериода);
		КонецЕсли;
		
		ГруппаПериода = Элементы.ГруппаПериодыЗадолженности.ПодчиненныеЭлементы.Найти("ГруппаПериод" + ИндексПериода);
		ГруппаПериода.Видимость = Истина;
		
		// Представление периода
		Если Год(СтрокаРасчетов.НалоговыйПериод) = Год(ГраницаОтчетностиПрошлыхПериодов) Тогда
			НазваниеПериода = СтрШаблон(НСтр("ru = 'За периоды до %1 года'"), Формат(Год(СтрокаРасчетов.НалоговыйПериод) + 1, "ЧГ=0"));
		Иначе
			НазваниеПериода = СтрШаблон(НСтр("ru = 'За %1 год'"), Формат(Год(СтрокаРасчетов.НалоговыйПериод), "ЧГ=0"));
		КонецЕсли;
		Элементы["ПредставлениеПериода" + ИндексПериода].Заголовок = НазваниеПериода;
		
		// Начислено
		ДекорацияНачислено = Элементы["Начислено" + ИндексПериода];
		ДекорацияНачислено.Заголовок = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаРасчетов.Начислено, , "0,00");
		ДекорацияНачислено.Гиперссылка = Истина;
		
		// Уплачено
		ДекорацияУплачено = Элементы["Уплачено" + ИндексПериода];
		ДекорацияУплачено.Заголовок = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаРасчетов.Уплачено, , "0,00");
		ДекорацияУплачено.Гиперссылка = Истина;
		
		// Переплата
		ДекорацияПереплата = Элементы["Переплата" + ИндексПериода];
		ДекорацияПереплата.Заголовок = ОбщегоНазначенияБПВызовСервера.ФорматСумм(СтрокаРасчетов.Переплата);
		ДекорацияПереплата.Гиперссылка = Ложь;
		
		// Задолженность
		ФорматНулевойЗадолженности = ?(СтрокаРасчетов.Переплата = 0, "0,00", "");
		
		ДекорацияЗадолженность = Элементы["Задолженность" + ИндексПериода];
		ДекорацияЗадолженность.Заголовок = ОбщегоНазначенияБПВызовСервера.ФорматСумм(
			СтрокаРасчетов.Задолженность, ,
			ФорматНулевойЗадолженности);
		ДекорацияЗадолженность.Гиперссылка = Ложь;
		ДекорацияЗадолженность.ЦветТекста  = ?(СтрокаРасчетов.Задолженность > 0, ЦветаСтиля.ЦветОтрицательногоЧисла, Новый Цвет());
		
	КонецЦикла;
	
	Для ИндексГруппы = РасчетыПоНалогу.Количество() По Элементы.ГруппаПериодыЗадолженности.ПодчиненныеЭлементы.Количество() - 1 Цикл
		Элементы["ГруппаПериод" + ИндексГруппы].Видимость = Ложь;
	КонецЦикла;
	
	// Итоги
	
	ИтоговыйОстатокРасчетов = РасчетыПоНалогу.Итог("Переплата") - РасчетыПоНалогу.Итог("Задолженность");
	
	НДФЛДолг      = ?(ИтоговыйОстатокРасчетов < 0, - ИтоговыйОстатокРасчетов, 0);
	НДФЛПереплата = ?(ИтоговыйОстатокРасчетов > 0, ИтоговыйОстатокРасчетов, 0);
	
	Элементы.ПереплатаИтог.Заголовок     = ОбщегоНазначенияБПВызовСервера.ФорматСумм(НДФЛПереплата);
	Элементы.ЗадолженностьИтог.Заголовок = ОбщегоНазначенияБПВызовСервера.ФорматСумм(НДФЛДолг);
	
КонецПроцедуры

&НаСервере
Функция ДобавитьЭлементыСтрокиЗадолженности(ИндексПериода)
	
	ГруппаЭталон = Элементы.ГруппаПериод0;
	НоваяГруппа = Элементы.Добавить("ГруппаПериод" + ИндексПериода, Тип("ГруппаФормы"), Элементы.ГруппаПериодыЗадолженности);
	
	ЗаполнитьЗначенияСвойств(НоваяГруппа, ГруппаЭталон, , "Имя, ПодчиненныеЭлементы, ПутьКДаннымЗаголовка");
	
	Для Каждого ИсходныйЭлемент Из ГруппаЭталон.ПодчиненныеЭлементы Цикл
		
		ИмяНовогоЭлемента = СтрЗаменить(ИсходныйЭлемент.Имя, "0", Строка(ИндексПериода));
		НовыйЭлемент = Элементы.Добавить(ИмяНовогоЭлемента, ТипЗнч(ИсходныйЭлемент), НоваяГруппа);
		ЗаполнитьЗначенияСвойств(НовыйЭлемент, ИсходныйЭлемент, , "Имя");
		
		ДействиеЭлемента = ИсходныйЭлемент.ПолучитьДействие("Нажатие");
		Если ЗначениеЗаполнено(ДействиеЭлемента) Тогда
			НовыйЭлемент.УстановитьДействие("Нажатие", ДействиеЭлемента);
		КонецЕсли;
		
	КонецЦикла;
	
КонецФункции

&НаСервере
Функция КоличествоПредопределенныхСтрокПериодов()
	
	КоличествоСтрок = 0;
	
	Пока Истина Цикл
		Если Элементы.Найти("ГруппаПериод" + КоличествоСтрок) <> Неопределено Тогда
			КоличествоСтрок = КоличествоСтрок + 1;
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат КоличествоСтрок;
	
КонецФункции

#КонецОбласти

#Область ОтображениеДокументовУплаты

&НаСервере
Процедура ОбработкаЗаписиПлатежногоДокумента()
	
	ЗаполнитьЗадолженность();
	НайтиИОтобразитьСвязанныеПлатежи();
	УстановитьВидимостьКнопокОплаты();
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура НайтиИОтобразитьСвязанныеПлатежи()
	
	Если НДФЛДолг <= 0 Тогда
		Возврат;
	КонецЕсли;
	
	Платежи.Очистить();
	
	ЗаполнитьТаблицыПлатежей();
	ПомощникиПоУплатеНалоговИВзносов.ОтобразитьПлатежи(ЭтотОбъект, Платежи, "Платеж");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицыПлатежей()
	
	ТаблицаПлатежей = Обработки.ПомощникЗаполнения3НДФЛ.ДокументыУплаты(
		Организация, КонецГода(Период), Правило);
	
	Если ТаблицаПлатежей <> Неопределено Тогда
		Для Каждого СтрокаТаблицы Из ТаблицаПлатежей Цикл
			ЗаполнитьЗначенияСвойств(Платежи.Добавить(), СтрокаТаблицы);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область УдалениеДокументовОплаты

&НаКлиенте
Функция ОповещениеУдаленияПлатежногоДокумента()
	
	Возврат Новый ОписаниеОповещения("УдалитьДокументУплатыНаКлиентеЗавершение", ЭтотОбъект);
	
КонецФункции

&НаКлиенте
Процедура УдалитьДокументУплатыНаКлиентеЗавершение(ДокументУплатыДляУдаления, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ДокументУплатыДляУдаления) Тогда
		УдалитьДокументУплаты(ДокументУплатыДляУдаления);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьДокументУплаты(ДокументУплатыДляУдаления)
	
	ДокументУплатыОбъект = ДокументУплатыДляУдаления.ПолучитьОбъект();
	ДокументУплатыОбъект.УстановитьПометкуУдаления(Истина);
	
	ЗаполнитьЗадолженность();
	
	НайтиИОтобразитьСвязанныеПлатежи();
	
	УстановитьВидимостьКнопокОплаты();
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ВыполнениеКоманд

&НаКлиенте
Процедура Оплатить(СпособОплаты)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	РезультатОплаты = ОплатитьНаСервере(СпособОплаты);
	Если РезультатОплаты = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(РезультатОплаты) = Тип("Структура") Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", РезультатОплаты);
		ПараметрыФормы.Вставить("ПериодСобытия", КонецГода(Период));
		ПараметрыФормы.Вставить("Правило",       Правило);
		
		Если СпособОплаты = ПредопределенноеЗначение("Перечисление.СпособыУплатыНалогов.БанковскийПеревод") Тогда
			ИмяФормыУплатыНалога = "Документ.ПлатежноеПоручение.Форма.ФормаДокументаНалоговая";
		Иначе
			ИмяФормыУплатыНалога = "Документ.РасходныйКассовыйОрдер.ФормаОбъекта";
		КонецЕсли;
		ОткрытьФорму(ИмяФормыУплатыНалога, ПараметрыФормы, , УникальныйИдентификатор);
		
	ИначеЕсли РезультатОплаты.Количество() > 0 Тогда
		ТипСозданныхДокументов = ТипЗнч(РезультатОплаты[0]);
		ОповеститьОбИзменении(ТипСозданныхДокументов);
		ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.ЗадачиБухгалтера"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОплатитьНаСервере(СпособОплаты)
	
	СуммаПлатежа = СуммаКУплате(НДФЛДолг, Платежи);
	
	ПараметрыВыполнения = Обработки.ПомощникЗаполнения3НДФЛ.НовыйПараметрыФормированияДокументовОплаты();
	ПараметрыВыполнения.Период = Период;
	ПараметрыВыполнения.Организация = Организация;
	ПараметрыВыполнения.Правило = Правило;
	ПараметрыВыполнения.СпособОплаты = СпособОплаты;
	ПараметрыВыполнения.НалогКУплате = СуммаПлатежа;
	
	НалогИсчисленныйВсего = 0;
	Уплачено = 0;
	
	Для Каждого ТекущаяСтрока Из РасчетыПоНалогу Цикл
		Если ЗначениеЗаполнено(ТекущаяСтрока.Задолженность) Тогда
			НалогИсчисленныйВсего = НалогИсчисленныйВсего + ТекущаяСтрока.Начислено;
			Уплачено = Уплачено + ТекущаяСтрока.Уплачено;
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыВыполнения.НалогИсчисленныйВсего = НалогИсчисленныйВсего;
	ПараметрыВыполнения.АвансовыеПлатежи = Уплачено;
	
	СозданныеДокументы = Обработки.ПомощникЗаполнения3НДФЛ.СформироватьДокументыОплатыНалога(ПараметрыВыполнения);
	
	Если ТипЗнч(СозданныеДокументы) = Тип("Массив") Тогда
		НайтиИОтобразитьСвязанныеПлатежи();
	КонецЕсли;
	
	Возврат СозданныеДокументы;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция НалогКУплате(Форма)
	
	Результат = Новый Структура("Всего");
	Результат.Всего = СуммаКУплате(Форма.НДФЛДолг, Форма.Платежи);
	
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СуммаКУплате(Сумма, КоллекцияПлатежей)
	
	Возврат Макс(Сумма - СуммаПодготовленныхПлатежей(КоллекцияПлатежей), 0);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СуммаПодготовленныхПлатежей(КоллекцияПлатежей)
	
	Сумма = 0;
	
	СтрокиОтбора = КоллекцияПлатежей.НайтиСтроки(Новый Структура("Оплачено", Ложь));
	Для Каждого Платеж Из СтрокиОтбора Цикл
		Сумма = Сумма + Платеж.Сумма;
	КонецЦикла;
	
	Возврат Сумма;
	
КонецФункции

#КонецОбласти

#Область ПроверкаРеквизитовДляОтчетности

&НаСервереБезКонтекста
Функция ПроверитьРеквизитыОрганизации(Организация, Период)
	
	НезаполненныеРеквизиты = Неопределено;
	
	РеквизитыОрганизацииЗаполнены = ПроверкаРеквизитовОрганизации.РеквизитыДляОтчетностиЗаполнены(
		"РегламентированныйОтчет3НДФЛ",
		Организация,
		Период,
		НезаполненныеРеквизиты);
	
	Результат = Новый Структура;
	Результат.Вставить("РеквизитыЗаполнены", РеквизитыОрганизацииЗаполнены);
	Результат.Вставить("НезаполненныеРеквизиты", НезаполненныеРеквизиты);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

&НаСервере
Процедура ЗаполнитьПравило()
	
	Порядок = Обработки.ПомощникЗаполнения3НДФЛ.ПорядокПредоставленияОтчетаУплатыНалогаЗаПериод(Организация, Период);
	ПорядокУплаты = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Порядок, "Уплата");
	
	Если ПорядокУплаты <> Неопределено Тогда
		Правило = ПорядокУплаты.Правило;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРасшифровкуПлатежейВБюджет(ПериодРасчета, ВидОтчета)
	
	НачалоПериода = НачалоГода(ПериодРасчета);
	КонецПериода  = КонецГода(ПериодРасчета);
	
	ПользовательскиеНастройки  = Новый ПользовательскиеНастройкиКомпоновкиДанных;
	ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("Организация", Организация);
	ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("НачалоПериода", НачалоПериода);
	ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("КонецПериода", КонецПериода);
	
	ПользовательскиеОтборы = ПользовательскиеНастройки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
	
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("ВидОтчета",                  ВидОтчета);
	ПараметрыФормы.Вставить("ПользовательскиеНастройки",  ПользовательскиеНастройки);
	ПараметрыФормы.Вставить("ВидРасшифровки",             2);
	
	ОткрытьФорму("Отчет.РасшифровкаПлатежейВБюджет.Форма.ФормаОтчета",
		ПараметрыФормы,
		ЭтотОбъект,
		Новый УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоУплатаНДФЛ(Налог)
	
	Возврат Обработки.ПомощникЗаполнения3НДФЛ.ЭтоУплатаНДФЛ(Налог);
	
КонецФункции

&НаКлиенте
Процедура ВыгрузитьПлатежныеДокументыЗавершение(ПлатежныеПоручения, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(ПлатежныеПоручения) Тогда
		Возврат;
	КонецЕсли;
	
	ОбработатьВыгрузкуПлатежейНаСервере(ПлатежныеПоручения);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьВыгрузкуПлатежейНаСервере(ПлатежныеПоручения)
	
	Для Каждого ПлатежныйДокумент Из ПлатежныеПоручения Цикл
		РегистрыСведений.СостоянияБанковскихДокументов.УстановитьСостояниеДокумента(
			ПлатежныйДокумент, Перечисления.СостоянияБанковскихДокументов.Отправлено);
	КонецЦикла;
	
	ОбработкаЗаписиПлатежногоДокумента();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция НеИсполненныеПлатежи(Форма)
	
	ДокументыОплаты = Новый Массив;
	
	Для Каждого СтрокаОплаты Из Форма.Платежи Цикл
		Если ТипЗнч(СтрокаОплаты.Ссылка) = Тип("ДокументСсылка.ПлатежноеПоручение")
			И Не ПомощникиПоУплатеНалоговИВзносовКлиентСервер.СостояниеОплачено(СтрокаОплаты.Состояние)
			И Не ПомощникиПоУплатеНалоговИВзносовКлиентСервер.СостояниеОшибки(СтрокаОплаты.Состояние) Тогда
			ДокументыОплаты.Добавить(СтрокаОплаты.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДокументыОплаты;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция НеОтправленныеПлатежи(Форма)
	
	ДокументыОплаты = Новый Массив;
	
	Для Каждого СтрокаОплаты Из Форма.Платежи Цикл
		Если ТипЗнч(СтрокаОплаты.Ссылка) = Тип("ДокументСсылка.ПлатежноеПоручение")
			И Не ПомощникиПоУплатеНалоговИВзносовКлиентСервер.СостояниеУспешнойОтправки(СтрокаОплаты.Состояние)
			И Не ПомощникиПоУплатеНалоговИВзносовКлиентСервер.СостояниеОшибки(СтрокаОплаты.Состояние)
			И Не ПомощникиПоУплатеНалоговИВзносовКлиентСервер.СостояниеОплачено(СтрокаОплаты.Состояние) Тогда
			ДокументыОплаты.Добавить(СтрокаОплаты.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДокументыОплаты;
	
КонецФункции

&НаСервере
Функция ТребуетсяВыгрузитьДокументыОплаты()
	
	ДокументыОплатыВФайл = ПлатежныеДокументыДляВыгрузкиВФайл();
	
	Возврат ЗначениеЗаполнено(ДокументыОплатыВФайл);
	
КонецФункции

&НаСервере
Функция ТребуетсяОтправитьДокументыОплатыПоДиректБанку()
	
	ДокументыОплатыПоБанку = ПлатежныеДокументыДляОтправкиПоДиректБанку();
	
	Возврат ЗначениеЗаполнено(ДокументыОплатыПоБанку);
	
КонецФункции

&НаСервере
Функция ПлатежныеДокументыДляВыгрузкиВФайл()
	
	НеИсполненныеПлатежи = НеИсполненныеПлатежи(ЭтотОбъект);
	
	Возврат ПомощникиПоУплатеНалоговИВзносов.ПлатежныеДокументыДляВыгрузкиВФайл(
		Организация, НеИсполненныеПлатежи);
	
КонецФункции

&НаСервере
Функция ПлатежныеДокументыДляОтправкиПоДиректБанку()
	
	НеОтправленныеПлатежи = НеОтправленныеПлатежи(ЭтотОбъект);
	
	Возврат ПомощникиПоУплатеНалоговИВзносов.ПлатежныеДокументыПоДиректБанку(
		Организация, НеОтправленныеПлатежи);
	
КонецФункции

#КонецОбласти
