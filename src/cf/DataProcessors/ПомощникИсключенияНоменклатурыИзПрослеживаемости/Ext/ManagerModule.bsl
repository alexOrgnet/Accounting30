#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Возвращает признак, нужно ли показывать форму помощника при запуске.
//
// Возвращаемое значение: Булево
//     - Истина - показывать форму помощника при запуске
//     - Ложь   -  не показывать форму помощника при запуске
Функция ТребуетсяПоказатьФормуПомощника() Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ПравоДоступа("Использование", Метаданные.Обработки.ПомощникИсключенияНоменклатурыИзПрослеживаемости) Тогда
		Возврат Ложь;
	КонецЕсли;

	Если НЕ ПравоДоступа("Просмотр", Метаданные.Документы.ОперацияБух) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Один раз при начала работы обработка открывалась, пользователь уже знает где ее искать
	ОбработкаУжеВыводилась = ХранилищеОбщихНастроек.Загрузить("ПомощникИсключенияНоменклатурыИзПрослеживаемости", "ОбработкаУжеВыводилась");
	Если ОбработкаУжеВыводилась <> Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;

	// Если в справочнике нет страны Беларусь, точно не надо ничего исключать.
	СтранаПроисхождения = Справочники.СтраныМира.НайтиПоКоду("112");
	Если СтранаПроисхождения = Справочники.СтраныМира.ПустаяСсылка() Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	СписокКодовТНВЭД = ПолучитьСписокКодовТНВЭД();
	Если Не ЕстьИсключаемыеТНВЭД(СписокКодовТНВЭД) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	// С 06.03.2023 белорусские холодильники выбывают из прослеживаемости
	Структурапараметров.Вставить("Период",               '20230306');
	СтруктураПараметров.Вставить("КодТНВЭД",             СписокКодовТНВЭД.ВыгрузитьКолонку("Код"));
	СтруктураПараметров.Вставить("СтранаПроисхождения",  СтранаПроисхождения);
	
	Если ЕстьИсключаемаяНоменклатура(Структурапараметров) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если ЕстьИсключаемыеОС(Структурапараметров) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Функция ПолучитьСписокКодовТНВЭД() Экспорт
	
	Макет = Обработки.ПомощникИсключенияНоменклатурыИзПрослеживаемости.ПолучитьМакет("ИсключаемыеТНВЭДПоПостановлению345");
	ОбластьСтроки = Макет.ПолучитьОбласть("Строки");
	ОбластьМакетаСКодами = ОбластьСтроки.Область(1,1, ОбластьСтроки.ВысотаТаблицы, ОбластьСтроки.ШиринаТаблицы);
	Построитель = Новый ПостроительЗапроса;
	ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластьМакетаСКодами);
	Построитель.ИсточникДанных = ИсточникДанных;
	Построитель.Выполнить();
	ТаблицаКодовТНВЭД = Построитель.Результат.Выгрузить();
	
	Возврат ТаблицаКодовТНВЭД;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЕстьИсключаемыеТНВЭД(СписокКодовТНВЭД)
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КлассификаторТНВЭД.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
	|ГДЕ
	|	КлассификаторТНВЭД.Код В(&Код)";
	Запрос.УстановитьПараметр("Код", СписокКодовТНВЭД.ВыгрузитьКолонку("Код"));
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

Функция ЕстьИсключаемаяНоменклатура(Структурапараметров)
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КлассификаторТНВЭД.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ СписокКодовТНВЭД
	|ИЗ
	|	Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
	|ГДЕ
	|	КлассификаторТНВЭД.Код В(&КодТНВЭД)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка,
	|	Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения
	|ПОМЕСТИТЬ СписокНоменклатуры
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.ПометкаУдаления = ЛОЖЬ
	|	И Номенклатура.ПрослеживаемыйТовар = ИСТИНА
	|	И Номенклатура.КодТНВЭД В
	|			(ВЫБРАТЬ
	|				СписокКодовТНВЭД.Ссылка
	|			ИЗ
	|				СписокКодовТНВЭД)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НоменклатураИсторияПрослеживаемогоТовара.Ссылка,
	|	Номенклатура.СтранаПроисхождения
	|ИЗ
	|	Справочник.Номенклатура.ИсторияПрослеживаемогоТовара КАК НоменклатураИсторияПрослеживаемогоТовара
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО НоменклатураИсторияПрослеживаемогоТовара.Ссылка = Номенклатура.Ссылка
	|ГДЕ
	|	НоменклатураИсторияПрослеживаемогоТовара.ПрослеживаемыйТовар = ЛОЖЬ
	|	И НоменклатураИсторияПрослеживаемогоТовара.Период = &Период
	|	И НоменклатураИсторияПрослеживаемогоТовара.ПрослеживаемыйКомплект = ЛОЖЬ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СписокНоменклатуры.Ссылка КАК Номенклатура,
	|	СписокНоменклатуры.СтранаПроисхождения КАК СтранаПроисхождения
	|ИЗ
	|	СписокНоменклатуры КАК СписокНоменклатуры
	|ГДЕ
	|	(СписокНоменклатуры.СтранаПроисхождения = &СтранаПроисхождения
	|			ИЛИ СписокНоменклатуры.СтранаПроисхождения = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПрослеживаемыеТоварыОстатки.Номенклатура,
	|	ПрослеживаемыеТоварыОстатки.СтранаПроисхождения
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТовары.Остатки(
	|			,
	|			Номенклатура В
	|					(ВЫБРАТЬ
	|						СписокНоменклатуры.Ссылка
	|					ИЗ
	|						СписокНоменклатуры)
	|				И Комплектующие = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|				И СтранаПроисхождения = &СтранаПроисхождения) КАК ПрослеживаемыеТоварыОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПрослеживаемыеТоварыОстатки.Комплектующие,
	|	ПрослеживаемыеТоварыОстатки.СтранаПроисхождения
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТовары.Остатки(
	|			,
	|			Комплектующие В
	|					(ВЫБРАТЬ
	|						СписокНоменклатуры.Ссылка
	|					ИЗ
	|						СписокНоменклатуры)
	|				И СтранаПроисхождения = &СтранаПроисхождения) КАК ПрослеживаемыеТоварыОстатки";
	
	ОписаниеПараметровЗапроса = Запрос.НайтиПараметры();
	Для каждого Параметр Из ОписаниеПараметровЗапроса Цикл
		Запрос.УстановитьПараметр(Параметр.Имя, СтруктураПараметров[Параметр.Имя]);
	КонецЦикла;
	
	Возврат НЕ Запрос.Выполнить().Пустой();

КонецФункции

Функция ЕстьИсключаемыеОС(Структурапараметров)
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КлассификаторТНВЭД.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ СписокТНВЭД
	|ИЗ
	|	Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
	|ГДЕ
	|	КлассификаторТНВЭД.Код В(&КодТНВЭД)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновныеСредства.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ СписокОС
	|ИЗ
	|	Справочник.ОсновныеСредства КАК ОсновныеСредства
	|ГДЕ
	|	ОсновныеСредства.ПометкаУдаления = ЛОЖЬ
	|	И ОсновныеСредства.ПрослеживаемыйТовар = ИСТИНА
	|	И ОсновныеСредства.КодТНВЭД В
	|			(ВЫБРАТЬ
	|				СписокТНВЭД.Ссылка
	|			ИЗ
	|				СписокТНВЭД)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОсновныеСредстваИсторияПрослеживаемогоТовара.Ссылка
	|ИЗ
	|	Справочник.ОсновныеСредства.ИсторияПрослеживаемогоТовара КАК ОсновныеСредстваИсторияПрослеживаемогоТовара
	|ГДЕ
	|	ОсновныеСредстваИсторияПрослеживаемогоТовара.Период = &Период
	|	И ОсновныеСредстваИсторияПрослеживаемогоТовара.ПрослеживаемыйТовар = ЛОЖЬ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПрослеживаемыеОсновныеСредстваОстатки.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеОсновныеСредства.Остатки(
	|			,
	|			ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.Ссылка
	|					ИЗ
	|						СписокОС)
	|				И СтранаПроисхождения = &СтранаПроисхождения) КАК ПрослеживаемыеОсновныеСредстваОстатки";
	ОписаниеПараметровЗапроса = Запрос.НайтиПараметры();
	Для каждого Параметр Из ОписаниеПараметровЗапроса Цикл
		Запрос.УстановитьПараметр(Параметр.Имя, СтруктураПараметров[Параметр.Имя]);
	КонецЦикла;
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

#КонецОбласти

#КонецЕсли