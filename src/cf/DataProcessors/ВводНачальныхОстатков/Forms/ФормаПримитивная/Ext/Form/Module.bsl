
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПодготовкаНулевойОтчетности = Параметры.ПодготовкаНулевойОтчетности;
	
	Если ЗначениеЗаполнено(Параметры.Организация) Тогда
		Объект.Организация = Параметры.Организация;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		Объект.Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	КонецЕсли;
	
	Элементы.ГруппаШапка.Видимость = НЕ (ЗначениеЗаполнено(Объект.Организация) И Параметры.ПодготовкаНулевойОтчетности);
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаВводаОстатков) Тогда
		Объект.ДатаВводаОстатков = ПолучитьДатуНачалаУчета();
	КонецЕсли;
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Если Модифицированность И ЗначенияИзменились() Тогда
		ЗаписатьНаСервере();
		ЭтотОбъект.Закрыть(КодВозвратаДиалога.ОК);
	Иначе
		ЭтотОбъект.Закрыть(КодВозвратаДиалога.Отмена);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)

	Отказ = Ложь;
	ОрганизацияПриИзмененииСервер(Отказ);
	Если Отказ Тогда
		ОткрытьФорму("Обработка.ВводНачальныхОстатков.Форма",
			Новый Структура("Организация, ПодготовкаНулевойОтчетности", Объект.Организация, ПодготовкаНулевойОтчетности),
			ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.Независимый);
			Модифицированность = Ложь;
		ЭтотОбъект.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПодсказкаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВывестиВсеПоказатели = Истина;
	ОткрытьФорму("Обработка.ВводНачальныхОстатков.Форма.ФормаПростая",
		Новый Структура("Организация", Объект.Организация));
		
	ЭтотОбъект.Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеФункцииИПроцедуры

&НаСервере
Функция ПолучитьДатуНачалаУчета()
	
	Возврат Обработки.ВводНачальныхОстатков.ПолучитьДатуНачалаУчета(Объект.Организация);
	
КонецФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	Объект.ДатаВводаОстатков              = ПолучитьДатуНачалаУчета();
	Объект.ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	ОбновитьФормуНаСервере();
	ПолучитьОстатки();

КонецПроцедуры

&НаСервере
Процедура ПолучитьОстатки()

	МенеджерОбработки = Обработки.ВводНачальныхОстатков;
	
	Для Каждого РазделОстатков ИЗ Объект.РазделыВводаОстатков Цикл
		МенеджерОбработки.СобратьСтруктуруТаблиц(Объект[РазделОстатков.ИмяРаздела], РазделОстатков.ИмяРаздела, СтруктураТаблиц);
		МенеджерОбработки.ОбновитьОстатки(Объект[РазделОстатков.ИмяРаздела], РазделОстатков.ИмяРаздела, 
				Новый Структура("Организация,ДатаВводаОстатков,Нулевка",Объект.Организация,Объект.ДатаВводаОстатков, Истина),
				Объект.СуществующиеДокументы,
				Объект.Капитал_Вспомогательная);
		Если Объект[РазделОстатков.ИмяРаздела].Количество() = 0 Тогда
			Объект[РазделОстатков.ИмяРаздела].Добавить();
		КонецЕсли;			
	КонецЦикла;
	
	Для Каждого СтрокаСписка Из СтруктураТаблиц Цикл
		
		ИмяРаздела          = СтрокаСписка.Представление;
		ЭлементДанных       = Элементы.Найти(ИмяРаздела);
		МассивСтрокиДоступа = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ЭлементДанных.ПутьКДанным, ".");
		ЗначениеРаздела     = ЭтотОбъект[МассивСтрокиДоступа[0]][ИмяРаздела][0][МассивСтрокиДоступа[2]];
		ИсходныеДанные.Добавить(ЗначениеРаздела, МассивСтрокиДоступа[0] + "." +ИмяРаздела + "." + МассивСтрокиДоступа[2]);
		
	КонецЦикла;		

КонецПроцедуры

&НаКлиенте
Функция ЗначенияИзменились()
	
	Для Каждого СтрокаСписка Из ИсходныеДанные Цикл
		
		МассивСтрокиДоступа = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаСписка.Представление, ".");
		ЗначениеРаздела     = ЭтотОбъект[МассивСтрокиДоступа[0]][МассивСтрокиДоступа[1]][0][МассивСтрокиДоступа[2]];
		
		Если ЗначениеРаздела <> СтрокаСписка.Значение Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;		
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Процедура ОбновитьФормуНаСервере()
	
	Объект.ДатаВводаОстатков = ПолучитьДатуНачалаУчета();
	ПолучитьРазделыОстатков();
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииСервер(Отказ)

	Если НЕ Обработки.ВводНачальныхОстатков.МожноИспользоватьПримитивнуюФормуПомощника(Объект.Организация) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ОбновитьФормуНаСервере();
	Модифицированность = Ложь;

КонецПроцедуры

&НаСервере
Процедура ПолучитьРазделыОстатков()
	
	Объект.РазделыВводаОстатков.Очистить();
	
	ПараметрыПроверки = Новый Структура("Организация, ДатаВводаОстатков", 
		Объект.Организация, Объект.ДатаВводаОстатков);
	
	// Деньги - есть у всех
	НоваяСтрока = Объект.РазделыВводаОстатков.Добавить();
	НоваяСтрока.Раздел             = НСтр("ru='Деньги'");
	НоваяСтрока.ИмяРаздела         = "Деньги";
	
	// Запасы - только при включенной функциональности
	Если ПолучитьФункциональнуюОпцию("ВестиУчетРасчетовСКонтрагентами") Тогда
		НоваяСтрока = Объект.РазделыВводаОстатков.Добавить();
		НоваяСтрока.Раздел             = НСтр("ru='Запасы'");
		НоваяСтрока.ИмяРаздела         = "Запасы";
	КонецЕсли;
	
	// Покупатели - только при включенной функциональности
	Если ПолучитьФункциональнуюОпцию("ВестиУчетРасчетовСКонтрагентами") Тогда
		НоваяСтрока = Объект.РазделыВводаОстатков.Добавить();
		НоваяСтрока.Раздел     = НСтр("ru='Нам должны'");
		НоваяСтрока.ИмяРаздела = "Покупатели";
	КонецЕсли;
		
	// Поставщики - только при включенной функциональности
	Если ПолучитьФункциональнуюОпцию("ВестиУчетРасчетовСКонтрагентами") Тогда
		НоваяСтрока = Объект.РазделыВводаОстатков.Добавить();
		НоваяСтрока.Раздел     = НСтр("ru='Мы должны'");
		НоваяСтрока.ИмяРаздела = "Поставщики";
	КонецЕсли;
	
	НоваяСтрока = Объект.РазделыВводаОстатков.Добавить();
	НоваяСтрока.Раздел     = НСтр("ru='Уставный капитал'");
	НоваяСтрока.ИмяРаздела = "Капитал";
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере()
	
	МенеджерОбработки = Обработки.ВводНачальныхОстатков;
	
	Для Каждого РазделОстатков ИЗ Объект.РазделыВводаОстатков Цикл
		
		Если РазделОстатков.ИмяРаздела = "Капитал" Тогда
			ИмяТаблицы = "Капитал_Вспомогательная";
		Иначе
			ИмяТаблицы = РазделОстатков.ИмяРаздела;
		КонецЕсли;
		
		СинхронизироватьСостояниеДокументов(РазделОстатков.ИмяРаздела);
		
		СтруктураПараметровДокументов = Новый Структура("Организация, Дата, Нулевка", 
			Объект.Организация, Объект.ДатаВводаОстатков, Истина);
			
		Отбор = Новый Структура("НеЗаполненныеРеквизиты, ТабличнаяЧасть", Истина, РазделОстатков.ИмяРаздела);
		СчетаУчетаВДокументах.ЗаполнитьТаблицу(Обработки.ВводНачальныхОстатков, СтруктураПараметровДокументов, Объект[РазделОстатков.ИмяРаздела], Отбор);
			
		Если РазделОстатков.ИмяРаздела = "Запасы" Тогда
			СтруктураПараметровДокументов.Вставить("РазделУчета", Перечисления.РазделыУчетаДляВводаОстатков.Товары);
			ТаблицаДанных = ПодготовитьТабличнуюЧасть_Запасы(Объект[РазделОстатков.ИмяРаздела], СтруктураПараметровДокументов);	
			МенеджерОбработки.ЗаписатьНаСервереДокументы(СтруктураПараметровДокументов, ТаблицаДанных, "НоменклатураНаСкладе");
			
		ИначеЕсли РазделОстатков.ИмяРаздела = "Поставщики" Тогда
			СтруктураПараметровДокументов.Вставить("РазделУчета", Перечисления.РазделыУчетаДляВводаОстатков.РасчетыСПоставщикамиИПодрядчиками);
			ТаблицаДанных = ПодготовитьТабличнуюЧасть_Поставщики(Объект[РазделОстатков.ИмяРаздела], СтруктураПараметровДокументов);
			МенеджерОбработки.ЗаписатьНаСервереДокументы(СтруктураПараметровДокументов, ТаблицаДанных, "РасчетыСКонтрагентами");
			
		ИначеЕсли РазделОстатков.ИмяРаздела = "Покупатели" Тогда
			СтруктураПараметровДокументов.Вставить("РазделУчета", Перечисления.РазделыУчетаДляВводаОстатков.РасчетыСПокупателямиИЗаказчиками);
			ТаблицаДанных = ПодготовитьТабличнуюЧасть_Покупатели(Объект[РазделОстатков.ИмяРаздела], СтруктураПараметровДокументов);
			МенеджерОбработки.ЗаписатьНаСервереДокументы(СтруктураПараметровДокументов, ТаблицаДанных, "РасчетыСКонтрагентами");
			
		ИначеЕсли РазделОстатков.ИмяРаздела = "Деньги" Тогда
			СтруктураПараметровДокументов.Вставить("РазделУчета", Перечисления.РазделыУчетаДляВводаОстатков.ДенежныеСредства);
			ТаблицаДанных = ПодготовитьТабличнуюЧасть_Деньги(Объект[РазделОстатков.ИмяРаздела]);
			МенеджерОбработки.ЗаписатьНаСервереДокументы(СтруктураПараметровДокументов, ТаблицаДанных, "БухСправка");
			
		Иначе
			
			СинхронизироватьТаблицы_Капитал();
			СтруктураПараметровДокументов.Вставить("РазделУчета", Перечисления.РазделыУчетаДляВводаОстатков.Капитал);
			ТаблицаДанных = ПодготовитьТабличнуюЧасть_Капитал(Объект.Капитал_Вспомогательная);
			МенеджерОбработки.ЗаписатьНаСервереДокументы(СтруктураПараметровДокументов, ТаблицаДанных, "БухСправка");
			СтруктураПараметровДокументов.Вставить("РазделУчета", Перечисления.РазделыУчетаДляВводаОстатков.РасчетыСУчредителями);
			ТаблицаДанных = ПодготовитьТабличнуюЧасть_Учредители(Объект.Капитал_Вспомогательная);
			МенеджерОбработки.ЗаписатьНаСервереДокументы(СтруктураПараметровДокументов, ТаблицаДанных, "БухСправка");
			
		КонецЕсли;
			
	КонецЦикла;
	
	МенеджерОбработки.ОбновитьФинансовыйРезультат(СтруктураПараметровДокументов, Объект.ФинансовыйРезультат);
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПодготовитьТабличнуюЧасть_Деньги(Таблица)
	
	ТаблицаДанных = Таблица.Выгрузить();
	ТаблицаДанных.Очистить();
	
	Для Каждого СтрокаТаблицы ИЗ Таблица Цикл
		Если СтрокаТаблицы.Сумма <> 0
			ИЛИ СтрокаТаблицы.ВалютнаяСумма <> 0 Тогда
			НоваяСтрока = ТаблицаДанных.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаДанных.Колонки.БанковскийСчет.Имя = "Субконто1";
	
	Возврат ТаблицаДанных;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПодготовитьТабличнуюЧасть_Запасы(Таблица, СтруктураПараметровДокументов)
	
	ТаблицаСуществующихДанных = Таблица.Выгрузить();
	ТаблицаСуществующихДанных.Очистить();
	ТаблицаСуществующихДанных.Колонки.Добавить("РазделУчета");
	
	Для Каждого СтрокаТаблицы ИЗ Таблица Цикл
		НоваяСтрока = ТаблицаСуществующихДанных.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		НоваяСтрока.РазделУчета = Перечисления.РазделыУчетаДляВводаОстатков.Товары;
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.Партия) Тогда
			НоваяСтрока.Партия = Обработки.ВводНачальныхОстатков.ПолучитьДокумент(Справочники.Контрагенты.ПустаяСсылка(),Справочники.ДоговорыКонтрагентов.ПустаяСсылка(), СтруктураПараметровДокументов);
		КонецЕсли;
	КонецЦикла;
	
	СтруктураТаблиц = Новый Структура();
	Если ТаблицаСуществующихДанных.Количество()<> 0 Тогда
		СтруктураТаблиц.Вставить("ОсновнойРазделУчета", ТаблицаСуществующихДанных);
	КонецЕсли;
	
	Возврат ТаблицаСуществующихДанных;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПодготовитьТабличнуюЧасть_Поставщики(Таблица, СтруктураПараметровДокументов)
	
	ТаблицаДанных = Таблица.Выгрузить();
	ТаблицаДанных.Очистить();
	ТаблицаДанных.Колонки.Задолженность.Имя = "СуммаКт";
	ТаблицаДанных.Колонки.Аванс.Имя         = "Сумма";
	ТаблицаДанных.Колонки.Добавить("Аванс");
	ТаблицаДанных.Колонки.Добавить("СуммаНУ");
	
	Для Каждого СтрокаТаблицы ИЗ Таблица Цикл
		НоваяСтрока = ТаблицаДанных.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		НоваяСтрока.СуммаКт = СтрокаТаблицы.Задолженность;
		НоваяСтрока.Сумма   = СтрокаТаблицы.Аванс;
		НоваяСтрока.Аванс   = ЗначениеЗаполнено(СтрокаТаблицы.Аванс);
		НоваяСтрока.СуммаНУ = Макс(НоваяСтрока.Сумма, НоваяСтрока.СуммаКт);
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.Документ) Тогда
			НоваяСтрока.Документ = Обработки.ВводНачальныхОстатков.ПолучитьДокумент(НоваяСтрока.Контрагент ,НоваяСтрока.ДоговорКонтрагента, СтруктураПараметровДокументов);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТаблицаДанных;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПодготовитьТабличнуюЧасть_Покупатели(Таблица, СтруктураПараметровДокументов)
	
	ТаблицаДанных = Таблица.Выгрузить();
	ТаблицаДанных.Очистить();
	ТаблицаДанных.Колонки.Задолженность.Имя = "Сумма";
	ТаблицаДанных.Колонки.Аванс.Имя         = "СуммаКт";
	ТаблицаДанных.Колонки.Добавить("Аванс");
	ТаблицаДанных.Колонки.Добавить("СуммаНУ");
	
	ТаблицаДанных.Колонки.Добавить("ДоходЕНВД");      // вид деятельности 1
	ТаблицаДанных.Колонки.Добавить("ДоходПатент");    // вид деятельности 2
	ТаблицаДанных.Колонки.Добавить("ДоходКомитента"); // вид деятельности 3
	
	Для Каждого СтрокаТаблицы ИЗ Таблица Цикл
		НоваяСтрока = ТаблицаДанных.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		НоваяСтрока.Сумма   = СтрокаТаблицы.Задолженность;
		НоваяСтрока.СуммаКт = СтрокаТаблицы.Аванс;
		НоваяСтрока.Аванс   = ЗначениеЗаполнено(СтрокаТаблицы.Аванс);
		НоваяСтрока.СуммаНУ = Макс(НоваяСтрока.Сумма, НоваяСтрока.СуммаКт);
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.Документ) Тогда
			НоваяСтрока.Документ = Обработки.ВводНачальныхОстатков.ПолучитьДокумент(НоваяСтрока.Контрагент ,НоваяСтрока.ДоговорКонтрагента, СтруктураПараметровДокументов);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТаблицаДанных;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПодготовитьТабличнуюЧасть_Капитал(Таблица)
	
	ТаблицаДанных = Таблица.Выгрузить();
	ТаблицаДанных.Очистить();
	
	Для Каждого СтрокаТаблицы ИЗ Таблица Цикл
		Если СтрокаТаблицы.СуммаКт <> 0 Тогда
			НоваяСтрока = ТаблицаДанных.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаДанных.Колонки.Учредитель.Имя  = "Субконто1";
	
	Возврат ТаблицаДанных;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПодготовитьТабличнуюЧасть_Учредители(Таблица)
	
	ТаблицаДанных = Таблица.Выгрузить();
	ТаблицаДанных.Очистить();
	
	Для Каждого СтрокаТаблицы ИЗ Таблица Цикл
		Если СтрокаТаблицы.Сумма <> 0 Тогда
			НоваяСтрока = ТаблицаДанных.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаДанных.Колонки.Учредитель.Имя  = "Субконто1";
	
	Возврат ТаблицаДанных;
	
КонецФункции

&НаСервере
Процедура СинхронизироватьТаблицы_Капитал()
	
	Объект.Капитал[0].СуммаОплачено = Объект.Капитал[0].СуммаВклада;
	Если Объект.Капитал_Вспомогательная.Количество() = 0 Тогда
		НоваяСтрока = Объект.Капитал_Вспомогательная.Добавить();
	Иначе
		НоваяСтрока = Объект.Капитал_Вспомогательная[0];
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Объект.Капитал[0],,"Ссылка");
	НоваяСтрока.СуммаКт = Объект.Капитал[0].СуммаОплачено;
	
КонецПроцедуры

&НаСервере
Процедура СинхронизироватьСостояниеДокументов(ИмяРаздела)
	
	ТаблицаДанных = Объект[ИмяРаздела];
	
	Если ИмяРаздела = "Деньги" ИЛИ ИмяРаздела = "Запасы" Тогда
		СуммаОстатка = ТаблицаДанных.Итог("Сумма");
	ИначеЕсли ИмяРаздела = "Покупатели" ИЛИ ИмяРаздела = "Поставщики" Тогда
		СуммаОстатка = ТаблицаДанных.Итог("Задолженность");
	Иначе
		СуммаОстатка = ТаблицаДанных.Итог("СуммаВклада");
	КонецЕсли;
	
	Если СуммаОстатка = 0 Тогда
		Для Каждого СтрокаТаблицы ИЗ ТаблицаДанных Цикл
			Если ЗначениеЗаполнено(СтрокаТаблицы.Ссылка) Тогда
				ДокументОбъект = СтрокаТаблицы.Ссылка.ПолучитьОбъект();
				ДокументОбъект.УстановитьПометкуУдаления(Истина);
				ДокументОбъект.Записать();				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти