#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьВариантыИнтерфейса();
	
	ТолькоПросмотр = НЕ ПравоДоступа("Изменение", Метаданные.Константы.ИнтерфейсТакси)
		ИЛИ НЕ ПравоДоступа("Изменение", Метаданные.Константы.ИнтерфейсТаксиПростой);
		
	Элементы.ВариантИнтерфейса.ТолькоПросмотр = ТолькоПросмотр;
	Элементы.ИспользоватьТабличныеФормыБанковскихДокументов.ТолькоПросмотр = ТолькоПросмотр;
	
	ВестиУчетПоОрганизациям = ПолучитьФункциональнуюОпцию("ВестиУчетПоОрганизациям");
	СистемаНалогообложенияТребуетПолныйИнтерфейс = УчетнаяПолитика.ТребуетсяПолныйИнтерфейс();
	ИспользуетсяФункциональностьПолногоИнтерфейса = Обработки.ФункциональностьПрограммы.ТребуетсяПолныйИнтерфейс();
	
	БлокироватьПростойИнтерфейс = ВестиУчетПоОрганизациям;
	ВыводитьПредупреждениеПростойИнтерфейс = СистемаНалогообложенияТребуетПолныйИнтерфейс
		ИЛИ ИспользуетсяФункциональностьПолногоИнтерфейса;
	
	Элементы.ОграничениеПростогоИнтерфейсаРаздельныйУчетНДС.Видимость = СистемаНалогообложенияТребуетПолныйИнтерфейс;
	Элементы.ОграничениеПростогоИнтерфейсаФункциональность.Видимость = ИспользуетсяФункциональностьПолногоИнтерфейса;
	
	// Значения реквизитов формы
	Если Константы.ИнтерфейсТакси.Получить() Тогда
		ВариантИнтерфейса = "ИнтерфейсТакси";
	ИначеЕсли Константы.ИнтерфейсТаксиПростой.Получить() Тогда
		ВариантИнтерфейса = "ИнтерфейсТаксиПростой";
	ИначеЕсли Константы.ИнтерфейсВерсии77.Получить() Тогда
		ВариантИнтерфейса = "ИнтерфейсВерсии77";
	Иначе
		ВариантИнтерфейса = "";
	КонецЕсли;
	
	НедоступныеВариантыИнтерфейса = "";
	
	ВариантИнтерфейсаДоИзменения = ВариантИнтерфейса;
	Если ВариантИнтерфейса = "" Тогда
		ВариантИнтерфейса = "ИнтерфейсТаксиПростой";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)

	Если НавигационнаяСсылкаФорматированнойСтроки = "ФормаОплатыТарифа" Тогда
		СтандартнаяОбработка = Ложь;
		Если ЭтоАдресВременногоХранилища(АдресЗначенийТарифицируемыхОпций) Тогда
			УдалитьИзВременногоХранилища(АдресЗначенийТарифицируемыхОпций);
		КонецЕсли;
		АдресЗначенийТарифицируемыхОпций = ТарификацияБПКлиент.ОткрытьФормуОплатыСервиса(УникальныйИдентификатор);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ОформленыПодписки" И ТарификацияБПВызовСервера.ОтображатьБаннерОжиданияОплатыТарифа() Тогда
		Элементы.ГруппаОжиданиеОплатыТарифа.Видимость = Истина;
		ПодключитьОбработчикОжидания(
			"Подключаемый_ПроверитьОбновлениеТарифицируемыхУслуг", 
			ТарификацияБПКлиент.ИнтервалПервойПроверкиОплатыТарифа(),
			Истина);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантИнтерфейсаПриИзменении(Элемент)
	
	ИнтерфейсИзменен = ВариантИнтерфейсаДоИзменения <> ВариантИнтерфейса;
	ВыбранПростойИнтерфейс = ВариантИнтерфейса = "ИнтерфейсТаксиПростой";
	
	Если ВыбранПростойИнтерфейс Тогда
		ДоступноИзменениеИнтерфейсаБезПредупреждений = ИнтерфейсИзменен 
			И НЕ БлокироватьПростойИнтерфейс 
			И НЕ ВыводитьПредупреждениеПростойИнтерфейс;
	Иначе
		ДоступноИзменениеИнтерфейсаБезПредупреждений = ИнтерфейсИзменен;
	КонецЕсли;
	
	Элементы.БлокировкаПростойИнтерфейс.Видимость = ИнтерфейсИзменен
		И ВыбранПростойИнтерфейс
		И БлокироватьПростойИнтерфейс;
		
	Элементы.ГруппаПредупреждениеПростойИнтерфейс.Видимость = ИнтерфейсИзменен
		И ВыбранПростойИнтерфейс
		И ВыводитьПредупреждениеПростойИнтерфейс
		И НЕ БлокироватьПростойИнтерфейс;
		
	Элементы.ГруппаПерезапускКнопка.Видимость = ДоступноИзменениеИнтерфейсаБезПредупреждений;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьТабличныеФормыБанковскихДокументовПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ОграничениеПростогоИнтерфейсаРаздельныйУчетНДСОбработкаНавигационнойСсылки(
	Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	КлючЗаписи = ЗаписьНастройкиВедетсяРаздельныйУчетНДС();
	
	Если КлючЗаписи <> Неопределено Тогда
		ПараметрыОткрытия = Новый Структура("Ключ", КлючЗаписи);
		ОткрытьФорму("РегистрСведений.НастройкиУчетаНДС.ФормаЗаписи", ПараметрыОткрытия, ЭтаФорма, "");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Перезапустить(Команда)
	
	УстановитьИнтерфейсНаСервере(ВариантИнтерфейса);
	
	ЗавершитьРаботуСистемы(Ложь, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура УстановитьИнтерфейсНаСервере(ВариантИнтерфейса)

	ОбщегоНазначенияБП.УстановитьРежимКомандногоИнтерфейса(ВариантИнтерфейса);
	ХранилищеОбщихНастроек.Сохранить(ВРег("ДатаСменыИнтерфейса"),,ТекущаяДатаСеанса(),,);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, ОбновлятьИнтерфейс = Истина)
	
	Результат = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
КонецПроцедуры

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	Результат = Новый Структура;
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	
	СохранитьЗначениеРеквизита(РеквизитПутьКДанным, Результат);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура СохранитьЗначениеРеквизита(РеквизитПутьКДанным, Результат)
	
	// Сохранение значений реквизитов, не связанных с константами напрямую (в отношении один-к-одному).
	Если РеквизитПутьКДанным = "" Тогда
		Возврат;
	КонецЕсли;
	
	// Определение имени константы.
	КонстантаИмя = "";
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		КонстантаИмя = Сред(РеквизитПутьКДанным, 15);
	КонецЕсли;
	
	// Сохранения значения константы.
	Если КонстантаИмя <> "" Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			КонстантаМенеджер.Установить(КонстантаЗначение);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаписьНастройкиВедетсяРаздельныйУчетНДС()

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НастройкиУчетаНДС.Период КАК Период,
	|	НастройкиУчетаНДС.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.НастройкиУчетаНДС КАК НастройкиУчетаНДС
	|ГДЕ
	|	НастройкиУчетаНДС.СложныйУчетНДС
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Отбор = Новый Структура("Период, Организация", Выборка.Период, Выборка.Организация);
		Возврат РегистрыСведений.НастройкиУчетаНДС.СоздатьКлючЗаписи(Отбор);
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

&НаСервере
Процедура НастроитьВариантыИнтерфейса()

	Элементы.ВариантИнтерфейса.СписокВыбора.Очистить();
	
	Элементы.ВариантИнтерфейса.СписокВыбора.Добавить("ИнтерфейсТаксиПростой", НСтр("ru = 'Простой'"));
	
	Если ТарификацияБП.РазрешенПолныйИнтерфейс() Тогда
		Элементы.ВариантИнтерфейса.СписокВыбора.Добавить("ИнтерфейсТакси", НСтр("ru = 'Полный'"));
		Элементы.ГруппаНедоступныеВариантыИнтерфейса.Видимость = Ложь;
		Элементы.ГруппаБаннерОграничениеТарифа.Видимость = Ложь;
		Элементы.ГруппаЗаголовок.Видимость = Истина;
	Иначе
		Элементы.ГруппаНедоступныеВариантыИнтерфейса.Видимость = Истина;	
		Элементы.ГруппаНедоступныеВариантыИнтерфейса.РасширеннаяПодсказка.ЦветФона = ФункциональностьПрограммы.ЦветБаннераНедоступенТариф();
		Элементы.ГруппаЗаголовок.Видимость = Ложь;
		Элементы.ГруппаБаннерОграничениеТарифа.Видимость = Истина;
		Элементы.ГруппаБаннерОграничениеТарифа.ЦветФона = ФункциональностьПрограммы.ЦветБаннераНедоступенТариф();
	КонецЕсли;
	
	Если Не ОбщегоНазначенияБП.ЭтоБизнесСтарт() Тогда
		Элементы.ВариантИнтерфейса.СписокВыбора.Добавить("ИнтерфейсВерсии77", НСтр("ru = 'Аналогичный 1С:Бухгалтерии 7.7'"));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПроверитьОбновлениеТарифицируемыхУслуг()
	
	Если ТарификацияБПВызовСервера.ТарифицируемыеОпцииИзменены(АдресЗначенийТарифицируемыхОпций) Тогда
		Элементы.ГруппаОжиданиеОплатыТарифа.Видимость = Ложь;
		ОбновитьИнтерфейс();
	Иначе
		УвеличениеИнтервала = 30;
		ИнтервалПроверкиОплатыТарифа = 
			?(ЗначениеЗаполнено(ИнтервалПроверкиОплатыТарифа),
			ИнтервалПроверкиОплатыТарифа + УвеличениеИнтервала,
			60);
		ПодключитьОбработчикОжидания(
			"Подключаемый_ПроверитьОбновлениеТарифицируемыхУслуг", 
			ИнтервалПроверкиОплатыТарифа,
			Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
