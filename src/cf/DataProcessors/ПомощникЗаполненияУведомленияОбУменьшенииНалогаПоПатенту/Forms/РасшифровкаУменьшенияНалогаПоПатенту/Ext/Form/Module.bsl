
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ТипЗнч(Параметры.ДанныеПатента) <> Тип("Структура") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("Организация", Организация);
	
	ДанныеЗаполнения = Параметры.ДанныеПатента;
	
	Патент = ДанныеЗаполнения.Патент;
	ДокументПатент = ДанныеЗаполнения.ДокументПатент;
	
	Заголовок = СтрШаблон(НСтр("ru = 'Уменьшение налога по патенту %1 №%2'"),
		ДанныеЗаполнения.НаименованиеПатента, ДанныеЗаполнения.НомерПатента);
	
	НалогПоПатенту = ДанныеЗаполнения.НалогПоПатенту;
	УменьшеноРанее = ДанныеЗаполнения.УменьшеноРанее;
	УменьшениеНалога = ДанныеЗаполнения.Уменьшить;
	Остаток = НалогПоПатенту - УменьшениеНалога - УменьшеноРанее;
	
	ПрочитатьУведомления(ДанныеЗаполнения);
	
	СброситьРазмерыИПоложениеОкна();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_УведомлениеОСпецрежимахНалогообложения" Тогда
		Для Каждого СтрокаУведомления Из Уведомления Цикл
			Если СтрокаУведомления.Ссылка = Источник Тогда
				ОбновитьДанныеУведомления();
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура Подключаемый_УведомлениеУменьшениеСтраховыеВзносыОбработкаНавигационнойСсылки(Элемент, ТекстСсылки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыУведомлений = ПомощникиПоУплатеНалоговИВзносовКлиент.ПараметрыОбработкиСпискаДокументов(
		Уведомления, "УведомлениеУменьшениеСтраховыеВзносы", ОповещениеУдаленияУведомления());
	
	ПомощникиПоУплатеНалоговИВзносовКлиент.ОбработкаНавигационнойСсылкиДокумента(Элемент,
		ТекстСсылки, ПараметрыУведомлений);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИзмененияИЗакрытьФорму(Команда)
	
	УдаляемыеУведомления = Новый Массив;
	
	Для Каждого СтрокаКУдалению Из УведомленияКУдалению Цикл
		УдаляемыеУведомления.Добавить(СтрокаКУдалению.Ссылка);
	КонецЦикла;
	УдалитьУведомленияНаСервере(УдаляемыеУведомления);
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Организация", Организация);
	ПараметрыОповещения.Вставить("ВидУведомления", ПредопределенноеЗначение(
		"Перечисление.ВидыУведомленийОСпецрежимахНалогообложения.УменьшениеНалогаНаСтраховыеВзносы"));
	
	Для Каждого Уведомление Из УдаляемыеУведомления Цикл
		Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения", ПараметрыОповещения, Уведомление);
	КонецЦикла;
	
	Закрыть(УдаляемыеУведомления.Количество() > 0);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПрочитатьУведомления(ДанныеЗаполнения)
	
	ВыводитьПодсказку = Ложь;
	Для Каждого ДанныеУведомления Из ДанныеЗаполнения.Уведомления Цикл
		Строка = Уведомления.Добавить();
		Строка.Ссылка = ДанныеУведомления.Уведомление;
		Строка.Дата = ДанныеУведомления.Дата;
		Строка.Сумма = ДанныеУведомления.Сумма;
		СтатусУведомления = ИнтерфейсыВзаимодействияБРО.СостояниеДокумента(ДанныеУведомления.Уведомление);
		Строка.Сдано = СтатусУведомления.Сдано;
		Если Не Строка.Сдано Тогда
			УменьшеноРанее = УменьшеноРанее - Строка.Сумма;
			ВыводитьПодсказку = Истина;
		КонецЕсли;
		Строка.СтатусПредставление = СтатусУведомления.Представление;
		Строка.ПредставлениеДокумента = СтрШаблон(НСтр("ru = 'Уведомление от %1 на сумму %2'"),
			Формат(ДанныеУведомления.Дата, "ДЛФ=D"), ДанныеУведомления.Сумма);
	КонецЦикла;
	
	Элементы.НадписьПодсказкаДляНеСданыхУведомлений.Видимость = ВыводитьПодсказку;
	
	ПомощникиПоУплатеНалоговИВзносов.ОтобразитьДокументы(
			ЭтотОбъект, Уведомления, "УведомлениеУменьшениеСтраховыеВзносы");
	
КонецПроцедуры

&НаКлиенте
Функция ОповещениеУдаленияУведомления()
	
	Возврат Новый ОписаниеОповещения("УдалитьУведомлениеЗавершение", ЭтотОбъект);
	
КонецФункции

&НаКлиенте
Процедура УдалитьУведомлениеЗавершение(СсылкаНаУдаление, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(СсылкаНаУдаление) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Ссылка", СсылкаНаУдаление);
	НайденныеСтроки = Уведомления.НайтиСтроки(ПараметрыОтбора);
	Если НайденныеСтроки.Количество() > 0 Тогда
		Остаток = Остаток + НайденныеСтроки[0].Сумма;
		Уведомления.Удалить(НайденныеСтроки[0]);
	КонецЕсли;
	
	СтрокаКУдалению = УведомленияКУдалению.Добавить();
	СтрокаКУдалению.Ссылка = СсылкаНаУдаление;
	
	ВыводитьПодсказку = Ложь;
	Для Каждого Уведомление Из Уведомления Цикл
		Если Не Уведомление.Сдано Тогда
			ВыводитьПодсказку = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Элементы.НадписьПодсказкаДляНеСданыхУведомлений.Видимость = ВыводитьПодсказку;
	
	ОтобразитьУведомленияНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьУведомленияНаСервере()
	
	ПомощникиПоУплатеНалоговИВзносов.ОтобразитьДокументы(
			ЭтотОбъект, Уведомления, "УведомлениеУменьшениеСтраховыеВзносы");
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьУведомленияНаСервере(УдаляемыеУведомления)
	
	Для Каждого УведомлениеСсылка Из УдаляемыеУведомления Цикл
		УведомлениеОбъект = УведомлениеСсылка.ПолучитьОбъект();
		УведомлениеОбъект.УстановитьПометкуУдаления(Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СброситьРазмерыИПоложениеОкна()
	
	Если ПравоДоступа("СохранениеДанныхПользователя", Метаданные) Тогда
		ХранилищеСистемныхНастроек.Удалить(
			ЭтотОбъект.ИмяФормы,
			"",
			ПользователиИнформационнойБазы.ТекущийПользователь().Имя);
	КонецЕсли;
	
	КлючСохраненияПоложенияОкна = Строка(Новый УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеУведомления()
	
	Период = НачалоГода(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументПатент, "ДатаНачала"));
	СведенияОбУменьшенииНалога = РегистрыСведений.УменьшениеНалогаПоПатенту.СведенияУменьшениеНалогаЗаГод(
		Организация, Период, ДокументПатент);
	ДанныеЗаполнения = СведенияОбУменьшенииНалога[ДокументПатент];
	УменьшеноРанее = ДанныеЗаполнения.Сумма;
	Уведомления.Очистить();
	ПрочитатьУведомления(ДанныеЗаполнения);
	
КонецПроцедуры

#КонецОбласти
