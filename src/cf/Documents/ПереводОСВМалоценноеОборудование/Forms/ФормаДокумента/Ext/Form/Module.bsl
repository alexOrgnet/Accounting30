#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
	УстановитьУсловноеОформление();

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Обработка.ПодборОсновныхСредств.Форма.Форма" Тогда
		ОбработкаВыбораПодборНаСервере(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ОбщегоНазначенияБПКлиент.ОбработкаОповещенияФормыДокумента(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПодготовитьФормуНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.РежимЗаписи = ПредопределенноеЗначение("РежимЗаписиДокумента.Проведение") Тогда
		КлючеваяОперация = "ПроведениеПереводОСВМалоценноеОборудование";
		ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ПроведениеСервер.УстановитьПризнакПроверкиРеквизитов(Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Оповестить("ИзмененаИнформацияОС", Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Организация) И Объект.ОС.Количество() > 0 Тогда
		ЗаполнитьДанныеОС();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДатаДокумента) Тогда
		// Изменение времени не влияет на поведение документа.
		ТекущаяДатаДокумента = Объект.Дата;
		Возврат;
	КонецЕсли;

	ТребуетсяВызовСервера = Ложь;

	// Проверим наличие строк в табличной части.
	Если Объект.ОС.Количество() > 0 Тогда
		ТребуетсяВызовСервера = НЕ ЗначениеЗаполнено(МаксПериодПервоначальныхСведенийОС) 
			ИЛИ (МаксПериодПервоначальныхСведенийОС >= Объект.Дата);
	КонецЕсли;
		
	// Если определили, что изменение даты может повлиять на какие-либо параметры, 
	// то передаем обработку на сервер.
	Если ТребуетсяВызовСервера Тогда
		ДатаПриИзмененииНаСервере();
	КонецЕсли;
	
	ИзменениеПараметровПрослеживаемости();
	
	// Запомним новую дату документа.
	ТекущаяДатаДокумента = Объект.Дата;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОС

&НаКлиенте
Процедура ОСОсновноеСредствоПриИзменении(Элемент)
	
	СтрокаТЧ = Элементы.ОС.ТекущиеДанные;
	ОсновноеСредство = СтрокаТЧ.ОсновноеСредство;
	Если НЕ ЗначениеЗаполнено(ОсновноеСредство) Тогда
		СтрокаТЧ.ИнвентарныйНомер = "";
		СтрокаТЧ.Номенклатура = Неопределено;
		СтрокаТЧ.Сотрудник = Неопределено;
	Иначе
		Если ВедетсяУчетПрослеживаемыхТоваров Тогда
			СтрокаТЧ.ПрослеживаемоеОС = ПрослеживаемостьФормыВызовСервераПереопределяемый.ПолучитьПризнакПрослеживаемости(СтрокаТЧ.ОсновноеСредство, Объект.Дата);
		КонецЕсли;
		
		СтрокаТЧ.Номенклатура = ПодобратьНоменклатуруПоОССОдинаковымНаименованием(СтрокаТЧ.ОсновноеСредство);
		
		СтруктураСведений                  = ПолучитьДанныеОС(ОсновноеСредство, Объект.Организация, Объект.Дата);
		СтрокаТЧ.ИнвентарныйНомер          = СтруктураСведений.ИнвентарныйНомер;
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
			СтрокаТЧ.Номенклатура          = СтруктураСведений.Номенклатура;
		КонецЕсли;
		СтрокаТЧ.Сотрудник                 = СтруктураСведений.Сотрудник;
		МаксПериодПервоначальныхСведенийОС = Макс(МаксПериодПервоначальныхСведенийОС, СтруктураСведений.Период);
		
		Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) И ВедетсяУчетПрослеживаемыхТоваров Тогда
			ДанныеПрослеживаемостиНоменклатуры = ПолучитьДанныеПрослеживаемостиНоменклатуры(СтрокаТЧ.Номенклатура);
			СтрокаТЧ.ПрослеживаемыйТовар = ДанныеПрослеживаемостиНоменклатуры.ПрослеживаемыйТовар
				Или ДанныеПрослеживаемостиНоменклатуры.ПрослеживаемыйКомплект;
			СтрокаТЧ.ПрослеживаемыйКомплект = ДанныеПрослеживаемостиНоменклатуры.ПрослеживаемыйКомплект;
		Иначе
			СтрокаТЧ.ПрослеживаемыйТовар = Ложь;
			СтрокаТЧ.ПрослеживаемыйКомплект = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОСНоменклатураПриИзменении(Элемент)
	
	ЗаполнитьНоменклатуруПоОССОдинаковымНаименованием(
		Элементы.ОС.ТекущиеДанные.ОсновноеСредство,
		Элементы.ОС.ТекущиеДанные.Номенклатура);
		
		СтрокаТЧ = Элементы.ОС.ТекущиеДанные;
		Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) И ВедетсяУчетПрослеживаемыхТоваров Тогда
			ДанныеПрослеживаемостиНоменклатуры = ПолучитьДанныеПрослеживаемостиНоменклатуры(СтрокаТЧ.Номенклатура);
			СтрокаТЧ.ПрослеживаемыйТовар = ДанныеПрослеживаемостиНоменклатуры.ПрослеживаемыйТовар Или ДанныеПрослеживаемостиНоменклатуры.ПрослеживаемыйКомплект;
			СтрокаТЧ.ПрослеживаемыйКомплект = ДанныеПрослеживаемостиНоменклатуры.ПрослеживаемыйКомплект;
		Иначе
			СтрокаТЧ.ПрослеживаемыйТовар = Ложь;
			СтрокаТЧ.ПрослеживаемыйКомплект = Ложь;
		КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОСВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ОСПрослеживаемыйТовар" Тогда
		ТекущиеДанные = Элементы.ОС.ТекущиеДанные;
		Если ТекущиеДанные.ПрослеживаемыйТовар Тогда
			ПрослеживаемостьФормыКлиентБП.ПоказатьПредупреждениеПрослеживаемыйТовар();
		Конецесли;
	КонецЕсли;
	
	Если Поле.Имя = "ОСПрослеживаемоеОС" Тогда
		ТекущиеДанные = Элементы.ОС.ТекущиеДанные;
		Если ТекущиеДанные.ПрослеживаемыйТовар Тогда
			ПрослеживаемостьФормыКлиентБП.ПоказатьПредупреждениеПрослеживаемыйТовар();
		Конецесли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПоНаименованию(Команда)
	
	ОсновноеСредство = УправлениеВнеоборотнымиАктивамиКлиент.ПолучитьОСДляЗаполнениеПоНаименованию(
		ПараметрыЗаполненияПоНаименованию(ЭтаФорма));
	
	Если ЗначениеЗаполнено(ОсновноеСредство) Тогда
		ЗаполнитьПоНаименованиюСервер(ОсновноеСредство);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПоказатьПервоначальнуюСтоимость", Истина);
	ПараметрыФормы.Вставить("ДатаОстатков", Объект.Дата);
	ПараметрыФормы.Вставить("Организация",  Объект.Организация);
	
	Если Объект.ОС.Количество() > 0 Тогда
		ПараметрыФормы.Вставить("АдресОСВХранилище", ПоместитьОСВХранилище());
	КонецЕсли;
	
	ОткрытьФорму("Обработка.ПодборОсновныхСредств.Форма.Форма", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	ЭтоКонецГода = КонецДня(Форма.Объект.Дата) = КонецГода(Форма.Объект.Дата);
	Форма.Элементы.ГруппаМежотчетныйПериод.Видимость = ЭтоКонецГода И Не Форма.Объект.РучнаяКорректировка;
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	УстановитьСостояниеДокумента();
	
	ТекущаяДатаДокумента = Объект.Дата;
	
	ВедетсяУчетПрослеживаемыхТоваров = ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров")
		И ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(Объект.Дата);
		
	ЗаполнитьДанныеОС();
			
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеОС(ЗаполнятьДополнительныеДанные = Ложь)
	
	ТаблицаОС = Объект.ОС.Выгрузить(, "НомерСтроки, ОсновноеСредство, Номенклатура, Сотрудник, ПрослеживаемоеОС, ПрослеживаемыйТовар, ПрослеживаемыйКомплект");
	
	ТаблицаДанныхОС = ПолучитьДанныеПоТаблицеОС(ТаблицаОС, Объект.Организация, Объект.Дата, ЗаполнятьДополнительныеДанные);
	
	Объект.ОС.Загрузить(ТаблицаДанныхОС);
	
	// Запомним максимальную дату первоначальных сведений ОС
	ТаблицаДанныхОС.Сортировать("Период");
	Если ТаблицаДанныхОС.Количество() > 0 Тогда
		МаксПериодПервоначальныхСведенийОС = ТаблицаДанныхОС[ТаблицаДанныхОС.Количество() - 1].Период;
	Иначе
		МаксПериодПервоначальныхСведенийОС = '0001-01-01';
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеОС(ОсновноеСредство, Организация, Дата)
	
	Результат = Новый Структура;
	Результат.Вставить("ИнвентарныйНомер", "");
	Результат.Вставить("Номенклатура", Неопределено);
	Результат.Вставить("Сотрудник", Неопределено);
	Результат.Вставить("Период", '0001-01-01');
	
	ТаблицаОС = Новый ТаблицаЗначений;
	ТаблицаОС.Колонки.Добавить("ОсновноеСредство", Новый ОписаниеТипов("СправочникСсылка.ОсновныеСредства"));
	СтрокаТаблицы = ТаблицаОС.Добавить();
	СтрокаТаблицы.ОсновноеСредство = ОсновноеСредство;
	
	ДанныеОС = ПолучитьДанныеПоТаблицеОС(ТаблицаОС, Объект.Организация, Объект.Дата, Истина);
	Если ДанныеОС.Количество() > 0 Тогда
		СтруктураСведений                  = ДанныеОС[0];
		Результат.ИнвентарныйНомер          = СтруктураСведений.ИнвентарныйНомер;
		Результат.Номенклатура              = СтруктураСведений.Номенклатура;
		Результат.Сотрудник                 = СтруктураСведений.Сотрудник;
		МаксПериодПервоначальныхСведенийОС = Макс(МаксПериодПервоначальныхСведенийОС, СтруктураСведений.Период);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолучитьДанныеПоТаблицеОС(ТаблицаОС, Организация, Дата, ЗаполнятьДополнительныеДанные = Ложь) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОС", ТаблицаОС.ВыгрузитьКолонку("ОсновноеСредство"));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Дата", Дата);
		
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОсновныеСредства.Ссылка КАК ОсновноеСредство
	|ПОМЕСТИТЬ ОсновныеСредства
	|ИЗ
	|	Справочник.ОсновныеСредства КАК ОсновныеСредства
	|ГДЕ
	|	ОсновныеСредства.Ссылка В(&МассивОС)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.Регистратор КАК Регистратор,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.Период КАК Период
	|ПОМЕСТИТЬ ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&Дата,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&МассивОС)) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ КАК МОЛ
	|ПОМЕСТИТЬ МестонахождениеОСБухгалтерскийУчетСрезПоследних
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
	|			&Дата,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&МассивОС)) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновныеСредства.ОсновноеСредство КАК ОсновноеСредство,
	|	МИНИМУМ(Номенклатура.Ссылка) КАК Номенклатура
	|ПОМЕСТИТЬ ОдноименнаяНоменклатура
	|ИЗ
	|	ОсновныеСредства КАК ОсновныеСредства
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО ОсновныеСредства.ОсновноеСредство.Наименование = Номенклатура.Наименование
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеСредства.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновныеСредства.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.Период КАК Период,
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ КАК Сотрудник,
	|	ЕСТЬNULL(ПринятиеКУчетуОС.Номенклатура, ЕСТЬNULL(ОдноименнаяНоменклатура.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))) КАК Номенклатура
	|ИЗ
	|	ОсновныеСредства КАК ОсновныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	|		ПО ОсновныеСредства.ОсновноеСредство = ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОСБухгалтерскийУчетСрезПоследних КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
	|		ПО (ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство = МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС КАК ПринятиеКУчетуОС
	|		ПО (ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.Регистратор = ПринятиеКУчетуОС.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОдноименнаяНоменклатура КАК ОдноименнаяНоменклатура
	|		ПО ОсновныеСредства.ОсновноеСредство = ОдноименнаяНоменклатура.ОсновноеСредство";
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	ТаблицаРезультата = ТаблицаОС.Скопировать();
	Если ТаблицаРезультата.Колонки.Найти("ИнвентарныйНомер") = Неопределено Тогда 
		ТаблицаРезультата.Колонки.Добавить("ИнвентарныйНомер", ОбщегоНазначения.ОписаниеТипаСтрока(9));
	КонецЕсли;
	ТаблицаРезультата.Колонки.Добавить("Период", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ТаблицаРезультата.Индексы.Добавить("ОсновноеСредство");
	Если ЗаполнятьДополнительныеДанные Тогда
		Если ТаблицаРезультата.Колонки.Найти("Номенклатура") = Неопределено Тогда 
			ТаблицаРезультата.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		КонецЕсли;
		Если ТаблицаРезультата.Колонки.Найти("Сотрудник") = Неопределено Тогда 
			ТаблицаРезультата.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
		КонецЕсли;
	КонецЕсли;
	
	Для каждого СтрокаЗапроса Из ТаблицаЗапроса Цикл
		СтрокаРезультата = ТаблицаРезультата.Найти(СтрокаЗапроса.ОсновноеСредство, "ОсновноеСредство");
		Если СтрокаРезультата <> Неопределено Тогда
			СтрокаРезультата.ИнвентарныйНомер = СтрокаЗапроса.ИнвентарныйНомер;
			СтрокаРезультата.Период           = СтрокаЗапроса.Период;
			Если ЗаполнятьДополнительныеДанные Тогда
				СтрокаРезультата.Номенклатура = СтрокаЗапроса.Номенклатура;
				СтрокаРезультата.Сотрудник    = СтрокаЗапроса.Сотрудник;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТаблицаРезультата;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПараметрыЗаполненияПоНаименованию(Форма)
	
	Результат = Новый Структура;
	Результат.Вставить("Форма", Форма);
	Результат.Вставить("Объект", Форма.Объект);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПоНаименованиюСервер(Знач ОсновноеСредство)
	
	УчетОС.ДозаполнитьТабличнуюЧастьОсновнымиСредствамиПоНаименованию(
		ПараметрыЗаполненияПоНаименованию(ЭтаФорма), ОсновноеСредство);
	
КонецПроцедуры

&НаСервере
Функция ПоместитьОСВХранилище()
	
	ТаблицаОС = Объект.ОС.Выгрузить(, "НомерСтроки, ОсновноеСредство");
	Возврат ПоместитьВоВременноеХранилище(ТаблицаОС);
	
КонецФункции

&НаСервере
Процедура ОбработкаВыбораПодборНаСервере(Знач ВыбранноеЗначение)
	
	ДобавленныеСтроки = УчетОС.ОбработатьПодборОсновныхСредств(Объект.ОС, ВыбранноеЗначение);
	
	ЗаполнитьДанныеОС(Истина);
	
	РаботаСНоменклатуройБП.ОбновитьПризнакПрослеживаемости(Объект.ОС, ВедетсяУчетПрослеживаемыхТоваров, Объект.Дата);

КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()
	
	ЗаполнитьДанныеОС();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНоменклатуруПоОССОдинаковымНаименованием(ОсновноеСредство, Номенклатура)
	
	МассивОС = Объект.ОС.Выгрузить(, "ОсновноеСредство").ВыгрузитьКолонку("ОсновноеСредство");
	НаименованияОС = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивОС, "Наименование");
	НаименованиеТекущегоОС = НаименованияОС[ОсновноеСредство];
	
	Для каждого СтрокаТаблицы Из Объект.ОС Цикл
		Если НаименованияОС[СтрокаТаблицы.ОсновноеСредство] = НаименованиеТекущегоОС
			И НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
			СтрокаТаблицы.Номенклатура = Номенклатура;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПодобратьНоменклатуруПоОССОдинаковымНаименованием(ОсновноеСредство)
	
	ТаблицаОС = Объект.ОС.Выгрузить(, "ОсновноеСредство, Номенклатура");
	
	Отбор = Новый Структура("Номенклатура", Справочники.Номенклатура.ПустаяСсылка());
	СтрокиСПустойНоменклатурой = ТаблицаОС.НайтиСтроки(Отбор);
	Для каждого СтрокаСПустойНоменклатурой Из СтрокиСПустойНоменклатурой Цикл
		ТаблицаОС.Удалить(СтрокаСПустойНоменклатурой);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаОС", ТаблицаОС);
	Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаОС.ОсновноеСредство КАК Справочник.ОсновныеСредства) КАК ОсновноеСредство,
	|	ВЫРАЗИТЬ(ТаблицаОС.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОС.Номенклатура КАК Номенклатура
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.ОсновноеСредство.Наименование = ВЫРАЗИТЬ(&ОсновноеСредство КАК Справочник.ОсновныеСредства).Наименование";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		Возврат Выборка.Номенклатура;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Функция ПолучитьДанныеПрослеживаемостиНоменклатуры(Номенклатура)
	Возврат Справочники.Номенклатура.ПризнакПрослеживаемостиНаДату(Номенклатура, Объект.Дата);
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	// Признак прослеживаемости
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ОСПрослеживаемыйТовар");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ВедетсяУчетПрослеживаемыхТоваров", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ОСПрослеживаемоеОС");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ВедетсяУчетПрослеживаемыхТоваров", ВидСравненияКомпоновкиДанных.Равно, Ложь);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// Номенклатура
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ОСНоменклатура");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.ОС.Номенклатура", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НедоступныеДанныеЦвет);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru='<Автоматически создать при проведении>'"));

КонецПроцедуры

&НаСервере
Процедура ИзменениеПараметровПрослеживаемости()
	
	ВедетсяУчетПрослеживаемыхТоваров = ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров")
		И ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(Объект.Дата);
		
	РаботаСНоменклатуройБП.ОбновитьПризнакПрослеживаемости(Объект.ОС, ВедетсяУчетПрослеживаемыхТоваров, Объект.Дата);

КонецПроцедуры

#КонецОбласти