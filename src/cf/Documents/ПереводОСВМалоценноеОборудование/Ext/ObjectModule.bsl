#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено
			И ТипДанныхЗаполнения <> Тип("Структура")
			И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	КонецЕсли;
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

	Если НЕ ЗначениеЗаполнено(СобытиеОС) Тогда
		СобытиеОС = УчетОС.ПолучитьСобытиеПоОСИзСправочника(Перечисления.ВидыСобытийОС.ПереводВМалоценноеОборудование);
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		ВедетсяУчетПрослеживаемыхТоваров = ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров")
			И ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(Дата);
		
		Если ВедетсяУчетПрослеживаемыхТоваров Тогда
			
			ПрослеживаемыеОС = ОС.НайтиСтроки(Новый Структура("ПрослеживаемоеОС", Истина));
			ЕстьПрослеживаемоеОС = ПрослеживаемыеОС.Количество() <> 0;
			
			ПрослеживаемыеМЦ = ОС.НайтиСтроки(Новый Структура("ПрослеживаемыйТовар", Истина));
			ЕстьПрослеживаемыеМЦ = ПрослеживаемыеМЦ.Количество() <> 0;
			
			// Если нет прослеживаемых ОС, но указано прослеживаемое малоценное оборудование
			// Это ошибка, из непрослеживаемого ОС прослеживаемое МЦ получиться не может
			Если Не ЕстьПрослеживаемоеОС И ЕстьПрослеживаемыеМЦ Тогда
				ИмяСписка = НСтр("ru = 'ОС'");
				Для Каждого СтрокаМЦ Из ПрослеживаемыеМЦ Цикл
					
					ТекстСообщения = 
						НСтр("ru = 'По не прослеживаемому основному средству не может быть указано прослеживаемое малоценное оборудование'");
					
					Поле = "" + ИмяСписка + "["+ Формат(СтрокаМЦ.НомерСтроки - 1,"ЧГ=") + "].Номенклатура";
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
				КонецЦикла;
				Возврат;
			КонецЕсли;
			
			Если ЕстьПрослеживаемоеОС Тогда 
				ТаблицаОстатковПоОС = ПолучитьОстаткиПоОС();
				СоздатьНезаполненнуюНоменклатуру(ТаблицаОстатковПоОС);
				ПроверитьКорректностьЗаполненияПризнаковПрослеживаемости(ТаблицаОстатковПоОС, Отказ);
			Иначе
				СоздатьНезаполненнуюНоменклатуру(Неопределено);
			КонецЕсли;
		Иначе
			СоздатьНезаполненнуюНоменклатуру(Неопределено);
		КонецЕсли;
	КонецЕсли;
	
	МежотчетныйПериод = КонецДня(Дата) = КонецГода(Дата);
	Если МежотчетныйПериод Тогда
		Дата = КонецДня(Дата);
	Конецесли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоКонецГода = КонецДня(Дата) = КонецГода(Дата);
	
	// Документы, датированные 31.12 не сбивают последовательность, а делают неактуальной рег.операцию
	Если ЭтоКонецГода
		И (Проведен Или ДополнительныеСвойства.РежимЗаписи <> РежимЗаписиДокумента.Запись) Тогда
		
		УстаревшаяРегламентнаяОперация = Перечисления.ВидыРегламентныхОпераций.ПереводОСВМалоценноеОборудование;
		РаботаСПоследовательностями.ЗарегистрироватьУстареваниеОперации(ЭтотОбъект, УстаревшаяРегламентнаяОперация);
		
		ДополнительныеСвойства.Вставить("НеИзменятьРегистрациюВПоследовательности", Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ЭтоКонецГода = КонецДня(Дата) = КонецГода(Дата);
	ОтражатьВыбытиеОС = НЕ ЭтоКонецГода;
	
	Если НЕ ОтражатьВыбытиеОС Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПроведения = Документы.ПереводОСВМалоценноеОборудование.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ
	УчетОС.ПроверитьСоответствиеОСОрганизации(ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.ПроверкиПоОС, Отказ);

	УчетОС.ПроверитьСоответствиеМестонахожденияОС(ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.ПроверкиПоОС, Отказ);

	УчетОС.ПроверитьЗаполнениеСчетаУчетаОС(ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.ПроверкиПоОС, Отказ);

	УчетОС.ПроверитьВозможностьИзмененияСостоянияОС(ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.СостоянияОС, Отказ);

	УчетДоходовИРасходовПредпринимателя.ПроверитьВозможностьПереводаВМалоценноеОборудование(ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.ВыбытиеОС, Отказ);

	УчетУСН.ПроверитьВозможностьПереводаВМалоценноеОборудование(ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.ВыбытиеОС, Отказ);

	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	ПараметрыВыбытия = УчетОС.ПодготовитьТаблицыСведенийПоВыбытиюОС(ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.ВыбытиеОС, Отказ);

	УчетОС.ПроверитьВозможностьПереводаВМалоценноеОборудование(ПараметрыПроведения.ОсновныеСредства,
		ПараметрыВыбытия.НачислениеАмортизации.ТаблицаЗатрат, ПараметрыПроведения.ВыбытиеОС, Отказ);

	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаОСДляСостоянияОС = УчетОС.ПодготовитьТаблицуОСДляСнятияСУчетаПриСписании(ПараметрыПроведения.ВыбытиеОС,
		ПараметрыВыбытия, Отказ);
	
	ТаблицаСтоимости = УчетОС.ПодготовитьТаблицуОстаточнойСтоимости(
		ПараметрыПроведения.СписаниеОстаточнойСтоимостиТаблица,
		ПараметрыПроведения.СписаниеОстаточнойСтоимости, ПараметрыВыбытия, Отказ);
	
	ТаблицыПереводВМалоценноеОборудование = УчетОС.ПодготовитьТаблицыПереводВМалоценноеОборудование(
		ПараметрыПроведения.ТаблицаМалоценноеОборудование,
		ПараметрыПроведения.РеквизитыМалоценноеОборудование, Отказ);
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
	
	// Алгоритмы формирования проводок этого документа рассчитывают суммы проводок налогового учета
	Движения.Хозрасчетный.ДополнительныеСвойства.Вставить("СуммыНалоговогоУчетаЗаполнены", Истина);
	
	УчетОС.СформироватьДвиженияВыбытиеОС(ПараметрыПроведения.ВыбытиеОС, ПараметрыВыбытия, Движения, Отказ);
	
	УчетОС.СформироватьДвиженияИзменениеСостоянияОС(ТаблицаОСДляСостоянияОС,
		ПараметрыПроведения.СостоянияОС, Движения, Отказ);
	
	УчетОС.СформироватьДвиженияСписаниеОстаточнойСтоимостиОС(ТаблицаСтоимости,
		ПараметрыПроведения.СписаниеОстаточнойСтоимости, Движения, Отказ);
	
	УчетМатериаловВЭксплуатации.СформироватьДвиженияПередачаМатериаловСотруднику(
		ТаблицыПереводВМалоценноеОборудование.ТаблицаМатериалы,
		ТаблицыПереводВМалоценноеОборудование.ТаблицаОценкаМатериалов,
		ПараметрыПроведения.РеквизитыМалоценноеОборудование,
		Движения, Отказ);
		
	// Учет в прослеживаемости
	ПрослеживаемостьБП.СформироватьДвиженияСписанияОС(
		ПараметрыПроведения.ПрослеживаемыеОС,
		Неопределено,
		ПараметрыПроведения.РеквизитыМалоценноеОборудование,
		Движения);
		
	ПрослеживаемостьБП.СформироватьДвиженияПоступлениеТоваров(
		ПараметрыПроведения.ПрослеживаемыеТовары,
		Неопределено,
		Неопределено,
		ПараметрыПроведения.РеквизитыМалоценноеОборудование,
		Движения);

	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	УправлениеВнеоборотнымиАктивами.ПроверитьОтсутствиеДублейВТабличнойЧасти(ЭтотОбъект, "ОС", Новый Структура("ОсновноеСредство"), Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();
	РаботаСПоследовательностями.ОтменитьРегистрациюВПоследовательности(ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();
	
	ВедетсяУчетПрослеживаемыхТоваров = ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров")
		И ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(Дата);
		
	РаботаСНоменклатуройБП.ОбновитьПризнакПрослеживаемости(ОС, ВедетсяУчетПрослеживаемыхТоваров, Дата);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоДокументуОснованию(Основание)

	// Заполним реквизиты из стандартного набора по документу основанию.
	ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);

	Если ТипЗнч(Основание) = Тип("СправочникСсылка.ОсновныеСредства") Тогда

		Если Основание.ЭтоГруппа Тогда

			ТекстСообщения = НСтр("ru = 'Ввод перевода ОС в малоценное оборудование на основании группы ОС невозможен!
				|Выберите ОС. Для раскрытия группы используйте клавиши Ctrl и стрелку вниз'");
			ВызватьИсключение(ТекстСообщения);

		КонецЕсли;

		СтрокаТабличнойЧасти = ОС.Добавить();
		СтрокаТабличнойЧасти.ОсновноеСредство = Основание;
		
		ВедетсяУчетПрослеживаемыхТоваров = ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров")
			И ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя()));

			Если ВедетсяУчетПрослеживаемыхТоваров Тогда
				ДатаСведений = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
				СтрокаТабличнойЧасти.ПрослеживаемоеОС = Справочники.ОсновныеСредства.ПризнакПрослеживаемостиНаДату(
					Основание, ДатаСведений );
			КонецЕсли;

		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	&ОсновноеСредство КАК ОсновноеСредство,
		|	ПервоначальныеСведенияОС.Организация КАК Организация
		|ПОМЕСТИТЬ ПервоначальныеСведенияОС
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&Дата, ОсновноеСредство = &ОсновноеСредство) КАК ПервоначальныеСведенияОС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	&ОсновноеСредство КАК ОсновноеСредство,
		|	МестонахождениеОС.Организация КАК Организация,
		|	МестонахождениеОС.Местонахождение КАК Местонахождение,
		|	МестонахождениеОС.МОЛ КАК МОЛ
		|ПОМЕСТИТЬ МестонахождениеОС
		|ИЗ
		|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&Дата, ОсновноеСредство = &ОсновноеСредство) КАК МестонахождениеОС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ОсновныеСредства.Ссылка КАК ОсновноеСредство
		|ПОМЕСТИТЬ ОсновныеСредства
		|ИЗ
		|	Справочник.ОсновныеСредства КАК ОсновныеСредства
		|ГДЕ
		|	ОсновныеСредства.Ссылка = &ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	Номенклатура.Ссылка КАК Номенклатура
		|ПОМЕСТИТЬ ОдноименнаяНоменклатура
		|ИЗ
		|	ОсновныеСредства КАК ОсновныеСредства
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|		ПО ОсновныеСредства.ОсновноеСредство.Наименование = Номенклатура.Наименование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ПервоначальныеСведенияОС.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
		|	ЕСТЬNULL(МестонахождениеОС.Местонахождение, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК Местонахождение,
		|	ЕСТЬNULL(МестонахождениеОС.МОЛ, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК МОЛ,
		|	ЕСТЬNULL(ОдноименнаяНоменклатура.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура
		|ИЗ
		|	ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
		|		ПО ПервоначальныеСведенияОС.Организация = МестонахождениеОС.Организация
		|			И ПервоначальныеСведенияОС.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство,
		|	ОдноименнаяНоменклатура КАК ОдноименнаяНоменклатура";
		Запрос.УстановитьПараметр("Дата", НачалоДня(ТекущаяДатаСеанса()));
		Запрос.УстановитьПараметр("ОсновноеСредство", Основание);
		РезультатЗапроса = Запрос.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			Организация = Выборка.Организация;
			ПодразделениеОрганизации = Выборка.Местонахождение;
			СтрокаТабличнойЧасти.Сотрудник = Выборка.МОЛ;
			СтрокаТабличнойЧасти.Номенклатура = Выборка.Номенклатура;
			Если ВедетсяУчетПрослеживаемыхТоваров Тогда
				РеквизитыПрослеживаемости = Справочники.Номенклатура.ПризнакПрослеживаемостиНаДату(Выборка.Номенклатура, НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя()));
				СтрокаТабличнойЧасти.ПрослеживаемыйКомплект = РеквизитыПрослеживаемости.ПрослеживаемыйКомплект;
				СтрокаТабличнойЧасти.ПрослеживаемыйТовар = РеквизитыПрослеживаемости.ПрослеживаемыйКомплект Или РеквизитыПрослеживаемости.ПрослеживаемыйТовар;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура СоздатьНезаполненнуюНоменклатуру(ТаблицаОстатковПоОС)
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ВидНоменклатуры", Справочники.ВидыНоменклатуры.НайтиСоздатьЭлементыМалоценка());
	
	НоменклатураПоНаименованию = Новый Соответствие;
	
	Для каждого СтрокаТаблицы Из ОС Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
			НаименованиеОС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТаблицы.ОсновноеСредство, "Наименование");
			Номенклатура = НоменклатураПоНаименованию.Получить(НаименованиеОС);
			
			Если Номенклатура = Неопределено Тогда
				
				НоменклатураОбъект = Справочники.Номенклатура.СоздатьЭлемент();
				НоменклатураОбъект.Заполнить(ДанныеЗаполнения);
				НоменклатураОбъект.Наименование = НаименованиеОС;
				НоменклатураОбъект.НаименованиеПолное = НаименованиеОС;
				Если СтрокаТаблицы.ПрослеживаемоеОС Тогда
					Если ТаблицаОстатковПоОС <> Неопределено Тогда
						ОстаткиПоОС =
							ТаблицаОстатковПоОС.НайтиСтроки(Новый Структура("ОсновноеСредство", СтрокаТаблицы.ОсновноеСредство));
						Если ОстаткиПоОС.Количество() = 0 Тогда
							ТНВЭДПоОС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТаблицы.ОсновноеСредство, "КодТНВЭД");
							НоменклатураОбъект.ПрослеживаемыйТовар = Истина;
							НоменклатураОбъект.КодТНВЭД = ТНВЭДПоОС;
							
						ИначеЕсли ОстаткиПоОС.Количество() > 1 
							Или ОстаткиПоОС[0].Комплектующие <> Справочники.Номенклатура.ПустаяСсылка() Тогда
							
							// Это составное ОС 
							НоменклатураОбъект.ПрослеживаемыйКомплект = Истина;
						Иначе
							
							ТНВЭДПоОС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТаблицы.ОсновноеСредство, "КодТНВЭД");
							НоменклатураОбъект.ПрослеживаемыйТовар = Истина;
							НоменклатураОбъект.КодТНВЭД = ТНВЭДПоОС;
						КонецЕсли;
					Иначе
						ТНВЭДПоОС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТаблицы.ОсновноеСредство, "КодТНВЭД");
						НоменклатураОбъект.ПрослеживаемыйТовар = Истина;
						НоменклатураОбъект.КодТНВЭД = ТНВЭДПоОС;
					КонецЕсли;
				КонецЕсли;
				
				НоменклатураОбъект.Записать();
				Номенклатура = НоменклатураОбъект.Ссылка;
				НоменклатураПоНаименованию.Вставить(НаименованиеОС, Номенклатура);
			КонецЕсли;
			
			СтрокаТаблицы.Номенклатура = Номенклатура;
			Если СтрокаТаблицы.ПрослеживаемоеОС Тогда
				СтрокаТаблицы.ПрослеживаемыйТовар    = Номенклатура.ПрослеживаемыйКомплект Или Номенклатура.ПрослеживаемыйТовар;
				СтрокаТаблицы.ПрослеживаемыйКомплект = Номенклатура.ПрослеживаемыйКомплект;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКорректностьЗаполненияПризнаковПрослеживаемости(ТаблицаОстатковПоОС, Отказ)
	
	Для Каждого Строка Из ОС Цикл
		ИмяСписка = НСтр("ru = 'ОС'");
		Если Строка.ПрослеживаемоеОС = Ложь И Строка.ПрослеживаемыйТовар = Ложь Тогда
			Продолжить;
		КонецЕсли;
		
		Если Строка.ПрослеживаемоеОС = Ложь И Строка.ПрослеживаемыйТовар = Истина Тогда
			
			ТекстСообщения =
				НСтр("ru = 'По непрослеживаемому основному средству не может быть указано прослеживаемое малоценное оборудование'");
			
			Поле = "" + ИмяСписка + "["+ Формат(Строка.НомерСтроки - 1,"ЧГ=") + "].Номенклатура";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;
		
		Если Строка.ПрослеживаемоеОС = Истина И ЗначениеЗаполнено(Строка.Номенклатура) Тогда
			ОстаткиПоОС = ТаблицаОстатковПоОС.НайтиСтроки(Новый Структура("ОсновноеСредство", Строка.ОсновноеСредство));
			Если ОстаткиПоОС <> Неопределено И ОстаткиПоОС.Количество() > 0 Тогда
				Если ОстаткиПоОС.Количество() > 1 Или ОстаткиПоОС[0].Комплектующие <> Справочники.Номенклатура.ПустаяСсылка() Тогда
					// Это составное ОС 
					Если Строка.ПрослеживаемыйКомплект = Ложь Тогда
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='Для малоценного оборудования %1 в карточке номенклатуры должен быть выбран вариант маркировки и контроля ""Прослеживаемый товар(ы) в составе комплекта""'"),
						Строка.Номенклатура);
						Поле = "" + ИмяСписка + "["+ Формат(Строка.НомерСтроки-1,"ЧГ=") + "].Номенклатура";
						
						ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, Поле, "Объект", Отказ);
					КонецЕсли;
				Иначе
					Если Строка.ПрослеживаемыйТовар = Ложь Или Строка.ПрослеживаемыйКомплект Тогда
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='Для малоценного оборудования %1 в карточке номенклатуры должен быть выбран вариант маркировки и контроля ""Прослеживаемый товар""'"),
						Строка.Номенклатура);
						Поле = "" + ИмяСписка + "["+ Формат(Строка.НомерСтроки-1,"ЧГ=") + "].Номенклатура";
						
						ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, Поле, "Объект", Отказ);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Функция ПолучитьОстаткиПоОС()
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПереводОСВМалоценноеОборудованиеОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ДанныеПоОС
	|ИЗ
	|	Документ.ПереводОСВМалоценноеОборудование.ОС КАК ПереводОСВМалоценноеОборудованиеОС
	|ГДЕ
	|	ПереводОСВМалоценноеОборудованиеОС.Ссылка = &Ссылка
	|	И ПереводОСВМалоценноеОборудованиеОС.ПрослеживаемоеОС = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрослеживаемыеОсновныеСредстваОстатки.Организация КАК Организация,
	|	ПрослеживаемыеОсновныеСредстваОстатки.РНПТ КАК РНПТ,
	|	ПрослеживаемыеОсновныеСредстваОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПрослеживаемыеОсновныеСредстваОстатки.ОсновноеСредство КАК ОсновноеСредство,
	|	ПрослеживаемыеОсновныеСредстваОстатки.Комплектующие КАК Комплектующие,
	|	СУММА(ПрослеживаемыеОсновныеСредстваОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	СУММА(ПрослеживаемыеОсновныеСредстваОстатки.КоличествоПрослеживаемостиОстаток) КАК КоличествоПрослеживаемостиОстаток
	|ИЗ
	|	ДанныеПоОС КАК ДанныеПоОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПрослеживаемыеОсновныеСредства.Остатки(&Период, Организация = &Организация) КАК ПрослеживаемыеОсновныеСредстваОстатки
	|		ПО ДанныеПоОС.ОсновноеСредство = ПрослеживаемыеОсновныеСредстваОстатки.ОсновноеСредство
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрослеживаемыеОсновныеСредстваОстатки.Комплектующие,
	|	ПрослеживаемыеОсновныеСредстваОстатки.ОсновноеСредство,
	|	ПрослеживаемыеОсновныеСредстваОстатки.Организация,
	|	ПрослеживаемыеОсновныеСредстваОстатки.СтранаПроисхождения,
	|	ПрослеживаемыеОсновныеСредстваОстатки.РНПТ";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", Новый МоментВремени(Дата, Ссылка));
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

#КонецОбласти

#КонецЕсли