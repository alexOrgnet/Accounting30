#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 16, 0);
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область СчетаУчета

Процедура УстановитьПравилаЗаполненияСчетовУчета(Правила) Экспорт
	
	
	// Табличная часть Товары
	
	//   Запасы (кроме оборудования, розницы в ценах продажи)
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "СчетУчета",           "Запасы");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "Оборудование");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "ТоварыВЦенахПродажи");
	
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "ПереданныеСчетУчета", "ЗапасыОтгруженные");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ОперацииСКомиссионером");
	
	//   Выручка (кроме оборудования, розницы в ценах продажи)
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СчетДоходов", "Выручка");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СчетЗапасов", "СчетУчета");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "ОперацииСКомиссионером");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеПроверкиЗаполнения(Правила, "СобственныеЗапасы");
	
	СчетаУчетаВДокументах.ДобавитьУровеньПодчиненности(Правила);
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "Субконто",                 "ВидДеятельности");
	
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СчетУчетаНДСПоРеализации", "ВыручкаНДС");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СуммаНДС",  "СуммаНДС");
	
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СчетРасходов",             "Расходы");
	
	//  Оборудование (тоже в табличной части Товары)
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "СчетУчета",     "ОборудованиеНаСкладе");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "Оборудование");
	
	//   Выручка (для оборудования)
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СчетДоходов",  "Выручка");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СчетЗапасов", "СчетУчета");
	
	СчетаУчетаВДокументах.ДобавитьУровеньПодчиненности(Правила);
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "Субконто",     "ВидДеятельности");
	
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СчетУчетаНДСПоРеализации", "ВыручкаНДС");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СуммаНДС",  "СуммаНДС");
	
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СчетРасходов", "Расходы");
	
	//   Запасы (розница в ценах продажи)
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "СчетУчета",           "ЗапасыВЦенахПродажи");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ТоварыВЦенахПродажи");
	
	//   Выручка (розница в ценах продажи)
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СчетДоходов", "Выручка");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СчетЗапасов", "СчетУчета");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "ОперацииСКомиссионером");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеПроверкиЗаполнения(Правила, "СобственныеЗапасы");
	
	СчетаУчетаВДокументах.ДобавитьУровеньПодчиненности(Правила);
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "Субконто",                 "ВидДеятельности");
	
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СчетУчетаНДСПоРеализации", "ВыручкаНДС");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СуммаНДС",  "СуммаНДС");
	
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СчетРасходов",             "Расходы");
	

	// Табличная часть Услуги
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Услуги", "СчетДоходов", "Выручка");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "Субконто",                 "ВидДеятельности");
	
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СчетУчетаНДСПоРеализации", "ВыручкаНДС");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СуммаНДС",  "СуммаНДС");
	
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СчетРасходов",             "Расходы");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеПроверкиЗаполнения(Правила, "ТребуетсяСчетРасходовПоОказаниюУслуг");
	
	// Табличная часть Агентские услуги
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "АгентскиеУслуги", "СчетРасчетов", "РасчетыСКомитентом");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Контрагент",         "Контрагент");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "ДоговорКонтрагента", "ДоговорКонтрагента");
	
	// Данные заполнения
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Дата");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Организация");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Склад");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Контрагент");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "ДоговорКонтрагента");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеДополнительныхДанных(Правила, "ДеятельностьНаПатенте", "ДокументРеализации");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеДополнительныхДанных(Правила, "ОтгрузкаБезПереходаПраваСобственности", "ВидОперации");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеДополнительныхДанных(Правила, "Оборудование",                          "ВидОперации");
	
КонецПроцедуры

Процедура ДополнитьДанныеЗаполненияСчетовУчета(ДанныеЗаполнения) Экспорт
	
	Если ДанныеЗаполнения.Свойство("ОтгрузкаБезПереходаПраваСобственности") Тогда
		
		ДанныеЗаполнения.ОтгрузкаБезПереходаПраваСобственности = 
			(ДанныеЗаполнения.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.ОтгрузкаБезПереходаПраваСобственности);
		
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("Оборудование") Тогда
		
		ДанныеЗаполнения.Оборудование = (ДанныеЗаполнения.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Оборудование);
		
	КонецЕсли;
	
	Если ДанныеЗаполнения.Свойство("ДеятельностьНаПатенте") Тогда
		
		ДокументРеализацииСсылка = УчетНДСПереопределяемый.ПолучитьИсправляемыйДокументРеализации(
			ДанныеЗаполнения.ДокументРеализации, Истина);
	
		ДанныеЗаполнения.ДеятельностьНаПатенте = ТипЗнч(ДокументРеализацииСсылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг")
			И ЗначениеЗаполнено(ДокументРеализацииСсылка)
			И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументРеализацииСсылка, "ДеятельностьНаПатенте");
	
	КонецЕсли; 
		
КонецПроцедуры

#Область УстаревшиеПроцедурыИФункции

// Устарела: Следует использовать ЗаполнитьПередЗаписью(), 
// ЗаполнитьПередОтображениемПользователю(), Заполнить(), 
// ЗаполнитьОбъектПриИзменении(), ЗаполнитьСтроки(),
// либо перед записью документа устанавливать дополнительное свойство 
// ЗаполнитьСчетаУчетаПередЗаписью
//
Процедура ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт

	СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаВТабличнойЧасти(
		Объект,
		ИмяТабличнойЧасти);

КонецПроцедуры

// Устарела: Следует использовать ЗаполнитьПередЗаписью(), 
// ЗаполнитьПередОтображениемПользователю(), Заполнить(), 
// ЗаполнитьОбъектПриИзменении(), ЗаполнитьСтроки(),
// либо перед записью документа устанавливать дополнительное свойство 
// ЗаполнитьСчетаУчетаПередЗаписью
//
// Заполняет счета учета номенклатуры в строке табличной части документа
//
// Параметры:
//  Объект                - ДокументОбъект или соответствующие данные формы
//  СтрокаТабличнойЧасти  - строка табличной части документа
//  ИмяТабличнойЧасти     - имя табличной части документа
//  СведенияОНоменклатуре - оставлен для совместимости; не используется
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(Объект, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СведенияОНоменклатуре = Неопределено) Экспорт

	СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(
		Объект,
		СтрокаТабличнойЧасти,
		ИмяТабличнойЧасти);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

Функция ТекстЗапросаДанныеДляПечатиСчетовФактур(НомераТаблиц, ЕстьПередачаТоваровВСоставеРабот = Ложь) Экспорт

	НомераТаблиц.Вставить("ВременнаяТаблицаНаличиеТоваров",     НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты",                          НомераТаблиц.Количество());
	Если Не ЕстьПередачаТоваровВСоставеРабот Тогда 
		НомераТаблиц.Вставить("ВТ_РублевыеСуммыДокументовВВалюте",  НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВТ_ДанныеПоСтранеПроисхождения",     НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВременнаяТаблицаДокумента",          НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ШтрихкодыУпаковок",                  НомераТаблиц.Количество());
	Иначе
		НомераТаблиц.Вставить("ТаблицаДокумента",                   НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВременнаяТаблицаДокумента",          НомераТаблиц.Количество());
	КонецЕсли;
	
	НомераТаблиц.Вставить("СведенияОПрослеживаемости",          НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаТовары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ НаличиеТоваров
	|ИЗ
	|	Документ.КорректировкаРеализации.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.ДатаИсходногоДокумента КАК ДатаОснования,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации.ЦифровойИндексОбособленногоПодразделения
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|					ТОГДА Реквизиты.Организация.ЦифровойИндексОбособленногоПодразделения
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК ЦифровойИндексОбособленногоПодразделения,
	|	ВЫБОР
	|		КОГДА &ИспользуетсяПостановлениеНДС1137
	|				И СчетФактураВыданный.Продавец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И СчетФактураВыданный.Продавец <> СчетФактураВыданный.Контрагент
	|			ТОГДА ВЫБОР
	|					КОГДА СчетФактураВыданный.Продавец.ОбособленноеПодразделение
	|							И СчетФактураВыданный.Продавец.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|						ТОГДА СчетФактураВыданный.Продавец.ГоловнойКонтрагент
	|					ИНАЧЕ СчетФактураВыданный.Продавец
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|					ТОГДА Реквизиты.Организация.ГоловнаяОрганизация
	|				ИНАЧЕ Реквизиты.Организация
	|			КОНЕЦ
	|	КОНЕЦ КАК Поставщик,
	|	ВЫБОР
	|		КОГДА &ИспользуетсяПостановлениеНДС1137
	|				И СчетФактураВыданный.Продавец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И СчетФактураВыданный.Продавец <> СчетФактураВыданный.Контрагент
	|			ТОГДА СчетФактураВыданный.Продавец.ИНН
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|					ТОГДА Реквизиты.Организация.ГоловнаяОрганизация.ИНН
	|				ИНАЧЕ Реквизиты.Организация.ИНН
	|			КОНЕЦ
	|	КОНЕЦ КАК ИННпоставщика,
	|	ВЫБОР
	|		КОГДА &ИспользуетсяПостановлениеНДС1137
	|				И СчетФактураВыданный.Продавец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И СчетФактураВыданный.Продавец <> СчетФактураВыданный.Контрагент
	|			ТОГДА СчетФактураВыданный.Продавец
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК ОбособленноеПодразделениеПоставщика,
	|	ВЫБОР
	|		КОГДА Реквизиты.Грузоотправитель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Реквизиты.Грузоотправитель
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации
	|		КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Организация
	|		ИНАЧЕ ""он же""
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА Реквизиты.Контрагент.ОбособленноеПодразделение
	|				И Реквизиты.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Покупатель,
	|	Реквизиты.Контрагент.ИНН КАК ИННпокупателя,
	|	ВЫБОР
	|		КОГДА Реквизиты.Грузополучатель.ОбособленноеПодразделение
	|				И Реквизиты.Грузополучатель.ГоловнойКонтрагент = Реквизиты.Контрагент
	|				И Реквизиты.Грузополучатель.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Грузополучатель
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК ОбособленноеПодразделениеПокупателя,
	|	ВЫБОР
	|		КОГДА Реквизиты.Грузополучатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Реквизиты.Грузополучатель
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Грузополучатель,
	|	Реквизиты.ВалютаДокумента КАК Валюта,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.Представление КАК Основание,
	|	Реквизиты.ДоговорКонтрагента.Дата КАК ОснованиеДата,
	|	Реквизиты.ДоговорКонтрагента.Номер КАК ОснованиеНомер,
	|	Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДСПокупателем КАК НДСИсчисляетсяНалоговымАгентом,
	|	НЕОПРЕДЕЛЕНО КАК Исполнитель,
	|	НЕОПРЕДЕЛЕНО КАК ИсполнительНаОсновании,
	|	НЕОПРЕДЕЛЕНО КАК ГлавныйБухгалтер,
	|	НЕОПРЕДЕЛЕНО КАК ОтпускПроизвел,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьНомер,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьДата,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьВыдана,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьЧерезКого,
	|	НЕОПРЕДЕЛЕНО КАК ЗаЗаказчикаНаОсновании,
	|	ВЫБОР
	|		КОГДА НаличиеТоваров.Ссылка ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьТовары,
	|	Реквизиты.АдресДоставки КАК АдресДоставки,
	|	Реквизиты.ОтветственныйЗаОформление КАК ОтветственныйЗаОформление,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.Перевозчик, НЕОПРЕДЕЛЕНО) КАК Перевозчик,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.СведенияОТранспортировкеИГрузе, """") КАК СведенияОТранспортировкеИГрузе,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.ПеревозкаАвтотранспортом, ЛОЖЬ) КАК ПеревозкаАвтотранспортом,
	|	Реквизиты.СопроводительныеДокументы КАК СопроводительныеДокументы,
	|	Реквизиты.БанковскийСчетОрганизации КАК БанковскийСчетПродавца
	|ИЗ
	|	Документ.КорректировкаРеализации КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаличиеТоваров КАК НаличиеТоваров
	|		ПО Реквизиты.Ссылка = НаличиеТоваров.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ПО (СчетФактураВыданный.Ссылка = &СчетФактура)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО Реквизиты.ИсправляемыйДокументРеализации = РеализацияТоваровУслуг.Ссылка
	|			И (Реквизиты.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение))
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОснование"+ ОбщегоНазначения.РазделительПакетаЗапросов();
	
	Если Не ЕстьПередачаТоваровВСоставеРабот Тогда 
		ТекстЗапроса = ТекстЗапроса 
		+"ВЫБРАТЬ
		|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
		|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
		|	РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
		|	ВЫБОР
		|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего > 0
		|			ТОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ВсегоРуб,
		|	ВЫБОР
		|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС > 0
		|			ТОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаБезНДСРуб,
		|	ВЫБОР
		|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС > 0
		|			ТОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НДСРуб
		|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
		|ИЗ
		|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
		|ГДЕ
		|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор = &ДокументОснование
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор,
		|	НомерСтрокиДокумента,
		|	ТабличнаяЧастьДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорректировкаРеализацииУслуги.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	МАКСИМУМ(КорректировкаРеализацииСведенияПрослеживаемости.СтранаПроисхождения) КАК СтранаПроисхождения,
		|	МАКСИМУМ(СтраныМира.НаименованиеПолное) КАК НаименованиеПолное
		|ПОМЕСТИТЬ ВТ_ДанныеПоСтранеПроисхождения
		|ИЗ
		|	Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализацииУслуги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.СведенияПрослеживаемости КАК КорректировкаРеализацииСведенияПрослеживаемости
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК СтраныМира
		|			ПО КорректировкаРеализацииСведенияПрослеживаемости.СтранаПроисхождения = СтраныМира.Ссылка
		|		ПО КорректировкаРеализацииУслуги.ИдентификаторСтроки = КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки
		|ГДЕ
		|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка = &ДокументОснование
		|	И КорректировкаРеализацииУслуги.Ссылка = &ДокументОснование
		|	И КорректировкаРеализацииСведенияПрослеживаемости.ЭтоСтрокаСИсходнымиРНПТ = ЛОЖЬ
		|
		|СГРУППИРОВАТЬ ПО
		|	КорректировкаРеализацииУслуги.ИдентификаторСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	1 КАК НомерТабЧасти,
		|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТовары.Номенклатура КАК Товар,
		|	ТаблицаТовары.Номенклатура.Код КАК ТоварКод,
		|	ТаблицаТовары.Номенклатура.Артикул КАК ТоварАртикул,
		|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
		|	ТаблицаТовары.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ТаблицаТовары.СтранаПроисхождения.НаименованиеПолное КАК ПредставлениеСтраны,
		|	ТаблицаТовары.НомерГТД КАК НомерГТД,
		|	ТаблицаТовары.НомерГТД.Представление КАК ПредставлениеГТД,
		|	ТаблицаТовары.НомерГТД.РегистрационныйНомер КАК РегистрационныйНомерТД,
		|	ТаблицаТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаТовары.Количество КАК Количество,
		|	ТаблицаТовары.Цена КАК Цена,
		|	ТаблицаТовары.Сумма КАК Сумма,
		|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
		|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаТовары.СуммаДоИзменения КАК СуммаДоИзменения,
		|	ТаблицаТовары.СуммаНДСДоИзменения КАК СуммаНДСДоИзменения,
		|	ТаблицаТовары.СуммаДоКорректировки КАК СуммаДоКорректировки,
		|	ТаблицаТовары.СуммаНДСДоКорректировки КАК СуммаНДСДоКорректировки,
		|	ЛОЖЬ КАК ЭтоУслуга,
		|	ТаблицаТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
		|	ТаблицаТовары.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(ТаблицаТовары.СчетУчета.Забалансовый, ЛОЖЬ) КАК ЭтоКомиссия,
		|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРуб, 0) КАК ВсегоРуб,
		|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.СуммаБезНДСРуб, 0) КАК СуммаБезНДСРуб,
		|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРуб, 0) КАК НДСРуб,
		|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК КонтрагентСводныйСФ,
		|	НЕОПРЕДЕЛЕНО КАК ПериодичностьУслуги,
		|	ТаблицаТовары.КодТНВЭД КАК ТоварКодТНВЭД,
		|	ТаблицаТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ТаблицаТовары.Номенклатура.КодТНВЭД КАК НоменклатураКодТНВЭД,
		|	ТаблицаТовары.ИдентификаторСтрокиГосконтрактаЕИС КАК ИдентификаторСтрокиГосконтрактаЕИС,
		|	0 КАК НалоговаяБазаНДС
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	Документ.КорректировкаРеализации.Товары КАК ТаблицаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
		|		ПО ТаблицаТовары.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
		|			И ТаблицаТовары.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
		|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
		|			И (ТаблицаТовары.Ссылка.ВалютаДокумента <> &ВалютаРеглУчета)
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &ДокументОснование
		|	И ТаблицаТовары.Сумма <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	2,
		|	ТаблицаУслуги.НомерСтроки,
		|	ТаблицаУслуги.Номенклатура,
		|	ТаблицаУслуги.Номенклатура.Код,
		|	ТаблицаУслуги.Номенклатура.КодОКВЭД2,
		|	ТаблицаУслуги.Содержание,
		|	ЕСТЬNULL(ВТ_ДанныеПоСтранеПроисхождения.СтранаПроисхождения, """"),
		|	ЕСТЬNULL(ВТ_ДанныеПоСтранеПроисхождения.НаименованиеПолное, """"),
		|	"""",
		|	"""",
		|	"""",
		|	ТаблицаУслуги.Номенклатура.ЕдиницаИзмерения,
		|	ТаблицаУслуги.Количество,
		|	ТаблицаУслуги.Цена,
		|	ТаблицаУслуги.Сумма,
		|	ТаблицаУслуги.СуммаНДС,
		|	ТаблицаУслуги.СтавкаНДС,
		|	ТаблицаУслуги.СуммаДоИзменения,
		|	ТаблицаУслуги.СуммаНДСДоИзменения,
		|	ТаблицаУслуги.СуммаДоКорректировки,
		|	ТаблицаУслуги.СуммаНДСДоКорректировки,
		|	ИСТИНА,
		|	ТаблицаУслуги.Ссылка.СуммаВключаетНДС,
		|	ТаблицаУслуги.Ссылка,
		|	ЛОЖЬ,
		|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРуб, 0),
		|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.СуммаБезНДСРуб, 0),
		|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРуб, 0),
		|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
		|	НЕОПРЕДЕЛЕНО,
		|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка),
		|	ТаблицаУслуги.ИдентификаторСтроки,
		|	НЕОПРЕДЕЛЕНО,
		|	ТаблицаУслуги.ИдентификаторСтрокиГосконтрактаЕИС,
		|	0
		|ИЗ
		|	Документ.КорректировкаРеализации.Услуги КАК ТаблицаУслуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
		|		ПО ТаблицаУслуги.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
		|			И ТаблицаУслуги.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
		|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
		|			И (ТаблицаУслуги.Ссылка.ВалютаДокумента <> &ВалютаРеглУчета)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеПоСтранеПроисхождения КАК ВТ_ДанныеПоСтранеПроисхождения
		|		ПО ТаблицаУслуги.ИдентификаторСтроки = ВТ_ДанныеПоСтранеПроисхождения.ИдентификаторСтроки
		|ГДЕ
		|	ТаблицаУслуги.Ссылка = &ДокументОснование
		|	И ТаблицаУслуги.Сумма <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	3,
		|	ТаблицаАгентскиеУслуги.НомерСтроки,
		|	ТаблицаАгентскиеУслуги.Номенклатура,
		|	ТаблицаАгентскиеУслуги.Номенклатура.Код,
		|	ТаблицаАгентскиеУслуги.Номенклатура.КодОКВЭД2,
		|	ТаблицаАгентскиеУслуги.Содержание,
		|	"""",
		|	"""",
		|	"""",
		|	"""",
		|	"""",
		|	ТаблицаАгентскиеУслуги.Номенклатура.ЕдиницаИзмерения,
		|	ТаблицаАгентскиеУслуги.Количество,
		|	ТаблицаАгентскиеУслуги.Цена,
		|	ТаблицаАгентскиеУслуги.Сумма,
		|	ТаблицаАгентскиеУслуги.СуммаНДС,
		|	ТаблицаАгентскиеУслуги.СтавкаНДС,
		|	ТаблицаАгентскиеУслуги.СуммаДоИзменения,
		|	ТаблицаАгентскиеУслуги.СуммаНДСДоИзменения,
		|	ТаблицаАгентскиеУслуги.СуммаДоКорректировки,
		|	ТаблицаАгентскиеУслуги.СуммаНДСДоКорректировки,
		|	ИСТИНА,
		|	ТаблицаАгентскиеУслуги.Ссылка.СуммаВключаетНДС,
		|	ТаблицаАгентскиеУслуги.Ссылка,
		|	ИСТИНА,
		|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРуб, 0),
		|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.СуммаБезНДСРуб, 0),
		|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРуб, 0),
		|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
		|	НЕОПРЕДЕЛЕНО,
		|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка),
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	0
		|ИЗ
		|	Документ.КорректировкаРеализации.АгентскиеУслуги КАК ТаблицаАгентскиеУслуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
		|		ПО ТаблицаАгентскиеУслуги.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
		|			И ТаблицаАгентскиеУслуги.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
		|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги))
		|			И (ТаблицаАгентскиеУслуги.Ссылка.ВалютаДокумента <> &ВалютаРеглУчета)
		|ГДЕ
		|	ТаблицаАгентскиеУслуги.Ссылка = &ДокументОснование
		|	И ТаблицаАгентскиеУслуги.Сумма <> 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ИдентификаторСтроки,
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка КАК Ссылка,
		|	ТаблицаДокумента.ШтрихкодУпаковки КАК Штрихкод
		|ИЗ
		|	Документ.КорректировкаРеализации.ШтрихкодыУпаковок КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорректировкаРеализацииСведенияПрослеживаемости.РНПТ.Код КАК НомерТовара,
		|	КорректировкаРеализацииСведенияПрослеживаемости.Количество КАК КоличествоУчетное,
		|	КорректировкаРеализацииСведенияПрослеживаемости.КоличествоПрослеживаемости КАК Количество,
		|	ЕСТЬNULL(КлассификаторТНВЭД.ЕдиницаИзмерения.Наименование, ""шт"") КАК ЕдиницаИзмеренияПрослеживаемостиНаименование,
		|	ЕСТЬNULL(КлассификаторТНВЭД.ЕдиницаИзмерения.Код, ""796"") КАК ЕдиницаИзмеренияПрослеживаемостиКод,
		|	ТаблицаДокумента.Товар КАК Товар,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ТоварКодТНВЭД = ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
		|			ТОГДА ""--""
		|		ИНАЧЕ ТаблицаДокумента.ТоварКодТНВЭД
		|	КОНЕЦ КАК ТоварКодТНВЭД,
		|	ТаблицаДокумента.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ТаблицаДокумента.НомерГТД КАК НомерГТД,
		|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.СуммаВключаетНДС
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаДокумента.Количество = 0
		|						ТОГДА 0
		|					КОГДА ТаблицаДокумента.СуммаНДС = 0
		|						ТОГДА ТаблицаДокумента.Цена
		|					ИНАЧЕ ВЫРАЗИТЬ((ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС) / ТаблицаДокумента.Количество КАК ЧИСЛО(15, 2))
		|				КОНЕЦ
		|		ИНАЧЕ ТаблицаДокумента.Цена
		|	КОНЕЦ КАК Цена,
		|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаДокумента.КонтрагентСводныйСФ КАК КонтрагентСводныйСФ,
		|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
		|	ТаблицаДокумента.НомерТабЧасти КАК НомерТабЧасти,
		|	ТаблицаДокумента.Ссылка КАК Ссылка,
		|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ВЫБОР
		|		КОГДА КорректировкаРеализацииСведенияПрослеживаемости.Сумма = 0
		|			ТОГДА КорректировкаРеализацииСведенияПрослеживаемости.Количество * ВЫБОР
		|					КОГДА ТаблицаДокумента.СуммаВключаетНДС
		|						ТОГДА ВЫРАЗИТЬ((ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС) / ТаблицаДокумента.Количество КАК ЧИСЛО(15, 2))
		|					ИНАЧЕ ТаблицаДокумента.Цена
		|				КОНЕЦ
		|		ИНАЧЕ КорректировкаРеализацииСведенияПрослеживаемости.Сумма
		|	КОНЕЦ КАК СтоимостьБезНалога
		|ИЗ
		|	Документ.КорректировкаРеализации.СведенияПрослеживаемости КАК КорректировкаРеализацииСведенияПрослеживаемости
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДокумента КАК ТаблицаДокумента
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
		|			ПО ТаблицаДокумента.НоменклатураКодТНВЭД = КлассификаторТНВЭД.Ссылка
		|		ПО (ТаблицаДокумента.ИдентификаторСтроки = КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки)
		|			И КорректировкаРеализацииСведенияПрослеживаемости.Ссылка = ТаблицаДокумента.Ссылка
		|ГДЕ
		|	НЕ КорректировкаРеализацииСведенияПрослеживаемости.ЭтоСтрокаСИсходнымиРНПТ";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "ВЫБРАТЬ
		|	Таблица.НомерСтроки КАК НомерСтроки,
		|	Таблица.Товар КАК Товар,
		|	Таблица.ТоварКод КАК ТоварКод,
		|	Таблица.ТоварНаименование КАК ТоварНаименование,
		|	Таблица.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	Таблица.Количество КАК Количество,
		|	Таблица.Цена КАК Цена,
		|	Таблица.Сумма КАК Сумма,
		|	Таблица.СуммаНДС КАК СуммаНДС,
		|	Таблица.СтавкаНДС КАК СтавкаНДС,
		|	Таблица.СуммаВключаетНДС КАК СуммаВключаетНДС,
		|	&ДокументОснование КАК Ссылка,
		|	Таблица.ТоварКодТНВЭД КАК ТоварКодТНВЭД,
		|	Таблица.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	Таблица.СтранаПроисхождения КАК СтранаПроисхождения,
		|	Таблица.СтранаПроисхождения КАК СтранаПроисхожденияПредставление,
		|	Таблица.РНПТ КАК РНПТ,
		|	Таблица.ВсегоРуб КАК ВсегоРуб,
		|	Таблица.НДСРуб КАК НДСРуб,
		|	Таблица.СуммаБезНДСРуб КАК СуммаБезНДСРуб
		|ПОМЕСТИТЬ ТаблицаОС
		|ИЗ
		|	&ТаблицаДокумента КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	1 КАК НомерТабЧасти,
		|	НЕОПРЕДЕЛЕНО КАК ТоварАртикул,
		|	"""" КАК НомерГТД,
		|	"""" КАК ПредставлениеГТД,
		|	"""" КАК РегистрационныйНомерТД,
		|	ТаблицаОС.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаОС.Количество КАК Количество,
		|	ТаблицаОС.Цена КАК Цена,
		|	ТаблицаОС.Сумма КАК Сумма,
		|	ТаблицаОС.СуммаНДС КАК СуммаНДС,
		|	ТаблицаОС.СтавкаНДС КАК СтавкаНДС,
		|	ВЫБОР
		|		КОГДА ТаблицаОС.РНПТ = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоУслуга,
		|	ЛОЖЬ КАК ЭтоКомиссия,
		|	ТаблицаОС.ВсегоРуб КАК ВсегоРуб,
		|	ТаблицаОС.СуммаБезНДСРуб КАК СуммаБезНДСРуб,
		|	ТаблицаОС.НДСРуб КАК НДСРуб,
		|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК КонтрагентСводныйСФ,
		|	НЕОПРЕДЕЛЕНО КАК ПериодичностьУслуги,
		|	ТаблицаОС.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ТаблицаОС.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ТаблицаОС.СтранаПроисхожденияПредставление КАК СтранаПроисхожденияПредставление,
		|	ТаблицаОС.Товар КАК Товар,
		|	ТаблицаОС.ТоварКод КАК ТоварКод,
		|	ТаблицаОС.ТоварНаименование КАК ТоварНаименование,
		|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
		|	ТаблицаОС.Ссылка КАК Ссылка,
		|	ТаблицаОС.ТоварКодТНВЭД КАК ТоварКодТНВЭД,
		|	ТаблицаОС.РНПТ КАК РНПТ,
		|	ТаблицаОС.СуммаВключаетНДС КАК СуммаВключаетНДС,
		|	0 КАК НалоговаяБазаНДС,
		|	ЕСТЬNULL(КлассификаторТНВЭД.ЕдиницаИзмерения.Наименование, """") КАК ЕдиницаИзмеренияПрослеживаемостиНаименование,
		|	ЕСТЬNULL(КлассификаторТНВЭД.ЕдиницаИзмерения.Код, """") КАК ЕдиницаИзмеренияПрослеживаемостиКод
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	ТаблицаОС КАК ТаблицаОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
		|		ПО ТаблицаОС.ТоварКодТНВЭД = КлассификаторТНВЭД.Ссылка
		|{УПОРЯДОЧИТЬ ПО
		|	НомерСтроки}
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорректировкаРеализацииСведенияПрослеживаемости.РНПТ.Код КАК НомерТовара,
		|	КорректировкаРеализацииСведенияПрослеживаемости.Количество КАК КоличествоУчетное,
		|	КорректировкаРеализацииСведенияПрослеживаемости.КоличествоПрослеживаемости КАК Количество,
		|	ТаблицаДокумента.ЕдиницаИзмеренияПрослеживаемостиНаименование КАК ЕдиницаИзмеренияПрослеживаемостиНаименование,
		|	ТаблицаДокумента.ЕдиницаИзмеренияПрослеживаемостиКод КАК ЕдиницаИзмеренияПрослеживаемостиКод,
		|	ТаблицаДокумента.НомерГТД КАК НомерГТД,
		|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаДокумента.КонтрагентСводныйСФ КАК КонтрагентСводныйСФ,
		|	ТаблицаДокумента.НомерТабЧасти КАК НомерТабЧасти,
		|	ТаблицаДокумента.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ТаблицаДокумента.Ссылка КАК Ссылка,
		|	ТаблицаДокумента.ТоварКодТНВЭД КАК ТоварКодТНВЭД,
		|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
		|	ТаблицаДокумента.Товар КАК Товар,
		|	ТаблицаДокумента.Цена КАК Цена,
		|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ТаблицаДокумента.Сумма КАК СтоимостьБезНалога
		|ИЗ
		|	ТаблицаДокумента КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.СведенияПрослеживаемости КАК КорректировкаРеализацииСведенияПрослеживаемости
		|		ПО ТаблицаДокумента.Ссылка = КорректировкаРеализацииСведенияПрослеживаемости.Ссылка
		|			И ТаблицаДокумента.ИдентификаторСтроки = КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки
		|			И ТаблицаДокумента.Товар = КорректировкаРеализацииСведенияПрослеживаемости.Номенклатура
		|			И ТаблицаДокумента.СтранаПроисхождения = КорректировкаРеализацииСведенияПрослеживаемости.СтранаПроисхождения
		|			И ТаблицаДокумента.РНПТ = КорректировкаРеализацииСведенияПрослеживаемости.РНПТ
		|ГДЕ
		|	КорректировкаРеализацииСведенияПрослеживаемости.ЭтоСтрокаСИсходнымиРНПТ = ЛОЖЬ";
		
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаДанныеДляПечатиКорректировочныхСчетовФактур(НомераТаблиц, ПередачаТоваровВСоставеРабот) Экспорт

	НомераТаблиц.Вставить("ВалютаРегламентированногоУчета",           НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты",                НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты",                                НомераТаблиц.Количество());
		
	Если Не ПередачаТоваровВСоставеРабот Тогда 
		НомераТаблиц.Вставить("ВТ_РублевыеСуммыДокументовВВалюте",        НомераТаблиц.Количество()); 
		НомераТаблиц.Вставить("СтраныПроисхожденияПоУслугам",             НомераТаблиц.Количество());
		НомераТаблиц.Вставить("СтраныПроисхожденияПоУслугамСводно",       НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВременнаяТаблицаНоменклатуры",             НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВременнаяТаблицаДокумента",                НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ШтрихкодыУпаковок",                        НомераТаблиц.Количество());
	Иначе
		НомераТаблиц.Вставить("ВременнаяТаблицаДокумента",                НомераТаблиц.Количество());
	КонецЕсли;
	
	НомераТаблиц.Вставить("СведенияОПрослеживаемостиПредварительная", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СведенияОПрослеживаемости",                НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КонстантаВалютаРегламентированногоУчета.Значение КАК ВалютаРеглУчета
	|ПОМЕСТИТЬ КонстантаВалютаРегламентированногоУчета
	|ИЗ
	|	Константа.ВалютаРегламентированногоУчета КАК КонстантаВалютаРегламентированногоУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА КонстантаВалютаРегламентированногоУчета.ВалютаРеглУчета <> Реквизиты.ВалютаДокумента
	|				И Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах
	|			ТОГДА КонстантаВалютаРегламентированногоУчета.ВалютаРеглУчета
	|		ИНАЧЕ Реквизиты.ВалютаДокумента
	|	КОНЕЦ КАК ВалютаДокумента,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ВЫБОР
	|		КОГДА КонстантаВалютаРегламентированногоУчета.ВалютаРеглУчета <> Реквизиты.ВалютаДокумента
	|				И Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК БратьСуммыИзРегистраРублевыеСуммы,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Исправление,
	|	Реквизиты.ОтветственныйЗаОформление КАК ОтветственныйЗаОформление,
	|	Реквизиты.СопроводительныеДокументы КАК СопроводительныеДокументы,
	|	Реквизиты.БанковскийСчетОрганизации КАК БанковскийСчетПродавца
	|ПОМЕСТИТЬ ВременнаяТаблицаРеквизиты
	|ИЗ
	|	Документ.КорректировкаРеализации КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ КонстантаВалютаРегламентированногоУчета КАК КонстантаВалютаРегламентированногоУчета
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Дата КАК ДатаОснования,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации.ЦифровойИндексОбособленногоПодразделения
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|					ТОГДА Реквизиты.Организация.ЦифровойИндексОбособленногоПодразделения
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК ЦифровойИндексОбособленногоПодразделения,
	|	ВЫБОР
	|		КОГДА Реквизиты.ДоговорКонтрагента.СчетаФактурыОтИмениОрганизации = ИСТИНА
	|			ТОГДА ВЫБОР
	|					КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|						ТОГДА Реквизиты.Организация.ГоловнаяОрганизация
	|					ИНАЧЕ Реквизиты.Организация
	|				КОНЕЦ
	|		КОГДА &ПредставлениеПоставщика <> """"
	|			ТОГДА &ПредставлениеПоставщика
	|		КОГДА СчетФактураВыданный.Продавец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И СчетФактураВыданный.Продавец <> СчетФактураВыданный.Контрагент
	|			ТОГДА ВЫБОР
	|					КОГДА СчетФактураВыданный.Продавец.ОбособленноеПодразделение
	|							И СчетФактураВыданный.Продавец.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|						ТОГДА СчетФактураВыданный.Продавец.ГоловнойКонтрагент
	|					ИНАЧЕ СчетФактураВыданный.Продавец
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|					ТОГДА Реквизиты.Организация.ГоловнаяОрганизация
	|				ИНАЧЕ Реквизиты.Организация
	|			КОНЕЦ
	|	КОНЕЦ КАК Поставщик,
	|	ВЫБОР
	|		КОГДА &АдресПоставщика <> """"
	|			ТОГДА &АдресПоставщика
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК АдресПоставщика,
	|	ВЫБОР
	|		КОГДА &ИННКПППоставщика <> """"
	|			ТОГДА &ИННКПППоставщика
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ИННКПППоставщика,
	|	ВЫБОР
	|		КОГДА Реквизиты.ДоговорКонтрагента.СчетаФактурыОтИмениОрганизации = ИСТИНА
	|			ТОГДА ВЫБОР
	|					КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|						ТОГДА Реквизиты.Организация.ГоловнаяОрганизация.ИНН
	|					ИНАЧЕ Реквизиты.Организация.ИНН
	|				КОНЕЦ
	|		КОГДА СчетФактураВыданный.Продавец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И СчетФактураВыданный.Продавец <> СчетФактураВыданный.Контрагент
	|			ТОГДА СчетФактураВыданный.Продавец.ИНН
	|		ИНАЧЕ Реквизиты.Организация.ИНН
	|	КОНЕЦ КАК ИННПоставщика,
	|	ВЫБОР
	|		КОГДА Реквизиты.ДоговорКонтрагента.СчетаФактурыОтИмениОрганизации = ИСТИНА
	|			ТОГДА ВЫБОР
	|					КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|						ТОГДА Реквизиты.ПодразделениеОрганизации
	|					ИНАЧЕ Реквизиты.Организация
	|				КОНЕЦ
	|		КОГДА СчетФактураВыданный.Продавец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И СчетФактураВыданный.Продавец <> СчетФактураВыданный.Контрагент
	|			ТОГДА СчетФактураВыданный.Продавец
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК ОбособленноеПодразделениеПоставщика,
	|	ВЫБОР
	|		КОГДА Реквизиты.Контрагент.ОбособленноеПодразделение
	|				И Реквизиты.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Покупатель,
	|	Реквизиты.Контрагент.ИНН КАК ИННпокупателя,
	|	Реквизиты.Контрагент КАК ОбособленноеПодразделениеПокупателя,
	|	Реквизиты.ВалютаДокумента КАК Валюта,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента.Представление КАК Основание,
	|	Реквизиты.ДоговорКонтрагента.Дата КАК ОснованиеДата,
	|	Реквизиты.ДоговорКонтрагента.Номер КАК ОснованиеНомер,
	|	Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДСПокупателем КАК НДСИсчисляетсяНалоговымАгентом,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ОтветственныйЗаОформление КАК ОтветственныйЗаОформление,
	|	Реквизиты.СопроводительныеДокументы КАК СопроводительныеДокументы,
	|	Реквизиты.БанковскийСчетПродавца КАК БанковскийСчетПродавца
	|ИЗ
	|	ВременнаяТаблицаРеквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ПО Реквизиты.Ссылка = СчетФактураВыданный.ДокументОснование
	|			И (НЕ СчетФактураВыданный.ПометкаУдаления)"  + ОбщегоНазначения.РазделительПакетаЗапросов();
	
	Если Не ПередачаТоваровВСоставеРабот Тогда
		ТекстЗапроса = Текстзапроса + "ВЫБРАТЬ
		|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
		|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
		|	ВЫБОР
		|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ТоварыДоИзменения)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары)
		|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.УслугиДоИзменения)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги)
		|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслугиДоИзменения)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги)
		|		ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента
		|	КОНЕЦ КАК ТабличнаяЧастьДокумента,
		|	СУММА(ВЫБОР
		|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего > 0
		|				ТОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ВсегоРуб,
		|	СУММА(ВЫБОР
		|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС > 0
		|				ТОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СуммаБезНДСРуб,
		|	СУММА(ВЫБОР
		|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС > 0
		|				ТОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК НДСРуб,
		|	СУММА(ВЫБОР
		|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего < 0
		|				ТОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего
		|			ИНАЧЕ 0
		|		КОНЕЦ) * -1 КАК ВсегоРубДоИзменения,
		|	СУММА(ВЫБОР
		|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС < 0
		|				ТОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС
		|			ИНАЧЕ 0
		|		КОНЕЦ) * -1 КАК СуммаБезНДСРубДоИзменения,
		|	СУММА(ВЫБОР
		|			КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС < 0
		|				ТОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС
		|			ИНАЧЕ 0
		|		КОНЕЦ) * -1 КАК НДСРубДоИзменения
		|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
		|ИЗ
		|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
		|ГДЕ
		|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор = &ДокументОснование
		|	И РегистрСведенийРублевыеСуммыДокументовВВалюте.Активность
		|
		|СГРУППИРОВАТЬ ПО
		|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор,
		|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента,
		|	ВЫБОР
		|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ТоварыДоИзменения)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары)
		|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.УслугиДоИзменения)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги)
		|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслугиДоИзменения)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги)
		|		ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента
		|	КОНЕЦ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор,
		|	НомерСтрокиДокумента,
		|	ТабличнаяЧастьДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КорректировкаРеализацииУслуги.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	СтраныМира.НаименованиеПолное КАК НаименованиеПолное,
		|	КорректировкаРеализацииСведенияПрослеживаемости.СтранаПроисхождения КАК СтранаПроисхождения,
		|	"""" КАК СтранаПроисхожденияДоИзменения
		|ПОМЕСТИТЬ СтраныПроисхожденияПоУслугам
		|ИЗ
		|	Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализацииУслуги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.СведенияПрослеживаемости КАК КорректировкаРеализацииСведенияПрослеживаемости
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК СтраныМира
		|			ПО КорректировкаРеализацииСведенияПрослеживаемости.СтранаПроисхождения = СтраныМира.Ссылка
		|		ПО КорректировкаРеализацииУслуги.ИдентификаторСтроки = КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки
		|ГДЕ
		|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка = &ДокументОснование
		|	И КорректировкаРеализацииУслуги.Ссылка = &ДокументОснование
		|	И КорректировкаРеализацииСведенияПрослеживаемости.ЭтоСтрокаСИсходнымиРНПТ = ЛОЖЬ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки,
		|	"""",
		|	"""",
		|	КорректировкаРеализацииСведенияПрослеживаемости.СтранаПроисхождения
		|ИЗ
		|	Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализацииУслуги
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.СведенияПрослеживаемости КАК КорректировкаРеализацииСведенияПрослеживаемости
		|		ПО КорректировкаРеализацииУслуги.ИдентификаторСтроки = КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки
		|ГДЕ
		|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка = &ДокументОснование
		|	И КорректировкаРеализацииСведенияПрослеживаемости.ЭтоСтрокаСИсходнымиРНПТ = ИСТИНА
		|	И КорректировкаРеализацииУслуги.Ссылка = &ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтраныПроисхожденияПоУслугам.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	МАКСИМУМ(СтраныПроисхожденияПоУслугам.НаименованиеПолное) КАК НаименованиеПолное,
		|	МАКСИМУМ(СтраныПроисхожденияПоУслугам.СтранаПроисхождения) КАК СтранаПроисхождения,
		|	МАКСИМУМ(СтраныПроисхожденияПоУслугам.СтранаПроисхожденияДоИзменения) КАК СтранаПроисхожденияДоИзменения,
		|	ИСТИНА КАК ПрослеживаемыйТовар
		|ПОМЕСТИТЬ СтраныПроисхожденияПоУслугамСводно
		|ИЗ
		|	СтраныПроисхожденияПоУслугам КАК СтраныПроисхожденияПоУслугам
		|
		|СГРУППИРОВАТЬ ПО
		|	СтраныПроисхожденияПоУслугам.ИдентификаторСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаНоменклатуры.Ссылка КАК Ссылка,
		|	1 КАК НомерТабЧасти,
		|	ТаблицаНоменклатуры.НомерСтроки КАК НомерСтроки,
		|	ТаблицаНоменклатуры.Номенклатура КАК Товар,
		|	ТаблицаНоменклатуры.Номенклатура.Код КАК ТоварКод,
		|	ТаблицаНоменклатуры.Номенклатура.Артикул КАК ТоварАртикул,
		|	ТаблицаНоменклатуры.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
		|	ТаблицаНоменклатуры.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ТаблицаНоменклатуры.СтранаПроисхождения.НаименованиеПолное КАК ПредставлениеСтраны,
		|	ТаблицаНоменклатуры.НомерГТД КАК НомерГТД,
		|	ТаблицаНоменклатуры.НомерГТД.Представление КАК ПредставлениеГТД,
		|	ВЫРАЗИТЬ(ТаблицаНоменклатуры.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаНоменклатуры.СтавкаНДС КАК СтавкаНДС,
		|	ЛОЖЬ КАК ЭтоУслуга,
		|	ВЫБОР
		|		КОГДА Реквизиты.Исправление
		|			ТОГДА ТаблицаНоменклатуры.КоличествоДоКорректировки
		|		ИНАЧЕ ТаблицаНоменклатуры.КоличествоДоИзменения
		|	КОНЕЦ КАК КоличествоДоИзменения,
		|	ТаблицаНоменклатуры.Количество КАК КоличествоПослеИзменения,
		|	ВЫБОР
		|		КОГДА Реквизиты.Исправление
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|						ТОГДА ВЫБОР
		|								КОГДА Реквизиты.СуммаВключаетНДС
		|									ТОГДА ВЫБОР
		|											КОГДА ТаблицаНоменклатуры.КоличествоДоКорректировки = 0
		|													ИЛИ ТаблицаНоменклатуры.СуммаНДСДоКорректировки = 0
		|												ТОГДА ТаблицаНоменклатуры.ЦенаДоКорректировки
		|											ИНАЧЕ ВЫРАЗИТЬ((ТаблицаНоменклатуры.СуммаДоКорректировки - ТаблицаНоменклатуры.СуммаНДСДоКорректировки) / ТаблицаНоменклатуры.КоличествоДоКорректировки КАК ЧИСЛО(15, 2))
		|										КОНЕЦ
		|								ИНАЧЕ ТаблицаНоменклатуры.ЦенаДоКорректировки
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА ТаблицаНоменклатуры.КоличествоДоКорректировки = 0
		|								ТОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРубДоИзменения - РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРубДоИзменения
		|							ИНАЧЕ ВЫРАЗИТЬ((РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРубДоИзменения - РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРубДоИзменения) / ТаблицаНоменклатуры.КоличествоДоКорректировки КАК ЧИСЛО(15, 2))
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|					ТОГДА ВЫБОР
		|							КОГДА Реквизиты.СуммаВключаетНДС
		|								ТОГДА ВЫБОР
		|										КОГДА ТаблицаНоменклатуры.КоличествоДоИзменения = 0
		|												ИЛИ ТаблицаНоменклатуры.СуммаНДСДоИзменения = 0
		|											ТОГДА ТаблицаНоменклатуры.ЦенаДоИзменения
		|										ИНАЧЕ ВЫРАЗИТЬ((ТаблицаНоменклатуры.СуммаДоИзменения - ТаблицаНоменклатуры.СуммаНДСДоИзменения) / ТаблицаНоменклатуры.КоличествоДоИзменения КАК ЧИСЛО(15, 2))
		|									КОНЕЦ
		|							ИНАЧЕ ТаблицаНоменклатуры.ЦенаДоИзменения
		|						КОНЕЦ
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ТаблицаНоменклатуры.КоличествоДоИзменения = 0
		|							ТОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРубДоИзменения - РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРубДоИзменения
		|						ИНАЧЕ ВЫРАЗИТЬ((РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРубДоИзменения - РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРубДоИзменения) / ТаблицаНоменклатуры.КоличествоДоИзменения КАК ЧИСЛО(15, 2))
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ЦенаДоИзменения,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|			ТОГДА ВЫБОР
		|					КОГДА Реквизиты.СуммаВключаетНДС
		|						ТОГДА ВЫБОР
		|								КОГДА ТаблицаНоменклатуры.Количество = 0
		|										ИЛИ ТаблицаНоменклатуры.СуммаНДС = 0
		|									ТОГДА ТаблицаНоменклатуры.Цена
		|								ИНАЧЕ ВЫРАЗИТЬ((ТаблицаНоменклатуры.Сумма - ТаблицаНоменклатуры.СуммаНДС) / ТаблицаНоменклатуры.Количество КАК ЧИСЛО(15, 2))
		|							КОНЕЦ
		|					ИНАЧЕ ТаблицаНоменклатуры.Цена
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаНоменклатуры.Количество <> 0
		|					ТОГДА ВЫРАЗИТЬ((РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРуб - РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРуб) / ТаблицаНоменклатуры.Количество КАК ЧИСЛО(15, 2))
		|				КОГДА ТаблицаНоменклатуры.КоличествоДоКорректировки <> 0
		|					ТОГДА ВЫРАЗИТЬ((РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРубДоИзменения - РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРубДоИзменения) / ТаблицаНоменклатуры.КоличествоДоКорректировки КАК ЧИСЛО(15, 2))
		|				ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРубДоИзменения - РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРубДоИзменения
		|			КОНЕЦ
		|	КОНЕЦ КАК ЦенаПослеИзменения,
		|	ВЫБОР
		|		КОГДА Реквизиты.Исправление
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|						ТОГДА ТаблицаНоменклатуры.СуммаНДСДоКорректировки
		|					ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРубДоИзменения
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|					ТОГДА ТаблицаНоменклатуры.СуммаНДСДоИзменения
		|				ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРубДоИзменения
		|			КОНЕЦ
		|	КОНЕЦ КАК СуммаНДСДоИзменения,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|			ТОГДА ТаблицаНоменклатуры.СуммаНДС
		|		ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРуб
		|	КОНЕЦ КАК СуммаНДСПослеИзменения,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|			ТОГДА ВЫБОР
		|					КОГДА Реквизиты.Исправление
		|						ТОГДА ВЫБОР
		|								КОГДА Реквизиты.СуммаВключаетНДС
		|									ТОГДА ТаблицаНоменклатуры.СуммаДоКорректировки - ТаблицаНоменклатуры.СуммаНДСДоКорректировки
		|								ИНАЧЕ ТаблицаНоменклатуры.СуммаДоКорректировки
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА Реквизиты.СуммаВключаетНДС
		|								ТОГДА ТаблицаНоменклатуры.СуммаДоИзменения - ТаблицаНоменклатуры.СуммаНДСДоИзменения
		|							ИНАЧЕ ТаблицаНоменклатуры.СуммаДоИзменения
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.СуммаБезНДСРубДоИзменения
		|	КОНЕЦ КАК СтоимостьБезНДСДоИзменения,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|			ТОГДА ВЫБОР
		|					КОГДА Реквизиты.СуммаВключаетНДС
		|						ТОГДА ТаблицаНоменклатуры.Сумма - ТаблицаНоменклатуры.СуммаНДС
		|					ИНАЧЕ ТаблицаНоменклатуры.Сумма
		|				КОНЕЦ
		|		ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.СуммаБезНДСРуб
		|	КОНЕЦ КАК СтоимостьБезНДСПослеИзменения,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|			ТОГДА ВЫБОР
		|					КОГДА Реквизиты.Исправление
		|						ТОГДА ВЫБОР
		|								КОГДА Реквизиты.СуммаВключаетНДС
		|									ТОГДА ТаблицаНоменклатуры.СуммаДоКорректировки
		|								ИНАЧЕ ТаблицаНоменклатуры.СуммаДоКорректировки + ТаблицаНоменклатуры.СуммаНДСДоКорректировки
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА Реквизиты.СуммаВключаетНДС
		|								ТОГДА ТаблицаНоменклатуры.СуммаДоИзменения
		|							ИНАЧЕ ТаблицаНоменклатуры.СуммаДоИзменения + ТаблицаНоменклатуры.СуммаНДСДоИзменения
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРубДоИзменения
		|	КОНЕЦ КАК СтоимостьСНДСДоИзменения,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|			ТОГДА ВЫБОР
		|					КОГДА Реквизиты.СуммаВключаетНДС
		|						ТОГДА ТаблицаНоменклатуры.Сумма
		|					ИНАЧЕ ТаблицаНоменклатуры.Сумма + ТаблицаНоменклатуры.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРуб
		|	КОНЕЦ КАК СтоимостьСНДСПослеИзменения,
		|	ВЫБОР
		|		КОГДА ТаблицаНоменклатуры.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
		|			ТОГДА ТаблицаНоменклатуры.КодТНВЭД
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
		|	КОНЕЦ КАК ТоварыКодТНВЭД,
		|	ВЫБОР
		|		КОГДА ТаблицаНоменклатуры.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
		|			ТОГДА ВЫБОР
		|					КОГДА ТаблицаНоменклатуры.КодТНВЭДДоИзменения = ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
		|						ТОГДА ТаблицаНоменклатуры.КодТНВЭД
		|					ИНАЧЕ ТаблицаНоменклатуры.КодТНВЭДДоИзменения
		|				КОНЕЦ
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
		|	КОНЕЦ КАК ТоварыКодТНВЭДДоИзменения,
		|	ТаблицаНоменклатуры.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ВЫБОР
		|		КОГДА ТаблицаНоменклатуры.Номенклатура ССЫЛКА Справочник.Номенклатура
		|			ТОГДА ВЫРАЗИТЬ(ТаблицаНоменклатуры.Номенклатура КАК Справочник.Номенклатура).КодТНВЭД
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК НоменклатураКодТНВЭД,
		|	ТаблицаНоменклатуры.СтранаПроисхожденияДоИзменения КАК СтранаПроисхожденияДоИзменения,
		|	ТаблицаНоменклатуры.НомерГТДДоИзменения.РегистрационныйНомер КАК РегистрационныйНомерТДДо,
		|	ТаблицаНоменклатуры.НомерГТД.РегистрационныйНомер КАК РегистрационныйНомерТДПосле,
		|	ТаблицаНоменклатуры.ИдентификаторСтрокиГосконтрактаЕИС КАК ИдентификаторСтрокиГосконтрактаЕИС,
		|	ТаблицаНоменклатуры.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар
		|ПОМЕСТИТЬ ТаблицаНоменклатуры
		|ИЗ
		|	Документ.КорректировкаРеализации.Товары КАК ТаблицаНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаРеквизиты КАК Реквизиты
		|		ПО (Реквизиты.Ссылка = ТаблицаНоменклатуры.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
		|		ПО ТаблицаНоменклатуры.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
		|			И ТаблицаНоменклатуры.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
		|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныечастиДокументов.Товары))
		|			И (ТаблицаНоменклатуры.Ссылка.ВалютаДокумента <> &ВалютаРеглУчета)
		|ГДЕ
		|	ТаблицаНоменклатуры.Ссылка = &ДокументОснование
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаНоменклатуры.Ссылка,
		|	2,
		|	ТаблицаНоменклатуры.НомерСтроки,
		|	ТаблицаНоменклатуры.Номенклатура,
		|	ТаблицаНоменклатуры.Номенклатура.Код,
		|	ТаблицаНоменклатуры.Номенклатура.Артикул,
		|	ТаблицаНоменклатуры.Содержание,
		|	ЕСТЬNULL(СтраныПроисхожденияПоУслугамСводно.СтранаПроисхождения, """"),
		|	ЕСТЬNULL(СтраныПроисхожденияПоУслугамСводно.НаименованиеПолное, """"),
		|	"""",
		|	"""",
		|	ВЫРАЗИТЬ(ТаблицаНоменклатуры.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения,
		|	ТаблицаНоменклатуры.СтавкаНДС,
		|	ИСТИНА,
		|	ВЫБОР
		|		КОГДА Реквизиты.Исправление
		|			ТОГДА ТаблицаНоменклатуры.КоличествоДоКорректировки
		|		ИНАЧЕ ТаблицаНоменклатуры.КоличествоДоИзменения
		|	КОНЕЦ,
		|	ТаблицаНоменклатуры.Количество,
		|	ВЫБОР
		|		КОГДА Реквизиты.Исправление
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|						ТОГДА ВЫБОР
		|								КОГДА Реквизиты.СуммаВключаетНДС
		|									ТОГДА ВЫБОР
		|											КОГДА ТаблицаНоменклатуры.КоличествоДоКорректировки = 0
		|													ИЛИ ТаблицаНоменклатуры.СуммаНДСДоКорректировки = 0
		|												ТОГДА ТаблицаНоменклатуры.ЦенаДоКорректировки
		|											ИНАЧЕ ВЫРАЗИТЬ((ТаблицаНоменклатуры.СуммаДоКорректировки - ТаблицаНоменклатуры.СуммаНДСДоКорректировки) / ТаблицаНоменклатуры.КоличествоДоКорректировки КАК ЧИСЛО(15, 2))
		|										КОНЕЦ
		|								ИНАЧЕ ТаблицаНоменклатуры.ЦенаДоКорректировки
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА ТаблицаНоменклатуры.КоличествоДоКорректировки = 0
		|								ТОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРубДоИзменения - РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРубДоИзменения
		|							ИНАЧЕ ВЫРАЗИТЬ((РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРубДоИзменения - РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРубДоИзменения) / ТаблицаНоменклатуры.КоличествоДоКорректировки КАК ЧИСЛО(15, 2))
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|					ТОГДА ВЫБОР
		|							КОГДА Реквизиты.СуммаВключаетНДС
		|								ТОГДА ВЫБОР
		|										КОГДА ТаблицаНоменклатуры.КоличествоДоИзменения = 0
		|												ИЛИ ТаблицаНоменклатуры.СуммаНДСДоИзменения = 0
		|											ТОГДА ТаблицаНоменклатуры.ЦенаДоИзменения
		|										ИНАЧЕ ВЫРАЗИТЬ((ТаблицаНоменклатуры.СуммаДоИзменения - ТаблицаНоменклатуры.СуммаНДСДоИзменения) / ТаблицаНоменклатуры.КоличествоДоИзменения КАК ЧИСЛО(15, 2))
		|									КОНЕЦ
		|							ИНАЧЕ ТаблицаНоменклатуры.ЦенаДоИзменения
		|						КОНЕЦ
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ТаблицаНоменклатуры.КоличествоДоИзменения = 0
		|							ТОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРубДоИзменения - РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРубДоИзменения
		|						ИНАЧЕ ВЫРАЗИТЬ((РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРубДоИзменения - РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРубДоИзменения) / ТаблицаНоменклатуры.КоличествоДоИзменения КАК ЧИСЛО(15, 2))
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|			ТОГДА ВЫБОР
		|					КОГДА Реквизиты.СуммаВключаетНДС
		|						ТОГДА ВЫБОР
		|								КОГДА ТаблицаНоменклатуры.Количество = 0
		|										ИЛИ ТаблицаНоменклатуры.СуммаНДС = 0
		|									ТОГДА ТаблицаНоменклатуры.Цена
		|								ИНАЧЕ ВЫРАЗИТЬ((ТаблицаНоменклатуры.Сумма - ТаблицаНоменклатуры.СуммаНДС) / ТаблицаНоменклатуры.Количество КАК ЧИСЛО(15, 2))
		|							КОНЕЦ
		|					ИНАЧЕ ТаблицаНоменклатуры.Цена
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаНоменклатуры.Количество <> 0
		|					ТОГДА ВЫРАЗИТЬ((РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРуб - РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРуб) / ТаблицаНоменклатуры.Количество КАК ЧИСЛО(15, 2))
		|				КОГДА ТаблицаНоменклатуры.КоличествоДоКорректировки <> 0
		|					ТОГДА ВЫРАЗИТЬ((РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРубДоИзменения - РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРубДоИзменения) / ТаблицаНоменклатуры.КоличествоДоКорректировки КАК ЧИСЛО(15, 2))
		|				ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРубДоИзменения - РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРубДоИзменения
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА Реквизиты.Исправление
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|						ТОГДА ТаблицаНоменклатуры.СуммаНДСДоКорректировки
		|					ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРубДоИзменения
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|					ТОГДА ТаблицаНоменклатуры.СуммаНДСДоИзменения
		|				ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРубДоИзменения
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|			ТОГДА ТаблицаНоменклатуры.СуммаНДС
		|		ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРуб
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|			ТОГДА ВЫБОР
		|					КОГДА Реквизиты.Исправление
		|						ТОГДА ВЫБОР
		|								КОГДА Реквизиты.СуммаВключаетНДС
		|									ТОГДА ТаблицаНоменклатуры.СуммаДоКорректировки - ТаблицаНоменклатуры.СуммаНДСДоКорректировки
		|								ИНАЧЕ ТаблицаНоменклатуры.СуммаДоКорректировки
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА Реквизиты.СуммаВключаетНДС
		|								ТОГДА ТаблицаНоменклатуры.СуммаДоИзменения - ТаблицаНоменклатуры.СуммаНДСДоИзменения
		|							ИНАЧЕ ТаблицаНоменклатуры.СуммаДоИзменения
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.СуммаБезНДСРубДоИзменения
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|			ТОГДА ВЫБОР
		|					КОГДА Реквизиты.СуммаВключаетНДС
		|						ТОГДА ТаблицаНоменклатуры.Сумма - ТаблицаНоменклатуры.СуммаНДС
		|					ИНАЧЕ ТаблицаНоменклатуры.Сумма
		|				КОНЕЦ
		|		ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.СуммаБезНДСРуб
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|			ТОГДА ВЫБОР
		|					КОГДА Реквизиты.Исправление
		|						ТОГДА ВЫБОР
		|								КОГДА Реквизиты.СуммаВключаетНДС
		|									ТОГДА ТаблицаНоменклатуры.СуммаДоКорректировки
		|								ИНАЧЕ ТаблицаНоменклатуры.СуммаДоКорректировки + ТаблицаНоменклатуры.СуммаНДСДоКорректировки
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА Реквизиты.СуммаВключаетНДС
		|								ТОГДА ТаблицаНоменклатуры.СуммаДоИзменения
		|							ИНАЧЕ ТаблицаНоменклатуры.СуммаДоИзменения + ТаблицаНоменклатуры.СуммаНДСДоИзменения
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРубДоИзменения
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|			ТОГДА ВЫБОР
		|					КОГДА Реквизиты.СуммаВключаетНДС
		|						ТОГДА ТаблицаНоменклатуры.Сумма
		|					ИНАЧЕ ТаблицаНоменклатуры.Сумма + ТаблицаНоменклатуры.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРуб
		|	КОНЕЦ,
		|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка),
		|	ТаблицаНоменклатуры.ИдентификаторСтроки,
		|	НЕОПРЕДЕЛЕНО,
		|	ЕСТЬNULL(СтраныПроисхожденияПоУслугамСводно.СтранаПроисхожденияДоИзменения, """"),
		|	"""",
		|	"""",
		|	ТаблицаНоменклатуры.ИдентификаторСтрокиГосконтрактаЕИС,
		|	ЕСТЬNULL(СтраныПроисхожденияПоУслугамСводно.ПрослеживаемыйТовар, ЛОЖЬ)
		|ИЗ
		|	Документ.КорректировкаРеализации.Услуги КАК ТаблицаНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаРеквизиты КАК Реквизиты
		|		ПО (Реквизиты.Ссылка = ТаблицаНоменклатуры.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
		|		ПО ТаблицаНоменклатуры.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
		|			И ТаблицаНоменклатуры.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
		|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныечастиДокументов.Услуги))
		|			И (ТаблицаНоменклатуры.Ссылка.ВалютаДокумента <> &ВалютаРеглУчета)
		|		ЛЕВОЕ СОЕДИНЕНИЕ СтраныПроисхожденияПоУслугамСводно КАК СтраныПроисхожденияПоУслугамСводно
		|		ПО ТаблицаНоменклатуры.ИдентификаторСтроки = СтраныПроисхожденияПоУслугамСводно.ИдентификаторСтроки
		|ГДЕ
		|	ТаблицаНоменклатуры.Ссылка = &ДокументОснование
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаНоменклатуры.Ссылка,
		|	3,
		|	ТаблицаНоменклатуры.НомерСтроки,
		|	ТаблицаНоменклатуры.Номенклатура,
		|	ТаблицаНоменклатуры.Номенклатура.Код,
		|	ТаблицаНоменклатуры.Номенклатура.Артикул,
		|	ТаблицаНоменклатуры.Содержание,
		|	"""",
		|	"""",
		|	"""",
		|	"""",
		|	ВЫРАЗИТЬ(ТаблицаНоменклатуры.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения,
		|	ТаблицаНоменклатуры.СтавкаНДС,
		|	ИСТИНА,
		|	ВЫБОР
		|		КОГДА Реквизиты.Исправление
		|			ТОГДА ТаблицаНоменклатуры.КоличествоДоКорректировки
		|		ИНАЧЕ ТаблицаНоменклатуры.КоличествоДоИзменения
		|	КОНЕЦ,
		|	ТаблицаНоменклатуры.Количество,
		|	ВЫБОР
		|		КОГДА Реквизиты.Исправление
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|						ТОГДА ВЫБОР
		|								КОГДА Реквизиты.СуммаВключаетНДС
		|									ТОГДА ВЫБОР
		|											КОГДА ТаблицаНоменклатуры.КоличествоДоКорректировки = 0
		|													ИЛИ ТаблицаНоменклатуры.СуммаНДСДоКорректировки = 0
		|												ТОГДА ТаблицаНоменклатуры.ЦенаДоКорректировки
		|											ИНАЧЕ ВЫРАЗИТЬ((ТаблицаНоменклатуры.СуммаДоКорректировки - ТаблицаНоменклатуры.СуммаНДСДоКорректировки) / ТаблицаНоменклатуры.КоличествоДоКорректировки КАК ЧИСЛО(15, 2))
		|										КОНЕЦ
		|								ИНАЧЕ ТаблицаНоменклатуры.ЦенаДоКорректировки
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА ТаблицаНоменклатуры.КоличествоДоКорректировки = 0
		|								ТОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРубДоИзменения - РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРубДоИзменения
		|							ИНАЧЕ ВЫРАЗИТЬ((РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРубДоИзменения - РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРубДоИзменения) / ТаблицаНоменклатуры.КоличествоДоКорректировки КАК ЧИСЛО(15, 2))
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|					ТОГДА ВЫБОР
		|							КОГДА Реквизиты.СуммаВключаетНДС
		|								ТОГДА ВЫБОР
		|										КОГДА ТаблицаНоменклатуры.КоличествоДоИзменения = 0
		|												ИЛИ ТаблицаНоменклатуры.СуммаНДСДоИзменения = 0
		|											ТОГДА ТаблицаНоменклатуры.ЦенаДоИзменения
		|										ИНАЧЕ ВЫРАЗИТЬ((ТаблицаНоменклатуры.СуммаДоИзменения - ТаблицаНоменклатуры.СуммаНДСДоИзменения) / ТаблицаНоменклатуры.КоличествоДоИзменения КАК ЧИСЛО(15, 2))
		|									КОНЕЦ
		|							ИНАЧЕ ТаблицаНоменклатуры.ЦенаДоИзменения
		|						КОНЕЦ
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ТаблицаНоменклатуры.КоличествоДоИзменения = 0
		|							ТОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРубДоИзменения - РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРубДоИзменения
		|						ИНАЧЕ ВЫРАЗИТЬ((РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРубДоИзменения - РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРубДоИзменения) / ТаблицаНоменклатуры.КоличествоДоИзменения КАК ЧИСЛО(15, 2))
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|			ТОГДА ВЫБОР
		|					КОГДА Реквизиты.СуммаВключаетНДС
		|						ТОГДА ВЫБОР
		|								КОГДА ТаблицаНоменклатуры.Количество = 0
		|										ИЛИ ТаблицаНоменклатуры.СуммаНДС = 0
		|									ТОГДА ТаблицаНоменклатуры.Цена
		|								ИНАЧЕ ВЫРАЗИТЬ((ТаблицаНоменклатуры.Сумма - ТаблицаНоменклатуры.СуммаНДС) / ТаблицаНоменклатуры.Количество КАК ЧИСЛО(15, 2))
		|							КОНЕЦ
		|					ИНАЧЕ ТаблицаНоменклатуры.Цена
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТаблицаНоменклатуры.Количество <> 0
		|					ТОГДА ВЫРАЗИТЬ((РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРуб - РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРуб) / ТаблицаНоменклатуры.Количество КАК ЧИСЛО(15, 2))
		|				КОГДА ТаблицаНоменклатуры.КоличествоДоКорректировки <> 0
		|					ТОГДА ВЫРАЗИТЬ((РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРубДоИзменения - РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРубДоИзменения) / ТаблицаНоменклатуры.КоличествоДоКорректировки КАК ЧИСЛО(15, 2))
		|				ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРубДоИзменения - РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРубДоИзменения
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА Реквизиты.Исправление
		|			ТОГДА ВЫБОР
		|					КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|						ТОГДА ТаблицаНоменклатуры.СуммаНДСДоКорректировки
		|					ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРубДоИзменения
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|					ТОГДА ТаблицаНоменклатуры.СуммаНДСДоИзменения
		|				ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРубДоИзменения
		|			КОНЕЦ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|			ТОГДА ТаблицаНоменклатуры.СуммаНДС
		|		ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.НДСРуб
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|			ТОГДА ВЫБОР
		|					КОГДА Реквизиты.Исправление
		|						ТОГДА ВЫБОР
		|								КОГДА Реквизиты.СуммаВключаетНДС
		|									ТОГДА ТаблицаНоменклатуры.СуммаДоКорректировки - ТаблицаНоменклатуры.СуммаНДСДоКорректировки
		|								ИНАЧЕ ТаблицаНоменклатуры.СуммаДоКорректировки
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА Реквизиты.СуммаВключаетНДС
		|								ТОГДА ТаблицаНоменклатуры.СуммаДоИзменения - ТаблицаНоменклатуры.СуммаНДСДоИзменения
		|							ИНАЧЕ ТаблицаНоменклатуры.СуммаДоИзменения
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.СуммаБезНДСРубДоИзменения
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|			ТОГДА ВЫБОР
		|					КОГДА Реквизиты.СуммаВключаетНДС
		|						ТОГДА ТаблицаНоменклатуры.Сумма - ТаблицаНоменклатуры.СуммаНДС
		|					ИНАЧЕ ТаблицаНоменклатуры.Сумма
		|				КОНЕЦ
		|		ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.СуммаБезНДСРуб
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|			ТОГДА ВЫБОР
		|					КОГДА Реквизиты.Исправление
		|						ТОГДА ВЫБОР
		|								КОГДА Реквизиты.СуммаВключаетНДС
		|									ТОГДА ТаблицаНоменклатуры.СуммаДоКорректировки
		|								ИНАЧЕ ТаблицаНоменклатуры.СуммаДоКорректировки + ТаблицаНоменклатуры.СуммаНДСДоКорректировки
		|							КОНЕЦ
		|					ИНАЧЕ ВЫБОР
		|							КОГДА Реквизиты.СуммаВключаетНДС
		|								ТОГДА ТаблицаНоменклатуры.СуммаДоИзменения
		|							ИНАЧЕ ТаблицаНоменклатуры.СуммаДоИзменения + ТаблицаНоменклатуры.СуммаНДСДоИзменения
		|						КОНЕЦ
		|				КОНЕЦ
		|		ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРубДоИзменения
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА НЕ Реквизиты.БратьСуммыИзРегистраРублевыеСуммы
		|			ТОГДА ВЫБОР
		|					КОГДА Реквизиты.СуммаВключаетНДС
		|						ТОГДА ТаблицаНоменклатуры.Сумма
		|					ИНАЧЕ ТаблицаНоменклатуры.Сумма + ТаблицаНоменклатуры.СуммаНДС
		|				КОНЕЦ
		|		ИНАЧЕ РегистрСведенийРублевыеСуммыДокументовВВалюте.ВсегоРуб
		|	КОНЕЦ,
		|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка),
		|	НЕОПРЕДЕЛЕНО,
		|	НЕОПРЕДЕЛЕНО,
		|	"""",
		|	"""",
		|	"""",
		|	НЕОПРЕДЕЛЕНО,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.КорректировкаРеализации.АгентскиеУслуги КАК ТаблицаНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВременнаяТаблицаРеквизиты КАК Реквизиты
		|		ПО (Реквизиты.Ссылка = ТаблицаНоменклатуры.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
		|		ПО ТаблицаНоменклатуры.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
		|			И ТаблицаНоменклатуры.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
		|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныечастиДокументов.АгентскиеУслуги))
		|			И (ТаблицаНоменклатуры.Ссылка.ВалютаДокумента <> &ВалютаРеглУчета)
		|ГДЕ
		|	ТаблицаНоменклатуры.Ссылка = &ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаНоменклатуры.НомерТабЧасти КАК НомерТабЧасти,
		|	ТаблицаНоменклатуры.НомерСтроки КАК НомерСтроки,
		|	ТаблицаНоменклатуры.Товар КАК Товар,
		|	ТаблицаНоменклатуры.ТоварКод КАК ТоварКод,
		|	ТаблицаНоменклатуры.ТоварАртикул КАК ТоварАртикул,
		|	ТаблицаНоменклатуры.ТоварНаименование КАК ТоварНаименование,
		|	ТаблицаНоменклатуры.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ТаблицаНоменклатуры.ПредставлениеСтраны КАК ПредставлениеСтраны,
		|	ТаблицаНоменклатуры.НомерГТД КАК НомерГТД,
		|	ТаблицаНоменклатуры.ПредставлениеГТД КАК ПредставлениеГТД,
		|	ТаблицаНоменклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаНоменклатуры.КоличествоДоИзменения КАК КоличествоДоИзменения,
		|	ТаблицаНоменклатуры.КоличествоПослеИзменения КАК КоличествоПослеИзменения,
		|	ТаблицаНоменклатуры.ЦенаДоИзменения КАК ЦенаДоИзменения,
		|	ТаблицаНоменклатуры.ЦенаПослеИзменения КАК ЦенаПослеИзменения,
		|	ТаблицаНоменклатуры.СтоимостьБезНДСДоИзменения КАК СтоимостьБезНДСДоИзменения,
		|	ТаблицаНоменклатуры.СтоимостьБезНДСПослеИзменения КАК СтоимостьБезНДСПослеИзменения,
		|	ТаблицаНоменклатуры.СуммаНДСПослеИзменения КАК СуммаНДСПослеИзменения,
		|	ТаблицаНоменклатуры.СуммаНДСДоИзменения КАК СуммаНДСДоИзменения,
		|	ТаблицаНоменклатуры.СтоимостьСНДСДоИзменения КАК СтоимостьСНДСДоИзменения,
		|	ТаблицаНоменклатуры.СтоимостьСНДСПослеИзменения КАК СтоимостьСНДСПослеИзменения,
		|	ВЫБОР
		|		КОГДА ТаблицаНоменклатуры.СтоимостьБезНДСДоИзменения > ТаблицаНоменклатуры.СтоимостьБезНДСПослеИзменения
		|			ТОГДА ТаблицаНоменклатуры.СтоимостьБезНДСДоИзменения - ТаблицаНоменклатуры.СтоимостьБезНДСПослеИзменения
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК РазницаБезНДСУменьшение,
		|	ВЫБОР
		|		КОГДА ТаблицаНоменклатуры.СтоимостьБезНДСПослеИзменения > ТаблицаНоменклатуры.СтоимостьБезНДСДоИзменения
		|			ТОГДА ТаблицаНоменклатуры.СтоимостьБезНДСПослеИзменения - ТаблицаНоменклатуры.СтоимостьБезНДСДоИзменения
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК РазницаБезНДСУвеличение,
		|	ВЫБОР
		|		КОГДА ТаблицаНоменклатуры.СуммаНДСДоИзменения > ТаблицаНоменклатуры.СуммаНДСПослеИзменения
		|			ТОГДА ТаблицаНоменклатуры.СуммаНДСДоИзменения - ТаблицаНоменклатуры.СуммаНДСПослеИзменения
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК РазницаНДСУменьшение,
		|	ВЫБОР
		|		КОГДА ТаблицаНоменклатуры.СуммаНДСПослеИзменения > ТаблицаНоменклатуры.СуммаНДСДоИзменения
		|			ТОГДА ТаблицаНоменклатуры.СуммаНДСПослеИзменения - ТаблицаНоменклатуры.СуммаНДСДоИзменения
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК РазницаНДСУвеличение,
		|	ВЫБОР
		|		КОГДА ТаблицаНоменклатуры.СтоимостьСНДСДоИзменения > ТаблицаНоменклатуры.СтоимостьСНДСПослеИзменения
		|			ТОГДА ТаблицаНоменклатуры.СтоимостьСНДСДоИзменения - ТаблицаНоменклатуры.СтоимостьСНДСПослеИзменения
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК РазницаСНДСУменьшение,
		|	ВЫБОР
		|		КОГДА ТаблицаНоменклатуры.СтоимостьСНДСПослеИзменения > ТаблицаНоменклатуры.СтоимостьСНДСДоИзменения
		|			ТОГДА ТаблицаНоменклатуры.СтоимостьСНДСПослеИзменения - ТаблицаНоменклатуры.СтоимостьСНДСДоИзменения
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК РазницаСНДСУвеличение,
		|	ТаблицаНоменклатуры.СтавкаНДС КАК СтавкаНДСДоИзменения,
		|	ТаблицаНоменклатуры.СтавкаНДС КАК СтавкаНДСПослеИзменения,
		|	ТаблицаНоменклатуры.ЭтоУслуга КАК ЭтоУслуга,
		|	ТаблицаНоменклатуры.Ссылка КАК Ссылка,
		|	ТаблицаНоменклатуры.ТоварыКодТНВЭД КАК ТоварКодТНВЭД,
		|	ТаблицаНоменклатуры.ТоварыКодТНВЭДДоИзменения КАК ТоварКодТНВЭДДоИзменения,
		|	ТаблицаНоменклатуры.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ТаблицаНоменклатуры.НоменклатураКодТНВЭД КАК НоменклатураКодТНВЭД,
		|	ТаблицаНоменклатуры.СтранаПроисхожденияДоИзменения КАК СтранаПроисхожденияДо,
		|	ТаблицаНоменклатуры.РегистрационныйНомерТДДо КАК РегистрационныйНомерТДДо,
		|	ТаблицаНоменклатуры.РегистрационныйНомерТДПосле КАК РегистрационныйНомерТДПосле,
		|	ТаблицаНоменклатуры.ИдентификаторСтрокиГосконтрактаЕИС КАК ИдентификаторСтрокиГосконтрактаЕИС,
		|	ТаблицаНоменклатуры.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|ГДЕ
		|	(ТаблицаНоменклатуры.КоличествоПослеИзменения <> ТаблицаНоменклатуры.КоличествоДоИзменения
		|			ИЛИ ТаблицаНоменклатуры.СтоимостьБезНДСПослеИзменения <> ТаблицаНоменклатуры.СтоимостьБезНДСДоИзменения
		|			ИЛИ ТаблицаНоменклатуры.СуммаНДСПослеИзменения <> ТаблицаНоменклатуры.СуммаНДСДоИзменения
		|			ИЛИ ТаблицаНоменклатуры.ЦенаПослеИзменения <> ТаблицаНоменклатуры.ЦенаДоИзменения)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка КАК Ссылка,
		|	ТаблицаДокумента.ШтрихкодУпаковки КАК Штрихкод
		|ИЗ
		|	Документ.КорректировкаРеализации.ШтрихкодыУпаковок КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияПрослеживаемостиДоПосле.НомерТовара КАК НомерТовара,
		|	СУММА(СведенияПрослеживаемостиДоПосле.КоличествоУчетноеДоИзменения) КАК КоличествоУчетноеДоИзменения,
		|	СУММА(СведенияПрослеживаемостиДоПосле.КоличествоУчетноеПослеИзменения) КАК КоличествоУчетноеПослеИзменения,
		|	СУММА(СведенияПрослеживаемостиДоПосле.КоличествоТовараДоИзменения) КАК КоличествоТовараДоИзменения,
		|	СУММА(СведенияПрослеживаемостиДоПосле.КоличествоТовараПослеИзменения) КАК КоличествоТовараПослеИзменения,
		|	СведенияПрослеживаемостиДоПосле.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	СведенияПрослеживаемостиДоПосле.СуммаПослеИзменения КАК СуммаПослеИзменения,
		|	СведенияПрослеживаемостиДоПосле.СуммаДоИзменения КАК СуммаДоИзменения
		|ПОМЕСТИТЬ СведенияОПрослеживаемостиПредварительная
		|ИЗ
		|	(ВЫБРАТЬ
		|		КорректировкаРеализацииСведенияПрослеживаемости.РНПТ.Код КАК НомерТовара,
		|		0 КАК КоличествоУчетноеДоИзменения,
		|		КорректировкаРеализацииСведенияПрослеживаемости.Количество КАК КоличествоУчетноеПослеИзменения,
		|		0 КАК КоличествоТовараДоИзменения,
		|		КорректировкаРеализацииСведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоТовараПослеИзменения,
		|		КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|		КорректировкаРеализацииСведенияПрослеживаемости.Сумма КАК СуммаПослеИзменения,
		|		0 КАК СуммаДоИзменения
		|	ИЗ
		|		Документ.КорректировкаРеализации.СведенияПрослеживаемости КАК КорректировкаРеализацииСведенияПрослеживаемости
		|	ГДЕ
		|		КорректировкаРеализацииСведенияПрослеживаемости.Ссылка В
		|				(ВЫБРАТЬ
		|					ТаблицаДокумента.Ссылка
		|				ИЗ
		|					ТаблицаДокумента)
		|		И НЕ КорректировкаРеализацииСведенияПрослеживаемости.ЭтоСтрокаСИсходнымиРНПТ
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		КорректировкаРеализацииСведенияПрослеживаемости.РНПТ.Код,
		|		КорректировкаРеализацииСведенияПрослеживаемости.Количество,
		|		0,
		|		КорректировкаРеализацииСведенияПрослеживаемости.КоличествоПрослеживаемости,
		|		0,
		|		КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки,
		|		0,
		|		КорректировкаРеализацииСведенияПрослеживаемости.Сумма
		|	ИЗ
		|		Документ.КорректировкаРеализации.СведенияПрослеживаемости КАК КорректировкаРеализацииСведенияПрослеживаемости
		|	ГДЕ
		|		КорректировкаРеализацииСведенияПрослеживаемости.Ссылка В
		|				(ВЫБРАТЬ
		|					ТаблицаДокумента.Ссылка
		|				ИЗ
		|					ТаблицаДокумента)
		|		И КорректировкаРеализацииСведенияПрослеживаемости.ЭтоСтрокаСИсходнымиРНПТ) КАК СведенияПрослеживаемостиДоПосле
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияПрослеживаемостиДоПосле.НомерТовара,
		|	СведенияПрослеживаемостиДоПосле.ИдентификаторСтроки,
		|	СведенияПрослеживаемостиДоПосле.СуммаПослеИзменения,
		|	СведенияПрослеживаемостиДоПосле.СуммаДоИзменения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОПрослеживаемостиПредварительная.НомерТовара КАК НомерТовара,
		|	СУММА(СведенияОПрослеживаемостиПредварительная.КоличествоУчетноеДоИзменения) КАК КоличествоУчетноеДоИзменения,
		|	СУММА(СведенияОПрослеживаемостиПредварительная.КоличествоУчетноеПослеИзменения) КАК КоличествоУчетноеПослеИзменения,
		|	СУММА(СведенияОПрослеживаемостиПредварительная.КоличествоТовараДоИзменения) КАК КоличествоТовараДоИзменения,
		|	СУММА(СведенияОПрослеживаемостиПредварительная.КоличествоТовараПослеИзменения) КАК КоличествоТовараПослеИзменения,
		|	ЕСТЬNULL(КлассификаторТНВЭД.ЕдиницаИзмерения.Наименование, ""шт"") КАК ЕдиницаИзмеренияПрослеживаемостиНаименование,
		|	ЕСТЬNULL(КлассификаторТНВЭД.ЕдиницаИзмерения.Код, ""796"") КАК ЕдиницаИзмеренияПрослеживаемостиКод,
		|	ТаблицаДокумента.Товар КАК Товар,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ТоварКодТНВЭД = ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
		|			ТОГДА ""--""
		|		ИНАЧЕ ТаблицаДокумента.ТоварКодТНВЭД
		|	КОНЕЦ КАК ТоварКодТНВЭД,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ТоварКодТНВЭДДоИзменения = ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
		|			ТОГДА ""--""
		|		ИНАЧЕ ТаблицаДокумента.ТоварКодТНВЭДДоИзменения
		|	КОНЕЦ КАК ТоварКодТНВЭДДоИзменения,
		|	ТаблицаДокумента.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ТаблицаДокумента.НомерГТД КАК НомерГТД,
		|	ТаблицаДокумента.ЕдиницаИзмерения КАК НаименованиеЕдиницыИзмерения,
		|	ТаблицаДокумента.ЦенаДоИзменения КАК ЦенаДоИзменения,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.КоличествоПослеИзменения = 0
		|			ТОГДА ТаблицаДокумента.ЦенаДоИзменения
		|		ИНАЧЕ ТаблицаДокумента.ЦенаПослеИзменения
		|	КОНЕЦ КАК ЦенаПослеИзменения,
		|	ТаблицаДокумента.СтавкаНДСПослеИзменения КАК СтавкаНДСПослеИзменения,
		|	СУММА(ВЫБОР
		|			КОГДА СведенияОПрослеживаемостиПредварительная.КоличествоТовараДоИзменения < СведенияОПрослеживаемостиПредварительная.КоличествоТовараПослеИзменения
		|				ТОГДА ВЫРАЗИТЬ(СведенияОПрослеживаемостиПредварительная.КоличествоТовараПослеИзменения - СведенияОПрослеживаемостиПредварительная.КоличествоТовараДоИзменения КАК ЧИСЛО(26, 11))
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КоличествоТовараУвеличение,
		|	СУММА(ВЫБОР
		|			КОГДА СведенияОПрослеживаемостиПредварительная.КоличествоТовараДоИзменения > СведенияОПрослеживаемостиПредварительная.КоличествоТовараПослеИзменения
		|				ТОГДА ВЫРАЗИТЬ(СведенияОПрослеживаемостиПредварительная.КоличествоТовараДоИзменения - СведенияОПрослеживаемостиПредварительная.КоличествоТовараПослеИзменения КАК ЧИСЛО(26, 11))
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КоличествоТовараУменьшение,
		|	ТаблицаДокумента.СтранаПроисхожденияДо КАК СтранаПроисхожденияДо,
		|	ТаблицаДокумента.Ссылка КАК Ссылка,
		|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ВЫБОР
		|		КОГДА СведенияОПрослеживаемостиПредварительная.СуммаДоИзменения = 0
		|			ТОГДА СведенияОПрослеживаемостиПредварительная.КоличествоТовараДоИзменения * ТаблицаДокумента.ЦенаДоИзменения
		|		ИНАЧЕ СведенияОПрослеживаемостиПредварительная.СуммаДоИзменения
		|	КОНЕЦ КАК СтоимостьБезНалогаДоИзменения,
		|	ВЫБОР
		|		КОГДА СведенияОПрослеживаемостиПредварительная.СуммаПослеИзменения = 0
		|			ТОГДА СведенияОПрослеживаемостиПредварительная.КоличествоТовараПослеИзменения * ТаблицаДокумента.ЦенаПослеИзменения
		|		ИНАЧЕ СведенияОПрослеживаемостиПредварительная.СуммаПослеИзменения
		|	КОНЕЦ КАК СтоимостьБезНалогаПослеИзменения
		|ИЗ
		|	СведенияОПрослеживаемостиПредварительная КАК СведенияОПрослеживаемостиПредварительная
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДокумента КАК ТаблицаДокумента
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
		|			ПО ТаблицаДокумента.НоменклатураКодТНВЭД = КлассификаторТНВЭД.Ссылка
		|		ПО (ТаблицаДокумента.ИдентификаторСтроки = СведенияОПрослеживаемостиПредварительная.ИдентификаторСтроки)
		|ГДЕ
		|	ТаблицаДокумента.ПрослеживаемыйТовар = ИСТИНА
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаДокумента.Товар,
		|	СведенияОПрослеживаемостиПредварительная.НомерТовара,
		|	ТаблицаДокумента.ЕдиницаИзмерения,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ТоварКодТНВЭД = ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
		|			ТОГДА ""--""
		|		ИНАЧЕ ТаблицаДокумента.ТоварКодТНВЭД
		|	КОНЕЦ,
		|	ТаблицаДокумента.СтранаПроисхождения,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ТоварКодТНВЭДДоИзменения = ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
		|			ТОГДА ""--""
		|		ИНАЧЕ ТаблицаДокумента.ТоварКодТНВЭДДоИзменения
		|	КОНЕЦ,
		|	ТаблицаДокумента.НомерГТД,
		|	ТаблицаДокумента.СтавкаНДСПослеИзменения,
		|	ТаблицаДокумента.ЦенаДоИзменения,
		|	ТаблицаДокумента.ЦенаПослеИзменения,
		|	ТаблицаДокумента.СтранаПроисхожденияДо,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.КоличествоПослеИзменения = 0
		|			ТОГДА ТаблицаДокумента.ЦенаДоИзменения
		|		ИНАЧЕ ТаблицаДокумента.ЦенаПослеИзменения
		|	КОНЕЦ,
		|	ТаблицаДокумента.Ссылка,
		|	ТаблицаДокумента.ИдентификаторСтроки,
		|	ЕСТЬNULL(КлассификаторТНВЭД.ЕдиницаИзмерения.Наименование, ""шт""),
		|	ЕСТЬNULL(КлассификаторТНВЭД.ЕдиницаИзмерения.Код, ""796""),
		|	ВЫБОР
		|		КОГДА СведенияОПрослеживаемостиПредварительная.СуммаДоИзменения = 0
		|			ТОГДА СведенияОПрослеживаемостиПредварительная.КоличествоТовараДоИзменения * ТаблицаДокумента.ЦенаДоИзменения
		|		ИНАЧЕ СведенияОПрослеживаемостиПредварительная.СуммаДоИзменения
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА СведенияОПрослеживаемостиПредварительная.СуммаПослеИзменения = 0
		|			ТОГДА СведенияОПрослеживаемостиПредварительная.КоличествоТовараПослеИзменения * ТаблицаДокумента.ЦенаПослеИзменения
		|		ИНАЧЕ СведенияОПрослеживаемостиПредварительная.СуммаПослеИзменения
		|	КОНЕЦ";
	Иначе
		ТекстЗапроса = ТекстЗапроса +"ВЫБРАТЬ
		|	""2"" КАК НомерТабЧасти,
		|	ТаблицаКорректировочногоДокумента.НомерСтроки КАК НомерСтроки,
		|	ТаблицаКорректировочногоДокумента.Товар КАК Товар,
		|	ТаблицаКорректировочногоДокумента.ТоварКод КАК ТоварКод,
		|	ТаблицаКорректировочногоДокумента.ТоварАртикул КАК ТоварАртикул,
		|	ТаблицаКорректировочногоДокумента.ТоварНаименование КАК ТоварНаименование,
		|	ТаблицаКорректировочногоДокумента.СтранаПроисхождения КАК СтранаПроисхождения,
		|	"""" КАК ПредставлениеСтраны,
		|	"""" КАК НомерГТД,
		|	"""" КАК ПредставлениеГТД,
		|	ТаблицаКорректировочногоДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаКорректировочногоДокумента.КоличествоДоИзменения КАК КоличествоДоИзменения,
		|	ТаблицаКорректировочногоДокумента.КоличествоПослеИзменения КАК КоличествоПослеИзменения,
		|	ТаблицаКорректировочногоДокумента.ЦенаДоИзменения КАК ЦенаДоИзменения,
		|	ТаблицаКорректировочногоДокумента.ЦенаПослеИзменения КАК ЦенаПослеИзменения,
		|	ТаблицаКорректировочногоДокумента.СтоимостьБезНДСДоИзменения КАК СтоимостьБезНДСДоИзменения,
		|	ТаблицаКорректировочногоДокумента.СтоимостьБезНДСПослеИзменения КАК СтоимостьБезНДСПослеИзменения,
		|	ТаблицаКорректировочногоДокумента.СуммаНДСПослеИзменения КАК СуммаНДСПослеИзменения,
		|	ТаблицаКорректировочногоДокумента.СуммаНДСДоИзменения КАК СуммаНДСДоИзменения,
		|	ТаблицаКорректировочногоДокумента.СтоимостьСНДСДоИзменения КАК СтоимостьСНДСДоИзменения,
		|	ТаблицаКорректировочногоДокумента.СтоимостьСНДСПослеИзменения КАК СтоимостьСНДСПослеИзменения,
		|	ВЫБОР
		|		КОГДА ТаблицаКорректировочногоДокумента.СтоимостьБезНДСДоИзменения > ТаблицаКорректировочногоДокумента.СтоимостьБезНДСПослеИзменения
		|			ТОГДА ТаблицаКорректировочногоДокумента.СтоимостьБезНДСДоИзменения - ТаблицаКорректировочногоДокумента.СтоимостьБезНДСПослеИзменения
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК РазницаБезНДСУменьшение,
		|	ВЫБОР
		|		КОГДА ТаблицаКорректировочногоДокумента.СтоимостьБезНДСПослеИзменения > ТаблицаКорректировочногоДокумента.СтоимостьБезНДСДоИзменения
		|			ТОГДА ТаблицаКорректировочногоДокумента.СтоимостьБезНДСПослеИзменения - ТаблицаКорректировочногоДокумента.СтоимостьБезНДСДоИзменения
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК РазницаБезНДСУвеличение,
		|	ВЫБОР
		|		КОГДА ТаблицаКорректировочногоДокумента.СуммаНДСДоИзменения > ТаблицаКорректировочногоДокумента.СуммаНДСПослеИзменения
		|			ТОГДА ТаблицаКорректировочногоДокумента.СуммаНДСДоИзменения - ТаблицаКорректировочногоДокумента.СуммаНДСПослеИзменения
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК РазницаНДСУменьшение,
		|	ВЫБОР
		|		КОГДА ТаблицаКорректировочногоДокумента.СуммаНДСПослеИзменения > ТаблицаКорректировочногоДокумента.СуммаНДСДоИзменения
		|			ТОГДА ТаблицаКорректировочногоДокумента.СуммаНДСПослеИзменения - ТаблицаКорректировочногоДокумента.СуммаНДСДоИзменения
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК РазницаНДСУвеличение,
		|	ВЫБОР
		|		КОГДА ТаблицаКорректировочногоДокумента.СтоимостьСНДСДоИзменения > ТаблицаКорректировочногоДокумента.СтоимостьСНДСПослеИзменения
		|			ТОГДА ТаблицаКорректировочногоДокумента.СтоимостьСНДСДоИзменения - ТаблицаКорректировочногоДокумента.СтоимостьСНДСПослеИзменения
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК РазницаСНДСУменьшение,
		|	ВЫБОР
		|		КОГДА ТаблицаКорректировочногоДокумента.СтоимостьСНДСПослеИзменения > ТаблицаКорректировочногоДокумента.СтоимостьСНДСДоИзменения
		|			ТОГДА ТаблицаКорректировочногоДокумента.СтоимостьСНДСПослеИзменения - ТаблицаКорректировочногоДокумента.СтоимостьСНДСДоИзменения
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК РазницаСНДСУвеличение,
		|	ТаблицаКорректировочногоДокумента.СтавкаНДСДоИзменения КАК СтавкаНДСДоИзменения,
		|	ТаблицаКорректировочногоДокумента.СтавкаНДСПослеИзменения КАК СтавкаНДСПослеИзменения,
		|	ТаблицаКорректировочногоДокумента.ЭтоУслуга КАК ЭтоУслуга,
		|	ТаблицаКорректировочногоДокумента.Ссылка КАК Ссылка,
		|	ТаблицаКорректировочногоДокумента.ТоварКодТНВЭД КАК ТоварКодТНВЭД,
		|	ТаблицаКорректировочногоДокумента.ТоварКодТНВЭДДоИзменения КАК ТоварКодТНВЭДДоИзменения,
		|	ТаблицаКорректировочногоДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ТаблицаКорректировочногоДокумента.ТоварКодТНВЭД КАК НоменклатураКодТНВЭД,
		|	ТаблицаКорректировочногоДокумента.СтранаПроисхожденияДоИзменения КАК СтранаПроисхожденияДо,
		|	"""" КАК РегистрационныйНомерТДДо,
		|	"""" КАК РегистрационныйНомерТДПосле,
		|	ТаблицаКорректировочногоДокумента.ИдентификаторСтрокиГосконтрактаЕИС КАК ИдентификаторСтрокиГосконтрактаЕИС,
		|	НЕ ТаблицаКорректировочногоДокумента.ЭтоУслуга КАК ПрослеживаемыйТовар,
		|	ТаблицаКорректировочногоДокумента.РНПТ КАК РНПТ
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	&ТаблицаКорректировочногоДокумента КАК ТаблицаКорректировочногоДокумента
		|ГДЕ
		|	(ТаблицаКорректировочногоДокумента.КоличествоПослеИзменения <> ТаблицаКорректировочногоДокумента.КоличествоДоИзменения
		|			ИЛИ ТаблицаКорректировочногоДокумента.СтоимостьБезНДСПослеИзменения <> ТаблицаКорректировочногоДокумента.СтоимостьБезНДСДоИзменения
		|			ИЛИ ТаблицаКорректировочногоДокумента.СуммаНДСПослеИзменения <> ТаблицаКорректировочногоДокумента.СуммаНДСДоИзменения
		|			ИЛИ ТаблицаКорректировочногоДокумента.ЦенаПослеИзменения <> ТаблицаКорректировочногоДокумента.ЦенаДоИзменения)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияПрослеживаемостиДоПосле.НомерТовара КАК НомерТовара,
		|	СУММА(СведенияПрослеживаемостиДоПосле.КоличествоУчетноеДоИзменения) КАК КоличествоУчетноеДоИзменения,
		|	СУММА(СведенияПрослеживаемостиДоПосле.КоличествоУчетноеПослеИзменения) КАК КоличествоУчетноеПослеИзменения,
		|	СУММА(СведенияПрослеживаемостиДоПосле.КоличествоТовараДоИзменения) КАК КоличествоТовараДоИзменения,
		|	СУММА(СведенияПрослеживаемостиДоПосле.КоличествоТовараПослеИзменения) КАК КоличествоТовараПослеИзменения,
		|	СведенияПрослеживаемостиДоПосле.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	СведенияПрослеживаемостиДоПосле.Номенклатура КАК Номенклатура,
		|	СведенияПрослеживаемостиДоПосле.СтранаПроисхождения КАК СтранаПроисхождения,
		|	СведенияПрослеживаемостиДоПосле.РНПТ КАК РНПТ
		|ПОМЕСТИТЬ СведенияОПрослеживаемостиПредварительная
		|ИЗ
		|	(ВЫБРАТЬ
		|		КорректировкаРеализацииСведенияПрослеживаемости.РНПТ.Код КАК НомерТовара,
		|		0 КАК КоличествоУчетноеДоИзменения,
		|		КорректировкаРеализацииСведенияПрослеживаемости.Количество КАК КоличествоУчетноеПослеИзменения,
		|		0 КАК КоличествоТовараДоИзменения,
		|		КорректировкаРеализацииСведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоТовараПослеИзменения,
		|		КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|		КорректировкаРеализацииСведенияПрослеживаемости.Номенклатура КАК Номенклатура,
		|		КорректировкаРеализацииСведенияПрослеживаемости.СтранаПроисхождения КАК СтранаПроисхождения,
		|		КорректировкаРеализацииСведенияПрослеживаемости.РНПТ КАК РНПТ
		|	ИЗ
		|		Документ.КорректировкаРеализации.СведенияПрослеживаемости КАК КорректировкаРеализацииСведенияПрослеживаемости
		|	ГДЕ
		|		КорректировкаРеализацииСведенияПрослеживаемости.Ссылка В
		|				(ВЫБРАТЬ
		|					ТаблицаДокумента.Ссылка
		|				ИЗ
		|					ТаблицаДокумента)
		|		И НЕ КорректировкаРеализацииСведенияПрослеживаемости.ЭтоСтрокаСИсходнымиРНПТ
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		КорректировкаРеализацииСведенияПрослеживаемости.РНПТ.Код,
		|		КорректировкаРеализацииСведенияПрослеживаемости.Количество,
		|		0,
		|		КорректировкаРеализацииСведенияПрослеживаемости.КоличествоПрослеживаемости,
		|		0,
		|		КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки,
		|		КорректировкаРеализацииСведенияПрослеживаемости.Номенклатура,
		|		КорректировкаРеализацииСведенияПрослеживаемости.СтранаПроисхождения,
		|		КорректировкаРеализацииСведенияПрослеживаемости.РНПТ
		|	ИЗ
		|		Документ.КорректировкаРеализации.СведенияПрослеживаемости КАК КорректировкаРеализацииСведенияПрослеживаемости
		|	ГДЕ
		|		КорректировкаРеализацииСведенияПрослеживаемости.Ссылка В
		|				(ВЫБРАТЬ
		|					ТаблицаДокумента.Ссылка
		|				ИЗ
		|					ТаблицаДокумента)
		|		И КорректировкаРеализацииСведенияПрослеживаемости.ЭтоСтрокаСИсходнымиРНПТ) КАК СведенияПрослеживаемостиДоПосле
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияПрослеживаемостиДоПосле.НомерТовара,
		|	СведенияПрослеживаемостиДоПосле.ИдентификаторСтроки,
		|	СведенияПрослеживаемостиДоПосле.Номенклатура,
		|	СведенияПрослеживаемостиДоПосле.СтранаПроисхождения,
		|	СведенияПрослеживаемостиДоПосле.РНПТ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОПрослеживаемостиПредварительная.НомерТовара КАК НомерТовара,
		|	СУММА(СведенияОПрослеживаемостиПредварительная.КоличествоУчетноеДоИзменения) КАК КоличествоУчетноеДоИзменения,
		|	СУММА(СведенияОПрослеживаемостиПредварительная.КоличествоУчетноеПослеИзменения) КАК КоличествоУчетноеПослеИзменения,
		|	СУММА(СведенияОПрослеживаемостиПредварительная.КоличествоТовараДоИзменения) КАК КоличествоТовараДоИзменения,
		|	СУММА(СведенияОПрослеживаемостиПредварительная.КоличествоТовараПослеИзменения) КАК КоличествоТовараПослеИзменения,
		|	ЕСТЬNULL(КлассификаторТНВЭД.ЕдиницаИзмерения.Наименование, ""шт"") КАК ЕдиницаИзмеренияПрослеживаемостиНаименование,
		|	ЕСТЬNULL(КлассификаторТНВЭД.ЕдиницаИзмерения.Код, ""796"") КАК ЕдиницаИзмеренияПрослеживаемостиКод,
		|	ТаблицаДокумента.Товар КАК Товар,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ТоварКодТНВЭД = ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
		|			ТОГДА ""--""
		|		ИНАЧЕ ТаблицаДокумента.ТоварКодТНВЭД
		|	КОНЕЦ КАК ТоварКодТНВЭД,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ТоварКодТНВЭДДоИзменения = ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
		|			ТОГДА ""--""
		|		ИНАЧЕ ТаблицаДокумента.ТоварКодТНВЭДДоИзменения
		|	КОНЕЦ КАК ТоварКодТНВЭДДоИзменения,
		|	ТаблицаДокумента.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ТаблицаДокумента.ЕдиницаИзмерения КАК НаименованиеЕдиницыИзмерения,
		|	ТаблицаДокумента.ЦенаДоИзменения КАК ЦенаДоИзменения,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.КоличествоПослеИзменения = 0
		|			ТОГДА ТаблицаДокумента.ЦенаДоИзменения
		|		ИНАЧЕ ТаблицаДокумента.ЦенаПослеИзменения
		|	КОНЕЦ КАК ЦенаПослеИзменения,
		|	ТаблицаДокумента.СтавкаНДСПослеИзменения КАК СтавкаНДСПослеИзменения,
		|	СУММА(ВЫБОР
		|			КОГДА СведенияОПрослеживаемостиПредварительная.КоличествоТовараДоИзменения < СведенияОПрослеживаемостиПредварительная.КоличествоТовараПослеИзменения
		|				ТОГДА ВЫРАЗИТЬ(СведенияОПрослеживаемостиПредварительная.КоличествоТовараПослеИзменения - СведенияОПрослеживаемостиПредварительная.КоличествоТовараДоИзменения КАК ЧИСЛО(26, 11))
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КоличествоТовараУвеличение,
		|	СУММА(ВЫБОР
		|			КОГДА СведенияОПрослеживаемостиПредварительная.КоличествоТовараДоИзменения > СведенияОПрослеживаемостиПредварительная.КоличествоТовараПослеИзменения
		|				ТОГДА ВЫРАЗИТЬ(СведенияОПрослеживаемостиПредварительная.КоличествоТовараДоИзменения - СведенияОПрослеживаемостиПредварительная.КоличествоТовараПослеИзменения КАК ЧИСЛО(26, 11))
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КоличествоТовараУменьшение,
		|	ТаблицаДокумента.СтранаПроисхожденияДо КАК СтранаПроисхожденияДо,
		|	ТаблицаДокумента.Ссылка КАК Ссылка,
		|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ТаблицаДокумента.НомерГТД КАК НомерГТД,
		|	ТаблицаДокумента.СтоимостьБезНДСДоИзменения КАК СтоимостьБезНалогаДоИзменения,
		|	ТаблицаДокумента.СтоимостьБезНДСПослеИзменения КАК СтоимостьБезНалогаПослеИзменения
		|ИЗ
		|	СведенияОПрослеживаемостиПредварительная КАК СведенияОПрослеживаемостиПредварительная
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДокумента КАК ТаблицаДокумента
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
		|			ПО ТаблицаДокумента.НоменклатураКодТНВЭД = КлассификаторТНВЭД.Ссылка
		|		ПО СведенияОПрослеживаемостиПредварительная.Номенклатура = ТаблицаДокумента.Товар
		|			И СведенияОПрослеживаемостиПредварительная.РНПТ = ТаблицаДокумента.РНПТ
		|			И (СведенияОПрослеживаемостиПредварительная.СтранаПроисхождения = ЕСТЬNULL(ТаблицаДокумента.СтранаПроисхождения, ТаблицаДокумента.СтранаПроисхожденияДо))
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаДокумента.Товар,
		|	СведенияОПрослеживаемостиПредварительная.НомерТовара,
		|	ТаблицаДокумента.ЕдиницаИзмерения,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ТоварКодТНВЭД = ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
		|			ТОГДА ""--""
		|		ИНАЧЕ ТаблицаДокумента.ТоварКодТНВЭД
		|	КОНЕЦ,
		|	ТаблицаДокумента.СтранаПроисхождения,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.ТоварКодТНВЭДДоИзменения = ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
		|			ТОГДА ""--""
		|		ИНАЧЕ ТаблицаДокумента.ТоварКодТНВЭДДоИзменения
		|	КОНЕЦ,
		|	ТаблицаДокумента.СтавкаНДСПослеИзменения,
		|	ТаблицаДокумента.ЦенаДоИзменения,
		|	ТаблицаДокумента.ЦенаПослеИзменения,
		|	ТаблицаДокумента.СтранаПроисхожденияДо,
		|	ВЫБОР
		|		КОГДА ТаблицаДокумента.КоличествоПослеИзменения = 0
		|			ТОГДА ТаблицаДокумента.ЦенаДоИзменения
		|		ИНАЧЕ ТаблицаДокумента.ЦенаПослеИзменения
		|	КОНЕЦ,
		|	ТаблицаДокумента.Ссылка,
		|	ТаблицаДокумента.ИдентификаторСтроки,
		|	ЕСТЬNULL(КлассификаторТНВЭД.ЕдиницаИзмерения.Наименование, ""шт""),
		|	ЕСТЬNULL(КлассификаторТНВЭД.ЕдиницаИзмерения.Код, ""796""),
		|	ТаблицаДокумента.НомерГТД,
		|	ТаблицаДокумента.СтоимостьБезНДСДоИзменения,
		|	ТаблицаДокумента.СтоимостьБезНДСПослеИзменения";
		
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаСчетФактураВыданныйНаАвансРасшифровкаПлатежа(НомераТаблиц) Экспорт
	
	НомераТаблиц.Вставить("ВТ_РасшифровкаПлатежа", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Ссылка КАК ДокументОснование,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	"""" КАК ИдентификаторГосКонтракта,
	|	Реквизиты.ДоговорКонтрагента.НаименованиеДляСчетаФактурыНаАванс КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Документ.СчетНаОплатуПокупателю.ПустаяСсылка) КАК СчетНаОплату,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетАвансов,
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка) КАК СтавкаНДС,
	|	0 КАК Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияЗадолженности.ПустаяСсылка) КАК СпособПогашенияЗадолженности
	|ПОМЕСТИТЬ РасшифровкаПлатежа
	|ИЗ
	|	Документ.КорректировкаРеализации КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОснование";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

// Возвращает представление документа в заголовке форм.
//
// Параметры:
//   ДокументСсылка - ДокументСсылка.КорректировкаРеализации - документ
//
// Возвращаемое значение:
//   Структура - структура представления:
//    * ПредставлениеДокументаКраткое - Строка - содержит номер и дату
//    * ПредставлениеДокумента        - Строка - содержит название документа, номер и дату
Функция ПолучитьПредставлениеДокумента(ДокументСсылка) Экспорт
	
	ТекстПредставлениеКраткое	= "";
	ТекстПредставление 			= "";
	ТекстОсновноеПредставление	= "Корректировка реализации";
			
	Если ЗначениеЗаполнено(ДокументСсылка) Тогда
		
		РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "ПредставлениеНомера, Дата");
			
		ТекстПредставлениеКраткое = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 от %2'"),
			РеквизитыДокумента.ПредставлениеНомера, Формат(РеквизитыДокумента.Дата, "ДЛФ=Д"));
		ТекстПредставление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 %2'"), ТекстОсновноеПредставление, ТекстПредставлениеКраткое);
					
	Иначе
		ТекстПредставление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1 (создание)'"), ТекстОсновноеПредставление);
	КонецЕсли;
	
	СтруктураПредставления = Новый Структура;
	СтруктураПредставления.Вставить("ПредставлениеДокументаКраткое", ТекстПредставлениеКраткое);
	СтруктураПредставления.Вставить("ПредставлениеДокумента", 		 ТекстПредставление);
	
	Возврат СтруктураПредставления;
	
КонецФункции

#КонецОбласти

// Возвращает текст запроса для отбора документов к печати УПД по релевантной форме.
// Добавлена во все документы, для которых доступна печать УПД.
// Параметры:
// ВерсияПостановленияНДС1137 - см.УчетНДСПереопределяемый.ВерсияПостановленияНДС1137()
// ЕстьПрослеживаемыеТовары - Булево - признак того, что в документе есть прослеживаемый товар.
//
// Возвращаемое значение: 
// ТекстЗапроса - строка с необходимым текстом запроса.
//
Функция ТекстЗапросаПечатьУниверсальныхПередаточныхДокументов(ВерсияПостановленияНДС1137 = Неопределено, ЕстьПрослеживаемыеТовары = Ложь) Экспорт
	
	ОтбиратьВсеСФ1137 = Ложь;
	Если ВерсияПостановленияНДС1137 = Неопределено Тогда
		ОтбиратьВсеСФ1137 = Истина;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Документ.СчетФактураВыданный.ПустаяСсылка) КАК СчетФактура,
	|	КорректировкаРеализации.ДатаИсходногоДокумента КАК Дата,
	|	КорректировкаРеализации.НомерИсходногоДокумента КАК Номер,
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаФактуры,
	|	КорректировкаРеализации.Руководитель КАК Руководитель,
	|	КорректировкаРеализации.ГлавныйБухгалтер КАК ГлавныйБухгалтер,
	|	ИСТИНА КАК СчетФактураБезНДС,
	|	ИСТИНА КАК Исправление,
	|	КорректировкаРеализации.НомерИсправления КАК НомерИсправления,
	|	КорректировкаРеализации.Дата КАК ДатаИсправления,
	|	ИСТИНА КАК УдалитьПрефиксыИзНомера,
	|	ИСТИНА КАК ЭтоСчетФактураВыданный,
	|	ИСТИНА КАК ВыводитьСуммуБезНДС,
	|	КорректировкаРеализации.Ссылка КАК ДокументОснование,
	|	1 КАК НомерСтроки,
	|	КорректировкаРеализации.Контрагент КАК Контрагент,
	|	КорректировкаРеализации.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ГосКонтракты.Код, """") КАК ИдентификаторГосКонтракта,
	|	"""" КАК КППСчетаФактуры,
	|	"""" КАК КПППродавца,
	|	КорректировкаРеализации.Дата КАК ДатаСведений,
	|	КорректировкаРеализации.ЭтапГосконтрактаЕИС КАК ЭтапГосконтрактаЕИС
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			КорректировкаРеализацииСведенияПрослеживаемости.Ссылка КАК Ссылка,
	|			ИСТИНА КАК ЕстьПрослеживаемыеТовары
	|		ИЗ
	|			Документ.КорректировкаРеализации.СведенияПрослеживаемости КАК КорректировкаРеализацииСведенияПрослеживаемости
	|		ГДЕ
	|			КорректировкаРеализацииСведенияПрослеживаемости.Ссылка В(&МассивОбъектов)) КАК ПрослеживаемыеТовары
	|		ПО КорректировкаРеализации.Ссылка = ПрослеживаемыеТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГосКонтракты КАК ГосКонтракты
	|			ПО ДоговорыКонтрагентов.ГосударственныйКонтракт = ГосКонтракты.Ссылка
	|		ПО КорректировкаРеализации.ДоговорКонтрагента = ДоговорыКонтрагентов.Ссылка
	|ГДЕ
	|	КорректировкаРеализации.Ссылка В(&МассивОбъектов)
	|	И КорректировкаРеализации.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки)
	|	И КорректировкаРеализации.Дата > &УсловиеПоДате
	|	И &ЕстьПрослеживаемыеТовары";
	
	Если ОтбиратьВсеСФ1137 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
				">= &НачалоПримененияПостановления1137");
	ИначеЕсли ВерсияПостановленияНДС1137 = 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			"< &НачалоПримененияПостановления1137");
	ИначеЕсли ВерсияПостановленияНДС1137 >= 1 И ВерсияПостановленияНДС1137 <= 3 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			">= &НачалоПримененияПостановления1137");
	ИначеЕсли ВерсияПостановленияНДС1137 = 4 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			">= ДАТАВРЕМЯ(2017,10,1)");
	ИначеЕсли ВерсияПостановленияНДС1137 = 5 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			">= ДАТАВРЕМЯ(2021,7,1)");
	ИначеЕсли ВерсияПостановленияНДС1137 = 6 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			">= ДАТАВРЕМЯ(2023,10,1)");
	КонецЕсли;
	
	Если ОтбиратьВсеСФ1137 Тогда
		// Не накладываем отбор.
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЕстьПрослеживаемыеТовары", "ИСТИНА");
	ИначеЕсли ЕстьПрослеживаемыеТовары Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЕстьПрослеживаемыеТовары", "ЕСТЬNULL(ПрослеживаемыеТовары.ЕстьПрослеживаемыеТовары, ЛОЖЬ) = ИСТИНА");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЕстьПрослеживаемыеТовары", "ЕСТЬNULL(ПрослеживаемыеТовары.ЕстьПрослеживаемыеТовары, ЛОЖЬ) = ЛОЖЬ");
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

// Возвращает текст запроса для отбора документов к печати УКД по релевантной форме.
// Добавлена во все документы, для которых доступна печать УКД.
// Параметры:
// ВерсияПостановленияНДС1137 - см.УчетНДСПереопределяемый.ВерсияПостановленияНДС1137()
// ЕстьПрослеживаемыеТовары - Булево - признак того, что в документе есть прослеживаемый товар.
//
// Возвращаемое значение: 
// ТекстЗапроса - строка с необходимым текстом запроса.
//
Функция ТекстЗапросаПечатьУниверсальныхКорректировочныхДокументов(ВерсияПостановленияНДС1137 = Неопределено, ЕстьПрослеживаемыеТовары = Ложь) Экспорт
	
	ОтбиратьВсеСФ1137 = Ложь;
	Если ВерсияПостановленияНДС1137 = Неопределено Тогда
		ОтбиратьВсеСФ1137 = Истина;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СведенияПрослеживаемостиДо.Количество, 0) - ЕСТЬNULL(СведенияПрослеживаемостиПосле.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(СведенияПрослеживаемостиДо.Сумма, 0) - ЕСТЬNULL(СведенияПрослеживаемостиПосле.Сумма, 0) КАК Сумма,
	|	СведенияПрослеживаемостиПосле.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	СведенияПрослеживаемостиПосле.Ссылка КАК Ссылка,
	|	ИСТИНА КАК ТоварыВРаботах
	|ПОМЕСТИТЬ ВТ_ИзмененияПоСведениямПрослеживаемости
	|ИЗ
	|	Документ.КорректировкаРеализации.СведенияПрослеживаемости КАК СведенияПрослеживаемостиДо
	|		ПОЛНОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.СведенияПрослеживаемости КАК СведенияПрослеживаемостиПосле
	|		ПО СведенияПрослеживаемостиДо.ИдентификаторСтроки = СведенияПрослеживаемостиПосле.ИдентификаторСтроки
	|			И СведенияПрослеживаемостиДо.РНПТ = СведенияПрослеживаемостиПосле.РНПТ
	|			И СведенияПрослеживаемостиДо.Номенклатура = СведенияПрослеживаемостиПосле.Номенклатура
	|ГДЕ
	|	СведенияПрослеживаемостиДо.ЭтоСтрокаСИсходнымиРНПТ = ИСТИНА
	|	И СведенияПрослеживаемостиПосле.ЭтоСтрокаСИсходнымиРНПТ = ЛОЖЬ
	|	И СведенияПрослеживаемостиДо.Ссылка В(&МассивОбъектов)
	|	И СведенияПрослеживаемостиПосле.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА КорректировкаРеализации.ИсходныйДокументРеализации.Дата < ДАТАВРЕМЯ(2023, 10, 1)
	|				И (ВТ_ИзмененияПоСведениямПрослеживаемости.Количество <> 0
	|					ИЛИ ВТ_ИзмененияПоСведениямПрослеживаемости.Сумма <> 0)
	|			ТОГДА ИСТИНА
	|		КОГДА КорректировкаРеализации.ИсходныйДокументРеализации.Дата >= ДАТАВРЕМЯ(2023, 10, 1)
	|				И КорректировкаРеализацииУслуги.Сумма - КорректировкаРеализацииУслуги.СуммаДоИзменения <> 0
	|			ТОГДА ЕСТЬNULL(ВТ_ИзмененияПоСведениямПрослеживаемости.ТоварыВРаботах, ЛОЖЬ)
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьПрослеживаемыеТовары,
	|	КорректировкаРеализацииУслуги.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_ПрослеживаемыеТовары
	|ИЗ
	|	Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализацииУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИзмененияПоСведениямПрослеживаемости КАК ВТ_ИзмененияПоСведениямПрослеживаемости
	|		ПО КорректировкаРеализацииУслуги.Ссылка = ВТ_ИзмененияПоСведениямПрослеживаемости.Ссылка
	|			И КорректировкаРеализацииУслуги.ИдентификаторСтроки = ВТ_ИзмененияПоСведениямПрослеживаемости.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ПО КорректировкаРеализацииУслуги.Ссылка = КорректировкаРеализации.Ссылка
	|ГДЕ
	|	КорректировкаРеализацииУслуги.Ссылка В(&МассивОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкаРеализацииТовары.ПрослеживаемыйТовар,
	|	КорректировкаРеализацииТовары.Ссылка
	|ИЗ
	|	Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
	|ГДЕ
	|	КорректировкаРеализацииТовары.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Документ.СчетФактураВыданный.ПустаяСсылка) КАК СчетФактура,
	|	КорректировкаРеализации.Дата КАК Дата,
	|	КорректировкаРеализации.Номер КАК Номер,
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаФактуры,
	|	КорректировкаРеализации.Руководитель КАК Руководитель,
	|	КорректировкаРеализации.ГлавныйБухгалтер КАК ГлавныйБухгалтер,
	|	ИСТИНА КАК СчетФактураБезНДС,
	|	ЛОЖЬ КАК Исправление,
	|	КорректировкаРеализации.НомерИсправления КАК НомерИсправления,
	|	КорректировкаРеализации.Дата КАК ДатаИсправления,
	|	""--"" КАК НомерИсправленияКорректировочного,
	|	""--"" КАК ДатаИсправленияКорректировочного,
	|	ИСТИНА КАК УдалитьПрефиксыИзНомера,
	|	ИСТИНА КАК ЭтоСчетФактураВыданный,
	|	ИСТИНА КАК ВыводитьСуммуБезНДС,
	|	КорректировкаРеализации.Ссылка КАК ДокументОснование,
	|	1 КАК НомерСтроки,
	|	КорректировкаРеализации.Контрагент КАК Контрагент,
	|	КорректировкаРеализации.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ГосКонтракты.Код, """") КАК ИдентификаторГосКонтракта,
	|	"""" КАК КППКонтрагента,
	|	"""" КАК КПППродавца,
	|	КорректировкаРеализации.Дата КАК ДатаСведений,
	|	КорректировкаРеализации.ИсправляемыйДокументРеализации КАК ИсправляемыйДокументРеализации
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПрослеживаемыеТовары КАК ВТ_ПрослеживаемыеТовары
	|		ПО КорректировкаРеализации.Ссылка = ВТ_ПрослеживаемыеТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГосКонтракты КАК ГосКонтракты
	|			ПО ДоговорыКонтрагентов.ГосударственныйКонтракт = ГосКонтракты.Ссылка
	|		ПО КорректировкаРеализации.ДоговорКонтрагента = ДоговорыКонтрагентов.Ссылка
	|ГДЕ
	|	КорректировкаРеализации.Ссылка В(&МассивОбъектов)
	|	И КорректировкаРеализации.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение)
	|	И КорректировкаРеализации.Дата > &УсловиеПоДате
	|	И &ЕстьПрослеживаемыеТовары";
	
	Если ОтбиратьВсеСФ1137 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
				">= &НачалоПримененияПостановления1137");
	ИначеЕсли ВерсияПостановленияНДС1137 = 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			"< &НачалоПримененияПостановления1137");
	ИначеЕсли ВерсияПостановленияНДС1137 >= 1 И ВерсияПостановленияНДС1137 <= 3 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			"МЕЖДУ &НачалоПримененияПостановления1137 И ДАТАВРЕМЯ(2017,09,30,23,59,59)");
	ИначеЕсли ВерсияПостановленияНДС1137 = 4 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			"МЕЖДУ ДАТАВРЕМЯ(2017,10,1) И ДАТАВРЕМЯ(2021,06,30,23,59,59)");
	ИначеЕсли ВерсияПостановленияНДС1137 = 5 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			"МЕЖДУ ДАТАВРЕМЯ(2021,7,1) И ДАТАВРЕМЯ(2023,09,30,23,59,59)");
	ИначеЕсли ВерсияПостановленияНДС1137 = 6 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			">= ДАТАВРЕМЯ(2023,10,1)");
	КонецЕсли;
	
	Если ОтбиратьВсеСФ1137 Тогда
		// Не накладываем отбор.
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЕстьПрослеживаемыеТовары", "ИСТИНА");
	ИначеЕсли ЕстьПрослеживаемыеТовары Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЕстьПрослеживаемыеТовары", "ЕСТЬNULL(ВТ_ПрослеживаемыеТовары.ЕстьПрослеживаемыеТовары, ЛОЖЬ) = ИСТИНА");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЕстьПрослеживаемыеТовары", "ЕСТЬNULL(ВТ_ПрослеживаемыеТовары.ЕстьПрослеживаемыеТовары, ЛОЖЬ) = ЛОЖЬ");
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаДанныеДляОбновленияЦенДокументов() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫРАЗИТЬ(КорректировкаРеализацииТовары.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	КорректировкаРеализацииТовары.Цена КАК Цена,
	|	&Валюта КАК Валюта,
	|	&СпособЗаполненияЦены,
	|	&ЦенаВключаетНДС
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
	|ГДЕ
	|	КорректировкаРеализацииТовары.Ссылка = &Ссылка
	|	И КорректировкаРеализацииТовары.Номенклатура ССЫЛКА Справочник.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаРеализацииУслуги.Номенклатура,
	|	КорректировкаРеализацииУслуги.Цена,
	|	&Валюта,
	|	&СпособЗаполненияЦены,
	|	&ЦенаВключаетНДС
	|ИЗ
	|	Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализацииУслуги
	|ГДЕ
	|	КорректировкаРеализацииУслуги.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаРеализацииАгентскиеУслуги.Номенклатура,
	|	КорректировкаРеализацииАгентскиеУслуги.Цена,
	|	&Валюта,
	|	&СпособЗаполненияЦены,
	|	&ЦенаВключаетНДС
	|ИЗ
	|	Документ.КорректировкаРеализации.АгентскиеУслуги КАК КорректировкаРеализацииАгентскиеУслуги
	|ГДЕ
	|	КорректировкаРеализацииАгентскиеУслуги.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Цена,
	|	Валюта";
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОбновитьРеквизитыСвязанныхДокументовКорректировки(ДокументОбъект, Отказ) Экспорт

	Если НЕ ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыСсылки = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОбъект.Ссылка, "Номер, Дата");
	РеквизитыСсылки.Вставить("Дата", 			НачалоДня(РеквизитыСсылки.Дата));
	РеквизитыСсылки.Вставить("Ссылка", 			ДокументОбъект.Ссылка);
	
	РеквизитыОбъекта = Новый Структура;
	РеквизитыОбъекта.Вставить("Номер", 			ДокументОбъект.Номер);
	РеквизитыОбъекта.Вставить("Дата", 			НачалоДня(ДокументОбъект.Дата));
	
	Если РеквизитыСсылки.Номер <> РеквизитыОбъекта.Номер 
		ИЛИ	РеквизитыСсылки.Дата <> РеквизитыОбъекта.Дата Тогда 
		
		ОбновитьРеквизитыДокументовКорректировкиРеализации(РеквизитыСсылки, РеквизитыОбъекта, Отказ);
		
	КонецЕсли;   	
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ПолучитьПервичныйДокументРеализации(ТекущийДокументРеализации)
	ПервичныйДокументРеализации = ТекущийДокументРеализации;
	
	Если ТипЗнч(ПервичныйДокументРеализации) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		ПервичныйДокументРеализации = УчетНДСПереопределяемый.ПолучитьИсправляемыйДокументРеализации(
			ПервичныйДокументРеализации, Истина);
	КонецЕсли; 
	
	Возврат ПервичныйДокументРеализации;
КонецФункции

Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	МассивРеквизитов = Новый Массив();
	МассивРеквизитов.Добавить("УдалитьУчитыватьНДС");
	
	Возврат МассивРеквизитов;
	
КонецФункции

Функция СформироватьПараметрыИсправленияКорректировочногоДокумента(ВидОперации, ДокументРеализации, ИсправляемыйДокументРеализации) Экспорт
	
	СтруктураПараметров = Новый Структура;
	
	Если НЕ ЗначениеЗаполнено(ДокументРеализации) ИЛИ НЕ ЗначениеЗаполнено(ИсправляемыйДокументРеализации) Тогда
		
		Если ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки Тогда
			СтруктураПараметров.Вставить("НомерИсправления", 1);
		Иначе
			СтруктураПараметров.Вставить("НомерИсправления", Неопределено);
		КонецЕсли;

		Возврат СтруктураПараметров;
		
	КонецЕсли;                                                                                            
	
	Если НЕ ЗначениеЗаполнено(ВидОперации)  
		ИЛИ ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение Тогда
		
		Если ТипЗнч(ДокументРеализации) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда 
			
			РеквизитыИсправляемогоДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ИсправляемыйДокументРеализации, "Номер, Дата");
			РеквизитыДокументаРеализации 	= ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументРеализации, "Номер, Дата, НомерИсправления");
			
			СтруктураПараметров.Вставить("НомерИсходногоДокумента", 			
				ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыИсправляемогоДокумента.Номер, Истина, Ложь));
			СтруктураПараметров.Вставить("ДатаИсходногоДокумента", 				РеквизитыИсправляемогоДокумента.Дата);
			СтруктураПараметров.Вставить("НомерИсправленияИсходногоДокумента", 	РеквизитыДокументаРеализации.НомерИсправления);
			СтруктураПараметров.Вставить("ДатаИсправленияИсходногоДокумента", 	РеквизитыДокументаРеализации.Дата);
			
			СтруктураПараметров.Вставить("НомерИсправления", 								Неопределено);
			СтруктураПараметров.Вставить("НомерИсправляемогоКорректировочногоДокумента", 	Неопределено);
			СтруктураПараметров.Вставить("ДатаИсправляемогоКорректировочногоДокумента", 	Неопределено);
			
		Иначе
			
			РеквизитыДокументаРеализации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументРеализации, "Номер, Дата");
			
			СтруктураПараметров.Вставить("НомерИсходногоДокумента", 	
				ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыДокументаРеализации.Номер, Истина, Ложь));
			СтруктураПараметров.Вставить("ДатаИсходногоДокумента", РеквизитыДокументаРеализации.Дата);
			
			СтруктураПараметров.Вставить("НомерИсправления", 								Неопределено);
			СтруктураПараметров.Вставить("НомерИсправляемогоКорректировочногоДокумента", 	Неопределено);
			СтруктураПараметров.Вставить("ДатаИсправляемогоКорректировочногоДокумента", 	Неопределено);
			СтруктураПараметров.Вставить("НомерИсправленияИсходногоДокумента", 				Неопределено);
			СтруктураПараметров.Вставить("ДатаИсправленияИсходногоДокумента", 				Неопределено);
			
		КонецЕсли;
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки Тогда
		
		Если ТипЗнч(ДокументРеализации) = Тип("ДокументСсылка.КорректировкаРеализации") И
			ТипЗнч(ИсправляемыйДокументРеализации) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда 
			
			РеквизитыДокументаРеализации 	= ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументРеализации, "Номер, Дата, НомерИсправления");
			РеквизитыИсправляемогоДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ИсправляемыйДокументРеализации, "Номер, Дата, 
				|НомерИсходногоДокумента, ДатаИсходногоДокумента, НомерИсправленияИсходногоДокумента, ДатаИсправленияИсходногоДокумента");
			
			СтруктураПараметров.Вставить("НомерИсправляемогоКорректировочногоДокумента", 
				ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыИсправляемогоДокумента.Номер, Истина, Ложь));
			СтруктураПараметров.Вставить("ДатаИсправляемогоКорректировочногоДокумента",  РеквизитыИсправляемогоДокумента.Дата);
			
			СтруктураПараметров.Вставить("НомерИсходногоДокумента", 			РеквизитыИсправляемогоДокумента.НомерИсходногоДокумента);
			СтруктураПараметров.Вставить("ДатаИсходногоДокумента", 				РеквизитыИсправляемогоДокумента.ДатаИсходногоДокумента);
			СтруктураПараметров.Вставить("НомерИсправленияИсходногоДокумента", 	РеквизитыИсправляемогоДокумента.НомерИсправленияИсходногоДокумента);
			СтруктураПараметров.Вставить("ДатаИсправленияИсходногоДокумента", 	РеквизитыИсправляемогоДокумента.ДатаИсправленияИсходногоДокумента);
			
			СтруктураПараметров.Вставить("НомерИсправления", 					РеквизитыДокументаРеализации.НомерИсправления + 1);
			
		ИначеЕсли ТипЗнч(ДокументРеализации) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда 
			
			РеквизитыДокументаРеализации 	= ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументРеализации, "Номер, Дата, НомерИсправления, 
				|НомерИсходногоДокумента, ДатаИсходногоДокумента, НомерИсправленияИсходногоДокумента, ДатаИсправленияИсходногоДокумента");
			
			СтруктураПараметров.Вставить("НомерИсправляемогоКорректировочногоДокумента", 	
				ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыДокументаРеализации.Номер, Истина, Ложь));
			СтруктураПараметров.Вставить("ДатаИсправляемогоКорректировочногоДокумента", РеквизитыДокументаРеализации.Дата);
			
			СтруктураПараметров.Вставить("НомерИсходногоДокумента", 			РеквизитыДокументаРеализации.НомерИсходногоДокумента);
			СтруктураПараметров.Вставить("ДатаИсходногоДокумента", 				РеквизитыДокументаРеализации.ДатаИсходногоДокумента);
			СтруктураПараметров.Вставить("НомерИсправленияИсходногоДокумента", 	РеквизитыДокументаРеализации.НомерИсправленияИсходногоДокумента);
			СтруктураПараметров.Вставить("ДатаИсправленияИсходногоДокумента", 	РеквизитыДокументаРеализации.ДатаИсправленияИсходногоДокумента);
			
			СтруктураПараметров.Вставить("НомерИсправления", 					РеквизитыДокументаРеализации.НомерИсправления + 1);
			
		Иначе
			
			РеквизитыДокументаРеализации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументРеализации, "Номер, Дата");
			
			СтруктураПараметров.Вставить("НомерИсходногоДокумента", 	
				ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыДокументаРеализации.Номер, Истина, Ложь));
			СтруктураПараметров.Вставить("ДатаИсходногоДокумента", 							РеквизитыДокументаРеализации.Дата);
			
			СтруктураПараметров.Вставить("НомерИсправления", 								1);
			СтруктураПараметров.Вставить("НомерИсправленияИсходногоДокумента", 				Неопределено);
			СтруктураПараметров.Вставить("ДатаИсправленияИсходногоДокумента", 				Неопределено);
			СтруктураПараметров.Вставить("НомерИсправляемогоКорректировочногоДокумента", 	Неопределено);
			СтруктураПараметров.Вставить("ДатаИсправляемогоКорректировочногоДокумента", 	Неопределено);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтруктураПараметров;
	
КонецФункции

Процедура ОбновитьРеквизитыДокументовКорректировкиРеализации(РеквизитыСсылки, РеквизитыОбъекта, Отказ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИсправляемыйДокументРеализации", РеквизитыСсылки.Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка КАК ДокументСсылка,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализации.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки)
	|				И КорректировкаРеализации.ИсправляемыйДокументРеализации ССЫЛКА Документ.КорректировкаРеализации
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИзменятьРеквизитыИсправляемогоКорректировочногоДокумента,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализации.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИзменятьПредставлениеНомера,
	|	КорректировкаРеализации.НомерИсправления КАК НомерИсправления
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|ГДЕ
	|	КорректировкаРеализации.ИсправляемыйДокументРеализации = &ИсправляемыйДокументРеализации
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	КорректировкаРеализации.НомерИсправления
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК ИсправляемыеДокументыРеализации
	|		ПО КорректировкаРеализации.ИсправляемыйДокументРеализации = ИсправляемыеДокументыРеализации.Ссылка
	|ГДЕ
	|	ИсправляемыеДокументыРеализации.ИсправляемыйДокументРеализации = &ИсправляемыйДокументРеализации
	|	И КорректировкаРеализации.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки)";
	
	// У пользователя может отсуствовать право изменения корректировки реализации, хотя право на документ-основание есть. 
	// Поэтому выполняем изменение реквизитов в привилегированном режиме, чтобы реквизиты зависимого документа 
	// соответствовали реквизитам записываемого основного.
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаСвязанныхДокументов = РезультатЗапроса.Выбрать();
	Пока ВыборкаСвязанныхДокументов.Следующий() Цикл
		
		ДокументКорректировкиОбъект = ВыборкаСвязанныхДокументов.ДокументСсылка.ПолучитьОбъект();	
		
		Если ВыборкаСвязанныхДокументов.ИзменятьРеквизитыИсправляемогоКорректировочногоДокумента Тогда
			ДокументКорректировкиОбъект.НомерИсправляемогоКорректировочногоДокумента = 
				ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыОбъекта.Номер, Истина, Ложь);
			ДокументКорректировкиОбъект.ДатаИсправляемогоКорректировочногоДокумента  = РеквизитыОбъекта.Дата;
		Иначе
			ДокументКорректировкиОбъект.НомерИсходногоДокумента = 
				ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыОбъекта.Номер, Истина, Ложь);
			ДокументКорректировкиОбъект.ДатаИсходногоДокумента 	= РеквизитыОбъекта.Дата;
		КонецЕсли;
		
		Если ВыборкаСвязанныхДокументов.ИзменятьПредставлениеНомера Тогда
			Если ВыборкаСвязанныхДокументов.ИзменятьРеквизитыИсправляемогоКорректировочногоДокумента Тогда
				ДокументКорректировкиОбъект.ПредставлениеНомера = ДокументКорректировкиОбъект.НомерИсправляемогоКорректировочногоДокумента + 
																					" (испр. " + ВыборкаСвязанныхДокументов.НомерИсправления + ")";
			Иначе
				ДокументКорректировкиОбъект.ПредставлениеНомера = ДокументКорректировкиОбъект.НомерИсходногоДокумента + 
																					" (испр. " + ВыборкаСвязанныхДокументов.НомерИсправления + ")";
			КонецЕсли;
		КонецЕсли;
		
		ДокументКорректировкиОбъект.ДополнительныеСвойства.Вставить("ПропуститьОбновлениеРеквизитовВСвязанныхДокументах", Истина);
		
		Попытка
			ДокументКорректировкиОбъект.Записать(?(ДокументКорректировкиОбъект.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
		Исключение
			ШаблонСообщения = НСтр("ru = 'Не удалось записать документ
                                 |%1'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Обновление реквизитов связанных документов'", ОбщегоНазначения.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.Документы.КорректировкаРеализации,
				ДокументКорректировкиОбъект.Ссылка, 
				ТекстСообщения);
			Отказ = Истина;
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ ОБНОВЛЕНИЯ

// Обработчик обновления на версию 3.0.26
//
// Процедура заполняет реквизиты документа: НомерИсправления, НомерИсходногоДокумента, ДатаИсходногоДокумента, НомерИсправляемогоКорректировочногоДокумента
// ДатаИсправляемогоКорректировочногоДокумента, НомерИсправленияИсходногоДокумента, ДатаИсправленияИсходногоДокумента, ПредставлениеНомера
// в тех документах, в которых они не заполнены
// 
Процедура ЗаполнитьРеквизитыИсправленияКорректировкиРеализации() Экспорт
	
	СвойстваИсправления = "НомерИсправления, НомерИсходногоДокумента, ДатаИсходногоДокумента, НомерИсправленияИсходногоДокумента, 
		|ДатаИсправленияИсходногоДокумента, НомерИсправляемогоКорректировочногоДокумента, ДатаИсправляемогоКорректировочногоДокумента, ПредставлениеНомера";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка КАК ДокументСсылка,
	|	КорректировкаРеализации.ВидОперации КАК ВидОперации,
	|	КорректировкаРеализации.ДокументРеализации КАК ДокументРеализации,
	|	ЕСТЬNULL(ПервичныеДанныеКорректировкиРеализации.Номер, """") КАК НомерКорректировки,
	|	ЕСТЬNULL(ПервичныеДанныеКорректировкиРеализации.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаКорректировки,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализации.НомерИсправления = 0
	|				И КорректировкаРеализации.НомерИсходногоДокумента = """"
	|				И КорректировкаРеализации.ДатаИсходногоДокумента = ДАТАВРЕМЯ(1, 1, 1)
	|				И КорректировкаРеализации.НомерИсправляемогоКорректировочногоДокумента = """"
	|				И КорректировкаРеализации.ДатаИсправляемогоКорректировочногоДокумента = ДАТАВРЕМЯ(1, 1, 1)
	|				И КорректировкаРеализации.НомерИсправленияИсходногоДокумента = 0
	|				И КорректировкаРеализации.ДатаИсправленияИсходногоДокумента = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК НеОбрабатыватьДокументКорректировки,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализации.ДокументРеализации ССЫЛКА Документ.КорректировкаРеализации
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЗаполненыРеквизитыИсправления,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализации.ДокументРеализации ССЫЛКА Документ.КорректировкаРеализации
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА КорректировкаРеализации.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки)
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК НомерИсправления,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализации.ДокументРеализации ССЫЛКА Документ.КорректировкаРеализации
	|			ТОГДА КорректировкаРеализации.НомерИсходногоДокумента
	|		ИНАЧЕ ЕСТЬNULL(ПервичныеДанныеДокументаОснования.Номер, """")
	|	КОНЕЦ КАК НомерИсходногоДокумента,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализации.ДокументРеализации ССЫЛКА Документ.КорректировкаРеализации
	|			ТОГДА КорректировкаРеализации.ДатаИсходногоДокумента
	|		ИНАЧЕ ЕСТЬNULL(ПервичныеДанныеДокументаОснования.Дата, ДАТАВРЕМЯ(1, 1, 1))
	|	КОНЕЦ КАК ДатаИсходногоДокумента,
	|	КорректировкаРеализации.НомерИсправленияИсходногоДокумента КАК НомерИсправленияИсходногоДокумента,
	|	КорректировкаРеализации.ДатаИсправленияИсходногоДокумента КАК ДатаИсправленияИсходногоДокумента,
	|	КорректировкаРеализации.НомерИсправляемогоКорректировочногоДокумента КАК НомерИсправляемогоКорректировочногоДокумента,
	|	КорректировкаРеализации.ДатаИсправляемогоКорректировочногоДокумента КАК ДатаИсправляемогоКорректировочногоДокумента,
	|	КорректировкаРеализации.ПредставлениеНомера КАК ПредставлениеНомера
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ПервичныеДанныеКорректировкиРеализации
	|		ПО КорректировкаРеализации.Организация = ПервичныеДанныеКорректировкиРеализации.Организация
	|			И КорректировкаРеализации.Ссылка = ПервичныеДанныеКорректировкиРеализации.Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ПервичныеДанныеДокументаОснования
	|		ПО КорректировкаРеализации.Организация = ПервичныеДанныеДокументаОснования.Организация
	|			И КорректировкаРеализации.ДокументРеализации = ПервичныеДанныеДокументаОснования.Документ
	|ГДЕ
	|	КорректировкаРеализации.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.ПустаяСсылка)
	|	И НЕ КорректировкаРеализации.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаКорректировки,
	|	ДокументСсылка";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
		
	ТаблицаДокументовКорректировки = Результат.Выгрузить();
	ТаблицаДокументовКорректировки.Индексы.Добавить("ДокументСсылка");
	
	// рекурсивная обработка строк таблицы документов корректировки
	Для Каждого СтрокаДокументаКорректировки ИЗ ТаблицаДокументовКорректировки Цикл
		
		Если СтрокаДокументаКорректировки.НеОбрабатыватьДокументКорректировки Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаДокументаКорректировки.ЗаполненыРеквизитыИсправления Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьРеквизитыИсправленияВСтрокеТаблицыДокументовКорректировки(СтрокаДокументаКорректировки, ТаблицаДокументовКорректировки)
		
	КонецЦикла;
	
	Для Каждого СтрокаДокументаКорректировки ИЗ ТаблицаДокументовКорректировки Цикл
		
		Если СтрокаДокументаКорректировки.НеОбрабатыватьДокументКорректировки Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаДокументаКорректировки.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки Тогда
			Если ЗначениеЗаполнено(СтрокаДокументаКорректировки.НомерИсправляемогоКорректировочногоДокумента) 
				И ЗначениеЗаполнено(СтрокаДокументаКорректировки.ДатаИсправляемогоКорректировочногоДокумента) Тогда
				СтрокаДокументаКорректировки.ПредставлениеНомера = СтрокаДокументаКорректировки.НомерИсправляемогоКорректировочногоДокумента + 
					" (испр. " + СтрокаДокументаКорректировки.НомерИсправления + ")";
			Иначе
				СтрокаДокументаКорректировки.ПредставлениеНомера = СтрокаДокументаКорректировки.НомерИсходногоДокумента + 
					" (испр. " + СтрокаДокументаКорректировки.НомерИсправления + ")";
			КонецЕсли;
		Иначе
			СтрокаДокументаКорректировки.ПредставлениеНомера = СтрокаДокументаКорректировки.НомерКорректировки;		
		КонецЕсли;
		
		ОбрабатываемыйДокумент = СтрокаДокументаКорректировки.ДокументСсылка;
			
		ОбрабатываемыйОбъект = ОбрабатываемыйДокумент.ПолучитьОбъект();
		ЗаполнитьЗначенияСвойств(ОбрабатываемыйОбъект, СтрокаДокументаКорректировки, СвойстваИсправления);
		ОбрабатываемыйОбъект.ОбменДанными.Загрузка = Истина;
		ОбрабатываемыйОбъект.ДополнительныеСвойства.Вставить("ПропуститьОбновлениеРеквизитовВСвязанныхДокументах", Истина);
		
		НачатьТранзакцию();
		
		Попытка
			ОбрабатываемыйОбъект.Записать();
		Исключение
			ШаблонСообщения	= НСтр("ru = 'Не удалось записать документ
                                    |%1'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Ошибка, 
				Метаданные.Документы.КорректировкаРеализации,
				ОбрабатываемыйДокумент, 
				ТекстСообщения);
			ОтменитьТранзакцию();
		КонецПопытки;
		
		ЗафиксироватьТранзакцию();
		
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьРеквизитыИсправленияВСтрокеТаблицыДокументовКорректировки(СтрокаТаблицы, ТаблицаДокументов)

	Если СтрокаТаблицы.ЗаполненыРеквизитыИсправления = Истина Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаДокументаОснования = ТаблицаДокументов.Найти(СтрокаТаблицы.ДокументРеализации, "ДокументСсылка");
	Если СтрокаДокументаОснования <> Неопределено Тогда
		
		Если СтрокаДокументаОснования.ЗаполненыРеквизитыИсправления Тогда
			
			Если СтрокаТаблицы.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение Тогда
				
				Если СтрокаДокументаОснования.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение Тогда 
					СтрокаТаблицы.НомерИсходногоДокумента = СтрокаДокументаОснования.НомерКорректировки;
					СтрокаТаблицы.ДатаИсходногоДокумента  = СтрокаДокументаОснования.ДатаКорректировки;
				ИначеЕсли ЗначениеЗаполнено(СтрокаДокументаОснования.НомерИсправляемогоКорректировочногоДокумента) 
					И ЗначениеЗаполнено(СтрокаДокументаОснования.ДатаИсправляемогоКорректировочногоДокумента) Тогда
					СтрокаТаблицы.НомерИсходногоДокумента = СтрокаДокументаОснования.НомерИсправляемогоКорректировочногоДокумента;
					СтрокаТаблицы.ДатаИсходногоДокумента  = СтрокаДокументаОснования.ДатаИсправляемогоКорректировочногоДокумента;
				Иначе
					СтрокаТаблицы.НомерИсходногоДокумента = СтрокаДокументаОснования.НомерИсходногоДокумента;
					СтрокаТаблицы.ДатаИсходногоДокумента  = СтрокаДокументаОснования.ДатаИсходногоДокумента;
				КонецЕсли;				
				
				СтрокаТаблицы.НомерИсправленияИсходногоДокумента 	= СтрокаДокументаОснования.НомерИсправления;
				СтрокаТаблицы.ДатаИсправленияИсходногоДокумента 	= СтрокаДокументаОснования.ДатаКорректировки;

				СтрокаТаблицы.НомерИсправления 								= 0;
				СтрокаТаблицы.НомерИсправляемогоКорректировочногоДокумента 	= "";
				СтрокаТаблицы.ДатаИсправляемогоКорректировочногоДокумента  	= Дата('00010101000000');
				
			ИначеЕсли СтрокаТаблицы.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки Тогда
				
				СтрокаТаблицы.НомерИсправления = СтрокаДокументаОснования.НомерИсправления + 1;
				
				Если СтрокаДокументаОснования.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение Тогда
					СтрокаТаблицы.НомерИсправляемогоКорректировочногоДокумента 	= СтрокаДокументаОснования.НомерКорректировки;
					СтрокаТаблицы.ДатаИсправляемогоКорректировочногоДокумента  	= СтрокаДокументаОснования.ДатаКорректировки;
				Иначе
					СтрокаТаблицы.НомерИсправляемогоКорректировочногоДокумента 	= СтрокаДокументаОснования.НомерИсправляемогоКорректировочногоДокумента;
					СтрокаТаблицы.ДатаИсправляемогоКорректировочногоДокумента  	= СтрокаДокументаОснования.ДатаИсправляемогоКорректировочногоДокумента;
				КонецЕсли;
				
				СтрокаТаблицы.НомерИсходногоДокумента 			 			= СтрокаДокументаОснования.НомерИсходногоДокумента;
				СтрокаТаблицы.ДатаИсходногоДокумента 			 			= СтрокаДокументаОснования.ДатаИсходногоДокумента;
				СтрокаТаблицы.НомерИсправленияИсходногоДокумента 			= СтрокаДокументаОснования.НомерИсправленияИсходногоДокумента;
				СтрокаТаблицы.ДатаИсправленияИсходногоДокумента  			= СтрокаДокументаОснования.ДатаИсправленияИсходногоДокумента;
				
			КонецЕсли;
			
			СтрокаТаблицы.ЗаполненыРеквизитыИсправления = Истина;	
			
		Иначе
			// рекурсивный вызов
			ЗаполнитьРеквизитыИсправленияВСтрокеТаблицыДокументовКорректировки(СтрокаДокументаОснования, ТаблицаДокументов);
		КонецЕсли;	
		
	Иначе
		СтрокаТаблицы.ЗаполненыРеквизитыИсправления = Истина;	
	КонецЕсли;
	
КонецПроцедуры

// Обработчик обновления на версию 3.0.36.18
Процедура УстановитьРеквизитКорректироватьНДС() Экспорт
	
	Запрос = Новый Запрос;
	//Возможно, обновление уже выполнено
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КорректировкаРеализации.Ссылка КАК ДокументСсылка
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|ГДЕ
	|	КорректировкаРеализации.КорректироватьНДС";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка КАК ДокументСсылка
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|ГДЕ
	|	НЕ КорректировкаРеализации.КорректироватьНДС";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбрабатываемыйОбъект = Выборка.ДокументСсылка.ПолучитьОбъект();
		ОбрабатываемыйОбъект.КорректироватьНДС = Истина;
		ОбрабатываемыйОбъект.ОбменДанными.Загрузка = Истина;
		ОбрабатываемыйОбъект.ДополнительныеСвойства.Вставить("ПропуститьОбновлениеРеквизитовВСвязанныхДокументах", Истина);
		
		НачатьТранзакцию();
		
		Попытка
			ОбрабатываемыйОбъект.Записать();
		Исключение
			ШаблонСообщения	= НСтр("ru = 'Не удалось записать документ
                                    |%1'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Ошибка, 
				Метаданные.Документы.КорректировкаРеализации,
				Выборка.ДокументСсылка, 
				ТекстСообщения);
			ОтменитьТранзакцию();
		КонецПопытки;
		
		ЗафиксироватьТранзакцию();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьРеквизитИсходныйДокумент() Экспорт
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка,
	|	КорректировкаРеализации.ДокументРеализации
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|ГДЕ
	|	КорректировкаРеализации.ИсходныйДокументРеализации В(&ПустаяСсылка)";
	
	МассивПустаяСсылка = Новый Массив;
	МассивПустаяСсылка.Добавить(Неопределено);
	
	ОписаниеТиповРеквизита = Метаданные.Документы.КорректировкаРеализации.Реквизиты.ИсходныйДокументРеализации.Тип;
	
	Для каждого ТипДокумента Из ОписаниеТиповРеквизита.Типы() Цикл
		ДокументСсылка = Новый(ТипДокумента);
		МассивПустаяСсылка.Добавить(ДокументСсылка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ПустаяСсылка", МассивПустаяСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если НЕ ЗначениеЗаполнено(Выборка.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.ИсходныйДокументРеализации = 
			УчетНДСПереопределяемый.ПолучитьИсправляемыйДокументРеализации(Выборка.ДокументРеализации, Истина);
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
		
	КонецЦикла;
КонецПроцедуры
 
// ПОДГОТОВКА ПАРАМЕТРОВ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ, ДоговорДляОтложенногоПроведения = Неопределено) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	ЭтоОтложенноеПроведение = ЗначениеЗаполнено(ДоговорДляОтложенногоПроведения);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	РасчетКорректировокСУчетомРекомендацийПоНДС = УчетВзаиморасчетов.ПрименяетсяРасчетКорректировокВВалютеПоКурсуНаДатуОтгрузки(Реквизиты.Организация, Реквизиты.Период);
	
	// При корректировке счета-фактуры, перевыставленного комитенту по договору комиссии по закупке, движения не нужны
	ДокументРеализацииСсылка = УчетНДСПереопределяемый.ПолучитьИсправляемыйДокументРеализации(
		Реквизиты.ДокументРеализации, Истина);
	Если Реквизиты.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентомНаЗакупку
		И ТипЗнч(ДокументРеализацииСсылка) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
		РеквизитыСФ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументРеализацииСсылка, "Контрагент, Продавец, ДокументОснование");
		Если ТипЗнч(РеквизитыСФ.ДокументОснование) = Тип("ДокументСсылка.ОтчетКомитентуОПродажах")
			И ЗначениеЗаполнено(РеквизитыСФ.Продавец) Тогда
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ (Реквизиты.ЕстьТовары или Реквизиты.ЕстьУслуги или Реквизиты.ЕстьАгентскиеУслуги) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если НЕ (Реквизиты.КорректироватьБУиНУ или Реквизиты.КорректироватьНДС) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	НомераТаблиц = Новый Структура;
	
	Реквизиты.Вставить("ВалютаРеглУчета", ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	Реквизиты.Вставить("РасчетыВВалюте",  Реквизиты.ВалютаВзаиморасчетов <> Реквизиты.ВалютаРеглУчета);
	Реквизиты.Вставить("ЭтоДоговорСКомиссионером", ТипЗнч(ДокументРеализацииСсылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") 
		И Реквизиты.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером);
	Реквизиты.Вставить("ЭтоОтложенноеПроведение", ЭтоОтложенноеПроведение);
	Реквизиты.Вставить("РасчетКорректировокСУчетомРекомендацийПоНДС", РасчетКорректировокСУчетомРекомендацийПоНДС);
	Реквизиты.Вставить("ИсходныйДокументРеализации", ДокументРеализацииСсылка);
	
	Запрос.УстановитьПараметр("ВалютаРеглУчета",  Реквизиты.ВалютаРеглУчета);
	Запрос.УстановитьПараметр("РасчетыВВалюте",   Реквизиты.РасчетыВВалюте);
	Запрос.УстановитьПараметр("СуммаВключаетНДС", Реквизиты.СуммаВключаетНДС);
	Запрос.УстановитьПараметр("ЕстьТовары", 	  Реквизиты.ЕстьТовары);
	Запрос.УстановитьПараметр("ЭтоДоговорСКомиссионером", Реквизиты.ЭтоДоговорСКомиссионером);
	
	Запрос.УстановитьПараметр("СчетаТоваровКомитентов", 
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ТоварыПринятыеНаКомиссию));
	
	Если Реквизиты.ЭтоДоговорСКомиссионером Тогда
		Запрос.УстановитьПараметр("ИспользоватьСчет45", Истина);
		Запрос.УстановитьПараметр("ВидКорСубконто1",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
		Запрос.УстановитьПараметр("ВидКорСубконто2",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Иначе
		Запрос.УстановитьПараметр("ИспользоватьСчет45", Ложь);
		Запрос.УстановитьПараметр("ВидКорСубконто1",    1);
		Запрос.УстановитьПараметр("ВидКорСубконто2",    Неопределено);
	КонецЕсли;
	
	ДанныеДокументаРеализацииСсылка = Новый Структура(
		"Дата,Номер,СчетУчетаРасчетовСКонтрагентом,СчетУчетаРасчетовПоАвансам,ВидОперации",
		'00010101',"", Неопределено, Неопределено, Неопределено);
	Если ЗначениеЗаполнено(ДокументРеализацииСсылка) Тогда
		МетаданныеДокументаРеализации = ДокументРеализацииСсылка.Метаданные();
		ЕстьСчетРасчетов = ОбщегоНазначения.ЕстьРеквизитОбъекта("СчетУчетаРасчетовСКонтрагентом", МетаданныеДокументаРеализации);
		ЕстьСчетАвансов  = ОбщегоНазначения.ЕстьРеквизитОбъекта("СчетУчетаРасчетовПоАвансам", МетаданныеДокументаРеализации);
		ЕстьВидОперации  = ОбщегоНазначения.ЕстьРеквизитОбъекта("ВидОперации", МетаданныеДокументаРеализации);
		СписокРеквизитов = "Дата, Номер" 
			+ ?(ЕстьСчетРасчетов, ",СчетУчетаРасчетовСКонтрагентом", "")
			+ ?(ЕстьСчетАвансов, ",СчетУчетаРасчетовПоАвансам", "")
			+ ?(ЕстьВидОперации, ",ВидОперации", "");
		РеквизитыРеализации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументРеализацииСсылка, СписокРеквизитов);
		ЗаполнитьЗначенияСвойств(ДанныеДокументаРеализацииСсылка, РеквизитыРеализации);
	КонецЕсли;
	Реквизиты.Вставить("ВидОперацииРеализации", ДанныеДокументаРеализацииСсылка.ВидОперации);
	Реквизиты.Вставить("ДатаДокументаРеализации", ДанныеДокументаРеализацииСсылка.Дата);
	Реквизиты.Вставить("ПлательщикЕНВД", УчетнаяПолитика.ПлательщикЕНВД(Реквизиты.Организация, Реквизиты.Период));
	
	Если РасчетКорректировокСУчетомРекомендацийПоНДС И ЗначениеЗаполнено(Реквизиты.ДатаДокументаРеализации)
		И Реквизиты.ВалютаДокумента <> Реквизиты.ВалютаРеглУчета Тогда
		
		СтруктураКурсаПервичногоДокумента = РаботаСКурсамиВалют.ПолучитьКурсВалюты(
				Реквизиты.ВалютаВзаиморасчетов, Реквизиты.ДатаДокументаРеализации);
		
		Реквизиты.Вставить("КурсДокументаРеализации",      СтруктураКурсаПервичногоДокумента.Курс);
		Реквизиты.Вставить("КратностьДокументаРеализации", СтруктураКурсаПервичногоДокумента.Кратность);
	Иначе
		Реквизиты.Вставить("КурсДокументаРеализации", 1);
		Реквизиты.Вставить("КратностьДокументаРеализации", 1);
	КонецЕсли;
	
	БратьПоПоследнейКорректировке = Ложь;
	
	Если ТипЗнч(Реквизиты.ИсправляемыйДокументРеализации) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		
		БратьПоПоследнейКорректировке = Истина;
		
		ПервичныйДокументРеализации = ПолучитьПервичныйДокументРеализации(Реквизиты.ИсправляемыйДокументРеализации);
		
	Иначе
		ПервичныйДокументРеализации = Реквизиты.ИсправляемыйДокументРеализации
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ПервичныйДокументРеализации", ПервичныйДокументРеализации);
	Запрос.УстановитьПараметр("СчетВыручка", ПланыСчетов.Хозрасчетный.Выручка);
	Запрос.УстановитьПараметр("МассивКодовРеализацийЗаРубеж",
		Справочники.КодыОперацийРаздела7ДекларацииПоНДС.КодыРеализацииУслугЗаРубежом());
	
	Если Реквизиты.РасчетыВВалюте 
		ИЛИ Реквизиты.РасчетыВУсловныхЕдиницах Тогда
		Если РасчетКорректировокСУчетомРекомендацийПоНДС И
			Реквизиты.ВалютаДокумента <> Реквизиты.ВалютаРеглУчета Тогда
			ПодготовитьТаблицыДокументаРасчетыВВалюте(Запрос, Реквизиты, НомераТаблиц);
		Иначе
		КопияНомеровТаблиц = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(НомераТаблиц);
		
		НомераТаблиц.Очистить();
		
		Реквизиты.Вставить("БратьПоПоследнейКорректировке", БратьПоПоследнейКорректировке);
		
		Если БратьПоПоследнейКорректировке Тогда
			
			ЗапросДляОпределенияКурсаПервичногоДокумента = Новый Запрос;
			
			ЗапросДляОпределенияКурсаПервичногоДокумента.УстановитьПараметр("СуммаВключаетНДС", Реквизиты.СуммаВключаетНДС);
			ЗапросДляОпределенияКурсаПервичногоДокумента.УстановитьПараметр("Ссылка", Реквизиты.ДокументРеализации);
			
			ЗапросДляОпределенияКурсаПервичногоДокумента.Текст = ТекстЗапорсаПоТаблицамДокументаДляРасчетаКурсовПриИзмененииКорректировки();
			
			СтрокаСуммДокументаВВалютеВзаиморсчетов = ЗапросДляОпределенияКурсаПервичногоДокумента.Выполнить().Выгрузить()[0];
			
			СуммаВзаиморасчетовДляРасчетаКурсаПоПервичномуДокументу = СтрокаСуммДокументаВВалютеВзаиморсчетов.ВсегоВзаиморасчетовДоКорректировки;
			РублеваяСуммаДляРасчетаКурсаПоПервичномуДокументу       = СтрокаСуммДокументаВВалютеВзаиморсчетов.ВсегоРубДоКорректировки;
			
			СуммаВзаиморасчетовДляРасчетаКурсаИзменения             = СтрокаСуммДокументаВВалютеВзаиморсчетов.ВсегоВзаиморасчетов;
			РублеваяСуммаДляРасчетаКурсаИзменения                   = СтрокаСуммДокументаВВалютеВзаиморсчетов.ВсегоРуб;
			
		Иначе
			
			ИмяДокументаРеализации = Реквизиты.ДокументРеализации.Метаданные().Имя;
			
			Если СтрНайти(ИмяДокументаРеализации, "СчетФактура") = 0 
				И НЕ ТипЗнч(Реквизиты.ДокументРеализации) = Тип("ДокументСсылка.ДокументРасчетовСКонтрагентом") Тогда
		
				ЗапросДляОпределенияКурсаПервичногоДокумента = Новый Запрос;
				ЗапросДляОпределенияКурсаПервичногоДокумента.УстановитьПараметр("ДокументОснование", Реквизиты.ДокументРеализации);
				ЗапросДляОпределенияКурсаПервичногоДокумента.УстановитьПараметр("СуммаВключаетНДС",  Реквизиты.СуммаВключаетНДС);
				ЗапросДляОпределенияКурсаПервичногоДокумента.УстановитьПараметр("ИспользуетсяПостановлениеНДС1137", ЛОЖЬ);
				ЗапросДляОпределенияКурсаПервичногоДокумента.УстановитьПараметр("СводныйСФКомиссияПоЗакупке", ЛОЖЬ);
				ЗапросДляОпределенияКурсаПервичногоДокумента.УстановитьПараметр("СводныйСФКомиссияПоПродаже", ЛОЖЬ);
				ЗапросДляОпределенияКурсаПервичногоДокумента.УстановитьПараметр("ПредставлениеПоставщика",			"");
				ЗапросДляОпределенияКурсаПервичногоДокумента.УстановитьПараметр("АдресПоставщика",					"");
				ЗапросДляОпределенияКурсаПервичногоДокумента.УстановитьПараметр("Грузоотправитель",					"");
				ЗапросДляОпределенияКурсаПервичногоДокумента.УстановитьПараметр("ИННКПППоставщика",					"");
				ЗапросДляОпределенияКурсаПервичногоДокумента.УстановитьПараметр("СчетаФактурыКомиссионера",         "");
				ЗапросДляОпределенияКурсаПервичногоДокумента.УстановитьПараметр("ПредставлениеПокупателя",			"");
				ЗапросДляОпределенияКурсаПервичногоДокумента.УстановитьПараметр("АдресПокупателя",					"");
				ЗапросДляОпределенияКурсаПервичногоДокумента.УстановитьПараметр("Грузополучатель",					"");
				ЗапросДляОпределенияКурсаПервичногоДокумента.УстановитьПараметр("ИННКПППокупателя",					"");
				ЗапросДляОпределенияКурсаПервичногоДокумента.УстановитьПараметр("СчетФактура",         Документы.СчетФактураПолученный.ПустаяСсылка());
				ЗапросДляОпределенияКурсаПервичногоДокумента.УстановитьПараметр("ВалютаРеглУчета",     Реквизиты.ВалютаРеглУчета);
				ЗапросДляОпределенияКурсаПервичногоДокумента.УстановитьПараметр("ПустоеПодразделение", БухгалтерскийУчетПереопределяемый.ПустоеПодразделение());
				ЗапросДляОпределенияКурсаПервичногоДокумента.УстановитьПараметр("ЦифровойИндексОбособленногоПодразделения", "");
				ЗапросДляОпределенияКурсаПервичногоДокумента.УстановитьПараметр("НачислятьНДСПоОтгрузке",
					УчетнаяПолитика.НачислятьНДСПоОтгрузке(Реквизиты.Организация, Реквизиты.Период));
				ЗапросДляОпределенияКурсаПервичногоДокумента.УстановитьПараметр("НачислятьНДСПриПередачеНедвижимости",
					УчетнаяПолитика.НачислятьНДСПриПередачеНедвижимости(Реквизиты.Организация, Реквизиты.Период));
				
				ЗапросДляОпределенияКурсаПервичногоДокумента.Текст = Документы[Реквизиты.ДокументРеализации.Метаданные().Имя].ТекстЗапросаДанныеДляПечатиСчетовФактур(НомераТаблиц);
				
				НомераТаблиц.Вставить("ИтоговаяСуммаПоДокументу", НомераТаблиц.Количество());
				
				ЗапросДляОпределенияКурсаПервичногоДокумента.Текст = ЗапросДляОпределенияКурсаПервичногоДокумента.Текст + "
				|ВЫБРАТЬ
				|	ТаблицаДокумента.Ссылка,
				|	СУММА(ВЫБОР КОГДА &СуммаВключаетНДС ТОГДА ТаблицаДокумента.Сумма ИНАЧЕ ТаблицаДокумента.Сумма + ТаблицаДокумента.СуммаНДС КОНЕЦ) КАК СуммаВсегоВзаиморасчетов,
				|	СУММА(ТаблицаДокумента.ВсегоРуб) КАК ВсегоРуб
				|ИЗ
				|	ТаблицаДокумента КАК ТаблицаДокумента
				|
				|СГРУППИРОВАТЬ ПО
				|	ТаблицаДокумента.Ссылка";
				
				РезультатПакетаДляОпределенияКурса = ЗапросДляОпределенияКурсаПервичногоДокумента.ВыполнитьПакет();
				
				ТаблицаСуммДокументаВВалютеВзаиморасчетов = РезультатПакетаДляОпределенияКурса[НомераТаблиц.ИтоговаяСуммаПоДокументу].Выгрузить();
				Если ТаблицаСуммДокументаВВалютеВзаиморасчетов.Количество() = 0 Тогда
					СуммаВзаиморасчетовДляРасчетаКурсаПоПервичномуДокументу = 0;
					РублеваяСуммаДляРасчетаКурсаПоПервичномуДокументу       = 0;
				Иначе
					СтрокаСуммДокументаВВалютеВзаиморсчетов = ТаблицаСуммДокументаВВалютеВзаиморасчетов[0];
					СуммаВзаиморасчетовДляРасчетаКурсаПоПервичномуДокументу = СтрокаСуммДокументаВВалютеВзаиморсчетов.СуммаВсегоВзаиморасчетов;
					РублеваяСуммаДляРасчетаКурсаПоПервичномуДокументу       = СтрокаСуммДокументаВВалютеВзаиморсчетов.ВсегоРуб;
				КонецЕсли;
				
				СуммаВзаиморасчетовДляРасчетаКурсаИзменения             = СуммаВзаиморасчетовДляРасчетаКурсаПоПервичномуДокументу;
				РублеваяСуммаДляРасчетаКурсаИзменения                   = РублеваяСуммаДляРасчетаКурсаПоПервичномуДокументу;
				
			Иначе
				
				СуммаВзаиморасчетовДляРасчетаКурсаПоПервичномуДокументу = 0;
				РублеваяСуммаДляРасчетаКурсаПоПервичномуДокументу       = 0;
				
				СуммаВзаиморасчетовДляРасчетаКурсаИзменения             = 0;
				РублеваяСуммаДляРасчетаКурсаИзменения                   = 0;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если Реквизиты.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки Тогда
		
			СтруктураКурсаВзаиморасчетов = РаботаСКурсамиВалют.ПолучитьКурсВалюты(
				Реквизиты.ВалютаВзаиморасчетов, ДокументРеализацииСсылка.Дата);
			
		Иначе
			
			СтруктураКурсаВзаиморасчетов = РаботаСКурсамиВалют.ПолучитьКурсВалюты(
				Реквизиты.ВалютаВзаиморасчетов, Реквизиты.Период);
			
		КонецЕсли;
		
		Реквизиты.Вставить("КурсВзаиморасчетов",                 СтруктураКурсаВзаиморасчетов.Курс);
		Реквизиты.Вставить("КратностьВзаиморасчетов",            СтруктураКурсаВзаиморасчетов.Кратность);
		// Если документ оформлен в рублях - берем курс на дату первичного документа
		Если Реквизиты.ВалютаДокумента = Реквизиты.ВалютаРеглУчета Тогда
			СтруктураКурсаПервичногоДокумента = РаботаСКурсамиВалют.ПолучитьКурсВалюты(
				Реквизиты.ВалютаВзаиморасчетов, ДокументРеализацииСсылка.Дата);
			Реквизиты.Вставить("КурсДвиженийПервичногоДокумента",    СтруктураКурсаПервичногоДокумента.Курс);
			СтруктураКурсаПоследнейКорректировки = РаботаСКурсамиВалют.ПолучитьКурсВалюты(
				Реквизиты.ВалютаВзаиморасчетов, ДокументСсылка.ДокументРеализации.Дата);
			Реквизиты.Вставить("КурсДвиженийПоследнейКорректировки", СтруктураКурсаПоследнейКорректировки.Курс);
		// Иначе берем расчетный курс
		Иначе
			Реквизиты.Вставить("КурсДвиженийПервичногоДокумента",    ?(СуммаВзаиморасчетовДляРасчетаКурсаПоПервичномуДокументу = 0, СтруктураКурсаВзаиморасчетов.Курс, (РублеваяСуммаДляРасчетаКурсаПоПервичномуДокументу/СуммаВзаиморасчетовДляРасчетаКурсаПоПервичномуДокументу)*СтруктураКурсаВзаиморасчетов.Кратность));
			Реквизиты.Вставить("КурсДвиженийПоследнейКорректировки", ?(СуммаВзаиморасчетовДляРасчетаКурсаИзменения = 0, СтруктураКурсаВзаиморасчетов.Курс, (РублеваяСуммаДляРасчетаКурсаИзменения/СуммаВзаиморасчетовДляРасчетаКурсаИзменения)*СтруктураКурсаВзаиморасчетов.Кратность));
		КонецЕсли;
		
		НомераТаблиц = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(КопияНомеровТаблиц);
		
		ПодготовитьТаблицыДокументаРасчетыВВалюте(Запрос, Реквизиты, НомераТаблиц);
		КонецЕсли;
	Иначе
		Запрос.Текст = ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц, Реквизиты);
	КонецЕсли;
	
	Если Запрос.Текст = "" Тогда
		
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	
	КонецЕсли;
	
	Результат = Запрос.ВыполнитьПакет();
	
	ОсобенностиУчетаДоходов = Новый Структура("ДеятельностьНаПатенте, ДеятельностьНаТорговомСборе", Ложь, Ложь);
	Если ТипЗнч(ДокументРеализацииСсылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		ЗаполнитьЗначенияСвойств(ОсобенностиУчетаДоходов,
			ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументРеализацииСсылка,
				"ДеятельностьНаПатенте, ДеятельностьНаТорговомСборе"));
	КонецЕсли;
	
	ИсправляемыйДокумент = УчетНДСПереопределяемый.ПолучитьИсправляемыйДокументРеализации(Реквизиты.ДокументРеализации);
	ДатаИсправляемогоДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ИсправляемыйДокумент, "Дата");
	СчетФактура = ?(Реквизиты.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки, 
		ИсправляемыйДокумент, ДокументСсылка);
	СчетФактураДата = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СчетФактура, "Дата");      
	ИсходныйСчетФактураДата = ДанныеДокументаРеализацииСсылка.Дата; 
	
	Реквизиты.Вставить("ИсправлениеТекущегоМесяца", НачалоМесяца(ДатаИсправляемогоДокумента) = НачалоМесяца(Реквизиты.Период));
	
	КорректироватьВТекущемпериоде = Ложь;
	Если УчетНДС.ПолучитьПорядокКорректировкиНДС(ДатаИсправляемогоДокумента) = 2 И ТипЗнч(ИсправляемыйДокумент) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		СчетФактураДата = ДатаИсправляемогоДокумента;
		ИсходныйСчетФактураДата = ДатаИсправляемогоДокумента; 
		КорректироватьВТекущемпериоде = Реквизиты.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение;
	ИначеЕсли УчетНДС.ПолучитьПорядокКорректировкиНДС(СчетФактураДата) = 2 Тогда
		КорректироватьВТекущемпериоде = Истина;
	Иначе
		СчетФактураДата = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументРеализацииСсылка, "Дата");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("КорректироватьВТекущемпериоде",  КорректироватьВТекущемпериоде);
	Запрос.УстановитьПараметр("ДатаДокументаРеализации",        ДанныеДокументаРеализацииСсылка.Дата);
	Запрос.УстановитьПараметр("ПрошлыйПериод",                  Год(ДанныеДокументаРеализацииСсылка.Дата) < Год(Реквизиты.Период));
	Запрос.УстановитьПараметр("СчетУчетаРасчетовСКонтрагентом", ДанныеДокументаРеализацииСсылка.СчетУчетаРасчетовСКонтрагентом);
	Запрос.УстановитьПараметр("СчетУчетаРасчетовПоАвансам",     ДанныеДокументаРеализацииСсылка.СчетУчетаРасчетовПоАвансам);
	Запрос.УстановитьПараметр("ДокументРеализацииСсылка",       ДокументРеализацииСсылка); // исходный
	Запрос.УстановитьПараметр("ДокументРеализации",             Реквизиты.ДокументРеализации); // текущий
	Запрос.УстановитьПараметр("ИсходныйСчетФактураДата",        ИсходныйСчетФактураДата);
	Запрос.УстановитьПараметр("ДеятельностьНаПатенте",          ОсобенностиУчетаДоходов.ДеятельностьНаПатенте);
	Запрос.УстановитьПараметр("ДеятельностьНаТорговомСборе",    ОсобенностиУчетаДоходов.ДеятельностьНаТорговомСборе);
	Запрос.УстановитьПараметр("ИсправляемыйСчетФактура",        ИсправляемыйДокумент);
	Запрос.УстановитьПараметр("ДатаИсправляемогоСчетаФактуры",  ДатаИсправляемогоДокумента);
	Запрос.УстановитьПараметр("ИсправленныйСчетФактура", 
		?(Реквизиты.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки,
			ДокументСсылка, 
			Неопределено)); 
	Запрос.УстановитьПараметр("СчетФактура",     СчетФактура);
	Запрос.УстановитьПараметр("СчетФактураДата", СчетФактураДата);
	Запрос.УстановитьПараметр("МоментДокумента",
		Новый Граница(Новый МоментВремени(Реквизиты.Период, ДокументСсылка), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Период",      Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("ЭтоИсправлениеКорректировки", 
		Реквизиты.ВидОперации <> Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение
		И ТипЗнч(ИсправляемыйДокумент) = Тип("ДокументСсылка.КорректировкаРеализации"));
	Если Реквизиты.НДСИсчисляетсяНалоговымАгентом = Истина Тогда
		СобытиеРеализация   = Перечисления.СобытияПоНДСПродажи.НалогИсчисляетПокупатель;
		СобытиеПриобретение = Перечисления.СобытияПоНДСПокупки.НалогИсчисляетПокупатель;
	Иначе
		СобытиеРеализация   = Перечисления.СобытияПоНДСПродажи.Реализация;
		СобытиеПриобретение = Перечисления.СобытияПоНДСПокупки.ПредъявленНДСКВычету;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СобытиеРеализация",   СобытиеРеализация);
	Запрос.УстановитьПараметр("СобытиеПриобретение", СобытиеПриобретение);
	
	Реквизиты.Вставить("ПлательщикНДС",
		УчетнаяПолитика.ПлательщикНДС(Реквизиты.Организация, Реквизиты.Период));
	Реквизиты.Вставить("ПлательщикНДФЛ",
		УчетнаяПолитика.ПлательщикНДФЛ(Реквизиты.Организация, Реквизиты.Период));
	Реквизиты.Вставить("ПрименяетсяУСН", УчетнаяПолитика.ПрименяетсяУСН(Реквизиты.Организация, Реквизиты.Период));
	
	Запрос.УстановитьПараметр("ПлательщикЕНВД", Реквизиты.ПлательщикЕНВД);

	Запрос.УстановитьПараметр("ОрганизацияПрименяетУСН", Реквизиты.ПрименяетсяУСН);
	Запрос.УстановитьПараметр("ОрганизацияПрименяетУСНПатент",
		УчетнаяПолитика.ПрименяетсяУСНПатент(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("УчитыватьЗадолженностьУСНПатент",
		УчетПСН.УчитыватьЗадолженностьПоДеятельностиНаПатенте(Реквизиты.Организация, Реквизиты.Период));
		
	Запрос.УстановитьПараметр("СинонимТовары", НСтр("ru = 'Товары'"));
	
	//Параметры для движений УСН - значения получаются на дату документа реализации
	Реквизиты.Вставить("ПрименяетсяУСНДоходыМинусРасходы",        УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Реквизиты.Организация, ДанныеДокументаРеализацииСсылка.Дата));
	Запрос.УстановитьПараметр("ПрименяетсяУСНДоходыМинусРасходы", Реквизиты.ПрименяетсяУСНДоходыМинусРасходы);
	Запрос.УстановитьПараметр("ПорядокПризнанияРасходовПоНДС",    УчетнаяПолитика.ПорядокПризнанияРасходовПоНДС(Реквизиты.Организация, ДанныеДокументаРеализацииСсылка.Дата));
	Запрос.УстановитьПараметр("ЗаполнятьДокументРасчетов",
		РегистрыНакопления.РеализованныеТоварыКомитентов.ЗаполнятьДокументРасчетов(Реквизиты.Период));
	ПрименяетсяОсвобождениеОтУплатыНДС = УчетнаяПолитика.ПрименяетсяОсвобождениеОтУплатыНДС(
		Реквизиты.Организация, Реквизиты.Период);
	// В декларацию НДС попадают операции с прослеживаемым товаром с НДС, 
	// а также документы без НДС, в случае освобождения от уплаты НДС.
	Запрос.УстановитьПараметр("ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС",
		Реквизиты.ЕстьНДС ИЛИ ПрименяетсяОсвобождениеОтУплатыНДС);
	Запрос.УстановитьПараметр("ПериодИсходнойОперации", НачалоКвартала(ДанныеДокументаРеализацииСсылка.Дата));
	Запрос.УстановитьПараметр("НомерИсходногоДокумента", 
		ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокументаРеализацииСсылка.Номер, Истина, Ложь));
	Запрос.УстановитьПараметр("ТоварыПринятыеНаКомиссию", БухгалтерскийУчетПовтИсп.СписокСчетовТоварыПринятыеНаКомиссию());
	Запрос.УстановитьПараметр("ЭтоКомиссия", Реквизиты.ЭтоДоговорСКомиссионером);
	Запрос.УстановитьПараметр("Субсчета91",    БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ПрочиеРасходы));
	Запрос.УстановитьПараметр("ЕстьНДС", Реквизиты.ЕстьНДС);
	Запрос.УстановитьПараметр("РасчетКорректировокСУчетомРекомендацийПоНДС", Реквизиты.РасчетКорректировокСУчетомРекомендацийПоНДС);
	Запрос.УстановитьПараметр("КурсВзаиморасчетов",       Реквизиты.КурсДокументаРеализации);
	Запрос.УстановитьПараметр("КратностьВзаиморасчетов",  Реквизиты.КратностьДокументаРеализации);
	Если (Реквизиты.РасчетыВВалюте Или Реквизиты.РасчетыВУсловныхЕдиницах)
		И РасчетКорректировокСУчетомРекомендацийПоНДС 
		И Реквизиты.ВалютаДокумента <> Реквизиты.ВалютаРеглУчета Тогда
		СреднийКурсЗачетаОплат = УчетВзаиморасчетов.СреднийКурсЗачетаОплат(
			ДанныеДокументаРеализацииСсылка.СчетУчетаРасчетовСКонтрагентом,
			Реквизиты.ИсходныйДокументРеализации, Реквизиты.Регистратор, Истина, ДанныеДокументаРеализацииСсылка.Дата, Реквизиты.Период);
		Иначе 
			СреднийКурсЗачетаОплат = 0;
	КонецЕсли;
	Запрос.УстановитьПараметр("СреднийКурсЗачетаОплат", СреднийКурсЗачетаОплат);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = ТекстЗапросаСписаниеТоваров(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаВозвратТоваров(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПартииКомитентов(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаРеализация(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаЗачетАвансов(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаТоварыНДС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаКорректировкаРеализацииУСН(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаКорректировкаРеализацииИП(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаРублевыеСуммыДокументовВВалюте(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаРегистрацияОтложенныхРасчетовСКонтрагентами(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаРегистрацияОтложенныхРасчетовВПоследовательности(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаРеализацияУслуг(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПрослеживаемыеТовары(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПрослеживаемыеУслуги(НомераТаблиц, ПараметрыПроведения, Реквизиты);
		
	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда
		Результат = Запрос.ВыполнитьПакет();
		Для Каждого НомерТаблицы Из НомераТаблиц Цикл
			ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
		КонецЦикла;
	КонецЕсли;
	
	Если ПараметрыПроведения.ЗачетАвансовРеквизиты = Неопределено 
		ИЛИ НЕ ПараметрыПроведения.ЗачетАвансовРеквизиты[0].ЭтоВозврат Тогда
		ПараметрыПроведения.Вставить("ВыделениеАвансаРеквизиты", Неопределено);
	Иначе
		ПараметрыПроведения.Вставить("ВыделениеАвансаРеквизиты", ПараметрыПроведения.ЗачетАвансовРеквизиты.Скопировать());
		ПараметрыПроведения.ЗачетАвансовРеквизиты = Неопределено;
	КонецЕсли;
	
	УчетНДС.ЗаполнитьВидыЦенностей(ПараметрыПроведения.НДСВычет, , "СчетУчета");
	УчетНДС.ЗаполнитьВидыЦенностей(ПараметрыПроведения.НДСНачисление, , "СчетУчета");
	УчетНДС.ЗаполнитьВидыЦенностей(ПараметрыПроведения.НДСВосстановление, , "СчетУчета");
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаСоставДокумента", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());

	// В отличие от обычных документов реализации для корректировки реализации 
	// получение данных табличных частей необходимо на любом этапе проведения: 
	// и при оперативном проведении и актуализации отложенных расчетов, 
	// т.к. они используются для выделения/зачета авансов, а также для определения долей выручки при УСН.
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МАКСИМУМ(СоставДокумента.ЕстьТовары) КАК ЕстьТовары,
	|	МАКСИМУМ(СоставДокумента.ЕстьУслуги) КАК ЕстьУслуги,
	|	МАКСИМУМ(СоставДокумента.ЕстьАгентскиеУслуги) КАК ЕстьАгентскиеУслуги,
	|	МАКСИМУМ(СоставДокумента.ЕстьНДС) КАК ЕстьНДС
	|ПОМЕСТИТЬ СоставДокумента
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		ИСТИНА КАК ЕстьТовары,
	|		ЛОЖЬ КАК ЕстьУслуги,
	|		ЛОЖЬ КАК ЕстьАгентскиеУслуги,
	|		ЛОЖЬ КАК ЕстьНДС
	|	ИЗ
	|		Документ.КорректировкаРеализации.Товары КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ЛОЖЬ,
	|		ЛОЖЬ
	|	ИЗ
	|		Документ.КорректировкаРеализации.Услуги КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ЛОЖЬ
	|	ИЗ
	|		Документ.КорректировкаРеализации.АгентскиеУслуги КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ИСТИНА
	|	ИЗ
	|		Документ.КорректировкаРеализации.Товары КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка
	|		И ТаблицаДокумента.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ИСТИНА
	|	ИЗ
	|		Документ.КорректировкаРеализации.Услуги КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка
	|		И ТаблицаДокумента.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ИСТИНА
	|	ИЗ
	|		Документ.КорректировкаРеализации.АгентскиеУслуги КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка
	|		И ТаблицаДокумента.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)) КАК СоставДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.КорректироватьБУиНУ КАК КорректироватьБУиНУ,
	|	Реквизиты.КорректироватьНДС КАК КорректироватьНДС,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	Реквизиты.ДокументРеализации КАК ДокументРеализации,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.Склад.ТипСклада КАК ТипСклада,
	|	Реквизиты.Склад.ТипЦенРозничнойТорговли КАК ТипЦенРозничнойТорговли,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА Реквизиты.ДокументРеализации ССЫЛКА Документ.ДокументРасчетовСКонтрагентом
	|					И ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ)
	|				ИЛИ ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|			ТОГДА Реквизиты.ВалютаДокумента
	|		ИНАЧЕ Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК ВалютаВзаиморасчетов,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.ВидДоговора, ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ПустаяСсылка)) КАК ВидДоговора,
	|	ВЫБОР
	|		КОГДА Реквизиты.ДокументРеализации ССЫЛКА Документ.ДокументРасчетовСКонтрагентом
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ)
	|	КОНЕЦ КАК РасчетыВУсловныхЕдиницах,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДС, ЛОЖЬ) КАК УчетАгентскогоНДС,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДСПокупателем, ЛОЖЬ) КАК НДСИсчисляетсяНалоговымАгентом,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.ИсправляемыйДокументРеализации КАК ИсправляемыйДокументРеализации,
	|	Реквизиты.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Реквизиты.ПризнаватьЗачитыватьАванс КАК ПризнаватьЗачитыватьАванс,
	|	Реквизиты.ОтчетностьПодписана КАК ОтчетностьПодписана,
	|	Реквизиты.СтатьяПрочихДоходовИРасходов КАК СтатьяПрочихДоходовИРасходов,
	|	Реквизиты.ДоговорКонтрагента.КодРаздел7ДекларацииНДС КАК КодОперацииПоСделке,
	|	ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ОперацияНеПодлежитНалогообложению, ЛОЖЬ) КАК КодОперацииПоСделкеСоответствуетСт149НКРФ,
	|	Реквизиты.Контрагент.СтранаРегистрации КАК СтранаРегистрации
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.КорректировкаРеализации КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КодыОперацийРаздела7ДекларацииПоНДС КАК КодыОперацийРаздела7ДекларацииПоНДС
	|		ПО Реквизиты.ДоговорКонтрагента.КодРаздел7ДекларацииНДС = КодыОперацийРаздела7ДекларацииПоНДС.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.КорректироватьБУиНУ КАК КорректироватьБУиНУ,
	|	Реквизиты.КорректироватьНДС КАК КорректироватьНДС,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.ДокументРеализации КАК ДокументРеализации,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.ТипСклада КАК ТипСклада,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	ВЫБОР
	|		КОГДА Реквизиты.НДСИсчисляетсяНалоговымАгентом
	|				И Реквизиты.Дата >= ДАТАВРЕМЯ(2018, 1, 1)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НДСИсчисляетсяНалоговымАгентом,
	|	Реквизиты.ПризнаватьЗачитыватьАванс КАК ПризнаватьЗачитыватьАванс,
	|	Реквизиты.ИсправляемыйДокументРеализации КАК ИсправляемыйДокументРеализации,
	|	Реквизиты.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ЕСТЬNULL(СоставДокумента.ЕстьТовары, ЛОЖЬ) КАК ЕстьТовары,
	|	ЕСТЬNULL(СоставДокумента.ЕстьУслуги, ЛОЖЬ) КАК ЕстьУслуги,
	|	ЕСТЬNULL(СоставДокумента.ЕстьАгентскиеУслуги, ЛОЖЬ) КАК ЕстьАгентскиеУслуги,
	|	ЕСТЬNULL(СоставДокумента.ЕстьНДС, ЛОЖЬ) КАК ЕстьНДС,
	|	Реквизиты.СтранаРегистрации КАК СтранаРегистрации
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ СоставДокумента КАК СоставДокумента
	|		ПО (ИСТИНА)";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции 

Функция ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц, Реквизиты)

	ТекстЗапроса = "";
	
	Если Реквизиты.ЕстьТовары ИЛИ Реквизиты.ЕстьУслуги Тогда	
		НомераТаблиц.Вставить("ВременнаяТаблицаСчетаЕНВД", НомераТаблиц.Количество());
		Если Реквизиты.ПлательщикЕНВД Тогда
			ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|	СчетаДоходовИРасходовЕНВД.Счет
			|ПОМЕСТИТЬ СчетаЕНВД
			|ИЗ
			|	РегистрСведений.СчетаДоходовИРасходовЕНВД КАК СчетаДоходовИРасходовЕНВД
			|ГДЕ
			|	СчетаДоходовИРасходовЕНВД.Счет В ИЕРАРХИИ(&СчетВыручка)
			|	И НЕ СчетаДоходовИРасходовЕНВД.Счет.ЗапретитьИспользоватьВПроводках";
		Иначе
			ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|	NULL КАК Счет
			|ПОМЕСТИТЬ СчетаЕНВД
			|ГДЕ
			|	ЛОЖЬ";
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если Реквизиты.ЕстьТовары Тогда
		НомераТаблиц.Вставить("ВременнаяТаблицаТовары", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ТаблицаТовары.Ссылка,
		|	ТаблицаТовары.НомерСтроки,
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.Количество,
		|	ТаблицаТовары.КоличествоДоИзменения,
		|	ТаблицаТовары.КоличествоДоКорректировки,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.Сумма
		|		ИНАЧЕ ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС
		|	КОНЕЦ КАК СуммаВзаиморасчетов,
		|	ТаблицаТовары.СуммаНДС КАК СуммаНДСВзаиморасчетов,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.Сумма
		|		ИНАЧЕ ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС
		|	КОНЕЦ КАК СуммаРуб,
		|	ТаблицаТовары.СуммаНДС КАК СуммаНДСРуб,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.Сумма - ТаблицаТовары.СуммаНДС
		|		ИНАЧЕ ТаблицаТовары.Сумма
		|	КОНЕЦ КАК СуммаБезНДСРуб,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.СуммаДоИзменения
		|		ИНАЧЕ ТаблицаТовары.СуммаДоИзменения + ТаблицаТовары.СуммаНДСДоИзменения
		|	КОНЕЦ КАК СуммаВзаиморасчетовДоИзменения,
		|	ТаблицаТовары.СуммаНДСДоИзменения КАК СуммаНДСВзаиморасчетовДоИзменения,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.СуммаДоИзменения
		|		ИНАЧЕ ТаблицаТовары.СуммаДоИзменения + ТаблицаТовары.СуммаНДСДоИзменения
		|	КОНЕЦ КАК СуммаРубДоИзменения,
		|	ТаблицаТовары.СуммаНДСДоИзменения КАК СуммаНДСРубДоИзменения,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.СуммаДоИзменения - ТаблицаТовары.СуммаНДСДоИзменения
		|		ИНАЧЕ ТаблицаТовары.СуммаДоИзменения
		|	КОНЕЦ КАК СуммаБезНДСРубДоИзменения,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.СуммаДоКорректировки
		|		ИНАЧЕ ТаблицаТовары.СуммаДоКорректировки + ТаблицаТовары.СуммаНДСДоКорректировки
		|	КОНЕЦ КАК СуммаВзаиморасчетовДоКорректировки,
		|	ТаблицаТовары.СуммаНДСДоКорректировки КАК СуммаНДСВзаиморасчетовДоКорректировки,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.СуммаДоКорректировки
		|		ИНАЧЕ ТаблицаТовары.СуммаДоКорректировки + ТаблицаТовары.СуммаНДСДоКорректировки
		|	КОНЕЦ КАК СуммаРубДоКорректировки,
		|	ТаблицаТовары.СуммаНДСДоКорректировки КАК СуммаНДСРубДоКорректировки,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.СуммаДоКорректировки - ТаблицаТовары.СуммаНДСДоКорректировки
		|		ИНАЧЕ ТаблицаТовары.СуммаДоКорректировки
		|	КОНЕЦ КАК СуммаБезНДСРубДоКорректировки,
		|	ТаблицаТовары.СтавкаНДС,
		|	ТаблицаТовары.СтавкаНДСДоИзменения,
		|	ТаблицаТовары.НомерГТД,
		|	ТаблицаТовары.НомерГТДДоИзменения,
		|	ТаблицаТовары.СтранаПроисхождения,
		|	ТаблицаТовары.СтранаПроисхожденияДоИзменения,
		|	ТаблицаТовары.СчетУчета,
		|	ТаблицаТовары.ПереданныеСчетУчета,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.СчетУчета В (&СчетаТоваровКомитентов)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоКомиссия,
		|	ТаблицаТовары.СчетУчета.Забалансовый КАК СчетУчетаЗабалансовый,
		|	ТаблицаТовары.СчетУчетаНДСПоРеализации,
		|	ТаблицаТовары.СчетДоходов,
		|	ВЫБОР
		|		КОГДА СчетаЕНВД.Счет ЕСТЬ НЕ NULL 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ДоходЕНВД,
		|	ТаблицаТовары.СчетРасходов,
		|	ТаблицаТовары.Субконто,
		|	ТаблицаТовары.ЕстьВДокументеРеализации,
		|	ТаблицаТовары.ИдентификаторСтроки,
		|	ТаблицаТовары.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект
		|ПОМЕСТИТЬ ТаблицаТовары
		|ИЗ
		|	Документ.КорректировкаРеализации.Товары КАК ТаблицаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаЕНВД КАК СчетаЕНВД
		|		ПО ТаблицаТовары.СчетДоходов = СчетаЕНВД.Счет
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &Ссылка"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если Реквизиты.ЕстьУслуги Тогда
		НомераТаблиц.Вставить("ВременнаяТаблицаУслуги", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ТаблицаУслуги.Ссылка КАК Ссылка,
		|	ТаблицаУслуги.НомерСтроки КАК НомерСтроки,
		|	ТаблицаУслуги.Номенклатура КАК Номенклатура,
		|	ТаблицаУслуги.Количество КАК Количество,
		|	ТаблицаУслуги.КоличествоДоИзменения КАК КоличествоДоИзменения,
		|	ТаблицаУслуги.КоличествоДоКорректировки КАК КоличествоДоКорректировки,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаУслуги.Сумма
		|		ИНАЧЕ ТаблицаУслуги.Сумма + ТаблицаУслуги.СуммаНДС
		|	КОНЕЦ КАК СуммаВзаиморасчетов,
		|	ТаблицаУслуги.СуммаНДС КАК СуммаНДСВзаиморасчетов,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаУслуги.Сумма
		|		ИНАЧЕ ТаблицаУслуги.Сумма + ТаблицаУслуги.СуммаНДС
		|	КОНЕЦ КАК СуммаРуб,
		|	ТаблицаУслуги.СуммаНДС КАК СуммаНДСРуб,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаУслуги.Сумма - ТаблицаУслуги.СуммаНДС
		|		ИНАЧЕ ТаблицаУслуги.Сумма
		|	КОНЕЦ КАК СуммаБезНДСРуб,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаУслуги.СуммаДоИзменения
		|		ИНАЧЕ ТаблицаУслуги.СуммаДоИзменения + ТаблицаУслуги.СуммаНДСДоИзменения
		|	КОНЕЦ КАК СуммаВзаиморасчетовДоИзменения,
		|	ТаблицаУслуги.СуммаНДСДоИзменения КАК СуммаНДСВзаиморасчетовДоИзменения,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаУслуги.СуммаДоИзменения
		|		ИНАЧЕ ТаблицаУслуги.СуммаДоИзменения + ТаблицаУслуги.СуммаНДСДоИзменения
		|	КОНЕЦ КАК СуммаРубДоИзменения,
		|	ТаблицаУслуги.СуммаНДСДоИзменения КАК СуммаНДСРубДоИзменения,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаУслуги.СуммаДоИзменения - ТаблицаУслуги.СуммаНДСДоИзменения
		|		ИНАЧЕ ТаблицаУслуги.СуммаДоИзменения
		|	КОНЕЦ КАК СуммаБезНДСРубДоИзменения,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаУслуги.СуммаДоКорректировки
		|		ИНАЧЕ ТаблицаУслуги.СуммаДоКорректировки + ТаблицаУслуги.СуммаНДСДоКорректировки
		|	КОНЕЦ КАК СуммаВзаиморасчетовДоКорректировки,
		|	ТаблицаУслуги.СуммаНДСДоКорректировки КАК СуммаНДСВзаиморасчетовДоКорректировки,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаУслуги.СуммаДоКорректировки
		|		ИНАЧЕ ТаблицаУслуги.СуммаДоКорректировки + ТаблицаУслуги.СуммаНДСДоКорректировки
		|	КОНЕЦ КАК СуммаРубДоКорректировки,
		|	ТаблицаУслуги.СуммаНДСДоКорректировки КАК СуммаНДСРубДоКорректировки,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаУслуги.СуммаДоКорректировки - ТаблицаУслуги.СуммаНДСДоКорректировки
		|		ИНАЧЕ ТаблицаУслуги.СуммаДоКорректировки
		|	КОНЕЦ КАК СуммаБезНДСРубДоКорректировки,
		|	ТаблицаУслуги.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаУслуги.СтавкаНДСДоИзменения КАК СтавкаНДСДоИзменения,
		|	ТаблицаУслуги.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
		|	ТаблицаУслуги.СчетДоходов КАК СчетДоходов,
		|	ВЫБОР
		|		КОГДА СчетаЕНВД.Счет ЕСТЬ НЕ NULL 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ДоходЕНВД,
		|	ТаблицаУслуги.СчетРасходов КАК СчетРасходов,
		|	ТаблицаУслуги.Субконто КАК Субконто,
		|	ТаблицаУслуги.ЕстьВДокументеРеализации КАК ЕстьВДокументеРеализации,
		|	ВЫБОР
		|		КОГДА ТаблицаУслуги.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		|				И Реквизиты.Дата >= ДАТАВРЕМЯ(2019, 7, 1)
		|			ТОГДА Реквизиты.КодОперацииПоСделке В (&МассивКодовРеализацийЗаРубеж)
		|						И НЕ ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ОперацияНеПодлежитНалогообложению, ЛОЖЬ)
		|					ИЛИ СправочникНоменклатура.КодРаздел7ДекларацииНДС В (&МассивКодовРеализацийЗаРубеж)
		|						И НЕ Реквизиты.КодОперацииПоСделкеСоответствуетСт149НКРФ
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК УслугиЗаРубежом,
		|	ТаблицаУслуги.ИдентификаторСтроки КАК ИдентификаторСтроки
		|ПОМЕСТИТЬ ТаблицаУслуги
		|ИЗ
		|	Документ.КорректировкаРеализации.Услуги КАК ТаблицаУслуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаЕНВД КАК СчетаЕНВД
		|		ПО ТаблицаУслуги.СчетДоходов = СчетаЕНВД.Счет
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КодыОперацийРаздела7ДекларацииПоНДС КАК КодыОперацийРаздела7ДекларацииПоНДС
		|			ПО СправочникНоменклатура.КодРаздел7ДекларацииНДС = КодыОперацийРаздела7ДекларацииПоНДС.Ссылка
		|		ПО ТаблицаУслуги.Номенклатура = СправочникНоменклатура.Ссылка
		|ГДЕ
		|	ТаблицаУслуги.Ссылка = &Ссылка"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если Реквизиты.ЕстьАгентскиеУслуги Тогда
		НомераТаблиц.Вставить("ВременнаяТаблицаАгентскиеУслуги", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ТаблицаАгентскиеУслуги.Ссылка,
		|	ТаблицаАгентскиеУслуги.НомерСтроки,
		|	ТаблицаАгентскиеУслуги.Номенклатура,
		|	ТаблицаАгентскиеУслуги.Количество,
		|	ТаблицаАгентскиеУслуги.КоличествоДоИзменения,
		|	ТаблицаАгентскиеУслуги.КоличествоДоКорректировки,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаАгентскиеУслуги.Сумма
		|		ИНАЧЕ ТаблицаАгентскиеУслуги.Сумма + ТаблицаАгентскиеУслуги.СуммаНДС
		|	КОНЕЦ КАК СуммаВзаиморасчетов,
		|	ТаблицаАгентскиеУслуги.СуммаНДС КАК СуммаНДСВзаиморасчетов,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаАгентскиеУслуги.Сумма
		|		ИНАЧЕ ТаблицаАгентскиеУслуги.Сумма + ТаблицаАгентскиеУслуги.СуммаНДС
		|	КОНЕЦ КАК СуммаРуб,
		|	ТаблицаАгентскиеУслуги.СуммаНДС КАК СуммаНДСРуб,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаАгентскиеУслуги.Сумма - ТаблицаАгентскиеУслуги.СуммаНДС
		|		ИНАЧЕ ТаблицаАгентскиеУслуги.Сумма
		|	КОНЕЦ КАК СуммаБезНДСРуб,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаАгентскиеУслуги.СуммаДоИзменения
		|		ИНАЧЕ ТаблицаАгентскиеУслуги.СуммаДоИзменения + ТаблицаАгентскиеУслуги.СуммаНДСДоИзменения
		|	КОНЕЦ КАК СуммаВзаиморасчетовДоИзменения,
		|	ТаблицаАгентскиеУслуги.СуммаНДСДоИзменения КАК СуммаНДСВзаиморасчетовДоИзменения,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаАгентскиеУслуги.СуммаДоИзменения
		|		ИНАЧЕ ТаблицаАгентскиеУслуги.СуммаДоИзменения + ТаблицаАгентскиеУслуги.СуммаНДСДоИзменения
		|	КОНЕЦ КАК СуммаРубДоИзменения,
		|	ТаблицаАгентскиеУслуги.СуммаНДСДоИзменения КАК СуммаНДСРубДоИзменения,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаАгентскиеУслуги.СуммаДоИзменения - ТаблицаАгентскиеУслуги.СуммаНДСДоИзменения
		|		ИНАЧЕ ТаблицаАгентскиеУслуги.СуммаДоИзменения
		|	КОНЕЦ КАК СуммаБезНДСРубДоИзменения,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаАгентскиеУслуги.СуммаДоКорректировки
		|		ИНАЧЕ ТаблицаАгентскиеУслуги.СуммаДоКорректировки + ТаблицаАгентскиеУслуги.СуммаНДСДоКорректировки
		|	КОНЕЦ КАК СуммаВзаиморасчетовДоКорректировки,
		|	ТаблицаАгентскиеУслуги.СуммаНДСДоКорректировки КАК СуммаНДСВзаиморасчетовДоКорректировки,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаАгентскиеУслуги.СуммаДоКорректировки
		|		ИНАЧЕ ТаблицаАгентскиеУслуги.СуммаДоКорректировки + ТаблицаАгентскиеУслуги.СуммаНДСДоКорректировки
		|	КОНЕЦ КАК СуммаРубДоКорректировки,
		|	ТаблицаАгентскиеУслуги.СуммаНДСДоКорректировки КАК СуммаНДСРубДоКорректировки,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаАгентскиеУслуги.СуммаДоКорректировки - ТаблицаАгентскиеУслуги.СуммаНДСДоКорректировки
		|		ИНАЧЕ ТаблицаАгентскиеУслуги.СуммаДоКорректировки
		|	КОНЕЦ КАК СуммаБезНДСРубДоКорректировки,
		|	ТаблицаАгентскиеУслуги.СтавкаНДС,
		|	ТаблицаАгентскиеУслуги.СтавкаНДСДоИзменения,
		|	ТаблицаАгентскиеУслуги.Контрагент,
		|	ТаблицаАгентскиеУслуги.ДоговорКонтрагента,
		|	ТаблицаАгентскиеУслуги.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|	ТаблицаАгентскиеУслуги.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
		|	ТаблицаАгентскиеУслуги.СчетРасчетов,
		|	ТаблицаАгентскиеУслуги.ИдентификаторСтроки КАК ИдентификаторСтроки
		|ПОМЕСТИТЬ ТаблицаАгентскиеУслуги
		|ИЗ
		|	Документ.КорректировкаРеализации.АгентскиеУслуги КАК ТаблицаАгентскиеУслуги
		|ГДЕ
		|	ТаблицаАгентскиеУслуги.Ссылка = &Ссылка"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ПодготовитьТаблицуДокументаРасчетыВВалютеОформленныйВРублях(ТаблицаДляОбработки, Реквизиты)

	// Добавим колонки для отбора строк, которые следует обработать
	ТаблицаДляОбработки.Колонки.Добавить("ПризнакДляСтрокДоИзменения");
	ТаблицаДляОбработки.Колонки.Добавить("ПризнакДляСтрок");
	
	Если НЕ Реквизиты.БратьПоПоследнейКорректировке Тогда
		Для Каждого СтрокаТаблицы Из ТаблицаДляОбработки Цикл
			// Приведем суммы к общему виду - заполнены суммы до корректировки, До изменения, после изменения
			СтрокаТаблицы.СуммаРубДоКорректировки       = СтрокаТаблицы.СуммаРубДоИзменения;
			СтрокаТаблицы.СуммаБезНДСРубДоКорректировки = СтрокаТаблицы.СуммаБезНДСРубДоИзменения;
			СтрокаТаблицы.СуммаНДСРубДоКорректировки    = СтрокаТаблицы.СуммаНДСРубДоИзменения;
		КонецЦикла;
	КонецЕсли;
	
	// Определим используемые курсы
	КурсВзаиморасчетов                 = ?(Реквизиты.КратностьВзаиморасчетов = 0, 0, Реквизиты.КурсВзаиморасчетов / Реквизиты.КратностьВзаиморасчетов);
	КурсДвиженийПервичногоДокумента    = ?(Реквизиты.КратностьВзаиморасчетов = 0, 0, Реквизиты.КурсДвиженийПервичногоДокумента / Реквизиты.КратностьВзаиморасчетов);
	КурсДвиженийПоследнейКорректировки = ?(Реквизиты.КратностьВзаиморасчетов = 0, 0, Реквизиты.КурсДвиженийПоследнейКорректировки / Реквизиты.КратностьВзаиморасчетов);
	
	// До корректировки
	
	// Приведем сумму взаиморасчетов до корректировки к курсу на дату документа
	СуммаРубДоКорректировки = ТаблицаДляОбработки.Итог("СуммаРубДоКорректировки");
	СуммаВзаиморасчетовДляПересчетаСуммДоКорректировки = Окр(СуммаРубДоКорректировки / КурсДвиженийПервичногоДокумента, 2);
	ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
		СуммаВзаиморасчетовДляПересчетаСуммДоКорректировки, ТаблицаДляОбработки, "СуммаВзаиморасчетовДоКорректировки", "СуммаРубДоКорректировки");
	
	// Приведем сумму НДС до корректировки к курсу на дату документа
	СуммаНДСРубДоКорректировки = ТаблицаДляОбработки.Итог("СуммаНДСРубДоКорректировки");
	Если Реквизиты.РасчетыВУсловныхЕдиницах Тогда
		СуммаНДСВзаиморасчетовДляПересчетаСуммДоКорректировки = Окр(СуммаНДСРубДоКорректировки / КурсДвиженийПервичногоДокумента, 2);
	Иначе
		СуммаНДСВзаиморасчетовДляПересчетаСуммДоКорректировки = Окр(СуммаНДСРубДоКорректировки / КурсВзаиморасчетов, 2);
	КонецЕсли;
	ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
		СуммаНДСВзаиморасчетовДляПересчетаСуммДоКорректировки, ТаблицаДляОбработки, "СуммаНДСВзаиморасчетовДоКорректировки", "СуммаРубДоКорректировки");
	
	Для Каждого СтрокаТаблицы Из ТаблицаДляОбработки Цикл
		
		// Если суммы изменились, то пометим их для обработки далее
		Если СтрокаТаблицы.СуммаРубДоИзменения <> СтрокаТаблицы.СуммаРубДоКорректировки Тогда
			СтрокаТаблицы.ПризнакДляСтрокДоИзменения = Истина;
			СтрокаТаблицы.ПризнакДляСтрок            = Истина;
		// Если ничего не изменилось, то установим суммы до изменения
		Иначе
			СтрокаТаблицы.СуммаВзаиморасчетовДоИзменения    = СтрокаТаблицы.СуммаВзаиморасчетовДоКорректировки;
			СтрокаТаблицы.СуммаНДСВзаиморасчетовДоИзменения = СтрокаТаблицы.СуммаНДСВзаиморасчетовДоКорректировки;
			СтрокаТаблицы.ПризнакДляСтрокДоИзменения        = Ложь;
			Если СтрокаТаблицы.СуммаРуб = СтрокаТаблицы.СуммаРубДоКорректировки Тогда
				СтрокаТаблицы.СуммаВзаиморасчетов    = СтрокаТаблицы.СуммаВзаиморасчетовДоКорректировки;
				СтрокаТаблицы.СуммаНДСВзаиморасчетов = СтрокаТаблицы.СуммаНДСВзаиморасчетовДоКорректировки;
				СтрокаТаблицы.ПризнакДляСтрок        = Ложь;
			Иначе
				СтрокаТаблицы.ПризнакДляСтрок        = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// До изменения
	
	ТаблицаДоИзменения = ТаблицаДляОбработки.Скопировать(Новый Структура("ПризнакДляСтрокДоИзменения", Истина));
	ТаблицаДоИзменения.Индексы.Добавить("ИмяСписка");
	ТаблицаДоИзменения.Индексы.Добавить("НомерСтроки");
		
	// Приведем сумму взаиморасчетов до изменения к курсу на дату документа
	СуммаРубДоИзменения = ТаблицаДоИзменения.Итог("СуммаРубДоИзменения");
	СуммаВзаиморасчетовДляПересчетаСуммДоИзменения = Окр(СуммаРубДоИзменения / КурсДвиженийПоследнейКорректировки, 2);
	ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
		СуммаВзаиморасчетовДляПересчетаСуммДоИзменения, ТаблицаДоИзменения, "СуммаВзаиморасчетовДоИзменения", "СуммаРубДоИзменения");
		
	// Приведем сумму НДС до изменения к курсу на дату документа
	СуммаНДСРубДоИзменения = ТаблицаДляОбработки.Итог("СуммаНДСРубДоИзменения");
	Если Реквизиты.РасчетыВУсловныхЕдиницах Тогда
		СуммаНДСВзаиморасчетовДляПересчетаСуммДоИзменения = Окр(СуммаНДСРубДоИзменения / КурсДвиженийПоследнейКорректировки, 2);
	Иначе
		СуммаНДСВзаиморасчетовДляПересчетаСуммДоИзменения = Окр(СуммаНДСРубДоИзменения / КурсВзаиморасчетов, 2);
	КонецЕсли;
	ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
		СуммаНДСВзаиморасчетовДляПересчетаСуммДоИзменения, ТаблицаДляОбработки, "СуммаНДСВзаиморасчетовДоИзменения", "СуммаРубДоИзменения");
		
	Для Каждого СтрокаТаблицы Из ТаблицаДоИзменения Цикл
		
		ОтборСтрок  = Новый Структура("ИмяСписка, НомерСтроки", СтрокаТаблицы.ИмяСписка, СтрокаТаблицы.НомерСтроки);
		МассивСтрок = ТаблицаДляОбработки.НайтиСтроки(ОтборСтрок);
			
		СтрокаТаблицыДляОбработки = МассивСтрок[0];
		СтрокаТаблицыДляОбработки.СуммаВзаиморасчетовДоИзменения    = СтрокаТаблицы.СуммаВзаиморасчетовДоИзменения;
		СтрокаТаблицыДляОбработки.СуммаНДСВзаиморасчетовДоИзменения = СтрокаТаблицы.СуммаНДСВзаиморасчетовДоИзменения;
			
		Если СтрокаТаблицы.СуммаРубДоИзменения = СтрокаТаблицы.СуммаРуб Тогда
			СтрокаТаблицыДляОбработки.СуммаВзаиморасчетов    = СтрокаТаблицыДляОбработки.СуммаВзаиморасчетовДоИзменения;
			СтрокаТаблицыДляОбработки.СуммаНДСВзаиморасчетов = СтрокаТаблицыДляОбработки.СуммаНДСВзаиморасчетовДоИзменения;
			СтрокаТаблицыДляОбработки.ПризнакДляСтрок        = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаДоИзменения = Неопределено; // ТаблицаДоИзменения больше не требуется
	
	// Текущая корректировка
	
	ТаблицаПоТекущейКорректировке = ТаблицаДляОбработки.Скопировать(Новый Структура("ПризнакДляСтрок", Истина));
	ТаблицаПоТекущейКорректировке.Индексы.Добавить("ИмяСписка");
	ТаблицаПоТекущейКорректировке.Индексы.Добавить("НомерСтроки");
	
	ТаблицаДляРасчетаПоКурсуВзаиморасчетов    = Неопределено;
	СуммаРубПоТекущейКорректировке            = ТаблицаПоТекущейКорректировке.Итог("СуммаРуб");
	СуммаРубДоИзмененияПоТекущейКорректировки = ТаблицаПоТекущейКорректировке.Итог("СуммаРубДоИзменения");
	
	Если СуммаРубДоИзмененияПоТекущейКорректировки < СуммаРубПоТекущейКорректировке Тогда
		
		ТаблицаДляРасчетаПоКурсуВзаиморасчетов = Новый ТаблицаЗначений;
		ТаблицаДляРасчетаПоКурсуВзаиморасчетов.Колонки.Добавить("ИмяСписка");
		ТаблицаДляРасчетаПоКурсуВзаиморасчетов.Колонки.Добавить("НомерСтроки");
		ТаблицаДляРасчетаПоКурсуВзаиморасчетов.Колонки.Добавить("СуммаСамогоУвеличения");
		ТаблицаДляРасчетаПоКурсуВзаиморасчетов.Колонки.Добавить("СуммаУвеличенияДляРасчетаПоКурсуВзаиморасчетов");
		ТаблицаДляРасчетаПоКурсуВзаиморасчетов.Колонки.Добавить("СуммаВзаиморасчетовУвеличения");
		ТаблицаДляРасчетаПоКурсуВзаиморасчетов.Колонки.Добавить("СуммаНДСВзаиморасчетовУвеличения");
		ТаблицаДляРасчетаПоКурсуВзаиморасчетов.Индексы.Добавить("ИмяСписка");
		ТаблицаДляРасчетаПоКурсуВзаиморасчетов.Индексы.Добавить("НомерСтроки");
		
		Для Каждого СтрокаТаблицы Из ТаблицаПоТекущейКорректировке Цикл
			
			Если СтрокаТаблицы.СуммаРуб > СтрокаТаблицы.СуммаРубДоИзменения 
				И СтрокаТаблицы.СуммаРуб > СтрокаТаблицы.СуммаРубДоКорректировки Тогда
				
				НоваяСтрока                                  = ТаблицаДляРасчетаПоКурсуВзаиморасчетов.Добавить();
				НоваяСтрока.ИмяСписка                        = СтрокаТаблицы.ИмяСписка;
				НоваяСтрока.НомерСтроки                      = СтрокаТаблицы.НомерСтроки;
				НоваяСтрока.СуммаСамогоУвеличения            = СтрокаТаблицы.СуммаРуб - СтрокаТаблицы.СуммаРубДоИзменения;
				НоваяСтрока.СуммаВзаиморасчетовУвеличения    = 0;
				НоваяСтрока.СуммаНДСВзаиморасчетовУвеличения = 0;
				НоваяСтрока.СуммаУвеличенияДляРасчетаПоКурсуВзаиморасчетов = 0;
			КонецЕсли;
			
		КонецЦикла;
		
		УвеличениеСуммаРубПодлежащаяРаспределению = СуммаРубПоТекущейКорректировке - СуммаРубДоИзмененияПоТекущейКорректировки;
		ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
			УвеличениеСуммаРубПодлежащаяРаспределению, ТаблицаДляРасчетаПоКурсуВзаиморасчетов, "СуммаУвеличенияДляРасчетаПоКурсуВзаиморасчетов", "СуммаСамогоУвеличения");
		
		СуммаВзаиморасчетовПодлежащаяРаспределению = Окр(УвеличениеСуммаРубПодлежащаяРаспределению / КурсВзаиморасчетов, 2);
		ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
			СуммаВзаиморасчетовПодлежащаяРаспределению, ТаблицаДляРасчетаПоКурсуВзаиморасчетов, "СуммаВзаиморасчетовУвеличения", "СуммаУвеличенияДляРасчетаПоКурсуВзаиморасчетов");
		ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
			СуммаВзаиморасчетовПодлежащаяРаспределению, ТаблицаДляРасчетаПоКурсуВзаиморасчетов, "СуммаНДСВзаиморасчетовУвеличения", "СуммаУвеличенияДляРасчетаПоКурсуВзаиморасчетов");
		
		Для Каждого СтрокаТаблицы Из ТаблицаПоТекущейКорректировке Цикл
			
			ОтборСтрок  = Новый Структура("ИмяСписка, НомерСтроки", СтрокаТаблицы.ИмяСписка, СтрокаТаблицы.НомерСтроки);
			МассивСтрок = ТаблицаДляРасчетаПоКурсуВзаиморасчетов.НайтиСтроки(ОтборСтрок);
			
			Если МассивСтрок.Количество() > 0 Тогда
				СтрокаТаблицыДляРаспределенияУвеличенияДоИзменения = МассивСтрок[0];
			Иначе
				Продолжить;
			КонецЕсли;
			
			СтрокаТаблицы.СуммаРуб = СтрокаТаблицы.СуммаРуб - СтрокаТаблицыДляРаспределенияУвеличенияДоИзменения.СуммаУвеличенияДляРасчетаПоКурсуВзаиморасчетов;
			Если СтрокаТаблицы.СуммаРуб = СтрокаТаблицы.СуммаРубДоИзменения Тогда
				СтрокаТаблицы.СуммаВзаиморасчетов       = СтрокаТаблицы.СуммаВзаиморасчетовДоИзменения;
				СтрокаТаблицы.СуммаНДСВзаиморасчетов    = СтрокаТаблицы.СуммаНДСВзаиморасчетовДоИзменения;
				СтрокаТаблицы.ПризнакДляСтрок = Ложь;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Окончательные преобразования
	
	ТаблицаОкончательныхПреобразований = ТаблицаПоТекущейКорректировке.Скопировать(Новый Структура("ПризнакДляСтрок", Истина));
	ТаблицаОкончательныхПреобразований.Индексы.Добавить("ИмяСписка");
	ТаблицаОкончательныхПреобразований.Индексы.Добавить("НомерСтроки");
	
	СуммаРубДляРаспределения = ТаблицаОкончательныхПреобразований.Итог("СуммаРуб");
	СуммаВзаиморасчетовДляРаспределения = Окр(СуммаРубДляРаспределения / КурсДвиженийПоследнейКорректировки, 2);
	ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
		СуммаВзаиморасчетовДляРаспределения, ТаблицаОкончательныхПреобразований, "СуммаВзаиморасчетов", "СуммаРуб");
		
	СуммаНДСРубДляРаспределения = ТаблицаОкончательныхПреобразований.Итог("СуммаНДСРуб");
	Если Реквизиты.РасчетыВУсловныхЕдиницах Тогда
		СуммаНДСВзаиморасчетовДляРаспределения = Окр(СуммаНДСРубДляРаспределения / КурсДвиженийПоследнейКорректировки, 2);
	Иначе
		СуммаНДСВзаиморасчетовДляРаспределения = Окр(СуммаНДСРубДляРаспределения / КурсВзаиморасчетов, 2);
	КонецЕсли;
	ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
		СуммаНДСВзаиморасчетовДляРаспределения, ТаблицаОкончательныхПреобразований, "СуммаНДСВзаиморасчетов", "СуммаРуб");
		
	//Теперь соберем все в одной таблице, переданной в процедуру
	Для Каждого СтрокаТаблицы Из ТаблицаДляОбработки Цикл
		
		ОтборСтрок = Новый Структура("ИмяСписка, НомерСтроки", СтрокаТаблицы.ИмяСписка, СтрокаТаблицы.НомерСтроки);
		
		Если ТаблицаДляРасчетаПоКурсуВзаиморасчетов = Неопределено Тогда
			СтрокаТаблицыДляРасчетаПоКурсуВзаиморасчетов = Неопределено;
		Иначе
			МассивСтрок = ТаблицаДляРасчетаПоКурсуВзаиморасчетов.НайтиСтроки(ОтборСтрок);
			Если МассивСтрок.Количество() > 0 Тогда
				СтрокаТаблицыДляРасчетаПоКурсуВзаиморасчетов = МассивСтрок[0];
			Иначе
				СтрокаТаблицыДляРасчетаПоКурсуВзаиморасчетов = Неопределено;
			КонецЕсли;
		КонецЕсли;
		
		МассивСтрок = ТаблицаОкончательныхПреобразований.НайтиСтроки(ОтборСтрок);
		Если МассивСтрок.Количество() > 0 Тогда
			СтрокаТаблицыОкончательныхПреобразований = МассивСтрок[0];
		Иначе
			СтрокаТаблицыОкончательныхПреобразований = Неопределено;
		КонецЕсли;
		
		МассивСтрок = ТаблицаПоТекущейКорректировке.НайтиСтроки(ОтборСтрок);
		Если МассивСтрок.Количество() > 0 Тогда
			СтрокаТаблицыПоТекущейКорректировке = МассивСтрок[0];
		Иначе
			СтрокаТаблицыПоТекущейКорректировке = Неопределено;
		КонецЕсли;
		
		Если СтрокаТаблицыОкончательныхПреобразований = Неопределено Тогда
			Если СтрокаТаблицыПоТекущейКорректировке = Неопределено Тогда
				Продолжить;
			Иначе
				СтрокаТаблицы.СуммаВзаиморасчетов    = СтрокаТаблицыПоТекущейКорректировке.СуммаВзаиморасчетов;
				СтрокаТаблицы.СуммаНДСВзаиморасчетов = СтрокаТаблицыПоТекущейКорректировке.СуммаНДСВзаиморасчетов;
				
				Если НЕ СтрокаТаблицыДляРасчетаПоКурсуВзаиморасчетов = Неопределено Тогда
					
					СтрокаТаблицы.СуммаВзаиморасчетов    = СтрокаТаблицы.СуммаВзаиморасчетов    + СтрокаТаблицыДляРасчетаПоКурсуВзаиморасчетов.СуммаВзаиморасчетовУвеличения;
					СтрокаТаблицы.СуммаНДСВзаиморасчетов = СтрокаТаблицы.СуммаНДСВзаиморасчетов + СтрокаТаблицыДляРасчетаПоКурсуВзаиморасчетов.СуммаНДСВзаиморасчетовУвеличения;
					
				КонецЕсли;
			КонецЕсли;
		Иначе
			
			СтрокаТаблицы.СуммаВзаиморасчетов    = СтрокаТаблицыОкончательныхПреобразований.СуммаВзаиморасчетов;
			СтрокаТаблицы.СуммаНДСВзаиморасчетов = СтрокаТаблицыОкончательныхПреобразований.СуммаНДСВзаиморасчетов;
			
			Если НЕ СтрокаТаблицыДляРасчетаПоКурсуВзаиморасчетов = Неопределено Тогда
				СтрокаТаблицы.СуммаВзаиморасчетов    = СтрокаТаблицы.СуммаВзаиморасчетов    + СтрокаТаблицыДляРасчетаПоКурсуВзаиморасчетов.СуммаВзаиморасчетовУвеличения;
				СтрокаТаблицы.СуммаНДСВзаиморасчетов = СтрокаТаблицы.СуммаНДСВзаиморасчетов + СтрокаТаблицыДляРасчетаПоКурсуВзаиморасчетов.СуммаНДСВзаиморасчетовУвеличения;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПодготовитьТаблицуДокументаРасчетыВВалютеОформленныйВВалюте(ТаблицаДляОбработки, Реквизиты)
	
	Если НЕ Реквизиты.БратьПоПоследнейКорректировке Тогда
		
		Для Каждого СтрокаТаблицы Из ТаблицаДляОбработки Цикл
			
			СтрокаТаблицы.СуммаВзаиморасчетовДоКорректировки    = СтрокаТаблицы.СуммаВзаиморасчетовДоИзменения;
			СтрокаТаблицы.СуммаНДСВзаиморасчетовДоКорректировки = СтрокаТаблицы.СуммаНДСВзаиморасчетовДоИзменения;
			
		КонецЦикла;
		
	КонецЕсли;	
	
	СуммаВзаиморасчетовДоКорректировки = ТаблицаДляОбработки.Итог("СуммаВзаиморасчетовДоКорректировки");
	СуммаВзаиморасчетовДоИзменения     = ТаблицаДляОбработки.Итог("СуммаВзаиморасчетовДоИзменения");
	СуммаВзаиморасчетов                = ТаблицаДляОбработки.Итог("СуммаВзаиморасчетов");
	//Пересчитаем ту часть табличной части, которая ДоКорректировки
	РублеваяСуммаДляПересчетаСуммДоКорректировки = Окр(СуммаВзаиморасчетовДоКорректировки*?(Реквизиты.КратностьВзаиморасчетов = 0, 0, Реквизиты.КурсДвиженийПервичногоДокумента/Реквизиты.КратностьВзаиморасчетов), 2);
	
	ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
	РублеваяСуммаДляПересчетаСуммДоКорректировки, ТаблицаДляОбработки, "СуммаРубДоКорректировки", "СуммаВзаиморасчетовДоКорректировки");
	
	Если НЕ Реквизиты.РасчетыВУсловныхЕдиницах Тогда
		РублеваяСуммаДляПересчетаСуммДоКорректировки = Окр(СуммаВзаиморасчетовДоКорректировки*?(Реквизиты.КратностьВзаиморасчетов = 0, 0, Реквизиты.КурсВзаиморасчетов/Реквизиты.КратностьВзаиморасчетов), 2);
	КонецЕсли;	
	ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
	РублеваяСуммаДляПересчетаСуммДоКорректировки, ТаблицаДляОбработки, "СуммаБезНДСРубДоКорректировки", "СуммаВзаиморасчетовДоКорректировки");
	
	//Подсчитаем СуммаНДСРубДокорректировки, и для тех строк, которые вообще не менялись пропишем сумы до корректировки
	ТаблицаДляОбработки.Колонки.Добавить("ПризнакДляСтрокДоИзменения");
	ТаблицаДляОбработки.Колонки.Добавить("ПризнакДляСтрок");
	
	Для Каждого СтрокаТаблицы Из ТаблицаДляОбработки Цикл
		
		ПроцентНДСДоКорректировки = ?(СтрокаТаблицы.СуммаВзаиморасчетовДоКорректировки = 0, 0, Окр(СтрокаТаблицы.СуммаНДСВзаиморасчетовДоКорректировки/(СтрокаТаблицы.СуммаВзаиморасчетовДоКорректировки - СтрокаТаблицы.СуммаНДСВзаиморасчетовДоКорректировки), 2)*100);
		
		СтрокаТаблицы.СуммаНДСРубДоКорректировки = Окр(СтрокаТаблицы.СуммаБезНДСРубДоКорректировки*ПроцентНДСДоКорректировки/(100 + ПроцентНДСДоКорректировки), 2);			
		
		Если СтрокаТаблицы.СуммаВзаиморасчетовДоИзменения = СтрокаТаблицы.СуммаВзаиморасчетовДоКорректировки Тогда
			
			СтрокаТаблицы.СуммаРубДоИзменения = СтрокаТаблицы.СуммаРубДоКорректировки;
			
			СтрокаТаблицы.СуммаБезНДСРубДоИзменения = СтрокаТаблицы.СуммаБезНДСРубДоКорректировки;
			
			ПроцентНДСДоИзменения = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТаблицы.СтавкаНДСДоИзменения);
			
			Если Реквизиты.НДСИсчисляетсяНалоговымАгентом Тогда
				СтрокаТаблицы.СуммаНДСРубДоИзменения = 0;
			ИначеЕсли ПроцентНДСДоКорректировки <> ПроцентНДСДоИзменения Тогда
				СтрокаТаблицы.СуммаНДСРубДоИзменения = Окр(СтрокаТаблицы.СуммаБезНДСРубДоИзменения*ПроцентНДСДоИзменения/(100 + ПроцентНДСДоИзменения), 2);
			Иначе
				СтрокаТаблицы.СуммаНДСРубДоИзменения = СтрокаТаблицы.СуммаНДСРубДоКорректировки;
			КонецЕсли;	
			
			СтрокаТаблицы.СуммаБезНДСРубДоИзменения = СтрокаТаблицы.СуммаБезНДСРубДоИзменения - СтрокаТаблицы.СуммаНДСРубДоИзменения;
			
			СтрокаТаблицы.ПризнакДляСтрокДоИзменения = Ложь;
			
			Если СтрокаТаблицы.СуммаВзаиморасчетов = СтрокаТаблицы.СуммаВзаиморасчетовДоКорректировки Тогда
				
				СтрокаТаблицы.СуммаРуб = СтрокаТаблицы.СуммаРубДоКорректировки;
				
				СтрокаТаблицы.СуммаБезНДСРуб = СтрокаТаблицы.СуммаБезНДСРубДоКорректировки;
				
				ПроцентНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТаблицы.СтавкаНДС);
				
				Если Реквизиты.НДСИсчисляетсяНалоговымАгентом Тогда
					СтрокаТаблицы.СуммаНДСРуб = 0;
				ИначеЕсли ПроцентНДСДоКорректировки <> ПроцентНДС Тогда
					СтрокаТаблицы.СуммаНДСРуб = Окр(СтрокаТаблицы.СуммаБезНДСРубДоИзменения*ПроцентНДС/(100 + ПроцентНДС), 2);
				Иначе
					СтрокаТаблицы.СуммаНДСРуб = СтрокаТаблицы.СуммаНДСРубДоКорректировки;
				КонецЕсли;	
				
				СтрокаТаблицы.СуммаБезНДСРуб = СтрокаТаблицы.СуммаБезНДСРуб - СтрокаТаблицы.СуммаНДСРуб;
				
				СтрокаТаблицы.ПризнакДляСтрок = Ложь;
				
			Иначе
				СтрокаТаблицы.ПризнакДляСтрок = Истина;
			КонецЕсли;	
			
		Иначе
			
			СтрокаТаблицы.ПризнакДляСтрокДоИзменения = Истина;
			СтрокаТаблицы.ПризнакДляСтрок = Истина;
			
		КонецЕсли;
		
		СтрокаТаблицы.СуммаБезНДСРубДоКорректировки = СтрокаТаблицы.СуммаБезНДСРубДоКорректировки - СтрокаТаблицы.СуммаНДСРубДоКорректировки;
		
	КонецЦикла;
	
	ОтборСтрок = Новый Структура("ИмяСписка, НомерСтроки");
	
	//Теперь пересчитаем ту часть таблицы, которая ДоИзменения
	Отбор = Новый Структура("ПризнакДляСтрокДоИзменения", Истина);
	ТаблицаДоИзменения = ТаблицаДляОбработки.Скопировать(Отбор);
	
	ТаблицаДоИзменения.Индексы.Добавить("ИмяСписка");
	ТаблицаДоИзменения.Индексы.Добавить("НомерСтроки");
	
	СуммаВзаиморасчетовДоИзмененияДляИзменения     = ТаблицаДоИзменения.Итог("СуммаВзаиморасчетовДоИзменения");
	
	СуммаВзаиморасчетовДоИзмененияПодлежащаяПересчетуПоКурсуДвиженийДокумента = ТаблицаДоИзменения.Итог("СуммаВзаиморасчетовДоИзменения");
	
	РублеваяСуммаПодлежащаяРаспределению = Окр(СуммаВзаиморасчетовДоИзмененияПодлежащаяПересчетуПоКурсуДвиженийДокумента*?(Реквизиты.КратностьВзаиморасчетов = 0, 0, Реквизиты.КурсДвиженийПоследнейКорректировки/Реквизиты.КратностьВзаиморасчетов), 2);
	
	ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
	РублеваяСуммаПодлежащаяРаспределению, ТаблицаДоИзменения, "СуммаРубДоИзменения", "СуммаВзаиморасчетовДоИзменения");
	
	Если НЕ Реквизиты.РасчетыВУсловныхЕдиницах Тогда
		РублеваяСуммаПодлежащаяРаспределению = Окр(СуммаВзаиморасчетовДоИзмененияПодлежащаяПересчетуПоКурсуДвиженийДокумента*?(Реквизиты.КратностьВзаиморасчетов = 0, 0, Реквизиты.КурсВзаиморасчетов/Реквизиты.КратностьВзаиморасчетов), 2);
	КонецЕсли;	
	
	ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
	РублеваяСуммаПодлежащаяРаспределению, ТаблицаДоИзменения, "СуммаБезНДСРубДоИзменения", "СуммаВзаиморасчетовДоИзменения");
	
	Для Каждого СтрокаТаблицы Из ТаблицаДоИзменения Цикл
		
		ОтборСтрок.ИмяСписка   = СтрокаТаблицы.ИмяСписка;
		ОтборСтрок.НомерСтроки = СтрокаТаблицы.НомерСтроки;
		
		ПроцентНДС = УчетНДСвызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТаблицы.СтавкаНДСДоИзменения);
		
		СтрокаТаблицы.СуммаНДСРубДоИзменения = Окр(СтрокаТаблицы.СуммаБезНДСРубДоИзменения*ПроцентНДС/(100 + ПроцентНДС), 2);
		
		СтрокаТаблицы.СуммаБезНДСРубДоИзменения = СтрокаТаблицы.СуммаБезНДСРубДоИзменения - СтрокаТаблицы.СуммаНДСРубДоИзменения;
		
		МассивСтрок = ТаблицаДляОбработки.НайтиСтроки(ОтборСтрок);
		
		СтрокаТаблицыДляОбработки = МассивСтрок[0];
		
		СтрокаТаблицыДляОбработки.СуммаРубДоИзменения            = СтрокаТаблицы.СуммаРубДоИзменения;
		СтрокаТаблицыДляОбработки.СуммаНДСРубДоИзменения         = СтрокаТаблицы.СуммаНДСРубДоИзменения;
		СтрокаТаблицыДляОбработки.СуммаБезНДСРубДоИзменения      = СтрокаТаблицы.СуммаБезНДСРубДоИзменения;
		
		Если СтрокаТаблицы.СуммаВзаиморасчетовДоИзменения = СтрокаТаблицы.СуммаВзаиморасчетов Тогда
			
			СтрокаТаблицыДляОбработки.СуммаРуб        = СтрокаТаблицыДляОбработки.СуммаРубДоИзменения;
			СтрокаТаблицыДляОбработки.СуммаНДСРуб     = СтрокаТаблицыДляОбработки.СуммаНДСРубДоИзменения;
			СтрокаТаблицыДляОбработки.СуммаБезНДСРуб  = СтрокаТаблицыДляОбработки.СуммаБезНДСРубДоИзменения;
			СтрокаТаблицыДляОбработки.ПризнакДляСтрок = Ложь;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаДоИзменения = "";
	
	//Теперь выполним пересчет для той части таблицы, которая по текущей корректировке.
	Отбор = Новый Структура("ПризнакДляСтрок", Истина);
	ТаблицаПоТекущейКорректировке = ТаблицаДляОбработки.Скопировать(Отбор);
	
	ТаблицаПоТекущейКорректировке.Индексы.Добавить("ИмяСписка");
	ТаблицаПоТекущейКорректировке.Индексы.Добавить("НомерСтроки");
	
	ОбновленнаяТаблицаПоТекущейкорректировкиДляДальнейшихПреобразований = Неопределено;
	
	ТаблицаДляРасчетаПоКурсуВзаиморасчетов                              = Неопределено;
	
	СуммаВзаиморасчетовПоТекущейКорректировке                = ТаблицаПоТекущейКорректировке.Итог("СуммаВзаиморасчетов");
	СуммаВзаиморасчетовДоИзмененияПоТекущейКорректировки     = ТаблицаПоТекущейКорректировке.Итог("СуммаВзаиморасчетовДоИзменения");
			
	Если СуммаВзаиморасчетовДоИзмененияПоТекущейКорректировки < СуммаВзаиморасчетовПоТекущейКорректировке Тогда
		
		ТаблицаДляРасчетаПоКурсуВзаиморасчетов = Новый ТаблицаЗначений;
		ТаблицаДляРасчетаПоКурсуВзаиморасчетов.Колонки.Добавить("ИмяСписка");
		ТаблицаДляРасчетаПоКурсуВзаиморасчетов.Колонки.Добавить("НомерСтроки");
		ТаблицаДляРасчетаПоКурсуВзаиморасчетов.Колонки.Добавить("СуммаСамогоУвеличения");
		ТаблицаДляРасчетаПоКурсуВзаиморасчетов.Колонки.Добавить("СуммаУвеличенияДляРасчетаПоКурсуВзаиморасчетов");
		ТаблицаДляРасчетаПоКурсуВзаиморасчетов.Колонки.Добавить("СуммаРубУвеличения");
		ТаблицаДляРасчетаПоКурсуВзаиморасчетов.Колонки.Добавить("СуммаБезНДСРубУвеличения");
		ТаблицаДляРасчетаПоКурсуВзаиморасчетов.Колонки.Добавить("СуммаНДСУвеличения");
		ТаблицаДляРасчетаПоКурсуВзаиморасчетов.Колонки.Добавить("СуммаНДСРубУвеличения");
		
		Для Каждого СтрокаТаблицы Из ТаблицаПоТекущейКорректировке Цикл
			
			Если СтрокаТаблицы.СуммаВзаиморасчетов > СтрокаТаблицы.СуммаВзаиморасчетовДоИзменения 
				и СтрокаТаблицы.СуммаВзаиморасчетов > СтрокаТаблицы.СуммаВзаиморасчетовДоКорректировки Тогда
				
				НоваяСтрока = ТаблицаДляРасчетаПоКурсуВзаиморасчетов.Добавить();
				
				НоваяСтрока.ИмяСписка             = СтрокаТаблицы.ИмяСписка;
				НоваяСтрока.НомерСтроки           = СтрокаТаблицы.НомерСтроки;
				НоваяСтрока.СуммаСамогоУвеличения = СтрокаТаблицы.СуммаВзаиморасчетов - СтрокаТаблицы.СуммаВзаиморасчетовДоИзменения;
				НоваяСтрока.СуммаУвеличенияДляРасчетаПоКурсуВзаиморасчетов = 0;
				НоваяСтрока.СуммаРубУвеличения       = 0;
				НоваяСтрока.СуммаБезНДСРубУвеличения = 0;
				НоваяСтрока.СуммаНДСУвеличения       = СтрокаТаблицы.СуммаНДСВзаиморасчетов - СтрокаТаблицы.СуммаНДСВзаиморасчетовДоИзменения;
				НоваяСтрока.СуммаНДСРубУвеличения    = 0;
				
			КонецЕсли;
			
		КонецЦикла;
		
		ТаблицаДляРасчетаПоКурсуВзаиморасчетов.Индексы.Добавить("ИмяСписка");
		ТаблицаДляРасчетаПоКурсуВзаиморасчетов.Индексы.Добавить("НомерСтроки");
		
		УвеличениеСуммаВзаиморасчетовПодлежащаяРаспределению = СуммаВзаиморасчетовПоТекущейКорректировке - СуммаВзаиморасчетовДоИзмененияПоТекущейКорректировки;
		
		ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
		УвеличениеСуммаВзаиморасчетовПодлежащаяРаспределению, ТаблицаДляРасчетаПоКурсуВзаиморасчетов, "СуммаУвеличенияДляРасчетаПоКурсуВзаиморасчетов", "СуммаСамогоУвеличения");
		
		РублеваяСуммаПодлежащаяРаспределению = Окр(УвеличениеСуммаВзаиморасчетовПодлежащаяРаспределению*?(Реквизиты.КратностьВзаиморасчетов = 0, 0, Реквизиты.КурсВзаиморасчетов/Реквизиты.КратностьВзаиморасчетов), 2);
		
		ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
		РублеваяСуммаПодлежащаяРаспределению, ТаблицаДляРасчетаПоКурсуВзаиморасчетов, "СуммаРубУвеличения", "СуммаУвеличенияДляРасчетаПоКурсуВзаиморасчетов");
		
		Если НЕ Реквизиты.РасчетыВУсловныхЕдиницах Тогда
			РублеваяСуммаПодлежащаяРаспределению = Окр(УвеличениеСуммаВзаиморасчетовПодлежащаяРаспределению*?(Реквизиты.КратностьВзаиморасчетов = 0, 0, Реквизиты.КурсВзаиморасчетов/Реквизиты.КратностьВзаиморасчетов), 2);
		КонецЕсли;	
		
		ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
		РублеваяСуммаПодлежащаяРаспределению, ТаблицаДляРасчетаПоКурсуВзаиморасчетов, "СуммаБезНДСРубУвеличения", "СуммаУвеличенияДляРасчетаПоКурсуВзаиморасчетов");
		
		Для Каждого СтрокаТаблицы Из ТаблицаПоТекущейКорректировке Цикл
			
			ОтборСтрок.ИмяСписка   = СтрокаТаблицы.ИмяСписка;
			ОтборСтрок.НомерСтроки = СтрокаТаблицы.НомерСтроки;
			
			МассивСтрок = ТаблицаДляРасчетаПоКурсуВзаиморасчетов.НайтиСтроки(ОтборСтрок);
			
			Если МассивСтрок.Количество() > 0 Тогда
				СтрокаТаблицыДляРаспределенияУвеличенияДоИзменения = МассивСтрок[0];
			Иначе
				Продолжить;
			КонецЕсли;
			
			ПроцентНДСУвеличения = УчетНДСвызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТаблицы.СтавкаНДС);
			
			СтрокаТаблицыДляРаспределенияУвеличенияДоИзменения.СуммаНДСРубУвеличения = Окр(СтрокаТаблицыДляРаспределенияУвеличенияДоИзменения.СуммаНДСУвеличения * ?(Реквизиты.КратностьВзаиморасчетов = 0, 0, Реквизиты.КурсВзаиморасчетов/Реквизиты.КратностьВзаиморасчетов), 2);
			СтрокаТаблицыДляРаспределенияУвеличенияДоИзменения.СуммаБезНДСРубУвеличения = СтрокаТаблицыДляРаспределенияУвеличенияДоИзменения.СуммаБезНДСРубУвеличения - СтрокаТаблицыДляРаспределенияУвеличенияДоИзменения.СуммаНДСРубУвеличения;
			
			СтрокаТаблицы.СуммаВзаиморасчетов = СтрокаТаблицы.СуммаВзаиморасчетов - СтрокаТаблицыДляРаспределенияУвеличенияДоИзменения.СуммаУвеличенияДляРасчетаПоКурсуВзаиморасчетов;
			
			Если СтрокаТаблицы.СуммаВзаиморасчетов = СтрокаТаблицы.СуммаВзаиморасчетовДоИзменения Тогда
				
				СтрокаТаблицы.СуммаРуб       = СтрокаТаблицы.СуммаРубДоИзменения;
				СтрокаТаблицы.СуммаНДСРуб    = СтрокаТаблицы.СуммаНДСРубДоИзменения;
				СтрокаТаблицы.СуммаБезНДСРуб = СтрокаТаблицы.СуммаНДСРубДоИзменения;
				
				СтрокаТаблицы.ПризнакДляСтрок = Ложь;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ТаблицаОкончательныхПреобразований = ТаблицаПоТекущейКорректировке.Скопировать(Отбор);
	
	ТаблицаОкончательныхПреобразований.Индексы.Добавить("ИмяСписка");
	ТаблицаОкончательныхПреобразований.Индексы.Добавить("НомерСтроки");
	
	СуммаВзаиморасчетовДляРаспределения = ТаблицаОкончательныхПреобразований.Итог("СуммаВзаиморасчетов");
	
	РублеваяСуммаДляРаспределения = Окр(СуммаВзаиморасчетовДляРаспределения*?(Реквизиты.КратностьВзаиморасчетов = 0, 0, Реквизиты.КурсДвиженийПоследнейКорректировки/Реквизиты.КратностьВзаиморасчетов), 2);
	
	ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
	РублеваяСуммаДляРаспределения, ТаблицаОкончательныхПреобразований, "СуммаРуб", "СуммаВзаиморасчетов");
	
	Если НЕ Реквизиты.РасчетыВУсловныхЕдиницах Тогда
		РублеваяСуммаДляРаспределения = Окр(СуммаВзаиморасчетовДляРаспределения*?(Реквизиты.КратностьВзаиморасчетов = 0, 0, Реквизиты.КурсВзаиморасчетов/Реквизиты.КратностьВзаиморасчетов), 2);
	КонецЕсли;
	
	ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
	РублеваяСуммаДляРаспределения, ТаблицаОкончательныхПреобразований, "СуммаБезНДСРуб", "СуммаВзаиморасчетов");
	
	//Теперь соберем все в одной таблице, переданной в процедуру
	Для Каждого СтрокаТаблицы Из ТаблицаДляОбработки Цикл
		
		ОтборСтрок.ИмяСписка   = СтрокаТаблицы.ИмяСписка;
		ОтборСтрок.НомерСтроки = СтрокаТаблицы.НомерСтроки;
		
		Если ТаблицаДляРасчетаПоКурсуВзаиморасчетов = Неопределено Тогда
			СтрокаТаблицыДляРасчетаПоКурсуВзаиморасчетов = Неопределено;
		Иначе
			
			МассивСтрок = ТаблицаДляРасчетаПоКурсуВзаиморасчетов.НайтиСтроки(ОтборСтрок);
			
			Если МассивСтрок.Количество() > 0 Тогда
				СтрокаТаблицыДляРасчетаПоКурсуВзаиморасчетов = МассивСтрок[0];
			Иначе
				СтрокаТаблицыДляРасчетаПоКурсуВзаиморасчетов = Неопределено;
			КонецЕсли;	
				
		КонецЕсли;
		
		МассивСтрок = ТаблицаОкончательныхПреобразований.НайтиСтроки(ОтборСтрок);
		
		Если МассивСтрок.Количество() > 0 Тогда
			СтрокаТаблицыОкончательныхПреобразований = МассивСтрок[0];
		Иначе
			СтрокаТаблицыОкончательныхПреобразований = Неопределено;
		КонецЕсли;
		
		МассивСтрок = ТаблицаПоТекущейКорректировке.НайтиСтроки(ОтборСтрок);
		
		Если МассивСтрок.Количество() > 0 Тогда
			СтрокаТаблицыПоТекущейКорректировке = МассивСтрок[0];
		Иначе
			СтрокаТаблицыПоТекущейКорректировке = Неопределено;
		КонецЕсли;	
		
		Если СтрокаТаблицыОкончательныхПреобразований = Неопределено Тогда
			
			Если СтрокаТаблицыПоТекущейКорректировке = Неопределено Тогда
				Продолжить;
			Иначе
				
				СтрокаТаблицы.СуммаРуб       = СтрокаТаблицыПоТекущейКорректировке.СуммаРуб;
				СтрокаТаблицы.СуммаНДСРуб    = СтрокаТаблицыПоТекущейКорректировке.СуммаНДСРуб;
				СтрокаТаблицы.СуммаБезНДСРуб = СтрокаТаблицыПоТекущейКорректировке.СуммаБезНДСРуб;
				
				Если НЕ СтрокаТаблицыДляРасчетаПоКурсуВзаиморасчетов = Неопределено Тогда
					
					СтрокаТаблицы.СуммаРуб       = СтрокаТаблицы.СуммаРуб       + СтрокаТаблицыДляРасчетаПоКурсуВзаиморасчетов.СуммаРубУвеличения;
					СтрокаТаблицы.СуммаНДСРуб    = СтрокаТаблицы.СуммаНДСРуб    + СтрокаТаблицыДляРасчетаПоКурсуВзаиморасчетов.СуммаНДСРубУвеличения;
					СтрокаТаблицы.СуммаБезНДСРуб = СтрокаТаблицы.СуммаБезНДСРуб + СтрокаТаблицыДляРасчетаПоКурсуВзаиморасчетов.СуммаБезНДСРубУвеличения;
					
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			
			ПроцентНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТаблицы.СтавкаНДС);
			
			Если Реквизиты.НДСИсчисляетсяНалоговымАгентом Тогда
				СтрокаТаблицыОкончательныхПреобразований.СуммаНДСРуб = 0;
			Иначе
				СтрокаТаблицыОкончательныхПреобразований.СуммаНДСРуб = Окр(СтрокаТаблицыОкончательныхПреобразований.СуммаБезНДСРуб*ПроцентНДС/(100+ПроцентНДС), 2);
				СтрокаТаблицыОкончательныхПреобразований.СуммаБезНДСРуб = СтрокаТаблицыОкончательныхПреобразований.СуммаБезНДСРуб - СтрокаТаблицыОкончательныхПреобразований.СуммаНДСРуб;
			КонецЕсли;
			
			
			СтрокаТаблицы.СуммаРуб       = СтрокаТаблицыОкончательныхПреобразований.СуммаРуб;
			СтрокаТаблицы.СуммаНДСРуб    = СтрокаТаблицыОкончательныхПреобразований.СуммаНДСРуб;
			СтрокаТаблицы.СуммаБезНДСРуб = СтрокаТаблицыОкончательныхПреобразований.СуммаБезНДСРуб;
			
			Если НЕ СтрокаТаблицыДляРасчетаПоКурсуВзаиморасчетов = Неопределено Тогда
				
				СтрокаТаблицы.СуммаРуб       = СтрокаТаблицы.СуммаРуб       + СтрокаТаблицыДляРасчетаПоКурсуВзаиморасчетов.СуммаРубУвеличения;
				СтрокаТаблицы.СуммаНДСРуб    = СтрокаТаблицы.СуммаНДСРуб    + СтрокаТаблицыДляРасчетаПоКурсуВзаиморасчетов.СуммаНДСРубУвеличения;
				СтрокаТаблицы.СуммаБезНДСРуб = СтрокаТаблицы.СуммаБезНДСРуб + СтрокаТаблицыДляРасчетаПоКурсуВзаиморасчетов.СуммаБезНДСРубУвеличения;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
						
КонецПроцедуры	

Процедура ПодготовитьТаблицуДокументаРасчетыВВалюте(ТаблицаДляОбработки, Реквизиты)
	
	// В зависимости от того в какой валюте оформлен документ пользователь может управлять одной из сумм.
	// В случае если документ оформлен в валюте, то пользователь управляет СуммаВзаиморасчетов 
	// и корректировать стоит СуммаРуб.
	// В случае если документ оформлен в валюте регламентированного учета, то пользователь управляет СуммаРуб 
	// и корректировать стоит СуммаВзаиморасчетов
	ДокументОформленВРублях = (Реквизиты.ВалютаДокумента = Реквизиты.ВалютаРеглУчета);
	
	Если ДокументОформленВРублях Тогда
		ПодготовитьТаблицуДокументаРасчетыВВалютеОформленныйВРублях(ТаблицаДляОбработки, Реквизиты);
	Иначе
		Если Реквизиты.РасчетКорректировокСУчетомРекомендацийПоНДС Тогда 
			ПодготовитьТаблицуДокументаРасчетыВВалютеСУчетомРекомендацийПоНДС(ТаблицаДляОбработки, Реквизиты);
		Иначе
			ПодготовитьТаблицуДокументаРасчетыВВалютеОформленныйВВалюте(ТаблицаДляОбработки, Реквизиты);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодготовитьТаблицыДокументаРасчетыВВалюте(Запрос, Реквизиты, НомераТаблиц)
	
	ЗапросПолученияТаблицДокументаДляРасчетаВалютныхСумм = Новый Запрос;
	ЗапросПолученияТаблицДокументаДляРасчетаВалютныхСумм.УстановитьПараметр("Ссылка",           Реквизиты.Регистратор);
	ЗапросПолученияТаблицДокументаДляРасчетаВалютныхСумм.УстановитьПараметр("СуммаВключаетНДС", Реквизиты.СуммаВключаетНДС);
	ЗапросПолученияТаблицДокументаДляРасчетаВалютныхСумм.Текст = ТекстЗапросаПолученияТаблицДокументаДляРасчетаВалютныхСумм(Реквизиты);
	ТаблицаДляОбработки = ЗапросПолученияТаблицДокументаДляРасчетаВалютныхСумм.Выполнить().Выгрузить();
	ТаблицаДляОбработки.Индексы.Добавить("ИмяСписка");
	ТаблицаДляОбработки.Индексы.Добавить("НомерСтроки");
	
	ПодготовитьТаблицуДокументаРасчетыВВалюте(ТаблицаДляОбработки, Реквизиты);
	
	Запрос.УстановитьПараметр("ТаблицаПосчитанныхРублевыхСумм", ТаблицаДляОбработки);
	Запрос.Текст = ТекстЗапросаВременныеТаблицыДокументаРасчетыВВалюте(НомераТаблиц, Реквизиты);
	
КонецПроцедуры

Функция ТекстЗапросаПолученияТаблицДокументаДляРасчетаВалютныхСумм(Реквизиты)
	
	ТекстЗапроса = "";
	
	Если Реквизиты.ЕстьТовары Тогда
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ТаблицаТовары.Ссылка,
		|	""Товары"" КАК ИмяСписка,
		|	ТаблицаТовары.НомерСтроки,
		|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаТовары.СтавкаНДСДоИзменения КАК СтавкаНДСДоИзменения,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.Сумма
		|		ИНАЧЕ ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС
		|	КОНЕЦ КАК СуммаВзаиморасчетов,
		|	ТаблицаТовары.СуммаНДС КАК СуммаНДСВзаиморасчетов,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.Сумма
		|		ИНАЧЕ ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС
		|	КОНЕЦ КАК СуммаРуб,
		|	ТаблицаТовары.СуммаНДС КАК СуммаНДСРуб,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.Сумма - ТаблицаТовары.СуммаНДС
		|		ИНАЧЕ ТаблицаТовары.Сумма
		|	КОНЕЦ КАК СуммаБезНДСРуб,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.СуммаДоИзменения
		|		ИНАЧЕ ТаблицаТовары.СуммаДоИзменения + ТаблицаТовары.СуммаНДСДоИзменения
		|	КОНЕЦ КАК СуммаВзаиморасчетовДоИзменения,
		|	ТаблицаТовары.СуммаНДСДоИзменения КАК СуммаНДСВзаиморасчетовДоИзменения,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.СуммаДоИзменения
		|		ИНАЧЕ ТаблицаТовары.СуммаДоИзменения + ТаблицаТовары.СуммаНДСДоИзменения
		|	КОНЕЦ КАК СуммаРубДоИзменения,
		|	ТаблицаТовары.СуммаНДСДоИзменения КАК СуммаНДСРубДоИзменения,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.СуммаДоИзменения - ТаблицаТовары.СуммаНДСДоИзменения
		|		ИНАЧЕ ТаблицаТовары.СуммаДоИзменения
		|	КОНЕЦ КАК СуммаБезНДСРубДоИзменения,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.СуммаДоКорректировки
		|		ИНАЧЕ ТаблицаТовары.СуммаДоКорректировки + ТаблицаТовары.СуммаНДСДоКорректировки
		|	КОНЕЦ КАК СуммаВзаиморасчетовДоКорректировки,
		|	ТаблицаТовары.СуммаНДСДоКорректировки КАК СуммаНДСВзаиморасчетовДоКорректировки,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.СуммаДоКорректировки
		|		ИНАЧЕ ТаблицаТовары.СуммаДоКорректировки + ТаблицаТовары.СуммаНДСДоКорректировки
		|	КОНЕЦ КАК СуммаРубДоКорректировки,
		|	ТаблицаТовары.СуммаНДСДоКорректировки КАК СуммаНДСРубДоКорректировки,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаТовары.СуммаДоКорректировки - ТаблицаТовары.СуммаНДСДоКорректировки
		|		ИНАЧЕ ТаблицаТовары.СуммаДоКорректировки
		|	КОНЕЦ КАК СуммаБезНДСРубДоКорректировки,
		|	ТаблицаТовары.ИдентификаторСтроки КАК ИдентификаторСтроки
		|ИЗ
		|	Документ.КорректировкаРеализации.Товары КАК ТаблицаТовары
		|ГДЕ
		|	ТаблицаТовары.Ссылка = &Ссылка";
	КонецЕсли;
	
	Если Реквизиты.ЕстьТовары и Реквизиты.ЕстьУслуги Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
		
	КонецЕсли;	
	
	Если Реквизиты.ЕстьУслуги Тогда
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ТаблицаУслуги.Ссылка КАК Ссылка,
		|	""Услуги"" КАК ИмяСписка,
		|	ТаблицаУслуги.НомерСтроки КАК НомерСтроки,
		|	ТаблицаУслуги.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаУслуги.СтавкаНДСДоИзменения КАК СтавкаНДСДоИзменения,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаУслуги.Сумма
		|		ИНАЧЕ ТаблицаУслуги.Сумма + ТаблицаУслуги.СуммаНДС
		|	КОНЕЦ КАК СуммаВзаиморасчетов,
		|	ТаблицаУслуги.СуммаНДС КАК СуммаНДСВзаиморасчетов,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаУслуги.Сумма
		|		ИНАЧЕ ТаблицаУслуги.Сумма + ТаблицаУслуги.СуммаНДС
		|	КОНЕЦ КАК СуммаРуб,
		|	ТаблицаУслуги.СуммаНДС КАК СуммаНДСРуб,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаУслуги.Сумма - ТаблицаУслуги.СуммаНДС
		|		ИНАЧЕ ТаблицаУслуги.Сумма
		|	КОНЕЦ КАК СуммаБезНДСРуб,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаУслуги.СуммаДоИзменения
		|		ИНАЧЕ ТаблицаУслуги.СуммаДоИзменения + ТаблицаУслуги.СуммаНДСДоИзменения
		|	КОНЕЦ КАК СуммаВзаиморасчетовДоИзменения,
		|	ТаблицаУслуги.СуммаНДСДоИзменения КАК СуммаНДСВзаиморасчетовДоИзменения,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаУслуги.СуммаДоИзменения
		|		ИНАЧЕ ТаблицаУслуги.СуммаДоИзменения + ТаблицаУслуги.СуммаНДСДоИзменения
		|	КОНЕЦ КАК СуммаРубДоИзменения,
		|	ТаблицаУслуги.СуммаНДСДоИзменения КАК СуммаНДСРубДоИзменения,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаУслуги.СуммаДоИзменения - ТаблицаУслуги.СуммаНДСДоИзменения
		|		ИНАЧЕ ТаблицаУслуги.СуммаДоИзменения
		|	КОНЕЦ КАК СуммаБезНДСРубДоИзменения,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаУслуги.СуммаДоКорректировки
		|		ИНАЧЕ ТаблицаУслуги.СуммаДоКорректировки + ТаблицаУслуги.СуммаНДСДоКорректировки
		|	КОНЕЦ КАК СуммаВзаиморасчетовДоКорректировки,
		|	ТаблицаУслуги.СуммаНДСДоКорректировки КАК СуммаНДСВзаиморасчетовДоКорректировки,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаУслуги.СуммаДоКорректировки
		|		ИНАЧЕ ТаблицаУслуги.СуммаДоКорректировки + ТаблицаУслуги.СуммаНДСДоКорректировки
		|	КОНЕЦ КАК СуммаРубДоКорректировки,
		|	ТаблицаУслуги.СуммаНДСДоКорректировки КАК СуммаНДСРубДоКорректировки,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаУслуги.СуммаДоКорректировки - ТаблицаУслуги.СуммаНДСДоКорректировки
		|		ИНАЧЕ ТаблицаУслуги.СуммаДоКорректировки
		|	КОНЕЦ КАК СуммаБезНДСРубДоКорректировки,
		|	ТаблицаУслуги.ИдентификаторСтроки КАК ИдентификаторСтроки
		|ИЗ
		|	Документ.КорректировкаРеализации.Услуги КАК ТаблицаУслуги
		|ГДЕ
		|	ТаблицаУслуги.Ссылка = &Ссылка";
	КонецЕсли;
	
	Если (Реквизиты.ЕстьТовары или Реквизиты.ЕстьУслуги) и Реквизиты.ЕстьАгентскиеУслуги Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
		
	КонецЕсли;	
	
	Если Реквизиты.ЕстьАгентскиеУслуги Тогда
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ТаблицаАгентскиеУслуги.Ссылка КАК Ссылка,
		|	""АгентскиеУслуги"" КАК ИмяСписка,
		|	ТаблицаАгентскиеУслуги.НомерСтроки КАК НомерСтроки,
		|	ТаблицаАгентскиеУслуги.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаАгентскиеУслуги.СтавкаНДСДоИзменения КАК СтавкаНДСДоИзменения,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаАгентскиеУслуги.Сумма
		|		ИНАЧЕ ТаблицаАгентскиеУслуги.Сумма + ТаблицаАгентскиеУслуги.СуммаНДС
		|	КОНЕЦ КАК СуммаВзаиморасчетов,
		|	ТаблицаАгентскиеУслуги.СуммаНДС КАК СуммаНДСВзаиморасчетов,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаАгентскиеУслуги.Сумма
		|		ИНАЧЕ ТаблицаАгентскиеУслуги.Сумма + ТаблицаАгентскиеУслуги.СуммаНДС
		|	КОНЕЦ КАК СуммаРуб,
		|	ТаблицаАгентскиеУслуги.СуммаНДС КАК СуммаНДСРуб,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаАгентскиеУслуги.Сумма - ТаблицаАгентскиеУслуги.СуммаНДС
		|		ИНАЧЕ ТаблицаАгентскиеУслуги.Сумма
		|	КОНЕЦ КАК СуммаБезНДСРуб,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаАгентскиеУслуги.СуммаДоИзменения
		|		ИНАЧЕ ТаблицаАгентскиеУслуги.СуммаДоИзменения + ТаблицаАгентскиеУслуги.СуммаНДСДоИзменения
		|	КОНЕЦ КАК СуммаВзаиморасчетовДоИзменения,
		|	ТаблицаАгентскиеУслуги.СуммаНДСДоИзменения КАК СуммаНДСВзаиморасчетовДоИзменения,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаАгентскиеУслуги.СуммаДоИзменения
		|		ИНАЧЕ ТаблицаАгентскиеУслуги.СуммаДоИзменения + ТаблицаАгентскиеУслуги.СуммаНДСДоИзменения
		|	КОНЕЦ КАК СуммаРубДоИзменения,
		|	ТаблицаАгентскиеУслуги.СуммаНДСДоИзменения КАК СуммаНДСРубДоИзменения,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаАгентскиеУслуги.СуммаДоИзменения - ТаблицаАгентскиеУслуги.СуммаНДСДоИзменения
		|		ИНАЧЕ ТаблицаАгентскиеУслуги.СуммаДоИзменения
		|	КОНЕЦ КАК СуммаБезНДСРубДоИзменения,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаАгентскиеУслуги.СуммаДоКорректировки
		|		ИНАЧЕ ТаблицаАгентскиеУслуги.СуммаДоКорректировки + ТаблицаАгентскиеУслуги.СуммаНДСДоКорректировки
		|	КОНЕЦ КАК СуммаВзаиморасчетовДоКорректировки,
		|	ТаблицаАгентскиеУслуги.СуммаНДСДоКорректировки КАК СуммаНДСВзаиморасчетовДоКорректировки,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаАгентскиеУслуги.СуммаДоКорректировки
		|		ИНАЧЕ ТаблицаАгентскиеУслуги.СуммаДоКорректировки + ТаблицаАгентскиеУслуги.СуммаНДСДоКорректировки
		|	КОНЕЦ КАК СуммаРубДоКорректировки,
		|	ТаблицаАгентскиеУслуги.СуммаНДСДоКорректировки КАК СуммаНДСРубДоКорректировки,
		|	ВЫБОР
		|		КОГДА &СуммаВключаетНДС
		|			ТОГДА ТаблицаАгентскиеУслуги.СуммаДоКорректировки - ТаблицаАгентскиеУслуги.СуммаНДСДоКорректировки
		|		ИНАЧЕ ТаблицаАгентскиеУслуги.СуммаДоКорректировки
		|	КОНЕЦ КАК СуммаБезНДСРубДоКорректировки,
		|	ТаблицаАгентскиеУслуги.ИдентификаторСтроки КАК ИдентификаторСтроки
		|ИЗ
		|	Документ.КорректировкаРеализации.АгентскиеУслуги КАК ТаблицаАгентскиеУслуги
		|ГДЕ
		|	ТаблицаАгентскиеУслуги.Ссылка = &Ссылка";
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ТекстЗапросаВременныеТаблицыДокументаРасчетыВВалюте(НомераТаблиц, Реквизиты)

	НомераТаблиц.Вставить("ВременнаяТаблицаПосчитанныхРублевыхСумм", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаПосчитанныхРублевыхСумм.Ссылка,
	|	ТаблицаПосчитанныхРублевыхСумм.ИмяСписка,
	|	ТаблицаПосчитанныхРублевыхСумм.НомерСтроки,
	|	ТаблицаПосчитанныхРублевыхСумм.СуммаВзаиморасчетов,
	|	ТаблицаПосчитанныхРублевыхСумм.СуммаНДСВзаиморасчетов,
	|	ТаблицаПосчитанныхРублевыхСумм.СуммаРуб,
	|	ТаблицаПосчитанныхРублевыхСумм.СуммаНДСРуб,
	|	ТаблицаПосчитанныхРублевыхСумм.СуммаБезНДСРуб,
	|	ТаблицаПосчитанныхРублевыхСумм.СуммаВзаиморасчетовДоИзменения,
	|	ТаблицаПосчитанныхРублевыхСумм.СуммаНДСВзаиморасчетовДоИзменения,
	|	ТаблицаПосчитанныхРублевыхСумм.СуммаРубДоИзменения,
	|	ТаблицаПосчитанныхРублевыхСумм.СуммаНДСРубДоИзменения,
	|	ТаблицаПосчитанныхРублевыхСумм.СуммаБезНДСРубДоИзменения,
	|	ТаблицаПосчитанныхРублевыхСумм.СуммаВзаиморасчетовДоКорректировки,
	|	ТаблицаПосчитанныхРублевыхСумм.СуммаНДСВзаиморасчетовДоКорректировки,
	|	ТаблицаПосчитанныхРублевыхСумм.СуммаРубДоКорректировки,
	|	ТаблицаПосчитанныхРублевыхСумм.СуммаНДСРубДоКорректировки,
	|	ТаблицаПосчитанныхРублевыхСумм.СуммаБезНДСРубДоКорректировки
	|ПОМЕСТИТЬ ТаблицаПосчитанныхРублевыхСумм
	|ИЗ
	|	&ТаблицаПосчитанныхРублевыхСумм КАК ТаблицаПосчитанныхРублевыхСумм
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ИмяСписка,
	|	НомерСтроки"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Если Реквизиты.ЕстьТовары ИЛИ Реквизиты.ЕстьУслуги Тогда	
		НомераТаблиц.Вставить("ВременнаяТаблицаСчетаЕНВД", НомераТаблиц.Количество());
		Если Реквизиты.ПлательщикЕНВД Тогда
			ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|	СчетаДоходовИРасходовЕНВД.Счет
			|ПОМЕСТИТЬ СчетаЕНВД
			|ИЗ
			|	РегистрСведений.СчетаДоходовИРасходовЕНВД КАК СчетаДоходовИРасходовЕНВД
			|ГДЕ
			|	СчетаДоходовИРасходовЕНВД.Счет В ИЕРАРХИИ(&СчетВыручка)
			|	И НЕ СчетаДоходовИРасходовЕНВД.Счет.ЗапретитьИспользоватьВПроводках";
		Иначе
			ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|	NULL КАК Счет
			|ПОМЕСТИТЬ СчетаЕНВД
			|ГДЕ
			|	ЛОЖЬ";
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если Реквизиты.ЕстьТовары Тогда
		НомераТаблиц.Вставить("ВременнаяТаблицаТовары", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ТаблицаТовары.Ссылка,
		|	ТаблицаТовары.НомерСтроки,
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.Количество,
		|	ТаблицаТовары.КоличествоДоИзменения,
		|	ТаблицаТовары.КоличествоДоКорректировки,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаВзаиморасчетов,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаНДСВзаиморасчетов,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаРуб,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаНДСРуб,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаБезНДСРуб,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаВзаиморасчетовДоИзменения,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаНДСВзаиморасчетовДоИзменения,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаРубДоИзменения,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаНДСРубДоИзменения,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаБезНДСРубДоИзменения,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаВзаиморасчетовДоКорректировки,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаНДСВзаиморасчетовДоКорректировки,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаРубДоКорректировки,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаНДСРубДоКорректировки,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаБезНДСРубДоКорректировки,
		|	ТаблицаТовары.СтавкаНДС,
		|	ТаблицаТовары.СтавкаНДСДоИзменения,
		|	ТаблицаТовары.НомерГТД,
		|	ТаблицаТовары.НомерГТДДоИзменения,
		|	ТаблицаТовары.СтранаПроисхождения,
		|	ТаблицаТовары.СтранаПроисхожденияДоИзменения,
		|	ТаблицаТовары.СчетУчета,
		|	ТаблицаТовары.ПереданныеСчетУчета,
		|	ВЫБОР
		|		КОГДА ТаблицаТовары.СчетУчета В (&СчетаТоваровКомитентов)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоКомиссия,
		|	ТаблицаТовары.СчетУчета.Забалансовый КАК СчетУчетаЗабалансовый,
		|	ТаблицаТовары.СчетУчетаНДСПоРеализации,
		|	ТаблицаТовары.СчетДоходов,
		|	ВЫБОР
		|		КОГДА СчетаЕНВД.Счет ЕСТЬ НЕ NULL 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ДоходЕНВД,
		|	ТаблицаТовары.СчетРасходов,
		|	ТаблицаТовары.Субконто,
		|	ТаблицаТовары.ЕстьВДокументеРеализации,
		|	ТаблицаТовары.ИдентификаторСтроки,
		|	ТаблицаТовары.ПрослеживаемыйКомплект
		|ПОМЕСТИТЬ ТаблицаТовары
		|ИЗ
		|	Документ.КорректировкаРеализации.Товары КАК ТаблицаТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПосчитанныхРублевыхСумм КАК ТаблицаПосчитанныхРублевыхСумм
		|		ПО ТаблицаТовары.Ссылка = ТаблицаПосчитанныхРублевыхСумм.Ссылка
		|			И ТаблицаТовары.НомерСтроки = ТаблицаПосчитанныхРублевыхСумм.НомерСтроки
		|			И (ТаблицаПосчитанныхРублевыхСумм.ИмяСписка = ""Товары"")
		|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаЕНВД КАК СчетаЕНВД
		|		ПО ТаблицаТовары.СчетДоходов = СчетаЕНВД.Счет"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если Реквизиты.ЕстьУслуги Тогда
		НомераТаблиц.Вставить("ВременнаяТаблицаУслуги", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ТаблицаУслуги.Ссылка КАК Ссылка,
		|	ТаблицаУслуги.НомерСтроки КАК НомерСтроки,
		|	ТаблицаУслуги.Номенклатура КАК Номенклатура,
		|	ТаблицаУслуги.Количество КАК Количество,
		|	ТаблицаУслуги.КоличествоДоИзменения КАК КоличествоДоИзменения,
		|	ТаблицаУслуги.КоличествоДоКорректировки КАК КоличествоДоКорректировки,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаНДСВзаиморасчетов КАК СуммаНДСВзаиморасчетов,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаРуб КАК СуммаРуб,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаНДСРуб КАК СуммаНДСРуб,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаБезНДСРуб КАК СуммаБезНДСРуб,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаВзаиморасчетовДоИзменения КАК СуммаВзаиморасчетовДоИзменения,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаНДСВзаиморасчетовДоИзменения КАК СуммаНДСВзаиморасчетовДоИзменения,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаРубДоИзменения КАК СуммаРубДоИзменения,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаНДСРубДоИзменения КАК СуммаНДСРубДоИзменения,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаБезНДСРубДоИзменения КАК СуммаБезНДСРубДоИзменения,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаВзаиморасчетовДоКорректировки КАК СуммаВзаиморасчетовДоКорректировки,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаНДСВзаиморасчетовДоКорректировки КАК СуммаНДСВзаиморасчетовДоКорректировки,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаРубДоКорректировки КАК СуммаРубДоКорректировки,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаНДСРубДоКорректировки КАК СуммаНДСРубДоКорректировки,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаБезНДСРубДоКорректировки КАК СуммаБезНДСРубДоКорректировки,
		|	ТаблицаУслуги.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаУслуги.СтавкаНДСДоИзменения КАК СтавкаНДСДоИзменения,
		|	ТаблицаУслуги.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
		|	ТаблицаУслуги.СчетДоходов КАК СчетДоходов,
		|	ВЫБОР
		|		КОГДА СчетаЕНВД.Счет ЕСТЬ НЕ NULL 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ДоходЕНВД,
		|	ТаблицаУслуги.СчетРасходов КАК СчетРасходов,
		|	ТаблицаУслуги.Субконто КАК Субконто,
		|	ТаблицаУслуги.ЕстьВДокументеРеализации КАК ЕстьВДокументеРеализации,
		|	ВЫБОР
		|		КОГДА ТаблицаУслуги.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
		|				И Реквизиты.Дата >= ДАТАВРЕМЯ(2019, 7, 1)
		|			ТОГДА Реквизиты.КодОперацииПоСделке В (&МассивКодовРеализацийЗаРубеж)
		|						И НЕ ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ОперацияНеПодлежитНалогообложению, ЛОЖЬ)
		|					ИЛИ СправочникНоменклатура.КодРаздел7ДекларацииНДС В (&МассивКодовРеализацийЗаРубеж)
		|						И НЕ Реквизиты.КодОперацииПоСделкеСоответствуетСт149НКРФ
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК УслугиЗаРубежом,
		|	ТаблицаУслуги.ИдентификаторСтроки КАК ИдентификаторСтроки
		|ПОМЕСТИТЬ ТаблицаУслуги
		|ИЗ
		|	Документ.КорректировкаРеализации.Услуги КАК ТаблицаУслуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПосчитанныхРублевыхСумм КАК ТаблицаПосчитанныхРублевыхСумм
		|		ПО ТаблицаУслуги.Ссылка = ТаблицаПосчитанныхРублевыхСумм.Ссылка
		|			И ТаблицаУслуги.НомерСтроки = ТаблицаПосчитанныхРублевыхСумм.НомерСтроки
		|			И (ТаблицаПосчитанныхРублевыхСумм.ИмяСписка = ""Услуги"")
		|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаЕНВД КАК СчетаЕНВД
		|		ПО ТаблицаУслуги.СчетДоходов = СчетаЕНВД.Счет
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КодыОперацийРаздела7ДекларацииПоНДС КАК КодыОперацийРаздела7ДекларацииПоНДС
		|			ПО СправочникНоменклатура.КодРаздел7ДекларацииНДС = КодыОперацийРаздела7ДекларацииПоНДС.Ссылка
		|		ПО ТаблицаУслуги.Номенклатура = СправочникНоменклатура.Ссылка"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если Реквизиты.ЕстьАгентскиеУслуги Тогда
		НомераТаблиц.Вставить("ВременнаяТаблицаАгентскиеУслуги", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	ТаблицаАгентскиеУслуги.Ссылка,
		|	ТаблицаАгентскиеУслуги.НомерСтроки,
		|	ТаблицаАгентскиеУслуги.Номенклатура,
		|	ТаблицаАгентскиеУслуги.Количество,
		|	ТаблицаАгентскиеУслуги.КоличествоДоИзменения,
		|	ТаблицаАгентскиеУслуги.КоличествоДоКорректировки,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаВзаиморасчетов,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаНДСВзаиморасчетов,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаРуб,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаНДСРуб,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаБезНДСРуб,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаВзаиморасчетовДоИзменения,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаНДСВзаиморасчетовДоИзменения,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаРубДоИзменения,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаНДСРубДоИзменения,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаБезНДСРубДоИзменения,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаВзаиморасчетовДоКорректировки,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаНДСВзаиморасчетовДоКорректировки,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаРубДоКорректировки,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаНДСРубДоКорректировки,
		|	ТаблицаПосчитанныхРублевыхСумм.СуммаБезНДСРубДоКорректировки,
		|	ТаблицаАгентскиеУслуги.СтавкаНДС,
		|	ТаблицаАгентскиеУслуги.СтавкаНДСДоИзменения,
		|	ТаблицаАгентскиеУслуги.Контрагент,
		|	ТаблицаАгентскиеУслуги.ДоговорКонтрагента,
		|	ТаблицаАгентскиеУслуги.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|	ТаблицаАгентскиеУслуги.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
		|	ТаблицаАгентскиеУслуги.СчетРасчетов,
		|	ТаблицаАгентскиеУслуги.ИдентификаторСтроки КАК ИдентификаторСтроки
		|ПОМЕСТИТЬ ТаблицаАгентскиеУслуги
		|ИЗ
		|	Документ.КорректировкаРеализации.АгентскиеУслуги КАК ТаблицаАгентскиеУслуги
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПосчитанныхРублевыхСумм КАК ТаблицаПосчитанныхРублевыхСумм
		|	ПО ТаблицаАгентскиеУслуги.Ссылка = ТаблицаПосчитанныхРублевыхСумм.Ссылка
		|	И ТаблицаАгентскиеУслуги.НомерСтроки = ТаблицаПосчитанныхРублевыхСумм.НомерСтроки
		|	И (ТаблицаПосчитанныхРублевыхСумм.ИмяСписка = ""АгентскиеУслуги"")"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапорсаПоТаблицамДокументаДляРасчетаКурсовПриИзмененииКорректировки()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	ВЫБОР
	|		КОГДА РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ТоварыДоИзменения)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары)
	|		КОГДА РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.УслугиДоИзменения)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги)
	|		КОГДА РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслугиДоИзменения)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги)
	|		ИНАЧЕ РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента
	|	КОНЕЦ КАК ТабличнаяЧастьДокумента,
	|	РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	СУММА(ВЫБОР
	|			КОГДА РублевыеСуммыДокументовВВалюте.Всего > 0
	|				ТОГДА РублевыеСуммыДокументовВВалюте.Всего
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ВсегоРуб,
	|	СУММА(ВЫБОР
	|			КОГДА РублевыеСуммыДокументовВВалюте.Всего < 0
	|				ТОГДА РублевыеСуммыДокументовВВалюте.Всего
	|			ИНАЧЕ 0
	|		КОНЕЦ) * -1 КАК ВсегоРубДоКорректировки
	|ПОМЕСТИТЬ РублевыеСуммыДокуемнтовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РублевыеСуммыДокументовВВалюте.Регистратор = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РублевыеСуммыДокументовВВалюте.Регистратор,
	|	ВЫБОР
	|		КОГДА РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ТоварыДоИзменения)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары)
	|		КОГДА РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.УслугиДоИзменения)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги)
	|		КОГДА РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслугиДоИзменения)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги)
	|		ИНАЧЕ РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента
	|	КОНЕЦ,
	|	РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	ТабличнаяЧастьДокумента,
	|	НомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаРеализацииТовары.Ссылка,
	|	КорректировкаРеализацииТовары.НомерСтроки,
	|	ВЫБОР
	|		КОГДА &СуммаВключаетНДС
	|			ТОГДА КорректировкаРеализацииТовары.СуммаДоКорректировки
	|		ИНАЧЕ КорректировкаРеализацииТовары.СуммаДоКорректировки + КорректировкаРеализацииТовары.СуммаНДСДоКорректировки
	|	КОНЕЦ КАК ВсегоВзаиморасчетовДоКорректировки,
	|	ВЫБОР
	|		КОГДА &СуммаВключаетНДС
	|			ТОГДА КорректировкаРеализацииТовары.Сумма
	|		ИНАЧЕ КорректировкаРеализацииТовары.Сумма + КорректировкаРеализацииТовары.СуммаНДС
	|	КОНЕЦ КАК ВсегоВзаиморасчетов,
	|	ЕСТЬNULL(РублевыеСуммыДокуемнтовВВалюте.ВсегоРуб, 0) КАК ВсегоРуб,
	|	ЕСТЬNULL(РублевыеСуммыДокуемнтовВВалюте.ВсегоРубДоКорректировки, 0) КАК ВсегоРубДоКорректировки
	|ПОМЕСТИТЬ ТаблицаДокументаДляРасчетаКурса
	|ИЗ
	|	Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РублевыеСуммыДокуемнтовВВалюте КАК РублевыеСуммыДокуемнтовВВалюте
	|		ПО КорректировкаРеализацииТовары.Ссылка = РублевыеСуммыДокуемнтовВВалюте.Регистратор
	|			И КорректировкаРеализацииТовары.НомерСтроки = РублевыеСуммыДокуемнтовВВалюте.НомерСтрокиДокумента
	|			И (РублевыеСуммыДокуемнтовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
	|ГДЕ
	|	КорректировкаРеализацииТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкаРеализацииУслуги.Ссылка,
	|	КорректировкаРеализацииУслуги.НомерСтроки,
	|	ВЫБОР
	|		КОГДА &СуммаВключаетНДС
	|			ТОГДА КорректировкаРеализацииУслуги.СуммаДоКорректировки
	|		ИНАЧЕ КорректировкаРеализацииУслуги.СуммаДоКорректировки + КорректировкаРеализацииУслуги.СуммаНДСДоКорректировки
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &СуммаВключаетНДС
	|			ТОГДА КорректировкаРеализацииУслуги.Сумма
	|		ИНАЧЕ КорректировкаРеализацииУслуги.Сумма + КорректировкаРеализацииУслуги.СуммаНДС
	|	КОНЕЦ,
	|	ЕСТЬNULL(РублевыеСуммыДокуемнтовВВалюте.ВсегоРуб, 0),
	|	ЕСТЬNULL(РублевыеСуммыДокуемнтовВВалюте.ВсегоРубДоКорректировки, 0)
	|ИЗ
	|	Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализацииУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ РублевыеСуммыДокуемнтовВВалюте КАК РублевыеСуммыДокуемнтовВВалюте
	|		ПО КорректировкаРеализацииУслуги.Ссылка = РублевыеСуммыДокуемнтовВВалюте.Регистратор
	|			И КорректировкаРеализацииУслуги.НомерСтроки = РублевыеСуммыДокуемнтовВВалюте.НомерСтрокиДокумента
	|			И (РублевыеСуммыДокуемнтовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|ГДЕ
	|	КорректировкаРеализацииУслуги.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкаРеализацииАгентскиеУслуги.Ссылка,
	|	КорректировкаРеализацииАгентскиеУслуги.НомерСтроки,
	|	ВЫБОР
	|		КОГДА &СуммаВключаетНДС
	|			ТОГДА КорректировкаРеализацииАгентскиеУслуги.СуммаДоКорректировки
	|		ИНАЧЕ КорректировкаРеализацииАгентскиеУслуги.СуммаДоКорректировки + КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоКорректировки
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &СуммаВключаетНДС
	|			ТОГДА КорректировкаРеализацииАгентскиеУслуги.Сумма
	|		ИНАЧЕ КорректировкаРеализацииАгентскиеУслуги.Сумма + КорректировкаРеализацииАгентскиеУслуги.СуммаНДС
	|	КОНЕЦ,
	|	ЕСТЬNULL(РублевыеСуммыДокуемнтовВВалюте.ВсегоРуб, 0),
	|	ЕСТЬNULL(РублевыеСуммыДокуемнтовВВалюте.ВсегоРубДоКорректировки, 0)
	|ИЗ
	|	Документ.КорректировкаРеализации.АгентскиеУслуги КАК КорректировкаРеализацииАгентскиеУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ РублевыеСуммыДокуемнтовВВалюте КАК РублевыеСуммыДокуемнтовВВалюте
	|		ПО КорректировкаРеализацииАгентскиеУслуги.Ссылка = РублевыеСуммыДокуемнтовВВалюте.Регистратор
	|			И КорректировкаРеализацииАгентскиеУслуги.НомерСтроки = РублевыеСуммыДокуемнтовВВалюте.НомерСтрокиДокумента
	|			И (РублевыеСуммыДокуемнтовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги))
	|ГДЕ
	|	КорректировкаРеализацииАгентскиеУслуги.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РублевыеСуммыДокуемнтовВВалюте
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументаДляРасчетаКурса.Ссылка,
	|	СУММА(ТаблицаДокументаДляРасчетаКурса.ВсегоВзаиморасчетовДоКорректировки) КАК ВсегоВзаиморасчетовДоКорректировки,
	|	СУММА(ТаблицаДокументаДляРасчетаКурса.ВсегоВзаиморасчетов) КАК ВсегоВзаиморасчетов,
	|	СУММА(ТаблицаДокументаДляРасчетаКурса.ВсегоРуб) КАК ВсегоРуб,
	|	СУММА(ТаблицаДокументаДляРасчетаКурса.ВсегоРубДоКорректировки) КАК ВсегоРубДоКорректировки
	|ИЗ
	|	ТаблицаДокументаДляРасчетаКурса КАК ТаблицаДокументаДляРасчетаКурса
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокументаДляРасчетаКурса.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаДокументаДляРасчетаКурса";
	
	Возврат ТекстЗапроса;
	
Конецфункции

Функция ТекстЗапросаСписаниеТоваров(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если НЕ Реквизиты.КорректироватьБУиНУ
		ИЛИ НЕ Реквизиты.ЕстьТовары Тогда
		ПараметрыПроведения.Вставить("СписаниеТоваровРеквизиты",     Неопределено);
		ПараметрыПроведения.Вставить("СписаниеТоваровТаблицаТовары", Неопределено);
	    Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("СписаниеТоваровРеквизиты",     НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СписаниеТоваровТаблицаТовары", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.Склад,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.ПодразделениеОрганизации КАК КорПодразделение,
	|	ВЫБОР
	|		КОГДА &ЭтоДоговорСКомиссионером
	|			ТОГДА ""Корректировка передачи товаров на комиссию""
	|		ИНАЧЕ ""Корректировка реализации товаров""
	|	КОНЕЦ КАК Содержание,
	|	Реквизиты.ОтчетностьПодписана,
	|	&ДокументРеализацииСсылка КАК ДокументРеализацииСсылка,
	|	&ДатаДокументаРеализации КАК ДатаДокументаРеализации,
	|	&ПрошлыйПериод КАК ПрошлыйПериод,
	|	Реквизиты.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.СтатьяПрочихДоходовИРасходов
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Товары"" КАК ИмяСписка,
	|	&СинонимТовары КАК СинонимСписка,
	|	Реквизиты.Дата КАК Период,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.СчетУчета,
	|	ТаблицаТовары.Номенклатура,
	|	Реквизиты.Склад КАК Склад,
	|	ТаблицаТовары.Количество - ТаблицаТовары.КоличествоДоИзменения КАК Количество,
	|	Реквизиты.ПодразделениеОрганизации КАК КорПодразделение,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
	|	0 КАК Себестоимость,
	|	НЕОПРЕДЕЛЕНО КАК Комитент,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКомиссии,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетАвансовСКомитентом,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетРасчетовСКомитентом,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаРасчетовСКомитентом,
	|	0 КАК СуммаРасчетовСКомитентом,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСчет45
	|			ТОГДА ТаблицаТовары.ПереданныеСчетУчета
	|		ИНАЧЕ ТаблицаТовары.СчетРасходов
	|	КОНЕЦ КАК КорСчетСписания,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСчет45
	|			ТОГДА Реквизиты.Контрагент
	|		ИНАЧЕ ТаблицаТовары.Субконто
	|	КОНЕЦ КАК КорСубконто1,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСчет45
	|			ТОГДА ТаблицаТовары.Номенклатура
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорСубконто2,
	|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
	|	&ВидКорСубконто1 КАК ВидКорСубконто1,
	|	&ВидКорСубконто2 КАК ВидКорСубконто2,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконто3,
	|	ТаблицаТовары.СчетУчетаНДСПоРеализации
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаТовары.Количество > ТаблицаТовары.КоличествоДоИзменения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаВозвратТоваров(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если НЕ Реквизиты.КорректироватьБУиНУ Тогда
		ПараметрыПроведения.Вставить("ВозвратТоваровРеквизиты",     Неопределено);
		ПараметрыПроведения.Вставить("ВозвратТоваровТаблицаТовары", Неопределено);
		ПараметрыПроведения.Вставить("ВозвратТоваровСчетаУчета",    Неопределено);
		ПараметрыПроведения.Вставить("ВозвратТоваровНоменклатура",  Неопределено);
		ПараметрыПроведения.Вставить("ВозвратТоваровОтКомиссионера", Неопределено);
	    Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ВозвратТоваровРеквизиты",     НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.Склад,
	|	Реквизиты.ТипСклада,
	|	Реквизиты.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	&ДокументРеализацииСсылка КАК Сделка,
	|	&ДатаДокументаРеализации КАК ДатаДокументаРеализации,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.ПодразделениеОрганизации КАК КорПодразделение,
	|	Реквизиты.ТипСклада КАК ТипСкладаОтправителя,
	|	Реквизиты.Склад КАК СкладПолучатель,
	|	Реквизиты.ТипСклада КАК ТипСкладаПолучателя,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеПолучатель,
	|	""Реализация товаров"" КАК Содержание,
	|	НЕОПРЕДЕЛЕНО КАК НДСвСтоимостиТоваров,
	|	НЕОПРЕДЕЛЕНО КАК СчетСписанияНДС,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоСписанияНДС1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоСписанияНДС2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоСписанияНДС3,
	|	ИСТИНА КАК УказанДокументОтгрузки
	|ИЗ
	|	Реквизиты КАК Реквизиты"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Если НЕ Реквизиты.ЕстьТовары Тогда
		ПараметрыПроведения.Вставить("ВозвратТоваровТаблицаТовары", Неопределено);
		ПараметрыПроведения.Вставить("ВозвратТоваровСчетаУчета",    Неопределено);
		ПараметрыПроведения.Вставить("ВозвратТоваровНоменклатура",  Неопределено);
		ПараметрыПроведения.Вставить("ВозвратТоваровОтКомиссионера", Неопределено);
		Возврат ТекстЗапроса; 
	КонецЕсли;
	
	Если Реквизиты.ЭтоДоговорСКомиссионером Тогда
		ПараметрыПроведения.Вставить("ВозвратТоваровТаблицаТовары", Неопределено);
		ПараметрыПроведения.Вставить("ВозвратТоваровСчетаУчета",    Неопределено);
		ПараметрыПроведения.Вставить("ВозвратТоваровНоменклатура",  Неопределено);
		
		НомераТаблиц.Вставить("ВозвратТоваровОтКомиссионера",  НомераТаблиц.Количество());
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	""Товары"" КАК ИмяСписка,
		|	&СинонимТовары КАК СинонимСписка,
		|	Реквизиты.Дата КАК Период,
		|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТовары.ПереданныеСчетУчета КАК СчетУчета,
		|	ТаблицаТовары.СчетУчетаЗабалансовый КАК Комиссионный,
		|	ТаблицаТовары.Номенклатура,
		|	Реквизиты.Склад КАК Склад,
		|	НЕОПРЕДЕЛЕНО КАК Партия,
		|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
		|	0 КАК Себестоимость,
		|	ТаблицаТовары.КоличествоДоИзменения - ТаблицаТовары.Количество КАК Количество,
		|	ТаблицаТовары.СчетУчета КАК КорСчетСписания,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура) КАК ВидКорСубконто1,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады) КАК ВидКорСубконто2,
		|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконто3,
		|	ТаблицаТовары.Номенклатура КАК КорСубконто1,
		|	Реквизиты.Склад КАК КорСубконто2,
		|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
		|	НЕОПРЕДЕЛЕНО КАК Комитент,
		|	НЕОПРЕДЕЛЕНО КАК ДоговорКомиссии,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетАвансовСКомитентом,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетРасчетовСКомитентом,
		|	НЕОПРЕДЕЛЕНО КАК ВалютаРасчетовСКомитентом,
		|	0 КАК СуммаРасчетовСКомитентом,
		|	Реквизиты.ПодразделениеОрганизации КАК КорПодразделение,
		|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
		|	0 КАК СуммаСписания,
		|	0 КАК СуммаСписанияНУ,
		|	0 КАК СуммаСписанияПР,
		|	0 КАК СуммаСписанияВР,
		|	0 КАК СуммаКорСписания,
		|	0 КАК СуммаКорСписанияНУ,
		|	0 КАК СуммаКорСписанияПР,
		|	0 КАК СуммаКорСписанияВР
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ТаблицаТовары.Количество < ТаблицаТовары.КоличествоДоИзменения
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	Иначе
		
		ПараметрыПроведения.Вставить("ВозвратТоваровОтКомиссионера", Неопределено);
		
	НомераТаблиц.Вставить("ВозвратТоваровТаблицаТовары", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВозвратТоваровСчетаУчета",    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВозвратТоваровНоменклатура",  НомераТаблиц.Количество());
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ
	|	""Товары"" КАК ИмяСписка,
	|	&СинонимТовары КАК СинонимСписка,
	|	Реквизиты.Дата КАК Период,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ТаблицаТовары.СчетУчетаЗабалансовый,
	|	ТаблицаТовары.ЭтоКомиссия,
	|	ТаблицаТовары.Номенклатура,
	|	Реквизиты.Склад,
	|	НЕОПРЕДЕЛЕНО КАК Партия,
	|	0 КАК Себестоимость,
	|	ТаблицаТовары.КоличествоДоИзменения - ТаблицаТовары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСчет45
	|			ТОГДА ТаблицаТовары.ПереданныеСчетУчета
	|		ИНАЧЕ ТаблицаТовары.СчетРасходов
	|	КОНЕЦ КАК КорСчетСписания,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСчет45
	|			ТОГДА Реквизиты.Контрагент
	|		ИНАЧЕ ТаблицаТовары.Субконто
	|	КОНЕЦ КАК КорСубконто1,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСчет45
	|			ТОГДА ТаблицаТовары.Номенклатура
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорСубконто2,
	|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
	|	&ВидКорСубконто1 КАК ВидКорСубконто1,
	|	&ВидКорСубконто2 КАК ВидКорСубконто2,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконто3,
	|	Реквизиты.ПодразделениеОрганизации КАК КорПодразделение,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	0 КАК СуммаСписания,
	|	0 КАК СуммаСписанияНУ,
	|	0 КАК СуммаСписанияПР,
	|	0 КАК СуммаСписанияВР,
	|	0 КАК СуммаКорСписанияНУ,
	|	0 КАК СуммаКорСписанияПР,
	|	0 КАК СуммаКорСписанияВР
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаТовары.Количество < ТаблицаТовары.КоличествоДоИзменения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.СчетУчета,
	|	ТаблицаТовары.ЭтоКомиссия КАК Комиссионный
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Количество < ТаблицаТовары.КоличествоДоИзменения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Количество < ТаблицаТовары.КоличествоДоИзменения
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура";
	
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПартииКомитентов(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если НЕ Реквизиты.КорректироватьБУиНУ
		ИЛИ НЕ Реквизиты.ЕстьТовары Тогда
		ПараметрыПроведения.Вставить("ПартииКомитентовРеквизиты",     Неопределено);
		ПараметрыПроведения.Вставить("ПартииКомитентовТаблицаТовары", Неопределено);
		ПараметрыПроведения.Вставить("ПартииКомитентовСчетаУчета",    Неопределено);
		ПараметрыПроведения.Вставить("ПартииКомитентовНоменклатура",  Неопределено);
	    Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ПартииКомитентовРеквизиты",     НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПартииКомитентовТаблицаТовары", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПартииКомитентовСчетаУчета",    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПартииКомитентовНоменклатура",  НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.Склад,
	|	Реквизиты.ВидДоговора КАК ВидДоговора,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	&ДокументРеализацииСсылка КАК Сделка,
	|	&ДатаДокументаРеализации КАК ДатаДокументаРеализации,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.ПодразделениеОрганизации КАК КорПодразделение,
	|	""Реализация товаров"" КАК Содержание,
	|	ИСТИНА КАК УказанДокументОтгрузки
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Товары"" КАК ИмяСписка,
	|	&СинонимТовары КАК СинонимСписка,
	|	Реквизиты.Дата КАК Период,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.СчетУчета,
	|	ТаблицаТовары.СчетУчетаЗабалансовый,
	|	ТаблицаТовары.ЭтоКомиссия,
	|	ТаблицаТовары.Номенклатура,
	|	Реквизиты.Склад,
	|	НЕОПРЕДЕЛЕНО КАК Партия,
	|	0 КАК Себестоимость,
	|	ТаблицаТовары.КоличествоДоИзменения - ТаблицаТовары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСчет45
	|			ТОГДА ТаблицаТовары.ПереданныеСчетУчета
	|		ИНАЧЕ ТаблицаТовары.СчетРасходов
	|	КОНЕЦ КАК КорСчетСписания,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСчет45
	|			ТОГДА Реквизиты.Контрагент
	|		ИНАЧЕ ТаблицаТовары.Субконто
	|	КОНЕЦ КАК КорСубконто1,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСчет45
	|			ТОГДА ТаблицаТовары.Номенклатура
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорСубконто2,
	|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
	|	&ВидКорСубконто1 КАК ВидКорСубконто1,
	|	&ВидКорСубконто2 КАК ВидКорСубконто2,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконто3,
	|	Реквизиты.ПодразделениеОрганизации КАК КорПодразделение,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	0 КАК СуммаСписания,
	|	0 КАК СуммаСписанияНУ,
	|	0 КАК СуммаСписанияПР,
	|	0 КАК СуммаСписанияВР,
	|	0 КАК СуммаКорСписанияНУ,
	|	0 КАК СуммаКорСписанияПР,
	|	0 КАК СуммаКорСписанияВР
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаТовары.ЭтоКомиссия
	|	И ТаблицаТовары.Количество = ТаблицаТовары.КоличествоДоИзменения
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.СчетУчета,
	|	ТаблицаТовары.ЭтоКомиссия КАК Комиссионный
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ЭтоКомиссия
	|	И ТаблицаТовары.Количество = ТаблицаТовары.КоличествоДоИзменения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ЭтоКомиссия
	|	И ТаблицаТовары.Количество = ТаблицаТовары.КоличествоДоИзменения
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаРеализация(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.КорректироватьБУиНУ 
		ИЛИ Реквизиты.ЭтоДоговорСКомиссионером Тогда
		ПараметрыПроведения.Вставить("РеализацияРеквизиты",              Неопределено);
		ПараметрыПроведения.Вставить("РеализацияТаблицаДокумента",       Неопределено);
		ПараметрыПроведения.Вставить("СторноРеализацияТаблицаДокумента", Неопределено);
	    Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("РеализацияРеквизиты",              НомераТаблиц.Количество());
	
	// РеализацияРеквизиты
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	""Реализация"" КАК ТипСписания,
	|	&ДеятельностьНаПатенте КАК ДеятельностьНаПатенте,
	|	Реквизиты.Склад.ТипСклада КАК ТипСклада,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ПризнаватьЗачитыватьАванс КАК ПризнаватьЗачитыватьАванс,
	|	Реквизиты.СтатьяПрочихДоходовИРасходов,
	|	&ДокументРеализацииСсылка КАК ДокументРеализации,
	|	&ДатаДокументаРеализации КАК ДатаДокументаРеализации,
	|	&ПрошлыйПериод КАК ПрошлыйПериод,
	|	Реквизиты.ОтчетностьПодписана,
	|	&РасчетКорректировокСУчетомРекомендацийПоНДС КАК РасчетКорректировокСУчетомРекомендацийПоНДС,
	|	&КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	&КратностьВзаиморасчетов КАК КратностьВзаиморасчетов
	|ИЗ
	|	Реквизиты КАК Реквизиты"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Если НЕ (Реквизиты.ЕстьТовары ИЛИ Реквизиты.ЕстьУслуги ИЛИ Реквизиты.ЕстьАгентскиеУслуги) Тогда
		ПараметрыПроведения.Вставить("РеализацияТаблицаДокумента",       Неопределено);
		ПараметрыПроведения.Вставить("СторноРеализацияТаблицаДокумента", Неопределено);
		Возврат ТекстЗапроса;
	КонецЕсли;

	НомераТаблиц.Вставить("РеализацияТаблицаДокумента",       НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СторноРеализацияТаблицаДокумента", НомераТаблиц.Количество());
	
	// РеализацияТаблицаДокумента
	Если Реквизиты.ЕстьТовары Тогда
	 	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	""Товары"" КАК ИмяСписка,
		|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ТаблицаТовары.КоличествоДоИзменения КАК КоличествоДоИзменения,
		|	ТаблицаТовары.Количество - ТаблицаТовары.КоличествоДоИзменения КАК Количество,
		|	ТаблицаТовары.СуммаВзаиморасчетовДоИзменения КАК СуммаВзаиморасчетовДоИзменения,
		|	ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаВзаиморасчетовДоИзменения КАК СуммаВзаиморасчетов,
		|	ТаблицаТовары.СуммаРубДоИзменения КАК СуммаРубДоИзменения,
		|	ТаблицаТовары.СуммаРуб - ТаблицаТовары.СуммаРубДоИзменения КАК СуммаРуб,
		|	ТаблицаТовары.СуммаНДСРубДоИзменения КАК СуммаНДСРубДоИзменения,
		|	ТаблицаТовары.СуммаНДСРуб - ТаблицаТовары.СуммаНДСРубДоИзменения КАК СуммаНДСРуб,
		|	ТаблицаТовары.СуммаРуб - ТаблицаТовары.СуммаРубДоИзменения КАК СуммаБУ,
		|	ТаблицаТовары.СуммаРуб - ТаблицаТовары.СуммаРубДоИзменения КАК СуммаНУ,
		|	ТаблицаТовары.СчетУчета КАК СчетУчета,
		|	ТаблицаТовары.СчетДоходов КАК СчетДоходов,
		|	ТаблицаТовары.Субконто КАК Субконто,
		|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаТовары.ЭтоКомиссия КАК ЭтоКомиссия,
		|	ЛОЖЬ КАК ЭтоУслуга,
		|	НЕОПРЕДЕЛЕНО КАК Комитент,
		|	НЕОПРЕДЕЛЕНО КАК ДоговорКомиссии,
		|	НЕОПРЕДЕЛЕНО КАК СчетРасчетовСКомитентом,
		|	НЕОПРЕДЕЛЕНО КАК СчетАвансовСКомитентом,
		|	НЕОПРЕДЕЛЕНО КАК ВалютаРасчетовСКомитентом,
		|	ВЫБОР
		|		КОГДА &ПрошлыйПериод
		|				И Реквизиты.ОтчетностьПодписана
		|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеРасходы)
		|		ИНАЧЕ ТаблицаТовары.СчетУчетаНДСПоРеализации
		|	КОНЕЦ КАК СчетУчетаНДСПоРеализации,
		|	&СчетУчетаРасчетовСКонтрагентом КАК КорСчет,
		|	Реквизиты.Контрагент КАК КорСубконто1,
		|	Реквизиты.ДоговорКонтрагента КАК КорСубконто2,
		|	&ДокументРеализацииСсылка КАК КорСубконто3,
		|	Реквизиты.Контрагент КАК Контрагент,
		|	Реквизиты.Контрагент КАК Покупатель,
		|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
		|	0 КАК СуммаРасчетовСКомитентом,
		|	0 КАК СуммаПоступленияОтКомитента,
		|	&ДатаДокументаРеализации КАК ДатаРеализации,
		|	ВЫБОР
		|		КОГДА &ЗаполнятьДокументРасчетов
		|			ТОГДА Реквизиты.Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ДокументРасчетов
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|ГДЕ
		|	(ТаблицаТовары.Количество > ТаблицаТовары.КоличествоДоИзменения
		|			ИЛИ ТаблицаТовары.Количество = ТаблицаТовары.КоличествоДоИзменения
		|				И ТаблицаТовары.СуммаВзаиморасчетов > ТаблицаТовары.СуммаВзаиморасчетовДоИзменения
		|			ИЛИ ТаблицаТовары.Количество = ТаблицаТовары.КоличествоДоИзменения
		|				И ТаблицаТовары.СуммаВзаиморасчетов = ТаблицаТовары.СуммаВзаиморасчетовДоИзменения
		|				И ТаблицаТовары.СуммаНДСРуб > ТаблицаТовары.СуммаНДСРубДоИзменения)";
	КонецЕсли;
	Если Реквизиты.ЕстьТовары И Реквизиты.ЕстьУслуги Тогда
	 	ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|";
	КонецЕсли;
	Если Реквизиты.ЕстьУслуги Тогда
	 	ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	""Услуги"" КАК ИмяСписка,
		|	ТаблицаУслуги.НомерСтроки КАК НомерСтроки,
		|	ТаблицаУслуги.Номенклатура КАК Номенклатура,
		|	ТаблицаУслуги.КоличествоДоИзменения КАК КоличествоДоИзменения,
		|	ТаблицаУслуги.Количество - ТаблицаУслуги.КоличествоДоИзменения КАК Количество,
		|	ТаблицаУслуги.СуммаВзаиморасчетовДоИзменения КАК СуммаВзаиморасчетовДоИзменения,
		|	ТаблицаУслуги.СуммаВзаиморасчетов - ТаблицаУслуги.СуммаВзаиморасчетовДоИзменения КАК СуммаВзаиморасчетов,
		|	ТаблицаУслуги.СуммаРубДоИзменения КАК СуммаРубДоИзменения,
		|	ТаблицаУслуги.СуммаРуб - ТаблицаУслуги.СуммаРубДоИзменения КАК СуммаРуб,
		|	ТаблицаУслуги.СуммаНДСРубДоИзменения КАК СуммаНДСРубДоИзменения,
		|	ТаблицаУслуги.СуммаНДСРуб - ТаблицаУслуги.СуммаНДСРубДоИзменения КАК СуммаНДСРуб,
		|	ТаблицаУслуги.СуммаРуб - ТаблицаУслуги.СуммаРубДоИзменения КАК СуммаБУ,
		|	ТаблицаУслуги.СуммаРуб - ТаблицаУслуги.СуммаРубДоИзменения КАК СуммаНУ,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетУчета,
		|	ТаблицаУслуги.СчетДоходов КАК СчетДоходов,
		|	ТаблицаУслуги.Субконто КАК Субконто,
		|	ТаблицаУслуги.СтавкаНДС КАК СтавкаНДС,
		|	ЛОЖЬ КАК ЭтоКомиссия,
		|	ИСТИНА КАК ЭтоУслуга,
		|	НЕОПРЕДЕЛЕНО КАК Комитент,
		|	НЕОПРЕДЕЛЕНО КАК ДоговорКомиссии,
		|	НЕОПРЕДЕЛЕНО КАК СчетРасчетовСКомитентом,
		|	НЕОПРЕДЕЛЕНО КАК СчетАвансовСКомитентом,
		|	НЕОПРЕДЕЛЕНО КАК ВалютаРасчетовСКомитентом,
		|	ВЫБОР
		|		КОГДА &ПрошлыйПериод
		|				И Реквизиты.ОтчетностьПодписана
		|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеРасходы)
		|		ИНАЧЕ ТаблицаУслуги.СчетУчетаНДСПоРеализации
		|	КОНЕЦ КАК СчетУчетаНДСПоРеализации,
		|	&СчетУчетаРасчетовСКонтрагентом КАК КорСчет,
		|	Реквизиты.Контрагент КАК КорСубконто1,
		|	Реквизиты.ДоговорКонтрагента КАК КорСубконто2,
		|	&ДокументРеализацииСсылка КАК КорСубконто3,
		|	Реквизиты.Контрагент КАК Контрагент,
		|	Реквизиты.Контрагент КАК Покупатель,
		|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
		|	0 КАК СуммаРасчетовСКомитентом,
		|	0 КАК СуммаПоступленияОтКомитента,
		|	&ДатаДокументаРеализации КАК ДатаРеализации,
		|	ВЫБОР
		|		КОГДА &ЗаполнятьДокументРасчетов
		|			ТОГДА Реквизиты.Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ДокументРасчетов
		|ИЗ
		|	ТаблицаУслуги КАК ТаблицаУслуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|ГДЕ
		|	(ТаблицаУслуги.СуммаВзаиморасчетов > ТаблицаУслуги.СуммаВзаиморасчетовДоИзменения
		|			ИЛИ ТаблицаУслуги.СуммаВзаиморасчетов = ТаблицаУслуги.СуммаВзаиморасчетовДоИзменения
		|				И ТаблицаУслуги.СуммаНДСРуб > ТаблицаУслуги.СуммаНДСРубДоИзменения)";
	КонецЕсли;
	Если (Реквизиты.ЕстьТовары ИЛИ Реквизиты.ЕстьУслуги) И Реквизиты.ЕстьАгентскиеУслуги Тогда
	 	ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|";
	КонецЕсли;
	Если Реквизиты.ЕстьАгентскиеУслуги Тогда
	 	ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	""АгентскиеУслуги"" КАК ИмяСписка,
		|	ТаблицаАгентскиеУслуги.НомерСтроки КАК НомерСтроки,
		|	ТаблицаАгентскиеУслуги.Номенклатура КАК Номенклатура,
		|	ТаблицаАгентскиеУслуги.КоличествоДоИзменения КАК КоличествоДоИзменения,
		|	ТаблицаАгентскиеУслуги.Количество - ТаблицаАгентскиеУслуги.КоличествоДоИзменения КАК Количество,
		|	ТаблицаАгентскиеУслуги.СуммаВзаиморасчетовДоИзменения КАК СуммаВзаиморасчетовДоИзменения,
		|	ТаблицаАгентскиеУслуги.СуммаВзаиморасчетов - ТаблицаАгентскиеУслуги.СуммаВзаиморасчетовДоИзменения КАК СуммаВзаиморасчетов,
		|	ТаблицаАгентскиеУслуги.СуммаРубДоИзменения КАК СуммаРубДоИзменения,
		|	ТаблицаАгентскиеУслуги.СуммаРуб - ТаблицаАгентскиеУслуги.СуммаРубДоИзменения КАК СуммаРуб,
		|	ТаблицаАгентскиеУслуги.СуммаНДСРубДоИзменения КАК СуммаНДСРубДоИзменения,
		|	ТаблицаАгентскиеУслуги.СуммаНДСРуб - ТаблицаАгентскиеУслуги.СуммаНДСРубДоИзменения КАК СуммаНДСРуб,
		|	ТаблицаАгентскиеУслуги.СуммаРуб - ТаблицаАгентскиеУслуги.СуммаРубДоИзменения КАК СуммаБУ,
		|	ТаблицаАгентскиеУслуги.СуммаРуб - ТаблицаАгентскиеУслуги.СуммаРубДоИзменения КАК СуммаНУ,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетУчета,
		|	ТаблицаАгентскиеУслуги.СчетРасчетов КАК СчетДоходов,
		|	ТаблицаАгентскиеУслуги.Контрагент КАК Субконто,
		|	ТаблицаАгентскиеУслуги.СтавкаНДС КАК СтавкаНДС,
		|	ИСТИНА КАК ЭтоКомиссия,
		|	ИСТИНА КАК ЭтоУслуга,
		|	ТаблицаАгентскиеУслуги.Контрагент КАК Комитент,
		|	ТаблицаАгентскиеУслуги.ДоговорКонтрагента КАК ДоговорКомиссии,
		|	ТаблицаАгентскиеУслуги.СчетРасчетов КАК СчетРасчетовСКомитентом,
		|	ТаблицаАгентскиеУслуги.СчетРасчетов КАК СчетАвансовСКомитентом,
		|	ТаблицаАгентскиеУслуги.ВалютаВзаиморасчетов КАК ВалютаРасчетовСКомитентом,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетУчетаНДСПоРеализации,
		|	&СчетУчетаРасчетовСКонтрагентом КАК КорСчет,
		|	Реквизиты.Контрагент КАК КорСубконто1,
		|	Реквизиты.ДоговорКонтрагента КАК КорСубконто2,
		|	&ДокументРеализацииСсылка КАК КорСубконто3,
		|	Реквизиты.Контрагент КАК Контрагент,
		|	Реквизиты.Контрагент КАК Покупатель,
		|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
		|	0 КАК СуммаРасчетовСКомитентом,
		|	0 КАК СуммаПоступленияОтКомитента,
		|	&ДатаДокументаРеализации КАК ДатаРеализации,
		|	ВЫБОР
		|		КОГДА &ЗаполнятьДокументРасчетов
		|			ТОГДА Реквизиты.Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ДокументРасчетов
		|ИЗ
		|	ТаблицаАгентскиеУслуги КАК ТаблицаАгентскиеУслуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ТаблицаАгентскиеУслуги.СуммаВзаиморасчетов > ТаблицаАгентскиеУслуги.СуммаВзаиморасчетовДоИзменения";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИмяСписка,
	|	НомерСтроки"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	// СторноРеализацияТаблицаДокумента
	Если Реквизиты.ЕстьТовары Тогда
	 	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	""Товары"" КАК ИмяСписка,
		|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ТаблицаТовары.КоличествоДоИзменения КАК КоличествоДоИзменения,
		|	ТаблицаТовары.КоличествоДоИзменения - ТаблицаТовары.Количество КАК Количество,
		|	ТаблицаТовары.СуммаВзаиморасчетовДоИзменения КАК СуммаВзаиморасчетовДоИзменения,
		|	ТаблицаТовары.СуммаВзаиморасчетовДоИзменения - ТаблицаТовары.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
		|	ТаблицаТовары.СуммаРубДоИзменения КАК СуммаРубДоИзменения,
		|	ТаблицаТовары.СуммаРубДоИзменения - ТаблицаТовары.СуммаРуб КАК СуммаРуб,
		|	ТаблицаТовары.СуммаНДСРубДоИзменения КАК СуммаНДСРубДоИзменения,
		|	ТаблицаТовары.СуммаНДСРубДоИзменения - ТаблицаТовары.СуммаНДСРуб КАК СуммаНДСРуб,
		|	ТаблицаТовары.СуммаРубДоИзменения - ТаблицаТовары.СуммаРуб КАК СуммаБУ,
		|	ТаблицаТовары.СуммаРубДоИзменения - ТаблицаТовары.СуммаРуб КАК СуммаНУ,
		|	ТаблицаТовары.СчетУчета КАК СчетУчета,
		|	ТаблицаТовары.СчетДоходов КАК СчетДоходов,
		|	ТаблицаТовары.Субконто КАК Субконто,
		|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаТовары.ЭтоКомиссия КАК ЭтоКомиссия,
		|	ЛОЖЬ КАК ЭтоУслуга,
		|	НЕОПРЕДЕЛЕНО КАК Комитент,
		|	НЕОПРЕДЕЛЕНО КАК ДоговорКомиссии,
		|	НЕОПРЕДЕЛЕНО КАК СчетРасчетовСКомитентом,
		|	НЕОПРЕДЕЛЕНО КАК СчетАвансовСКомитентом,
		|	НЕОПРЕДЕЛЕНО КАК ВалютаРасчетовСКомитентом,
		|	ВЫБОР
		|		КОГДА &ПрошлыйПериод
		|				И Реквизиты.ОтчетностьПодписана
		|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеРасходы)
		|		ИНАЧЕ ТаблицаТовары.СчетУчетаНДСПоРеализации
		|	КОНЕЦ КАК СчетУчетаНДСПоРеализации,
		|	&СчетУчетаРасчетовСКонтрагентом КАК КорСчет,
		|	Реквизиты.Контрагент КАК КорСубконто1,
		|	Реквизиты.ДоговорКонтрагента КАК КорСубконто2,
		|	&ДокументРеализацииСсылка КАК КорСубконто3,
		|	Реквизиты.Контрагент КАК Контрагент,
		|	Реквизиты.Контрагент КАК Покупатель,
		|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
		|	0 КАК СуммаРасчетовСКомитентом,
		|	0 КАК СуммаПоступленияОтКомитента,
		|	&ДатаДокументаРеализации КАК ДатаРеализации,
		|	ВЫБОР
		|		КОГДА &ЗаполнятьДокументРасчетов
		|			ТОГДА Реквизиты.Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ДокументРасчетов
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|ГДЕ
		|	(ТаблицаТовары.Количество < ТаблицаТовары.КоличествоДоИзменения
		|			ИЛИ ТаблицаТовары.Количество = ТаблицаТовары.КоличествоДоИзменения
		|				И ТаблицаТовары.СуммаВзаиморасчетов < ТаблицаТовары.СуммаВзаиморасчетовДоИзменения
		|			ИЛИ ТаблицаТовары.Количество = ТаблицаТовары.КоличествоДоИзменения
		|				И ТаблицаТовары.СуммаВзаиморасчетов = ТаблицаТовары.СуммаВзаиморасчетовДоИзменения
		|				И ТаблицаТовары.СуммаНДСРуб < ТаблицаТовары.СуммаНДСРубДоИзменения)";
	КонецЕсли;
	Если Реквизиты.ЕстьТовары И Реквизиты.ЕстьУслуги Тогда
	 	ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|";
	КонецЕсли;
	Если Реквизиты.ЕстьУслуги Тогда
	 	ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	""Услуги"" КАК ИмяСписка,
		|	ТаблицаУслуги.НомерСтроки КАК НомерСтроки,
		|	ТаблицаУслуги.Номенклатура КАК Номенклатура,
		|	ТаблицаУслуги.КоличествоДоИзменения КАК КоличествоДоИзменения,
		|	ТаблицаУслуги.КоличествоДоИзменения - ТаблицаУслуги.Количество КАК Количество,
		|	ТаблицаУслуги.СуммаВзаиморасчетовДоИзменения КАК СуммаВзаиморасчетовДоИзменения,
		|	ТаблицаУслуги.СуммаВзаиморасчетовДоИзменения - ТаблицаУслуги.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
		|	ТаблицаУслуги.СуммаРубДоИзменения КАК СуммаРубДоИзменения,
		|	ТаблицаУслуги.СуммаРубДоИзменения - ТаблицаУслуги.СуммаРуб КАК СуммаРуб,
		|	ТаблицаУслуги.СуммаНДСРубДоИзменения КАК СуммаНДСРубДоИзменения,
		|	ТаблицаУслуги.СуммаНДСРубДоИзменения - ТаблицаУслуги.СуммаНДСРуб КАК СуммаНДСРуб,
		|	ТаблицаУслуги.СуммаРубДоИзменения - ТаблицаУслуги.СуммаРуб КАК СуммаБУ,
		|	ТаблицаУслуги.СуммаРубДоИзменения - ТаблицаУслуги.СуммаРуб КАК СуммаНУ,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетУчета,
		|	ТаблицаУслуги.СчетДоходов КАК СчетДоходов,
		|	ТаблицаУслуги.Субконто КАК Субконто,
		|	ТаблицаУслуги.СтавкаНДС КАК СтавкаНДС,
		|	ЛОЖЬ КАК ЭтоКомиссия,
		|	ИСТИНА КАК ЭтоУслуга,
		|	НЕОПРЕДЕЛЕНО КАК Комитент,
		|	НЕОПРЕДЕЛЕНО КАК ДоговорКомиссии,
		|	НЕОПРЕДЕЛЕНО КАК СчетРасчетовСКомитентом,
		|	НЕОПРЕДЕЛЕНО КАК СчетАвансовСКомитентом,
		|	НЕОПРЕДЕЛЕНО КАК ВалютаРасчетовСКомитентом,
		|	ВЫБОР
		|		КОГДА &ПрошлыйПериод
		|				И Реквизиты.ОтчетностьПодписана
		|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеРасходы)
		|		ИНАЧЕ ТаблицаУслуги.СчетУчетаНДСПоРеализации
		|	КОНЕЦ КАК СчетУчетаНДСПоРеализации,
		|	&СчетУчетаРасчетовСКонтрагентом КАК КорСчет,
		|	Реквизиты.Контрагент КАК КорСубконто1,
		|	Реквизиты.ДоговорКонтрагента КАК КорСубконто2,
		|	&ДокументРеализацииСсылка КАК КорСубконто3,
		|	Реквизиты.Контрагент КАК Контрагент,
		|	Реквизиты.Контрагент КАК Покупатель,
		|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
		|	0 КАК СуммаРасчетовСКомитентом,
		|	0 КАК СуммаПоступленияОтКомитента,
		|	&ДатаДокументаРеализации КАК ДатаРеализации,
		|	ВЫБОР
		|		КОГДА &ЗаполнятьДокументРасчетов
		|			ТОГДА Реквизиты.Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ДокументРасчетов
		|ИЗ
		|	ТаблицаУслуги КАК ТаблицаУслуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|ГДЕ
		|	(ТаблицаУслуги.СуммаВзаиморасчетов < ТаблицаУслуги.СуммаВзаиморасчетовДоИзменения
		|			ИЛИ ТаблицаУслуги.СуммаВзаиморасчетов = ТаблицаУслуги.СуммаВзаиморасчетовДоИзменения
		|				И ТаблицаУслуги.СуммаНДСРуб < ТаблицаУслуги.СуммаНДСРубДоИзменения)";
	КонецЕсли;
	Если (Реквизиты.ЕстьТовары ИЛИ Реквизиты.ЕстьУслуги) И Реквизиты.ЕстьАгентскиеУслуги Тогда
	 	ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|";
	КонецЕсли;
	Если Реквизиты.ЕстьАгентскиеУслуги Тогда
	 	ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	""АгентскиеУслуги"" КАК ИмяСписка,
		|	ТаблицаАгентскиеУслуги.НомерСтроки КАК НомерСтроки,
		|	ТаблицаАгентскиеУслуги.Номенклатура КАК Номенклатура,
		|	ТаблицаАгентскиеУслуги.КоличествоДоИзменения КАК КоличествоДоИзменения,
		|	ТаблицаАгентскиеУслуги.КоличествоДоИзменения - ТаблицаАгентскиеУслуги.Количество КАК Количество,
		|	ТаблицаАгентскиеУслуги.СуммаВзаиморасчетовДоИзменения КАК СуммаВзаиморасчетовДоИзменения,
		|	ТаблицаАгентскиеУслуги.СуммаВзаиморасчетовДоИзменения - ТаблицаАгентскиеУслуги.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
		|	ТаблицаАгентскиеУслуги.СуммаРубДоИзменения КАК СуммаРубДоИзменения,
		|	ТаблицаАгентскиеУслуги.СуммаРубДоИзменения - ТаблицаАгентскиеУслуги.СуммаРуб КАК СуммаРуб,
		|	ТаблицаАгентскиеУслуги.СуммаНДСРубДоИзменения КАК СуммаНДСРубДоИзменения,
		|	ТаблицаАгентскиеУслуги.СуммаНДСРубДоИзменения - ТаблицаАгентскиеУслуги.СуммаНДСРуб КАК СуммаНДСРуб,
		|	ТаблицаАгентскиеУслуги.СуммаРубДоИзменения - ТаблицаАгентскиеУслуги.СуммаРуб КАК СуммаБУ,
		|	ТаблицаАгентскиеУслуги.СуммаРубДоИзменения - ТаблицаАгентскиеУслуги.СуммаРуб КАК СуммаНУ,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетУчета,
		|	ТаблицаАгентскиеУслуги.СчетРасчетов КАК СчетДоходов,
		|	ТаблицаАгентскиеУслуги.Контрагент КАК Субконто,
		|	ТаблицаАгентскиеУслуги.СтавкаНДС КАК СтавкаНДС,
		|	ИСТИНА КАК ЭтоКомиссия,
		|	ИСТИНА КАК ЭтоУслуга,
		|	ТаблицаАгентскиеУслуги.Контрагент КАК Комитент,
		|	ТаблицаАгентскиеУслуги.ДоговорКонтрагента КАК ДоговорКомиссии,
		|	ТаблицаАгентскиеУслуги.СчетРасчетов КАК СчетРасчетовСКомитентом,
		|	ТаблицаАгентскиеУслуги.СчетРасчетов КАК СчетАвансовСКомитентом,
		|	ТаблицаАгентскиеУслуги.ВалютаВзаиморасчетов КАК ВалютаРасчетовСКомитентом,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетУчетаНДСПоРеализации,
		|	&СчетУчетаРасчетовСКонтрагентом КАК КорСчет,
		|	Реквизиты.Контрагент КАК КорСубконто1,
		|	Реквизиты.ДоговорКонтрагента КАК КорСубконто2,
		|	&ДокументРеализацииСсылка КАК КорСубконто3,
		|	Реквизиты.Контрагент КАК Контрагент,
		|	Реквизиты.Контрагент КАК Покупатель,
		|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
		|	0 КАК СуммаРасчетовСКомитентом,
		|	0 КАК СуммаПоступленияОтКомитента,
		|	&ДатаДокументаРеализации КАК ДатаРеализации,
		|	ВЫБОР
		|		КОГДА &ЗаполнятьДокументРасчетов
		|			ТОГДА Реквизиты.Ссылка
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК ДокументРасчетов
		|ИЗ
		|	ТаблицаАгентскиеУслуги КАК ТаблицаАгентскиеУслуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ТаблицаАгентскиеУслуги.СуммаВзаиморасчетов < ТаблицаАгентскиеУслуги.СуммаВзаиморасчетовДоИзменения";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИмяСписка,
	|	НомерСтроки"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРеализацияУслуг(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если НЕ Реквизиты.КорректироватьБУиНУ 
		ИЛИ НЕ Реквизиты.ЕстьУслуги
		ИЛИ НЕ Реквизиты.ИсправлениеТекущегоМесяца Тогда
		ПараметрыПроведения.Вставить("ТаблицаРеализацияУслуг",              Неопределено);
	    Возврат "";
	КонецЕсли;

	
	НомераТаблиц.Вставить("ТаблицаРеализацияУслуг", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	""Услуги"" КАК ИмяСписка,
	|	ТаблицаУслуги.НомерСтроки КАК НомерСтроки,
	|	ТаблицаУслуги.СчетРасходов КАК СчетРасходов,
	|	ТаблицаУслуги.Номенклатура КАК Услуга,
	|	ТаблицаУслуги.Субконто КАК НоменклатурнаяГруппа,
	|	ТаблицаУслуги.СуммаРубДоИзменения - ТаблицаУслуги.СуммаРуб - (ТаблицаУслуги.СуммаНДСРубДоИзменения - ТаблицаУслуги.СуммаНДСРуб) КАК Сумма
	|ИЗ
	|	ТаблицаУслуги КАК ТаблицаУслуги
	|ГДЕ
	|	НЕ ТаблицаУслуги.СчетРасходов В (&Субсчета91)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИмяСписка,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции	

Функция ТекстЗапросаЗачетАвансов(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.КорректироватьБУиНУ
		ИЛИ Реквизиты.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером
		ИЛИ Реквизиты.ВидОперацииРеализации = Перечисления.ВидыОперацийРеализацияТоваров.ОтгрузкаБезПереходаПраваСобственности Тогда
		ПараметрыПроведения.Вставить("ЗачетАвансовРеквизиты",        Неопределено);
		ПараметрыПроведения.Вставить("ЗачетАвансовТаблицаДокумента", Неопределено);
		ПараметрыПроведения.Вставить("ТаблицаЗачетАвансов",          Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ВременнаяТаблицаСуммВзаиморасчетов", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовРеквизиты",              НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовТаблицаДокумента",       НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаЗачетАвансов",                НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СУММА(ТаблицаСуммВзаиморасчетов.СуммаРуб) КАК СуммаРуб,
	|	СУММА(ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	|	СУММА(ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовКомитента) КАК СуммаВзаиморасчетовКомитента,
	|	СУММА(ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовЕНВД) КАК СуммаВзаиморасчетовЕНВД,
	|	СУММА(ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовТорговыйСбор) КАК СуммаВзаиморасчетовТорговыйСбор,
	|	СУММА(ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовПатент) КАК СуммаВзаиморасчетовПатент
	|ПОМЕСТИТЬ ТаблицаСуммВзаиморасчетов
	|ИЗ
	|	(ВЫБРАТЬ
	|		0 КАК СуммаРуб,
	|		0 КАК СуммаВзаиморасчетов,
	|		0 КАК СуммаВзаиморасчетовКомитента,
	|		0 КАК СуммаВзаиморасчетовЕНВД,
	|		0 КАК СуммаВзаиморасчетовТорговыйСбор,
	|		0 КАК СуммаВзаиморасчетовПатент"
	+ ?(Реквизиты.ЕстьТовары, "
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|	ВЫБОР КОГДА &РасчетКорректировокСУчетомРекомендацийПоНДС И &РасчетыВВалюте ТОГДА
	|			(ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаВзаиморасчетовДоИзменения) * &СреднийКурсЗачетаОплат 
	|		ИНАЧЕ
	|			ТаблицаТовары.СуммаРуб - ТаблицаТовары.СуммаРубДоИзменения
	|		КОНЕЦ,
	|		ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаВзаиморасчетовДоИзменения,
	|		ВЫБОР 
	|			КОГДА ТаблицаТовары.ЭтоКомиссия 
	|				ТОГДА ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаВзаиморасчетовДоИзменения 
	|			ИНАЧЕ 0 
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА (НЕ ТаблицаТовары.ЭтоКомиссия)
	|					И (НЕ &ДеятельностьНаПатенте)
	|					И (НЕ &ДеятельностьНаТорговомСборе)
	|					И ТаблицаТовары.ДоходЕНВД
	|				ТОГДА ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаВзаиморасчетовДоИзменения
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА (НЕ ТаблицаТовары.ЭтоКомиссия)
	|					И (НЕ &ДеятельностьНаПатенте)
	|					И &ДеятельностьНаТорговомСборе
	|				ТОГДА ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаВзаиморасчетовДоИзменения
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА (НЕ ТаблицаТовары.ЭтоКомиссия)
	|					И &ДеятельностьНаПатенте
	|				ТОГДА ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаВзаиморасчетовДоИзменения
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		ТаблицаТовары КАК ТаблицаТовары", "")
	+ ?(Реквизиты.ЕстьУслуги, "
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР КОГДА &РасчетКорректировокСУчетомРекомендацийПоНДС И &РасчетыВВалюте ТОГДА
	|			(ТаблицаУслуги.СуммаВзаиморасчетов - ТаблицаУслуги.СуммаВзаиморасчетовДоИзменения) * &СреднийКурсЗачетаОплат
	|		ИНАЧЕ
	|			ТаблицаУслуги.СуммаРуб - ТаблицаУслуги.СуммаРубДоИзменения
	|		КОНЕЦ,
	|		ТаблицаУслуги.СуммаВзаиморасчетов - ТаблицаУслуги.СуммаВзаиморасчетовДоИзменения,
	|		0,
	|		ВЫБОР
	|			КОГДА (НЕ &ДеятельностьНаПатенте)
	|					И ТаблицаУслуги.ДоходЕНВД
	|				ТОГДА ТаблицаУслуги.СуммаВзаиморасчетов - ТаблицаУслуги.СуммаВзаиморасчетовДоИзменения
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		0,
	|		ВЫБОР
	|			КОГДА &ДеятельностьНаПатенте
	|				ТОГДА ТаблицаУслуги.СуммаВзаиморасчетов - ТаблицаУслуги.СуммаВзаиморасчетовДоИзменения
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		ТаблицаУслуги КАК ТаблицаУслуги", "")
	+ ?(Реквизиты.ЕстьАгентскиеУслуги, "
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР КОГДА &РасчетКорректировокСУчетомРекомендацийПоНДС И &РасчетыВВалюте ТОГДА
	|			(ТаблицаАгентскиеУслуги.СуммаВзаиморасчетов - ТаблицаАгентскиеУслуги.СуммаВзаиморасчетовДоИзменения) * &СреднийКурсЗачетаОплат
	|		ИНАЧЕ
	|			ТаблицаАгентскиеУслуги.СуммаРуб - ТаблицаАгентскиеУслуги.СуммаРубДоИзменения
	|		КОНЕЦ,
	|		ТаблицаАгентскиеУслуги.СуммаВзаиморасчетов - ТаблицаАгентскиеУслуги.СуммаВзаиморасчетовДоИзменения,
	|		ТаблицаАгентскиеУслуги.СуммаВзаиморасчетов - ТаблицаАгентскиеУслуги.СуммаВзаиморасчетовДоИзменения,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		ТаблицаАгентскиеУслуги КАК ТаблицаАгентскиеУслуги", "") + ") КАК ТаблицаСуммВзаиморасчетов"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета() +
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.ВидДоговора,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	&ДокументРеализацииСсылка КАК ДокументРеализацииСсылка,
	|	&СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	&СчетУчетаРасчетовПоАвансам КАК СчетУчетаРасчетовПоАвансам,
	|	ВЫБОР
	|		КОГДА ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетов >= 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаАвансов.Автоматически)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаАвансов.ПоДокументу)
	|	КОНЕЦ КАК СпособЗачетаАвансов,
	|	&ОрганизацияПрименяетУСН КАК УчитыватьЗадолженностьУСН,
	|	&УчитыватьЗадолженностьУСНПатент КАК УчитыватьЗадолженностьУСНПатент,
	|	&ДеятельностьНаПатенте КАК ДеятельностьНаПатенте,
	|	&ДеятельностьНаТорговомСборе КАК ДеятельностьНаТорговомСборе,
	|	ВЫБОР
	|		КОГДА ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетов >= 0
	|			ТОГДА ""Выбытие""
	|		ИНАЧЕ ""Поступление""
	|	КОНЕЦ КАК НаправлениеДвижения,
	|	ВЫБОР
	|		КОГДА ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетов >= 0
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоВозврат,
	|	&РасчетКорректировокСУчетомРекомендацийПоНДС КАК РасчетКорректировокСУчетомРекомендацийПоНДС,
	|	&КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	&КратностьВзаиморасчетов КАК КратностьВзаиморасчетов
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСуммВзаиморасчетов КАК ТаблицаСуммВзаиморасчетов
	|		ПО (ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК ДокументРасчетов,
	|	ВЫБОР
	|		КОГДА ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетов >= 0
	|			ТОГДА &СчетУчетаРасчетовСКонтрагентом
	|		ИНАЧЕ &СчетУчетаРасчетовПоАвансам
	|	КОНЕЦ КАК СчетРасчетов,
	|	ВЫБОР
	|		КОГДА ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетов >= 0
	|			ТОГДА &СчетУчетаРасчетовПоАвансам
	|		ИНАЧЕ &СчетУчетаРасчетовСКонтрагентом
	|	КОНЕЦ КАК СчетАвансов,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВидДоговора,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.РасчетыВУсловныхЕдиницах,
	|	Реквизиты.УчетАгентскогоНДС,
	|	&РасчетыВВалюте КАК РасчетыВВалюте,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетов < 0
	|			ТОГДА -ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетов
	|		ИНАЧЕ ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетов
	|	КОНЕЦ КАК СуммаВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА ТаблицаСуммВзаиморасчетов.СуммаРуб < 0
	|			ТОГДА -ТаблицаСуммВзаиморасчетов.СуммаРуб
	|		ИНАЧЕ ТаблицаСуммВзаиморасчетов.СуммаРуб
	|	КОНЕЦ КАК СуммаРуб,
	|	ВЫБОР
	|		КОГДА ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовКомитента < 0
	|			ТОГДА -ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовКомитента
	|		ИНАЧЕ ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовКомитента
	|	КОНЕЦ КАК СуммаВзаиморасчетовКомитента,
	|	ВЫБОР
	|		КОГДА ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовЕНВД < 0
	|			ТОГДА -ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовЕНВД
	|		ИНАЧЕ ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовЕНВД
	|	КОНЕЦ КАК СуммаВзаиморасчетовЕНВД,
	|	ВЫБОР
	|		КОГДА ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовТорговыйСбор < 0
	|			ТОГДА -ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовТорговыйСбор
	|		ИНАЧЕ ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовТорговыйСбор
	|	КОНЕЦ КАК СуммаВзаиморасчетовТорговыйСбор,
	|	ВЫБОР
	|		КОГДА ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовПатент < 0
	|			ТОГДА -ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовПатент
	|		ИНАЧЕ ТаблицаСуммВзаиморасчетов.СуммаВзаиморасчетовПатент
	|	КОНЕЦ КАК СуммаВзаиморасчетовПатент
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСуммВзаиморасчетов КАК ТаблицаСуммВзаиморасчетов
	|		ПО (ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерСтроки,
	|	&СчетУчетаРасчетовСКонтрагентом КАК СчетАвансов,
	|	&СчетУчетаРасчетовПоАвансам КАК СчетРасчетов,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	&ПервичныйДокументРеализации КАК ДокументАванса,
	|	0 КАК СуммаЗачета
	|ИЗ
	|	Документ.КорректировкаРеализации КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаТоварыНДС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если НЕ Реквизиты.ЕстьТовары И НЕ Реквизиты.ЕстьУслуги 
		ИЛИ Реквизиты.ЭтоДоговорСКомиссионером Тогда
		ПараметрыПроведения.Вставить("НДСКнигаПродаж",                Неопределено);
		ПараметрыПроведения.Вставить("НДССведенияПоДокументамОплаты", Неопределено);
		ПараметрыПроведения.Вставить("НДСКнигаПокупок",               Неопределено);
		ПараметрыПроведения.Вставить("НДСПредъявленный",              Неопределено);
		ПараметрыПроведения.Вставить("НДСНачисление",                 Неопределено);
		ПараметрыПроведения.Вставить("НДСВычет",                      Неопределено);
		ПараметрыПроведения.Вставить("НДСВосстановление",             Неопределено);
		ПараметрыПроведения.Вставить("НДСТоварыУслуги",               Неопределено);
		ПараметрыПроведения.Вставить("НДСТоварыГТД",                  Неопределено);
		ПараметрыПроведения.Вставить("НДСТоварыРеализация",           Неопределено);
		Если Реквизиты.ЭтоДоговорСКомиссионером Тогда
			ТекстЗапроса = "";
			НомераТаблиц.Вставить("НДСТоварыОтгрузкаКомиссионеру", НомераТаблиц.Количество());
			// Ставка НДС при передаче товаров комиссионеру может быть любой и не должна влиять на учет.
			ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|	""Товары"" КАК ИмяСписка,
			|	&СинонимТовары КАК СинонимСписка,
			|	ТаблицаТовары.НомерСтроки КАК НомерСтрокиДокумента,
			|	ТаблицаТовары.Номенклатура,
			|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка) КАК СтавкаНДС,
			|	ТаблицаТовары.СчетУчета КАК СчетУчета,
			|	ТаблицаТовары.НомерГТД,
			|	ТаблицаТовары.СтранаПроисхождения,
			|	ТаблицаТовары.Количество - ТаблицаТовары.КоличествоДоИзменения КАК Количество
			|ИЗ
			|	ТаблицаТовары КАК ТаблицаТовары
			|ГДЕ
			|	ТаблицаТовары.Количество - ТаблицаТовары.КоличествоДоИзменения > 0
			|	И НЕ ТаблицаТовары.ЭтоКомиссия
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтрокиДокумента" 
			+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
			
			НомераТаблиц.Вставить("НДСТоварыВозвратОтКомиссионера", НомераТаблиц.Количество());
			ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|	""Товары"" КАК ИмяСписка,
			|	&СинонимТовары КАК СинонимСписка,
			|	ТаблицаТовары.НомерСтроки КАК НомерСтрокиДокумента,
			|	ТаблицаТовары.Номенклатура,
			|	ТаблицаТовары.СтавкаНДС,
			|	ТаблицаТовары.ПереданныеСчетУчета КАК СчетУчета,
			|	ТаблицаТовары.СчетУчета КАК СчетУчетаПолучатель,
			|	Реквизиты.Склад КАК СкладПолучатель,
			|	ТаблицаТовары.КоличествоДоИзменения - ТаблицаТовары.Количество КАК Количество
			|ИЗ
			|	ТаблицаТовары КАК ТаблицаТовары
			|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
			|		ПО (ИСТИНА)
			|ГДЕ
			|	ТаблицаТовары.КоличествоДоИзменения - ТаблицаТовары.Количество > 0
			|	И НЕ ТаблицаТовары.ЭтоКомиссия
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтрокиДокумента" 
			+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
			
			НомераТаблиц.Вставить("НДСРеквизиты", НомераТаблиц.Количество());
			ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|	Реквизиты.Ссылка КАК Регистратор,
			|	ВЫБОР
			|		КОГДА &ПрошлыйПериод
			|				И НЕ Реквизиты.ОтчетностьПодписана
			|			ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(Реквизиты.Дата, ГОД), СЕКУНДА, -1)
			|		ИНАЧЕ Реквизиты.Дата
			|	КОНЕЦ КАК ПериодПроводки,
			|	Реквизиты.Дата КАК Период,
			|	Реквизиты.Организация КАК Организация,
			|	Реквизиты.ОтчетностьПодписана КАК ОтчетностьПодписана,
			|	Реквизиты.Контрагент КАК Контрагент,
			|	Реквизиты.Контрагент.СтранаРегистрации КАК СтранаРегистрации,
			|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
			|	Реквизиты.Склад КАК Склад,
			|	ЛОЖЬ КАК НДСПредъявленКВычету,
			|	ИСТИНА КАК ПокупателемВыставляетсяСчетФактураНаВозврат,
			|	ИСТИНА КАК ОтразитьВКнигеПокупок,
			|	&ПрошлыйПериод КАК ПрошлыйПериод,
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСПоУменьшениюСтоимостиРеализации) КАК СчетУчетаНДС,
			|	ИСТИНА КАК ПредъявленСчетФактура,
			|	&ДатаДокументаРеализации КАК ДатаОтгрузки,
			|	Реквизиты.СтатьяПрочихДоходовИРасходов КАК СтатьяПрочихДоходовИРасходов,
			|	Реквизиты.ВидОперации КАК ВидОперации,
			|	Реквизиты.ДокументРеализации КАК ДокументРеализации,
			|	Реквизиты.КорректироватьБУиНУ КАК КорректироватьБУиНУ,
			|	Реквизиты.ВидДоговора КАК ВидДоговора,
			|	&ЕстьНДС КАК ЕстьНДС
			|ИЗ
			|	Реквизиты КАК Реквизиты"
			+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
			Возврат ТекстЗапроса;
		Иначе
			ПараметрыПроведения.Вставить("НДСТоварыОтгрузкаКомиссионеру", Неопределено);
			ПараметрыПроведения.Вставить("НДСТоварыВозвратОтКомиссионера",Неопределено);
			ПараметрыПроведения.Вставить("НДСРеквизиты",                  Неопределено);
			Возврат "";
		КонецЕсли;
	Иначе
		ПараметрыПроведения.Вставить("НДСТоварыОтгрузкаКомиссионеру", Неопределено);
		ПараметрыПроведения.Вставить("НДСТоварыВозвратОтКомиссионера",Неопределено);
	КонецЕсли;
	
	ТекстЗапроса = "";
	
	НомераТаблиц.Вставить("НДСКнигаПродаж", НомераТаблиц.Количество());
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	""Сторнирование реализации"" КАК Содержание,
	|	ЗаписиКнигиПродаж.Организация КАК Организация,
	|	ЗаписиКнигиПродаж.Покупатель КАК Покупатель,
	|	ЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
	|	ЗаписиКнигиПродаж.ВидЦенности КАК ВидЦенности,
	|	ЗаписиКнигиПродаж.СтавкаНДС КАК СтавкаНДС,
	|	ЗаписиКнигиПродаж.ДатаОплаты КАК ДатаОплаты,
	|	ЗаписиКнигиПродаж.ДокументОплаты КАК ДокументОплаты,
	|	ЗаписиКнигиПродаж.Событие КАК Событие,
	|	&Период КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&ИсходныйСчетФактураДата, КВАРТАЛ)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&ИсходныйСчетФактураДата, КВАРТАЛ)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СторнирующаяЗаписьДопЛиста,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&ИсходныйСчетФактураДата, КВАРТАЛ)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(&ИсходныйСчетФактураДата, КВАРТАЛ)
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ЗаписиКнигиПродаж.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЗаписиКнигиПродаж.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ЗаписиКнигиПродаж.СуммаБезНДСОборот * -1 КАК СуммаБезНДС,
	|	ЗаписиКнигиПродаж.НДСОборот * -1 КАК НДС
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			,
	|			&МоментДокумента,
	|			,
	|			Организация = &Организация
	|				И СчетФактура = &ИсправляемыйСчетФактура
	|				И НЕ ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные)) КАК ЗаписиКнигиПродаж"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	НомераТаблиц.Вставить("НДССведенияПоДокументамОплаты", НомераТаблиц.Количество());
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты КАК НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты КАК ДатаДокументаОплаты
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|ГДЕ
	|	НДСЗаписиКнигиПродаж.Активность
	|	И НДСЗаписиКнигиПродаж.Организация = &Организация
	|	И НДСЗаписиКнигиПродаж.СчетФактура = &ИсправляемыйСчетФактура
	|	И НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура = НЕОПРЕДЕЛЕНО
	|	И НДСЗаписиКнигиПродаж.НомерДокументаОплаты <> """"
	|	И НДСЗаписиКнигиПродаж.ДатаДокументаОплаты <> ДАТАВРЕМЯ(1, 1, 1)
	|	И НЕ НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	НомераТаблиц.Вставить("ВТ_КодОперацииСторнируемойЗаписи", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("НДСКнигаПокупок", НомераТаблиц.Количество());
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НДСЗаписиКнигиПокупок.КодВидаОперации КАК КодВидаОперации
	|ПОМЕСТИТЬ КодОперацииСторнируемойЗаписи
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	|ГДЕ
	|	НДСЗаписиКнигиПокупок.Организация = &Организация
	|	И НДСЗаписиКнигиПокупок.СчетФактура = &ИсправляемыйСчетФактура
	|	И НДСЗаписиКнигиПокупок.Активность
	|	И НДСЗаписиКнигиПокупок.КодВидаОперации <> """"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	""Сторнирование реализации"" КАК Содержание,
	|	ЗаписиКнигиПокупок.Организация КАК Организация,
	|	ЗаписиКнигиПокупок.Поставщик КАК Поставщик,
	|	ЗаписиКнигиПокупок.СчетФактура КАК СчетФактура,
	|	ЗаписиКнигиПокупок.ВидЦенности КАК ВидЦенности,
	|	ЗаписиКнигиПокупок.СтавкаНДС КАК СтавкаНДС,
	|	ЗаписиКнигиПокупок.ДатаОплаты КАК ДатаОплаты,
	|	ЗаписиКнигиПокупок.ДокументОплаты КАК ДокументОплаты,
	|	ЗаписиКнигиПокупок.Событие КАК Событие,
	|	&Период КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&ДатаИсправляемогоСчетаФактуры, КВАРТАЛ)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&ДатаИсправляемогоСчетаФактуры, КВАРТАЛ)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(&ДатаИсправляемогоСчетаФактуры, КВАРТАЛ)
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ЗаписиКнигиПокупок.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЗаписиКнигиПокупок.ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
	|	ЗаписиКнигиПокупок.СуммаБезНДСОборот * -1 КАК СуммаБезНДС,
	|	ЗаписиКнигиПокупок.НДСОборот * -1 КАК НДС,
	|	КодОперацииСторнируемойЗаписи.КодВидаОперации КАК КодВидаОперации
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			,
	|			&МоментДокумента,
	|			,
	|			Организация = &Организация
	|				И СчетФактура = &ИсправляемыйСчетФактура
	|				И НЕ ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные)) КАК ЗаписиКнигиПокупок
	|		ЛЕВОЕ СОЕДИНЕНИЕ КодОперацииСторнируемойЗаписи КАК КодОперацииСторнируемойЗаписи
	|		ПО (ИСТИНА)"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	НомераТаблиц.Вставить("НДСПредъявленный", НомераТаблиц.Количество());
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	НДСПредъявленныйОстатки.Организация,
	|	НДСПредъявленныйОстатки.СчетФактура,
	|	НДСПредъявленныйОстатки.ВидЦенности,
	|	НДСПредъявленныйОстатки.СтавкаНДС,
	|	НДСПредъявленныйОстатки.СчетУчетаНДС,
	|	НДСПредъявленныйОстатки.Поставщик,
	|	НДСПредъявленныйОстатки.ДатаОплаты,
	|	НДСПредъявленныйОстатки.ДоговорКонтрагента,
	|	НДСПредъявленныйОстатки.ИсправленныйСчетФактура,
	|	НДСПредъявленныйОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС,
	|	НДСПредъявленныйОстатки.НДСОстаток КАК НДС,
	|	NULL КАК Событие,
	|	NULL КАК ДатаСобытия
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Остатки(
	|			&МоментДокумента,
	|			Организация = &Организация
	|				И СчетФактура = &ИсправляемыйСчетФактура) КАК НДСПредъявленныйОстатки"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	НомераТаблиц.Вставить("НДСРеквизиты", НомераТаблиц.Количество());
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	ВЫБОР
	|		КОГДА &ПрошлыйПериод
	|				И НЕ Реквизиты.ОтчетностьПодписана
	|			ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(Реквизиты.Дата, ГОД), СЕКУНДА, -1)
	|		ИНАЧЕ Реквизиты.Дата
	|	КОНЕЦ КАК ПериодПроводки,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ОтчетностьПодписана КАК ОтчетностьПодписана,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.Контрагент.СтранаРегистрации КАК СтранаРегистрации,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.Склад КАК Склад,
	|	ЛОЖЬ КАК НДСПредъявленКВычету,
	|	ИСТИНА КАК ПокупателемВыставляетсяСчетФактураНаВозврат,
	|	ИСТИНА КАК ОтразитьВКнигеПокупок,
	|	&ПрошлыйПериод КАК ПрошлыйПериод,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСПоУменьшениюСтоимостиРеализации) КАК СчетУчетаНДС,
	|	ИСТИНА КАК ПредъявленСчетФактура,
	|	Реквизиты.СтатьяПрочихДоходовИРасходов КАК СтатьяПрочихДоходовИРасходов,
	|	&ДатаДокументаРеализации КАК ДатаОтгрузки,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.ДокументРеализации КАК ДокументРеализации,
	|	Реквизиты.КорректироватьБУиНУ КАК КорректироватьБУиНУ,
	|	Реквизиты.ВидДоговора КАК ВидДоговора,
	|	&ЕстьНДС КАК ЕстьНДС
	|ИЗ
	|	Реквизиты КАК Реквизиты"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	НомераТаблиц.Вставить("ВременнаяТаблицаНДСТоварыУслуги", НомераТаблиц.Количество());
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	NULL КАК СтавкаНДС,
	|	NULL КАК Сумма,
	|	NULL КАК СуммаНДС,
	|	NULL КАК ЭтоУслуга,
	|	NULL КАК Номенклатура,
	|	NULL КАК СчетУчета,
	|	NULL КАК СчетДоходов,
	|	NULL КАК СчетУчетаНДСПоРеализации,
	|	NULL КАК Субконто,
	|	NULL КАК Содержание,
	|	NULL КАК УслугиЗаРубежом,
	|	NULL КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ ВременнаяТаблицаНДСТоварыУслуги
	|ГДЕ
	|	(ЛОЖЬ)";
	Если Реквизиты.ЕстьТовары Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|" +
		"ВЫБРАТЬ
		|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
		|	ВЫБОР
		|		КОГДА &РасчетКорректировокСУчетомРекомендацийПоНДС И &РасчетыВВалюте
		|			ТОГДА ТаблицаТовары.СуммаБезНДСРуб
		|		ИНАЧЕ ТаблицаТовары.СуммаРуб - ТаблицаТовары.СуммаНДСРуб
		|	КОНЕЦ КАК Сумма,
		|	ТаблицаТовары.СуммаНДСРуб КАК СуммаНДС,
		|	ЛОЖЬ КАК ЭтоУслуга,
		|	ТаблицаТовары.Номенклатура КАК Номенклатура,
		|	ТаблицаТовары.СчетУчета КАК СчетУчета,
		|	ТаблицаТовары.СчетДоходов КАК СчетДоходов,
		|	ТаблицаТовары.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
		|	ТаблицаТовары.Субконто КАК Субконто,
		|	""Реализация товаров"" КАК Содержание,
		|	ЛОЖЬ КАК УслугиЗаРубежом,
		|	ТаблицаТовары.ИдентификаторСтроки КАК ИдентификаторСтроки
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|ГДЕ
		|	(НЕ ТаблицаТовары.ЭтоКомиссия)";
	КонецЕсли;
	Если Реквизиты.ЕстьУслуги Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|" +
		"ВЫБРАТЬ
		|	ТаблицаУслуги.СтавкаНДС КАК СтавкаНДС,
		|	ВЫБОР
		|		КОГДА &РасчетКорректировокСУчетомРекомендацийПоНДС И &РасчетыВВалюте
		|			ТОГДА ТаблицаУслуги.СуммаБезНДСРуб
		|		ИНАЧЕ ТаблицаУслуги.СуммаРуб - ТаблицаУслуги.СуммаНДСРуб
		|	КОНЕЦ КАК Сумма,
		|	ТаблицаУслуги.СуммаНДСРуб КАК СуммаНДС,
		|	ИСТИНА КАК ЭтоУслуга,
		|	ТаблицаУслуги.Номенклатура КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК СчетУчета,
		|	ТаблицаУслуги.СчетДоходов КАК СчетДоходов,
		|	ТаблицаУслуги.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
		|	ТаблицаУслуги.Субконто КАК Субконто,
		|	""Реализация услуг"" КАК Содержание,
		|	ТаблицаУслуги.УслугиЗаРубежом КАК УслугиЗаРубежом,
		|	ТаблицаУслуги.ИдентификаторСтроки КАК ИдентификаторСтроки
		|ИЗ
		|	ТаблицаУслуги КАК ТаблицаУслуги";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	НомераТаблиц.Вставить("НДСНачисление", НомераТаблиц.Количество());
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ТоварыУслуги.Содержание КАК Содержание,
	|	ТоварыУслуги.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ТоварыУслуги.Сумма) КАК СуммаБезНДС,
	|	СУММА(ТоварыУслуги.СуммаНДС) КАК НДС,
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Контрагент КАК Покупатель,
	|	Реквизиты.Ссылка КАК ИсправленныйСчетФактура,
	|	&СобытиеРеализация КАК Событие,
	|	Реквизиты.Дата КАК ДатаСобытия,
	|	&ИсправляемыйСчетФактура КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&ДатаИсправляемогоСчетаФактуры, КВАРТАЛ)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&ДатаИсправляемогоСчетаФактуры, КВАРТАЛ)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(&ДатаИсправляемогоСчетаФактуры, КВАРТАЛ)
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ТоварыУслуги.ЭтоУслуга КАК ЭтоУслуга,
	|	ТоварыУслуги.СчетУчета КАК СчетУчета,
	|	ТоварыУслуги.СчетДоходов КАК СчетДоходов,
	|	ТоварыУслуги.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	ТоварыУслуги.Субконто,
	|	ТоварыУслуги.УслугиЗаРубежом,
	|	ТоварыУслуги.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	ВременнаяТаблицаНДСТоварыУслуги КАК ТоварыУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыУслуги.СтавкаНДС,
	|	ТоварыУслуги.СчетУчета,
	|	ТоварыУслуги.Субконто,
	|	ТоварыУслуги.УслугиЗаРубежом,
	|	ТоварыУслуги.Содержание,
	|	Реквизиты.Ссылка,
	|	Реквизиты.Дата,
	|	Реквизиты.Организация,
	|	Реквизиты.Контрагент,
	|	ТоварыУслуги.ЭтоУслуга,
	|	ТоварыУслуги.СчетУчета,
	|	ТоварыУслуги.СчетДоходов,
	|	ТоварыУслуги.СчетУчетаНДСПоРеализации,
	|	Реквизиты.Ссылка,
	|	Реквизиты.Дата,
	|	ТоварыУслуги.ИдентификаторСтроки"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	НомераТаблиц.Вставить("НДСВычет", НомераТаблиц.Количество());
	Если Реквизиты.ЕстьТовары Тогда
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	&СчетФактура КАК СчетФактура,
		|	&ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
		|	""Корректировка НДС"" КАК Содержание,
		|	ЛОЖЬ КАК ЭтоУслуга,
		|	&СобытиеПриобретение КАК Событие,
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.СтавкаНДС,
		|	ТаблицаТовары.СуммаНДСРубДоКорректировки - ТаблицаТовары.СуммаНДСРуб КАК НДС,
		|	ВЫБОР
		|		КОГДА &РасчетКорректировокСУчетомРекомендацийПоНДС И &РасчетыВВалюте
		|			ТОГДА ТаблицаТовары.СуммаБезНДСРубДоКорректировки - ТаблицаТовары.СуммаБезНДСРуб
		|		ИНАЧЕ ТаблицаТовары.СуммаРубДоКорректировки - ТаблицаТовары.СуммаНДСРубДоКорректировки - (ТаблицаТовары.СуммаРуб - ТаблицаТовары.СуммаНДСРуб)
		|	КОНЕЦ КАК СуммаБезНДС,
		|	ТаблицаТовары.СчетУчета КАК СчетУчета,
		|	Реквизиты.Дата КАК Период,
		|	Реквизиты.Дата КАК ДатаСобытия,
		|	Реквизиты.Организация,
		|	Реквизиты.Контрагент КАК Поставщик,
		|	ЛОЖЬ КАК ЗаписьДополнительногоЛиста,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК КорректируемыйПериод,
		|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
		|	ТаблицаТовары.НомерСтроки,
		|	ТаблицаТовары.СчетУчетаНДСПоРеализации,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСПоУменьшениюСтоимостиРеализации) КАК СчетУчетаНДС,
		|	ТаблицаТовары.СчетДоходов КАК СчетДоходов,
		|	ТаблицаТовары.Субконто,
		|	Реквизиты.Ссылка КАК Регистратор
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ТаблицаТовары.ЭтоКомиссия
		|	И ТаблицаТовары.СуммаВзаиморасчетовДоКорректировки - ТаблицаТовары.СуммаВзаиморасчетов > 0"
	КонецЕсли;
	Если Реквизиты.ЕстьТовары И Реквизиты.ЕстьУслуги Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|";
	КонецЕсли;
	Если Реквизиты.ЕстьУслуги Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	&СчетФактура КАК СчетФактура,
		|	&ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
		|	""Корректировка НДС"" КАК Содержание,
		|	ИСТИНА КАК ЭтоУслуга,
		|	&СобытиеПриобретение КАК Событие,
		|	ТаблицаУслуги.Номенклатура,
		|	ТаблицаУслуги.СтавкаНДС,
		|	ТаблицаУслуги.СуммаНДСРубДоКорректировки - ТаблицаУслуги.СуммаНДСРуб КАК НДС,
		|	ВЫБОР
		|		КОГДА &РасчетКорректировокСУчетомРекомендацийПоНДС И &РасчетыВВалюте
		|			ТОГДА ТаблицаУслуги.СуммаБезНДСРубДоКорректировки - ТаблицаУслуги.СуммаБезНДСРуб
		|		ИНАЧЕ ТаблицаУслуги.СуммаРубДоКорректировки - ТаблицаУслуги.СуммаНДСРубДоКорректировки - (ТаблицаУслуги.СуммаРуб - ТаблицаУслуги.СуммаНДСРуб)
		|	КОНЕЦ КАК СуммаБезНДС,
		|	НЕОПРЕДЕЛЕНО КАК СчетУчета,
		|	Реквизиты.Дата КАК Период,
		|	Реквизиты.Дата КАК ДатаСобытия,
		|	Реквизиты.Организация,
		|	Реквизиты.Контрагент КАК Поставщик,
		|	ЛОЖЬ КАК ЗаписьДополнительногоЛиста,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК КорректируемыйПериод,
		|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
		|	ТаблицаУслуги.НомерСтроки,
		|	ТаблицаУслуги.СчетУчетаНДСПоРеализации,
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСПоУменьшениюСтоимостиРеализации) КАК СчетУчетаНДС,
		|	ТаблицаУслуги.СчетДоходов КАК СчетДоходов,
		|	ТаблицаУслуги.Субконто,
		|	Реквизиты.Ссылка КАК Регистратор
		|ИЗ
		|	ТаблицаУслуги КАК ТаблицаУслуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ТаблицаУслуги.СуммаВзаиморасчетовДоКорректировки - ТаблицаУслуги.СуммаВзаиморасчетов > 0"
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	НомераТаблиц.Вставить("НДСВосстановление", НомераТаблиц.Количество());
	Если Реквизиты.ЕстьТовары Тогда
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	&СчетФактура КАК СчетФактура,
		|	&ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
		|	""Реализация товаров"" КАК Содержание,
		|	ЛОЖЬ КАК ЭтоУслуга,
		|	&СобытиеРеализация КАК Событие,
		|	Реквизиты.Дата КАК ДатаСобытия,
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.СтавкаНДС,
		|	ТаблицаТовары.СуммаНДСРуб - ТаблицаТовары.СуммаНДСРубДоКорректировки КАК НДС,
		|	ВЫБОР
		|		КОГДА &РасчетКорректировокСУчетомРекомендацийПоНДС И &РасчетыВВалюте
		|			ТОГДА ТаблицаТовары.СуммаБезНДСРуб - ТаблицаТовары.СуммаБезНДСРубДоКорректировки
		|		ИНАЧЕ ТаблицаТовары.СуммаРуб - ТаблицаТовары.СуммаНДСРуб - (ТаблицаТовары.СуммаРубДоКорректировки - ТаблицаТовары.СуммаНДСРубДоКорректировки)
		|	КОНЕЦ КАК СуммаБезНДС,
		|	ТаблицаТовары.СчетУчета КАК СчетУчета,
		|	Реквизиты.Дата КАК Период,
		|	Реквизиты.Организация,
		|	Реквизиты.Контрагент КАК Покупатель,
		|	ТаблицаТовары.НомерСтроки,
		|	ТаблицаТовары.СчетУчетаНДСПоРеализации,
		|	ТаблицаТовары.СчетДоходов КАК СчетДоходов,
		|	ТаблицаТовары.Субконто,
		|	Реквизиты.Ссылка КАК Регистратор,
		|	ВЫБОР
		|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&СчетФактураДата, КВАРТАЛ)
		|				ИЛИ &КорректироватьВТекущемпериоде
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
		|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
		|	ВЫБОР
		|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&СчетФактураДата, КВАРТАЛ)
		|				ИЛИ &КорректироватьВТекущемпериоде
		|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|		ИНАЧЕ НАЧАЛОПЕРИОДА(&СчетФактураДата, КВАРТАЛ)
		|	КОНЕЦ КАК КорректируемыйПериод,
		|	ЛОЖЬ КАК УслугиЗаРубежом
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|ГДЕ
		|	НЕ ТаблицаТовары.ЭтоКомиссия
		|	И ТаблицаТовары.СуммаВзаиморасчетовДоКорректировки - ТаблицаТовары.СуммаВзаиморасчетов < 0";
	КонецЕсли;
	Если Реквизиты.ЕстьТовары И Реквизиты.ЕстьУслуги Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|";
	КонецЕсли;
	Если Реквизиты.ЕстьУслуги Тогда
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	&СчетФактура КАК СчетФактура,
		|	&ИсправленныйСчетФактура КАК ИсправленныйСчетФактура,
		|	""Реализация услуг"" КАК Содержание,
		|	ИСТИНА КАК ЭтоУслуга,
		|	&СобытиеРеализация КАК Событие,
		|	Реквизиты.Дата КАК ДатаСобытия,
		|	ТаблицаУслуги.Номенклатура,
		|	ТаблицаУслуги.СтавкаНДС,
		|	ТаблицаУслуги.СуммаНДСРуб - ТаблицаУслуги.СуммаНДСРубДоКорректировки КАК НДС,
		|	ВЫБОР
		|		КОГДА &РасчетКорректировокСУчетомРекомендацийПоНДС И &РасчетыВВалюте
		|			ТОГДА ТаблицаУслуги.СуммаБезНДСРуб - ТаблицаУслуги.СуммаБезНДСРубДоКорректировки
		|		ИНАЧЕ ТаблицаУслуги.СуммаРуб - ТаблицаУслуги.СуммаНДСРуб - (ТаблицаУслуги.СуммаРубДоКорректировки - ТаблицаУслуги.СуммаНДСРубДоКорректировки)
		|	КОНЕЦ КАК СуммаБезНДС,
		|	НЕОПРЕДЕЛЕНО КАК СчетУчета,
		|	Реквизиты.Дата КАК Период,
		|	Реквизиты.Организация,
		|	Реквизиты.Контрагент КАК Покупатель,
		|	ТаблицаУслуги.НомерСтроки,
		|	ТаблицаУслуги.СчетУчетаНДСПоРеализации,
		|	ТаблицаУслуги.СчетДоходов КАК СчетДоходов,
		|	ТаблицаУслуги.Субконто,
		|	Реквизиты.Ссылка КАК Регистратор,
		|	ВЫБОР
		|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&СчетФактураДата, КВАРТАЛ)
		|				ИЛИ &КорректироватьВТекущемпериоде
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
		|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
		|	ВЫБОР
		|		КОГДА КОНЕЦПЕРИОДА(&Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(&СчетФактураДата, КВАРТАЛ)
		|				ИЛИ &КорректироватьВТекущемпериоде
		|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
		|		ИНАЧЕ НАЧАЛОПЕРИОДА(&СчетФактураДата, КВАРТАЛ)
		|	КОНЕЦ КАК КорректируемыйПериод,
		|	ТаблицаУслуги.УслугиЗаРубежом КАК УслугиЗаРубежом
		|ИЗ
		|	ТаблицаУслуги КАК ТаблицаУслуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ТаблицаУслуги.СуммаВзаиморасчетовДоКорректировки - ТаблицаУслуги.СуммаВзаиморасчетов < 0";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Если НЕ Реквизиты.КорректироватьБУиНУ Тогда
		ПараметрыПроведения.Вставить("НДСТоварыУслуги", Неопределено);
	Иначе
		НомераТаблиц.Вставить("НДСТоварыУслуги", НомераТаблиц.Количество());
		Если Реквизиты.ЕстьТовары Тогда
			ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|	1 КАК НомерСписка,
			|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
			|	Реквизиты.Ссылка КАК Регистратор,
			|	ЛОЖЬ КАК ЭтоУслуга,
			|	ТаблицаТовары.СчетУчетаНДСПоРеализации,
			|	ТаблицаТовары.Номенклатура,
			|	ТаблицаТовары.Субконто,
			|	""Реализация товаров"" КАК Содержание,
			|	&СчетФактура КАК СчетФактура,
			|	ТаблицаТовары.СтавкаНДС,
			|	ТаблицаТовары.СтавкаНДСДоИзменения,
			|	ТаблицаТовары.СуммаНДСРуб КАК СуммаНДС,
			|	ТаблицаТовары.СуммаНДСРубДоИзменения КАК СуммаНДСДоИзменения,
			|	ТаблицаТовары.СуммаНДСРубДоКорректировки КАК СуммаНДСДоКорректировки,
			|	ТаблицаТовары.ИдентификаторСтроки КАК ИдентификаторСтроки
			|ИЗ
			|	ТаблицаТовары КАК ТаблицаТовары
			|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
			|		ПО (ИСТИНА)
			|ГДЕ
			|	НЕ ТаблицаТовары.ЭтоКомиссия";
		КонецЕсли;
		Если Реквизиты.ЕстьТовары И Реквизиты.ЕстьУслуги Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
		Если Реквизиты.ЕстьУслуги Тогда
			ТекстЗапроса = ТекстЗапроса + 
			"ВЫБРАТЬ
			|	2 КАК НомерСписка,
			|	ТаблицаУслуги.НомерСтроки КАК НомерСтроки,
			|	Реквизиты.Ссылка КАК Регистратор,
			|	ИСТИНА КАК ЭтоУслуга,
			|	ТаблицаУслуги.СчетУчетаНДСПоРеализации,
			|	ТаблицаУслуги.Номенклатура,
			|	ТаблицаУслуги.Субконто,
			|	""Реализация услуг"" КАК Содержание,
			|	&СчетФактура КАК СчетФактура,
			|	ТаблицаУслуги.СтавкаНДС,
			|	ТаблицаУслуги.СтавкаНДСДоИзменения,
			|	ТаблицаУслуги.СуммаНДСРуб КАК СуммаНДС,
			|	ТаблицаУслуги.СуммаНДСРубДоИзменения КАК СуммаНДСДоИзменения,
			|	ТаблицаУслуги.СуммаНДСРубДоКорректировки КАК СуммаНДСДоКорректировки,
			|	ТаблицаУслуги.ИдентификаторСтроки КАК ИдентификаторСтроки
			|ИЗ
			|	ТаблицаУслуги КАК ТаблицаУслуги
			|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
			|		ПО (ИСТИНА)";
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСписка,
		|	НомерСтроки"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если НЕ Реквизиты.КорректироватьБУиНУ 
		ИЛИ Реквизиты.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.СПокупателем
		ИЛИ НЕ Реквизиты.ЕстьТовары Тогда
		ПараметрыПроведения.Вставить("НДСТоварыГТД", Неопределено);
	Иначе
		НомераТаблиц.Вставить("НДСТоварыГТД", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	""Товары"" КАК ИмяСписка,
		|	&СинонимТовары КАК СинонимСписка,
		|	ТаблицаТовары.НомерСтроки КАК НомерСтрокиДокумента,
		|	ТаблицаТовары.Номенклатура,
		|	ТаблицаТовары.СтавкаНДС,
		|	ТаблицаТовары.СчетУчета,
		|	ТаблицаТовары.НомерГТД,
		|	ТаблицаТовары.СтранаПроисхождения,
		|	ТаблицаТовары.Количество - ТаблицаТовары.КоличествоДоИзменения КАК Количество
		|ИЗ
		|	ТаблицаТовары КАК ТаблицаТовары
		|ГДЕ
		|	ТаблицаТовары.НомерГТД <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
		|	И ТаблицаТовары.Количество <> ТаблицаТовары.КоличествоДоИзменения
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтрокиДокумента"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;

	Если Реквизиты.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.СПокупателем 
		ИЛИ НЕ Реквизиты.ЕстьТовары Тогда
		ПараметрыПроведения.Вставить("НДСТоварыРеализация", Неопределено);
	Иначе
		НомераТаблиц.Вставить("НДСТоварыРеализация", НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса
		+ "ВЫБРАТЬ
		  |	""Товары"" КАК ИмяСписка,
		  |	&СинонимТовары КАК СинонимСписка,
		  |	ТаблицаТовары.НомерСтроки КАК НомерСтрокиДокумента,
		  |	ТаблицаТовары.Номенклатура,
		  |	ТаблицаТовары.СтавкаНДС,
		  |	ТаблицаТовары.СчетУчета,
		  |	ТаблицаТовары.НомерГТД,
		  |	ТаблицаТовары.СтранаПроисхождения,
		  |	ТаблицаТовары.Количество - ТаблицаТовары.КоличествоДоИзменения КАК Количество
		  |ИЗ
		  |	ТаблицаТовары КАК ТаблицаТовары
		  |ГДЕ
		  |	НЕ ТаблицаТовары.ЭтоКомиссия
		  |	И ТаблицаТовары.Количество - ТаблицаТовары.КоличествоДоИзменения > 0
		  |
		  |УПОРЯДОЧИТЬ ПО
		  |	НомерСтрокиДокумента" 
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаКорректировкаРеализацииУСН(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если НЕ Реквизиты.КорректироватьБУиНУ
		ИЛИ НЕ Реквизиты.ПрименяетсяУСН Тогда
		ПараметрыПроведения.Вставить("УСНРеквизиты", Неопределено);
		Возврат "";
	КонецЕсли;

	НомераТаблиц.Вставить("УСНРеквизиты", НомераТаблиц.Количество());
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	&ОрганизацияПрименяетУСН КАК ПрименяетсяУСН,
	|	&ПрименяетсяУСНДоходыМинусРасходы КАК ПрименяетсяУСНДоходыМинусРасходы,
	|	&ПорядокПризнанияРасходовПоНДС КАК ПорядокПризнанияРасходовПоНДС,
	|	&ПрошлыйПериод КАК ЭтоКорректировкаПрошлогоПериода,
	|	&ДеятельностьНаПатенте КАК ДеятельностьНаПатенте,
	|	&ДеятельностьНаТорговомСборе КАК ДеятельностьНаТорговомСборе,
	|	&ПлательщикЕНВД КАК ПлательщикЕНВД,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВидДоговора КАК ВидДоговора,
	|	&ДокументРеализацииСсылка КАК ДокументРеализацииСсылка,
	|	&ДатаДокументаРеализации КАК ДокументРеализацииДата,
	|	Реквизиты.ВалютаВзаиморасчетов КАК Валюта,
	|	Реквизиты.СуммаВключаетНДС
	|ИЗ
	|	Реквизиты КАК Реквизиты"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаКорректировкаРеализацииИП(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если НЕ Реквизиты.КорректироватьБУиНУ
		ИЛИ НЕ Реквизиты.ПлательщикНДФЛ Тогда
		ПараметрыПроведения.Вставить("РеализацияРеквизитыИП", Неопределено);
		Возврат "";
	КонецЕсли;

	НомераТаблиц.Вставить("РеализацияРеквизитыИП", НомераТаблиц.Количество());
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	ВЫБОР
	|		КОГДА &ПрошлыйПериод
	|				И Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки)
	|			ТОГДА КОНЕЦПЕРИОДА(&ДатаДокументаРеализации, ГОД)
	|		ИНАЧЕ Реквизиты.Дата
	|	КОНЕЦ КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	""Реализация"" КАК ТипСписания,
	|	&ДеятельностьНаПатенте КАК ДеятельностьНаПатенте,
	|	Реквизиты.Склад.ТипСклада КАК ТипСклада,
	|	Реквизиты.СтатьяПрочихДоходовИРасходов,
	|	Реквизиты.ВидДоговора КАК ВидДоговора,
	|	&ДокументРеализацииСсылка КАК ДокументРеализации,
	|	&ДатаДокументаРеализации КАК ДатаДокументаРеализации
	|ИЗ
	|	Реквизиты КАК Реквизиты"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРублевыеСуммыДокументовВВалюте(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	ТекстЗапроса = "";
	
	Если Реквизиты.ВалютаВзаиморасчетов <> Реквизиты.ВалютаРеглУчета Тогда
	
		НомераТаблиц.Вставить("РеквизитыРублевыеСуммыДокументыВВалюте", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("РублевыеСуммыДокументовВВалюте",         НомераТаблиц.Количество());
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	Реквизиты.Ссылка КАК Регистратор,
		|	Реквизиты.Дата КАК Период,
		|	Реквизиты.Организация,
		|	Реквизиты.ВалютаДокумента
		|ИЗ
		|	Реквизиты КАК Реквизиты"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
		
		Если Реквизиты.ЕстьТовары Тогда
		
			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ
			|	""Товары"" КАК ИмяСписка,
			|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
			|	ТаблицаТовары.ИдентификаторСтроки Как ИдентификаторСтроки,
			|	ТаблицаТовары.ПрослеживаемыйКомплект Как ПрослеживаемыйКомплект,
			|	ТаблицаТовары.СуммаРуб КАК СуммаБУ,
			|	ТаблицаТовары.СуммаНДСРуб КАК СуммаНДСРуб,
			|	ТаблицаТовары.СуммаБезНДСРуб КАК СуммаБезНДСРуб,
			|	ТаблицаТовары.СуммаРубДоИзменения КАК СуммаБУДоИзменения,
			|	ТаблицаТовары.СуммаНДСРубДоИзменения КАК СуммаНДСРубДоИзменения,
			|	ТаблицаТовары.СуммаБезНДСРубДоИзменения КАК СуммаБезНДСРубДоИзменения,
			|	ТаблицаТовары.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов
			|ИЗ
			|	ТаблицаТовары КАК ТаблицаТовары
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	""ТоварыДоИзменения"",
			|	ТаблицаТовары.НомерСтроки,
			|	"""" Как ИдентификаторСтроки,
			|	"""" Как ПрослеживаемыйКомплект,
			|	ТаблицаТовары.СуммаРубДоКорректировки * (-1) КАК СуммаБУ,
			|	ТаблицаТовары.СуммаНДСРубДоКорректировки * (-1) КАК СуммаНДСРуб,
			|	ТаблицаТовары.СуммаБезНДСРубДоКорректировки * (-1) КАК СуммаБезНДСРуб,
			|	0,
			|	0,
			|	0,
			|	0
			|ИЗ
			|	ТаблицаТовары КАК ТаблицаТовары";
			
		КонецЕсли;
		
		Если Реквизиты.ЕстьТовары и Реквизиты.ЕстьУслуги Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли;
		
		Если Реквизиты.ЕстьУслуги Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ
			|	""Услуги"" КАК ИмяСписка,
			|	ТаблицаУслуги.НомерСтроки,
			|	ТаблицаУслуги.ИдентификаторСтроки Как ИдентификаторСтроки,
			|	"""" Как ПрослеживаемыйКомплект,
			|	ТаблицаУслуги.СуммаРуб КАК СуммаБУ,
			|	ТаблицаУслуги.СуммаНДСРуб КАК СуммаНДСРуб,
			|	ТаблицаУслуги.СуммаБезНДСРуб КАК СуммаБезНДСРуб,
			|	ТаблицаУслуги.СуммаРубДоИзменения КАК СуммаБУДоИзменения,
			|	ТаблицаУслуги.СуммаНДСРубДоИзменения КАК СуммаНДСРубДоИзменения,
			|	ТаблицаУслуги.СуммаБезНДСРубДоИзменения КАК СуммаБезНДСРубДоИзменения,
			|	ТаблицаУслуги.СуммаВзаиморасчетов
			|ИЗ
			|	ТаблицаУслуги КАК ТаблицаУслуги
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	""УслугиДоИзменения"",
			|	ТаблицаУслуги.НомерСтроки,
			|	"""" Как ИдентификаторСтроки,
			|	"""" Как ПрослеживаемыйКомплект,
			|	ТаблицаУслуги.СуммаРубДоКорректировки * (-1) КАК СуммаБУ,
			|	ТаблицаУслуги.СуммаНДСРубДоКорректировки * (-1) КАК СуммаНДСРуб,
			|	ТаблицаУслуги.СуммаБезНДСРубДоКорректировки * (-1) КАК СуммаБезНДСРуб,
			|	0,
			|	0,
			|	0,
			|	0
			|ИЗ
			|	ТаблицаУслуги КАК ТаблицаУслуги";
		КонецЕсли;
		
		Если (Реквизиты.ЕстьТовары или Реквизиты.ЕстьУслуги) и (Реквизиты.ЕстьАгентскиеУслуги) Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли;
		
		Если Реквизиты.ЕстьАгентскиеУслуги Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ
			|	""АгентскиеУслуги"" КАК ИмяСписка,
			|	ТаблицаАгентскиеУслуги.НомерСтроки,
			|	ТаблицаАгентскиеУслуги.ИдентификаторСтроки КАК ИдентификаторСтроки,
			|	"""" Как ПрослеживаемыйКомплект,
			|	ТаблицаАгентскиеУслуги.СуммаРуб КАК СуммаБУ,
			|	ТаблицаАгентскиеУслуги.СуммаНДСРуб КАК СуммаНДСРуб,
			|	ТаблицаАгентскиеУслуги.СуммаБезНДСРуб КАК СуммаБезНДСРуб,
			|	ТаблицаАгентскиеУслуги.СуммаРубДоИзменения КАК СуммаБУДоИзменения,
			|	ТаблицаАгентскиеУслуги.СуммаНДСРубДоИзменения КАК СуммаНДСРубДоИзменения,
			|	ТаблицаАгентскиеУслуги.СуммаБезНДСРубДоИзменения КАК СуммаБезНДСРубДоИзменения,
			|	0
			|ИЗ
			|	ТаблицаАгентскиеУслуги КАК ТаблицаАгентскиеУслуги
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	""АгентскиеУслугиДоИзменения"",
			|	ТаблицаАгентскиеУслуги.НомерСтроки,
			|	"""" Как ИдентификаторСтроки,
			|	"""" Как ПрослеживаемыйКомплект,
			|	ТаблицаАгентскиеУслуги.СуммаРубДоКорректировки * (-1) КАК СуммаБУ,
			|	ТаблицаАгентскиеУслуги.СуммаНДСРубДоКорректировки * (-1) КАК СуммаНДСРуб,
			|	ТаблицаАгентскиеУслуги.СуммаБезНДСРубДоКорректировки * (-1) КАК СуммаБезНДСРуб,
			|	0,
			|	0,
			|	0,
			|	0
			|ИЗ
			|	ТаблицаАгентскиеУслуги КАК ТаблицаАгентскиеУслуги";
		КонецЕсли;
		
		Если ТекстЗапроса = "" Тогда
			
			ПараметрыПроведения.Вставить("РублевыеСуммыДокументовВВалюте",         Неопределено);
			ПараметрыПроведения.Вставить("РеквизитыРублевыеСуммыДокументыВВалюте", Неопределено);
			
		Иначе
			
			ТекстЗапроса = ТекстЗапроса + "
			|"
			+ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
			
		КонецЕсли;	
		
	Иначе
		
		ПараметрыПроведения.Вставить("РублевыеСуммыДокументовВВалюте",         Неопределено);
		ПараметрыПроведения.Вставить("РеквизитыРублевыеСуммыДокументыВВалюте", Неопределено);
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ТекстЗапросаПрослеживаемыеТовары(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если НЕ Реквизиты.КорректироватьБУиНУ
		И НЕ Реквизиты.КорректироватьНДС
		ИЛИ НЕ Реквизиты.ЕстьТовары Тогда
		ПараметрыПроведения.Вставить("ВТ_РНПТКорректировки",           Неопределено);
		ПараметрыПроведения.Вставить("ВТ_РНПТИсходногоДокумента",      Неопределено);
		ПараметрыПроведения.Вставить("ВТ_РНПТДокументРеализации",      Неопределено);
		ПараметрыПроведения.Вставить("ВТ_СуммыБезНДС",                 Неопределено);
		ПараметрыПроведения.Вставить("ВТ_ПрослеживаемыеТоварыПредварительная", Неопределено);
		ПараметрыПроведения.Вставить("КорректировкаПрослеживаемыхТоваровЕАЭС", Неопределено);
		ПараметрыПроведения.Вставить("ПрослеживаемыеТоварыУвеличение", Неопределено);
		ПараметрыПроведения.Вставить("ПрослеживаемыеТоварыУменьшение", Неопределено);
		ПараметрыПроведения.Вставить("ПрослеживаемыеОперации",         Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ВТ_РНПТКорректировки",                   НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_РНПТИсходногоДокумента",              НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_РНПТДокументРеализации",              НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_СуммыБезНДС",                         НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_ПрослеживаемыеТоварыПредварительная", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("КорректировкаПрослеживаемыхТоваровЕАЭС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПрослеживаемыеТоварыУвеличение",         НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПрослеживаемыеТоварыУменьшение",         НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПрослеживаемыеОперации",                 НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка КАК Ссылка,
	|	КорректировкаРеализацииТовары.Ссылка.Контрагент КАК Контрагент,
	|	КорректировкаРеализацииТовары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализацииТовары.СчетУчета В (&ТоварыПринятыеНаКомиссию)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СчетУчетаЗабалансовый,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализацииТовары.ПрослеживаемыйКомплект
	|			ТОГДА КорректировкаРеализацииСведенияПрослеживаемости.СтранаПроисхождения
	|		ИНАЧЕ КорректировкаРеализацииТовары.СтранаПроисхождения
	|	КОНЕЦ КАК СтранаПроисхождения,
	|	КорректировкаРеализацииСведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	СУММА(КорректировкаРеализацииСведенияПрослеживаемости.Количество) КАК Количество,
	|	СУММА(КорректировкаРеализацииСведенияПрослеживаемости.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Комитент КАК Комитент,
	|	КорректировкаРеализацииТовары.СуммаНДС КАК СуммаНДС,
	|	КорректировкаРеализацииТовары.СуммаНДСДоИзменения КАК СуммаНДСДоИзменения,
	|	КорректировкаРеализацииТовары.Цена КАК Цена,
	|	КорректировкаРеализацииТовары.ЦенаДоИзменения КАК ЦенаДоИзменения,
	|	КорректировкаРеализацииТовары.Сумма КАК Сумма,
	|	КорректировкаРеализацииТовары.СуммаДоИзменения КАК СуммаДоИзменения,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Номенклатура КАК Комплектующие,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Сумма КАК СуммаБезНДС,
	|	КорректировкаРеализацииТовары.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект,
	|	КорректировкаРеализацииТовары.Количество КАК КоличествоПоНоменклатуре,
	|	КорректировкаРеализацииТовары.КоличествоДоИзменения КАК КоличествоДоИзмененияПоНоменклатуре,
	|	КорректировкаРеализацииТовары.ПрослеживаемыйТоварПоДокументуОснованию КАК ПрослеживаемыйТоварПоДокументуОснованию,
	|	КорректировкаРеализацииТовары.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар
	|ПОМЕСТИТЬ ВТ_РНПТКорректировки
	|ИЗ
	|	Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.СведенияПрослеживаемости КАК КорректировкаРеализацииСведенияПрослеживаемости
	|		ПО (КорректировкаРеализацииСведенияПрослеживаемости.Ссылка = КорректировкаРеализацииТовары.Ссылка)
	|			И (КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки = КорректировкаРеализацииТовары.ИдентификаторСтроки)
	|			И (НЕ КорректировкаРеализацииСведенияПрослеживаемости.ЭтоСтрокаСИсходнымиРНПТ)
	|ГДЕ
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка = &Ссылка
	|	И КорректировкаРеализацииТовары.ПрослеживаемыйТовар
	|	И КорректировкаРеализацииТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки,
	|	КорректировкаРеализацииТовары.Номенклатура,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализацииТовары.СчетУчета В (&ТоварыПринятыеНаКомиссию)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	КорректировкаРеализацииСведенияПрослеживаемости.РНПТ,
	|	КорректировкаРеализацииТовары.Ссылка.Контрагент,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка,
	|	КорректировкаРеализацииТовары.СуммаНДС,
	|	КорректировкаРеализацииТовары.СуммаНДСДоИзменения,
	|	КорректировкаРеализацииТовары.Цена,
	|	КорректировкаРеализацииТовары.ЦенаДоИзменения,
	|	КорректировкаРеализацииТовары.Сумма,
	|	КорректировкаРеализацииТовары.СуммаДоИзменения,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Комитент,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализацииТовары.ПрослеживаемыйКомплект
	|			ТОГДА КорректировкаРеализацииСведенияПрослеживаемости.СтранаПроисхождения
	|		ИНАЧЕ КорректировкаРеализацииТовары.СтранаПроисхождения
	|	КОНЕЦ,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Номенклатура,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Сумма,
	|	КорректировкаРеализацииТовары.ПрослеживаемыйКомплект,
	|	КорректировкаРеализацииТовары.Количество,
	|	КорректировкаРеализацииТовары.КоличествоДоИзменения,
	|	КорректировкаРеализацииТовары.ПрослеживаемыйТоварПоДокументуОснованию,
	|	КорректировкаРеализацииТовары.ПрослеживаемыйТовар
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторСтроки,
	|	РНПТ,
	|	Номенклатура,
	|	СтранаПроисхождения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка КАК Ссылка,
	|	КорректировкаРеализацииТовары.Ссылка.Контрагент КАК Контрагент,
	|	КорректировкаРеализацииТовары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализацииТовары.СчетУчета В (&ТоварыПринятыеНаКомиссию)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СчетУчетаЗабалансовый,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализацииТовары.ПрослеживаемыйКомплект
	|			ТОГДА КорректировкаРеализацииСведенияПрослеживаемости.СтранаПроисхождения
	|		ИНАЧЕ КорректировкаРеализацииТовары.СтранаПроисхождения
	|	КОНЕЦ КАК СтранаПроисхождения,
	|	КорректировкаРеализацииСведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	СУММА(КорректировкаРеализацииСведенияПрослеживаемости.Количество) КАК Количество,
	|	СУММА(КорректировкаРеализацииСведенияПрослеживаемости.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	КорректировкаРеализацииТовары.СуммаНДС КАК СуммаНДС,
	|	КорректировкаРеализацииТовары.СуммаНДСДоИзменения КАК СуммаНДСДоИзменения,
	|	КорректировкаРеализацииТовары.Цена КАК Цена,
	|	КорректировкаРеализацииТовары.ЦенаДоИзменения КАК ЦенаДоИзменения,
	|	КорректировкаРеализацииТовары.Сумма КАК Сумма,
	|	КорректировкаРеализацииТовары.СуммаДоИзменения КАК СуммаДоИзменения,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Комитент КАК Комитент,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Номенклатура КАК Комплектующие,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Сумма КАК СуммаБезНДС,
	|	КорректировкаРеализацииТовары.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект,
	|	КорректировкаРеализацииТовары.ПрослеживаемыйТоварПоДокументуОснованию КАК ПрослеживаемыйТоварПоДокументуОснованию,
	|	КорректировкаРеализацииТовары.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар
	|ПОМЕСТИТЬ ВТ_РНПТИсходногоДокумента
	|ИЗ
	|	Документ.КорректировкаРеализации.СведенияПрослеживаемости КАК КорректировкаРеализацииСведенияПрослеживаемости
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
	|		ПО КорректировкаРеализацииСведенияПрослеживаемости.Ссылка = КорректировкаРеализацииТовары.Ссылка
	|			И КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки = КорректировкаРеализацииТовары.ИдентификаторСтроки
	|ГДЕ
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка = &ИсправляемыйСчетФактура
	|	И &ЭтоИсправлениеКорректировки
	|	И КорректировкаРеализацииТовары.Ссылка = &ИсправляемыйСчетФактура
	|	И КорректировкаРеализацииСведенияПрослеживаемости.ЭтоСтрокаСИсходнымиРНПТ
	|	И КорректировкаРеализацииТовары.ПрослеживаемыйТовар = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки,
	|	КорректировкаРеализацииТовары.Номенклатура,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализацииТовары.СчетУчета В (&ТоварыПринятыеНаКомиссию)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	КорректировкаРеализацииСведенияПрослеживаемости.РНПТ,
	|	КорректировкаРеализацииТовары.Ссылка.Контрагент,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка,
	|	КорректировкаРеализацииТовары.СуммаНДС,
	|	КорректировкаРеализацииТовары.СуммаНДСДоИзменения,
	|	КорректировкаРеализацииТовары.Цена,
	|	КорректировкаРеализацииТовары.ЦенаДоИзменения,
	|	КорректировкаРеализацииТовары.Сумма,
	|	КорректировкаРеализацииТовары.СуммаДоИзменения,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Комитент,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализацииТовары.ПрослеживаемыйКомплект
	|			ТОГДА КорректировкаРеализацииСведенияПрослеживаемости.СтранаПроисхождения
	|		ИНАЧЕ КорректировкаРеализацииТовары.СтранаПроисхождения
	|	КОНЕЦ,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Номенклатура,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Сумма,
	|	КорректировкаРеализацииТовары.ПрослеживаемыйКомплект,
	|	КорректировкаРеализацииТовары.ПрослеживаемыйТоварПоДокументуОснованию,
	|	КорректировкаРеализацииТовары.ПрослеживаемыйТовар
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторСтроки,
	|	РНПТ,
	|	Номенклатура,
	|	СтранаПроисхождения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаРеализацииСведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	СУММА(КорректировкаРеализацииСведенияПрослеживаемости.Количество) КАК Количество,
	|	СУММА(КорректировкаРеализацииСведенияПрослеживаемости.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	КорректировкаРеализацииТовары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализацииТовары.ПрослеживаемыйКомплект
	|			ТОГДА КорректировкаРеализацииСведенияПрослеживаемости.СтранаПроисхождения
	|		ИНАЧЕ КорректировкаРеализацииТовары.СтранаПроисхожденияДоИзменения
	|	КОНЕЦ КАК СтранаПроисхождения,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализацииТовары.СчетУчета В (&ТоварыПринятыеНаКомиссию)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СчетУчетаЗабалансовый,
	|	КорректировкаРеализацииТовары.СуммаНДС КАК СуммаНДС,
	|	КорректировкаРеализацииТовары.СуммаНДСДоИзменения КАК СуммаНДСДоИзменения,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка.Контрагент КАК Контрагент,
	|	КорректировкаРеализацииТовары.Цена КАК Цена,
	|	КорректировкаРеализацииТовары.ЦенаДоИзменения КАК ЦенаДоИзменения,
	|	КорректировкаРеализацииТовары.Сумма КАК Сумма,
	|	КорректировкаРеализацииТовары.СуммаДоИзменения КАК СуммаДоИзменения,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Комитент КАК Комитент,
	|	КорректировкаРеализацииТовары.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Номенклатура КАК Комплектующие,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Сумма КАК СуммаБезНДС,
	|	КорректировкаРеализации.ИсходныйДокументРеализации КАК ИсходныйДокументРеализации,
	|	КорректировкаРеализацииТовары.ПрослеживаемыйТоварПоДокументуОснованию КАК ПрослеживаемыйТоварПоДокументуОснованию,
	|	КорректировкаРеализацииТовары.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар
	|ПОМЕСТИТЬ ВТ_РНПТДокументРеализации
	|ИЗ
	|	Документ.КорректировкаРеализации.СведенияПрослеживаемости КАК КорректировкаРеализацииСведенияПрослеживаемости
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
	|		ПО КорректировкаРеализацииСведенияПрослеживаемости.Ссылка = КорректировкаРеализацииТовары.Ссылка
	|			И КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки = КорректировкаРеализацииТовары.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ПО КорректировкаРеализацииСведенияПрослеживаемости.Ссылка = КорректировкаРеализации.Ссылка
	|ГДЕ
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка = &Ссылка
	|	И КорректировкаРеализацииСведенияПрослеживаемости.ЭтоСтрокаСИсходнымиРНПТ
	|	И КорректировкаРеализацииТовары.Ссылка = &Ссылка
	|	И КорректировкаРеализацииТовары.ПрослеживаемыйТовар = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки,
	|	КорректировкаРеализацииТовары.Номенклатура,
	|	КорректировкаРеализацииСведенияПрослеживаемости.РНПТ,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализацииТовары.СчетУчета В (&ТоварыПринятыеНаКомиссию)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	КорректировкаРеализацииТовары.СуммаНДС,
	|	КорректировкаРеализацииТовары.СуммаНДСДоИзменения,
	|	КорректировкаРеализацииТовары.Цена,
	|	КорректировкаРеализацииТовары.ЦенаДоИзменения,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка.Контрагент,
	|	КорректировкаРеализацииТовары.Сумма,
	|	КорректировкаРеализацииТовары.СуммаДоИзменения,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Комитент,
	|	КорректировкаРеализацииТовары.ПрослеживаемыйКомплект,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Номенклатура,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Сумма,
	|	КорректировкаРеализации.ИсходныйДокументРеализации,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализацииТовары.ПрослеживаемыйКомплект
	|			ТОГДА КорректировкаРеализацииСведенияПрослеживаемости.СтранаПроисхождения
	|		ИНАЧЕ КорректировкаРеализацииТовары.СтранаПроисхожденияДоИзменения
	|	КОНЕЦ,
	|	КорректировкаРеализацииТовары.ПрослеживаемыйТоварПоДокументуОснованию,
	|	КорректировкаРеализацииТовары.ПрослеживаемыйТовар
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторСтроки,
	|	РНПТ,
	|	Номенклатура,
	|	СтранаПроисхождения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаРеализацииТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.СуммаРуб - ТаблицаТовары.СуммаНДСРуб КАК СуммаБезНДС,
	|	ТаблицаТовары.СуммаРубДоИзменения - ТаблицаТовары.СуммаНДСРубДоИзменения КАК СуммаБезНДСДоИзменения,
	|	ТаблицаТовары.СуммаРубДоКорректировки - ТаблицаТовары.СуммаНДСРубДоКорректировки КАК СуммаБезНДСДоКорректироки,
	|	КорректировкаРеализацииТовары.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ ВТ_СуммыБезНДС
	|ИЗ
	|	Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаТовары КАК ТаблицаТовары
	|		ПО КорректировкаРеализацииТовары.ИдентификаторСтроки = ТаблицаТовары.ИдентификаторСтроки
	|ГДЕ
	|	КорректировкаРеализацииТовары.Ссылка = &Ссылка
	|	И КорректировкаРеализацииТовары.ПрослеживаемыйТовар
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.РНПТ, ВТ_РНПТДокументРеализации.РНПТ) КАК РНПТ,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_РНПТКорректировки.Количество, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализации.Количество, 0) > 0
	|				ТОГДА ЕСТЬNULL(ВТ_РНПТКорректировки.Количество, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализации.Количество, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоУвеличение,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_РНПТДокументРеализации.Количество, 0) - ЕСТЬNULL(ВТ_РНПТКорректировки.Количество, 0) > 0
	|				ТОГДА ЕСТЬNULL(ВТ_РНПТДокументРеализации.Количество, 0) - ЕСТЬNULL(ВТ_РНПТКорректировки.Количество, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоУменьшение,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_РНПТКорректировки.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализации.КоличествоПрослеживаемости, 0) > 0
	|				ТОГДА ЕСТЬNULL(ВТ_РНПТКорректировки.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализации.КоличествоПрослеживаемости, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоПрослеживаемостиУвеличение,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_РНПТДокументРеализации.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТКорректировки.КоличествоПрослеживаемости, 0) > 0
	|				ТОГДА ЕСТЬNULL(ВТ_РНПТДокументРеализации.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТКорректировки.КоличествоПрослеживаемости, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоПрослеживаемостиУменьшение,
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.Номенклатура, ВТ_РНПТДокументРеализации.Номенклатура) КАК Номенклатура,
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.СтранаПроисхождения, ВТ_РНПТДокументРеализации.СтранаПроисхождения) КАК СтранаПроисхождения,
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.Комитент, ВТ_РНПТДокументРеализации.Комитент) КАК Комитент,
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.Комплектующие, ВТ_РНПТДокументРеализации.Комплектующие) КАК Комплектующие,
	|	ВТ_РНПТКорректировки.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА &ЭтоКомиссия
	|			ТОГДА ЕСТЬNULL(ВТ_РНПТКорректировки.Контрагент, ВТ_РНПТДокументРеализации.Контрагент)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Комиссионер,
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.ПрослеживаемыйТоварПоДокументуОснованию, ВТ_РНПТДокументРеализации.ПрослеживаемыйТоварПоДокументуОснованию) КАК ПрослеживаемыйТоварПоДокументуОснованию
	|ПОМЕСТИТЬ ВТ_ПрослеживаемыеТоварыПредварительная
	|ИЗ
	|	ВТ_РНПТКорректировки КАК ВТ_РНПТКорректировки
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_РНПТДокументРеализации КАК ВТ_РНПТДокументРеализации
	|		ПО ВТ_РНПТКорректировки.ИдентификаторСтроки = ВТ_РНПТДокументРеализации.ИдентификаторСтроки
	|			И ВТ_РНПТКорректировки.РНПТ = ВТ_РНПТДокументРеализации.РНПТ
	|			И ВТ_РНПТКорректировки.Номенклатура = ВТ_РНПТДокументРеализации.Номенклатура
	|			И ВТ_РНПТКорректировки.СтранаПроисхождения = ВТ_РНПТДокументРеализации.СтранаПроисхождения
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.РНПТ, ВТ_РНПТДокументРеализации.РНПТ),
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.Номенклатура, ВТ_РНПТДокументРеализации.Номенклатура),
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.СтранаПроисхождения, ВТ_РНПТДокументРеализации.СтранаПроисхождения),
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.Комитент, ВТ_РНПТДокументРеализации.Комитент),
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.Комплектующие, ВТ_РНПТДокументРеализации.Комплектующие),
	|	ВТ_РНПТКорректировки.Ссылка,
	|	ВЫБОР
	|		КОГДА &ЭтоКомиссия
	|			ТОГДА ЕСТЬNULL(ВТ_РНПТКорректировки.Контрагент, ВТ_РНПТДокументРеализации.Контрагент)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.ПрослеживаемыйТоварПоДокументуОснованию, ВТ_РНПТДокументРеализации.ПрослеживаемыйТоварПоДокументуОснованию)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.РНПТ, ВТ_РНПТДокументРеализации.РНПТ) КАК РНПТ,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_РНПТКорректировки.Количество, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализации.Количество, 0) > 0
	|				ТОГДА ЕСТЬNULL(ВТ_РНПТКорректировки.Количество, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализации.Количество, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоУвеличение,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_РНПТДокументРеализации.Количество, 0) - ЕСТЬNULL(ВТ_РНПТКорректировки.Количество, 0) > 0
	|				ТОГДА ЕСТЬNULL(ВТ_РНПТДокументРеализации.Количество, 0) - ЕСТЬNULL(ВТ_РНПТКорректировки.Количество, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоУменьшение,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_РНПТКорректировки.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализации.КоличествоПрослеживаемости, 0) > 0
	|				ТОГДА ЕСТЬNULL(ВТ_РНПТКорректировки.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализации.КоличествоПрослеживаемости, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоПрослеживаемостиУвеличение,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_РНПТДокументРеализации.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТКорректировки.КоличествоПрослеживаемости, 0) > 0
	|				ТОГДА ЕСТЬNULL(ВТ_РНПТДокументРеализации.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТКорректировки.КоличествоПрослеживаемости, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоПрослеживаемостиУменьшение,
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.Номенклатура, ВТ_РНПТДокументРеализации.Номенклатура) КАК Номенклатура,
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.СтранаПроисхождения, ВТ_РНПТДокументРеализации.СтранаПроисхождения) КАК СтранаПроисхождения,
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.Комитент, ВТ_РНПТДокументРеализации.Комитент) КАК Комитент,
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.Комплектующие, ВТ_РНПТДокументРеализации.Комплектующие) КАК Комплектующие,
	|	ВТ_РНПТДокументРеализации.ИсходныйДокументРеализации КАК СопроводительныйДокумент,
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.Ссылка, ВТ_РНПТДокументРеализации.Ссылка) КАК КорректировочныйДокумент,
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.Контрагент, ВТ_РНПТДокументРеализации.Контрагент) КАК Контрагент,
	|	РеализацияТоваровУслугТовары.НомерСтроки КАК ПорядковыйНомер,
	|	ВЫБОР
	|		КОГДА ВТ_РНПТКорректировки.Сумма ЕСТЬ NULL
	|			ТОГДА -(ЕСТЬNULL(ВТ_РНПТДокументРеализации.Сумма, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализации.СуммаНДС, 0))
	|		КОГДА (ВТ_РНПТКорректировки.Количество <> ВТ_РНПТКорректировки.КоличествоПоНоменклатуре
	|				ИЛИ ВТ_РНПТДокументРеализации.Количество <> ВТ_РНПТКорректировки.КоличествоДоИзмененияПоНоменклатуре)
	|				И ВТ_РНПТКорректировки.КоличествоДоИзмененияПоНоменклатуре <> 0
	|				И ВТ_РНПТКорректировки.КоличествоПоНоменклатуре <> 0
	|			ТОГДА ВТ_РНПТКорректировки.Количество * ((ВТ_РНПТДокументРеализации.Сумма - ВТ_РНПТДокументРеализации.СуммаНДС) / ВТ_РНПТКорректировки.КоличествоПоНоменклатуре) - ВТ_РНПТДокументРеализации.Количество * (ЕСТЬNULL(ВТ_РНПТДокументРеализации.СуммаДоИзменения, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализации.СуммаНДСДоИзменения, 0)) / ВТ_РНПТКорректировки.КоличествоДоИзмененияПоНоменклатуре
	|		ИНАЧЕ ЕСТЬNULL(ВТ_РНПТКорректировки.Сумма, 0) - ЕСТЬNULL(ВТ_РНПТКорректировки.СуммаНДС, 0) - (ЕСТЬNULL(ВТ_РНПТДокументРеализации.СуммаДоИзменения, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализации.СуммаНДСДоИзменения, 0))
	|	КОНЕЦ КАК Сумма,
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.Количество, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализации.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализации.КоличествоПрослеживаемости, 0) КАК КоличествоПрослеживаемости
	|ИЗ
	|	ВТ_РНПТКорректировки КАК ВТ_РНПТКорректировки
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_РНПТДокументРеализации КАК ВТ_РНПТДокументРеализации
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|			ПО ВТ_РНПТДокументРеализации.ИсходныйДокументРеализации = РеализацияТоваровУслугТовары.Ссылка
	|				И ВТ_РНПТДокументРеализации.Номенклатура = РеализацияТоваровУслугТовары.Номенклатура
	|				И ВТ_РНПТДокументРеализации.ЦенаДоИзменения = РеализацияТоваровУслугТовары.Цена
	|		ПО ВТ_РНПТКорректировки.ИдентификаторСтроки = ВТ_РНПТДокументРеализации.ИдентификаторСтроки
	|			И ВТ_РНПТКорректировки.РНПТ = ВТ_РНПТДокументРеализации.РНПТ
	|			И ВТ_РНПТКорректировки.Номенклатура = ВТ_РНПТДокументРеализации.Номенклатура
	|			И ВТ_РНПТКорректировки.СтранаПроисхождения = ВТ_РНПТДокументРеализации.СтранаПроисхождения
	|ГДЕ
	|	(ЕСТЬNULL(ВТ_РНПТКорректировки.Количество, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализации.Количество, 0) <> 0
	|			ИЛИ ВЫБОР
	|				КОГДА ЕСТЬNULL(ВТ_РНПТКорректировки.КоличествоПоНоменклатуре, 0) <> 0
	|						И ЕСТЬNULL(ВТ_РНПТКорректировки.КоличествоДоИзмененияПоНоменклатуре, 0) <> 0
	|					ТОГДА ВТ_РНПТДокументРеализации.Сумма / ВТ_РНПТКорректировки.КоличествоПоНоменклатуре - ЕСТЬNULL(ВТ_РНПТДокументРеализации.СуммаДоИзменения, 0) / ВТ_РНПТКорректировки.КоличествоДоИзмененияПоНоменклатуре <> 0
	|				ИНАЧЕ ЕСТЬNULL(ВТ_РНПТКорректировки.Сумма, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализации.СуммаДоИзменения, 0) <> 0
	|			КОНЕЦ)
	|	И ВТ_РНПТДокументРеализации.ПрослеживаемыйТовар = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.РНПТ, ВТ_РНПТДокументРеализации.РНПТ),
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.Номенклатура, ВТ_РНПТДокументРеализации.Номенклатура),
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.СтранаПроисхождения, ВТ_РНПТДокументРеализации.СтранаПроисхождения),
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.Комитент, ВТ_РНПТДокументРеализации.Комитент),
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.Комплектующие, ВТ_РНПТДокументРеализации.Комплектующие),
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.Ссылка, ВТ_РНПТДокументРеализации.Ссылка),
	|	ВТ_РНПТДокументРеализации.ИсходныйДокументРеализации,
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.Контрагент, ВТ_РНПТДокументРеализации.Контрагент),
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.Количество, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализации.Количество, 0),
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализации.КоличествоПрослеживаемости, 0),
	|	РеализацияТоваровУслугТовары.НомерСтроки,
	|	ВЫБОР
	|		КОГДА ВТ_РНПТКорректировки.Сумма ЕСТЬ NULL
	|			ТОГДА -(ЕСТЬNULL(ВТ_РНПТДокументРеализации.Сумма, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализации.СуммаНДС, 0))
	|		КОГДА (ВТ_РНПТКорректировки.Количество <> ВТ_РНПТКорректировки.КоличествоПоНоменклатуре
	|				ИЛИ ВТ_РНПТДокументРеализации.Количество <> ВТ_РНПТКорректировки.КоличествоДоИзмененияПоНоменклатуре)
	|				И ВТ_РНПТКорректировки.КоличествоДоИзмененияПоНоменклатуре <> 0
	|				И ВТ_РНПТКорректировки.КоличествоПоНоменклатуре <> 0
	|			ТОГДА ВТ_РНПТКорректировки.Количество * ((ВТ_РНПТДокументРеализации.Сумма - ВТ_РНПТДокументРеализации.СуммаНДС) / ВТ_РНПТКорректировки.КоличествоПоНоменклатуре) - ВТ_РНПТДокументРеализации.Количество * (ЕСТЬNULL(ВТ_РНПТДокументРеализации.СуммаДоИзменения, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализации.СуммаНДСДоИзменения, 0)) / ВТ_РНПТКорректировки.КоличествоДоИзмененияПоНоменклатуре
	|		ИНАЧЕ ЕСТЬNULL(ВТ_РНПТКорректировки.Сумма, 0) - ЕСТЬNULL(ВТ_РНПТКорректировки.СуммаНДС, 0) - (ЕСТЬNULL(ВТ_РНПТДокументРеализации.СуммаДоИзменения, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализации.СуммаНДСДоИзменения, 0))
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПрослеживаемыеТоварыПредварительная.РНПТ КАК РНПТ,
	|	ВТ_ПрослеживаемыеТоварыПредварительная.КоличествоУвеличение КАК Количество,
	|	ВТ_ПрослеживаемыеТоварыПредварительная.КоличествоПрослеживаемостиУвеличение КАК КоличествоПрослеживаемости,
	|	ВТ_ПрослеживаемыеТоварыПредварительная.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ВТ_ПрослеживаемыеТоварыПредварительная.Комитент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыОтКомитентаНаРеализацию)
	|	КОНЕЦ КАК ВидЗапасов,
	|	ВТ_ПрослеживаемыеТоварыПредварительная.Комиссионер КАК Комиссионер,
	|	ВТ_ПрослеживаемыеТоварыПредварительная.СтранаПроисхождения КАК СтранаПроисхождения,
	|	&ДокументРеализацииСсылка КАК ОснованиеДляВозврата,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаРеализации,
	|	ВТ_ПрослеживаемыеТоварыПредварительная.Комитент КАК Комитент,
	|	ВТ_ПрослеживаемыеТоварыПредварительная.Комплектующие КАК Комплектующие
	|ИЗ
	|	ВТ_ПрослеживаемыеТоварыПредварительная КАК ВТ_ПрослеживаемыеТоварыПредварительная
	|ГДЕ
	|	(ВТ_ПрослеживаемыеТоварыПредварительная.КоличествоПрослеживаемостиУвеличение > 0
	|			ИЛИ ВТ_ПрослеживаемыеТоварыПредварительная.КоличествоУвеличение > 0)
	|	И ВТ_ПрослеживаемыеТоварыПредварительная.ПрослеживаемыйТоварПоДокументуОснованию = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПрослеживаемыеТоварыПредварительная.РНПТ КАК РНПТ,
	|	ВТ_ПрослеживаемыеТоварыПредварительная.КоличествоУменьшение КАК Количество,
	|	ВТ_ПрослеживаемыеТоварыПредварительная.КоличествоПрослеживаемостиУменьшение КАК КоличествоПрослеживаемости,
	|	ВТ_ПрослеживаемыеТоварыПредварительная.Номенклатура КАК Номенклатура,
	|	ВТ_ПрослеживаемыеТоварыПредварительная.Комитент КАК Комитент,
	|	ВЫБОР
	|		КОГДА ВТ_ПрослеживаемыеТоварыПредварительная.Комитент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыОтКомитентаНаРеализацию)
	|	КОНЕЦ КАК ВидЗапасов,
	|	ВТ_ПрослеживаемыеТоварыПредварительная.Комиссионер КАК Комиссионер,
	|	ВТ_ПрослеживаемыеТоварыПредварительная.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВЫБОР
	|		КОГДА &ЭтоКомиссия
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ &ДокументРеализацииСсылка
	|	КОНЕЦ КАК ОснованиеДляВозврата,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаРеализации,
	|	ВТ_ПрослеживаемыеТоварыПредварительная.Комплектующие КАК Комплектующие
	|ИЗ
	|	ВТ_ПрослеживаемыеТоварыПредварительная КАК ВТ_ПрослеживаемыеТоварыПредварительная
	|ГДЕ
	|	(ВТ_ПрослеживаемыеТоварыПредварительная.КоличествоУменьшение > 0
	|			ИЛИ ВТ_ПрослеживаемыеТоварыПредварительная.КоличествоПрослеживаемостиУменьшение > 0)
	|	И ВТ_ПрослеживаемыеТоварыПредварительная.ПрослеживаемыйТоварПоДокументуОснованию = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВТ_РНПТКорректировки.ПрослеживаемыйКомплект
	|			ТОГДА ЕСТЬNULL(ВТ_РНПТКорректировки.Комплектующие, ВТ_РНПТДокументРеализации.Комплектующие)
	|		ИНАЧЕ ЕСТЬNULL(ВТ_РНПТКорректировки.Номенклатура, ВТ_РНПТДокументРеализации.Номенклатура)
	|	КОНЕЦ КАК Номенклатура,
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.РНПТ, ВТ_РНПТДокументРеализации.РНПТ) КАК РНПТ,
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.КоличествоПрослеживаемости, 0) КАК КоличествоПрослеживаемости,
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.Контрагент, ВТ_РНПТДокументРеализации.Контрагент) КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ВТ_РНПТКорректировки.ПрослеживаемыйКомплект
	|			ТОГДА ВТ_РНПТКорректировки.СуммаБезНДС
	|		ИНАЧЕ ЕСТЬNULL(ВТ_СуммыБезНДС.СуммаБезНДС, 0)
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА НЕ &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях)
	|		КОГДА ВТ_РНПТКорректировки.СчетУчетаЗабалансовый
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ЖурналСФ)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПродаж)
	|	КОНЕЦ КАК ОтражениеВОтчетности,
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПустаяСсылка)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ_РНПТКорректировки.СчетУчетаЗабалансовый
	|					ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.РеализацияТовараКомитента)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.Реализация)
	|			КОНЕЦ
	|	КОНЕЦ КАК КодОперации,
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ВТ_РНПТКорректировки.Ссылка
	|		ИНАЧЕ &ДокументРеализацииСсылка
	|	КОНЕЦ КАК ДокументОперации,
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА НАЧАЛОПЕРИОДА(ВТ_РНПТКорректировки.Ссылка.Дата, КВАРТАЛ)
	|		ИНАЧЕ &ПериодИсходнойОперации
	|	КОНЕЦ КАК ПериодОперации,
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|				ИЛИ ВТ_РНПТКорректировки.Номенклатура ЕСТЬ NULL
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ &ДатаДокументаРеализации
	|	КОНЕЦ КАК ДатаДокумента,
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|				ИЛИ ВТ_РНПТКорректировки.Номенклатура ЕСТЬ NULL
	|			ТОГДА """"
	|		ИНАЧЕ &НомерИсходногоДокумента
	|	КОНЕЦ КАК НомерДокумента,
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|				ИЛИ ВТ_РНПТКорректировки.Номенклатура ЕСТЬ NULL
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТипыДокументов.УПД)
	|	КОНЕЦ КАК ТипДокументаВПрослеживаемости,
	|	0 КАК КоличествоДляРаспределения,
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.ИдентификаторСтроки, ВТ_РНПТДокументРеализации.ИдентификаторСтроки) КАК ИдентификаторСтроки,
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.ПрослеживаемыйКомплект, ВТ_РНПТДокументРеализации.ПрослеживаемыйКомплект) КАК ПрослеживаемыйКомплект
	|ИЗ
	|	ВТ_РНПТКорректировки КАК ВТ_РНПТКорректировки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СуммыБезНДС КАК ВТ_СуммыБезНДС
	|		ПО ВТ_РНПТКорректировки.ИдентификаторСтроки = ВТ_СуммыБезНДС.ИдентификаторСтроки
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_РНПТДокументРеализации КАК ВТ_РНПТДокументРеализации
	|		ПО ВТ_РНПТКорректировки.ИдентификаторСтроки = ВТ_РНПТДокументРеализации.ИдентификаторСтроки
	|			И ВТ_РНПТКорректировки.РНПТ = ВТ_РНПТДокументРеализации.РНПТ
	|			И ВТ_РНПТКорректировки.Номенклатура = ВТ_РНПТДокументРеализации.Номенклатура
	|			И ВТ_РНПТКорректировки.СтранаПроисхождения = ВТ_РНПТДокументРеализации.СтранаПроисхождения
	|ГДЕ
	|	ЕСТЬNULL(ВТ_РНПТКорректировки.Ссылка.ВидОперации, ВТ_РНПТДокументРеализации.Ссылка.ВидОперации) <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение)
	|	И НЕ &ЭтоИсправлениеКорректировки
	|	И ВЫБОР
	|			КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|				ТОГДА НЕ ВТ_РНПТКорректировки.Номенклатура ЕСТЬ NULL
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И НЕ &ЭтоКомиссия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.ПрослеживаемыйКомплект
	|			ТОГДА ВложенныйЗапрос.Комплектующие
	|		ИНАЧЕ ВложенныйЗапрос.Номенклатура
	|	КОНЕЦ,
	|	ВложенныйЗапрос.Количество,
	|	ВложенныйЗапрос.РНПТ,
	|	ВложенныйЗапрос.КоличествоПрослеживаемости,
	|	ВложенныйЗапрос.Контрагент,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.ПрослеживаемыйКомплект
	|			ТОГДА ВЫБОР
	|					КОГДА ВложенныйЗапрос.СуммаБезНДС > 0
	|						ТОГДА ВложенныйЗапрос.СуммаБезНДС
	|					ИНАЧЕ -ВложенныйЗапрос.СуммаБезНДС
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ВТ_СуммыБезНДС.СуммаБезНДС, 0) - ЕСТЬNULL(ВТ_СуммыБезНДС.СуммаБезНДСДоИзменения, 0) > 0
	|					ТОГДА ЕСТЬNULL(ВТ_СуммыБезНДС.СуммаБезНДС, 0) - ЕСТЬNULL(ВТ_СуммыБезНДС.СуммаБезНДСДоИзменения, 0)
	|				ИНАЧЕ ЕСТЬNULL(ВТ_СуммыБезНДС.СуммаБезНДСДоИзменения, 0) - ЕСТЬNULL(ВТ_СуммыБезНДС.СуммаБезНДС, 0)
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях)
	|		КОГДА ВложенныйЗапрос.СчетУчетаЗабалансовый
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ЖурналСФ)
	|		КОГДА ВложенныйЗапрос.СуммаНДСДоИзменения < ВложенныйЗапрос.СуммаНДС
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПродаж)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПокупок)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПустаяСсылка)
	|		КОГДА ВложенныйЗапрос.СуммаДоИзменения < ВложенныйЗапрос.Сумма
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.УКДНаУвеличениеВыданный)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВложенныйЗапрос.СчетУчетаЗабалансовый
	|					ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.СоставлениеКомиссионеромКорректировкиНаУменьшение)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.УКДНаУменьшениеВыданный)
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВложенныйЗапрос.Ссылка,
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.Ссылка.Дата, КВАРТАЛ),
	|	ВЫБОР
	|		КОГДА НЕ &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ДанныеПервичныхДокументов.Дата
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ДанныеПервичныхДокументов.Номер
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ТипыДокументов.УКД)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВложенныйЗапрос.КоличествоДляРаспределения,
	|	ВложенныйЗапрос.ИдентификаторСтроки,
	|	ВложенныйЗапрос.ПрослеживаемыйКомплект
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСТЬNULL(ВТ_РНПТКорректировки.Номенклатура, ВТ_РНПТДокументРеализации.Номенклатура) КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_РНПТДокументРеализации.Количество, 0) - ЕСТЬNULL(ВТ_РНПТКорректировки.Количество, 0) > 0
	|				ТОГДА ЕСТЬNULL(ВТ_РНПТДокументРеализации.Количество, 0) - ЕСТЬNULL(ВТ_РНПТКорректировки.Количество, 0)
	|			ИНАЧЕ ЕСТЬNULL(ВТ_РНПТКорректировки.Количество, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализации.Количество, 0)
	|		КОНЕЦ КАК Количество,
	|		ЕСТЬNULL(ВТ_РНПТКорректировки.РНПТ, ВТ_РНПТДокументРеализации.РНПТ) КАК РНПТ,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_РНПТДокументРеализации.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТКорректировки.КоличествоПрослеживаемости, 0) > 0
	|				ТОГДА ЕСТЬNULL(ВТ_РНПТДокументРеализации.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТКорректировки.КоличествоПрослеживаемости, 0)
	|			ИНАЧЕ ЕСТЬNULL(ВТ_РНПТКорректировки.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализации.КоличествоПрослеживаемости, 0)
	|		КОНЕЦ КАК КоличествоПрослеживаемости,
	|		ЕСТЬNULL(ВТ_РНПТКорректировки.Контрагент, ВТ_РНПТДокументРеализации.Контрагент) КАК Контрагент,
	|		ЕСТЬNULL(ВТ_РНПТКорректировки.Ссылка, ВТ_РНПТДокументРеализации.Ссылка) КАК Ссылка,
	|		ЕСТЬNULL(ВТ_РНПТКорректировки.СчетУчетаЗабалансовый, ВТ_РНПТДокументРеализации.СчетУчетаЗабалансовый) КАК СчетУчетаЗабалансовый,
	|		ЕСТЬNULL(ВТ_РНПТКорректировки.СуммаНДС, ВТ_РНПТДокументРеализации.СуммаНДС) КАК СуммаНДС,
	|		ЕСТЬNULL(ВТ_РНПТКорректировки.СуммаНДСДоИзменения, ВТ_РНПТДокументРеализации.СуммаНДСДоИзменения) КАК СуммаНДСДоИзменения,
	|		ЕСТЬNULL(ВТ_РНПТДокументРеализации.Цена, ВТ_РНПТКорректировки.Цена) КАК Цена,
	|		ЕСТЬNULL(ВТ_РНПТДокументРеализации.ЦенаДоИзменения, ВТ_РНПТКорректировки.ЦенаДоИзменения) КАК ЦенаДоИзменения,
	|		ЕСТЬNULL(ВТ_РНПТДокументРеализации.Сумма, ВТ_РНПТКорректировки.Сумма) КАК Сумма,
	|		ЕСТЬNULL(ВТ_РНПТДокументРеализации.СуммаДоИзменения, ВТ_РНПТКорректировки.СуммаДоИзменения) КАК СуммаДоИзменения,
	|		ЕСТЬNULL(ВТ_РНПТКорректировки.Количество, 0) КАК КоличествоДляРаспределения,
	|		ЕСТЬNULL(ВТ_РНПТДокументРеализации.ИдентификаторСтроки, ВТ_РНПТКорректировки.ИдентификаторСтроки) КАК ИдентификаторСтроки,
	|		ЕСТЬNULL(ВТ_РНПТДокументРеализации.ПрослеживаемыйКомплект, ВТ_РНПТКорректировки.ПрослеживаемыйКомплект) КАК ПрослеживаемыйКомплект,
	|		ЕСТЬNULL(ВТ_РНПТКорректировки.Комплектующие, ВТ_РНПТДокументРеализации.Комплектующие) КАК Комплектующие,
	|		ЕСТЬNULL(ВТ_РНПТДокументРеализации.СуммаБезНДС, 0) - ЕСТЬNULL(ВТ_РНПТКорректировки.СуммаБезНДС, 0) КАК СуммаБезНДС
	|	ИЗ
	|		ВТ_РНПТКорректировки КАК ВТ_РНПТКорректировки
	|			ПОЛНОЕ СОЕДИНЕНИЕ ВТ_РНПТДокументРеализации КАК ВТ_РНПТДокументРеализации
	|			ПО ВТ_РНПТКорректировки.ИдентификаторСтроки = ВТ_РНПТДокументРеализации.ИдентификаторСтроки
	|				И ВТ_РНПТКорректировки.РНПТ = ВТ_РНПТДокументРеализации.РНПТ
	|				И ВТ_РНПТКорректировки.Номенклатура = ВТ_РНПТДокументРеализации.Номенклатура
	|				И ВТ_РНПТКорректировки.СтранаПроисхождения = ВТ_РНПТДокументРеализации.СтранаПроисхождения
	|	ГДЕ
	|		(ВТ_РНПТКорректировки.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение)
	|				ИЛИ ВТ_РНПТДокументРеализации.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение))) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СуммыБезНДС КАК ВТ_СуммыБезНДС
	|		ПО ВложенныйЗапрос.ИдентификаторСтроки = ВТ_СуммыБезНДС.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ВложенныйЗапрос.Ссылка = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	ВложенныйЗапрос.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение)
	|	И ВЫБОР
	|			КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|				ТОГДА ВложенныйЗапрос.СуммаНДС <> ВложенныйЗапрос.СуммаНДСДоИзменения
	|			ИНАЧЕ ВложенныйЗапрос.Сумма <> ВложенныйЗапрос.СуммаДоИзменения
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА ВложенныйЗапрос.Цена = ВложенныйЗапрос.ЦенаДоИзменения
	|				ТОГДА ВложенныйЗапрос.Количество > 0
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И НЕ &ЭтоКомиссия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.ПрослеживаемыйКомплект
	|			ТОГДА ВложенныйЗапрос.Комплектующие
	|		ИНАЧЕ ВложенныйЗапрос.Номенклатура
	|	КОНЕЦ,
	|	ВложенныйЗапрос.Количество,
	|	ВложенныйЗапрос.РНПТ,
	|	ВложенныйЗапрос.КоличествоПрослеживаемости,
	|	ВложенныйЗапрос.Контрагент,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.ПрослеживаемыйКомплект
	|			ТОГДА ВЫБОР
	|					КОГДА ВложенныйЗапрос.СуммаБезНДС > 0
	|						ТОГДА ВложенныйЗапрос.СуммаБезНДС
	|					ИНАЧЕ -ВложенныйЗапрос.СуммаБезНДС
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ВТ_СуммыБезНДС.СуммаБезНДС, 0) - ЕСТЬNULL(ВТ_СуммыБезНДС.СуммаБезНДСДоКорректироки, 0) > 0
	|					ТОГДА ЕСТЬNULL(ВТ_СуммыБезНДС.СуммаБезНДС, 0) - ЕСТЬNULL(ВТ_СуммыБезНДС.СуммаБезНДСДоКорректироки, 0)
	|				ИНАЧЕ ЕСТЬNULL(ВТ_СуммыБезНДС.СуммаБезНДСДоКорректироки, 0) - ЕСТЬNULL(ВТ_СуммыБезНДС.СуммаБезНДС, 0)
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях)
	|		КОГДА ВложенныйЗапрос.СчетУчетаЗабалансовый
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ЖурналСФ)
	|		КОГДА ВложенныйЗапрос.СуммаНДСДоИзменения < ВложенныйЗапрос.СуммаНДС
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПродаж)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПокупок)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПустаяСсылка)
	|		КОГДА ВложенныйЗапрос.СуммаДоИзменения < ВложенныйЗапрос.Сумма
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.УКДНаУвеличениеВыданный)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВложенныйЗапрос.СчетУчетаЗабалансовый
	|					ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.СоставлениеКомиссионеромКорректировкиНаУменьшение)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.УКДНаУменьшениеВыданный)
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ВложенныйЗапрос.Ссылка
	|		ИНАЧЕ &ИсправляемыйСчетФактура
	|	КОНЕЦ,
	|	ВложенныйЗапрос.ПериодОперации,
	|	ВЫБОР
	|		КОГДА НЕ &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ДанныеПервичныхДокументов.Дата
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ДанныеПервичныхДокументов.Номер
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ТипыДокументов.УКД)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВложенныйЗапрос.КоличествоДляРаспределения,
	|	ВложенныйЗапрос.ИдентификаторСтроки,
	|	ВложенныйЗапрос.ПрослеживаемыйКомплект
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСТЬNULL(ВТ_РНПТИсходногоДокумента.Номенклатура, ВТ_РНПТКорректировки.Номенклатура) КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_РНПТКорректировки.Количество, 0) - ЕСТЬNULL(ВТ_РНПТИсходногоДокумента.Количество, 0) > 0
	|				ТОГДА ЕСТЬNULL(ВТ_РНПТКорректировки.Количество, 0) - ЕСТЬNULL(ВТ_РНПТИсходногоДокумента.Количество, 0)
	|			ИНАЧЕ ЕСТЬNULL(ВТ_РНПТИсходногоДокумента.Количество, 0) - ЕСТЬNULL(ВТ_РНПТКорректировки.Количество, 0)
	|		КОНЕЦ КАК Количество,
	|		ЕСТЬNULL(ВТ_РНПТИсходногоДокумента.РНПТ, ВТ_РНПТКорректировки.РНПТ) КАК РНПТ,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_РНПТКорректировки.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТИсходногоДокумента.КоличествоПрослеживаемости, 0) > 0
	|				ТОГДА ЕСТЬNULL(ВТ_РНПТКорректировки.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТИсходногоДокумента.КоличествоПрослеживаемости, 0)
	|			ИНАЧЕ ЕСТЬNULL(ВТ_РНПТИсходногоДокумента.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТКорректировки.КоличествоПрослеживаемости, 0)
	|		КОНЕЦ КАК КоличествоПрослеживаемости,
	|		ЕСТЬNULL(ВТ_РНПТИсходногоДокумента.Контрагент, ВТ_РНПТКорректировки.Контрагент) КАК Контрагент,
	|		&Ссылка КАК Ссылка,
	|		ЕСТЬNULL(ВТ_РНПТИсходногоДокумента.СчетУчетаЗабалансовый, ВТ_РНПТКорректировки.СчетУчетаЗабалансовый) КАК СчетУчетаЗабалансовый,
	|		ЕСТЬNULL(ВТ_РНПТИсходногоДокумента.СуммаНДС, ВТ_РНПТКорректировки.СуммаНДС) КАК СуммаНДС,
	|		ЕСТЬNULL(ВТ_РНПТИсходногоДокумента.СуммаНДСДоИзменения, ВТ_РНПТКорректировки.СуммаНДСДоИзменения) КАК СуммаНДСДоИзменения,
	|		ЕСТЬNULL(ВТ_РНПТКорректировки.Цена, ВТ_РНПТИсходногоДокумента.Цена) КАК Цена,
	|		ЕСТЬNULL(ВТ_РНПТИсходногоДокумента.ЦенаДоИзменения, ВТ_РНПТКорректировки.ЦенаДоИзменения) КАК ЦенаДоИзменения,
	|		ЕСТЬNULL(ВТ_РНПТКорректировки.Сумма, ВТ_РНПТИсходногоДокумента.Сумма) КАК Сумма,
	|		ЕСТЬNULL(ВТ_РНПТИсходногоДокумента.СуммаДоИзменения, ВТ_РНПТКорректировки.СуммаДоИзменения) КАК СуммаДоИзменения,
	|		НАЧАЛОПЕРИОДА(ЕСТЬNULL(ВТ_РНПТИсходногоДокумента.Ссылка.Дата, ВТ_РНПТКорректировки.Ссылка.Дата), КВАРТАЛ) КАК ПериодОперации,
	|		ЕСТЬNULL(ВТ_РНПТКорректировки.Количество, 0) КАК КоличествоДляРаспределения,
	|		ЕСТЬNULL(ВТ_РНПТКорректировки.ИдентификаторСтроки, ВТ_РНПТИсходногоДокумента.ИдентификаторСтроки) КАК ИдентификаторСтроки,
	|		ЕСТЬNULL(ВТ_РНПТКорректировки.ПрослеживаемыйКомплект, ВТ_РНПТИсходногоДокумента.ПрослеживаемыйКомплект) КАК ПрослеживаемыйКомплект,
	|		ЕСТЬNULL(ВТ_РНПТИсходногоДокумента.Комплектующие, ВТ_РНПТКорректировки.Комплектующие) КАК Комплектующие,
	|		ВТ_РНПТКорректировки.СуммаБезНДС КАК СуммаБезНДС
	|	ИЗ
	|		ВТ_РНПТИсходногоДокумента КАК ВТ_РНПТИсходногоДокумента
	|			ПОЛНОЕ СОЕДИНЕНИЕ ВТ_РНПТКорректировки КАК ВТ_РНПТКорректировки
	|			ПО ВТ_РНПТИсходногоДокумента.ИдентификаторСтроки = ВТ_РНПТКорректировки.ИдентификаторСтроки
	|				И ВТ_РНПТИсходногоДокумента.РНПТ = ВТ_РНПТКорректировки.РНПТ
	|				И ВТ_РНПТИсходногоДокумента.Номенклатура = ВТ_РНПТКорректировки.Номенклатура
	|				И ВТ_РНПТИсходногоДокумента.СтранаПроисхождения = ВТ_РНПТКорректировки.СтранаПроисхождения
	|	ГДЕ
	|		&ЭтоИсправлениеКорректировки) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СуммыБезНДС КАК ВТ_СуммыБезНДС
	|		ПО ВложенныйЗапрос.ИдентификаторСтроки = ВТ_СуммыБезНДС.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО (ДанныеПервичныхДокументов.Документ = &ИсправляемыйСчетФактура)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|				ТОГДА ВложенныйЗапрос.СуммаНДС <> ВложенныйЗапрос.СуммаНДСДоИзменения
	|			ИНАЧЕ ВложенныйЗапрос.Сумма <> ВложенныйЗапрос.СуммаДоИзменения
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА ВложенныйЗапрос.Цена = ВложенныйЗапрос.ЦенаДоИзменения
	|				ТОГДА ВложенныйЗапрос.Количество > 0
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И &ЭтоИсправлениеКорректировки
	|	И НЕ &ЭтоКомиссия";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ПодготовитьПараметрыТаблицыАвансовОплат(ТаблицаВзаиморасчетов, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаВзаиморасчетов

	СписокОбязательныхКолонок = ""
	+ "ВалютаВзаиморасчетов,"            // <СправочникСсылка.Валюты>
	+ "ВидДоговора,"                     // <ПеречислениеСсылка.ВидыДоговоровКонтрагентов>
	+ "ДатаДокументаРасчетов,"           // <Дата>
	+ "ДоговорКонтрагента,"              // <СправочникСсылка.ДоговорыКонтрагентов>
	+ "ДокументРасчетов,"                // <ДокументСсылка.ПоступлениеНаРасчетныйСчет>
	+ "Контрагент,"	                     // <СправочникСсылка.Контрагенты>
	+ "ОстатокВзаиморасчетов,"           // <Число>
	+ "Подразделение,"                   // <СправочникСсылка.ПодразделенияОрганизаций>
	+ "ПодразделениеРасчетов,"           // <СправочникСсылка.ПодразделенияОрганизаций>
	+ "РасчетыВВалюте,"                  // <Булево>
	+ "РасчетыВУсловныхЕдиницах,"        // <Булево>
	+ "СуммаВзаиморасчетов,"             // <Число>
	+ "СуммаВзаиморасчетовЕНВД,"         // <Число>
	+ "СуммаВзаиморасчетовКомитента,"    // <Число>
	+ "СуммаВзаиморасчетовТорговыйСбор," // <Число>
	+ "СуммаВзаиморасчетовПатент,"       // <Число>
	+ "СуммаРуб,"                        // <Число>
	+ "СуммаРуб_ЕНВД,"                   // <Число>
	+ "СуммаРуб_Комитента,"              // <Число>
	+ "СуммаРуб_ТорговыйСбор,"           // <Число>
	+ "СуммаРуб_Патент,"                 // <Число>
	+ "СуммаРубПоКурсуАванса,"           // <Число>
	+ "СчетАвансов,"                     // <ПланСчетовСсылка.Хозрасчетный>
	+ "СчетРасчетов";                    // <ПланСчетовСсылка.Хозрасчетный>
	
	Параметры.Вставить("ТаблицаВзаиморасчетов",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаВзаиморасчетов, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Регистратор,"                                 // <ДокументСсылка.КорректировкаРеализации> - документ-регистратор движений
	+ "Период,"                                      // <Дата> - период движений - дата документа
	+ "Организация,"                                 // <СправочникСсылка.Организации>
	+ "ВалютаДокумента,"                             // <СправочникСсылка.Валюты>
	+ "ПризнаватьЗачитыватьАванс,"                   // <Булево>
	+ "ВидОперации," 		                         // <Перечисления.ВидыОперацийИсправленияПоступленияРеализации>
	+ "ДатаДокументаРеализации,"                     // <Дата> - дата корректируемого документа
	+ "ДоговорКонтрагента,"                          // <Справочник.ДоговорыКонтрагентов>
	+ "РасчетКорректировокСУчетомРекомендацийПоНДС"; // <Булево> 


	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции // ПодготовитьПараметрыТаблицыАвансовОплат()

Функция ПодготовитьТаблицыАвансовОплат(ТаблицаВзаиморасчетов, ТаблицаРеквизиты) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаВзаиморасчетов)
	 Или Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат Новый Структура("ТаблицаАвансов, ТаблицаВзаиморасчеты", Неопределено, Неопределено);
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыТаблицыАвансовОплат(ТаблицаВзаиморасчетов, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
	ТаблицаАвансовОплат = Параметры.ТаблицаВзаиморасчетов;
	
	ТаблицаАвансовОплат.Колонки.Добавить("НужноУчитыватьПриЗачетеАванса");
	
	Если Реквизиты.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки Тогда
		ДатаРегистратора = Реквизиты.ДатаДокументаРеализации;
	Иначе
		ДатаРегистратора = Реквизиты.Период;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из ТаблицаАвансовОплат Цикл
		
		Если Реквизиты.ПризнаватьЗачитыватьАванс Тогда
			
			Если СтрокаТаблицы.ОстатокВзаиморасчетов <> 0 Тогда
				СтрокаТаблицы.НужноУчитыватьПриЗачетеАванса = Истина;
			Иначе
				СтрокаТаблицы.НужноУчитыватьПриЗачетеАванса = Ложь;
			КонецЕсли;
			
		Иначе
			
			СтрокаТаблицы.НужноУчитыватьПриЗачетеАванса = Ложь;
			СтрокаТаблицы.ДокументРасчетов = Реквизиты.Регистратор;
			
		КонецЕсли;
		
	КонецЦикла;

	Если Реквизиты.РасчетКорректировокСУчетомРекомендацийПоНДС Тогда 
		ТаблицаАвансов = ТаблицаАвансовОплат.СкопироватьКолонки();
		Для каждого Стр Из ТаблицаАвансовОплат Цикл 
			Если Стр.ДатаДокументаРасчетов < Реквизиты.ДатаДокументаРеализации Тогда
				НовСтр = ТаблицаАвансов.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, Стр);
			КонецЕсли;
		КонецЦикла;
	Иначе
		ТаблицаАвансов = ТаблицаАвансовОплат.Скопировать();
	КонецЕсли;
	
	СтруктураТаблиц = Новый Структура("ТаблицаАвансов, ТаблицаВзаиморасчеты", ТаблицаАвансов, ТаблицаАвансовОплат);
	
	Возврат СтруктураТаблиц;
	
КонецФункции

Функция ПодготовитьПараметрыТаблицыДокументаПоВыделениюАванса(ТаблицаРеквизиты, ТаблицыВыделенияАвансов)
	
	Параметры = Новый Структура;
	
	СписокОбязательныхКолонок = ""
	+ "Период,"                       // <Дата> - период движений - дата документа
	+ "ВалютаДокумента,"              // <СправочникСсылка.Валюты>
	+ "ПризнаватьЗачитыватьАванс,"    // <Булево>
	+ "Регистратор"; 		          // <Перечисления.ВидыОперацийИсправленияПоступленияРеализации>

	Параметры.Вставить("РеквизитыВыделенияАвансов",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
		
	// Подготовка таблицы Параметры.ТаблицаВзаиморасчетов

	СписокОбязательныхКолонок = ""
	+ "ВалютаВзаиморасчетов,"            // <СправочникСсылка.Валюты>
	+ "ВидДоговора,"                     // <ПеречислениеСсылка.ВидыДоговоровКонтрагентов>
	+ "ДатаДокументаРасчетов,"           // <Дата>
	+ "ДоговорКонтрагента,"              // <СправочникСсылка.ДоговорыКонтрагентов>
	+ "ДокументРасчетов,"                // <ДокументСсылка.ПоступлениеНаРасчетныйСчет>
	+ "Контрагент,"	                     // <СправочникСсылка.Контрагенты>
	+ "ОстатокВзаиморасчетов,"           // <Число>
	+ "Подразделение,"                   // <СправочникСсылка.ПодразделенияОрганизаций>
	+ "ПодразделениеРасчетов,"           // <СправочникСсылка.ПодразделенияОрганизаций>
	+ "РасчетыВВалюте,"                  // <Булево>
	+ "РасчетыВУсловныхЕдиницах,"        // <Булево>
	+ "СуммаВзаиморасчетов,"             // <Число>
	+ "СуммаВзаиморасчетовЕНВД,"         // <Число>
	+ "СуммаВзаиморасчетовКомитента,"    // <Число>
	+ "СуммаВзаиморасчетовТорговыйСбор," // <Число>
	+ "СуммаВзаиморасчетовПатент,"       // <Число>
	+ "СуммаРуб,"                        // <Число>
	+ "СуммаРуб_ЕНВД,"                   // <Число>
	+ "СуммаРуб_Комитента,"              // <Число>
	+ "СуммаРуб_ТорговыйСбор,"           // <Число>
	+ "СуммаРуб_Патент,"                 // <Число>
	+ "СуммаРубПоКурсуАванса,"           // <Число>
	+ "СчетАвансов,"                     // <ПланСчетовСсылка.Хозрасчетный>
	+ "СчетРасчетов";                    // <ПланСчетовСсылка.Хозрасчетный>
	
	Параметры.Вставить("ТаблицаВыделенияАвансов",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицыВыделенияАвансов, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

Функция ПодготовитьТаблицуВыделениеАвансов(ТаблицаВзаиморасчетыВозврат, ТаблицаРеквизиты, ТаблицаПоДокументуУменьшение = Неопределено, ТаблицаПоДокументуУвеличение = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаВзаиморасчетыВозврат)
	 Или Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
	    Возврат ТаблицаВзаиморасчетыВозврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыТаблицыДокументаПоВыделениюАванса(ТаблицаРеквизиты, ТаблицаВзаиморасчетыВозврат);
	Реквизиты = Параметры.РеквизитыВыделенияАвансов[0];
	
	ТаблицаВыделенияАвансов = Параметры.ТаблицаВыделенияАвансов;
	
	СтрокаВыделяемогоАванса = ТаблицаВыделенияАвансов.Найти(Реквизиты.Регистратор, "ДокументРасчетов");
	
	Если СтрокаВыделяемогоАванса = Неопределено Тогда
		Возврат ТаблицаВыделенияАвансов;
	КонецЕсли;
	
	Если НЕ Реквизиты.ПризнаватьЗачитыватьАванс Тогда
		
		СтрокаВыделяемогоАванса.ДокументРасчетов = Документы.КорректировкаРеализации.ПустаяСсылка();
		
		Возврат ТаблицаВыделенияАвансов;
		
	ИначеЕсли Реквизиты.ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить() Тогда	
		Возврат ТаблицаВыделенияАвансов;
	КонецЕсли;
	
	Если ТаблицаПоДокументуУменьшение = Неопределено ИЛИ ТаблицаПоДокументуУвеличение = Неопределено Тогда
		Возврат ТаблицаВыделенияАвансов;
	КонецЕсли;
	
	ЕдинаяТаблица = ПодготовитьЕдинуюТаблицуПоПереданным(ТаблицаПоДокументуУменьшение, ТаблицаПоДокументуУвеличение);
	
	ВсегоРубДоИзменения            = ЕдинаяТаблица.Итог("СуммаРубДоИзменения");
	ВсегоВзаиморасчетовДоИзменения = ЕдинаяТаблица.Итог("СуммаВзаиморасчетовДоИзменения");
	
	КурсВыделяемогоАванса = ?(ВсегоВзаиморасчетовДоИзменения = 0, 0, ВсегоРубДоИзменения/ВсегоВзаиморасчетовДоИзменения);
	
	Если КурсВыделяемогоАванса = 0 Тогда
		Возврат ТаблицаВыделенияАвансов;
	КонецЕсли;
	
	СтрокаВыделяемогоАванса.СуммаРубПоКурсуАванса = СтрокаВыделяемогоАванса.СуммаВзаиморасчетов*КурсВыделяемогоАванса;
	
	Возврат ТаблицаВыделенияАвансов;
	
КонецФункции

Функция ПодготовитьТаблицуСписанныеТоварыПоПериодам(ТаблицаСписанныеТовары, ТаблицаРеквизиты, Отказ) Экспорт
	
	ТаблицаСписанныеТоварыПоПериодам = УчетТоваров.ПолучитьПустуюТаблицуСписанныеТовары();
	
	Если Не ЗначениеЗаполнено(ТаблицаСписанныеТовары) Тогда
	    Возврат ТаблицаСписанныеТоварыПоПериодам;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыТаблицыСписанныеТоварыКорректировка(ТаблицаСписанныеТовары, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
	Если Не Реквизиты.ПрошлыйПериод
		ИЛИ (ТипЗнч(Реквизиты.ДокументРеализацииСсылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг")
		И Реквизиты.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером) Тогда
		Возврат Параметры.ТаблицаСписанныеТовары;
	КонецЕсли;
	
	ДатаКонецПрошлогоГода = НачалоГода(Реквизиты.Период)-1;
	
	Для Каждого СтрокаСписания Из Параметры.ТаблицаСписанныеТовары Цикл
		
		СвойстваСчетаУчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(СтрокаСписания.СчетУчета);
		
		СчетКорректировки = ?(СвойстваСчетаУчета.Забалансовый, 
			ПланыСчетов.Хозрасчетный.КорректировкаКомТоваровПрошлогоПериода,
			ПланыСчетов.Хозрасчетный.КорректировкаТоваровПрошлогоПериода);

		//Списание по НУ с датой корректируемого документа
		СтрокаСписанияПоПериодам = ТаблицаСписанныеТоварыПоПериодам.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСписанияПоПериодам, СтрокаСписания, , "СуммаСписания, Количество");
		СтрокаСписанияПоПериодам.Период = Реквизиты.ДатаДокументаРеализации;
		СтрокаСписанияПоПериодам.СчетУчета = СчетКорректировки;
		
		//Списание по НУ с датой документа
		СтрокаСписанияПоПериодам = ТаблицаСписанныеТоварыПоПериодам.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаСписанияПоПериодам, СтрокаСписания, , );
		СтрокаСписанияПоПериодам.СуммаСписания   = ?(Реквизиты.ОтчетностьПодписана, 0, СтрокаСписанияПоПериодам.СуммаСписания);
		СтрокаСписанияПоПериодам.Количество      = ?(Реквизиты.ОтчетностьПодписана, 0, СтрокаСписанияПоПериодам.Количество);
		СтрокаСписанияПоПериодам.КорСчетСписания = СчетКорректировки;
		СтрокаСписанияПоПериодам.ВидКорСубконто1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура;
		СтрокаСписанияПоПериодам.ВидКорСубконто2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии;
		СтрокаСписанияПоПериодам.ВидКорСубконто3 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;
		СтрокаСписанияПоПериодам.КорСубконто1 = СтрокаСписания.Номенклатура;
		СтрокаСписанияПоПериодам.КорСубконто2 = СтрокаСписания.Партия;
		СтрокаСписанияПоПериодам.КорСубконто3 = СтрокаСписания.Склад;
		
		Если Реквизиты.ОтчетностьПодписана Тогда
			//Значения по БУ
			СтрокаСписанияПоПериодам = ТаблицаСписанныеТоварыПоПериодам.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаСписанияПоПериодам, СтрокаСписания, ,
				"СуммаСписанияНУ, СуммаСписанияПР, СуммаСписанияВР, СуммаКорСписанияНУ, СуммаКорСписанияПР, СуммаКорСписанияВР");
			СтрокаСписанияПоПериодам.КорСчетСписания = ПланыСчетов.Хозрасчетный.ПрочиеРасходы;
			СтрокаСписанияПоПериодам.ВидКорСубконто1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы;
			СтрокаСписанияПоПериодам.ВидКорСубконто2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РеализуемыеАктивы;
			СтрокаСписанияПоПериодам.ВидКорСубконто3 = Неопределено;
			СтрокаСписанияПоПериодам.КорСубконто1    = Реквизиты.СтатьяПрочихДоходовИРасходов;
			СтрокаСписанияПоПериодам.КорСубконто2    = СтрокаСписанияПоПериодам.Номенклатура;
			СтрокаСписанияПоПериодам.КорСубконто3    = Неопределено;
			СтрокаСписанияПоПериодам.СуммаКорСписанияПР = СтрокаСписанияПоПериодам.СуммаСписания;
		Иначе
			//Значения по БУ в прошлом году
			СтрокаСписанияПоПериодам = ТаблицаСписанныеТоварыПоПериодам.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаСписанияПоПериодам, СтрокаСписания, ,
				"СуммаСписанияНУ, СуммаСписанияПР, СуммаСписанияВР, СуммаКорСписанияНУ, СуммаКорСписанияПР, СуммаКорСписанияВР");
			СтрокаСписанияПоПериодам.Период    = ДатаКонецПрошлогоГода;
			СтрокаСписанияПоПериодам.СчетУчета = СчетКорректировки;
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаСписанныеТоварыПоПериодам.Сортировать("НомерСтроки, Период");
	
	Возврат ТаблицаСписанныеТоварыПоПериодам;
	
КонецФункции

Функция ПодготовитьПараметрыТаблицыСписанныеТоварыКорректировка(ТаблицаТовары, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаТовары

	СписокОбязательныхКолонок = ""
	+ "ИмяСписка,"        // <Строка,0> - имя списка в документе
	+ "СинонимСписка,"    // <Строка,0> - синоним списка
	+ "Период,"           // <Дата> - дата списания
	+ "НомерСтроки,"      // <Число> - номер строки в списке
	+ "СчетУчета,"        // <ПланСчетовСсылка.Хозрасчетный> - счет учета, с которого списывается номенклатура
	+ "Номенклатура,"     // <СправочникСсылка.Номенклатура> - списываемая номенклатура
	+ "Склад,"            // <СправочникСсылка.Склад> - склад, с которого списывается номенклатура
	+ "Партия,"           // <ДокументСсылка.*> - документ поступления номенклатуры (партия)
	+ "Себестоимость,"    // <Число,15,2> - сумма списываемой номенклатуры, указанная в документе списания
	+ "Количество,"       // <Число,15,3> - количество списываемой номенклатуры
	+ "КорСчетСписания,"  // <ПланСчетовСсылка.Хозрасчетный> - счет учета, на который списывается номенклатура
	+ "ВидКорСубконто1,"  // <Число/Строка/ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные> - вид субконто счета, на который списывается номенклатура
	+ "ВидКорСубконто2,"  // <Число/Строка/ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные> - вид субконто счета, на который списывается номенклатура
	+ "ВидКорСубконто3,"  // <Число/Строка/ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные> - вид субконто счета, на который списывается номенклатура
	+ "КорСубконто1,"     // - значение субконто счета, на который списывается номенклатура
	+ "КорСубконто2,"     // - значение субконто счета, на который списывается номенклатура
	+ "КорСубконто3,"     // - значение субконто счета, на который списывается номенклатура
	+ "КорПодразделение," // <Ссылка на справочник подразделений> - подразделение, в которое списывается номенклатура
	+ "Подразделение,"    // <Ссылка на справочник подразделений> - подразделение, из которого списывается номенклатура
	+ "СуммаСписания,"    // <Число,15,2> - сумма списываемой номенклатуры, определенная по данным остатков
	+ "СуммаСписанияНУ,"  // <Число,15,2> - сумма списываемой номенклатуры (НУ), определенная по данным остатков
	+ "СуммаСписанияПР,"  // <Число,15,2> - сумма постоянных разниц (ПБУ 18/02) в стоимости списываемой номенклатуры, определенной по данным остатков
	+ "СуммаСписанияВР,"  // <Число,15,2> - сумма временных разниц (ПБУ 18/02) в стоимости списываемой номенклатуры, определенной по данным остатков
	+ "СуммаКорСписанияНУ,"// <Число,15,2> - сумма списываемой номенклатуры (НУ), определенная по данным остатков
	+ "СуммаКорСписанияПР,"// <Число,15,2> - сумма постоянных разниц (ПБУ 18/02) в стоимости списываемой номенклатуры, определенной по данным остатков
	+ "СуммаКорСписанияВР";// <Число,15,2> - сумма временных разниц (ПБУ 18/02) в стоимости списываемой номенклатуры, определенной по данным остатков

	
	Параметры.Вставить("ТаблицаСписанныеТовары",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаТовары, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Регистратор,"         // <ДокументСсылка.*> - документ-регистратор движений
	+ "Период,"              // <Дата> - период движений - дата документа
	+ "Организация,"         // <СправочникСсылка.Организации>
	+ "ВидДоговора,"         // <СправочникСсылка.Организации>
	+ "Контрагент,"          // <СправочникСсылка.Организации>
	+ "Подразделение,"       // <Ссылка на справочник подразделений>
	+ "ОтчетностьПодписана," // <Булево>
	+ "ПрошлыйПериод,"                // <Булево>
	+ "ДатаДокументаРеализации,"      // <Дата> - дата корректируемого документа
	+ "ДокументРеализацииСсылка,"      // <Ссылка на документ реализации>
	+ "СтатьяПрочихДоходовИРасходов," // <СправочникСсылка>
	+ "Содержание";                   // <Строка,150>

	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Функция ПодготовитьТаблицуСписанныеМПЗИП(ТаблицаСписанныеМПЗ, ТаблицаВыручка, ТаблицаРеквизитов, ЭтоВозврат = Ложь) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаСписанныеМПЗ) И Не ЗначениеЗаполнено(ТаблицаВыручка)
	 Или Не ЗначениеЗаполнено(ТаблицаРеквизитов) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Реквизиты = ТаблицаРеквизитов[0];
	Если Не УчетнаяПолитика.ПлательщикНДФЛ(Реквизиты.Организация, Реквизиты.Период) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ТипЗнч(Реквизиты.ДокументРеализации) = Тип("ДокументСсылка.РеализацияТоваровУслуг")
		И Реквизиты.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыТаблицыСписанныеМПЗИП(ТаблицаСписанныеМПЗ, ТаблицаВыручка, ТаблицаРеквизитов);
	СписокМПЗ     = Параметры.СписокМПЗ;
	СписокВыручки = Параметры.СписокВыручки; // Таблица выручки от реализации
	
	ВестиУчетПоВидамДеятельностиИП = УчетнаяПолитика.ВестиУчетПоВидамДеятельностиИП(Реквизиты.Организация, Реквизиты.Период);
	ОсновнаяНоменклатурнаяГруппа   = УчетнаяПолитика.ОсновнаяНоменклатурнаяГруппа(Реквизиты.Организация, Реквизиты.Период);
	
	СписокМПЗ.Колонки.Добавить("ЭтоУслуга",                Новый ОписаниеТипов("Булево"));
	СписокМПЗ.Колонки.Добавить("НоменклатурнаяГруппа",     Новый ОписаниеТипов("СправочникСсылка.НоменклатурныеГруппы"));
	СписокМПЗ.Колонки.Добавить("Продукция",                Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	СписокМПЗ.Колонки.Добавить("СчетЗатрат",               Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	СписокМПЗ.Колонки.Добавить("ПринятиеКналоговомуУчету", Новый ОписаниеТипов("Булево"));
	СписокМПЗ.Колонки.Добавить("СтатьяЗатрат",             Новый ОписаниеТипов("СправочникСсылка.СтатьиЗатрат"));
	СписокМПЗ.Колонки.Добавить("ВидРасходовНУ",            Новый ОписаниеТипов("ПеречислениеСсылка.ВидыРасходовНУ"));
	СписокМПЗ.Колонки.Добавить("ВидДеятельностиДляНалоговогоУчетаЗатрат", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыДеятельностиДляНалоговогоУчетаЗатрат"));
	СписокМПЗ.Колонки.Добавить("Выручка",                  ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	СписокМПЗ.Колонки.Добавить("НДСНачисленный",           ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	
	СписокМПЗ.Колонки.КорСчетСписания.Имя = "СчетДоходов";
	
	СписокВыручки.Колонки.Субконто.Имя               = "Субконто1";
	СписокВыручки.Колонки.СуммаРуб.Имя               = "Выручка";
	СписокВыручки.Колонки.СуммаРубДоИзменения.Имя    = "ВыручкаДоИзменения";
	СписокВыручки.Колонки.СуммаНДСРуб.Имя            = "НДСНачисленный";
	СписокВыручки.Колонки.СуммаНДСРубДоИзменения.Имя = "НДСНачисленныйДоИзменения";
	
	// Распределяем выручку по партиям, база распределения - Количество
	СписокМПЗ.Индексы.Добавить("НомерСтроки, Номенклатура");
	ОтборМПЗ = Новый Структура("НомерСтроки, Номенклатура");
	
	Если ЭтоВозврат Тогда
		// Дополнительная обработка связанная с тем, что знак выручки при возврате не совпадает со знаком количества
		Для Каждого МПЗ Из СписокМПЗ Цикл
			МПЗ.Количество = -МПЗ.Количество;
		КонецЦикла;
	КонецЕсли;
	
	ЗнакВыручки = ?(ЭтоВозврат, -1, 1);
	
	Для каждого СтрокаВыручки из СписокВыручки Цикл
		
		Если СтрокаВыручки.ЭтоКомиссия Тогда
			Продолжить;
		КонецЕсли;
		
		НовоеКоличество     = ЗнакВыручки * СтрокаВыручки.Количество + СтрокаВыручки.КоличествоДоИзменения;
		НоваяВыручка        = ЗнакВыручки * СтрокаВыручки.Выручка + СтрокаВыручки.ВыручкаДоИзменения;
		НовыйНДСНачисленный = ЗнакВыручки * СтрокаВыручки.НДСНачисленный + СтрокаВыручки.НДСНачисленныйДоИзменения;
		
		// Выручка от изменения количества
		Если ЭтоВозврат Тогда
			Если СтрокаВыручки.КоличествоДоИзменения <> 0 Тогда
				РаспределяемаяВыручка        = Окр(СтрокаВыручки.ВыручкаДоИзменения * (СтрокаВыручки.КоличествоДоИзменения - НовоеКоличество) / СтрокаВыручки.КоличествоДоИзменения, 2, 1);
				РаспределяемыйНДСНачисленный = РаспределяемаяВыручка - Окр((СтрокаВыручки.ВыручкаДоИзменения - СтрокаВыручки.НДСНачисленныйДоИзменения) * (СтрокаВыручки.КоличествоДоИзменения - НовоеКоличество) / СтрокаВыручки.КоличествоДоИзменения, 2, 1);
			Иначе
				РаспределяемаяВыручка        = 0;
				РаспределяемыйНДСНачисленный = 0;
			КонецЕсли;
		Иначе
			Если НовоеКоличество <> 0 Тогда
				РаспределяемаяВыручка        = Окр(НоваяВыручка * СтрокаВыручки.Количество / НовоеКоличество, 2, 1);
				РаспределяемыйНДСНачисленный = РаспределяемаяВыручка - Окр((НоваяВыручка - НовыйНДСНачисленный) * СтрокаВыручки.Количество / НовоеКоличество, 2, 1);
			Иначе
				РаспределяемаяВыручка        = 0;
				РаспределяемыйНДСНачисленный = 0;
			КонецЕсли;
		КонецЕсли;
		
		Если СтрокаВыручки.ЭтоУслуга Тогда
			
			МПЗ = СписокМПЗ.Добавить();
			ЗаполнитьЗначенияСвойств(МПЗ, СтрокаВыручки, , "Количество, Выручка, НДСНачисленный");
			МПЗ.Количество     = СтрокаВыручки.Количество;
			МПЗ.Выручка        = РаспределяемаяВыручка;
			МПЗ.НДСНачисленный = РаспределяемыйНДСНачисленный;
			
			СтрокаВыручки.Выручка        = СтрокаВыручки.Выручка - РаспределяемаяВыручка;
			СтрокаВыручки.НДСНачисленный = СтрокаВыручки.НДСНачисленный - РаспределяемыйНДСНачисленный;
			
		Иначе
			ЗаполнитьЗначенияСвойств(ОтборМПЗ, СтрокаВыручки);
			
			СписокПартий = СписокМПЗ.НайтиСтроки(ОтборМПЗ);
			МассивДляРаспределения = Новый Массив;
			Для каждого Партия из СписокПартий Цикл
				МассивДляРаспределения.Добавить(Партия.Количество);
			КонецЦикла;
			
			РаспределеннаяВыручка        = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(РаспределяемаяВыручка, МассивДляРаспределения);
			РаспределенныйНДСНачисленный = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(РаспределяемыйНДСНачисленный, МассивДляРаспределения);
			
			Для Индекс = 0 По СписокПартий.ВГраница() Цикл
				
				СписокПартий[Индекс].СчетДоходов = СтрокаВыручки.СчетДоходов;
				
				ВыручкаВСтроке        = ?(РаспределеннаяВыручка <> Неопределено, РаспределеннаяВыручка[Индекс], 0);
				НДСНачисленныйВСтроке = ?(РаспределенныйНДСНачисленный <> Неопределено, РаспределенныйНДСНачисленный[Индекс], 0);
				
				СписокПартий[Индекс].Выручка        = СписокПартий[Индекс].Выручка + ВыручкаВСтроке;
				СписокПартий[Индекс].НДСНачисленный = СписокПартий[Индекс].НДСНачисленный + НДСНачисленныйВСтроке;
				
				СтрокаВыручки.Выручка        = СтрокаВыручки.Выручка - ВыручкаВСтроке;
				СтрокаВыручки.НДСНачисленный = СтрокаВыручки.НДСНачисленный - НДСНачисленныйВСтроке;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если СтрокаВыручки.Выручка <> 0 ИЛИ СтрокаВыручки.НДСНачисленный <> 0 Тогда
			// Выручка от изменения цены
			МПЗ = СписокМПЗ.Добавить();
			ЗаполнитьЗначенияСвойств(МПЗ, СтрокаВыручки, , "Количество");
			МПЗ.Количество = 0;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ВестиУчетПоВидамДеятельностиИП Тогда
		Для Каждого МПЗ Из СписокМПЗ Цикл
			СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(МПЗ.СчетДоходов);
			Для Индекс = 1 По СвойстваСчета.КоличествоСубконто Цикл
				Если СвойстваСчета["ВидСубконто" + Индекс] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы Тогда
					МПЗ.НоменклатурнаяГруппа = МПЗ["КорСубконто" + Индекс];
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	Иначе
		СписокМПЗ.ЗаполнитьЗначения(ОсновнаяНоменклатурнаяГруппа, "НоменклатурнаяГруппа");
	КонецЕсли;
	
	СписокМПЗ.ЗагрузитьКолонку(СписокМПЗ.ВыгрузитьКолонку("СчетУчета"), "СчетЗатрат");
	СписокМПЗ.ЗаполнитьЗначения(Истина, "ПринятиеКналоговомуУчету");
	
	СписокМПЗ.Колонки.Удалить("КорСубконто1");
	СписокМПЗ.Колонки.Удалить("КорСубконто2");
	СписокМПЗ.Колонки.Удалить("КорСубконто3");
	
	Возврат СписокМПЗ;
	
КонецФункции

Функция ПодготовитьПараметрыТаблицыСписанныеМПЗИП(ТаблицаСписанныеМПЗ, ТаблицаВыручка, ТаблицаРеквизитов) Экспорт
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.СписокМПЗ
	
	СписокОбязательныхКолонок = ""
		+ "ИмяСписка,"			// <Строка> - имя списка в документе
		+ "НомерСтроки,"		// <Число> - номер строки в списка 
		+ "Номенклатура,"		// <СправочникСсылка.*> - списанная номенклатура
		+ "Партия,"				// <ДокументСсылка.*> - документ поступления номенклатуры (партия)
		+ "СчетУчета,"			// <ПланСчетовСсылка.Хозрасчетный> - счет учета МПЗ
		+ "КорСчетСписания,"	// <ПланСчетовСсылка.Хозрасчетный> - кор.счет списания МПЗ
		+ "КорСубконто1,"		// <Характеристика.ВидыСубконтоХозрасчетные> - кор.субконто списания МПЗ
		+ "КорСубконто2,"		// <Характеристика.ВидыСубконтоХозрасчетные> - кор.субконто списания МПЗ
		+ "КорСубконто3,"		// <Характеристика.ВидыСубконтоХозрасчетные> - кор.субконто списания МПЗ
		+ "Количество";			// <Число,15,3> - количество списанной номенклатуры
		
	Параметры.Вставить("СписокМПЗ", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаСписанныеМПЗ, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.СписокВыручки
	
	СписокОбязательныхКолонок = ""
		+ "ИмяСписка,"				// <Строка> - имя списка в документе
		+ "НомерСтроки,"			// номер строки документа
		+ "Номенклатура,"			// <СправочникСсылка.*>
		+ "ЭтоУслуга,"				// <Булево>
		+ "ЭтоКомиссия,"			// <Булево>
		+ "СчетУчета,"				// <ПланСчетовСсылка.Хозрасчетный> - счет доходов
		+ "СчетДоходов,"			// <ПланСчетовСсылка.Хозрасчетный> - счет доходов
		+ "Субконто,"				// <Характеристика.ВидыСубконтоХозрасчетные> - субконто доходов
		+ "КоличествоДоИзменения,"	// <Число,15,3> - количество номенклатуры
		+ "Количество,"				// <Число,15,3> - количество номенклатуры
		+ "СуммаРубДоИзменения,"	// <Число,15,2> - сумма выручки с НДС в рублях
		+ "СуммаРуб,"				// <Число,15,2> - сумма выручки с НДС в рублях
		+ "СуммаНДСРубДоИзменения,"	// <Число,15,2> - сумма НДС начисленного в рублях
		+ "СуммаНДСРуб";			// <Число,15,2> - сумма НДС начисленного в рублях
		
	Параметры.Вставить("СписокВыручки", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаВыручка, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
		+ "Регистратор,"		// <ДокументСсылка.*> - документ-регистратор движений
		+ "Период,"				// <Дата> - период движений - дата документа
		+ "Организация";		// <ПеречислениеСсылка.*> - вид операции
	
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизитов, СписокОбязательныхКолонок));
		
	Возврат Параметры;
	
КонецФункции

Функция ПодготовитьСтруктуруВыручкиПоВидамДеятельности(ТаблицаСобственныеТоварыУслуги,
														ТаблицаТоварыУслугиКомитентов,
														ТаблицаСторноСобственныеТоварыУслуги,
														ТаблицаСторноТоварыУслугиКомитентов,
														ТаблицаРеквизиты) Экспорт
	
	СтруктураВыручки = Новый Структура("Всего, НДС, ЕНВД, Комиссия, ТорговыйСбор, Патент", 0, 0, 0, 0, 0, 0);
	
	Если Не ЗначениеЗаполнено(ТаблицаСобственныеТоварыУслуги) И Не ЗначениеЗаполнено(ТаблицаТоварыУслугиКомитентов)
	 Или Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат СтруктураВыручки;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыВыручкаПоВидамДеятельности(
		ТаблицаСобственныеТоварыУслуги, ТаблицаТоварыУслугиКомитентов,
		ТаблицаСторноСобственныеТоварыУслуги, ТаблицаСторноТоварыУслугиКомитентов,
		ТаблицаРеквизиты);
	
	Реквизиты = Параметры.Реквизиты[0];
	
	ТаблицаРеализацияСобственные = Параметры.ТаблицаСобственныеТоварыУслуги;
	ТаблицаРеализацияКомиссия    = Параметры.ТаблицаТоварыУслугиКомитентов;
	ТаблицаСторноСобственные     = Параметры.ТаблицаСторноСобственныеТоварыУслуги; // Суммы в таблице со знаком "минус".
	ТаблицаСторноКомиссия        = Параметры.ТаблицаСторноТоварыУслугиКомитентов;  // Суммы в таблице со знаком "минус".
	
	ВыручкаКомиссии = ТаблицаРеализацияКомиссия.Итог("СуммаВзаиморасчетов") + ТаблицаСторноКомиссия.Итог("СуммаВзаиморасчетов");
	ВыручкаВсего    = ВыручкаКомиссии + ТаблицаРеализацияСобственные.Итог("СуммаВзаиморасчетов")
		+ ТаблицаСторноСобственные.Итог("СуммаВзаиморасчетов");
	
	Если ВыручкаВсего <= 0 Тогда
		Возврат СтруктураВыручки;
	КонецЕсли;
	
	// Собственные товары и услуги разделим между основной деятельностью и особыми не облагаемыми УСН режимами.
	ВыручкаНДС          = 0;
	ВыручкаЕНВД         = 0;
	ВыручкаТорговыйСбор = 0;
	ВыручкаПатент       = 0;
	
	Для Каждого СтрокаСобственные Из ТаблицаРеализацияСобственные Цикл
		Если Реквизиты.ДеятельностьНаТорговомСборе
			И Не Реквизиты.ДеятельностьНаПатенте
			И Не СтрокаСобственные.ЭтоУслуга Тогда
			ВыручкаТорговыйСбор = ВыручкаТорговыйСбор + СтрокаСобственные.СуммаВзаиморасчетов;
		ИначеЕсли Реквизиты.ДеятельностьНаПатенте Тогда
			ВыручкаПатент = ВыручкаПатент + СтрокаСобственные.СуммаВзаиморасчетов;
		ИначеЕсли Реквизиты.ПлательщикЕНВД
			И БухгалтерскийУчетПовтИсп.СчетОтноситсяКДеятельностиЕНВД(СтрокаСобственные.СчетДоходов) Тогда

			ВыручкаЕНВД = ВыручкаЕНВД + СтрокаСобственные.СуммаВзаиморасчетов;
		КонецЕсли;
		ВыручкаНДС = ВыручкаНДС
			+ ?(СтрокаСобственные.СуммаБУ = 0,
				0,
				СтрокаСобственные.СуммаНДСРуб * СтрокаСобственные.СуммаВзаиморасчетов / СтрокаСобственные.СуммаБУ);
	КонецЦикла;
	
	// Учтем сторно реализации
	Для Каждого СтрокаСторноСобственные Из ТаблицаСторноСобственные Цикл
		Если Реквизиты.ДеятельностьНаТорговомСборе
			И Не Реквизиты.ДеятельностьНаПатенте
			И Не СтрокаСторноСобственные.ЭтоУслуга Тогда
			ВыручкаТорговыйСбор = ВыручкаТорговыйСбор + СтрокаСторноСобственные.СуммаВзаиморасчетов;
		ИначеЕсли Реквизиты.ДеятельностьНаПатенте Тогда
			ВыручкаПатент = ВыручкаПатент + СтрокаСторноСобственные.СуммаВзаиморасчетов;
		ИначеЕсли Реквизиты.ПлательщикЕНВД
			И БухгалтерскийУчетПовтИсп.СчетОтноситсяКДеятельностиЕНВД(СтрокаСторноСобственные.СчетДоходов) Тогда
			ВыручкаЕНВД = ВыручкаЕНВД + СтрокаСторноСобственные.СуммаВзаиморасчетов;
		КонецЕсли;
		ВыручкаНДС = ВыручкаНДС
			+ ?(СтрокаСторноСобственные.СуммаБУ = 0,
				0,
				СтрокаСторноСобственные.СуммаНДСРуб * СтрокаСторноСобственные.СуммаВзаиморасчетов / СтрокаСторноСобственные.СуммаБУ);
	КонецЦикла;
	
	СтруктураВыручки.Всего        = ВыручкаВсего;
	СтруктураВыручки.НДС          = Макс(ВыручкаНДС, 0);
	СтруктураВыручки.ЕНВД         = Макс(ВыручкаЕНВД, 0);
	СтруктураВыручки.Комиссия     = Макс(ВыручкаКомиссии, 0);
	СтруктураВыручки.ТорговыйСбор = Макс(ВыручкаТорговыйСбор, 0);
	СтруктураВыручки.Патент       = Макс(ВыручкаПатент, 0);
	
	Возврат СтруктураВыручки;

КонецФункции

Функция ПодготовитьПараметрыВыручкаПоВидамДеятельности(ТаблицаСобственныеТоварыУслуги,
														ТаблицаТоварыУслугиКомитентов,
														ТаблицаСторноСобственныеТоварыУслуги,
														ТаблицаСторноТоварыУслугиКомитентов,
														ТаблицаРеквизиты)

	Параметры = Новый Структура;
	
	// Подготовка таблицы шапки документа
	СписокОбязательныхКолонок = ""
	+ "ДеятельностьНаПатенте,"       // <Булево> - Если Истина, то корректируется реализация по деятельности на патенте
	+ "ДеятельностьНаТорговомСборе," // <Булево> - Если Истина, то корректируется реализация по деятельности на торговом сборе
	+ "ПлательщикЕНВД";              // <Булево> - Если Истина, то организация применяет ЕНВД
	
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	// Подготовка таблиы реализованных и возвращенных собственных товаров и услуг:
	СписокОбязательныхКолонок = ""
	+ "СуммаВзаиморасчетов,"
	+ "СуммаБУ,"
	+ "СуммаНДСРуб,"
	+ "СчетДоходов,"
	+ "ЭтоУслуга"
	;
	
	Параметры.Вставить("ТаблицаСобственныеТоварыУслуги", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаСобственныеТоварыУслуги, СписокОбязательныхКолонок));
	
	Параметры.Вставить("ТаблицаСторноСобственныеТоварыУслуги", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаСторноСобственныеТоварыУслуги, СписокОбязательныхКолонок));
	
	// Подготовка таблицы реализованных и возвращенных товаров и услуг комитента:
	СписокОбязательныхКолонок = ""
	+ "СуммаВзаиморасчетов"
	;
	
	Параметры.Вставить("ТаблицаТоварыУслугиКомитентов", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаТоварыУслугиКомитентов, СписокОбязательныхКолонок));
	
	Параметры.Вставить("ТаблицаСторноТоварыУслугиКомитентов", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаСторноТоварыУслугиКомитентов, СписокОбязательныхКолонок));
	
	Возврат Параметры;

КонецФункции

Функция ПодготовитьТаблицуВозвращенныеТоварыУСН(ТаблицаТоварыВозврат, ТаблицаРеквизиты) Экспорт

	Если Не ЗначениеЗаполнено(ТаблицаТоварыВозврат)
	 Или Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
	    Возврат Неопределено;
	КонецЕсли;
	
	Если Не ТаблицаРеквизиты[0].ПрименяетсяУСНДоходыМинусРасходы Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыТаблицыВозвращенныеТоварыУСН(ТаблицаТоварыВозврат, ТаблицаРеквизиты);
	
	Возврат Параметры.ТаблицаТоварыВозврат;

КонецФункции

Функция ПодготовитьПараметрыТаблицыВозвращенныеТоварыУСН(ТаблицаТоварыВозврат, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы возвращенных товаров:
	СписокОбязательныхКолонок = ""
	+ "ИмяСписка,"    
	+ "СинонимСписка,"
	+ "НомерСтроки,"  
	+ "СчетУчета,"    
	+ "Номенклатура," 
	+ "Склад,"        
	+ "Партия,"
	+ "КорСчетСписания,"
	+ "Себестоимость,"
	+ "Количество,"   
	+ "СуммаСписания"
	;
	
	Параметры.Вставить("ТаблицаТоварыВозврат",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаТоварыВозврат, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"						      // <Дата> - дата документа
	+ "Регистратор,"			          // <ДокументСсылка> - документ-регистратор движений
	+ "Организация,"				      // <СправочникСсылка.Организации> - из документа
	+ "ПрименяетсяУСН,"                   // <Булево> из учетной политики на дату корректируемого документа
	+ "ПрименяетсяУСНДоходыМинусРасходы," // <Булево> из учетной политики на дату корректируемого документа
	+ "ПорядокПризнанияРасходовПоНДС,"    // <ПеречислениеСсылка.ПорядокПризнанияРасходовПоНДС> из учетной политики на дату корректируемого документа
	+ "ЭтоКорректировкаПрошлогоПериода,"  // <Булево> признак, что корректируется документ прошлого года
	+ "Контрагент,"					      // <СправочникСсылка.Контрагенты> - из документа
	+ "ДоговорКонтрагента,"			      // <СправочникСсылка.ДоговорыКонтрагентов> - из документа
	+ "ДокументРеализацииСсылка,"         // <ДокументСсылка.РеализацияТоваровУслуг> - корректируемый документ
	+ "ДокументРеализацииДата,"           // <Дата> - дата корректироемого документа
	+ "Валюта,"                           // <СправочникСсылка.Валюты> - из реквизита договора "ВалютаВзаиморасчетов"
	+ "СуммаВключаетНДС"                  // <Булево> - из реквизита документа "СуммаВключаетНДС"
	;

	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции
 
Функция ПодготовитьТаблицуРасходыУСННаВозвратПоСделке(ТаблицаТоварыВозврат, ТаблицаРеквизиты) Экспорт

	Если Не ЗначениеЗаполнено(ТаблицаТоварыВозврат)
	 Или Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
	    Возврат Неопределено;
	КонецЕсли;
	
	Реквизиты = ТаблицаРеквизиты[0];
	Если Не Реквизиты.ПрименяетсяУСНДоходыМинусРасходы Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыРасходыУСННаВозвратПоСделке(ТаблицаТоварыВозврат, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
	
	ТаблицаТоваров = Параметры.ТаблицаТоварыВозврат;
	
	// фильтры для запроса
	МассивНоменклатуры = ТаблицаТоваров.ВыгрузитьКолонку("Номенклатура");
	ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(МассивНоменклатуры);
	
	МассивСчетовУчета = ТаблицаТоваров.ВыгрузитьКолонку("СчетУчета");
	ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(МассивСчетовУчета);
	
	МассивПартий = ТаблицаТоваров.ВыгрузитьКолонку("Партия");
	ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(МассивПартий);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация",        Реквизиты.Организация);
	Запрос.УстановитьПараметр("ДокументРеализации", Реквизиты.ДокументРеализацииСсылка);
	Запрос.УстановитьПараметр("Партии",             МассивПартий);
	Запрос.УстановитьПараметр("ЭлементыРасхода",    МассивНоменклатуры);
	Запрос.УстановитьПараметр("СчетаУчета",         МассивСчетовУчета);
	Запрос.УстановитьПараметр("Субсчета10",         БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.Материалы));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасходыПриУСН.Период,
	|	РасходыПриУСН.Регистратор,
	|	РасходыПриУСН.НомерСтроки,
	|	РасходыПриУСН.Активность,
	|	РасходыПриУСН.ВидДвижения,
	|	РасходыПриУСН.Организация,
	|	РасходыПриУСН.СтатусыОплатыРасходовУСН,
	|	РасходыПриУСН.РасчетныйДокумент,
	|	РасходыПриУСН.Партия,
	|	РасходыПриУСН.ВидРасхода,
	|	РасходыПриУСН.ЭлементРасхода,
	|	РасходыПриУСН.СтатусыПартийУСН,
	|	РасходыПриУСН.СчетУчета,
	|	РасходыПриУСН.Валюта,
	|	РасходыПриУСН.ДоговорКонтрагента,
	|	РасходыПриУСН.ОтражениеВУСН,
	|	РасходыПриУСН.НомерСтрокиДокумента,
	|	РасходыПриУСН.РеквизитыДокументаОплаты,
	|	РасходыПриУСН.Количество,
	|	РасходыПриУСН.Сумма,
	|	РасходыПриУСН.НДС,
	|	РасходыПриУСН.ЭтапПроведения,
	|	РасходыПриУСН.СтатусСписания,
	|	ВЫБОР
	|		КОГДА РасходыПриУСН.СчетУчета В (&Субсчета10)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоТовар,
	|	ВЫБОР
	|		КОГДА РасходыПриУСН.СчетУчета В (&Субсчета10)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоМатериал,
	|	РасходыПриУСН.МоментВремени
	|ИЗ
	|	РегистрНакопления.РасходыПриУСН КАК РасходыПриУСН
	|ГДЕ
	|	РасходыПриУСН.Регистратор = &ДокументРеализации
	|	И РасходыПриУСН.Организация = &Организация
	|	И РасходыПриУСН.Партия В(&Партии)
	|	И РасходыПриУСН.ЭлементРасхода В(&ЭлементыРасхода)
	|	И РасходыПриУСН.СчетУчета В(&СчетаУчета)
	|	И РасходыПриУСН.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И РасходыПриУСН.Активность"
	;

	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПодготовитьПараметрыРасходыУСННаВозвратПоСделке(ТаблицаТоварыВозврат, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы возвращенных товаров:
	СписокОбязательныхКолонок = ""
	+ "ИмяСписка,"    
	+ "СинонимСписка,"
	+ "НомерСтроки,"  
	+ "СчетУчета,"    
	+ "Номенклатура," 
	+ "Склад,"        
	+ "Партия,"       
	+ "Себестоимость,"
	+ "Количество,"   
	+ "КорСчетСписания,"
	+ "ВидКорСубконто1,"
	+ "ВидКорСубконто2,"
	+ "ВидКорСубконто3,"
	+ "КорСубконто1,"
	+ "КорСубконто2,"
	+ "КорСубконто3,"
	+ "КорПодразделение,"
	+ "Подразделение,"
	+ "СуммаСписания"
	;
	
	Параметры.Вставить("ТаблицаТоварыВозврат",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаТоварыВозврат, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"						      // <Дата> - дата документа
	+ "Регистратор,"			          // <ДокументСсылка> - документ-регистратор движений
	+ "Организация,"				      // <СправочникСсылка.Организации> - из документа
	+ "ПрименяетсяУСН,"                   // <Булево> из учетной политики на дату корректируемого документа
	+ "ПрименяетсяУСНДоходыМинусРасходы," // <Булево> из учетной политики на дату корректируемого документа
	+ "ПорядокПризнанияРасходовПоНДС,"    // <ПеречислениеСсылка.ПорядокПризнанияРасходовПоНДС> из учетной политики на дату корректируемого документа
	+ "ЭтоКорректировкаПрошлогоПериода,"  // <Булево> признак, что корректируется документ прошлого года
	+ "Контрагент,"					      // <СправочникСсылка.Контрагенты> - из документа
	+ "ДоговорКонтрагента,"			      // <СправочникСсылка.ДоговорыКонтрагентов> - из документа
	+ "ДокументРеализацииСсылка,"         // <ДокументСсылка.РеализацияТоваровУслуг> - корректируемый документ
	+ "ДокументРеализацииДата,"           // <Дата> - дата корректироемого документа
	+ "Валюта,"                           // <СправочникСсылка.Валюты> - из реквизита договора "ВалютаВзаиморасчетов"
	+ "СуммаВключаетНДС"                  // <Булево> - из реквизита документа "СуммаВключаетНДС"
	;

	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Функция ПодготовитьЕдинуюТаблицуПоПереданным(ТаблицаПоДокументуУменьшение, ТаблицаПоДокументуУвеличение)
	
	ЕдинаяТаблица = Новый ТаблицаЗначений;
	
	МассивТипов = Новый Массив;
	
	МассивТипов.Добавить(Тип("Число"));
	
	ТипЧисло15_2 = Новый ОписаниеТипов(МассивТипов, Новый КвалификаторыЧисла(15,2));
	
	ЕдинаяТаблица.Колонки.Добавить("ИмяСписка");
	ЕдинаяТаблица.Колонки.Добавить("НомерСтроки");
	ЕдинаяТаблица.Колонки.Добавить("ПревышаетСуммуДоИзменения");
	ЕдинаяТаблица.Колонки.Добавить("СтавкаНДС");
	ЕдинаяТаблица.Колонки.Добавить("СуммаВзаиморасчетов",                                                  ТипЧисло15_2);
	ЕдинаяТаблица.Колонки.Добавить("СуммаВзаиморасчетовДоИзменения",                                       ТипЧисло15_2);
	ЕдинаяТаблица.Колонки.Добавить("СуммаРуб",                                                             ТипЧисло15_2);
	ЕдинаяТаблица.Колонки.Добавить("СуммаРубДоИзменения",                                                  ТипЧисло15_2);
	ЕдинаяТаблица.Колонки.Добавить("СуммаНДСРуб",                                                          ТипЧисло15_2);
	ЕдинаяТаблица.Колонки.Добавить("СуммаНДСРубДоИзменения",                                               ТипЧисло15_2);
	ЕдинаяТаблица.Колонки.Добавить("СуммаБУ",                                                              ТипЧисло15_2);
	ЕдинаяТаблица.Колонки.Добавить("СуммаВзаиморасчетовПревышениеДоИзменения",                             ТипЧисло15_2);
	ЕдинаяТаблица.Колонки.Добавить("СуммаПревышенияСуммыВзаиморасчетовНадСуммойВзаиморасчетовДоИзменения", ТипЧисло15_2);
	ЕдинаяТаблица.Колонки.Добавить("СуммаВзаиморасчетовПоКурсуДоИзменения",                                ТипЧисло15_2);
	ЕдинаяТаблица.Колонки.Добавить("СуммаРубПоКурсуДоИзменения",                                           ТипЧисло15_2);
	ЕдинаяТаблица.Колонки.Добавить("СуммаВзаиморасчетовПоКурсуАвансов",                                    ТипЧисло15_2);
	ЕдинаяТаблица.Колонки.Добавить("СуммаРубПоКурсуАвансов",                                               ТипЧисло15_2);
	ЕдинаяТаблица.Колонки.Добавить("СуммаВзаиморасчетовПоКурсуВзаиморасчетов",                             ТипЧисло15_2);
	
	Если НЕ ТаблицаПоДокументуУвеличение = Неопределено Тогда
		
		Для Каждого СтрокаТаблицы Из ТаблицаПоДокументуУвеличение Цикл
			
			НоваяСтрока = ЕдинаяТаблица.Добавить();
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
			
			НоваяСтрока.ПревышаетСуммуДоИзменения = Истина;
			НоваяСтрока.СуммаВзаиморасчетовПревышениеДоИзменения = НоваяСтрока.СуммаВзаиморасчетов;
			
			НоваяСтрока.СуммаВзаиморасчетов = НоваяСтрока.СуммаВзаиморасчетовДоИзменения + НоваяСтрока.СуммаВзаиморасчетов;
			НоваяСтрока.СуммаРуб            = НоваяСтрока.СуммаРубДоИзменения            + НоваяСтрока.СуммаРуб;
			НоваяСтрока.СуммаНДСРуб         = НоваяСтрока.СуммаНДСРубДоИзменения         + НоваяСтрока.СуммаНДСРуб;
			НоваяСтрока.СуммаБУ             = НоваяСтрока.СуммаРуб;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если НЕ ТаблицаПоДокументуУменьшение = Неопределено Тогда
		
		Для Каждого СтрокаТаблицы Из ТаблицаПоДокументуУменьшение Цикл
			
			НоваяСтрока = ЕдинаяТаблица.Добавить();
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
			
			НоваяСтрока.ПревышаетСуммуДоИзменения = Ложь;
			НоваяСтрока.СуммаВзаиморасчетовПревышениеДоИзменения = НоваяСтрока.СуммаВзаиморасчетов;
			
			НоваяСтрока.СуммаВзаиморасчетов = НоваяСтрока.СуммаВзаиморасчетовДоИзменения - НоваяСтрока.СуммаВзаиморасчетов;
			НоваяСтрока.СуммаРуб            = НоваяСтрока.СуммаРубДоИзменения            - НоваяСтрока.СуммаРуб;
			НоваяСтрока.СуммаНДСРуб         = НоваяСтрока.СуммаНДСРубДоИзменения         - НоваяСтрока.СуммаНДСРуб;
			НоваяСтрока.СуммаБУ             = НоваяСтрока.СуммаРуб;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ЕдинаяТаблица.Индексы.Добавить("ИмяСписка");
	ЕдинаяТаблица.Индексы.Добавить("НомерСтроки");
	ЕдинаяТаблица.Индексы.Добавить("ПревышаетСуммуДоИзменения");
	
	Возврат ЕдинаяТаблица;
	
КонецФункции	

Функция ПодготовитьПараметрыТаблицыДокументаПоЗачетуАванса(ТаблицаРеквизиты, ТаблицаАвансов)
	
	Параметры = Новый Структура;
	
	СписокОбязательныхКолонок = ""
	+ "Период,"                                          // <Дата> - период движений - дата документа
	+ "ВалютаДокумента,"                                 // <СправочникСсылка.Валюты>
	+ "ВидОперации," 		                             // <Перечисления.ВидыОперацийИсправленияПоступленияРеализации>
	+ "ДатаДокументаРеализации,"                         // <Дата> - дата корректируемого документа
	+ "РасчетыВУсловныхЕдиницах,"                        // <Булево>
	+ "РасчетКорректировокСУчетомРекомендацийПоНДС,"     // <Булево>
	+ "КурсВзаиморасчетов,"                              // <Число>
	+ "КратностьВзаиморасчетов";                         // <Число>

	Параметры.Вставить("РеквизитыЗачетАвансов",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
		
	// Подготовка таблицы Параметры.ТаблицаВзаиморасчетов

	СписокОбязательныхКолонок = ""
	+ "ВалютаВзаиморасчетов,"            // <СправочникСсылка.Валюты>
	+ "ВидДоговора,"                     // <ПеречислениеСсылка.ВидыДоговоровКонтрагентов>
	+ "ДатаДокументаРасчетов,"           // <Дата>
	+ "ДоговорКонтрагента,"              // <СправочникСсылка.ДоговорыКонтрагентов>
	+ "ДокументРасчетов,"                // <ДокументСсылка.ПоступлениеНаРасчетныйСчет>
	+ "Контрагент,"	                     // <СправочникСсылка.Контрагенты>
	+ "ОстатокВзаиморасчетов,"           // <Число>
	+ "Подразделение,"                   // <СправочникСсылка.ПодразделенияОрганизаций>
	+ "ПодразделениеРасчетов,"           // <СправочникСсылка.ПодразделенияОрганизаций>
	+ "РасчетыВВалюте,"                  // <Булево>
	+ "РасчетыВУсловныхЕдиницах,"        // <Булево>
	+ "СуммаВзаиморасчетов,"             // <Число>
	+ "СуммаВзаиморасчетовЕНВД,"         // <Число>
	+ "СуммаВзаиморасчетовКомитента,"    // <Число>
	+ "СуммаВзаиморасчетовТорговыйСбор," // <Число>
	+ "СуммаВзаиморасчетовПатент,"       // <Число>
	+ "СуммаРуб,"                        // <Число>
	+ "СуммаРуб_ЕНВД,"                   // <Число>
	+ "СуммаРуб_Комитента,"              // <Число>
	+ "СуммаРуб_ТорговыйСбор,"           // <Число>
	+ "СуммаРуб_Патент,"                 // <Число>
	+ "СуммаРубПоКурсуАванса,"           // <Число>
	+ "СчетАвансов,"                     // <ПланСчетовСсылка.Хозрасчетный>
	+ "СчетРасчетов,"                    // <ПланСчетовСсылка.Хозрасчетный>
	+ "НужноУчитыватьПриЗачетеАванса";   // <ПланСчетовСсылка.Хозрасчетный>
	
	Параметры.Вставить("ТаблицаАвансов",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаАвансов, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

Функция ПодготовитьТаблицуДокументаПоКурсуАвансов(ТаблицаРеквизиты, ТаблицаПоДокументуУменьшение, ТаблицаПоДокументуУвеличение, ТаблицаАвансов) Экспорт
	
	СтруктураТаблиц = Новый Структура();
	СтруктураТаблиц.Вставить("ТаблицаПоДокументуУменьшение", ТаблицаПоДокументуУменьшение);
	СтруктураТаблиц.Вставить("ТаблицаПоДокументуУвеличение", ТаблицаПоДокументуУвеличение);
	
	Если Не ЗначениеЗаполнено(ТаблицаАвансов)
	 Или Не ЗначениеЗаполнено(ТаблицаРеквизиты)
	 Или Не ЗначениеЗаполнено(ТаблицаПоДокументуУменьшение) И Не ЗначениеЗаполнено(ТаблицаПоДокументуУвеличение) Тогда
			Возврат СтруктураТаблиц;
	КонецЕсли;
	
	Реквизиты = ТаблицаРеквизиты[0];
	Если Реквизиты.ВалютаДокумента = Константы.ВалютаРегламентированногоУчета.Получить()
	 Или ТаблицаАвансов.Найти(Истина, "НужноУчитыватьПриЗачетеАванса") = Неопределено Тогда
		Возврат СтруктураТаблиц;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыТаблицыДокументаПоЗачетуАванса(ТаблицаРеквизиты, ТаблицаАвансов);
	Реквизиты = Параметры.РеквизитыЗачетАвансов[0];
	
	Отбор = Новый Структура("НужноУчитыватьПриЗачетеАванса", Истина);
	ТаблицаИстинныхАвансов = ТаблицаАвансов.Скопировать(Отбор);
	
	ЕдинаяТаблица = ПодготовитьЕдинуюТаблицуПоПереданным(ТаблицаПоДокументуУменьшение, ТаблицаПоДокументуУвеличение);
	
	ОтборСтрок = Новый Структура("ИмяСписка, НомерСтроки");
	
	СуммаВзаиморасчетовДоИзменения     = ЕдинаяТаблица.Итог("СуммаВзаиморасчетовДоИзменения");
	СуммаВзаиморасчетов                = ЕдинаяТаблица.Итог("СуммаВзаиморасчетов");
	
	ТаблицаДляРасчетаСуммыДоИзменения = ЕдинаяТаблица.Скопировать(Новый Структура("ПревышаетСуммуДоИзменения", Истина));
	
	СуммаВзаиморасчетовДляРаспределения = СуммаВзаиморасчетов - СуммаВзаиморасчетовДоИзменения;
	
	ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
	СуммаВзаиморасчетовДляРаспределения, ТаблицаДляРасчетаСуммыДоИзменения, "СуммаПревышенияСуммыВзаиморасчетовНадСуммойВзаиморасчетовДоИзменения", "СуммаВзаиморасчетовПревышениеДоИзменения");
	
	СуммаВзаиморасчетовАванса = ТаблицаИстинныхАвансов.Итог("СуммаВзаиморасчетов");
	
	ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
	СуммаВзаиморасчетовАванса, ТаблицаДляРасчетаСуммыДоИзменения, "СуммаВзаиморасчетовПоКурсуАвансов", "СуммаПревышенияСуммыВзаиморасчетовНадСуммойВзаиморасчетовДоИзменения");
	
	СуммаРубПоКурсуАвансов = ТаблицаИстинныхАвансов.Итог("СуммаРубПоКурсуАванса");
	
	ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
	СуммаРубПоКурсуАвансов, ТаблицаДляРасчетаСуммыДоИзменения, "СуммаРубПоКурсуАвансов", "СуммаВзаиморасчетовПоКурсуАвансов");
	
	Если Реквизиты.РасчетКорректировокСУчетомРекомендацийПоНДС Тогда
		КурсВзаиморасчетов      = Реквизиты.КурсВзаиморасчетов;
		КратностьВзаиморасчетов = Реквизиты.КратностьВзаиморасчетов;
	Иначе
		
		Если Реквизиты.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки Тогда
			
			СтруктураКурсаВзаиморасчетов = РаботаСКурсамиВалют.ПолучитьКурсВалюты(
			Реквизиты.ВалютаДокумента, Реквизиты.ДатаДокументаРеализации);
			
			КурсВзаиморасчетов      = СтруктураКурсаВзаиморасчетов.Курс;
			КратностьВзаиморасчетов = СтруктураКурсаВзаиморасчетов.Кратность;
			
		Иначе
			
			СтруктураКурсаВзаиморасчетов = РаботаСКурсамиВалют.ПолучитьКурсВалюты(
			Реквизиты.ВалютаДокумента, Реквизиты.Период);
			
			КурсВзаиморасчетов      = СтруктураКурсаВзаиморасчетов.Курс;
			КратностьВзаиморасчетов = СтруктураКурсаВзаиморасчетов.Кратность;
			
		КонецЕсли;
	КонецЕсли;
	КратностьВзаиморасчетов = ?(КратностьВзаиморасчетов = 0, 1, КратностьВзаиморасчетов);
	
	Для Каждого СтрокаТаблицы Из ЕдинаяТаблица Цикл
		
		ОтборСтрок.ИмяСписка   = СтрокаТаблицы.ИмяСписка;
		ОтборСтрок.НомерСтроки = СтрокаТаблицы.НомерСтроки;
		
		МассивСтрок = ТаблицаДляРасчетаСуммыДоИзменения.НайтиСтроки(ОтборСтрок);
		
		Если МассивСтрок.Количество() > 0 Тогда
			
			НайденнаяСтрокаТаблицы = МассивСтрок[0];
		
			СтрокаТаблицы.СуммаПревышенияСуммыВзаиморасчетовНадСуммойВзаиморасчетовДоИзменения = НайденнаяСтрокаТаблицы.СуммаПревышенияСуммыВзаиморасчетовНадСуммойВзаиморасчетовДоИзменения;
			
			СтрокаТаблицы.СуммаВзаиморасчетовПоКурсуДоИзменения = СтрокаТаблицы.СуммаВзаиморасчетов - СтрокаТаблицы.СуммаПревышенияСуммыВзаиморасчетовНадСуммойВзаиморасчетовДоИзменения;
			
		Иначе
			СтрокаТаблицы.СуммаВзаиморасчетовПоКурсуДоИзменения = СтрокаТаблицы.СуммаВзаиморасчетов;
		КонецЕсли;
		
	КонецЦикла;
	
	СуммаБУДляРаспределения = ЕдинаяТаблица.Итог("СуммаРубДоИзменения");
	
	ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
	СуммаБУДляРаспределения, ЕдинаяТаблица, "СуммаРубПоКурсуДоИзменения", "СуммаВзаиморасчетовПоКурсуДоИзменения");
	
	Если Реквизиты.РасчетКорректировокСУчетомРекомендацийПоНДС Тогда
		Для Каждого СтрокаТаблицы Из ЕдинаяТаблица Цикл
			Если СтрокаТаблицы.СуммаВзаиморасчетовПоКурсуДоИзменения = СтрокаТаблицы.СуммаВзаиморасчетовДоИзменения Тогда
				СтрокаТаблицы.СуммаРубПоКурсуДоИзменения = СтрокаТаблицы.СуммаРубДоИзменения;
			КонецЕсли;
			Если СтрокаТаблицы.СуммаВзаиморасчетов < СтрокаТаблицы.СуммаВзаиморасчетовДоИзменения Тогда
				СтрокаТаблицы.СуммаРуб = СтрокаТаблицы.СуммаРубПоКурсуДоИзменения;
				СтрокаТаблицы.СуммаБУ = СтрокаТаблицы.СуммаРуб - СтрокаТаблицы.СуммаНДСРуб;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из ТаблицаДляРасчетаСуммыДоИзменения Цикл
		
		ОтборСтрок.ИмяСписка = СтрокаТаблицы.ИмяСписка;
		ОтборСтрок.НомерСтроки = СтрокаТаблицы.НомерСтроки;
		
		МассивСтрок = ЕдинаяТаблица.НайтиСтроки(ОтборСтрок);
		СтрокаЕдинойТаблицы = МассивСтрок[0];
		СтрокаЕдинойТаблицы.СуммаБУ = СтрокаЕдинойТаблицы.СуммаРубПоКурсуДоИзменения + СтрокаТаблицы.СуммаРубПоКурсуАвансов +
		(СтрокаТаблицы.СуммаПревышенияСуммыВзаиморасчетовНадСуммойВзаиморасчетовДоИзменения - СтрокаТаблицы.СуммаВзаиморасчетовПоКурсуАвансов)*КурсВзаиморасчетов/КратностьВзаиморасчетов;
		
		Если Реквизиты.РасчетыВУсловныхЕдиницах Тогда
			
			ПроцентНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаЕдинойТаблицы.СтавкаНДС);
			
			СтрокаЕдинойТаблицы.СуммаНДСРуб = СтрокаЕдинойТаблицы.СуммаБУ*ПроцентНДС/(100 + ПроцентНДС);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ ТаблицаПоДокументуУвеличение = Неопределено Тогда
		
		Для Каждого СтрокаТаблицы Из ТаблицаПоДокументуУвеличение Цикл
			
			ОтборСтрок.ИмяСписка = СтрокаТаблицы.ИмяСписка;
			ОтборСтрок.НомерСтроки = СтрокаТаблицы.НомерСтроки;
			
			МассивСтрок = ЕдинаяТаблица.НайтиСтроки(ОтборСтрок);
			
			СтрокаЕдинойТаблицы = МассивСтрок[0];
			
			СтрокаТаблицы.СуммаБУ = СтрокаЕдинойТаблицы.СуммаБУ - СтрокаТаблицы.СуммаРубДоИзменения;
			
			СтрокаТаблицы.СуммаНУ = СтрокаТаблицы.СуммаБУ;
			
			СтрокаТаблицы.СуммаНДСРуб = СтрокаЕдинойТаблицы.СуммаНДСРуб - СтрокаТаблицы.СуммаНДСРубДоИзменения;
			
		КонецЦикла;
		СтруктураТаблиц.ТаблицаПоДокументуУвеличение = ТаблицаПоДокументуУвеличение;
	КонецЕсли;
	
	Если Реквизиты.РасчетКорректировокСУчетомРекомендацийПоНДС И НЕ ТаблицаПоДокументуУменьшение = Неопределено Тогда
		
		Для Каждого СтрокаТаблицы Из ТаблицаПоДокументуУменьшение Цикл
			
			ОтборСтрок.ИмяСписка = СтрокаТаблицы.ИмяСписка;
			ОтборСтрок.НомерСтроки = СтрокаТаблицы.НомерСтроки;
			
			МассивСтрок = ЕдинаяТаблица.НайтиСтроки(ОтборСтрок);
			
			СтрокаЕдинойТаблицы = МассивСтрок[0];
			
			СтрокаТаблицы.СуммаБУ = СтрокаЕдинойТаблицы.СуммаРубДоИзменения - СтрокаЕдинойТаблицы.СуммаРуб;
			
			СтрокаТаблицы.СуммаНУ = СтрокаТаблицы.СуммаБУ;
			
		КонецЦикла;
		СтруктураТаблиц.ТаблицаПоДокументуУменьшение = ТаблицаПоДокументуУменьшение;
	КонецЕсли;
	
	Возврат СтруктураТаблиц;
	
КонецФункции

Функция ПодготовитьТаблицуДляПроведенияПоРублевымСуммам(
	Реквизиты, ТаблицаСобственныеТоварыУслуги, ТаблицаТоварыУслугиКомитентов, ТаблицаСторноСобственныеТоварыУслуги, ТаблицаСторноТоварыУслугиКомитентов, РублевыеСуммыДокументовВВалюте) Экспорт
	
	Если РублевыеСуммыДокументовВВалюте = Неопределено Тогда
		Возврат РублевыеСуммыДокументовВВалюте;
	КонецЕсли;
	
	Если Реквизиты <> Неопределено И Реквизиты.Количество() > 0 Тогда
		РасчетКорректировокСУчетомРекомендацийПоНДС = Реквизиты[0].РасчетКорректировокСУчетомРекомендацийПоНДС;
		РасчетыВУсловныхЕдиницах                    = Реквизиты[0].РасчетыВУсловныхЕдиницах;
	Иначе
		РасчетКорректировокСУчетомРекомендацийПоНДС = Ложь;
		РасчетыВУсловныхЕдиницах = Ложь;
	КонецЕсли;

	ТаблицаВозврата = РублевыеСуммыДокументовВВалюте.Скопировать();
	
	Для Каждого СтрокаТаблицы Из ТаблицаВозврата Цикл
		
		ОтборПоТаблицам = Новый Структура("ИмяСписка, НомерСтроки", СтрокаТаблицы.ИмяСписка, СтрокаТаблицы.НомерСтроки);
		
		Если ТаблицаСобственныеТоварыУслуги = Неопределено Тогда
			СтрокаПоТаблицеСобственныхТоваровИУслуг = Неопределено;
		Иначе
			
			Массив = ТаблицаСобственныеТоварыУслуги.НайтиСтроки(ОтборПоТаблицам);
			
			Если Массив.Количество() > 0 Тогда
				СтрокаПоТаблицеСобственныхТоваровИУслуг = Массив[0];
			Иначе
				СтрокаПоТаблицеСобственныхТоваровИУслуг = Неопределено;
			КонецЕсли;	
			
		КонецЕсли;
		
		Если ТаблицаТоварыУслугиКомитентов = Неопределено Тогда
			СтрокаПоТаблицеТоварыУслугиКомитентов = Неопределено;
		Иначе
			
			Массив = ТаблицаТоварыУслугиКомитентов.НайтиСтроки(ОтборПоТаблицам);
			
			Если Массив.Количество() > 0 Тогда
				СтрокаПоТаблицеТоварыУслугиКомитентов = Массив[0];
			Иначе
				СтрокаПоТаблицеТоварыУслугиКомитентов = Неопределено;
			КонецЕсли;	
			
		КонецЕсли;
		
		Если ТаблицаСторноСобственныеТоварыУслуги = Неопределено Тогда
			СтрокаПоТаблицеСторноСобственныхТоваровИУслуг = Неопределено;
		Иначе
			
			Массив = ТаблицаСторноСобственныеТоварыУслуги.НайтиСтроки(ОтборПоТаблицам);
			
			Если Массив.Количество() > 0 Тогда
				СтрокаПоТаблицеСторноСобственныхТоваровИУслуг = Массив[0];
			Иначе
				СтрокаПоТаблицеСторноСобственныхТоваровИУслуг = Неопределено;
			КонецЕсли;	
			
		КонецЕсли;
		
		Если ТаблицаСторноТоварыУслугиКомитентов = Неопределено Тогда
			СтрокаПоТаблицеСторноТоварыУслугиКомитентов = Неопределено;
		Иначе
			
			Массив = ТаблицаСторноТоварыУслугиКомитентов.НайтиСтроки(ОтборПоТаблицам);
			
			Если Массив.Количество() > 0 Тогда
				СтрокаПоТаблицеСторноТоварыУслугиКомитентов = Массив[0];
			Иначе
				СтрокаПоТаблицеСторноТоварыУслугиКомитентов = Неопределено;
			КонецЕсли;	
			
		КонецЕсли;
		
		Если НЕ СтрокаПоТаблицеСобственныхТоваровИУслуг = Неопределено Тогда
			
			Если РасчетКорректировокСУчетомРекомендацийПоНДС Тогда
				СтрокаТаблицы.СуммаБУ     = СтрокаТаблицы.СуммаБУДоИзменения     + СтрокаПоТаблицеСобственныхТоваровИУслуг.СуммаБУ;
				СтрокаТаблицы.СуммаНДСРуб = СтрокаТаблицы.СуммаНДСРубДоИзменения + СтрокаПоТаблицеСобственныхТоваровИУслуг.СуммаНДСРуб;
				Если РасчетыВУсловныхЕдиницах Тогда 
					СтрокаТаблицы.СуммаБезНДСРуб = СтрокаТаблицы.СуммаБУ - СтрокаТаблицы.СуммаНДСРуб;
				КонецЕсли;

			Иначе
				
				СтрокаТаблицы.СуммаБУ     = СтрокаТаблицы.СуммаБУДоИзменения     + СтрокаПоТаблицеСобственныхТоваровИУслуг.СуммаБУ;
				СтрокаТаблицы.СуммаНДСРуб = СтрокаТаблицы.СуммаНДСРубДоИзменения + СтрокаПоТаблицеСобственныхТоваровИУслуг.СуммаНДСРуб;
				
				КоэффициентДляСуммыБезНДСРуб = ?(СтрокаТаблицы.СуммаБУДоИзменения = 0, 0, СтрокаПоТаблицеСобственныхТоваровИУслуг.СуммаБУ/СтрокаТаблицы.СуммаБУДоИзменения);
				
				СтрокаТаблицы.СуммаБезНДСРуб = СтрокаТаблицы.СуммаБезНДСРубДоИзменения + СтрокаТаблицы.СуммаБезНДСРубДоИзменения*КоэффициентДляСуммыБезНДСРуб;
			КонецЕсли;
			
		КонецЕсли;
		
		Если НЕ СтрокаПоТаблицеТоварыУслугиКомитентов = Неопределено Тогда
			
			Если РасчетКорректировокСУчетомРекомендацийПоНДС Тогда
				
				СтрокаТаблицы.СуммаБУ     = СтрокаТаблицы.СуммаБУДоИзменения     + СтрокаПоТаблицеТоварыУслугиКомитентов.СуммаБУ;
				СтрокаТаблицы.СуммаНДСРуб = СтрокаТаблицы.СуммаНДСРубДоИзменения + СтрокаПоТаблицеТоварыУслугиКомитентов.СуммаНДСРуб;
				Если РасчетыВУсловныхЕдиницах Тогда 
					СтрокаТаблицы.СуммаБезНДСРуб = СтрокаТаблицы.СуммаБУ - СтрокаТаблицы.СуммаНДСРуб;
				КонецЕсли;

			Иначе
				СтрокаТаблицы.СуммаБУ     = СтрокаТаблицы.СуммаБУДоИзменения     + СтрокаПоТаблицеТоварыУслугиКомитентов.СуммаБУ;
				СтрокаТаблицы.СуммаНДСРуб = СтрокаТаблицы.СуммаНДСРубДоИзменения + СтрокаПоТаблицеТоварыУслугиКомитентов.СуммаНДСРуб;
				
				КоэффициентДляСуммыБезНДСРуб = ?(СтрокаТаблицы.СуммаБУДоИзменения = 0, 0, СтрокаПоТаблицеТоварыУслугиКомитентов.СуммаБУ/СтрокаТаблицы.СуммаБУДоИзменения);
				
				СтрокаТаблицы.СуммаБезНДСРуб = СтрокаТаблицы.СуммаБезНДСРубДоИзменения + СтрокаТаблицы.СуммаБезНДСРубДоИзменения*КоэффициентДляСуммыБезНДСРуб;
			КонецЕсли;
			
		КонецЕсли;	
			
		Если НЕ СтрокаПоТаблицеСторноСобственныхТоваровИУслуг = Неопределено Тогда
		Если РасчетКорректировокСУчетомРекомендацийПоНДС Тогда
				
				СтрокаТаблицы.СуммаБУ     = СтрокаТаблицы.СуммаБУДоИзменения     + СтрокаПоТаблицеСторноСобственныхТоваровИУслуг.СуммаБУ;
				СтрокаТаблицы.СуммаНДСРуб = СтрокаТаблицы.СуммаНДСРубДоИзменения + СтрокаПоТаблицеСторноСобственныхТоваровИУслуг.СуммаНДСРуб;
				Если РасчетыВУсловныхЕдиницах Тогда 
					СтрокаТаблицы.СуммаБезНДСРуб = СтрокаТаблицы.СуммаБУ - СтрокаТаблицы.СуммаНДСРуб;
				КонецЕсли;
			Иначе
				СтрокаТаблицы.СуммаБУ     = СтрокаТаблицы.СуммаБУДоИзменения     + СтрокаПоТаблицеСторноСобственныхТоваровИУслуг.СуммаБУ;
				СтрокаТаблицы.СуммаНДСРуб = СтрокаТаблицы.СуммаНДСРубДоИзменения + СтрокаПоТаблицеСторноСобственныхТоваровИУслуг.СуммаНДСРуб;
				
				КоэффициентДляСуммыБезНДСРуб = ?(СтрокаТаблицы.СуммаБУДоИзменения = 0, 0, СтрокаПоТаблицеСторноСобственныхТоваровИУслуг.СуммаБУ/СтрокаТаблицы.СуммаБУДоИзменения);
				
				СтрокаТаблицы.СуммаБезНДСРуб = СтрокаТаблицы.СуммаБезНДСРубДоИзменения + СтрокаТаблицы.СуммаБезНДСРубДоИзменения*КоэффициентДляСуммыБезНДСРуб;
			КонецЕсли;
			
		КонецЕсли;
		
		Если НЕ СтрокаПоТаблицеСторноТоварыУслугиКомитентов = Неопределено Тогда
			
			Если РасчетКорректировокСУчетомРекомендацийПоНДС Тогда
				
				СтрокаТаблицы.СуммаБУ     = СтрокаТаблицы.СуммаБУДоИзменения     + СтрокаПоТаблицеСторноТоварыУслугиКомитентов.СуммаБУ;
				СтрокаТаблицы.СуммаНДСРуб = СтрокаТаблицы.СуммаНДСРубДоИзменения + СтрокаПоТаблицеСторноТоварыУслугиКомитентов.СуммаНДСРуб;
				Если РасчетыВУсловныхЕдиницах Тогда 
					СтрокаТаблицы.СуммаБезНДСРуб = СтрокаТаблицы.СуммаБУ - СтрокаТаблицы.СуммаНДСРуб;
				КонецЕсли;

			Иначе
				СтрокаТаблицы.СуммаБУ     = СтрокаТаблицы.СуммаБУДоИзменения     + СтрокаПоТаблицеСторноТоварыУслугиКомитентов.СуммаБУ;
				СтрокаТаблицы.СуммаНДСРуб = СтрокаТаблицы.СуммаНДСРубДоИзменения + СтрокаПоТаблицеСторноТоварыУслугиКомитентов.СуммаНДСРуб;
				
				КоэффициентДляСуммыБезНДСРуб = ?(СтрокаТаблицы.СуммаБУДоИзменения = 0, 0, СтрокаПоТаблицеСторноТоварыУслугиКомитентов.СуммаБУ/СтрокаТаблицы.СуммаБУДоИзменения);
				
				СтрокаТаблицы.СуммаБезНДСРуб = СтрокаТаблицы.СуммаБезНДСРубДоИзменения + СтрокаТаблицы.СуммаБезНДСРубДоИзменения*КоэффициентДляСуммыБезНДСРуб;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТаблицаВозврата;
	
КонецФункции	

Функция ТаблицыНДСПоКурсуАванса(
	ТаблицаНачисление, ТаблицаТоварыУслуги, ТаблицаВосстановление, ТаблицаРублевыеСуммыДокументовВВалюте, Реквизиты) Экспорт
	
	ТаблицыПоКурсуАванса = Новый Структура();
	
	Если Реквизиты = Неопределено 
		ИЛИ НЕ Реквизиты[0].РасчетыВУсловныхЕдиницах
		ИЛИ ТаблицаНачисление = Неопределено
		ИЛИ ТаблицаТоварыУслуги = Неопределено
		ИЛИ ТаблицаВосстановление = Неопределено
		ИЛИ ТаблицаРублевыеСуммыДокументовВВалюте = Неопределено Тогда
		
		ТаблицыПоКурсуАванса.Вставить("ТаблицаНачисление",     ТаблицаНачисление);
		ТаблицыПоКурсуАванса.Вставить("ТаблицаТоварыУслуги",   ТаблицаТоварыУслуги);
		ТаблицыПоКурсуАванса.Вставить("ТаблицаВосстановление", ТаблицаВосстановление);
		
		Возврат ТаблицыПоКурсуАванса;
		
	КонецЕсли;
	
	Если Реквизиты[0].РасчетКорректировокСУчетомРекомендацийПоНДС Тогда
		СуммаБезНДСВосстановление = 0;
		СуммаНДСВосстановление    = 0;
		
		Для Каждого Стр Из ТаблицаРублевыеСуммыДокументовВВалюте Цикл
			Если СтрНайти(Стр.ИмяСписка, "ДоИзменения") > 0 Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаНачислений = ТаблицаНачисление.Найти(
			Стр.ИдентификаторСтроки, "ИдентификаторСтроки");
			Если СтрокаНачислений <> Неопределено Тогда
				СтрокаНачислений.СуммаБезНДС = Стр.СуммаБезНДСРуб;
				СтрокаНачислений.НДС = Стр.СуммаНДСРуб;
			КонецЕсли;
			
			СтрокаТоваровИУслуг = ТаблицаТоварыУслуги.Найти(Стр.ИдентификаторСтроки, "ИдентификаторСтроки");
			Если СтрокаТоваровИУслуг <> Неопределено Тогда
				СтрокаТоваровИУслуг.СуммаНДС = Стр.СуммаНДСРуб;
			КонецЕсли;
			
			Если Стр.СуммаНДСРубДоИзменения < Стр.СуммаНДСРуб Или Стр.СуммаБезНДСРубДоИзменения < Стр.СуммаБезНДСРуб Тогда
				СуммаНДСВосстановление = СуммаНДСВосстановление + (Стр.СуммаНДСРуб - Стр.СуммаНДСРубДоИзменения);
				СуммаБезНДСВосстановление = СуммаБезНДСВосстановление + (Стр.СуммаБезНДСРуб - Стр.СуммаБезНДСРубДоИзменения);
			КонецЕсли;
		КонецЦикла;
		
		
		ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
		СуммаБезНДСВосстановление,
		ТаблицаВосстановление,
		"СуммаБезНДС");
		
		ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
		СуммаНДСВосстановление,
		ТаблицаВосстановление,
		"НДС");
		
	Иначе
		
		СуммаБезНДСНачисление = 
		ТаблицаРублевыеСуммыДокументовВВалюте.Итог("СуммаБезНДСРуб")
		+ ТаблицаРублевыеСуммыДокументовВВалюте.Итог("СуммаБезНДСРубДоИзменения");
		
		НДСНачисление = 
		ТаблицаРублевыеСуммыДокументовВВалюте.Итог("СуммаНДСРуб")
		+ ТаблицаРублевыеСуммыДокументовВВалюте.Итог("СуммаНДСРубДоИзменения");
		
		ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
		СуммаБезНДСНачисление,
		ТаблицаНачисление,
		"СуммаБезНДС");
		
		ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
		НДСНачисление,
		ТаблицаНачисление,
		"НДС");
		
		ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
		НДСНачисление,
		ТаблицаТоварыУслуги,
		"СуммаНДС");
		
		СуммаБезНДСВосстановление = ТаблицаРублевыеСуммыДокументовВВалюте.Итог("СуммаБезНДСРуб");
		СуммаНДСВосстановление    = ТаблицаРублевыеСуммыДокументовВВалюте.Итог("СуммаНДСРуб");
		
		ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
		СуммаБезНДСВосстановление,
		ТаблицаВосстановление,
		"СуммаБезНДС");
		
		ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
		СуммаНДСВосстановление,
		ТаблицаВосстановление,
		"НДС");
	КонецЕсли;
	
	ТаблицыПоКурсуАванса.Вставить("ТаблицаНачисление",     ТаблицаНачисление);
	ТаблицыПоКурсуАванса.Вставить("ТаблицаТоварыУслуги",   ТаблицаТоварыУслуги);
	ТаблицыПоКурсуАванса.Вставить("ТаблицаВосстановление", ТаблицаВосстановление);
	
	Возврат ТаблицыПоКурсуАванса;
	
КонецФункции

// ОТЛОЖЕННОЕ ПРОВЕДЕНИЕ

Функция ТекстЗапросаРегистрацияОтложенныхРасчетовСКонтрагентами(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение
		ИЛИ Реквизиты.ЭтоДоговорСКомиссионером
		ИЛИ НЕ ПроведениеСервер.ИспользуетсяОтложенноеПроведение(Реквизиты.Организация, Реквизиты.Период) Тогда
		ПараметрыПроведения.Вставить("РасчетыСКонтрагентамиОтложенноеПроведение", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("РасчетыСКонтрагентамиОтложенноеПроведение", НомераТаблиц.Количество());

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.Дата КАК Дата
	|ИЗ
	|	Реквизиты КАК Реквизиты";
	
	Если Реквизиты.ЕстьАгентскиеУслуги Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаАгентскиеУслуги.Контрагент,
		|	ТаблицаАгентскиеУслуги.ДоговорКонтрагента,
		|	ТаблицаАгентскиеУслуги.ВалютаВзаиморасчетов,
		|	ТаблицаАгентскиеУслуги.ВидДоговора,
		|	Реквизиты.Дата
		|ИЗ
		|	ТаблицаАгентскиеУслуги КАК ТаблицаАгентскиеУслуги
		|	ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
		|		ПО ИСТИНА";
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаРегистрацияОтложенныхРасчетовВПоследовательности(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.КорректироватьБУиНУ
		ИЛИ Реквизиты.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером
		ИЛИ Реквизиты.ВидОперацииРеализации = Перечисления.ВидыОперацийРеализацияТоваров.ОтгрузкаБезПереходаПраваСобственности
		ИЛИ Реквизиты.ЭтоОтложенноеПроведение
		ИЛИ НЕ ПроведениеСервер.ИспользуетсяОтложенноеПроведение(Реквизиты.Организация, Реквизиты.Период) Тогда
		ПараметрыПроведения.Вставить("РеквизитыРегистрацияВПоследовательности", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("РеквизитыРегистрацияВПоследовательности", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	&ДатаДокументаРеализации КАК ДатаДокументаРеализации,
	|	&ЕстьТовары КАК ЕстьТовары
	|ИЗ
	|	Реквизиты КАК Реквизиты";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Процедура ЗарегистрироватьОтложенныеРасчетыВПоследовательности(Объект, ПараметрыПроведения, ТаблицаСписанныеТовары, Отказ) Экспорт

	// Корректировке реализации по товарам за прошлые месяцы
	// необходимо определять стоимость ранее списанных товаров,
	// поэтому такие документы всегда регистрируем в последовательности, 
	// чтобы при закрытии месяца они перепроводились по актуальным данным.
	
	ОбязательноРегистрироватьВПоследовательности = Истина;
	
	Параметры = ПодготовитьПараметрыЗарегистрироватьОтложенныеРасчетыВПоследовательности(
		ПараметрыПроведения.РеквизитыРегистрацияВПоследовательности);
	
	Если Параметры.Реквизиты.Количество() > 0 Тогда

		// Если параметры проведения для регистрации в последовательности заполнены, то анализируем их, 
		// иначе безусловно регистрируем в последовательности.
		Реквизиты = Параметры.Реквизиты[0];
		
		ОбязательноРегистрироватьВПоследовательности = Ложь;
		
		Если Реквизиты.ЕстьТовары Тогда
			Если НачалоМесяца(Реквизиты.ДатаДокументаРеализации) <> НачалоМесяца(Реквизиты.Период) Тогда
				ОбязательноРегистрироватьВПоследовательности = Истина;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;

	Если ОбязательноРегистрироватьВПоследовательности Тогда
		РаботаСПоследовательностями.ЗарегистрироватьВПоследовательности(Объект, Отказ, Ложь);
	Иначе
		РаботаСПоследовательностями.ЗарегистрироватьОтложенныеРасчетыВПоследовательности(
			Объект,
			Отказ,
			ПараметрыПроведения.РасчетыСКонтрагентамиОтложенноеПроведение,
			ТаблицаСписанныеТовары,
			Перечисления.ВидыРегламентныхОпераций.РасчетДолейСписанияКосвенныхРасходов);
	КонецЕсли;

КонецПроцедуры

Функция ПодготовитьПараметрыЗарегистрироватьОтложенныеРасчетыВПоследовательности(ТаблицаРеквизиты)

	Параметры = Новый Структура;
	
	СписокОбязательныхКолонок = ""
	+ "Период,"                       // <Дата> - период движений - дата документа
	+ "ДатаДокументаРеализации,"      // <Дата> - дата корректируемого документа реализации
	+ "ЕстьТовары";     			  // <Булево> - Истина, если в табличная часть Товары заполнена.

	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Процедура ОбработкаОтложенногоПроведения(Параметры, Отказ) Экспорт
	
	ПараметрыПроведения = ПодготовитьПараметрыПроведения(
		Параметры.Регистратор,
		Отказ,
		Параметры.ДоговорКонтрагента);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;	

	ТаблицаВзаиморасчеты = УчетВзаиморасчетовОтложенноеПроведение.ПодготовитьТаблицуВзаиморасчетовЗачетАвансов(
		Параметры,
		ПараметрыПроведения.ЗачетАвансовТаблицаДокумента,
		ПараметрыПроведения.ТаблицаЗачетАвансов,
		ПараметрыПроведения.ЗачетАвансовРеквизиты,
		Отказ);

	ТаблицаВзаиморасчетыВозврат = УчетВзаиморасчетовОтложенноеПроведение.ПодготовитьТаблицуВзаиморасчетовЗачетАвансов(
		Параметры,
		ПараметрыПроведения.ЗачетАвансовТаблицаДокумента,
		ПараметрыПроведения.ТаблицаЗачетАвансов,
		ПараметрыПроведения.ВыделениеАвансаРеквизиты,
		Отказ);

	ТаблицыПоВзаиморасчетам = ПодготовитьТаблицыАвансовОплат(ТаблицаВзаиморасчеты, ПараметрыПроведения.РеализацияРеквизиты);
	
	ТаблицаВзаиморасчетыВозврат = ПодготовитьТаблицуВыделениеАвансов(ТаблицаВзаиморасчетыВозврат, ПараметрыПроведения.РеализацияРеквизиты);

	ТаблицыДокументаПоКурсуАвансов = ПодготовитьТаблицуДокументаПоКурсуАвансов(
		ПараметрыПроведения.РеализацияРеквизиты,
		ПараметрыПроведения.СторноРеализацияТаблицаДокумента,
		ПараметрыПроведения.РеализацияТаблицаДокумента,
		ТаблицаВзаиморасчеты);
		
	ТаблицаДокументаРеализацииПоКурсуАвансов = ТаблицыДокументаПоКурсуАвансов.ТаблицаПоДокументуУвеличение;
	ТаблицаДокументаСторноРеализация = ТаблицыДокументаПоКурсуАвансов.ТаблицаПоДокументуУменьшение;
	
	// Таблица возвращенных товаров
	ТаблицаВозвращенныеТовары = УчетТоваров.ПодготовитьТаблицуВозвращенныеСписанныеТовары(
		ПараметрыПроведения.ВозвратТоваровТаблицаТовары,
		ПараметрыПроведения.ВозвратТоваровСчетаУчета,
		ПараметрыПроведения.ВозвратТоваровНоменклатура,
		ПараметрыПроведения.ВозвратТоваровРеквизиты, Отказ);
	
	// Таблица списанных товаров
	ТаблицаСписанныеТовары = УчетТоваров.ПодготовитьТаблицуСписанныеТоварыСУчетомВозврата(ПараметрыПроведения.СписаниеТоваровТаблицаТовары,
		ТаблицаВозвращенныеТовары, ПараметрыПроведения.СписаниеТоваровРеквизиты, Отказ);
	
	// Таблица товаров, не попавших таблицы списания или возврата
	ТаблицаТоварыКомитента = УчетТоваров.ПодготовитьТаблицуВозвращенныеСписанныеТовары(
		ПараметрыПроведения.ПартииКомитентовТаблицаТовары,
		ПараметрыПроведения.ПартииКомитентовСчетаУчета,
		ПараметрыПроведения.ПартииКомитентовНоменклатура,
		ПараметрыПроведения.ПартииКомитентовРеквизиты, Отказ);
	
	// Таблицы выручки от реализации: собственных товаров и услуг и отдельно комиссионных
	ТаблицыРеализация = УчетДоходовРасходов.ПодготовитьТаблицыВыручкиОтКорректировкиРеализации(
		ТаблицаДокументаРеализацииПоКурсуАвансов, ТаблицаСписанныеТовары, ТаблицаТоварыКомитента,
		ПараметрыПроведения.РеализацияРеквизиты, Отказ);
	
	ТаблицаСобственныеТоварыУслуги       = ТаблицыРеализация.СобственныеТоварыУслуги;
	ТаблицаТоварыУслугиКомитентов        = ТаблицыРеализация.ТоварыУслугиКомитентов;
	
	// Таблицы сторно выручки от реализации: собственных товаров и услуг и отдельно комиссионных
	ТаблицыСторноРеализация = УчетДоходовРасходов.ПодготовитьТаблицыВыручкиОтКорректировкиРеализации(
		ТаблицаДокументаСторноРеализация, ТаблицаВозвращенныеТовары, ТаблицаТоварыКомитента,
		ПараметрыПроведения.РеализацияРеквизиты, Отказ);
	
	ТаблицаСторноСобственныеТоварыУслуги       = ТаблицыСторноРеализация.СобственныеТоварыУслуги;
	ТаблицаСторноТоварыУслугиКомитентов        = ТаблицыСторноРеализация.ТоварыУслугиКомитентов;
	ТаблицаСторноРеализованныеТоварыКомитентов = ТаблицыСторноРеализация.РеализованныеТоварыКомитентов;
	
	ПроставитьСторноТаблиц(ТаблицаВозвращенныеТовары, ТаблицаСторноСобственныеТоварыУслуги,
		ТаблицаСторноТоварыУслугиКомитентов, ТаблицаСторноРеализованныеТоварыКомитентов, ПараметрыПроведения.ВозвратТоваровРеквизиты);
	
	СтруктураВыручкиУСН = ПодготовитьСтруктуруВыручкиПоВидамДеятельности(
		ТаблицаСобственныеТоварыУслуги, ТаблицаТоварыУслугиКомитентов,
		ТаблицаСторноСобственныеТоварыУслуги, ТаблицаСторноТоварыУслугиКомитентов,
		ПараметрыПроведения.УСНРеквизиты);
	
	// Структура таблиц для отражения в налоговом учете УСН
	СтруктураТаблицУСН = Новый Структура;
	СтруктураТаблицУСН.Вставить("УСНРеквизиты", ПараметрыПроведения.УСНРеквизиты);
	СтруктураТаблицУСН.Вставить("ТаблицаРасчетов", ТаблицыПоВзаиморасчетам.ТаблицаВзаиморасчеты);
	СтруктураТаблицУСН.Вставить("Выручка", СтруктураВыручкиУСН);

	СформироватьДвиженияВыделениеАванса(
		ТаблицаВзаиморасчетыВозврат,
		ПараметрыПроведения.ВыделениеАвансаРеквизиты,
		Параметры.Движения,
		Отказ,
		Истина);

	УчетВзаиморасчетовОтложенноеПроведение.СформироватьДвиженияЗачетАвансов(
		Параметры,
		ТаблицаВзаиморасчеты,
		ПараметрыПроведения.ЗачетАвансовРеквизиты,
		Отказ);

	// УСН
	УчетВзаиморасчетовОтложенноеПроведение.СформироватьДвиженияУСН(Параметры, СтруктураТаблицУСН);

КонецПроцедуры

// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ

Процедура СформироватьДвиженияВыделениеАванса(ТаблицаВзаиморасчеты, ТаблицаРеквизиты, Движения, Отказ, ЭтоОтложенноеПроведение = Ложь) Экспорт

	Если Не ЗначениеЗаполнено(ТаблицаВзаиморасчеты)
	 Или Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = ТаблицаРеквизиты[0];
	Если Реквизиты.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.НеЗачитывать Тогда
		Возврат;
	КонецЕсли;
	
	Если ПроведениеСервер.ИспользуетсяОтложенноеПроведение(Реквизиты.Организация, Реквизиты.Период)
	   И НЕ ЭтоОтложенноеПроведение
	   И Реквизиты.ВалютаВзаиморасчетов = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета()
	   И НЕ УчетВзаиморасчетов.ЭтоВидДоговораРасчетыПоКомиссии(Реквизиты.ВидДоговора) Тогда
		// При включенном отложенном проведении в момент оперативного проведения остатки по рублевым взаиморасчетам не получаем,
		// они будут актуализированы при выполнении отложенных расчетов.
		Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыДвиженияВыделениеАванса(ТаблицаВзаиморасчеты, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
	
	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	ПрименениеПБУ18 		= УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период);
	
	ДтКтРасчетов = "Дт"; // при выделении аванса в Корректировке реализации - НаправлениеДвижения всегда "Поступление"
	ДтКтАвансов = "Кт";

	// Для проводок по вспомогательным счетам задолженности УСН
	ДтКтУСН     = ?(Реквизиты.ЭтоВозврат, "Дт", ДтКтАвансов);
	ЗнакСуммУСН = ?(Реквизиты.ЭтоВозврат, -1, 1);
	
	Проводки = Движения.Хозрасчетный;

	Для каждого СтрокаВзаиморасчетов Из Параметры.Взаиморасчеты Цикл

		Если СтрокаВзаиморасчетов.ДокументРасчетов = Реквизиты.Регистратор Тогда

			Проводка = Проводки.Добавить();

			Проводка.Период      = Реквизиты.период;
			Проводка.Организация = Реквизиты.Организация;
			Проводка.Содержание  = "Выделение аванса покупателя";
			Проводка.Сумма       = СтрокаВзаиморасчетов.СуммаРуб;

			СчетАванса = ?(ЗначениеЗаполнено(Реквизиты.СчетУчетаРасчетовПоАвансам),
				Реквизиты.СчетУчетаРасчетовПоАвансам,
				Реквизиты.СчетУчетаРасчетовСКонтрагентом);

			Проводка.СчетДт = Реквизиты.СчетУчетаРасчетовСКонтрагентом;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Контрагенты", Реквизиты.Контрагент);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Договоры", Реквизиты.ДоговорКонтрагента);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ДокументыРасчетовСКонтрагентами", Реквизиты.ДокументРеализацииСсылка);

			Проводка.СчетКт = СчетАванса;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Контрагенты", Реквизиты.Контрагент);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Договоры", Реквизиты.ДоговорКонтрагента);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ДокументыРасчетовСКонтрагентами", Реквизиты.Регистратор);
			
			СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);
			СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);
			Если СвойстваСчетаДт.Валютный Тогда
				Проводка.ВалютаДт        = Реквизиты.ВалютаВзаиморасчетов;
				Проводка.ВалютнаяСуммаДт = СтрокаВзаиморасчетов.СуммаВзаиморасчетов;
			КонецЕсли;
			Если СвойстваСчетаКт.Валютный Тогда
				Проводка.ВалютаКт        = Реквизиты.ВалютаВзаиморасчетов;
				Проводка.ВалютнаяСуммаКт = СтрокаВзаиморасчетов.СуммаВзаиморасчетов;
			КонецЕсли;

			Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
				Проводка.ПодразделениеДт = Реквизиты.Подразделение;
			КонецЕсли;
			Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
				Проводка.ПодразделениеКт = Реквизиты.Подразделение;
			КонецЕсли;
			
			Если ОтражатьВНалоговомУчете Тогда
				НалоговыйУчет.ЗаполнитьНалоговыеСуммыПроводки(СтрокаВзаиморасчетов.СуммаРуб, СтрокаВзаиморасчетов.СуммаРуб,,,,,
					Проводка, ПрименениеПБУ18);
 			КонецЕсли;

		КонецЕсли;

		// Проводки по вспомогательным счетам задолженности УСН

		Если Реквизиты.УчитыватьЗадолженностьУСН ИЛИ Реквизиты.УчитыватьЗадолженностьУСНПатент Тогда

			ФормироватьПроводкиУСН			= Реквизиты.УчитыватьЗадолженностьУСН;
			ФормироватьПроводкиУСНПатент	= Реквизиты.УчитыватьЗадолженностьУСНПатент; 

			// Проводка по вспомогательному счету УСН по задолженности ЕНВД

			Если ФормироватьПроводкиУСН И (СтрокаВзаиморасчетов.СуммаВзаиморасчетовЕНВД <> 0) Тогда

				Проводка = Движения.Хозрасчетный.Добавить();

				Проводка.Период       = Реквизиты.Период;
				Проводка.Организация  = Реквизиты.Организация;
				Проводка.Содержание   = "Расчеты по деятельности ЕНВД";

				Если СтрокаВзаиморасчетов.РасчетыВВалюте Тогда
					Проводка["Счет" + ДтКтУСН]          = ПланыСчетов.Хозрасчетный.УСНРасчетыСПокупателямиВалЕНВД;
					Проводка["Валюта" + ДтКтУСН]        = СтрокаВзаиморасчетов.ВалютаВзаиморасчетов;
					Проводка["ВалютнаяСумма" + ДтКтУСН] = СтрокаВзаиморасчетов.СуммаВзаиморасчетовЕНВД * ЗнакСуммУСН;
				Иначе
					Проводка["Счет" + ДтКтУСН]          = ПланыСчетов.Хозрасчетный.УСНРасчетыСПокупателямиЕНВД;
				Конецесли;

				БухгалтерскийУчет.УстановитьСубконто(Проводка["Счет" + ДтКтУСН], Проводка["Субконто" + ДтКтУСН], "Контрагенты", Реквизиты.Контрагент);
				БухгалтерскийУчет.УстановитьСубконто(Проводка["Счет" + ДтКтУСН], Проводка["Субконто" + ДтКтУСН], "Договоры", Реквизиты.ДоговорКонтрагента);
				БухгалтерскийУчет.УстановитьСубконто(Проводка["Счет" + ДтКтУСН], Проводка["Субконто" + ДтКтУСН], "ДокументыРасчетовСКонтрагентами", СтрокаВзаиморасчетов.ДокументРасчетов);

				СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка["Счет" + ДтКтУСН]);
				Если СвойстваСчета.УчетПоПодразделениям Тогда
					Проводка["Подразделение" + ДтКтУСН] = Реквизиты.Подразделение;
				КонецЕсли;

				Проводка.Сумма = СтрокаВзаиморасчетов.СуммаРуб_ЕНВД * ЗнакСуммУСН;

			КонецЕсли;

			// Проводка по вспомогательному счету задолженности по деятельности на патенте

			Если ФормироватьПроводкиУСНПатент И (СтрокаВзаиморасчетов.СуммаВзаиморасчетовПатент <> 0) Тогда
				
				Проводка = Движения.Хозрасчетный.Добавить();
			
				Проводка.Период       = Реквизиты.Период;
				Проводка.Организация  = Реквизиты.Организация;
				Проводка.Содержание   = ?(Реквизиты.Период < УчетПСН.ДатаНачалаДействияПатентнойСистемы(),
					НСтр("ru = 'Расчеты по деятельности УСН на патенте'"),
					НСтр("ru = 'Расчеты по деятельности на патенте'"));
	
				Если СтрокаВзаиморасчетов.РасчетыВВалюте Тогда
					Проводка["Счет" + ДтКтУСН]          = ПланыСчетов.Хозрасчетный.УСНРасчетыСПокупателямиВалПатент;
					Проводка["Валюта" + ДтКтУСН]        = СтрокаВзаиморасчетов.ВалютаВзаиморасчетов;
					Проводка["ВалютнаяСумма" + ДтКтУСН] = СтрокаВзаиморасчетов.СуммаВзаиморасчетовПатент * ЗнакСуммУСН;
				Иначе
					Проводка["Счет" + ДтКтУСН]          = ПланыСчетов.Хозрасчетный.УСНРасчетыСПокупателямиПатент;
				Конецесли;
				
				БухгалтерскийУчет.УстановитьСубконто(Проводка["Счет" + ДтКтУСН], Проводка["Субконто" + ДтКтУСН], "Контрагенты", Реквизиты.Контрагент);
				БухгалтерскийУчет.УстановитьСубконто(Проводка["Счет" + ДтКтУСН], Проводка["Субконто" + ДтКтУСН], "Договоры", Реквизиты.ДоговорКонтрагента);
				БухгалтерскийУчет.УстановитьСубконто(Проводка["Счет" + ДтКтУСН], Проводка["Субконто" + ДтКтУСН], "ДокументыРасчетовСКонтрагентами", СтрокаВзаиморасчетов.ДокументРасчетов);

				СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка["Счет" + ДтКтУСН]);
				Если СвойстваСчета.УчетПоПодразделениям Тогда
					Проводка["Подразделение" + ДтКтУСН] = Реквизиты.Подразделение;
				КонецЕсли;

				Проводка.Сумма = СтрокаВзаиморасчетов.СуммаРуб_Патент * ЗнакСуммУСН;
			
			КонецЕсли;

			// Проводка по вспомогательному счету УСН по задолженности перед комитентом

			Если ФормироватьПроводкиУСН И (СтрокаВзаиморасчетов.СуммаВзаиморасчетовКомитента <> 0) Тогда

				Проводка = Движения.Хозрасчетный.Добавить();

				Проводка.Период       = Реквизиты.Период;
				Проводка.Организация  = Реквизиты.Организация;
				Проводка.Содержание   = "Расчеты за товары и услуги комитента";

				Если СтрокаВзаиморасчетов.РасчетыВВалюте Тогда
					Проводка["Счет" + ДтКтУСН]          = ПланыСчетов.Хозрасчетный.УСНРасчетыСПокупателямиВалКомитент;
					Проводка["Валюта" + ДтКтУСН]        = Реквизиты.ВалютаВзаиморасчетов;
					Проводка["ВалютнаяСумма" + ДтКтУСН] = СтрокаВзаиморасчетов.СуммаВзаиморасчетовКомитента * ЗнакСуммУСН;
				Иначе
					Проводка["Счет" + ДтКтУСН]          = ПланыСчетов.Хозрасчетный.УСНРасчетыСПокупателямиКомитент;
				Конецесли;

				БухгалтерскийУчет.УстановитьСубконто(Проводка["Счет" + ДтКтУСН], Проводка["Субконто" + ДтКтУСН], "Контрагенты", Реквизиты.Контрагент);
				БухгалтерскийУчет.УстановитьСубконто(Проводка["Счет" + ДтКтУСН], Проводка["Субконто" + ДтКтУСН], "Договоры", Реквизиты.ДоговорКонтрагента);
				БухгалтерскийУчет.УстановитьСубконто(Проводка["Счет" + ДтКтУСН], Проводка["Субконто" + ДтКтУСН], "ДокументыРасчетовСКонтрагентами", СтрокаВзаиморасчетов.ДокументРасчетов);

				СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка["Счет" + ДтКтУСН]);
				Если СвойстваСчета.УчетПоПодразделениям Тогда
					Проводка["Подразделение" + ДтКтУСН] = Реквизиты.Подразделение;
				КонецЕсли;

				Проводка.Сумма = СтрокаВзаиморасчетов.СуммаРуб_Комитента * ЗнакСуммУСН;

			КонецЕсли;

			// Проводка по вспомогательному счету задолженности по деятельности на торговом сборе

			Если ФормироватьПроводкиУСН И (СтрокаВзаиморасчетов.СуммаВзаиморасчетовТорговыйСбор <> 0) Тогда

				Проводка = Движения.Хозрасчетный.Добавить();

				Проводка.Период       = Реквизиты.Период;
				Проводка.Организация  = Реквизиты.Организация;
				Проводка.Содержание   = "Расчеты по деятельности на торговом сборе";

				Если СтрокаВзаиморасчетов.РасчетыВВалюте Тогда
					Проводка["Счет" + ДтКтУСН]          = ПланыСчетов.Хозрасчетный.УСНРасчетыСПокупателямиВалТорговыйСбор;
					Проводка["Валюта" + ДтКтУСН]        = СтрокаВзаиморасчетов.ВалютаВзаиморасчетов;
					Проводка["ВалютнаяСумма" + ДтКтУСН] = СтрокаВзаиморасчетов.СуммаВзаиморасчетовТорговыйСбор * ЗнакСуммУСН;
				Иначе
					Проводка["Счет" + ДтКтУСН]          = ПланыСчетов.Хозрасчетный.УСНРасчетыСПокупателямиТорговыйСбор;
				Конецесли;

				БухгалтерскийУчет.УстановитьСубконто(Проводка["Счет" + ДтКтУСН], Проводка["Субконто" + ДтКтУСН], "Контрагенты", Реквизиты.Контрагент);
				БухгалтерскийУчет.УстановитьСубконто(Проводка["Счет" + ДтКтУСН], Проводка["Субконто" + ДтКтУСН], "Договоры", Реквизиты.ДоговорКонтрагента);
				БухгалтерскийУчет.УстановитьСубконто(Проводка["Счет" + ДтКтУСН], Проводка["Субконто" + ДтКтУСН], "ДокументыРасчетовСКонтрагентами", СтрокаВзаиморасчетов.ДокументРасчетов);

				СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка["Счет" + ДтКтУСН]);
				Если СвойстваСчета.УчетПоПодразделениям Тогда
					Проводка["Подразделение" + ДтКтУСН] = Реквизиты.Подразделение;
				КонецЕсли;

				Проводка.Сумма = СтрокаВзаиморасчетов.СуммаРуб_ТорговыйСбор * ЗнакСуммУСН;

			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

// Подготовка параметров для процедуры СформироватьДвиженияВыделениеАванса
//
// Параметры
//  ТаблицаВзаиморасчетов - <ТаблицаЗначений> - данные документа, по которым определяется, какие движения будут сформированы.
//                          Создается функцией ПодготовитьТаблицуВзаиморасчетовЗачетАвансов
//  ТаблицаРеквизиты      - <ТаблицаЗначений> - реквизиты, необходимые для формирования движений.
//
// Возвращаемое значение:
//   <Структура> - структура из 2 таблиц: Взаиморасчеты, Реквизиты
//
Функция ПодготовитьПараметрыДвиженияВыделениеАванса(ТаблицаВзаиморасчетов, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"                    // <Дата> - период движений - дата документа
	+ "Регистратор,"               // <ДокументСсылка>
	+ "Организация,"               // <СправочникСсылка.Организации>
	+ "УчитыватьЗадолженностьУСН," // <Булево> - Истина для расчетов с покупателями по организации, применяющей УСН
	+ "УчитыватьЗадолженностьУСНПатент," // <Булево> - Истина для расчетов с покупателями по организации, применяющей УСН патент
	+ "СпособЗачетаАвансов,"
	+ "СчетУчетаРасчетовПоАвансам,"
	+ "СчетУчетаРасчетовСКонтрагентом,"
	+ "ДокументРеализацииСсылка,"
	+ "Контрагент,"                   // <СправочникСсылка.Контрагенты>
	+ "ДоговорКонтрагента,"           // <СправочникСсылка.ДоговорыКонтрагентов>
	+ "ВалютаВзаиморасчетов,"
	+ "ВидДоговора,"
	+ "Подразделение,"
	+ "ЭтоВозврат";                // <Булево> - Истина при возврате материальных ценностей от покупателя;

	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизиты, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Взаиморасчеты

	СписокОбязательныхКолонок = ""
		+ "ДокументРасчетов,"                // <ДокументСсылка>
		+ "РасчетыВВалюте,"                  // <Булево> - Истина для договора с расчетами в любой валюте, кроме рублей (в т.ч и в условных единицах)
		+ "ВалютаВзаиморасчетов,"            // <Булево> - Истина для договора с расчетами в любой валюте, кроме рублей (в т.ч и в условных единицах)
		+ "СуммаВзаиморасчетов,"             // <Число,15,2> - сумма в валюте взаиморасчетов
		+ "СуммаРуб,"                        // <Число,15,2> - сумма в рублях (для валютных расчетов - по курсу на дату документа)
		+ "СуммаВзаиморасчетовЕНВД,"         // <Число,15,2> - сумма в валюте расчетов по договору по деятельности ЕНВД
		+ "СуммаРуб_ЕНВД,"                   // <Число,15,2> - сумма в рублях по деятельности ЕНВД
		+ "СуммаВзаиморасчетовПатент,"       // <Число,15,2> - сумма в валюте расчетов по договору по деятельности на патенте
		+ "СуммаРуб_Патент,"                 // <Число,15,2> - сумма в рублях по деятельности на патенте
		+ "СуммаВзаиморасчетовКомитента,"    // <Число,15,2> - сумма в валюте расчетов по договору при реализации товаров и услуг комитентов
		+ "СуммаРуб_Комитента,"              // <Число,15,2> - сумма в рублях при реализации товаров и услуг комитентов
		+ "СуммаВзаиморасчетовТорговыйСбор," // <Число,15,2> - сумма в валюте расчетов по договору по деятельности на патенте
		+ "СуммаРуб_ТорговыйСбор";           // <Число,15,2> - сумма в рублях по деятельности на патенте
		
		Параметры.Вставить("Взаиморасчеты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаВзаиморасчетов, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Функция ДоступнаКорректировкаБУиНУ(ДокументРеализации) Экспорт
	
	Если ТипЗнч(ДокументРеализации) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументРеализации, 
			Новый Структура("ВидОперации,ДоговорКонтрагента,ВидДоговора", 
			"ВидОперации", "ДоговорКонтрагента", "ДоговорКонтрагента.ВидДоговора"));
		Возврат (РеквизитыДокумента.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.ПродажаКомиссия
					ИЛИ РеквизитыДокумента.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.ПередачаТоваров
					ИЛИ РеквизитыДокумента.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Товары
					ИЛИ РеквизитыДокумента.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Услуги
					ИЛИ РеквизитыДокумента.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.Оборудование)
			И ЗначениеЗаполнено(РеквизитыДокумента.ДоговорКонтрагента)
			И (РеквизитыДокумента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем ИЛИ РеквизитыДокумента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером);
	ИначеЕсли ТипЗнч(ДокументРеализации) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		Возврат Истина;
	ИначеЕсли ТипЗнч(ДокументРеализации) = Тип("ДокументСсылка.АктОбОказанииПроизводственныхУслуг") Тогда
		Возврат Истина;
	ИначеЕсли ТипЗнч(ДокументРеализации) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") Тогда
		Возврат Истина;
	ИначеЕсли ТипЗнч(ДокументРеализации) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументРеализации, "КорректироватьБУиНУ");
	Иначе
		Возврат Ложь;
	КонецЕсли;
			
КонецФункции

Процедура УстановитьСчетаУчетаРасчетов(ДокументКорректировка, ДокументРеализации) Экспорт
	Исключения = Новый ОписаниеТипов("ДокументСсылка.ДокументРасчетовСКонтрагентом, ДокументСсылка.СчетФактураВыданный, ДокументСсылка.ОтражениеНачисленияНДС");
	Если НЕ Исключения.СодержитТип(ТипЗнч(ДокументРеализации)) Тогда
		ДокументКорректировка.СчетУчетаРасчетовСКонтрагентом = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументРеализации,
			"СчетУчетаРасчетовСКонтрагентом");
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьПоследнийКорректирующийДокумент(Ссылка, ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("ЭтотДокумент", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка КАК Ссылка,
	|	КорректировкаРеализации.Дата КАК Дата
	|ПОМЕСТИТЬ ВТ_КорректирующиеДокументы
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|ГДЕ
	|	КорректировкаРеализации.ИсправляемыйДокументРеализации = &Ссылка
	|	И КорректировкаРеализации.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение)
	|	И КорректировкаРеализации.Ссылка <> &ЭтотДокумент
	|	И КорректировкаРеализации.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВозвратТоваровОтПокупателяТовары.Ссылка,
	|	ВозвратТоваровОтПокупателяТовары.Ссылка.Дата
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	|ГДЕ
	|	ВозвратТоваровОтПокупателяТовары.ИсправляемыйДокумент = &Ссылка
	|	И ВозвратТоваровОтПокупателяТовары.Ссылка.Проведен
	|	И ВозвратТоваровОтПокупателяТовары.Ссылка.ПокупателюВыставляетсяКорректировочныйСчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВТ_КорректирующиеДокументы.Ссылка КАК Ссылка
	|ИЗ
	|	ВТ_КорректирующиеДокументы КАК ВТ_КорректирующиеДокументы
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_КорректирующиеДокументы.Дата УБЫВ";
	
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		Возврат Результат.Ссылка;
	Иначе
		Возврат ДокументСсылка;
	КонецЕсли;
		
КонецФункции

Функция ДанныеЗаполненияПоДокументу(Объект) Экспорт
	
	ДокументРеализации = Объект.ДокументРеализации;
	
	НомераТаблиц = Новый Структура;
	НеобходимоПроверитьПрослеживаемостьТоваров = Ложь;
	
	Если ТипЗнч(ДокументРеализации) = Тип("ДокументСсылка.РеализацияТоваровУслуг")
		ИЛИ ТипЗнч(ДокументРеализации) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		
		ИмяВидаДокумента = ДокументРеализации.Метаданные().Имя;
		
		ТекстЗапроса = ТекстЗапросаДанныеЗаполненияПоРеализации(ИмяВидаДокумента, НомераТаблиц);
		
	ИначеЕсли ТипЗнч(ДокументРеализации) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		
		НеобходимоПроверитьПрослеживаемостьТоваров = ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров")
			И НЕ ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(
											ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ИсходныйДокументРеализации, "Дата"));
		
		ТекстЗапроса = ТекстЗапросаДанныеЗаполненияПоВозвратуОтПокупателя(НомераТаблиц);
		
		
	ИначеЕсли ТипЗнч(ДокументРеализации) = Тип("ДокументСсылка.АктОбОказанииПроизводственныхУслуг") Тогда
		
		ТекстЗапроса = ТекстЗапросаДанныеЗаполненияПоАктуОказанияПроизводственныхУслуг(НомераТаблиц);
		
	ИначеЕсли ТипЗнч(ДокументРеализации) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") Тогда
		
		Если ЗначениеЗаполнено(ДокументРеализации) 
			И Документы.ОтчетКомиссионераОПродажах.ДокументСозданПоПравиламПостановления914(ДокументРеализации) Тогда
			
			ТекстЗапроса = ТекстЗапросаДанныеЗаполненияПоОтчетуКомиссионера(НомераТаблиц);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДанныеЗаполнения = Новый Структура;
	
	Если НЕ ПустаяСтрока(ТекстЗапроса) Тогда
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("Ссылка", Объект.ДокументРеализации);
		Запрос.УстановитьПараметр("НеобходимоПроверитьПрослеживаемостьТоваров", НеобходимоПроверитьПрослеживаемостьТоваров);
		
		Результат = Запрос.ВыполнитьПакет();
		Для каждого НомерТаблицы Из НомераТаблиц Цикл
			Если НомерТаблицы.Значение <> Неопределено Тогда
				ДанныеЗаполнения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли;
	
	Возврат ДанныеЗаполнения;
	
КонецФункции

Процедура ПроставитьСторноТаблиц(ТаблицаТовары, ТаблицаСобственныеТоварыУслуги, ТаблицаТоварыУслугиКомитентов, ТаблицаРеализованныеТоварыКомитентов, ТаблицаРеквизиты) Экспорт
									
	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = ТаблицаРеквизиты[0];
	
	СтруктураПолейДляСторно = Новый Структура("Количество, Себестоимость, СуммаСписания, СуммаСписанияНУ,
		|СуммаСписанияВР, СуммаСписанияПР, СуммаКорСписанияНУ, СуммаКорСписанияВР, СуммаКорСписанияПР");

	МножительСписания	= -1;
	УчетТоваров.ПроставитьСторноТаблицы(ТаблицаТовары, СтруктураПолейДляСторно, МножительСписания);
	
	СтруктураПолейДляСторно = Новый Структура("Количество, СуммаВзаиморасчетов, СуммаРуб, СуммаНДСРуб,
		|СуммаБУ, СуммаНУ, СуммаСписания, СуммаСписанияНУ, СуммаРасчетовСКомитентом, СуммаПоступленияОтКомитента");

	УчетТоваров.ПроставитьСторноТаблицы(ТаблицаСобственныеТоварыУслуги, СтруктураПолейДляСторно, -1);
	
	УчетТоваров.ПроставитьСторноТаблицы(ТаблицаТоварыУслугиКомитентов, СтруктураПолейДляСторно, -1);
	
	СтруктураПолейДляСторно = Новый Структура("Количество, Выручка, СуммаПоступления, СуммаНДС");
	
	УчетТоваров.ПроставитьСторноТаблицы(ТаблицаРеализованныеТоварыКомитентов, СтруктураПолейДляСторно, -1);
	
КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Контрагент");
	
	Возврат Результат;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Счет-фактура
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиСчетовФактур";
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ЭтоУниверсальныйДокумент", Ложь);
	
	// Акт об оказании услуг
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Акт";
	КомандаПечати.Представление = НСтр("ru = 'Акт об оказании услуг'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ЭтоУниверсальныйДокумент", Ложь);
	
	// Товарная накладная (ТОРГ-12) с услугами
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТОРГ12";
	КомандаПечати.Представление = НСтр("ru = 'Товарная накладная (ТОРГ-12) с услугами'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ЭтоУниверсальныйДокумент", Ложь);

	// Товарная накладная (ТОРГ-12)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТОРГ12_БезУслуг";
	КомандаПечати.Представление = НСтр("ru = 'Товарная накладная (ТОРГ-12)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ЭтоУниверсальныйДокумент", Ложь);
	
	// Соглашение об изменение стоимости
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СоглашениеОбИзмененииСтоимости";
	КомандаПечати.Представление = НСтр("ru = 'Соглашение об изменении стоимости'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Универсальный передаточный документ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "УниверсальныйПередаточныйДокумент";
	КомандаПечати.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД)'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиУниверсальныхПередаточныхДокументов";
	
	// Универсальный корректировочный документ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "УниверсальныйКорректировочныйДокумент";
	КомандаПечати.Представление = НСтр("ru = 'Универсальный корректировочный документ (УКД)'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиУниверсальныхКорректировочныхДокументов";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Корректировка реализации""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Акт") Тогда
		
		ТаблицаСведенийАктаОбОказанииУслуг = ПолучитьТаблицуСведенийАктаОбОказанииУслуг(МассивОбъектов);
		
		ПараметрыПечати.Вставить("ВидДокументаПечати",  "КорректировкаРеализации");
		ПараметрыПечати.Вставить("ИмяПараметровПечати", "ПАРАМЕТРЫ_ПЕЧАТИ_КорректировкаРеализации_Акт");
		ПараметрыПечати.Вставить("ИмяМакетаПечати",     "Документ.КорректировкаРеализации.ПФ_MXL_Акт");
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Акт", "Акт об оказании услуг", 
			ПечатьТорговыхДокументов.ПечатьАктаОбОказанииУслуг(ТаблицаСведенийАктаОбОказанииУслуг, ОбъектыПечати, ПараметрыПечати),, 
				"Документ.КорректировкаРеализации.ПФ_MXL_Акт");
				
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ12") Тогда
		
		ВключатьУслуги = Истина;
		ТаблицаСведенийТОРГ12 = ПолучитьТаблицуСведенийТОРГ12(МассивОбъектов, ВключатьУслуги);
		ПараметрыПечати.Вставить("ИмяПараметровПечати", "ПАРАМЕТРЫ_ПЕЧАТИ_КорректировкаРеализации_ТОРГ12");
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТОРГ12", "ТОРГ-12 (Товарная накладная с услугами)", 
			ПечатьТорговыхДокументов.ПечатьТОРГ12(ТаблицаСведенийТОРГ12, ОбъектыПечати, ПараметрыПечати),,"ОбщийМакет.ПФ_MXL_ТОРГ12");
			
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ12_БезУслуг") Тогда
		
		ВключатьУслуги = Ложь;
		ТаблицаСведенийТОРГ12 = ПолучитьТаблицуСведенийТОРГ12(МассивОбъектов, ВключатьУслуги);
		ПараметрыПечати.Вставить("ИмяПараметровПечати", "ПАРАМЕТРЫ_ПЕЧАТИ_КорректировкаРеализации_ТОРГ12");
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТОРГ12_БезУслуг", "ТОРГ-12 (Товарная накладная)",
			ПечатьТорговыхДокументов.ПечатьТОРГ12(ТаблицаСведенийТОРГ12, ОбъектыПечати, ПараметрыПечати),,"ОбщийМакет.ПФ_MXL_ТОРГ12");
			
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СоглашениеОбИзмененииСтоимости") Тогда
		
		ТаблицаСведенийСоглашенияОбИзмененииСтоимости = ПолучитьТаблицуСведенийСоглашенияОбИзмененииСтоимости(МассивОбъектов);
		ПараметрыПечати.Вставить("ИмяПараметровПечати", "ПАРАМЕТРЫ_ПЕЧАТИ_КорректировкаРеализации_СоглашениеОбИзмененииСтоимости");
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СоглашениеОбИзмененииСтоимости", "Соглашение об изменении стоимости", 
			ПечатьТорговыхДокументов.ПечатьСоглашенияОбИзмененииСтоимости(ТаблицаСведенийСоглашенияОбИзмененииСтоимости, ОбъектыПечати, ПараметрыПечати),,
				"ОбщийМакет.ПФ_MXL_СоглашениеОбИзмененииСтоимости");
				
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	
	
КонецПроцедуры

Функция ПолучитьТекстЗапросаДляФормированияТаблицыСведенийТОРГ12()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор В(&СписокДокументов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтрокиДокумента,
	|	ТабличнаяЧастьДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка КАК Ссылка,
	|	КорректировкаРеализации.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	КорректировкаРеализации.Дата КАК ДатаДокумента
	|ПОМЕСТИТЬ ДокументыДляПечати
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|ГДЕ
	|	КорректировкаРеализации.Ссылка В(&СписокДокументов)
	|	И КорректировкаРеализации.ВидОперации = &ВидОперации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка КАК Документ,
	|	КорректировкаРеализации.Дата КАК ДатаДляПолученияСведений,
	|	КорректировкаРеализации.НомерИсходногоДокумента КАК НомерДокумента,
	|	КорректировкаРеализации.ДатаИсходногоДокумента КАК ДатаДокумента,
	|	КорректировкаРеализации.НомерИсправления КАК НомерИсправления,
	|	КорректировкаРеализации.Дата КАК ДатаИсправления,
	|	КорректировкаРеализации.ДатаИсходногоДокумента КАК ДатаПодписанияДокумента,
	|	КорректировкаРеализации.Организация КАК Организация,
	|	КорректировкаРеализации.Организация КАК Поставщик,
	|	КорректировкаРеализации.Контрагент КАК Покупатель,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализации.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА КорректировкаРеализации.Организация
	|		ИНАЧЕ КорректировкаРеализации.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализации.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА КорректировкаРеализации.Контрагент
	|		ИНАЧЕ КорректировкаРеализации.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	КорректировкаРеализации.БанковскийСчетОрганизации КАК БанковскийСчетПродавца,
	|	КорректировкаРеализации.АдресДоставки КАК АдресДоставки,
	|	КорректировкаРеализации.ДоговорКонтрагента КАК Договор,
	|	КорректировкаРеализации.ДоговорКонтрагента.ГосударственныйКонтракт КАК ГосударственныйКонтрактСсылка,
	|	КорректировкаРеализации.ДоговорКонтрагента.ГосударственныйКонтракт.Код КАК ГосударственныйКонтракт,
	|	КорректировкаРеализации.ДоговорКонтрагента.Представление КАК Основание,
	|	КорректировкаРеализации.ДоговорКонтрагента.Номер КАК ОснованиеНомер,
	|	КорректировкаРеализации.ДоговорКонтрагента.Дата КАК ОснованиеДата,
	|	КорректировкаРеализации.ДоговорКонтрагента.УчетАгентскогоНДСПокупателем КАК НДСИсчисляетсяНалоговымАгентом,
	|	КорректировкаРеализации.Руководитель КАК Руководитель,
	|	КорректировкаРеализации.ГлавныйБухгалтер КАК ГлавныйБухгалтер,
	|	КорректировкаРеализации.ОтпускПроизвел КАК Кладовщик,
	|	КорректировкаРеализации.ЗаРуководителяНаОсновании КАК ЗаРуководителяНаОсновании,
	|	КорректировкаРеализации.ЗаГлавногоБухгалтераНаОсновании КАК ЗаГлавногоБухгалтераНаОсновании,
	|	КорректировкаРеализации.ДокументРеализации КАК ДокументОснование,
	|	КорректировкаРеализации.ИсправляемыйДокументРеализации КАК ИсправляемыйДокументРеализации,
	|	КорректировкаРеализации.ВидОперации КАК ВидОперации,
	|	КорректировкаРеализации.ВалютаДокумента КАК ВалютаДокумента,
	|	КорректировкаРеализации.ПодразделениеОрганизации КАК Подразделение
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|ГДЕ
	|	КорректировкаРеализации.Ссылка В
	|			(ВЫБРАТЬ
	|				ДокументыДляПечати.Ссылка
	|			ИЗ
	|				ДокументыДляПечати КАК ДокументыДляПечати)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка КАК Документ,
	|	ДокументыДляПечати.ДатаДокумента КАК ДатаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары) КАК ТабличнаяЧасть,
	|	1 КАК ПорядокТабличнойЧасти,
	|	КорректировкаРеализации.НомерСтроки КАК НомерСтроки,
	|	КорректировкаРеализации.Номенклатура КАК Товар,
	|	КорректировкаРеализации.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА КорректировкаРеализации.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА КорректировкаРеализации.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ КАК ТоварКод,
	|	КорректировкаРеализации.Количество КАК Количество,
	|	ЕСТЬNULL(КорректировкаРеализацииНоменклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)) КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(КорректировкаРеализацииНоменклатура.ЕдиницаИзмерения.Код, """") КАК ЕдиницаИзмеренияКод,
	|	ЕСТЬNULL(КорректировкаРеализацииНоменклатура.ЕдиницаИзмерения.Наименование, """") КАК ЕдиницаИзмеренияНаименование,
	|	0 КАК КоличествоВОдномМесте,
	|	ВЫБОР
	|		КОГДА ДокументыДляПечати.СуммаВключаетНДС
	|			ТОГДА КорректировкаРеализации.Сумма - КорректировкаРеализации.СуммаНДС
	|		ИНАЧЕ КорректировкаРеализации.Сумма
	|	КОНЕЦ КАК СуммаБезНДС,
	|	КорректировкаРеализации.СуммаНДС КАК СуммаНДС,
	|	КорректировкаРеализации.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0) КАК ВсегоВРублях,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0) КАК НДСВРублях,
	|	ВЫБОР
	|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СуществуютЗаписиРублевыхСумм
	|ИЗ
	|	ДокументыДляПечати КАК ДокументыДляПечати
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализации
	|		ПО ДокументыДляПечати.Ссылка = КорректировкаРеализации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК КорректировкаРеализацииНоменклатура
	|		ПО (КорректировкаРеализации.Номенклатура = КорректировкаРеализацииНоменклатура.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (КорректировкаРеализации.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (КорректировкаРеализации.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка,
	|	ДокументыДляПечати.ДатаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги),
	|	3,
	|	КорректировкаРеализации.НомерСтроки,
	|	КорректировкаРеализации.Номенклатура,
	|	ВЫБОР
	|		КОГДА НЕ КорректировкаРеализации.Содержание ПОДОБНО """"
	|			ТОГДА КорректировкаРеализации.Содержание
	|		КОГДА НЕ КорректировкаРеализации.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА КорректировкаРеализации.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ КорректировкаРеализации.Номенклатура.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА КорректировкаРеализации.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА КорректировкаРеализации.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ,
	|	КорректировкаРеализации.Количество,
	|	ЕСТЬNULL(КорректировкаРеализации.Номенклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)),
	|	ЕСТЬNULL(КорректировкаРеализации.Номенклатура.ЕдиницаИзмерения.Код, """"),
	|	ЕСТЬNULL(КорректировкаРеализации.Номенклатура.ЕдиницаИзмерения.Наименование, """"),
	|	0,
	|	ВЫБОР
	|		КОГДА ДокументыДляПечати.СуммаВключаетНДС
	|			ТОГДА КорректировкаРеализации.Сумма - КорректировкаРеализации.СуммаНДС
	|		ИНАЧЕ КорректировкаРеализации.Сумма
	|	КОНЕЦ,
	|	КорректировкаРеализации.СуммаНДС,
	|	КорректировкаРеализации.СтавкаНДС,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
	|	ВЫБОР
	|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|ИЗ
	|	ДокументыДляПечати КАК ДокументыДляПечати
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализации
	|		ПО ДокументыДляПечати.Ссылка = КорректировкаРеализации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (КорректировкаРеализации.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (КорректировкаРеализации.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|ГДЕ
	|	&ВключатьУслуги = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка,
	|	ДокументыДляПечати.ДатаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги),
	|	4,
	|	КорректировкаРеализации.НомерСтроки,
	|	КорректировкаРеализации.Номенклатура,
	|	ВЫБОР
	|		КОГДА НЕ КорректировкаРеализации.Содержание ПОДОБНО """"
	|			ТОГДА КорректировкаРеализации.Содержание
	|		КОГДА НЕ КорректировкаРеализации.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА КорректировкаРеализации.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ КорректировкаРеализации.Номенклатура.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА КорректировкаРеализации.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА КорректировкаРеализации.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ,
	|	КорректировкаРеализации.Количество,
	|	ЕСТЬNULL(КорректировкаРеализации.Номенклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)),
	|	ЕСТЬNULL(КорректировкаРеализации.Номенклатура.ЕдиницаИзмерения.Код, """"),
	|	ЕСТЬNULL(КорректировкаРеализации.Номенклатура.ЕдиницаИзмерения.Наименование, """"),
	|	0,
	|	ВЫБОР
	|		КОГДА ДокументыДляПечати.СуммаВключаетНДС
	|			ТОГДА КорректировкаРеализации.Сумма - КорректировкаРеализации.СуммаНДС
	|		ИНАЧЕ КорректировкаРеализации.Сумма
	|	КОНЕЦ,
	|	КорректировкаРеализации.СуммаНДС,
	|	КорректировкаРеализации.СтавкаНДС,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
	|	ВЫБОР
	|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|ИЗ
	|	ДокументыДляПечати КАК ДокументыДляПечати
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.АгентскиеУслуги КАК КорректировкаРеализации
	|		ПО ДокументыДляПечати.Ссылка = КорректировкаРеализации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (КорректировкаРеализации.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (КорректировкаРеализации.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги))
	|ГДЕ
	|	&ВключатьУслуги = ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Документ,
	|	ПорядокТабличнойЧасти,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьТаблицуСведенийТОРГ12(Знач СписокДокументов, Знач ВключатьУслуги) Экспорт
	
	ТаблицаСведений = ПечатьТорговыхДокументов.ПолучитьОписаниеТОРГ12();
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("СписокДокументов", СписокДокументов);
	Запрос.Параметры.Вставить("ВидОперации", Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());
	Запрос.Параметры.Вставить("ВключатьУслуги", ВключатьУслуги);
	
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияТаблицыСведенийТОРГ12();
		
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
	РеквизитыВалюты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Валюта, "Код, Наименование");
	
	Выборка = РезультатыЗапроса[2].Выбрать();
	СтрокиДокументов = РезультатыЗапроса[3].Выгрузить();
	СтрокиДокументов.Индексы.Добавить("Документ");
	
	Пока Выборка.Следующий() Цикл
		
		Если ТипЗнч(Выборка.ИсправляемыйДокументРеализации) <> Тип("ДокументСсылка.ВозвратТоваровПоставщику")
			И ТипЗнч(Выборка.ИсправляемыйДокументРеализации) <> Тип("ДокументСсылка.ПередачаТоваров")
			И ТипЗнч(Выборка.ИсправляемыйДокументРеализации) <> Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			Продолжить;
		КонецЕсли;
		
		СведенияОДокументе = ТаблицаСведений.Добавить();
		ЗаполнитьЗначенияСвойств(СведенияОДокументе, Выборка);
		СведенияОДокументе.Валюта             = Валюта;
		СведенияОДокументе.ВалютаКод          = РеквизитыВалюты.Код;
		СведенияОДокументе.ВалютаНаименование = РеквизитыВалюты.Наименование;
		
		ТаблицаДокумента = ПечатьТорговыхДокументов.ПолучитьОписаниеТаблицыТОРГ12();
		
		Отбор = Новый Структура("Документ", Выборка.Документ);
		СтрокиДокумента = СтрокиДокументов.НайтиСтроки(Отбор);
		
		Если Выборка.ВалютаДокумента <> Валюта
			И ЗначениеЗаполнено(Выборка.ИсправляемыйДокументРеализации) Тогда
			ДатаПолученияКурса = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.ИсправляемыйДокументРеализации, "Дата");
			КурсВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Выборка.ВалютаДокумента, ДатаПолученияКурса);
		Иначе
			КурсВалюты = Неопределено;
		КонецЕсли;
		
		Для Каждого Строка Из СтрокиДокумента Цикл
			СтрокаТаблицыДокумента = ТаблицаДокумента.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыДокумента, Строка);
			Если КурсВалюты <> Неопределено Тогда
				Если Строка.СуществуютЗаписиРублевыхСумм Тогда
					СтрокаТаблицыДокумента.СуммаНДС = Строка.НДСВРублях;
					СтрокаТаблицыДокумента.СуммаБезНДС = Строка.ВсегоВРублях - Строка.НДСВРублях;
				Иначе
					Кратность = ?(КурсВалюты.Кратность = 0, 1, КурсВалюты.Кратность);
					СтрокаТаблицыДокумента.СуммаНДС = Строка.СуммаНДС * КурсВалюты.Курс / Кратность;;
					СтрокаТаблицыДокумента.СуммаБезНДС = (Строка.СуммаБезНДС + Строка.СуммаНДС) * КурсВалюты.Курс / Кратность - СтрокаТаблицыДокумента.СуммаНДС;
				КонецЕсли;
			КонецЕсли;
			СтрокаТаблицыДокумента.СуммаСНДС = СтрокаТаблицыДокумента.СуммаБезНДС + СтрокаТаблицыДокумента.СуммаНДС;
			СтрокаТаблицыДокумента.Цена = ?(СтрокаТаблицыДокумента.Количество = 0, СтрокаТаблицыДокумента.СуммаБезНДС, СтрокаТаблицыДокумента.СуммаБезНДС / СтрокаТаблицыДокумента.Количество);
		КонецЦикла;
		
		СведенияОДокументе.ТаблицаДокумента = ТаблицаДокумента;
		
		ПорядокЗаполнения = Новый Структура("ЗаполнятьРуководителя, ЗаполнятьГлавногоБухгалтера, ЗаполнятьКладовщика");
		ПечатьТорговыхДокументов.ЗаполнитьДанныеОтветственныхЛиц(СведенияОДокументе, ПорядокЗаполнения);
	КонецЦикла;
	
	Возврат ТаблицаСведений;
	
КонецФункции
 
Функция ПолучитьТекстЗапросаДляФормированияТаблицыСведенийАктаОбОказанииУслуг()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор В(&СписокДокументов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтрокиДокумента,
	|	ТабличнаяЧастьДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка КАК Ссылка,
	|	КорректировкаРеализации.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	КорректировкаРеализации.Дата КАК ДатаДокумента
	|ПОМЕСТИТЬ ДокументыДляПечати
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|ГДЕ
	|	КорректировкаРеализации.Ссылка В(&СписокДокументов)
	|	И КорректировкаРеализации.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка КАК Документ,
	|	КорректировкаРеализации.Дата КАК ДатаДляПолученияСведений,
	|	КорректировкаРеализации.НомерИсходногоДокумента КАК НомерДокумента,
	|	КорректировкаРеализации.ДатаИсходногоДокумента КАК ДатаДокумента,
	|	КорректировкаРеализации.НомерИсправления КАК НомерИсправления,
	|	КорректировкаРеализации.Дата КАК ДатаИсправления,
	|	КорректировкаРеализации.Контрагент КАК Получатель,
	|	КорректировкаРеализации.ДоговорКонтрагента.ГосударственныйКонтракт КАК ГосударственныйКонтрактСсылка,
	|	КорректировкаРеализации.ДоговорКонтрагента.ГосударственныйКонтракт.Код КАК ГосударственныйКонтракт,
	|	ПРЕДСТАВЛЕНИЕ(КорректировкаРеализации.ДоговорКонтрагента) КАК ПредставлениеДоговора,
	|	КорректировкаРеализации.Организация КАК Поставщик,
	|	КорректировкаРеализации.Организация КАК Организация,
	|	КорректировкаРеализации.ПодразделениеОрганизации КАК Подразделение,
	|	КорректировкаРеализации.БанковскийСчетОрганизации КАК БанковскийСчетПродавца,
	|	КорректировкаРеализации.СуммаДокумента КАК СуммаДокумента,
	|	КорректировкаРеализации.ВалютаДокумента КАК Валюта,
	|	ЕСТЬNULL(КорректировкаРеализации.ВалютаДокумента.Код, """") КАК ВалютаКод,
	|	ЕСТЬNULL(КорректировкаРеализации.ВалютаДокумента.Наименование, """") КАК ВалютаНаименование,
	|	ЕСТЬNULL(КорректировкаРеализации.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	КорректировкаРеализации.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	КорректировкаРеализации.Руководитель КАК Руководитель,
	|	КорректировкаРеализации.ЗаРуководителяНаОсновании КАК ЗаРуководителяНаОсновании,
	|	КорректировкаРеализации.ДокументРеализации КАК ДокументОснование,
	|	КорректировкаРеализации.ИсправляемыйДокументРеализации КАК ИсправляемыйДокументРеализации
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|ГДЕ
	|	КорректировкаРеализации.Ссылка В
	|			(ВЫБРАТЬ
	|				ДокументыДляПечати.Ссылка
	|			ИЗ
	|				ДокументыДляПечати)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка КАК Документ,
	|	ДокументыДляПечати.ДатаДокумента КАК ДатаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги) КАК ТабличнаяЧасть,
	|	1 КАК ПорядокТабличнойЧасти,
	|	КорректировкаРеализации.НомерСтроки КАК НомерСтроки,
	|	КорректировкаРеализации.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА НЕ КорректировкаРеализации.Содержание ПОДОБНО """"
	|			ТОГДА КорректировкаРеализации.Содержание
	|		КОГДА НЕ КорректировкаРеализации.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА КорректировкаРеализации.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ КорректировкаРеализации.Номенклатура.Наименование
	|	КОНЕЦ КАК НоменклатураНаименование,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА КорректировкаРеализации.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА КорректировкаРеализации.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ КАК НоменклатураКод,
	|	ЕСТЬNULL(КорректировкаРеализации.Номенклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)) КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(КорректировкаРеализации.Номенклатура.ЕдиницаИзмерения.Код, """") КАК ЕдиницаИзмеренияКод,
	|	ЕСТЬNULL(КорректировкаРеализации.Номенклатура.ЕдиницаИзмерения.Наименование, """") КАК ЕдиницаИзмеренияНаименование,
	|	КорректировкаРеализации.Количество КАК Количество,
	|	КорректировкаРеализации.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ДокументыДляПечати.СуммаВключаетНДС
	|			ТОГДА КорректировкаРеализации.Сумма - КорректировкаРеализации.СуммаНДС
	|		ИНАЧЕ КорректировкаРеализации.Сумма
	|	КОНЕЦ КАК СуммаБезНДС,
	|	КорректировкаРеализации.СуммаНДС КАК СуммаНДС,
	|	КорректировкаРеализации.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0) КАК ВсегоВРублях,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0) КАК НДСВРублях,
	|	ВЫБОР
	|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СуществуютЗаписиРублевыхСумм,
	|	КорректировкаРеализации.Цена КАК Цена
	|ИЗ
	|	ДокументыДляПечати КАК ДокументыДляПечати
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализации
	|		ПО ДокументыДляПечати.Ссылка = КорректировкаРеализации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (КорректировкаРеализации.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (КорректировкаРеализации.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка,
	|	ДокументыДляПечати.ДатаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги),
	|	2,
	|	КорректировкаРеализации.НомерСтроки,
	|	КорректировкаРеализации.Номенклатура,
	|	ВЫБОР
	|		КОГДА НЕ КорректировкаРеализации.Содержание ПОДОБНО """"
	|			ТОГДА КорректировкаРеализации.Содержание
	|		КОГДА НЕ КорректировкаРеализации.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА КорректировкаРеализации.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ КорректировкаРеализации.Номенклатура.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА КорректировкаРеализации.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА КорректировкаРеализации.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ,
	|	ЕСТЬNULL(КорректировкаРеализации.Номенклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)),
	|	ЕСТЬNULL(КорректировкаРеализации.Номенклатура.ЕдиницаИзмерения.Код, """"),
	|	ЕСТЬNULL(КорректировкаРеализации.Номенклатура.ЕдиницаИзмерения.Наименование, """"),
	|	КорректировкаРеализации.Количество,
	|	КорректировкаРеализации.Сумма,
	|	ВЫБОР
	|		КОГДА ДокументыДляПечати.СуммаВключаетНДС
	|			ТОГДА КорректировкаРеализации.Сумма - КорректировкаРеализации.СуммаНДС
	|		ИНАЧЕ КорректировкаРеализации.Сумма
	|	КОНЕЦ,
	|	КорректировкаРеализации.СуммаНДС,
	|	КорректировкаРеализации.СтавкаНДС,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
	|	ВЫБОР
	|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	КорректировкаРеализации.Цена
	|ИЗ
	|	ДокументыДляПечати КАК ДокументыДляПечати
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.АгентскиеУслуги КАК КорректировкаРеализации
	|		ПО ДокументыДляПечати.Ссылка = КорректировкаРеализации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (КорректировкаРеализации.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (КорректировкаРеализации.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Документ,
	|	ПорядокТабличнойЧасти,
	|	НомерСтроки";

	Возврат ТекстЗапроса
	
КонецФункции

Функция ПолучитьТаблицуСведенийАктаОбОказанииУслуг(Знач СписокДокументов) Экспорт
	
	ТаблицаСведений = ПечатьТорговыхДокументов.ПолучитьОписаниеАктаОбОказанииУслуг();
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	Запрос = Новый Запрос();
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияТаблицыСведенийАктаОбОказанииУслуг();
	
	Запрос.УстановитьПараметр("СписокДокументов", СписокДокументов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);

	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка = РезультатыЗапроса[2].Выбрать();
	СтрокиДокументов = РезультатыЗапроса[3].Выгрузить();
	СтрокиДокументов.Индексы.Добавить("Документ");
	
	ВалютаРегУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	РеквизитыВалютыРегУчета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВалютаРегУчета, "Код, Наименование");
	
	Пока Выборка.Следующий() Цикл
		
		Если ТипЗнч(Выборка.ИсправляемыйДокументРеализации) <> Тип("ДокументСсылка.РеализацияТоваровУслуг")
			И ТипЗнч(Выборка.ИсправляемыйДокументРеализации) <> Тип("ДокументСсылка.АктОбОказанииПроизводственныхУслуг") Тогда
			Продолжить;
		КонецЕсли;
		
		СведенияОДокументе = ТаблицаСведений.Добавить();
		ЗаполнитьЗначенияСвойств(СведенияОДокументе, Выборка);
		
		Если Выборка.РасчетыВУсловныхЕдиницах Тогда
			СведенияОДокументе.Валюта             = ВалютаРегУчета;
			СведенияОДокументе.ВалютаКод          = РеквизитыВалютыРегУчета.Код;
			СведенияОДокументе.ВалютаНаименование = РеквизитыВалютыРегУчета.Наименование;
		КонецЕсли;
		
		ТаблицаДокумента = ПечатьТорговыхДокументов.ПолучитьОписаниеТаблицыАктаОбОказанииУслуг();
		
		Отбор = Новый Структура("Документ", Выборка.Документ);
		СтрокиДокумента = СтрокиДокументов.НайтиСтроки(Отбор);
		
		НуженПересчетВРубли = Ложь;
		Если Выборка.Валюта <> ВалютаРегламентированногоУчета
			И Выборка.РасчетыВУсловныхЕдиницах
			И ЗначениеЗаполнено(Выборка.ИсправляемыйДокументРеализации) Тогда
			ДатаПолученияКурса = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.ИсправляемыйДокументРеализации, "Дата");
			КурсВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Выборка.Валюта, ДатаПолученияКурса);
			НуженПересчетВРубли = Истина;
		КонецЕсли;
		
		Для Каждого Строка Из СтрокиДокумента Цикл
			СтрокаТаблицыДокумента = ТаблицаДокумента.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыДокумента, Строка);
			
			Если НуженПересчетВРубли Тогда
				Если Строка.СуществуютЗаписиРублевыхСумм Тогда
					СтрокаТаблицыДокумента.СуммаНДС = Строка.НДСВРублях;
					СтрокаТаблицыДокумента.СуммаБезНДС = Строка.ВсегоВРублях - Строка.НДСВРублях;
				Иначе
					Кратность = ?(КурсВалюты.Кратность = 0, 1, КурсВалюты.Кратность);
					СтрокаТаблицыДокумента.СуммаНДС = Строка.СуммаНДС * КурсВалюты.Курс / Кратность;;
					СтрокаТаблицыДокумента.СуммаБезНДС = (Строка.СуммаБезНДС + Строка.СуммаНДС) * КурсВалюты.Курс / Кратность - СтрокаТаблицыДокумента.СуммаНДС;
				КонецЕсли;
				СтрокаТаблицыДокумента.Сумма = СтрокаТаблицыДокумента.СуммаБезНДС + ?(Выборка.СуммаВключаетНДС, СтрокаТаблицыДокумента.СуммаНДС, 0);
				СтрокаТаблицыДокумента.Цена  = ?(СтрокаТаблицыДокумента.Количество=0, СтрокаТаблицыДокумента.Сумма, СтрокаТаблицыДокумента.Сумма / СтрокаТаблицыДокумента.Количество);
			КонецЕсли;
			СтрокаТаблицыДокумента.СуммаСНДС = СтрокаТаблицыДокумента.СуммаБезНДС + СтрокаТаблицыДокумента.СуммаНДС;
			
		КонецЦикла;
		
		СведенияОДокументе.ТаблицаДокумента = ТаблицаДокумента;
		
		ПечатьТорговыхДокументов.ЗаполнитьДанныеОтветственныхЛиц(СведенияОДокументе, Новый Структура("ЗаполнятьРуководителя"));
		
	КонецЦикла;
	
	Возврат ТаблицаСведений;
	
КонецФункции

Функция ПолучитьТекстЗапросаДляФормированияТаблицыСведенийСоглашенияОбИзмененииСтоимости()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор В(&СписокДокументов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтрокиДокумента,
	|	ТабличнаяЧастьДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка КАК Ссылка,
	|	КорректировкаРеализации.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	КорректировкаРеализации.Дата КАК ДатаДокумента
	|ПОМЕСТИТЬ ДокументыДляПечати
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|ГДЕ
	|	КорректировкаРеализации.Ссылка В(&СписокДокументов)
	|	И (КорректировкаРеализации.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение)
	|			ИЛИ КорректировкаРеализации.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки)
	|				И КорректировкаРеализации.ИсправляемыйДокументРеализации ССЫЛКА Документ.КорректировкаРеализации)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка КАК Документ,
	|	КорректировкаРеализации.Дата КАК ДатаДляПолученияСведений,
	|	КорректировкаРеализации.Дата КАК ДатаПодписанияДокумента,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализации.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки)
	|			ТОГДА КорректировкаРеализации.НомерИсправляемогоКорректировочногоДокумента
	|		ИНАЧЕ ДанныеПервичныхДокументов.Номер
	|	КОНЕЦ КАК НомерДокумента,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализации.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки)
	|			ТОГДА КорректировкаРеализации.ДатаИсправляемогоКорректировочногоДокумента
	|		ИНАЧЕ ДанныеПервичныхДокументов.Дата
	|	КОНЕЦ КАК ДатаДокумента,
	|	КорректировкаРеализации.НомерИсправления КАК НомерИсправления,
	|	КорректировкаРеализации.Дата КАК ДатаИсправления,
	|	КорректировкаРеализации.НомерИсходногоДокумента КАК НомерИсходногоДокумента,
	|	КорректировкаРеализации.ДатаИсходногоДокумента КАК ДатаИсходногоДокумента,
	|	КорректировкаРеализации.НомерИсправленияИсходногоДокумента КАК НомерИсправленияИсходногоДокумента,
	|	КорректировкаРеализации.ДатаИсправленияИсходногоДокумента КАК ДатаИсправленияИсходногоДокумента,
	|	КорректировкаРеализации.Организация КАК Организация,
	|	КорректировкаРеализации.Организация КАК Поставщик,
	|	КорректировкаРеализации.Контрагент КАК Покупатель,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализации.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА КорректировкаРеализации.Организация
	|		ИНАЧЕ КорректировкаРеализации.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализации.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА КорректировкаРеализации.Контрагент
	|		ИНАЧЕ КорректировкаРеализации.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	КорректировкаРеализации.БанковскийСчетОрганизации КАК БанковскийСчетПродавца,
	|	КорректировкаРеализации.АдресДоставки КАК АдресДоставки,
	|	КорректировкаРеализации.ВалютаДокумента КАК Валюта,
	|	ЕСТЬNULL(КорректировкаРеализации.ВалютаДокумента.Код, """") КАК ВалютаКод,
	|	ЕСТЬNULL(КорректировкаРеализации.ВалютаДокумента.Наименование, """") КАК ВалютаНаименование,
	|	КорректировкаРеализации.ДоговорКонтрагента КАК Договор,
	|	КорректировкаРеализации.ДоговорКонтрагента.Представление КАК Основание,
	|	КорректировкаРеализации.ДоговорКонтрагента.Номер КАК ОснованиеНомер,
	|	КорректировкаРеализации.ДоговорКонтрагента.Дата КАК ОснованиеДата,
	|	ЕСТЬNULL(КорректировкаРеализации.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	КорректировкаРеализации.ДоговорКонтрагента.УчетАгентскогоНДСПокупателем КАК НДСИсчисляетсяНалоговымАгентом,
	|	КорректировкаРеализации.Руководитель КАК Руководитель,
	|	КорректировкаРеализации.ГлавныйБухгалтер КАК ГлавныйБухгалтер,
	|	КорректировкаРеализации.ОтпускПроизвел КАК Кладовщик,
	|	КорректировкаРеализации.ЗаРуководителяНаОсновании КАК ЗаРуководителяНаОсновании,
	|	КорректировкаРеализации.ЗаГлавногоБухгалтераНаОсновании КАК ЗаГлавногоБухгалтераНаОсновании,
	|	КорректировкаРеализации.ДокументРеализации КАК ДокументОснование,
	|	КорректировкаРеализации.ИсправляемыйДокументРеализации КАК ИсправляемыйДокументРеализации,
	|	КорректировкаРеализации.ВидОперации КАК ВидОперации,
	|	КорректировкаРеализации.ПодразделениеОрганизации КАК Подразделение
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО КорректировкаРеализации.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И КорректировкаРеализации.Организация = ДанныеПервичныхДокументов.Организация
	|ГДЕ
	|	КорректировкаРеализации.Ссылка В
	|			(ВЫБРАТЬ
	|				ДокументыДляПечати.Ссылка
	|			ИЗ
	|				ДокументыДляПечати КАК ДокументыДляПечати)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	НомерИсправления,
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка КАК Документ,
	|	ДокументыДляПечати.ДатаДокумента КАК ДатаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары) КАК ТабличнаяЧасть,
	|	1 КАК ПорядокТабличнойЧасти,
	|	КорректировкаРеализации.НомерСтроки КАК НомерСтроки,
	|	КорректировкаРеализации.Номенклатура КАК Номенклатура,
	|	КорректировкаРеализации.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА КорректировкаРеализации.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА КорректировкаРеализации.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ КАК НоменклатураКод,
	|	КорректировкаРеализации.Количество КАК Количество,
	|	КорректировкаРеализации.КоличествоДоИзменения КАК КоличествоДоКорректировки,
	|	ЕСТЬNULL(КорректировкаРеализацииНоменклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)) КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(КорректировкаРеализацииНоменклатура.ЕдиницаИзмерения.Код, """") КАК ЕдиницаИзмеренияКод,
	|	ЕСТЬNULL(КорректировкаРеализацииНоменклатура.ЕдиницаИзмерения.Наименование, """") КАК ЕдиницаИзмеренияНаименование,
	|	0 КАК КоличествоВОдномМесте,
	|	ВЫБОР
	|		КОГДА НЕ ДокументыДляПечати.СуммаВключаетНДС ИЛИ КорректировкаРеализации.СуммаНДС = 0
	|			ТОГДА КорректировкаРеализации.Цена
	|		КОГДА КорректировкаРеализации.Количество = 0
	|			ТОГДА КорректировкаРеализации.Сумма - КорректировкаРеализации.СуммаНДС
	|		ИНАЧЕ (КорректировкаРеализации.Сумма - КорректировкаРеализации.СуммаНДС) / КорректировкаРеализации.Количество
	|	КОНЕЦ КАК Цена,
	|	ВЫБОР
	|		КОГДА НЕ ДокументыДляПечати.СуммаВключаетНДС ИЛИ КорректировкаРеализации.СуммаНДСДоИзменения = 0
	|			ТОГДА КорректировкаРеализации.ЦенаДоИзменения
	|		КОГДА КорректировкаРеализации.КоличествоДоИзменения = 0
	|			ТОГДА КорректировкаРеализации.СуммаДоИзменения - КорректировкаРеализации.СуммаНДСДоИзменения
	|		ИНАЧЕ (КорректировкаРеализации.СуммаДоИзменения - КорректировкаРеализации.СуммаНДСДоИзменения) / КорректировкаРеализации.КоличествоДоИзменения
	|	КОНЕЦ КАК ЦенаДоКорректировки,
	|	ВЫБОР
	|		КОГДА ДокументыДляПечати.СуммаВключаетНДС
	|			ТОГДА КорректировкаРеализации.Сумма - КорректировкаРеализации.СуммаНДС
	|		ИНАЧЕ КорректировкаРеализации.Сумма
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ДокументыДляПечати.СуммаВключаетНДС
	|			ТОГДА КорректировкаРеализации.СуммаДоИзменения - КорректировкаРеализации.СуммаНДСДоИзменения
	|		ИНАЧЕ КорректировкаРеализации.СуммаДоИзменения
	|	КОНЕЦ КАК СуммаБезНДСДоКорректировки,
	|	КорректировкаРеализации.СуммаНДС КАК СуммаНДС,
	|	КорректировкаРеализации.СуммаНДСДоИзменения КАК СуммаНДСДоКорректировки,
	|	КорректировкаРеализации.СтавкаНДС КАК СтавкаНДС,
	|	КорректировкаРеализации.СтавкаНДСДоИзменения КАК СтавкаНДСДоКорректировки,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0) КАК ВсегоВРублях,
	|	ЕСТЬNULL(-РегистрСведенийРублевыеСуммыДокументовВВалютеДоИзменения.Всего, 0) КАК ВсегоВРубляхДоКорректировки,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0) КАК НДСВРублях,
	|	ЕСТЬNULL(-РегистрСведенийРублевыеСуммыДокументовВВалютеДоИзменения.НДС, 0) КАК НДСВРубляхДоКорректировки,
	|	ВЫБОР
	|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СуществуютЗаписиРублевыхСумм,
	|	КорректировкаРеализации.НомерГТД.Код КАК НомерТД,
	|	КорректировкаРеализации.НомерГТДДоИзменения.Код КАК НомерТДДоИзменения,
	|	КорректировкаРеализации.СтранаПроисхождения.Код КАК КодСтраныПроисхождения,
	|	КорректировкаРеализации.СтранаПроисхожденияДоИзменения.Код КАК КодСтраныПроисхожденияДоИзменения
	|ИЗ
	|	ДокументыДляПечати КАК ДокументыДляПечати
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализации
	|		ПО ДокументыДляПечати.Ссылка = КорректировкаРеализации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК КорректировкаРеализацииНоменклатура
	|		ПО (КорректировкаРеализации.Номенклатура = КорректировкаРеализацииНоменклатура.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (КорректировкаРеализации.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (КорректировкаРеализации.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалютеДоИзменения
	|		ПО (КорректировкаРеализации.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалютеДоИзменения.Регистратор)
	|			И (КорректировкаРеализации.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалютеДоИзменения.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалютеДоИзменения.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ТоварыДоИзменения))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка,
	|	ДокументыДляПечати.ДатаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги),
	|	3,
	|	КорректировкаРеализации.НомерСтроки,
	|	КорректировкаРеализации.Номенклатура,
	|	ВЫБОР
	|		КОГДА НЕ КорректировкаРеализации.Содержание ПОДОБНО """"
	|			ТОГДА КорректировкаРеализации.Содержание
	|		КОГДА НЕ КорректировкаРеализации.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА КорректировкаРеализации.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ КорректировкаРеализации.Номенклатура.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА КорректировкаРеализации.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА КорректировкаРеализации.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ,
	|	КорректировкаРеализации.Количество,
	|	КорректировкаРеализации.КоличествоДоИзменения,
	|	ЕСТЬNULL(КорректировкаРеализации.Номенклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)),
	|	ЕСТЬNULL(КорректировкаРеализации.Номенклатура.ЕдиницаИзмерения.Код, """"),
	|	ЕСТЬNULL(КорректировкаРеализации.Номенклатура.ЕдиницаИзмерения.Наименование, """"),
	|	0,
	|	ВЫБОР
	|		КОГДА НЕ ДокументыДляПечати.СуммаВключаетНДС ИЛИ КорректировкаРеализации.СуммаНДС = 0
	|			ТОГДА КорректировкаРеализации.Цена
	|		КОГДА КорректировкаРеализации.Количество = 0
	|			ТОГДА КорректировкаРеализации.Сумма - КорректировкаРеализации.СуммаНДС
	|		ИНАЧЕ (КорректировкаРеализации.Сумма - КорректировкаРеализации.СуммаНДС) / КорректировкаРеализации.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ДокументыДляПечати.СуммаВключаетНДС ИЛИ КорректировкаРеализации.СуммаНДСДоИзменения = 0
	|			ТОГДА КорректировкаРеализации.ЦенаДоИзменения
	|		КОГДА КорректировкаРеализации.КоличествоДоИзменения = 0
	|			ТОГДА КорректировкаРеализации.СуммаДоИзменения - КорректировкаРеализации.СуммаНДСДоИзменения
	|		ИНАЧЕ (КорректировкаРеализации.СуммаДоИзменения - КорректировкаРеализации.СуммаНДСДоИзменения) / КорректировкаРеализации.КоличествоДоИзменения
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументыДляПечати.СуммаВключаетНДС
	|			ТОГДА КорректировкаРеализации.Сумма - КорректировкаРеализации.СуммаНДС
	|		ИНАЧЕ КорректировкаРеализации.Сумма
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументыДляПечати.СуммаВключаетНДС
	|			ТОГДА КорректировкаРеализации.СуммаДоИзменения - КорректировкаРеализации.СуммаНДСДоИзменения
	|		ИНАЧЕ КорректировкаРеализации.СуммаДоИзменения
	|	КОНЕЦ,
	|	КорректировкаРеализации.СуммаНДС,
	|	КорректировкаРеализации.СуммаНДСДоИзменения,
	|	КорректировкаРеализации.СтавкаНДС,
	|	КорректировкаРеализации.СтавкаНДСДоИзменения,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(-РегистрСведенийРублевыеСуммыДокументовВВалютеДоИзменения.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
	|	ЕСТЬNULL(-РегистрСведенийРублевыеСуммыДокументовВВалютеДоИзменения.НДС, 0),
	|	ВЫБОР
	|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	ДокументыДляПечати КАК ДокументыДляПечати
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализации
	|		ПО ДокументыДляПечати.Ссылка = КорректировкаРеализации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (КорректировкаРеализации.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (КорректировкаРеализации.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалютеДоИзменения
	|		ПО (КорректировкаРеализации.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалютеДоИзменения.Регистратор)
	|			И (КорректировкаРеализации.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалютеДоИзменения.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалютеДоИзменения.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.УслугиДоИзменения))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка,
	|	ДокументыДляПечати.ДатаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги),
	|	4,
	|	КорректировкаРеализации.НомерСтроки,
	|	КорректировкаРеализации.Номенклатура,
	|	ВЫБОР
	|		КОГДА НЕ КорректировкаРеализации.Содержание ПОДОБНО """"
	|			ТОГДА КорректировкаРеализации.Содержание
	|		КОГДА НЕ КорректировкаРеализации.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА КорректировкаРеализации.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ КорректировкаРеализации.Номенклатура.Наименование
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА КорректировкаРеализации.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА КорректировкаРеализации.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ,
	|	КорректировкаРеализации.Количество,
	|	КорректировкаРеализации.КоличествоДоИзменения,
	|	ЕСТЬNULL(КорректировкаРеализации.Номенклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)),
	|	ЕСТЬNULL(КорректировкаРеализации.Номенклатура.ЕдиницаИзмерения.Код, """"),
	|	ЕСТЬNULL(КорректировкаРеализации.Номенклатура.ЕдиницаИзмерения.Наименование, """"),
	|	0,
	|	ВЫБОР
	|		КОГДА НЕ ДокументыДляПечати.СуммаВключаетНДС ИЛИ КорректировкаРеализации.СуммаНДС = 0
	|			ТОГДА КорректировкаРеализации.Цена
	|		КОГДА КорректировкаРеализации.Количество = 0
	|			ТОГДА КорректировкаРеализации.Сумма - КорректировкаРеализации.СуммаНДС
	|		ИНАЧЕ (КорректировкаРеализации.Сумма - КорректировкаРеализации.СуммаНДС) / КорректировкаРеализации.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ДокументыДляПечати.СуммаВключаетНДС ИЛИ КорректировкаРеализации.СуммаНДСДоИзменения = 0
	|			ТОГДА КорректировкаРеализации.ЦенаДоИзменения
	|		КОГДА КорректировкаРеализации.КоличествоДоИзменения = 0
	|			ТОГДА КорректировкаРеализации.СуммаДоИзменения - КорректировкаРеализации.СуммаНДСДоИзменения
	|		ИНАЧЕ (КорректировкаРеализации.СуммаДоИзменения - КорректировкаРеализации.СуммаНДСДоИзменения) / КорректировкаРеализации.КоличествоДоИзменения
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументыДляПечати.СуммаВключаетНДС
	|			ТОГДА КорректировкаРеализации.Сумма - КорректировкаРеализации.СуммаНДС
	|		ИНАЧЕ КорректировкаРеализации.Сумма
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументыДляПечати.СуммаВключаетНДС
	|			ТОГДА КорректировкаРеализации.СуммаДоИзменения - КорректировкаРеализации.СуммаНДСДоИзменения
	|		ИНАЧЕ КорректировкаРеализации.СуммаДоИзменения
	|	КОНЕЦ,
	|	КорректировкаРеализации.СуммаНДС,
	|	КорректировкаРеализации.СуммаНДСДоИзменения,
	|	КорректировкаРеализации.СтавкаНДС,
	|	КорректировкаРеализации.СтавкаНДСДоИзменения,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0),
	|	ЕСТЬNULL(-РегистрСведенийРублевыеСуммыДокументовВВалютеДоИзменения.Всего, 0),
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0),
	|	ЕСТЬNULL(-РегистрСведенийРублевыеСуммыДокументовВВалютеДоИзменения.НДС, 0),
	|	ВЫБОР
	|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	ДокументыДляПечати КАК ДокументыДляПечати
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.АгентскиеУслуги КАК КорректировкаРеализации
	|		ПО ДокументыДляПечати.Ссылка = КорректировкаРеализации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (КорректировкаРеализации.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (КорректировкаРеализации.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалютеДоИзменения
	|		ПО (КорректировкаРеализации.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалютеДоИзменения.Регистратор)
	|			И (КорректировкаРеализации.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалютеДоИзменения.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалютеДоИзменения.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслугиДоИзменения))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Документ,
	|	ПорядокТабличнойЧасти,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьТаблицуСведенийСоглашенияОбИзмененииСтоимости(Знач СписокДокументов) Экспорт
	
	ТаблицаСведений = ПечатьТорговыхДокументов.ПолучитьОписаниеСоглашенияОбИзмененииСтоимости();
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("СписокДокументов", СписокДокументов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());
	
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияТаблицыСведенийСоглашенияОбИзмененииСтоимости();
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ВалютаРегУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	РеквизитыВалютыРегУчета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВалютаРегУчета, "Код, Наименование");
	
	Выборка = РезультатыЗапроса[2].Выбрать();
	СтрокиДокументов = РезультатыЗапроса[3].Выгрузить();
	СтрокиДокументов.Индексы.Добавить("Документ");
	
	Пока Выборка.Следующий() Цикл
		
		СведенияОДокументе = ТаблицаСведений.Добавить();
		ЗаполнитьЗначенияСвойств(СведенияОДокументе, Выборка);
		
		СведенияОДокументе.Валюта             = ВалютаРегУчета;
		СведенияОДокументе.ВалютаКод          = РеквизитыВалютыРегУчета.Код;
		СведенияОДокументе.ВалютаНаименование = РеквизитыВалютыРегУчета.Наименование;
		
		ТаблицаДокумента = ПечатьТорговыхДокументов.ПолучитьОписаниеТаблицыСоглашенияОбИзмененииСтоимости();
		
		Отбор = Новый Структура("Документ", Выборка.Документ);
		СтрокиДокумента = СтрокиДокументов.НайтиСтроки(Отбор);
		
		НуженПересчетВРубли = Ложь;
		Если Выборка.Валюта <> ВалютаРегУчета
			И ЗначениеЗаполнено(Выборка.ИсправляемыйДокументРеализации) Тогда
			ДатаПолученияКурса = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.ИсправляемыйДокументРеализации, "Дата");
			КурсВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Выборка.Валюта, ДатаПолученияКурса);
			НуженПересчетВРубли = Истина;
		КонецЕсли;
		
		ЕстьТовары = Ложь;
		ЕстьУслуги = Ложь;
		
		Для Каждого Строка Из СтрокиДокумента Цикл
			
			СтрокаТаблицыДокумента = ТаблицаДокумента.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыДокумента, Строка);
			
			Если НуженПересчетВРубли Тогда
				Если Строка.СуществуютЗаписиРублевыхСумм Тогда
					
					СтрокаТаблицыДокумента.СуммаНДС						= Строка.НДСВРублях;
					СтрокаТаблицыДокумента.СуммаНДСДоКорректировки		= Строка.НДСВРубляхДоКорректировки;
					
					СтрокаТаблицыДокумента.СуммаБезНДС 					= Строка.ВсегоВРублях - Строка.НДСВРублях;
					СтрокаТаблицыДокумента.СуммаБезНДСДоКорректировки 	= Строка.ВсегоВРубляхДоКорректировки - Строка.НДСВРубляхДоКорректировки;
					
				Иначе
					Кратность = ?(КурсВалюты.Кратность = 0, 1, КурсВалюты.Кратность);
					
					СтрокаТаблицыДокумента.СуммаНДС						= Строка.СуммаНДС * КурсВалюты.Курс / Кратность;;
					СтрокаТаблицыДокумента.СуммаНДСДоКорректировки 		= Строка.СуммаНДСДоКорректировки * КурсВалюты.Курс / Кратность;;
					
					СтрокаТаблицыДокумента.СуммаБезНДС					= (Строка.СуммаБезНДС + Строка.СуммаНДС) * КурсВалюты.Курс / Кратность - СтрокаТаблицыДокумента.СуммаНДС;
					СтрокаТаблицыДокумента.СуммаБезНДСДоКорректировки	= 
						(Строка.СуммаБезНДСДоКорректировки + Строка.СуммаНДСДоКорректировки) * КурсВалюты.Курс / Кратность - СтрокаТаблицыДокумента.СуммаНДСДоКорректировки;
					
					КонецЕсли;
					
				СтрокаТаблицыДокумента.Цена = ?(СтрокаТаблицыДокумента.Количество = 0, СтрокаТаблицыДокумента.СуммаБезНДС, СтрокаТаблицыДокумента.СуммаБезНДС / СтрокаТаблицыДокумента.Количество);
				СтрокаТаблицыДокумента.ЦенаДоКорректировки = ?(СтрокаТаблицыДокумента.КоличествоДоКорректировки = 0, СтрокаТаблицыДокумента.СуммаБезНДСДоКорректировки, 
							СтрокаТаблицыДокумента.СуммаБезНДСДоКорректировки / СтрокаТаблицыДокумента.КоличествоДоКорректировки);
			КонецЕсли;
			
			СтрокаТаблицыДокумента.СуммаСНДС 				= СтрокаТаблицыДокумента.СуммаБезНДС + СтрокаТаблицыДокумента.СуммаНДС;
			СтрокаТаблицыДокумента.СуммаСНДСДоКорректировки = СтрокаТаблицыДокумента.СуммаБезНДСДоКорректировки + СтрокаТаблицыДокумента.СуммаНДСДоКорректировки;
			
			ЕстьТовары = ЕстьТовары ИЛИ Строка.ТабличнаяЧасть = Перечисления.ТабличныеЧастиДокументов.Товары;
			ЕстьУслуги = ЕстьУслуги ИЛИ Строка.ТабличнаяЧасть = Перечисления.ТабличныеЧастиДокументов.Услуги 
									ИЛИ Строка.ТабличнаяЧасть = Перечисления.ТабличныеЧастиДокументов.АгентскиеУслуги;
			
		КонецЦикла;
								
		СведенияОДокументе.ТаблицаДокумента = ТаблицаДокумента;
		
		СведенияОДокументе.ЗаголовокДокументаОснования = ОпределитьТипДокументаОснованияДляЗаголовка(ЕстьТовары, ЕстьУслуги, Выборка.ВидОперации, Выборка.ИсправляемыйДокументРеализации);
		
		ПорядокЗаполнения = Новый Структура("ЗаполнятьРуководителя, ЗаполнятьГлавногоБухгалтера, ЗаполнятьКладовщика");
		ПечатьТорговыхДокументов.ЗаполнитьДанныеОтветственныхЛиц(СведенияОДокументе, ПорядокЗаполнения);
		
	КонецЦикла;
	
	Возврат ТаблицаСведений;
	
КонецФункции

Функция ОпределитьТипДокументаОснованияДляЗаголовка(ЕстьТовары, ЕстьУслуги, ВидОперации, ИсправляемыйДокументРеализации)
	
	СоглашениеКСоглашению = Ложь;
	Если ЗначениеЗаполнено(ИсправляемыйДокументРеализации) И ТипЗнч(ИсправляемыйДокументРеализации) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		Если ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение Тогда
			СоглашениеКСоглашению = Истина;	
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ИсправлениеОшибки Тогда
			СоглашениеКСоглашению = ТипЗнч(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ИсправляемыйДокументРеализации, 
										"ИсправляемыйДокументРеализации")) = Тип("ДокументСсылка.КорректировкаРеализации");
		КонецЕсли;
	КонецЕсли;
	
	Если СоглашениеКСоглашению Тогда
		ЗаголовокДокументаОснования = НСтр("ru='к соглашению'");
	ИначеЕсли ЕстьТовары Тогда
		ЗаголовокДокументаОснования = НСтр("ru='к накладной'");
	ИначеЕсли ЕстьУслуги Тогда
		ЗаголовокДокументаОснования = НСтр("ru='к акту об оказании услуг'");
	Иначе
		ЗаголовокДокументаОснования = НСтр("ru='к накладной'");
	КонецЕсли;	
	
	Возврат ЗаголовокДокументаОснования;
	
КонецФункции

Функция ОпределитьПодписантов(СписокДокументов) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылки", СписокДокументов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка КАК Ссылка,
	|	КорректировкаРеализации.Руководитель КАК Руководитель,
	|	КорректировкаРеализации.ГлавныйБухгалтер КАК ГлавныйБухгалтер,
	|	КорректировкаРеализации.ОтпускПроизвел КАК Кладовщик,
	|	КорректировкаРеализации.Склад КАК Склад,
	|	КорректировкаРеализации.ОтветственныйЗаОформление КАК ОтветственныйЗаОформление,
	|	КорректировкаРеализации.Дата КАК Дата
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|ГДЕ
	|	КорректировкаРеализации.Ссылка В(&Ссылки)";
	
	ПодписантыДокументов = Новый Соответствие;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ПодписиДокумента = Новый Структура;
		
		Если ЗначениеЗаполнено(Выборка.Руководитель) Тогда
			ПодписиДокумента.Вставить("Руководитель", Выборка.Руководитель);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.ГлавныйБухгалтер) Тогда
			ПодписиДокумента.Вставить("ГлавныйБухгалтер", Выборка.ГлавныйБухгалтер);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.Кладовщик) Тогда
			ПодписиДокумента.Вставить("Кладовщик", Выборка.Кладовщик);
		ИначеЕсли ЗначениеЗаполнено(Выборка.Склад) Тогда
			ОтветственноеЛицоСклада = ОтветственныеЛицаБП.ОтветственноеЛицоНаСкладе(Выборка.Склад, Выборка.Дата);
			Если ЗначениеЗаполнено(ОтветственноеЛицоСклада) Тогда
				ПодписиДокумента.Вставить("Кладовщик", ОтветственноеЛицоСклада);
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.ОтветственныйЗаОформление) Тогда
			ПодписиДокумента.Вставить("ОтветственныйЗаОформление", Выборка.ОтветственныйЗаОформление);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПодписиДокумента) Тогда
			ПодписантыДокументов.Вставить(Выборка.Ссылка, ПодписиДокумента);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ПодписантыДокументов;
	
КонецФункции

#Область ОбработчикиОбновления

Процедура ЗаполнитьКодТНВЭДОтложено(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата", '20160701'); // учет НДС по ФЗ-150
	Запрос.УстановитьПараметр("Россия", Справочники.СтраныМира.Россия);
	Запрос.УстановитьПараметр("СтраныЕАЭС", УправлениеКонтактнойИнформацией.СтраныУчастникиЕАЭС().ВыгрузитьКолонку("Ссылка"));
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1000
	|	КорректировкаРеализацииТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО КорректировкаРеализацииТовары.Ссылка.Контрагент = Контрагенты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураТоваров
	|		ПО КорректировкаРеализацииТовары.Номенклатура = НоменклатураТоваров.Ссылка
	|ГДЕ
	|	КорректировкаРеализацииТовары.Ссылка.Дата >= &Дата
	|	И Контрагенты.СтранаРегистрации <> &Россия
	|	И Контрагенты.СтранаРегистрации В(&СтраныЕАЭС)
	|	И Контрагенты.СтранаРегистрации <> ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
	|	И (КорректировкаРеализацииТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|				И КорректировкаРеализацииТовары.КодТНВЭД = ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
	|			ИЛИ КорректировкаРеализацииТовары.СтавкаНДСДоИзменения = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|				И КорректировкаРеализацииТовары.КодТНВЭДДоИзменения = ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка))
	|	И НоменклатураТоваров.КодТНВЭД <> ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
	|	И КорректировкаРеализацииТовары.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	КорректировкаРеализацииТовары.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	КорректировкаРеализацииТовары.Ссылка.Дата УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Если РезультатЗапроса.Количество() = 0 Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Ложь;
	
	ПроблемныхОбъектов = 0;
	ОбъектовОбработано = 0;
	
	Для каждого СтрокаРезультата Из РезультатЗапроса Цикл
		
		НачатьТранзакцию();
		Попытка
			
			// Блокируем объект от изменения другими сеансами.
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ.КорректировкаРеализации");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", СтрокаРезультата.Ссылка);
			Блокировка.Заблокировать();
			
			ДокументОбъект = СтрокаРезультата.Ссылка.ПолучитьОбъект();
			
			Если ДокументОбъект = Неопределено Тогда
				ОтменитьТранзакцию();
			КонецЕсли;
			
			Для Каждого СтрокаДокумента Из ДокументОбъект.Товары Цикл
				Если ТипЗнч(СтрокаДокумента.Номенклатура) <> Тип("СправочникСсылка.Номенклатура") Тогда
					Продолжить;
				КонецЕсли;
				Если СтрокаДокумента.СтавкаНДС = Перечисления.СтавкиНДС.НДС0 Тогда
					СтрокаДокумента.КодТНВЭД = СтрокаДокумента.Номенклатура.КодТНВЭД;
				КонецЕсли;
				Если СтрокаДокумента.СтавкаНДСДоИзменения = Перечисления.СтавкиНДС.НДС0 Тогда
					СтрокаДокумента.КодТНВЭДДоИзменения = СтрокаДокумента.Номенклатура.КодТНВЭД;
				КонецЕсли;
			КонецЦикла;
			
			// Запись обработанного объекта.
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			
			ЗафиксироватьТранзакцию();
			ОбъектовОбработано = ОбъектовОбработано + 1;
			
		Исключение
			
			ОтменитьТранзакцию();
			// Если не удалось обработать какой-либо элемент справочника, повторяем попытку снова.
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось обработать документ: %1 по причине:
					|%2'"),
					СтрокаРезультата.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Документы.КорректировкаРеализации, СтрокаРезультата.Ссылка, ТекстСообщения);
				
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбъектовОбработано = 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процедуре ЗаполнитьКодТНВЭДОтложено
				|не удалось обработать некоторые документы ""Корректировка реализации"" (пропущены): %1'"),
				ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
			УровеньЖурналаРегистрации.Информация,
			Метаданные.Документы.КорректировкаРеализации,,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Процедура ЗаполнитьКодТНВЭДОтложено
					|обработала очередную порцию документов ""Корректировка реализации"": %1'"), ОбъектовОбработано));
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьРНПТДо() Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачалаПрослеживаемости", ПрослеживаемостьБРУ.ДатаНачалаУчетаПрослеживаемыхТоваров());
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаРеализацииТовары.Ссылка КАК Ссылка,
	|	КорректировкаРеализацииТовары.Ссылка.ДокументРеализации КАК ДокументРеализации
	|ПОМЕСТИТЬ КорректировкиСПрослеживаемымТоваром
	|ИЗ
	|	Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
	|ГДЕ
	|	КорректировкаРеализацииТовары.Ссылка.Дата >= &ДатаНачалаПрослеживаемости
	|	И КорректировкаРеализацииТовары.ПрослеживаемыйТовар
	|	И НЕ КорректировкаРеализацииТовары.Ссылка.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОбработанныеКорректировки
	|ИЗ
	|	Документ.КорректировкаРеализации.СведенияПрослеживаемости КАК КорректировкаРеализацииСведенияПрослеживаемости
	|ГДЕ
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка В
	|			(ВЫБРАТЬ
	|				КорректировкиСПрослеживаемымТоваром.Ссылка
	|			ИЗ
	|				КорректировкиСПрослеживаемымТоваром)
	|	И КорректировкаРеализацииСведенияПрослеживаемости.ЭтоСтрокаСИсходнымиРНПТ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслугСведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	РеализацияТоваровУслугСведенияПрослеживаемости.Количество КАК Количество,
	|	РеализацияТоваровУслугСведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	РеализацияТоваровУслугСведенияПрослеживаемости.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	КорректировкиСПрослеживаемымТоваром.Ссылка КАК Ссылка
	|ИЗ
	|	КорректировкиСПрослеживаемымТоваром КАК КорректировкиСПрослеживаемымТоваром
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.СведенияПрослеживаемости КАК РеализацияТоваровУслугСведенияПрослеживаемости
	|		ПО КорректировкиСПрослеживаемымТоваром.ДокументРеализации = РеализацияТоваровУслугСведенияПрослеживаемости.Ссылка
	|ГДЕ
	|	НЕ РеализацияТоваровУслугСведенияПрослеживаемости.РНПТ ЕСТЬ NULL
	|	И НЕ КорректировкиСПрослеживаемымТоваром.Ссылка В
	|				(ВЫБРАТЬ
	|					ОбработанныеКорректировки.Ссылка
	|				ИЗ
	|					ОбработанныеКорректировки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкаРеализацииСведенияПрослеживаемости.РНПТ,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Количество,
	|	КорректировкаРеализацииСведенияПрослеживаемости.КоличествоПрослеживаемости,
	|	КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки,
	|	КорректировкиСПрослеживаемымТоваром.Ссылка
	|ИЗ
	|	КорректировкиСПрослеживаемымТоваром КАК КорректировкиСПрослеживаемымТоваром
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.СведенияПрослеживаемости КАК КорректировкаРеализацииСведенияПрослеживаемости
	|		ПО КорректировкиСПрослеживаемымТоваром.ДокументРеализации = КорректировкаРеализацииСведенияПрослеживаемости.Ссылка
	|ГДЕ
	|	НЕ КорректировкаРеализацииСведенияПрослеживаемости.РНПТ ЕСТЬ NULL
	|	И НЕ КорректировкаРеализацииСведенияПрослеживаемости.ЭтоСтрокаСИсходнымиРНПТ
	|	И НЕ КорректировкиСПрослеживаемымТоваром.Ссылка В
	|				(ВЫБРАТЬ
	|					ОбработанныеКорректировки.Ссылка
	|				ИЗ
	|					ОбработанныеКорректировки)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|ИТОГИ ПО
	|	Ссылка";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		ВыборкаПоДокументам = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоДокументам.Следующий() Цикл
			ДокументОбъект = ВыборкаПоДокументам.Ссылка.ПолучитьОбъект();
			ВыборкаЗаписи = ВыборкаПоДокументам.Выбрать();
			Пока ВыборкаЗаписи.Следующий() Цикл
				СтрокаСведенийОПрослеживаемости = ДокументОбъект.СведенияПрослеживаемости.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаСведенийОПрослеживаемости, ВыборкаЗаписи);
				СтрокаСведенийОПрослеживаемости.ЭтоСтрокаСИсходнымиРНПТ = Истина;
			КонецЦикла;
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСведенияПрослеживаемостиПриПереходеС20() Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаРеализацииТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
	|ГДЕ
	|	КорректировкаРеализацииТовары.УдалитьРНПТ <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	ИЛИ КорректировкаРеализацииТовары.УдалитьРНПТДо <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)";
	
	РезультатЗапроса = Запрос.Выполнить();;
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	// Если есть документы с РНПТ, то установим константу "ВестиУчетПрослеживаемыхТоваров".
	Если НЕ Константы.ВестиУчетПрослеживаемыхТоваров.Получить() Тогда
		Константы.ВестиУчетПрослеживаемыхТоваров.Установить(Истина);
	КонецЕсли;
	
	ВыборкаПоДокументам = РезультатЗапроса.Выбрать();
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		ДокументОбъект = ВыборкаПоДокументам.Ссылка.ПолучитьОбъект();
		
		Если ДокументОбъект = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого СтрокаДокумента Из ДокументОбъект.Товары Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаДокумента.ИдентификаторСтроки) Тогда
				СтрокаДокумента.ИдентификаторСтроки = Новый УникальныйИдентификатор;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаДокумента.УдалитьРНПТ) Тогда
				СтрокаДокумента.ПрослеживаемыйТовар = Истина;
				СтрокаСведенийПрослеживаемости       = ДокументОбъект.СведенияПрослеживаемости.Добавить();
				СтрокаСведенийПрослеживаемости.ИдентификаторСтроки        = СтрокаДокумента.ИдентификаторСтроки;
				СтрокаСведенийПрослеживаемости.РНПТ                       = СтрокаДокумента.УдалитьРНПТ;
				СтрокаСведенийПрослеживаемости.Количество                 = СтрокаДокумента.Количество;
				СтрокаСведенийПрослеживаемости.КоличествоПрослеживаемости = СтрокаДокумента.Количество;
				СтрокаДокумента.УдалитьРНПТ = Неопределено;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаДокумента.УдалитьРНПТДо) Тогда
				СтрокаДокумента.ПрослеживаемыйТовар = Истина;
				СтрокаСведенийПрослеживаемости       = ДокументОбъект.СведенияПрослеживаемости.Добавить();
				СтрокаСведенийПрослеживаемости.ИдентификаторСтроки        = СтрокаДокумента.ИдентификаторСтроки;
				СтрокаСведенийПрослеживаемости.РНПТ                       = СтрокаДокумента.УдалитьРНПТДо;
				СтрокаСведенийПрослеживаемости.Количество                 = СтрокаДокумента.КоличествоДоИзменения;
				СтрокаСведенийПрослеживаемости.КоличествоПрослеживаемости = СтрокаДокумента.КоличествоДоИзменения;
				СтрокаСведенийПрослеживаемости.ЭтоСтрокаСИсходнымиРНПТ    = Истина;
				СтрокаДокумента.УдалитьРНПТДо = Неопределено;
			КонецЕсли;
		КонецЦикла;
				
		Попытка
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		Исключение
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось обработать документ: %1 по причине:
					|%2'"),
					ВыборкаПоДокументам.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Документы.КорректировкаРеализации, ВыборкаПоДокументам.Ссылка, ТекстСообщения);
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСчетПередачи(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1000
	|	КорректировкаРеализации.Ссылка КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		КорректировкаРеализацииТовары.Ссылка КАК Ссылка,
	|		КорректировкаРеализацииТовары.Ссылка.Дата КАК Дата,
	|		КорректировкаРеализацииТовары.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента
	|	ИЗ
	|		Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
	|	ГДЕ
	|		КорректировкаРеализацииТовары.Ссылка.ДокументРеализации ССЫЛКА Документ.ВозвратТоваровОтПокупателя
	|		И КорректировкаРеализацииТовары.Ссылка.КорректироватьБУиНУ
	|		И КорректировкаРеализацииТовары.ПереданныеСчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК КорректировкаРеализации
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Договоры
	|		ПО КорректировкаРеализации.ДоговорКонтрагента = Договоры.Ссылка 
	|ГДЕ
	|	Договоры.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КорректировкаРеализации.Дата УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Ложь;
	ОбъектовОбработано = 0;
	ПроблемныхОбъектов = 0;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ОбъектовОбработано = ОбъектовОбработано + 1;
		
		НачатьТранзакцию();
		
		// Блокируем объект от изменения другими сеансами.
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Документ.КорректировкаРеализации");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
		Блокировка.Заблокировать();
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		// Если объект ранее был удален или обработан другими сеансами, пропускаем его.
		Если ДокументОбъект = Неопределено Тогда
			ОбъектовОбработано = ОбъектовОбработано - 1;
			Продолжить;
		КонецЕсли;
		
		//ЗаполнитьСчетУчетаПередачи
		Отбор = Новый Структура("НеЗаполненныеРеквизиты", Истина); 
		СчетаУчетаВДокументах.Заполнить(ДокументОбъект, Отбор);
				
		Попытка
			// Запись обработанного объекта (без перепроведения).
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			ЗафиксироватьТранзакцию();
		Исключение
			// Если не удалось обработать какой-либо документ, повторяем попытку снова.
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			ОтменитьТранзакцию();
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В процедуре Документы.КорректировкаРеализации.ЗаполнитьСчетПередачи() не удалось обработать документ ""Корректировка реализации"" по причине:
					|%1'"),
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Документы.ОтчетКомиссионераОПродажах, Выборка.Ссылка, ТекстСообщения);
				
		КонецПопытки; 
		
	КонецЦикла;
	
	Если ОбъектовОбработано = 0 И ПроблемныхОбъектов > 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'В процедуре Документы.КорректировкаРеализации.ЗаполнитьСчетПередачи() не удалось обработать документ ""Корректировка реализации"": в %1 из %2 возникли ошибки'"),
				ПроблемныхОбъектов,
				ОбъектовОбработано);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Информация,
			Метаданные.Документы.ТребованиеНакладная,,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Процедура Документы.КорректировкаРеализации.ЗаполнитьСчетПередачи() обработала очередную порцию документов ""Корректировка реализации"": %1 документов'"), ОбъектовОбработано));
	КонецЕсли;
			
	Если ОбъектовОбработано = 0 И ПроблемныхОбъектов = 0 Тогда
		Параметры.ОбработкаЗавершена = Истина;
	КонецЕсли;
	
КонецПроцедуры

// Процедура- отложенный обработчик обновления
// Устанавливает признак прослеживаемости товаров в документах, 
// основания которых были до начала учета прослеживаемости
// 
// Параметры:
//  Параметры - Структура - параметры обработчика обновления.
// 
Процедура УстановитьПризнакПрослеживаемостиДляТоваровСтавшимиПрослеживаемыми(Параметры) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров") Тогда
		
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачалаУчетаПрослеживаемости", 
		ПрослеживаемостьБРУ.ДатаНачалаУчетаПрослеживаемыхТоваров());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ РеалиализацииПоВозвратамДоНачПрослежТоваров
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО (ДанныеПервичныхДокументов.Документ = КорректировкаРеализации.ИсходныйДокументРеализации)
	|ГДЕ
	|	ДанныеПервичныхДокументов.Дата < &ДатаНачалаУчетаПрослеживаемости
	|	И КорректировкаРеализации.Дата > &ДатаНачалаУчетаПрослеживаемости
	|	И КорректировкаРеализации.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка КАК Ссылка,
	|	КорректировкаРеализацииТовары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	РеалиализацииПоВозвратамДоНачПрослежТоваров КАК РеалиализацииПоВозвратамДоНачПрослежТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ПО РеалиализацииПоВозвратамДоНачПрослежТоваров.Ссылка = КорректировкаРеализации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
	|		ПО (КорректировкаРеализации.Ссылка = КорректировкаРеализацииТовары.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО (КорректировкаРеализацииТовары.Номенклатура = СправочникНоменклатура.Ссылка)
	|ГДЕ
	|	СправочникНоменклатура.ПрослеживаемыйТовар
	|	И НЕ КорректировкаРеализацииТовары.ПрослеживаемыйТовар
	|
	|СГРУППИРОВАТЬ ПО
	|	КорректировкаРеализации.Ссылка,
	|	КорректировкаРеализацииТовары.НомерСтроки,
	|	РеалиализацииПоВозвратамДоНачПрослежТоваров.Ссылка
	|ИТОГИ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
		
	Иначе
		
		ВыборкаРезульта = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаРезульта.Следующий() Цикл
			
			ДокументОбъект = ВыборкаРезульта.Ссылка.ПолучитьОбъект();
			СсылкаНаТаблицуТовары = ДокументОбъект.Товары;
			
			ВыборкаПоНомеруСтроки = ВыборкаРезульта.Выбрать();
			
			Пока ВыборкаПоНомеруСтроки.Следующий() Цикл
				
				СсылкаНаСтроку = СсылкаНаТаблицуТовары[ВыборкаПоНомеруСтроки.НомерСтроки-1];
				СсылкаНаСтроку.ПрослеживаемыйТовар = Истина;
				
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект);
			
			Набор = РегистрыСведений.РегистрацияПрослеживаемыхТоваров.ПолучитьНаборЗаписейПоКорректировке(
				ДокументОбъект.Ссылка, ДокументОбъект.Ссылка);
			
			Если Набор <> Неопределено Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(Набор, Истина);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
		
КонецПроцедуры

// Процедура- отложенный обработчик обновления
// Создает движения по регистру ПрослеживаемыеТоварыОтгруженныеВЕАЭС в документах, 
// дата которых, с начала учета прослеживаемости и контрагент из ЕАЭС
// 
// Параметры:
//  Параметры - Структура - параметры обработчика обновления.
//
Процедура СоздатьДвиженияПоКорректировкиПрослеживаемостиЕАЭС(Параметры) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров") Тогда
		
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачалаУчетаПрослеживаемости", 
		ПрослеживаемостьБРУ.ДатаНачалаУчетаПрослеживаемыхТоваров());
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПрослеживаемыеТоварыОтгруженныеВЕАЭС.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ СписокУжеСозданныхДвиженийПоДокументам
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТоварыОтгруженныеВЕАЭС КАК ПрослеживаемыеТоварыОтгруженныеВЕАЭС
	|ГДЕ
	|	ПрослеживаемыеТоварыОтгруженныеВЕАЭС.Регистратор ССЫЛКА Документ.КорректировкаРеализации
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрослеживаемыеТоварыОтгруженныеВЕАЭС.Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаРеализацииТовары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ СписокВсехВозвратовЕАЭССПрослеживаемымиТоварам
	|ИЗ
	|	Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК СтраныМира
	|				ПО Контрагенты.СтранаРегистрации = СтраныМира.Ссылка
	|			ПО КорректировкаРеализации.Контрагент = Контрагенты.Ссылка
	|		ПО КорректировкаРеализацииТовары.Ссылка = КорректировкаРеализации.Ссылка
	|ГДЕ
	|	КорректировкаРеализацииТовары.ПрослеживаемыйТовар
	|	И КорректировкаРеализации.Дата >= &ДатаНачалаУчетаПрослеживаемости
	|	И КорректировкаРеализации.Проведен
	|	И СтраныМира.Ссылка <> ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|	И СтраныМира.УчастникЕАЭС
	|	И НЕ КорректировкаРеализации.РучнаяКорректировка
	|
	|СГРУППИРОВАТЬ ПО
	|	КорректировкаРеализацииТовары.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1000
	|	СписокВсехВозвратовЕАЭССПрослеживаемымиТоварам.Ссылка КАК Ссылка
	|ИЗ
	|	СписокВсехВозвратовЕАЭССПрослеживаемымиТоварам КАК СписокВсехВозвратовЕАЭССПрослеживаемымиТоварам
	|		ЛЕВОЕ СОЕДИНЕНИЕ СписокУжеСозданныхДвиженийПоДокументам КАК СписокУжеСозданныхДвиженийПоДокументам
	|		ПО СписокВсехВозвратовЕАЭССПрослеживаемымиТоварам.Ссылка = СписокУжеСозданныхДвиженийПоДокументам.Регистратор
	|ГДЕ
	|	СписокУжеСозданныхДвиженийПоДокументам.Регистратор ЕСТЬ NULL";
				   
				   
	Результат = Запрос.Выполнить();
	Отказ = Ложь;
	
	Если Результат.Пустой() Тогда
		
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
		
	Иначе
		
		ВыборкаРезульта = Результат.Выбрать();
		
		Пока ВыборкаРезульта.Следующий() Цикл 
			
			ПараметрыПроведения = ПодготовитьПараметрыПроведения(ВыборкаРезульта.Ссылка, Отказ);			
			
			НаборЗаписейРегистра = РегистрыНакопления.ПрослеживаемыеТоварыОтгруженныеВЕАЭС.СоздатьНаборЗаписей();
			ОтборПоРегистратору = НаборЗаписейРегистра.Отбор.Регистратор;
			ОтборПоРегистратору.Установить(ВыборкаРезульта.Ссылка);
			НаборЗаписейРегистра.Прочитать();
			
			СформироватьНаборДвиженийПрослеживаемыхТоваровПоКорректировке(
				ПараметрыПроведения.КорректировкаПрослеживаемыхТоваровЕАЭС,
				ПараметрыПроведения.НДСРеквизиты, НаборЗаписейРегистра);
			
			Если НаборЗаписейРегистра <> Неопределено Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписейРегистра, Истина);
			КонецЕсли;
		
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры	

Процедура СформироватьНаборДвиженийПрослеживаемыхТоваровПоКорректировке(
		ТаблицаТовары, ТаблицаРеквизиты, НаборЗаписейРегистра)
		
	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат ;
	КонецЕсли;
	
	ОбщиеПараметры = ПрослеживаемостьБП.ПодготовитьОбщиеПараметры(ТаблицаРеквизиты);
	Реквизиты = ОбщиеПараметры.Реквизиты[0];

	
	ДвиженияКорректировкиПрослеживаемыхТоваровЕАЭС(ТаблицаТовары, Реквизиты, НаборЗаписейРегистра);

КонецПроцедуры 

Процедура ДвиженияКорректировкиПрослеживаемыхТоваровЕАЭС(ТаблицаТовары, Реквизиты, НаборЗаписейРегистра)
	
	Если Не ЗначениеЗаполнено(ТаблицаТовары) Тогда
		Возврат ;
	КонецЕсли;
	
	Параметры = ПрослеживаемостьБП.ПодготовитьПараметрыКорректировкиПрослеживаемыхТоваров(ТаблицаТовары);
	
	Для Каждого СтрокаТаблицы Из Параметры.Товары Цикл
		
		Запись = НаборЗаписейРегистра.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, Реквизиты);
		ЗаполнитьЗначенияСвойств(Запись, СтрокаТаблицы);
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ПечатьЧека

Функция ТекстЗапросаПараметрыПечатиЧека(ДокументСсылка, НомераТаблиц, СообщениеОбОшибке) Экспорт
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "ВидОперации, СуммаДокумента");
	Если РеквизитыДокумента.ВидОперации <> Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение Тогда
	
		СообщениеОбОшибке = НСтр("ru = 'Печать чека из документа ""Корректировка реализации"" возможна только для возврата по согласованию сторон.'");
		Возврат Неопределено;
	ИначеЕсли РеквизитыДокумента.СуммаДокумента <> 0 Тогда
		
		СообщениеОбОшибке = НСтр("ru = 'Печать чека из документа ""Корректировка реализации"" возможна только для операции полного возврата товара.'");
		Возврат Неопределено;
	КонецЕсли; 
	
	ТекстЗапроса = ТекстЗапросаРеквизитыПечатиЧека(НомераТаблиц) 
		+ ТекстЗапросаДанныеДляПечатиЧека(НомераТаблиц);
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаРеквизитыПечатиЧека(ИменаТаблиц)
	
	ИменаТаблиц.Добавить("ВТ_ДоговорПлатежногоАгента");
	ИменаТаблиц.Добавить("ВТ_ДоговорПлатежногоАгентаСводно");
	ИменаТаблиц.Добавить("ВТ_Реквизиты");
	ИменаТаблиц.Добавить("ВТ_РасшифровкаПлатежа");
	ИменаТаблиц.Добавить("РеквизитыПечатиЧека");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.ДоговорКонтрагента КАК ДоговорПлатежногоАгента,
	|	РеализацияТоваровУслуг.Контрагент КАК ПлатежныйАгент,
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_ДоговораПлатежногоАгента
	|ИЗ
	|	Документ.КорректировкаРеализации.АгентскиеУслуги КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ДокументСсылка
	|	И РеализацияТоваровУслуг.ДоговорКонтрагента.ПлатежныйАгент
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслуг.ДоговорКонтрагента,
	|	РеализацияТоваровУслуг.Ссылка,
	|	РеализацияТоваровУслуг.Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДоговораПлатежногоАгента.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ВТ_ДоговораПлатежногоАгента.ДоговорПлатежногоАгента) КАК ДоговорПлатежногоАгента,
	|	ВТ_ДоговораПлатежногоАгента.ПлатежныйАгент КАК ПлатежныйАгент,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ДоговораПлатежногоАгента.ДоговорПлатежногоАгента) КАК КоличествоДоговоров
	|ПОМЕСТИТЬ ВТ_ДоговораПлатежногоАгентаСводно
	|ИЗ
	|	ВТ_ДоговораПлатежногоАгента КАК ВТ_ДоговораПлатежногоАгента
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДоговораПлатежногоАгента.Ссылка,
	|	ВТ_ДоговораПлатежногоАгента.ПлатежныйАгент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	РеализацияТоваровУслуг.Организация КАК Организация,
	|	РеализацияТоваровУслуг.ДокументРеализации КАК ДокументОснование,
	|	РеализацияТоваровУслуг.СуммаДокумента КАК СуммаДокумента,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.Склад КАК Склад,
	|	РеализацияТоваровУслуг.Дата КАК Дата,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.ВидОперации КАК ВидОперации,
	|	РеализацияТоваровУслуг.ДокументРеализации.Патент КАК Патент,
	|	РеализацияТоваровУслуг.ВалютаДокумента КАК ВалютаДокумента,
	|	ЕСТЬNULL(ВТ_ДоговораПлатежногоАгента.ДоговорПлатежногоАгента, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК ДоговорПлатежногоАгента,
	|	ЕСТЬNULL(ВТ_ДоговораПлатежногоАгента.ПлатежныйАгент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК ПлатежныйАгент,
	|	ЕСТЬNULL(ВТ_ДоговораПлатежногоАгента.КоличествоДоговоров, 0) > 1 КАК НесколькоДоговоровПлатежногоАгента
	|ПОМЕСТИТЬ ВТ_Реквизиты
	|ИЗ
	|	Документ.КорректировкаРеализации КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДоговораПлатежногоАгентаСводно КАК ВТ_ДоговораПлатежногоАгента
	|		ПО РеализацияТоваровУслуг.Ссылка = ВТ_ДоговораПлатежногоАгента.Ссылка
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.Ссылка КАК Ссылка,
	|	РеализацияТоваровУслугТовары.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	РеализацияТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(РеализацияТоваровУслугТовары.СуммаНДС) КАК СуммаНДС,
	|	РеализацияТоваровУслугТовары.Ссылка КАК Сделка,
	|	0 КАК СуммаПлатежа,
	|	0 КАК СуммаВзаиморасчетов
	|ПОМЕСТИТЬ ВТ_РасшифровкаПлатежа
	|ИЗ
	|	Документ.КорректировкаРеализации.Товары КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслугТовары.Ссылка,
	|	РеализацияТоваровУслугТовары.Ссылка.ДоговорКонтрагента,
	|	РеализацияТоваровУслугТовары.СтавкаНДС,
	|	РеализацияТоваровУслугТовары.Ссылка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеализацияТоваровУслугУслуги.Ссылка,
	|	РеализацияТоваровУслугУслуги.Ссылка.ДоговорКонтрагента,
	|	РеализацияТоваровУслугУслуги.СтавкаНДС,
	|	РеализацияТоваровУслугУслуги.СуммаНДС,
	|	РеализацияТоваровУслугУслуги.Ссылка,
	|	0,
	|	0
	|ИЗ
	|	Документ.КорректировкаРеализации.Услуги КАК РеализацияТоваровУслугУслуги
	|ГДЕ
	|	РеализацияТоваровУслугУслуги.Ссылка = &ДокументСсылка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеализацияТоваровУслугАгентскиеУслуги.Ссылка,
	|	РеализацияТоваровУслугАгентскиеУслуги.Ссылка.ДоговорКонтрагента,
	|	РеализацияТоваровУслугАгентскиеУслуги.СтавкаНДС,
	|	РеализацияТоваровУслугАгентскиеУслуги.СуммаНДС,
	|	РеализацияТоваровУслугАгентскиеУслуги.Ссылка,
	|	0,
	|	0
	|ИЗ
	|	Документ.КорректировкаРеализации.АгентскиеУслуги КАК РеализацияТоваровУслугАгентскиеУслуги
	|ГДЕ
	|	РеализацияТоваровУслугАгентскиеУслуги.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.Организация КАК Организация,
	|	0 КАК СуммаДокумента,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Номер КАК Номер,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыОплатыККТ.Наличные) КАК ТипОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетаДенежнымиСредствами.ВозвратДенежныхСредств) КАК ТипРасчета,
	|	Реквизиты.Патент КАК Патент,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.ДоговорПлатежногоАгента КАК ДоговорПлатежногоАгента,
	|	Реквизиты.НесколькоДоговоровПлатежногоАгента КАК НесколькоДоговоровПлатежногоАгента,
	|	Реквизиты.ПлатежныйАгент КАК ПлатежныйАгент
	|ИЗ
	|	ВТ_Реквизиты КАК Реквизиты";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
КонецФункции

// Для корректной работы в запросе уже должна быть таблица ВТ_РасшифровкаПлатежа которая содержит данные по всем оплачиваемым документам
// Исходя из данных этой таблицы подбираем документы и номенклатуру этих документов.
Функция ТекстЗапросаДанныеДляПечатиЧека(ИменаТаблиц) Экспорт
	
	// Таблица сделок из реквизитов платежа. В таблице могут быть как счета так и накладные (если печатаем из денежных документов)
	ИменаТаблиц.Добавить("ВТ_Сделки");
	// Сводная таблица товаров из ТЧ Товары, Услуги и АгентскиеУслуги. Используется для формирования таблицы оплачиваемой номенклатуры
	ИменаТаблиц.Добавить("ВТ_Товары");
	
	// Таблицы содержат информацию по номенклатуре из всех документов из таблицы ВТ_Сделки
	ИменаТаблиц.Добавить("ВТ_ОплачиваемаяНоменклатураРеализация");
	
	// Реквизиты документов по которым принимается оплата. Это может быть как текущий документ (если печать идет из накладной), так и все документы нужного вида из ВТ_РеквизитыПлатежа 
	// Используем как самостоятельно, так и для определения суммовых показателей таблицы ОплачиваемаяНоменклатура (валюта, флаг включения НДС в стоимость).
	ИменаТаблиц.Добавить("ВТ_ОплачиваемыеДокументыРеализация"); 
	
	ИменаТаблиц.Добавить("ОплачиваемаяНоменклатура");
	ИменаТаблиц.Добавить("ОплачиваемыеДокументы");
	
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_РасшифровкаПлатежа.Сделка КАК Сделка,
	|	ВТ_РасшифровкаПлатежа.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ВТ_РасшифровкаПлатежа.СуммаПлатежа) КАК СуммаПлатежа,
	|	СУММА(ВТ_РасшифровкаПлатежа.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ВТ_РасшифровкаПлатежа.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов
	|ПОМЕСТИТЬ ВТ_Сделки
	|ИЗ
	|	ВТ_РасшифровкаПлатежа КАК ВТ_РасшифровкаПлатежа
	|ГДЕ
	|	ВТ_РасшифровкаПлатежа.Сделка ССЫЛКА Документ.КорректировкаРеализации
	|	И ВТ_РасшифровкаПлатежа.Сделка <> ЗНАЧЕНИЕ(Документ.КорректировкаРеализации.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_РасшифровкаПлатежа.Сделка,
	|	ВТ_РасшифровкаПлатежа.СтавкаНДС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сделка,
	|	СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаРеализацииТовары.Ссылка КАК Документ,
	|	КорректировкаРеализацииТовары.Номенклатура КАК Номенклатура,
	|	"""" КАК Содержание,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	КорректировкаРеализацииТовары.КоличествоДоИзменения КАК Количество,
	|	КорректировкаРеализацииТовары.ЦенаДоИзменения КАК Цена,
	|	КорректировкаРеализацииТовары.СуммаДоИзменения КАК Сумма,
	|	КорректировкаРеализацииТовары.СтавкаНДСДоИзменения КАК СтавкаНДС,
	|	КорректировкаРеализацииТовары.СуммаНДСДоИзменения КАК СуммаНДС,
	|	КорректировкаРеализацииТовары.НомерСтроки КАК НомерСтроки,
	|	0 КАК НомерТабличнойЧасти,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорПлатежногоАгента,
	|	НЕОПРЕДЕЛЕНО КАК ПлатежныйАгент,
	|	ЕСТЬNULL(КорректировкаРеализацииТовары.СтранаПроисхождения.Код, НЕОПРЕДЕЛЕНО) КАК КодСтраныПроисхожденияТовара,
	|	ЕСТЬNULL(КорректировкаРеализацииТовары.НомерГТД.РегистрационныйНомер, НЕОПРЕДЕЛЕНО) КАК НомерТаможеннойДекларации
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	ВТ_Сделки КАК ВТ_Сделки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
	|		ПО ВТ_Сделки.Сделка = КорректировкаРеализацииТовары.Ссылка
	|			И (ВТ_Сделки.СтавкаНДС = КорректировкаРеализацииТовары.СтавкаНДС
	|				ИЛИ ВТ_Сделки.СтавкаНДС = НЕОПРЕДЕЛЕНО)
	|ГДЕ
	|	НЕ КорректировкаРеализацииТовары.Ссылка ЕСТЬ NULL
	|	И КорректировкаРеализацииТовары.Сумма = 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкаРеализацииУслуги.Ссылка,
	|	КорректировкаРеализацииУслуги.Номенклатура,
	|	КорректировкаРеализацииУслуги.Содержание,
	|	ИСТИНА,
	|	КорректировкаРеализацииУслуги.КоличествоДоИзменения,
	|	КорректировкаРеализацииУслуги.ЦенаДоИзменения,
	|	КорректировкаРеализацииУслуги.СуммаДоИзменения,
	|	КорректировкаРеализацииУслуги.СтавкаНДСДоИзменения,
	|	КорректировкаРеализацииУслуги.СуммаНДСДоИзменения,
	|	КорректировкаРеализацииУслуги.НомерСтроки,
	|	1,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	ВТ_Сделки КАК ВТ_Сделки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализацииУслуги
	|		ПО ВТ_Сделки.Сделка = КорректировкаРеализацииУслуги.Ссылка
	|			И (ВТ_Сделки.СтавкаНДС = КорректировкаРеализацииУслуги.СтавкаНДС
	|				ИЛИ ВТ_Сделки.СтавкаНДС = НЕОПРЕДЕЛЕНО)
	|ГДЕ
	|	НЕ КорректировкаРеализацииУслуги.Ссылка ЕСТЬ NULL
	|	И КорректировкаРеализацииУслуги.Сумма = 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкаРеализацииАгентскиеУслуги.Ссылка,
	|	КорректировкаРеализацииАгентскиеУслуги.Номенклатура,
	|	КорректировкаРеализацииАгентскиеУслуги.Содержание,
	|	ИСТИНА,
	|	КорректировкаРеализацииАгентскиеУслуги.КоличествоДоИзменения,
	|	КорректировкаРеализацииАгентскиеУслуги.ЦенаДоИзменения,
	|	КорректировкаРеализацииАгентскиеУслуги.СуммаДоИзменения,
	|	КорректировкаРеализацииАгентскиеУслуги.СтавкаНДСДоИзменения,
	|	КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоИзменения,
	|	КорректировкаРеализацииАгентскиеУслуги.НомерСтроки,
	|	2,
	|	КорректировкаРеализацииАгентскиеУслуги.ДоговорКонтрагента,
	|	КорректировкаРеализацииАгентскиеУслуги.Контрагент,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	ВТ_Сделки КАК ВТ_Сделки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.АгентскиеУслуги КАК КорректировкаРеализацииАгентскиеУслуги
	|		ПО ВТ_Сделки.Сделка = КорректировкаРеализацииАгентскиеУслуги.Ссылка
	|			И (ВТ_Сделки.СтавкаНДС = КорректировкаРеализацииАгентскиеУслуги.СтавкаНДС
	|				ИЛИ ВТ_Сделки.СтавкаНДС = НЕОПРЕДЕЛЕНО)
	|ГДЕ
	|	НЕ КорректировкаРеализацииАгентскиеУслуги.Ссылка ЕСТЬ NULL
	|	И КорректировкаРеализацииАгентскиеУслуги.Сумма = 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Сделки.Сделка КАК Документ,
	|	ДокументКорректировкаРеализации.Дата КАК ДатаДокумента,
	|	ДокументКорректировкаРеализации.Организация КАК Организация,
	|	ДокументКорректировкаРеализации.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДокументКорректировкаРеализации.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ДокументКорректировкаРеализации.ВалютаДокумента КАК ВалютаДокумента,
	|	РеализацияТовары.НомерСтроки КАК НомерСтроки,
	|	РеализацияТовары.НомерТабличнойЧасти КАК НомерТабличнойЧасти,
	|	РеализацияТовары.Номенклатура КАК Номенклатура,
	|	ВЫРАЗИТЬ(&ЧастьЗапросаДляВыбораСодержанияУслуг КАК СТРОКА(200)) КАК Наименование,
	|	РеализацияТовары.ЭтоУслуга КАК ЭтоУслуга,
	|	РеализацияТовары.ДоговорПлатежногоАгента КАК ДоговорПлатежногоАгента,
	|	РеализацияТовары.ПлатежныйАгент КАК ПлатежныйАгент,
	|	СУММА(ВЫБОР
	|			КОГДА РеализацияТовары.Количество = 0
	|					И ЕСТЬNULL(РеализацияТовары.ЭтоУслуга, ИСТИНА)
	|				ТОГДА 1
	|			ИНАЧЕ РеализацияТовары.Количество
	|		КОНЕЦ) КАК Количество,
	|	СУММА(ВЫБОР
	|			КОГДА РеализацияТовары.Количество = 0
	|					И ЕСТЬNULL(РеализацияТовары.ЭтоУслуга, ИСТИНА)
	|				ТОГДА 1
	|			ИНАЧЕ РеализацияТовары.Количество
	|		КОНЕЦ) КАК КоличествоОтгружено,
	|	СУММА(ВЫРАЗИТЬ(ВЫБОР
	|				КОГДА ДокументКорректировкаРеализации.СуммаВключаетНДС
	|					ТОГДА РеализацияТовары.Цена
	|				КОГДА РеализацияТовары.Количество = 0
	|					ТОГДА РеализацияТовары.Сумма + РеализацияТовары.СуммаНДС
	|				ИНАЧЕ (РеализацияТовары.Сумма + РеализацияТовары.СуммаНДС) / РеализацияТовары.Количество
	|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК Цена,
	|	РеализацияТовары.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(РеализацияТовары.СуммаНДС) КАК СуммаНДС,
	|	0 КАК СуммаСкидок,
	|	СУММА(ВЫБОР
	|			КОГДА ДокументКорректировкаРеализации.СуммаВключаетНДС
	|				ТОГДА РеализацияТовары.Сумма
	|			ИНАЧЕ РеализацияТовары.Сумма + РеализацияТовары.СуммаНДС
	|		КОНЕЦ) КАК Сумма,
	|	РеализацияТовары.КодСтраныПроисхожденияТовара КАК КодСтраныПроисхожденияТовара,
	|	РеализацияТовары.НомерТаможеннойДекларации КАК НомерТаможеннойДекларации
	|ПОМЕСТИТЬ ВТ_ОплачиваемаяНоменклатураРеализация
	|ИЗ
	|	ВТ_Сделки КАК ВТ_Сделки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Товары КАК РеализацияТовары
	|		ПО ВТ_Сделки.Сделка = РеализацияТовары.Документ
	|			И (ВТ_Сделки.СтавкаНДС = РеализацияТовары.СтавкаНДС
	|				ИЛИ ВТ_Сделки.СтавкаНДС = НЕОПРЕДЕЛЕНО)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК ДокументКорректировкаРеализации
	|		ПО ВТ_Сделки.Сделка = ДокументКорректировкаРеализации.Ссылка
	|ГДЕ
	|	НЕ РеализацияТовары.Документ ЕСТЬ NULL
	|	И (РеализацияТовары.Количество <> 0
	|			ИЛИ РеализацияТовары.ЭтоУслуга)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Сделки.Сделка,
	|	ВЫРАЗИТЬ(&ЧастьЗапросаДляВыбораСодержанияУслуг КАК СТРОКА(200)),
	|	ДокументКорректировкаРеализации.Дата,
	|	ДокументКорректировкаРеализации.Организация,
	|	ДокументКорректировкаРеализации.ДоговорКонтрагента,
	|	ДокументКорректировкаРеализации.СуммаВключаетНДС,
	|	ДокументКорректировкаРеализации.ВалютаДокумента,
	|	РеализацияТовары.НомерСтроки,
	|	РеализацияТовары.Номенклатура,
	|	РеализацияТовары.ЭтоУслуга,
	|	РеализацияТовары.ДоговорПлатежногоАгента,
	|	РеализацияТовары.СтавкаНДС,
	|	РеализацияТовары.ПлатежныйАгент,
	|	РеализацияТовары.КодСтраныПроисхожденияТовара,
	|	РеализацияТовары.НомерТаможеннойДекларации,
	|	РеализацияТовары.НомерТабличнойЧасти
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОплачиваемаяНоменклатура.Документ КАК Документ,
	|	ОплачиваемаяНоменклатура.Организация КАК Организация,
	|	ОплачиваемаяНоменклатура.ДатаДокумента КАК Дата,
	|	ОплачиваемаяНоменклатура.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	0 КАК СуммаСкидкиПоДокументу,
	|	ЕСТЬNULL(ДоговорыКонтрагентов.Ссылка, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ДоговорыКонтрагентов.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	ОплачиваемаяНоменклатура.ВалютаДокумента КАК ВалютаДокумента,
	|	ОплачиваемаяНоменклатура.ВалютаДокумента КАК ВалютаПлатежа,
	|	ВТ_Сделки.СуммаПлатежа КАК СуммаОплаты,
	|	ВТ_Сделки.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ОплачиваемаяНоменклатура.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ОплачиваемаяНоменклатура.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ОплачиваемаяНоменклатура.Сумма) КАК Сумма,
	|	ЛОЖЬ КАК ЭтоВозврат
	|ПОМЕСТИТЬ ВТ_ОплачиваемыеДокументыРеализация
	|ИЗ
	|	ВТ_Сделки КАК ВТ_Сделки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОплачиваемаяНоменклатураРеализация КАК ОплачиваемаяНоменклатура
	|		ПО ВТ_Сделки.Сделка = ОплачиваемаяНоменклатура.Документ
	|			И (ВТ_Сделки.СтавкаНДС = ОплачиваемаяНоменклатура.СтавкаНДС
	|				ИЛИ ВТ_Сделки.СтавкаНДС = НЕОПРЕДЕЛЕНО)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО (ОплачиваемаяНоменклатура.ДоговорКонтрагента = ДоговорыКонтрагентов.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОплачиваемаяНоменклатура.Документ,
	|	ОплачиваемаяНоменклатура.Организация,
	|	ОплачиваемаяНоменклатура.ДатаДокумента,
	|	ОплачиваемаяНоменклатура.СуммаВключаетНДС,
	|	ЕСТЬNULL(ДоговорыКонтрагентов.Ссылка, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)),
	|	ВТ_Сделки.СуммаПлатежа,
	|	ВТ_Сделки.СуммаВзаиморасчетов,
	|	ОплачиваемаяНоменклатура.СтавкаНДС,
	|	ОплачиваемаяНоменклатура.ВалютаДокумента,
	|	ЕСТЬNULL(ДоговорыКонтрагентов.РасчетыВУсловныхЕдиницах, ЛОЖЬ),
	|	ОплачиваемаяНоменклатура.ВалютаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОплачиваемаяНоменклатура.Документ КАК Документ,
	|	ОплачиваемаяНоменклатура.ДатаДокумента КАК ДатаДокумента,
	|	ОплачиваемаяНоменклатура.Номенклатура КАК Номенклатура,
	|	ОплачиваемаяНоменклатура.Наименование КАК Наименование,
	|	ЕСТЬNULL(СправочникНоменклатура.ЕдиницаИзмерения.Код, Неопределено) КАК КодЕдиницыИзмерения,
	|	ЕСТЬNULL(СправочникНоменклатура.КодНоменклатурнойКлассификацииККТ.Код, НЕОПРЕДЕЛЕНО) КАК КодВидаНоменклатурнойКлассификации,
	|	ЕСТЬNULL(СправочникНоменклатура.КодВидаТРУ, НЕОПРЕДЕЛЕНО) КАК КодВидаТРУ,
	|	ЕСТЬNULL(СправочникНоменклатура.Артикул, НЕОПРЕДЕЛЕНО) КАК Артикул,
	|	ОплачиваемаяНоменклатура.ДоговорПлатежногоАгента КАК ДоговорПлатежногоАгента,
	|	ОплачиваемаяНоменклатура.ПлатежныйАгент КАК ПлатежныйАгент,
	|	ОплачиваемаяНоменклатура.ЭтоУслуга КАК ЭтоУслуга,
	|	СУММА(ОплачиваемаяНоменклатура.Количество) КАК Количество,
	|	СУММА(ОплачиваемаяНоменклатура.КоличествоОтгружено) КАК КоличествоОтгружено,
	|	ОплачиваемаяНоменклатура.Цена КАК Цена,
	|	ОплачиваемаяНоменклатура.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ОплачиваемаяНоменклатура.СуммаСкидок) КАК СуммаСкидок,
	|	СУММА(ОплачиваемаяНоменклатура.Сумма) КАК Сумма,
	|	МИНИМУМ(ОплачиваемаяНоменклатура.НомерСтроки) КАК НомерСтроки,
	|	МИНИМУМ(ОплачиваемаяНоменклатура.НомерТабличнойЧасти) КАК НомерТабличнойЧасти,
	|	СУММА(ОплачиваемаяНоменклатура.СуммаНДС) КАК СуммаНДС,
	|	ОплачиваемаяНоменклатура.КодСтраныПроисхожденияТовара КАК КодСтраныПроисхожденияТовара,
	|	ОплачиваемаяНоменклатура.НомерТаможеннойДекларации КАК НомерТаможеннойДекларации
	|ИЗ
	|	ВТ_ОплачиваемаяНоменклатураРеализация КАК ОплачиваемаяНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ОплачиваемаяНоменклатура.Номенклатура = СправочникНоменклатура.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОплачиваемаяНоменклатура.Номенклатура,
	|	ЕСТЬNULL(СправочникНоменклатура.КодНоменклатурнойКлассификацииККТ.Код, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(СправочникНоменклатура.КодВидаТРУ, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(СправочникНоменклатура.Артикул, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(СправочникНоменклатура.ЕдиницаИзмерения.Код, Неопределено),
	|	ОплачиваемаяНоменклатура.ЭтоУслуга,
	|	ОплачиваемаяНоменклатура.СтавкаНДС,
	|	ОплачиваемаяНоменклатура.Наименование,
	|	ОплачиваемаяНоменклатура.ДатаДокумента,
	|	ОплачиваемаяНоменклатура.ДоговорПлатежногоАгента,
	|	ОплачиваемаяНоменклатура.Документ,
	|	ОплачиваемаяНоменклатура.Цена,
	|	ОплачиваемаяНоменклатура.ПлатежныйАгент,
	|	ОплачиваемаяНоменклатура.КодСтраныПроисхожденияТовара,
	|	ОплачиваемаяНоменклатура.НомерТаможеннойДекларации,
	|	ОплачиваемаяНоменклатура.НомерТабличнойЧасти
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОплачиваемыеДокументыРеализация.Документ КАК Документ,
	|	ВТ_ОплачиваемыеДокументыРеализация.Организация КАК Организация,
	|	ВТ_ОплачиваемыеДокументыРеализация.Дата КАК Дата,
	|	ВТ_ОплачиваемыеДокументыРеализация.СуммаСкидкиПоДокументу КАК СуммаСкидкиПоДокументу,
	|	ВТ_ОплачиваемыеДокументыРеализация.РасчетыВУсловныхЕдиницах
	|		И ВТ_ОплачиваемыеДокументыРеализация.ВалютаДокумента <> ВТ_ОплачиваемыеДокументыРеализация.ВалютаПлатежа КАК РасчетыВУсловныхЕдиницах,
	|	ВТ_ОплачиваемыеДокументыРеализация.СтавкаНДС КАК СтавкаНДС,
	|	ВТ_ОплачиваемыеДокументыРеализация.СуммаОплаты КАК СуммаОплаты,
	|	ВТ_ОплачиваемыеДокументыРеализация.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	0 КАК СуммаОплатыВсего
	|ИЗ
	|	ВТ_ОплачиваемыеДокументыРеализация КАК ВТ_ОплачиваемыеДокументыРеализация";
	
	ЧастьЗапросаДляВыбораСодержанияУслуг = ОбщегоНазначенияБПВызовСервера.ПолучитьЧастьЗапросаДляВыбораСодержанияУслуг("РеализацияТовары");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЧастьЗапросаДляВыбораСодержанияУслуг", ЧастьЗапросаДляВыбораСодержанияУслуг);
	
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
КонецФункции

Функция НаименованиеВСтрокеЧека(СтруктураШапки) Экспорт
	
	Возврат "";
	
КонецФункции

#КонецОбласти 

// Возвращаяет массив документов, для которых выписка счетов-фактур не требуется
//
Функция СчетаФактурыНеТребуются(МассивДокументов) Экспорт
	
	ДокументыСчетФактураНеТребуются = Новый Массив;
	
	Если НЕ ЗначениеЗаполнено(МассивДокументов) Тогда
		Возврат ДокументыСчетФактураНеТребуются
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаРеализации.Ссылка КАК Ссылка,
	|	ИСТИНА КАК ЕстьНДС
	|ПОМЕСТИТЬ ВТ_ДокументыСНДС
	|ИЗ
	|	Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализации
	|ГДЕ
	|	КорректировкаРеализации.Ссылка В(&МассивДокументов)
	|	И (КорректировкаРеализации.СуммаНДС > 0
	|			ИЛИ КорректировкаРеализации.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|			ИЛИ КорректировкаРеализации.СуммаНДСДоКорректировки > 0
	|			ИЛИ КорректировкаРеализации.СуммаНДСДоИзменения > 0
	|			ИЛИ КорректировкаРеализации.СтавкаНДСДоИзменения = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаРеализации.Ссылка,
	|	ИСТИНА
	|ИЗ
	|	Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализации
	|ГДЕ
	|	КорректировкаРеализации.Ссылка В(&МассивДокументов)
	|	И (КорректировкаРеализации.СуммаНДС > 0
	|			ИЛИ КорректировкаРеализации.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|			ИЛИ КорректировкаРеализации.СуммаНДСДоКорректировки > 0
	|			ИЛИ КорректировкаРеализации.СуммаНДСДоИзменения > 0
	|			ИЛИ КорректировкаРеализации.СтавкаНДСДоИзменения = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаРеализации.Ссылка,
	|	ИСТИНА
	|ИЗ
	|	Документ.КорректировкаРеализации.АгентскиеУслуги КАК КорректировкаРеализации
	|ГДЕ
	|	КорректировкаРеализации.Ссылка В(&МассивДокументов)
	|	И (КорректировкаРеализации.СуммаНДС > 0
	|			ИЛИ КорректировкаРеализации.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|			ИЛИ КорректировкаРеализации.СуммаНДСДоКорректировки > 0
	|			ИЛИ КорректировкаРеализации.СуммаНДСДоИзменения > 0
	|			ИЛИ КорректировкаРеализации.СтавкаНДСДоИзменения = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка КАК Ссылка,
	|	КорректировкаРеализации.Дата КАК Дата,
	|	КорректировкаРеализации.Организация КАК Организация,
	|	ЕСТЬNULL(ВТ_ДокументыСНДС.ЕстьНДС, ЛОЖЬ) КАК ЕстьНДС
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДокументыСНДС КАК ВТ_ДокументыСНДС
	|		ПО (ВТ_ДокументыСНДС.Ссылка = КорректировкаРеализации.Ссылка)
	|ГДЕ
	|	КорректировкаРеализации.Ссылка В(&МассивДокументов)
	|	И НЕ КорректировкаРеализации.ДоговорКонтрагента.УчетАгентскогоНДСПокупателем
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|ГДЕ
	|	КорректировкаРеализации.Ссылка В(&МассивДокументов)
	|	И (КорректировкаРеализации.ДоговорКонтрагента.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером)
	|				И КорректировкаРеализации.ИсправляемыйДокументРеализации ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ИЛИ НЕ КорректировкаРеализации.КорректироватьНДС)";
	
	Результат = Запрос.ВыполнитьПакет();
	
	// Общий случай
	
	Выборка = Результат[1].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если НЕ Выборка.ЕстьНДС
			И (НЕ УчетнаяПолитика.ПлательщикНДС(Выборка.Организация, Выборка.Дата) 
			ИЛИ УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(Выборка.Дата) >= 3 
			И НЕ УчетнаяПолитика.ПрименяетсяОсвобождениеОтУплатыНДС(Выборка.Организация, Выборка.Дата)) Тогда
			ДокументыСчетФактураНеТребуются.Добавить(Выборка.Ссылка);
		КонецЕсли;
		
	КонецЦикла;
	
	// Отгрузки по договорам комиссии
	ВыборкаКомиссия = Результат[2].Выбрать();
	Пока ВыборкаКомиссия.Следующий() Цикл
		ДокументыСчетФактураНеТребуются.Добавить(ВыборкаКомиссия.Ссылка);
	КонецЦикла;
	
	Возврат ДокументыСчетФактураНеТребуются;
	
КонецФункции

// Возвращаяет массив документов с прослеживаемыми товарами.
//
// Параметры:
// МассивДокументов - массив проверяемых документов.
//
// Возвращаемое значение:
// ДокументыСПрослеживаемымиТоварами - массив документов с прослеживаемыми товарами.
//
Функция ДокументыСПрослеживаемымиТоварами(МассивДокументов) Экспорт
	
	ДокументыСПрослеживаемымиТоварами = Новый Массив;
	
	Если НЕ ЗначениеЗаполнено(МассивДокументов) Тогда
		Возврат ДокументыСПрослеживаемымиТоварами
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СведенияПрослеживаемостиДо.Количество, 0) - ЕСТЬNULL(СведенияПрослеживаемостиПосле.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(СведенияПрослеживаемостиДо.Сумма, 0) - ЕСТЬNULL(СведенияПрослеживаемостиПосле.Сумма, 0) КАК Сумма,
	|	СведенияПрослеживаемостиПосле.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	СведенияПрослеживаемостиПосле.Ссылка КАК Ссылка,
	|	ИСТИНА КАК ТоварыВРаботах
	|ПОМЕСТИТЬ ВТ_ИзмененияПоСведениямПрослеживаемости
	|ИЗ
	|	Документ.КорректировкаРеализации.СведенияПрослеживаемости КАК СведенияПрослеживаемостиДо
	|		ПОЛНОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.СведенияПрослеживаемости КАК СведенияПрослеживаемостиПосле
	|		ПО СведенияПрослеживаемостиДо.ИдентификаторСтроки = СведенияПрослеживаемостиПосле.ИдентификаторСтроки
	|			И СведенияПрослеживаемостиДо.РНПТ = СведенияПрослеживаемостиПосле.РНПТ
	|			И СведенияПрослеживаемостиДо.Номенклатура = СведенияПрослеживаемостиПосле.Номенклатура
	|ГДЕ
	|	СведенияПрослеживаемостиДо.ЭтоСтрокаСИсходнымиРНПТ = ИСТИНА
	|	И СведенияПрослеживаемостиПосле.ЭтоСтрокаСИсходнымиРНПТ = ЛОЖЬ
	|	И СведенияПрослеживаемостиДо.Ссылка В(&МассивДокументов)
	|	И СведенияПрослеживаемостиПосле.Ссылка В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА КорректировкаРеализацииТовары.Сумма - КорректировкаРеализацииТовары.СуммаДоИзменения <> 0
	|			ТОГДА КорректировкаРеализацииТовары.ПрослеживаемыйТовар
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПрослеживаемыйТовар,
	|	КорректировкаРеализацииТовары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_ПрослеживаемыеТовары
	|ИЗ
	|	Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
	|ГДЕ
	|	КорректировкаРеализацииТовары.Ссылка В(&МассивДокументов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА КорректировкаРеализации.ИсходныйДокументРеализации.Дата < ДАТАВРЕМЯ(2023, 10, 1)
	|				И (ВТ_ИзмененияПоСведениямПрослеживаемости.Количество <> 0
	|					ИЛИ ВТ_ИзмененияПоСведениямПрослеживаемости.Сумма <> 0)
	|			ТОГДА ИСТИНА
	|		КОГДА КорректировкаРеализации.ИсходныйДокументРеализации.Дата >= ДАТАВРЕМЯ(2023, 10, 1)
	|				И КорректировкаРеализацииУслуги.Сумма - КорректировкаРеализацииУслуги.СуммаДоИзменения <> 0
	|			ТОГДА ЕСТЬNULL(ВТ_ИзмененияПоСведениямПрослеживаемости.ТоварыВРаботах, ЛОЖЬ)
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	КорректировкаРеализацииУслуги.Ссылка
	|ИЗ
	|	Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализацииУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИзмененияПоСведениямПрослеживаемости КАК ВТ_ИзмененияПоСведениямПрослеживаемости
	|		ПО КорректировкаРеализацииУслуги.Ссылка = ВТ_ИзмененияПоСведениямПрослеживаемости.Ссылка
	|			И КорректировкаРеализацииУслуги.ИдентификаторСтроки = ВТ_ИзмененияПоСведениямПрослеживаемости.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ПО КорректировкаРеализацииУслуги.Ссылка = КорректировкаРеализации.Ссылка
	|ГДЕ
	|	КорректировкаРеализацииУслуги.Ссылка В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ПрослеживаемыеТовары.Ссылка КАК Ссылка
	|ИЗ
	|	ВТ_ПрослеживаемыеТовары КАК ВТ_ПрослеживаемыеТовары
	|ГДЕ
	|	ВТ_ПрослеживаемыеТовары.ПрослеживаемыйТовар = ИСТИНА";
	
	ДокументыСПрослеживаемымиТоварами = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат ДокументыСПрослеживаемымиТоварами;
	
КонецФункции

#Область СлужебныйПрограммныйИнтерфейс

// Определяет, какой вид счета-факуры выписывается (корректировочный или обычный, УКД или УПД)
//
//
// Параметры (название, тип, дифференцированное значение)
//     ВидОперации         - ПеречислениеСсылка.ВидыОперацийИсправленияПоступленияРеализации - вид операции корректировки реализации
//     ДокументРеализации - ДокументСсылка - основание корректировки реализации
// Возвращаемое значение: 
//     Булево - Истина, если выписывается корректировочный счет-фактура (или УПД)
Функция ЭтоКорректировка(ВидОперации, ДокументРеализации) Экспорт
	
	Если ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение Тогда
		Возврат Истина;
	Иначе
		ИсходныйДокумент = УчетНДСПереопределяемый.ПолучитьИсправляемыйДокументРеализации(ДокументРеализации);
		Возврат ТипЗнч(ИсходныйДокумент) = Тип("ДокументСсылка.КорректировкаРеализации");
	КонецЕсли;

КонецФункции

#КонецОбласти

Функция ПолучитьСведенияПрослеживаемостиПоВозврату(ДокументВозврата)
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателя.Сделка КАК Сделка,
	|	ВозвратТоваровОтПокупателя.МоментВремени КАК МоментВремени
	|ПОМЕСТИТЬ ВТ_Реквизиты
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|ГДЕ
	|	ВозвратТоваровОтПокупателя.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателяТовары.Номенклатура КАК Номенклатура,
	|	ВозвратТоваровОтПокупателяТовары.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар,
	|	ВозвратТоваровОтПокупателяТовары.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект,
	|	ВозвратТоваровОтПокупателяТовары.Цена КАК Цена,
	|	ВозвратТоваровОтПокупателяТовары.Количество КАК Количество,
	|	ВозвратТоваровОтПокупателяТовары.СтавкаНДС КАК СтавкаНДС,
	|	ВозвратТоваровОтПокупателяСведенияПрослеживаемости.Количество КАК КоличествоРНПТ,
	|	ВозвратТоваровОтПокупателяСведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	ВозвратТоваровОтПокупателяСведенияПрослеживаемости.Номенклатура КАК Комплектующий,
	|	ВозвратТоваровОтПокупателяСведенияПрослеживаемости.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВозвратТоваровОтПокупателяСведенияПрослеживаемости.Комитент КАК Комитент,
	|	ВозвратТоваровОтПокупателяТовары.СтранаПроисхождения КАК СтранаПроисхожденияПрослеживаемости,
	|	ВозвратТоваровОтПокупателяСведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	ВозвратТоваровОтПокупателяСведенияПрослеживаемости.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВозвращенныеТовары
	|ИЗ
	|	ВТ_Реквизиты КАК ВТ_Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя.СведенияПрослеживаемости КАК ВозвратТоваровОтПокупателяСведенияПрослеживаемости
	|			ПО ВозвратТоваровОтПокупателяТовары.Ссылка = ВозвратТоваровОтПокупателяСведенияПрослеживаемости.Ссылка
	|				И ВозвратТоваровОтПокупателяТовары.ИдентификаторСтроки = ВозвратТоваровОтПокупателяСведенияПрослеживаемости.ИдентификаторСтроки
	|		ПО ВТ_Реквизиты.Сделка = ВозвратТоваровОтПокупателяТовары.Ссылка.Сделка
	|ГДЕ
	|	ВозвратТоваровОтПокупателяТовары.Ссылка.МоментВремени <= ВТ_Реквизиты.МоментВремени
	|	И ВозвратТоваровОтПокупателяТовары.ПрослеживаемыйТовар = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	РеализацияТоваровУслугТовары.Цена КАК Цена,
	|	РеализацияТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
	|	РеализацияТоваровУслугТовары.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар,
	|	РеализацияТоваровУслугТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	РеализацияТоваровУслугТовары.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект,
	|	РеализацияТоваровУслугТовары.Количество КАК Количество,
	|	РеализацияТоваровУслугСведенияПрослеживаемости.Количество КАК КоличествоРНПТ,
	|	РеализацияТоваровУслугСведенияПрослеживаемости.Комитент КАК Комитент,
	|	РеализацияТоваровУслугСведенияПрослеживаемости.Номенклатура КАК Комплектующий,
	|	РеализацияТоваровУслугСведенияПрослеживаемости.СтранаПроисхождения КАК СтранаПроисхождения,
	|	РеализацияТоваровУслугТовары.СтранаПроисхождения КАК СтранаПроисхожденияПрослеживаемости,
	|	РеализацияТоваровУслугСведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	РеализацияТоваровУслугСведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	РеализацияТоваровУслугСведенияПрослеживаемости.Сумма КАК Сумма
	|ПОМЕСТИТЬ РеализованныеТовары
	|ИЗ
	|	ВТ_Реквизиты КАК ВТ_Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.СведенияПрослеживаемости КАК РеализацияТоваровУслугСведенияПрослеживаемости
	|			ПО РеализацияТоваровУслугТовары.Ссылка = РеализацияТоваровУслугСведенияПрослеживаемости.Ссылка
	|				И РеализацияТоваровУслугТовары.ИдентификаторСтроки = РеализацияТоваровУслугСведенияПрослеживаемости.ИдентификаторСтроки
	|		ПО ВТ_Реквизиты.Сделка = РеализацияТоваровУслугТовары.Ссылка
	|ГДЕ
	|	РеализацияТоваровУслугТовары.ПрослеживаемыйТовар = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализованныеТовары.Номенклатура КАК Товар,
	|	РеализованныеТовары.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар,
	|	РеализованныеТовары.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект,
	|	РеализованныеТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	РеализованныеТовары.Комитент КАК Комитент,
	|	РеализованныеТовары.Комплектующий КАК Номенклатура,
	|	РеализованныеТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	РеализованныеТовары.РНПТ КАК РНПТ,
	|	РеализованныеТовары.КоличествоПрослеживаемости - ЕСТЬNULL(ВозвращенныеТовары.КоличествоПрослеживаемости, 0) КАК КоличествоПрослеживаемости,
	|	РеализованныеТовары.КоличествоРНПТ - ЕСТЬNULL(ВозвращенныеТовары.КоличествоРНПТ, 0) КАК Количество,
	|	РеализованныеТовары.Сумма - ЕСТЬNULL(ВозвращенныеТовары.Сумма, 0) КАК Сумма
	|ПОМЕСТИТЬ РеализованныеИНеВозвращенныеТовары
	|ИЗ
	|	РеализованныеТовары КАК РеализованныеТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВозвращенныеТовары КАК ВозвращенныеТовары
	|		ПО РеализованныеТовары.Номенклатура = ВозвращенныеТовары.Номенклатура
	|			И РеализованныеТовары.Цена = ВозвращенныеТовары.Цена
	|			И РеализованныеТовары.СтавкаНДС = ВозвращенныеТовары.СтавкаНДС
	|			И РеализованныеТовары.СтранаПроисхождения = ВозвращенныеТовары.СтранаПроисхождения
	|			И РеализованныеТовары.Комплектующий = ВозвращенныеТовары.Комплектующий
	|			И РеализованныеТовары.СтранаПроисхожденияПрослеживаемости = ВозвращенныеТовары.СтранаПроисхожденияПрослеживаемости
	|			И РеализованныеТовары.РНПТ = ВозвращенныеТовары.РНПТ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализованныеИНеВозвращенныеТовары.Товар КАК Товар,
	|	РеализованныеИНеВозвращенныеТовары.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар,
	|	РеализованныеИНеВозвращенныеТовары.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект,
	|	РеализованныеИНеВозвращенныеТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	РеализованныеИНеВозвращенныеТовары.Комитент КАК Комитент,
	|	РеализованныеИНеВозвращенныеТовары.Номенклатура КАК Номенклатура,
	|	РеализованныеИНеВозвращенныеТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	РеализованныеИНеВозвращенныеТовары.РНПТ КАК РНПТ,
	|	РеализованныеИНеВозвращенныеТовары.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	РеализованныеИНеВозвращенныеТовары.Количество КАК Количество,
	|	РеализованныеИНеВозвращенныеТовары.Сумма КАК Сумма
	|ИЗ
	|	РеализованныеИНеВозвращенныеТовары КАК РеализованныеИНеВозвращенныеТовары
	|ГДЕ
	|	РеализованныеИНеВозвращенныеТовары.Количество > 0";
	Запрос.УстановитьПараметр("Ссылка", ДокументВозврата);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Процедура ЗаполнитьСведенияПрослеживаемости(Объект, ВедетсяУчетПрослеживаемыхТоваров)
	
	Если Не ВедетсяУчетПрослеживаемыхТоваров Тогда
		Возврат;
	КонецЕсли;
	
	ТабличныеЧастиОснования = Объект.ДокументРеализации.Метаданные().ТабличныеЧасти;
	ЕстьСведенияПрослеживаемости = ТабличныеЧастиОснования.Найти("СведенияПрослеживаемости") <> Неопределено;
	
	Если НЕ ЕстьСведенияПрослеживаемости Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Объект.ДокументРеализации) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		СведенияПрослеживаемости = ПолучитьСведенияПрослеживаемостиПоВозврату(Объект.ДокументРеализации);
	Иначе
		СведенияПрослеживаемости = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ДокументРеализации, "СведенияПрослеживаемости");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СведенияПрослеживаемости)
		Или СведенияПрослеживаемости = Неопределено
		Или (ТипЗнч(СведенияПрослеживаемости) = Тип("РезультатЗапроса") И СведенияПрослеживаемости.Пустой())Тогда
		Возврат;
	КонецЕсли;
	
	ИсходныеСведенияПрослеживаемости = СведенияПрослеживаемости.Выгрузить();
	ЭтоПовторнаяКорректировка = ИсходныеСведенияПрослеживаемости.Колонки.Найти("ЭтоСтрокаСИсходнымиРНПТ") <> Неопределено;
	ЭтоКорректировка = (Объект.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение
		Или Объект.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.ПустаяСсылка());
	Если ЭтоКорректировка Тогда 
		МассивНоменклатуры = ОбщегоНазначения.ВыгрузитьКолонку(ИсходныеСведенияПрослеживаемости, "Номенклатура", Истина);
		РеквизитыНоменклатурыИзИстории = Справочники.Номенклатура.ПризнакПрослеживаемостиНаДатуИзИстории(
			МассивНоменклатуры, Объект.Дата);
	КонецЕсли;

	Для Каждого Строка Из Объект.Товары Цикл
		Если Строка.ПрослеживаемыйТовар Тогда
			СтрокиСведений = ИсходныеСведенияПрослеживаемости.НайтиСтроки(Новый Структура("ИдентификаторСтроки", Строка.ИдентификаторСтроки));
			Если СтрокиСведений <> Неопределено Тогда
				
				Для Каждого СтрокаСведений Из СтрокиСведений Цикл
					Если ЭтоПовторнаяКорректировка
						И СтрокаСведений.ЭтоСтрокаСИсходнымиРНПТ Тогда
						Продолжить;
					КонецЕсли;
					
					Если ЭтоКорректировка И ЗначениеЗаполнено(СтрокаСведений.Номенклатура) Тогда
						РеквизитыПрослеживаемости = РеквизитыНоменклатурыИзИстории.Получить(СтрокаСведений.Номенклатура);
						Если РеквизитыПрослеживаемости <> Неопределено И РеквизитыПрослеживаемости.ПрослеживаемыйТовар = Ложь Тогда
							Продолжить;
						КонецЕсли;
					КонецЕсли;
					
					// Сведения прослеживаемости до корректировки.
					НоваяСтрока = Объект.СведенияПрослеживаемости.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСведений);
					НоваяСтрока.ЭтоСтрокаСИсходнымиРНПТ = Истина;
					
					// Сведения прослеживаемости текущие.
					НоваяСтрока = Объект.СведенияПрослеживаемости.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСведений);
					НоваяСтрока.ЭтоСтрокаСИсходнымиРНПТ = Ложь;
					
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Строка Из Объект.Услуги Цикл
		Если Не ЗначениеЗаполнено(Строка.ИдентификаторСтроки) Тогда
			Продолжить;
		КонецЕсли;
		СтрокиСведений = ИсходныеСведенияПрослеживаемости.НайтиСтроки(Новый Структура("ИдентификаторСтроки", Строка.ИдентификаторСтроки));
		Если СтрокиСведений <> Неопределено Тогда
			Объект.ПередачаТоваровВСоставеРабот = Истина;
			Для Каждого СтрокаСведений Из СтрокиСведений Цикл
				Если ЭтоПовторнаяКорректировка
					И СтрокаСведений.ЭтоСтрокаСИсходнымиРНПТ Тогда
					Продолжить;
				КонецЕсли;
				
				Если ЭтоКорректировка И ЗначениеЗаполнено(СтрокаСведений.Номенклатура) Тогда
					РеквизитыПрослеживаемости = РеквизитыНоменклатурыИзИстории.Получить(СтрокаСведений.Номенклатура);
					Если РеквизитыПрослеживаемости <> Неопределено И РеквизитыПрослеживаемости.ПрослеживаемыйТовар = Ложь Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				
				// Сведения прослеживаемости до корректировки.
				НоваяСтрока = Объект.СведенияПрослеживаемости.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСведений);
				НоваяСтрока.ЭтоСтрокаСИсходнымиРНПТ = Истина;
				
				// Сведения прослеживаемости текущие.
				НоваяСтрока = Объект.СведенияПрослеживаемости.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСведений);
				НоваяСтрока.ЭтоСтрокаСИсходнымиРНПТ = Ложь;
				
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#Область ЗаполнениеДокументов
	
Процедура ЗаполнитьПоДокументу(Объект) Экспорт
	
	Если Не ЗначениеЗаполнено(Объект.ДокументРеализации) Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Товары.Очистить();
	Объект.Услуги.Очистить();
	Объект.АгентскиеУслуги.Очистить();
	Объект.СведенияПрослеживаемости.Очистить();
	Объект.ШтрихкодыУпаковок.Очистить();
	
	ДанныеЗаполнения = ДанныеЗаполненияПоДокументу(Объект);
	Для каждого ДанныеТабличнойЧасти Из ДанныеЗаполнения Цикл
		Объект[ДанныеТабличнойЧасти.Ключ].Загрузить(ДанныеТабличнойЧасти.Значение);
	КонецЦикла;
	
	
	ВедетсяУчетПрослеживаемыхТоваров = ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров")
		И ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(Объект.Дата);
	ИсходныйДокументВПериодеПрослеживаемости = ВедетсяУчетПрослеживаемыхТоваров;
	Если ЗначениеЗаполнено(Объект.ИсходныйДокументРеализации) И ВедетсяУчетПрослеживаемыхТоваров Тогда
		ДатаИсходногоДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ИсходныйДокументРеализации, "Дата");
		Если ДатаИсходногоДокумента <> Неопределено Тогда
			ИсходныйДокументВПериодеПрослеживаемости = ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(ДатаИсходногоДокумента);
		КонецЕсли;
	КонецЕсли;
	Если ВедетсяУчетПрослеживаемыхТоваров И Объект.Товары.Количество() > 0 Тогда
		Если ИсходныйДокументВПериодеПрослеживаемости Тогда
			МассивНоменклатуры = ОбщегоНазначения.ВыгрузитьКолонку(Объект.Товары.Выгрузить(), "Номенклатура", Истина);
			РеквизитыНоменклатурыИзИстории = Справочники.Номенклатура.ПризнакПрослеживаемостиНаДатуИзИстории(
			МассивНоменклатуры, Объект.Дата);
			Для Каждого Строка Из Объект.Товары Цикл
				РеквизитыТекущейНоменклатуры = РеквизитыНоменклатурыИзИстории[Строка.Номенклатура];
				Если РеквизитыТекущейНоменклатуры <> Неопределено Тогда
					Если Объект.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение
						Или Не ЗначениеЗаполнено(Объект.ВидОперации) Тогда
						
						Строка.ПрослеживаемыйТовар = РеквизитыТекущейНоменклатуры.ПрослеживаемыйТовар
						Или РеквизитыТекущейНоменклатуры.ПрослеживаемыйКомплект;
						Строка.ПрослеживаемыйКомплект = РеквизитыТекущейНоменклатуры.ПрослеживаемыйКомплект;
						Строка.ПрослеживаемыйТоварПоДокументуОснованию = Ложь;
					Иначе
						Если Строка.ПрослеживаемыйКомплект Тогда
							
							Строка.ПрослеживаемыйТоварПоДокументуОснованию = 
							РеквизитыТекущейНоменклатуры.ПрослеживаемыйКомплект = Ложь И Строка.ПрослеживаемыйКомплект = Истина;
						Иначе
							
							Строка.ПрослеживаемыйТоварПоДокументуОснованию = 
							РеквизитыТекущейНоменклатуры.ПрослеживаемыйТовар = Ложь И Строка.ПрослеживаемыйТовар = Истина;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла; 
		Иначе
			Для Каждого Строка Из Объект.Товары Цикл
				Строка.ПрослеживаемыйТовар = Ложь;
				Строка.ПрослеживаемыйКомплект = Ложь;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьСведенияПрослеживаемости(Объект, ВедетсяУчетПрослеживаемыхТоваров);
КонецПроцедуры

Процедура ЗаполнитьПоАктуОРасхождениях(Объект, АктОРасхожденияхСсылка) Экспорт
	Если НЕ ЗначениеЗаполнено(АктОРасхожденияхСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", АктОРасхожденияхСсылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	""Товары"" КАК ТабличнаяЧасть,
	|	АктОРасхожденияхТовары.Номенклатура КАК Номенклатура,
	|	АктОРасхожденияхТовары.Количество КАК Количество,
	|	АктОРасхожденияхТовары.Цена КАК Цена,
	|	АктОРасхожденияхТовары.ЦенаПоДокументу КАК ЦенаПоДокументу,
	|	АктОРасхожденияхТовары.Сумма КАК Сумма,
	|	АктОРасхожденияхТовары.СтавкаНДС КАК СтавкаНДС,
	|	АктОРасхожденияхТовары.СуммаНДС КАК СуммаНДС,
	|	АктОРасхожденияхТовары.НомерГТД КАК НомерГТД,
	|	АктОРасхожденияхТовары.НомерГТДПоДокументу КАК НомерГТДПоДокументу,
	|	АктОРасхожденияхТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	АктОРасхожденияхТовары.СтранаПроисхожденияПоДокументу КАК СтранаПроисхожденияПоДокументу,
	|	АктОРасхожденияхТовары.ЕстьВДокументеРеализации КАК ЕстьВДокументеРеализации
	|ИЗ
	|	Документ.АктОРасхожденияхПолученный.Товары КАК АктОРасхожденияхТовары
	|ГДЕ
	|	АктОРасхожденияхТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Услуги"",
	|	АктОРасхожденияхУслуги.Номенклатура,
	|	АктОРасхожденияхУслуги.Количество,
	|	АктОРасхожденияхУслуги.Цена,
	|	АктОРасхожденияхУслуги.ЦенаПоДокументу,
	|	АктОРасхожденияхУслуги.Сумма,
	|	АктОРасхожденияхУслуги.СтавкаНДС,
	|	АктОРасхожденияхУслуги.СуммаНДС,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	АктОРасхожденияхУслуги.ЕстьВДокументеРеализации
	|ИЗ
	|	Документ.АктОРасхожденияхПолученный.Услуги КАК АктОРасхожденияхУслуги
	|ГДЕ
	|	АктОРасхожденияхУслуги.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""АгентскиеУслуги"",
	|	АктОРасхожденияхАгентскиеУслуги.Номенклатура,
	|	АктОРасхожденияхАгентскиеУслуги.Количество,
	|	АктОРасхожденияхАгентскиеУслуги.Цена,
	|	НЕОПРЕДЕЛЕНО,
	|	АктОРасхожденияхАгентскиеУслуги.Сумма,
	|	АктОРасхожденияхАгентскиеУслуги.СтавкаНДС,
	|	АктОРасхожденияхАгентскиеУслуги.СуммаНДС,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	АктОРасхожденияхАгентскиеУслуги.ЕстьВДокументеРеализации
	|ИЗ
	|	Документ.АктОРасхожденияхПолученный.АгентскиеУслуги КАК АктОРасхожденияхАгентскиеУслуги
	|ГДЕ
	|	АктОРасхожденияхАгентскиеУслуги.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктОРасхожденияхПолученныйШтрихкодыУпаковок.ШтрихкодУпаковки КАК ШтрихкодУпаковки
	|ИЗ
	|	Документ.АктОРасхожденияхПолученный.ШтрихкодыУпаковок КАК АктОРасхожденияхПолученныйШтрихкодыУпаковок
	|ГДЕ
	|	АктОРасхожденияхПолученныйШтрихкодыУпаковок.Ссылка = &Ссылка";
	
	СуммаВключаетНДС_АктОРасхождениях = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(АктОРасхожденияхСсылка, "СуммаВключаетНДС");
	СуммаВключаетНДС_Корректировка    = Объект.СуммаВключаетНДС;
	
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	РезультатЗапроса = РезультатыЗапроса[0].Выбрать();
	Пока РезультатЗапроса.Следующий() Цикл
		Если РезультатЗапроса.ЕстьВДокументеРеализации Тогда
		
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("Номенклатура",        РезультатЗапроса.Номенклатура);
			Если СуммаВключаетНДС_АктОРасхождениях <> СуммаВключаетНДС_Корректировка Тогда
				СтруктураПоиска.Вставить("ЦенаДоИзменения", 
					УчетНДСКлиентСервер.ПересчитатьЦенуПриИзмененииФлаговНалогов(
						РезультатЗапроса.ЦенаПоДокументу, СуммаВключаетНДС_АктОРасхождениях, СуммаВключаетНДС_Корректировка,
						УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(РезультатЗапроса.СтавкаНДС)));
			Иначе
				СтруктураПоиска.Вставить("ЦенаДоИзменения", РезультатЗапроса.ЦенаПоДокументу);
			КонецЕсли; 
			СтруктураПоиска.Вставить("СтавкаНДС",           РезультатЗапроса.СтавкаНДС);
			
			Если РезультатЗапроса.НомерГТДПоДокументу <> Неопределено Тогда
				СтруктураПоиска.Вставить("НомерГТД",            РезультатЗапроса.НомерГТДПоДокументу);
				СтруктураПоиска.Вставить("СтранаПроисхождения", РезультатЗапроса.СтранаПроисхожденияПоДокументу);
			КонецЕсли; 
			
			НайденныеСтроки = Объект[РезультатЗапроса.ТабличнаяЧасть].НайтиСтроки(СтруктураПоиска);
			
			Если НайденныеСтроки.Количество() = 1 Тогда
			
				Строка = НайденныеСтроки[0];
			Иначе
				Продолжить;
			КонецЕсли; 
		Иначе
			Строка = Объект[РезультатЗапроса.ТабличнаяЧасть].Добавить();
		КонецЕсли; 
			
		ЗаполнитьЗначенияСвойств(Строка, РезультатЗапроса);
		Если СуммаВключаетНДС_АктОРасхождениях <> СуммаВключаетНДС_Корректировка Тогда
			Строка.Цена = УчетНДСКлиентСервер.ПересчитатьЦенуПриИзмененииФлаговНалогов(
				РезультатЗапроса.Цена, СуммаВключаетНДС_АктОРасхождениях, СуммаВключаетНДС_Корректировка,
				УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(РезультатЗапроса.СтавкаНДС));
		КонецЕсли; 
	КонецЦикла;
	
	Объект.ШтрихкодыУпаковок.Загрузить(РезультатыЗапроса[1].Выгрузить());
КонецПроцедуры

Функция ТекстЗапросаДанныеЗаполненияПоРеализации(ИмяВидаДокумента, НомераТаблиц)
	
	НомераТаблиц.Вставить("Товары",            НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Услуги",            НомераТаблиц.Количество());
	НомераТаблиц.Вставить("АгентскиеУслуги",   НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ШтрихкодыУпаковок", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КорректировкаРеализацииТовары.Номенклатура КАК Номенклатура,
	|	КорректировкаРеализацииТовары.Количество КАК Количество,
	|	КорректировкаРеализацииТовары.Количество КАК КоличествоДоИзменения,
	|	КорректировкаРеализацииТовары.Цена КАК Цена,
	|	КорректировкаРеализацииТовары.Цена КАК ЦенаДоИзменения,
	|	КорректировкаРеализацииТовары.Сумма КАК Сумма,
	|	КорректировкаРеализацииТовары.Сумма КАК СуммаДоИзменения,
	|	КорректировкаРеализацииТовары.СтавкаНДС КАК СтавкаНДС,
	|	КорректировкаРеализацииТовары.СтавкаНДС КАК СтавкаНДСДоИзменения,
	|	КорректировкаРеализацииТовары.СуммаНДС КАК СуммаНДС,
	|	КорректировкаРеализацииТовары.СуммаНДС КАК СуммаНДСДоИзменения,
	|	КорректировкаРеализацииТовары.НомерГТД КАК НомерГТД,
	|	КорректировкаРеализацииТовары.НомерГТД КАК НомерГТДДоИзменения,
	|	КорректировкаРеализацииТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	КорректировкаРеализацииТовары.СтранаПроисхождения КАК СтранаПроисхожденияДоИзменения,
	|	КорректировкаРеализацииТовары.СчетУчета КАК СчетУчета,
	|	КорректировкаРеализацииТовары.ПереданныеСчетУчета КАК ПереданныеСчетУчета,
	|	КорректировкаРеализацииТовары.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	КорректировкаРеализацииТовары.СчетДоходов КАК СчетДоходов,
	|	КорректировкаРеализацииТовары.СчетРасходов КАК СчетРасходов,
	|	КорректировкаРеализацииТовары.Субконто КАК Субконто,
	|	КорректировкаРеализацииТовары.КодТНВЭД КАК КодТНВЭД,
	|	КорректировкаРеализацииТовары.КодТНВЭД КАК КодТНВЭДДоИзменения,
	|	ВЫБОР
	|		КОГДА &НеобходимоПроверитьПрослеживаемостьТоваров
	|			ТОГДА СправочникНоменклатура.ПрослеживаемыйТовар
	|		ИНАЧЕ КорректировкаРеализацииТовары.ПрослеживаемыйТовар
	|	КОНЕЦ КАК ПрослеживаемыйТовар,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализацииТовары.ИдентификаторСтроки = """"
	|			ТОГДА КорректировкаРеализацииТовары.НомерСтроки
	|		ИНАЧЕ КорректировкаРеализацииТовары.ИдентификаторСтроки
	|	КОНЕЦ КАК ИдентификаторСтроки,
	|	КорректировкаРеализацииТовары.ИдентификаторСтрокиГосконтрактаЕИС КАК ИдентификаторСтрокиГосконтрактаЕИС,
	|	КорректировкаРеализацииТовары.КоличествоДоКорректировки КАК КоличествоДоКорректировки,
	|	КорректировкаРеализацииТовары.ЦенаДоКорректировки КАК ЦенаДоКорректировки,
	|	КорректировкаРеализацииТовары.СуммаДоКорректировки КАК СуммаДоКорректировки,
	|	КорректировкаРеализацииТовары.СуммаНДСДоКорректировки КАК СуммаНДСДоКорректировки,
	|	ИСТИНА КАК ЕстьВДокументеРеализации,
	|	КорректировкаРеализацииТовары.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект
	|ИЗ
	|	Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО КорректировкаРеализацииТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	КорректировкаРеализацииТовары.Ссылка = &Ссылка" + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ
	|	КорректировкаРеализацииУслуги.Номенклатура КАК Номенклатура,
	|	КорректировкаРеализацииУслуги.Количество КАК Количество,
	|	КорректировкаРеализацииУслуги.Количество КАК КоличествоДоИзменения,
	|	КорректировкаРеализацииУслуги.Цена КАК Цена,
	|	КорректировкаРеализацииУслуги.Цена КАК ЦенаДоИзменения,
	|	КорректировкаРеализацииУслуги.Сумма КАК Сумма,
	|	КорректировкаРеализацииУслуги.Сумма КАК СуммаДоИзменения,
	|	КорректировкаРеализацииУслуги.СтавкаНДС КАК СтавкаНДС,
	|	КорректировкаРеализацииУслуги.СтавкаНДС КАК СтавкаНДСДоИзменения,
	|	КорректировкаРеализацииУслуги.СуммаНДС КАК СуммаНДС,
	|	КорректировкаРеализацииУслуги.СуммаНДС КАК СуммаНДСДоИзменения,
	|	КорректировкаРеализацииУслуги.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	КорректировкаРеализацииУслуги.СчетДоходов КАК СчетДоходов,
	|	КорректировкаРеализацииУслуги.СчетРасходов КАК СчетРасходов,
	|	КорректировкаРеализацииУслуги.Субконто КАК Субконто,
	|	КорректировкаРеализацииУслуги.ИдентификаторСтрокиГосконтрактаЕИС КАК ИдентификаторСтрокиГосконтрактаЕИС,
	|	КорректировкаРеализацииУслуги.КоличествоДоКорректировки КАК КоличествоДоКорректировки,
	|	КорректировкаРеализацииУслуги.ЦенаДоКорректировки КАК ЦенаДоКорректировки,
	|	КорректировкаРеализацииУслуги.СуммаДоКорректировки КАК СуммаДоКорректировки,
	|	КорректировкаРеализацииУслуги.СуммаНДСДоКорректировки КАК СуммаНДСДоКорректировки,
	|	ИСТИНА КАК ЕстьВДокументеРеализации,
	|	КорректировкаРеализацииУслуги.Содержание КАК Содержание,
	|	КорректировкаРеализацииУслуги.Содержание КАК СодержаниеДоИзменения,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализацииУслуги.ИдентификаторСтроки = """"
	|			ТОГДА КорректировкаРеализацииУслуги.НомерСтроки
	|		ИНАЧЕ КорректировкаРеализацииУслуги.ИдентификаторСтроки
	|	КОНЕЦ КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализацииУслуги
	|ГДЕ
	|	КорректировкаРеализацииУслуги.Ссылка = &Ссылка" + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ
	|	КорректировкаРеализацииАгентскиеУслуги.Номенклатура КАК Номенклатура,
	|	КорректировкаРеализацииАгентскиеУслуги.Количество КАК Количество,
	|	КорректировкаРеализацииАгентскиеУслуги.Количество КАК КоличествоДоИзменения,
	|	КорректировкаРеализацииАгентскиеУслуги.Цена КАК Цена,
	|	КорректировкаРеализацииАгентскиеУслуги.Цена КАК ЦенаДоИзменения,
	|	КорректировкаРеализацииАгентскиеУслуги.Сумма КАК Сумма,
	|	КорректировкаРеализацииАгентскиеУслуги.Сумма КАК СуммаДоИзменения,
	|	КорректировкаРеализацииАгентскиеУслуги.СтавкаНДС КАК СтавкаНДС,
	|	КорректировкаРеализацииАгентскиеУслуги.СтавкаНДС КАК СтавкаНДСДоИзменения,
	|	КорректировкаРеализацииАгентскиеУслуги.СуммаНДС КАК СуммаНДС,
	|	КорректировкаРеализацииАгентскиеУслуги.СуммаНДС КАК СуммаНДСДоИзменения,
	|	КорректировкаРеализацииАгентскиеУслуги.КоличествоДоКорректировки КАК КоличествоДоКорректировки,
	|	КорректировкаРеализацииАгентскиеУслуги.ЦенаДоКорректировки КАК ЦенаДоКорректировки,
	|	КорректировкаРеализацииАгентскиеУслуги.СуммаДоКорректировки КАК СуммаДоКорректировки,
	|	КорректировкаРеализацииАгентскиеУслуги.СуммаНДСДоКорректировки КАК СуммаНДСДоКорректировки,
	|	ИСТИНА КАК ЕстьВДокументеРеализации,
	|	КорректировкаРеализацииАгентскиеУслуги.Содержание КАК Содержание,
	|	КорректировкаРеализацииАгентскиеУслуги.Содержание КАК СодержаниеДоИзменения,
	|	КорректировкаРеализацииАгентскиеУслуги.Контрагент КАК Контрагент,
	|	КорректировкаРеализацииАгентскиеУслуги.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	КорректировкаРеализацииАгентскиеУслуги.СчетРасчетов КАК СчетРасчетов,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализацииАгентскиеУслуги.ИдентификаторСтроки = """"
	|			ТОГДА КорректировкаРеализацииАгентскиеУслуги.НомерСтроки
	|		ИНАЧЕ КорректировкаРеализацииАгентскиеУслуги.ИдентификаторСтроки
	|	КОНЕЦ КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.КорректировкаРеализации.АгентскиеУслуги КАК КорректировкаРеализацииАгентскиеУслуги
	|ГДЕ
	|	КорректировкаРеализацииАгентскиеУслуги.Ссылка = &Ссылка" + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();;
	
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ
	|	КорректировкаРеализацииШтрихкодыУпаковок.ШтрихкодУпаковки КАК ШтрихкодУпаковки
	|ИЗ
	|	Документ.КорректировкаРеализации.ШтрихкодыУпаковок КАК КорректировкаРеализацииШтрихкодыУпаковок
	|ГДЕ
	|	КорректировкаРеализацииШтрихкодыУпаковок.Ссылка = &Ссылка";
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
	
	Для каждого ПакетЗапроса Из СхемаЗапроса.ПакетЗапросов Цикл
		ИмяТаблицы = ПакетЗапроса.Операторы[0].Источники[0].Источник.ИмяТаблицы;
		Если Найти(ИмяТаблицы, ИмяВидаДокумента) = 0 Тогда
			
			НовыйИсточник = ПакетЗапроса.ДоступныеТаблицы.Найти(СтрЗаменить(ИмяТаблицы, "КорректировкаРеализации", ИмяВидаДокумента));
			Если НовыйИсточник <> Неопределено Тогда
				ПакетЗапроса.Операторы[0].Источники.Заменить(0, НовыйИсточник);
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат СхемаЗапроса.ПолучитьТекстЗапроса();
КонецФункции

Функция ТекстЗапросаДанныеЗаполненияПоАктуОказанияПроизводственныхУслуг(НомераТаблиц)
	
	НомераТаблиц.Вставить("Услуги",            НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КорректировкаРеализацииУслуги.Номенклатура КАК Номенклатура,
	|	КорректировкаРеализацииУслуги.Количество КАК Количество,
	|	КорректировкаРеализацииУслуги.Количество КАК КоличествоДоИзменения,
	|	КорректировкаРеализацииУслуги.Цена КАК Цена,
	|	КорректировкаРеализацииУслуги.Цена КАК ЦенаДоИзменения,
	|	КорректировкаРеализацииУслуги.Сумма КАК Сумма,
	|	КорректировкаРеализацииУслуги.Сумма КАК СуммаДоИзменения,
	|	КорректировкаРеализацииУслуги.СтавкаНДС КАК СтавкаНДС,
	|	КорректировкаРеализацииУслуги.СтавкаНДС КАК СтавкаНДСДоИзменения,
	|	КорректировкаРеализацииУслуги.СуммаНДС КАК СуммаНДС,
	|	КорректировкаРеализацииУслуги.СуммаНДС КАК СуммаНДСДоИзменения,
	|	КорректировкаРеализацииУслуги.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	КорректировкаРеализацииУслуги.СчетДоходов КАК СчетДоходов,
	|	КорректировкаРеализацииУслуги.СчетРасходов КАК СчетРасходов,
	|	КорректировкаРеализацииУслуги.Субконто КАК Субконто,
	|	ИСТИНА КАК ЕстьВДокументеРеализации,
	|	""Услуги"" КАК ТЧ,
	|	КорректировкаРеализацииУслуги.Номенклатура.НаименованиеПолное КАК Содержание,
	|	КорректировкаРеализацииУслуги.Номенклатура.НаименованиеПолное КАК СодержаниеДоИзменения,
	|	ВЫБОР
	|		КОГДА КорректировкаРеализацииУслуги.ИдентификаторСтроки = """"
	|			ТОГДА КорректировкаРеализацииУслуги.НомерСтроки
	|		ИНАЧЕ КорректировкаРеализацииУслуги.ИдентификаторСтроки
	|	КОНЕЦ КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.АктОбОказанииПроизводственныхУслуг.Услуги КАК КорректировкаРеализацииУслуги
	|ГДЕ
	|	КорректировкаРеализацииУслуги.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаДанныеЗаполненияПоОтчетуКомиссионера(НомераТаблиц)
	
	НомераТаблиц.Вставить("Товары",            НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Услуги",            НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОтчетКомиссионераТовары.Номенклатура КАК Номенклатура,
	|	ОтчетКомиссионераТовары.Количество КАК Количество,
	|	ОтчетКомиссионераТовары.Количество КАК КоличествоДоИзменения,
	|	ОтчетКомиссионераТовары.Цена КАК Цена,
	|	ОтчетКомиссионераТовары.Цена КАК ЦенаДоИзменения,
	|	ОтчетКомиссионераТовары.Сумма КАК Сумма,
	|	ОтчетКомиссионераТовары.Сумма КАК СуммаДоИзменения,
	|	ОтчетКомиссионераТовары.СтавкаНДС КАК СтавкаНДС,
	|	ОтчетКомиссионераТовары.СтавкаНДС КАК СтавкаНДСДоИзменения,
	|	ОтчетКомиссионераТовары.СуммаНДС КАК СуммаНДС,
	|	ОтчетКомиссионераТовары.СуммаНДС КАК СуммаНДСДоИзменения,
	|	ОтчетКомиссионераТовары.НомерГТД КАК НомерГТД,
	|	ОтчетКомиссионераТовары.НомерГТД КАК НомерГТДДоИзменения,
	|	ОтчетКомиссионераТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ОтчетКомиссионераТовары.СтранаПроисхождения КАК СтранаПроисхожденияДоИзменения,
	|	ОтчетКомиссионераТовары.СчетУчета КАК СчетУчета,
	|	ОтчетКомиссионераТовары.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	ОтчетКомиссионераТовары.СчетДоходов КАК СчетДоходов,
	|	ОтчетКомиссионераТовары.СчетРасходов КАК СчетРасходов,
	|	ОтчетКомиссионераТовары.Субконто КАК Субконто,
	|	""Товары"" КАК ТЧ,
	|	ИСТИНА КАК ЕстьВДокументеРеализации,
	|	NULL КАК Содержание,
	|	NULL КАК СодержаниеДоИзменения,
	|	ОтчетКомиссионераТовары.КодТНВЭД КАК КодТНВЭД,
	|	ОтчетКомиссионераТовары.КодТНВЭД КАК КодТНВЭДДоИзменения
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Товары КАК ОтчетКомиссионераТовары
	|ГДЕ
	|	ОтчетКомиссионераТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетКомиссионераУслуги.Номенклатура КАК Номенклатура,
	|	ОтчетКомиссионераУслуги.Количество КАК Количество,
	|	ОтчетКомиссионераУслуги.Количество КАК Количество1,
	|	ОтчетКомиссионераУслуги.Цена КАК Цена,
	|	ОтчетКомиссионераУслуги.Цена КАК Цена1,
	|	ОтчетКомиссионераУслуги.Сумма КАК Сумма,
	|	ОтчетКомиссионераУслуги.Сумма КАК Сумма1,
	|	ОтчетКомиссионераУслуги.СтавкаНДС КАК СтавкаНДС,
	|	ОтчетКомиссионераУслуги.СтавкаНДС КАК СтавкаНДС1,
	|	ОтчетКомиссионераУслуги.СуммаНДС КАК СуммаНДС,
	|	ОтчетКомиссионераУслуги.СуммаНДС КАК СуммаНДС1,
	|	NULL КАК Поле1,
	|	NULL КАК Поле2,
	|	NULL КАК Поле3,
	|	NULL КАК Поле4,
	|	NULL КАК Поле5,
	|	ОтчетКомиссионераУслуги.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	ОтчетКомиссионераУслуги.СчетДоходов КАК СчетДоходов,
	|	ОтчетКомиссионераУслуги.СчетРасходов КАК СчетРасходов,
	|	ОтчетКомиссионераУслуги.Субконто КАК Субконто,
	|	""Услуги"" КАК Поле6,
	|	ИСТИНА КАК Поле7,
	|	ОтчетКомиссионераУслуги.Содержание КАК Содержание,
	|	ОтчетКомиссионераУслуги.Содержание КАК Содержание1,
	|	NULL КАК Поле8,
	|	NULL КАК Поле9
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Услуги КАК ОтчетКомиссионераУслуги
	|ГДЕ
	|	ОтчетКомиссионераУслуги.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОтчетКомиссионераУслуги.Номенклатура";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДанныеЗаполненияПоВозвратуОтПокупателя(НомераТаблиц)
	
	НомераТаблиц.Вставить("ВТ_Реквизиты",     Неопределено);
	НомераТаблиц.Вставить("ВТ_Возвраты",      Неопределено);
	НомераТаблиц.Вставить("Товары",           НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателя.Сделка КАК Сделка,
	|	ВозвратТоваровОтПокупателя.МоментВремени КАК МоментВремени
	|ПОМЕСТИТЬ ВТ_Реквизиты
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|ГДЕ
	|	ВозвратТоваровОтПокупателя.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателяТовары.Номенклатура КАК Номенклатура,
	|	ВозвратТоваровОтПокупателяТовары.Цена КАК Цена,
	|	СУММА(ВозвратТоваровОтПокупателяТовары.Количество) КАК Количество,
	|	СУММА(ВозвратТоваровОтПокупателяТовары.Сумма) КАК Сумма,
	|	СУММА(ВозвратТоваровОтПокупателяТовары.СуммаНДС) КАК СуммаНДС,
	|	ВозвратТоваровОтПокупателяТовары.НомерГТД КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА &НеобходимоПроверитьПрослеживаемостьТоваров
	|			ТОГДА СправочникНоменклатура.ПрослеживаемыйТовар
	|		ИНАЧЕ ВозвратТоваровОтПокупателяТовары.ПрослеживаемыйТовар
	|	КОНЕЦ КАК ПрослеживаемыйТовар,
	|	ВозвратТоваровОтПокупателяТовары.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект
	|ПОМЕСТИТЬ ВТ_Возвраты
	|ИЗ
	|	ВТ_Реквизиты КАК ВТ_Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ВозвратТоваровОтПокупателяТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ПО ВТ_Реквизиты.Сделка = ВозвратТоваровОтПокупателяТовары.Ссылка.Сделка
	|ГДЕ
	|	ВозвратТоваровОтПокупателяТовары.Ссылка.МоментВремени <= ВТ_Реквизиты.МоментВремени
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратТоваровОтПокупателяТовары.Номенклатура,
	|	ВозвратТоваровОтПокупателяТовары.Цена,
	|	ВозвратТоваровОтПокупателяТовары.НомерГТД,
	|	ВозвратТоваровОтПокупателяТовары.ПрослеживаемыйТовар,
	|	ВозвратТоваровОтПокупателяТовары.ПрослеживаемыйКомплект,
	|	ВЫБОР
	|		КОГДА &НеобходимоПроверитьПрослеживаемостьТоваров
	|			ТОГДА СправочникНоменклатура.ПрослеживаемыйТовар
	|		ИНАЧЕ ВозвратТоваровОтПокупателяТовары.ПрослеживаемыйТовар
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	РеализацияТоваровУслугТовары.Количество - ЕСТЬNULL(ВозвратТоваровОтПокупателяТовары.Количество, 0) КАК Количество,
	|	РеализацияТоваровУслугТовары.Количество - ЕСТЬNULL(ВозвратТоваровОтПокупателяТовары.Количество, 0) КАК КоличествоДоИзменения,
	|	РеализацияТоваровУслугТовары.Цена КАК Цена,
	|	РеализацияТоваровУслугТовары.Цена КАК ЦенаДоИзменения,
	|	РеализацияТоваровУслугТовары.Сумма - ЕСТЬNULL(ВозвратТоваровОтПокупателяТовары.Сумма, 0) КАК Сумма,
	|	РеализацияТоваровУслугТовары.Сумма - ЕСТЬNULL(ВозвратТоваровОтПокупателяТовары.Сумма, 0) КАК СуммаДоИзменения,
	|	РеализацияТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
	|	РеализацияТоваровУслугТовары.СтавкаНДС КАК СтавкаНДСДоИзменения,
	|	РеализацияТоваровУслугТовары.СуммаНДС - ЕСТЬNULL(ВозвратТоваровОтПокупателяТовары.СуммаНДС, 0) КАК СуммаНДС,
	|	РеализацияТоваровУслугТовары.СуммаНДС - ЕСТЬNULL(ВозвратТоваровОтПокупателяТовары.СуммаНДС, 0) КАК СуммаНДСДоИзменения,
	|	РеализацияТоваровУслугТовары.НомерГТД КАК НомерГТД,
	|	РеализацияТоваровУслугТовары.НомерГТД КАК НомерГТДДоИзменения,
	|	РеализацияТоваровУслугТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	РеализацияТоваровУслугТовары.СтранаПроисхождения КАК СтранаПроисхожденияДоИзменения,
	|	РеализацияТоваровУслугТовары.СчетУчета КАК СчетУчета,
	|	РеализацияТоваровУслугТовары.ПереданныеСчетУчета КАК ПереданныеСчетУчета,
	|	РеализацияТоваровУслугТовары.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	РеализацияТоваровУслугТовары.СчетДоходов КАК СчетДоходов,
	|	РеализацияТоваровУслугТовары.СчетРасходов КАК СчетРасходов,
	|	РеализацияТоваровУслугТовары.Субконто КАК Субконто,
	|	РеализацияТоваровУслугТовары.КодТНВЭД КАК КодТНВЭД,
	|	РеализацияТоваровУслугТовары.КодТНВЭД КАК КодТНВЭДДоИзменения,
	|	ИСТИНА КАК ЕстьВДокументеРеализации,
	|	ВЫБОР
	|		КОГДА &НеобходимоПроверитьПрослеживаемостьТоваров
	|			ТОГДА СправочникНоменклатура.ПрослеживаемыйТовар
	|		ИНАЧЕ РеализацияТоваровУслугТовары.ПрослеживаемыйТовар
	|	КОНЕЦ КАК ПрослеживаемыйТовар,
	|	РеализацияТоваровУслугТовары.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслугТовары.ИдентификаторСтроки = """"
	|			ТОГДА РеализацияТоваровУслугТовары.НомерСтроки
	|		ИНАЧЕ РеализацияТоваровУслугТовары.ИдентификаторСтроки
	|	КОНЕЦ КАК ИдентификаторСтроки
	|ИЗ
	|	ВТ_Реквизиты КАК ВТ_Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|		ПО ВТ_Реквизиты.Сделка = РеализацияТоваровУслугТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Возвраты КАК ВозвратТоваровОтПокупателяТовары
	|		ПО (РеализацияТоваровУслугТовары.Номенклатура = ВозвратТоваровОтПокупателяТовары.Номенклатура)
	|			И (РеализацияТоваровУслугТовары.Цена = ВозвратТоваровОтПокупателяТовары.Цена)
	|			И (РеализацияТоваровУслугТовары.НомерГТД = ВозвратТоваровОтПокупателяТовары.НомерГТД)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО (РеализацияТоваровУслугТовары.Номенклатура = СправочникНоменклатура.Ссылка)";
	
	Возврат ТекстЗапроса;

КонецФункции 

Процедура ПерезаполнитьДанныеПрослеживаемостиПриИзмененииОперации(Объект) Экспорт
	Если Не ЗначениеЗаполнено(Объект.ДокументРеализации) Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Товары.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	МетаданныеДокумента = Объект.ДокументРеализации.Метаданные();
	ИмяВидаДокумента = МетаданныеДокумента.Имя;
	
	ТабличныеЧастиОснования = МетаданныеДокумента.ТабличныеЧасти;
	ЕстьСведенияПрослеживаемости = ТабличныеЧастиОснования.Найти("СведенияПрослеживаемости") <> Неопределено;
	
	Если НЕ ЕстьСведенияПрослеживаемости Тогда
		Возврат;
	КонецЕсли;

	ЭтоИсправление = Истина;
	Если Объект.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение Тогда
		ЭтоИсправление = Ложь;
	КонецЕсли;

	СведенияПрослеживаемости = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ДокументРеализации, "СведенияПрослеживаемости");
	
	ИсходныеСведенияПрослеживаемости = СведенияПрослеживаемости.Выгрузить();
	
	Если Не ЭтоИсправление Тогда
		МассивНоменклатуры = ОбщегоНазначения.ВыгрузитьКолонку(ИсходныеСведенияПрослеживаемости, "Номенклатура", Истина);
		РеквизитыКомплектующихИзИстории = Справочники.Номенклатура.ПризнакПрослеживаемостиНаДатуИзИстории(
		МассивНоменклатуры, Объект.Дата);
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументРеализации", Объект.ДокументРеализации);
	Запрос.Текст = "ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	РеализацияТоваровУслугТовары.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар,
	|	РеализацияТоваровУслугТовары.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект
	|ИЗ
	|	Документ." + ИмяВидаДокумента + ".Товары КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка = &ДокументРеализации";
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	МассивНоменклатуры = ОбщегоНазначения.ВыгрузитьКолонку(РезультатЗапроса, "Номенклатура", Истина);
	РеквизитыНоменклатурыИзИстории = Справочники.Номенклатура.ПризнакПрослеживаемостиНаДатуИзИстории(
	МассивНоменклатуры, Объект.Дата);
	ДатаОснования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ДокументРеализации, "Дата");
	ДатаНачалаУчетаПрослеживаемости = ПрослеживаемостьБРУ.ДатаНачалаУчетаПрослеживаемыхТоваров();
	Для Каждого СтрокаТоваров Из Объект.Товары Цикл
		НайденнаяСтрока = РезультатЗапроса.Найти(СтрокаТоваров.ИдентификаторСтроки, "ИдентификаторСтроки");
		ПрослеживаемыйТовар = СтрокаТоваров.ПрослеживаемыйТовар;
		РеквизитыТекущейНоменклатуры = РеквизитыНоменклатурыИзИстории[СтрокаТоваров.Номенклатура];
		НоваяСтрока = Ложь;
		Если РеквизитыТекущейНоменклатуры <> Неопределено И НайденнаяСтрока <> Неопределено Тогда
			Если Не ЭтоИсправление Или ДатаОснования < ДатаНачалаУчетаПрослеживаемости Тогда
				
				СтрокаТоваров.ПрослеживаемыйТовар = РеквизитыТекущейНоменклатуры.ПрослеживаемыйТовар
				Или РеквизитыТекущейНоменклатуры.ПрослеживаемыйКомплект;
				СтрокаТоваров.ПрослеживаемыйКомплект = РеквизитыТекущейНоменклатуры.ПрослеживаемыйКомплект;
				СтрокаТоваров.ПрослеживаемыйТоварПоДокументуОснованию = Ложь;
			Иначе
				СтрокаТоваров.ПрослеживаемыйТовар = НайденнаяСтрока.ПрослеживаемыйТовар
				Или НайденнаяСтрока.ПрослеживаемыйКомплект;
				СтрокаТоваров.ПрослеживаемыйКомплект = НайденнаяСтрока.ПрослеживаемыйКомплект;
				Если СтрокаТоваров.ПрослеживаемыйКомплект Тогда
					
					СтрокаТоваров.ПрослеживаемыйТоварПоДокументуОснованию = 
					РеквизитыТекущейНоменклатуры.ПрослеживаемыйКомплект = Ложь И НайденнаяСтрока.ПрослеживаемыйКомплект = Истина;
				Иначе
					СтрокаТоваров.ПрослеживаемыйТоварПоДокументуОснованию = 
					РеквизитыТекущейНоменклатуры.ПрослеживаемыйТовар = Ложь И НайденнаяСтрока.ПрослеживаемыйТовар = Истина;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли НайденнаяСтрока = Неопределено Тогда
			НоваяСтрока = Истина;
			
			Если ЭтоИсправление И ДатаОснования > ДатаНачалаУчетаПрослеживаемости Тогда
				
				РеквизитыПрослеживаемостиНаДатуОснования = Справочники.Номенклатура.ПризнакПрослеживаемостиНаДату(
				СтрокаТоваров.Номенклатура, ДатаОснования);
				РеквизитыПрослеживаемостиНаДатуДокумента = Справочники.Номенклатура.ПризнакПрослеживаемостиНаДату(
				СтрокаТоваров.Номенклатура,Объект.Дата);
				СтрокаТоваров.ПрослеживаемыйТовар = РеквизитыПрослеживаемостиНаДатуОснования.ПрослеживаемыйТовар
				Или РеквизитыПрослеживаемостиНаДатуОснования.ПрослеживаемыйКомплект;
				СтрокаТоваров.ПрослеживаемыйКомплект = РеквизитыПрослеживаемостиНаДатуОснования.ПрослеживаемыйКомплект;
				Если СтрокаТоваров.ПрослеживаемыйКомплект Тогда
					
					СтрокаТоваров.ПрослеживаемыйТоварПоДокументуОснованию = 
					РеквизитыПрослеживаемостиНаДатуДокумента.ПрослеживаемыйКомплект = Ложь 
					И РеквизитыПрослеживаемостиНаДатуОснования.ПрослеживаемыйКомплект = Истина;
				Иначе
					СтрокаТоваров.ПрослеживаемыйТоварПоДокументуОснованию = 
					РеквизитыПрослеживаемостиНаДатуДокумента.ПрослеживаемыйТовар = Ложь 
					И РеквизитыПрослеживаемостиНаДатуОснования.ПрослеживаемыйТовар = Истина;
				КонецЕсли;
				
			Иначе
				
				РеквизитыПрослеживаемостиНаДатуДокумента = Справочники.Номенклатура.ПризнакПрослеживаемостиНаДату(
				СтрокаТоваров.Номенклатура, Объект.Дата);
				СтрокаТоваров.ПрослеживаемыйТовар = РеквизитыПрослеживаемостиНаДатуДокумента.ПрослеживаемыйТовар
				Или РеквизитыПрослеживаемостиНаДатуДокумента.ПрослеживаемыйКомплект;
				СтрокаТоваров.ПрослеживаемыйКомплект = РеквизитыПрослеживаемостиНаДатуДокумента.ПрослеживаемыйКомплект;
				СтрокаТоваров.ПрослеживаемыйТоварПоДокументуОснованию = Ложь;
				
			КонецЕсли;
		КонецЕсли;
		Если ПрослеживаемыйТовар <> СтрокаТоваров.ПрослеживаемыйТовар
			Или СтрокаТоваров.ПрослеживаемыйКомплект Тогда
			СтрокиСведений = Объект.СведенияПрослеживаемости.НайтиСтроки(Новый Структура("ИдентификаторСтроки", СтрокаТоваров.ИдентификаторСтроки));
			Для Каждого СтрокаСведений Из СтрокиСведений Цикл
				Объект.СведенияПрослеживаемости.Удалить(СтрокаСведений);
			КонецЦикла;
			Если СтрокаТоваров.ПрослеживаемыйТовар И Не НоваяСтрока Тогда
				Если ИсходныеСведенияПрослеживаемости = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				ЭтоПовторнаяКорректировка = ИсходныеСведенияПрослеживаемости.Колонки.Найти("ЭтоСтрокаСИсходнымиРНПТ") <> Неопределено;
				СтруктураОтбора = Новый Структура;
				СтруктураОтбора.Вставить("ИдентификаторСтроки", СтрокаТоваров.ИдентификаторСтроки);
				Если ЭтоПовторнаяКорректировка Тогда
					СтруктураОтбора.Вставить("ЭтоСтрокаСИсходнымиРНПТ", Ложь);
				КонецЕсли;
				ДанныеПоРНПТ = ИсходныеСведенияПрослеживаемости.НайтиСтроки(СтруктураОтбора);
				Для Каждого СтрокаРНПТ Из ДанныеПоРНПТ Цикл
					Если Не ЭтоИсправление И ЗначениеЗаполнено(СтрокаРНПТ.Номенклатура) Тогда
						РеквизитыПрослеживаемости = РеквизитыКомплектующихИзИстории.Получить(СтрокаРНПТ.Номенклатура);
						Если РеквизитыПрослеживаемости <> Неопределено И РеквизитыПрослеживаемости.ПрослеживаемыйТовар = Ложь Тогда
							Продолжить;
						КонецЕсли;
					КонецЕсли;
					
					СтрокаРНПТДо = Объект.СведенияПрослеживаемости.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРНПТДо, СтрокаРНПТ);
					СтрокаРНПТПосле= Объект.СведенияПрослеживаемости.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаРНПТПосле, СтрокаРНПТ);
					СтрокаРНПТПосле.ЭтоСтрокаСИсходнымиРНПТ = Истина;
					
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти 

Функция ТекстЗапросаПрослеживаемыеУслуги(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если НЕ Реквизиты.КорректироватьБУиНУ
		И НЕ Реквизиты.КорректироватьНДС
		ИЛИ НЕ Реквизиты.ЕстьУслуги Тогда
		ПараметрыПроведения.Вставить("ВТ_РНПТКорректировкиУслуги",                   Неопределено);
		ПараметрыПроведения.Вставить("ВТ_РНПТИсходногоДокументаУслуги",              Неопределено);
		ПараметрыПроведения.Вставить("ВТ_РНПТДокументРеализацииУслуги",              Неопределено);
		ПараметрыПроведения.Вставить("ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги", Неопределено);
		ПараметрыПроведения.Вставить("ПрослеживаемыеТоварыУвеличениеУслуги",         Неопределено);
		ПараметрыПроведения.Вставить("ПрослеживаемыеТоварыУменьшениеУслуги",         Неопределено);
		ПараметрыПроведения.Вставить("ПрослеживаемыеОперацииУслуги",                 Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ВТ_РНПТКорректировкиУслуги",                   НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_РНПТИсходногоДокументаУслуги",              НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_РНПТДокументРеализацииУслуги",              НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПрослеживаемыеТоварыУвеличениеУслуги",         НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПрослеживаемыеТоварыУменьшениеУслуги",         НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПрослеживаемыеОперацииУслуги",                 НомераТаблиц.Количество());
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка КАК Ссылка,
	|	КорректировкаРеализацииУслуги.Ссылка.Контрагент КАК Контрагент,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Номенклатура КАК Номенклатура,
	|	КорректировкаРеализацииСведенияПрослеживаемости.СтранаПроисхождения КАК СтранаПроисхождения,
	|	КорректировкаРеализацииСведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	СУММА(КорректировкаРеализацииСведенияПрослеживаемости.Количество) КАК Количество,
	|	СУММА(КорректировкаРеализацииСведенияПрослеживаемости.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Комитент КАК Комитент,
	|	НЕОПРЕДЕЛЕНО КАК Комплектующие,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Сумма КАК СуммаБезНДС,
	|	ЛОЖЬ КАК ПрослеживаемыйКомплект,
	|	ЛОЖЬ КАК ПрослеживаемыйТоварПоДокументуОснованию,
	|	ИСТИНА КАК ПрослеживаемыйТовар
	|ПОМЕСТИТЬ ВТ_РНПТКорректировкиУслуги
	|ИЗ
	|	Документ.КорректировкаРеализации.СведенияПрослеживаемости КАК КорректировкаРеализацииСведенияПрослеживаемости
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализацииУслуги
	|		ПО КорректировкаРеализацииСведенияПрослеживаемости.Ссылка = КорректировкаРеализацииУслуги.Ссылка
	|			И КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки = КорректировкаРеализацииУслуги.ИдентификаторСтроки
	|			И (НЕ КорректировкаРеализацииСведенияПрослеживаемости.ЭтоСтрокаСИсходнымиРНПТ)
	|ГДЕ
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка = &Ссылка
	|	И КорректировкаРеализацииУслуги.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки,
	|	КорректировкаРеализацииСведенияПрослеживаемости.РНПТ,
	|	КорректировкаРеализацииУслуги.Ссылка.Контрагент,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Комитент,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Сумма,
	|	КорректировкаРеализацииСведенияПрослеживаемости.СтранаПроисхождения,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторСтроки,
	|	РНПТ,
	|	Номенклатура,
	|	СтранаПроисхождения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка КАК Ссылка,
	|	КорректировкаРеализацииУслуги.Ссылка.Контрагент КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО КАК Комплектующие,
	|	КорректировкаРеализацииСведенияПрослеживаемости.СтранаПроисхождения КАК СтранаПроисхождения,
	|	КорректировкаРеализацииСведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	СУММА(КорректировкаРеализацииСведенияПрослеживаемости.Количество) КАК Количество,
	|	СУММА(КорректировкаРеализацииСведенияПрослеживаемости.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Комитент КАК Комитент,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Номенклатура КАК Номенклатура,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Сумма КАК СуммаБезНДС,
	|	ЛОЖЬ КАК ПрослеживаемыйКомплект,
	|	ИСТИНА КАК ПрослеживаемыйТовар
	|ПОМЕСТИТЬ ВТ_РНПТИсходногоДокументаУслуги
	|ИЗ
	|	Документ.КорректировкаРеализации.СведенияПрослеживаемости КАК КорректировкаРеализацииСведенияПрослеживаемости
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализацииУслуги
	|		ПО КорректировкаРеализацииСведенияПрослеживаемости.Ссылка = КорректировкаРеализацииУслуги.Ссылка
	|			И КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки = КорректировкаРеализацииУслуги.ИдентификаторСтроки
	|ГДЕ
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка = &ИсправляемыйСчетФактура
	|	И &ЭтоИсправлениеКорректировки
	|	И КорректировкаРеализацииУслуги.Ссылка = &ИсправляемыйСчетФактура
	|	И КорректировкаРеализацииСведенияПрослеживаемости.ЭтоСтрокаСИсходнымиРНПТ
	|
	|СГРУППИРОВАТЬ ПО
	|	КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки,
	|	КорректировкаРеализацииСведенияПрослеживаемости.РНПТ,
	|	КорректировкаРеализацииУслуги.Ссылка.Контрагент,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Комитент,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Номенклатура,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Сумма,
	|	КорректировкаРеализацииСведенияПрослеживаемости.СтранаПроисхождения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторСтроки,
	|	РНПТ,
	|	Комплектующие,
	|	СтранаПроисхождения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаРеализацииСведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	СУММА(КорректировкаРеализацииСведенияПрослеживаемости.Количество) КАК Количество,
	|	СУММА(КорректировкаРеализацииСведенияПрослеживаемости.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Номенклатура КАК Номенклатура,
	|	КорректировкаРеализацииСведенияПрослеживаемости.СтранаПроисхождения КАК СтранаПроисхождения,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка КАК Ссылка,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка.Контрагент КАК Контрагент,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Комитент КАК Комитент,
	|	НЕОПРЕДЕЛЕНО КАК Комплектующие,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Сумма КАК СуммаБезНДС,
	|	КорректировкаРеализации.ИсходныйДокументРеализации КАК ИсходныйДокументРеализации
	|ПОМЕСТИТЬ ВТ_РНПТДокументРеализацииУслуги
	|ИЗ
	|	Документ.КорректировкаРеализации.СведенияПрослеживаемости КАК КорректировкаРеализацииСведенияПрослеживаемости
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Услуги КАК КорректировкаРеализацииУслуги
	|		ПО КорректировкаРеализацииСведенияПрослеживаемости.Ссылка = КорректировкаРеализацииУслуги.Ссылка
	|			И КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки = КорректировкаРеализацииУслуги.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ПО КорректировкаРеализацииСведенияПрослеживаемости.Ссылка = КорректировкаРеализации.Ссылка
	|ГДЕ
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка = &Ссылка
	|	И КорректировкаРеализацииСведенияПрослеживаемости.ЭтоСтрокаСИсходнымиРНПТ
	|	И КорректировкаРеализацииУслуги.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки,
	|	КорректировкаРеализацииСведенияПрослеживаемости.РНПТ,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Ссылка.Контрагент,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Комитент,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Сумма,
	|	КорректировкаРеализации.ИсходныйДокументРеализации,
	|	КорректировкаРеализацииСведенияПрослеживаемости.СтранаПроисхождения,
	|	КорректировкаРеализацииСведенияПрослеживаемости.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторСтроки,
	|	РНПТ,
	|	Номенклатура,
	|	СтранаПроисхождения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.РНПТ, ВТ_РНПТДокументРеализацииУслуги.РНПТ) КАК РНПТ,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Количество, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализацииУслуги.Количество, 0) > 0
	|				ТОГДА ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Количество, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализацииУслуги.Количество, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоУвеличение,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_РНПТДокументРеализацииУслуги.Количество, 0) - ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Количество, 0) > 0
	|				ТОГДА ЕСТЬNULL(ВТ_РНПТДокументРеализацииУслуги.Количество, 0) - ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Количество, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоУменьшение,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализацииУслуги.КоличествоПрослеживаемости, 0) > 0
	|				ТОГДА ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализацииУслуги.КоличествоПрослеживаемости, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоПрослеживаемостиУвеличение,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_РНПТДокументРеализацииУслуги.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.КоличествоПрослеживаемости, 0) > 0
	|				ТОГДА ЕСТЬNULL(ВТ_РНПТДокументРеализацииУслуги.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.КоличествоПрослеживаемости, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоПрослеживаемостиУменьшение,
	|	ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Номенклатура, ВТ_РНПТДокументРеализацииУслуги.Номенклатура) КАК Номенклатура,
	|	ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.СтранаПроисхождения, ВТ_РНПТДокументРеализацииУслуги.СтранаПроисхождения) КАК СтранаПроисхождения,
	|	ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Комитент, ВТ_РНПТДокументРеализацииУслуги.Комитент) КАК Комитент,
	|	ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Комплектующие, ВТ_РНПТДокументРеализацииУслуги.Комплектующие) КАК Комплектующие,
	|	ВТ_РНПТКорректировкиУслуги.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА &ЭтоКомиссия
	|			ТОГДА ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Контрагент, ВТ_РНПТДокументРеализацииУслуги.Контрагент)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Комиссионер
	|ПОМЕСТИТЬ ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги
	|ИЗ
	|	ВТ_РНПТКорректировкиУслуги КАК ВТ_РНПТКорректировкиУслуги
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_РНПТДокументРеализацииУслуги КАК ВТ_РНПТДокументРеализацииУслуги
	|		ПО ВТ_РНПТКорректировкиУслуги.ИдентификаторСтроки = ВТ_РНПТДокументРеализацииУслуги.ИдентификаторСтроки
	|			И ВТ_РНПТКорректировкиУслуги.РНПТ = ВТ_РНПТДокументРеализацииУслуги.РНПТ
	|			И ВТ_РНПТКорректировкиУслуги.Номенклатура = ВТ_РНПТДокументРеализацииУслуги.Номенклатура
	|			И ВТ_РНПТКорректировкиУслуги.СтранаПроисхождения = ВТ_РНПТДокументРеализацииУслуги.СтранаПроисхождения
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.РНПТ, ВТ_РНПТДокументРеализацииУслуги.РНПТ),
	|	ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Номенклатура, ВТ_РНПТДокументРеализацииУслуги.Номенклатура),
	|	ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.СтранаПроисхождения, ВТ_РНПТДокументРеализацииУслуги.СтранаПроисхождения),
	|	ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Комитент, ВТ_РНПТДокументРеализацииУслуги.Комитент),
	|	ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Комплектующие, ВТ_РНПТДокументРеализацииУслуги.Комплектующие),
	|	ВТ_РНПТКорректировкиУслуги.Ссылка,
	|	ВЫБОР
	|		КОГДА &ЭтоКомиссия
	|			ТОГДА ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Контрагент, ВТ_РНПТДокументРеализацииУслуги.Контрагент)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги.РНПТ КАК РНПТ,
	|	ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги.КоличествоУвеличение КАК Количество,
	|	ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги.КоличествоПрослеживаемостиУвеличение КАК КоличествоПрослеживаемости,
	|	ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги.Номенклатура КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыПередаваемыеВСоставеРабот) КАК ВидЗапасов,
	|	ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги.Комиссионер КАК Комиссионер,
	|	ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги.СтранаПроисхождения КАК СтранаПроисхождения,
	|	&ДокументРеализацииСсылка КАК ОснованиеДляВозврата,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаРеализации,
	|	ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги.Комитент КАК Комитент,
	|	ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги.Комплектующие КАК Комплектующие
	|ИЗ
	|	ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги КАК ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги
	|ГДЕ
	|	(ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги.КоличествоПрослеживаемостиУвеличение > 0
	|			ИЛИ ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги.КоличествоУвеличение > 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги.РНПТ КАК РНПТ,
	|	ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги.КоличествоУменьшение КАК Количество,
	|	ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги.КоличествоПрослеживаемостиУменьшение КАК КоличествоПрослеживаемости,
	|	ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги.Номенклатура КАК Номенклатура,
	|	ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги.Комитент КАК Комитент,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыПередаваемыеВСоставеРабот) КАК ВидЗапасов,
	|	ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги.Комиссионер КАК Комиссионер,
	|	ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВЫБОР
	|		КОГДА &ЭтоКомиссия
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ &ДокументРеализацииСсылка
	|	КОНЕЦ КАК ОснованиеДляВозврата,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаРеализации,
	|	ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги.Комплектующие КАК Комплектующие
	|ИЗ
	|	ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги КАК ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги
	|ГДЕ
	|	(ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги.КоличествоУменьшение > 0
	|			ИЛИ ВТ_ПрослеживаемыеТоварыПредварительнаяУслуги.КоличествоПрослеживаемостиУменьшение > 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Номенклатура, ВТ_РНПТДокументРеализацииУслуги.Номенклатура) КАК Номенклатура,
	|	ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.РНПТ, ВТ_РНПТДокументРеализацииУслуги.РНПТ) КАК РНПТ,
	|	ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.КоличествоПрослеживаемости, 0) КАК КоличествоПрослеживаемости,
	|	ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Контрагент, ВТ_РНПТДокументРеализацииУслуги.Контрагент) КАК Контрагент,
	|	ВТ_РНПТКорректировкиУслуги.СуммаБезНДС КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ВТ_РНПТКорректировкиУслуги.Ссылка
	|		ИНАЧЕ &ДокументРеализацииСсылка
	|	КОНЕЦ КАК ДокументОперации,
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА НАЧАЛОПЕРИОДА(ВТ_РНПТКорректировкиУслуги.Ссылка.Дата, КВАРТАЛ)
	|		ИНАЧЕ &ПериодИсходнойОперации
	|	КОНЕЦ КАК ПериодОперации,
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|				ИЛИ ВТ_РНПТКорректировкиУслуги.Номенклатура ЕСТЬ NULL
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ &ДатаДокументаРеализации
	|	КОНЕЦ КАК ДатаДокумента,
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|				ИЛИ ВТ_РНПТКорректировкиУслуги.Номенклатура ЕСТЬ NULL
	|			ТОГДА """"
	|		ИНАЧЕ &НомерИсходногоДокумента
	|	КОНЕЦ КАК НомерДокумента,
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|				ИЛИ ВТ_РНПТКорректировкиУслуги.Номенклатура ЕСТЬ NULL
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТипыДокументов.УПД)
	|	КОНЕЦ КАК ТипДокументаВПрослеживаемости,
	|	0 КАК КоличествоДляРаспределения,
	|	ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.ИдентификаторСтроки, ВТ_РНПТДокументРеализацииУслуги.ИдентификаторСтроки) КАК ИдентификаторСтроки,
	|	ИСТИНА КАК ПрослеживаемыйКомплект,
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПустаяСсылка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.Реализация)
	|	КОНЕЦ КАК КодОперации,
	|	ВЫБОР
	|		КОГДА НЕ &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПродаж)
	|	КОНЕЦ КАК ОтражениеВОтчетности
	|ИЗ
	|	ВТ_РНПТКорректировкиУслуги КАК ВТ_РНПТКорректировкиУслуги
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_РНПТДокументРеализацииУслуги КАК ВТ_РНПТДокументРеализацииУслуги
	|		ПО ВТ_РНПТКорректировкиУслуги.ИдентификаторСтроки = ВТ_РНПТДокументРеализацииУслуги.ИдентификаторСтроки
	|			И ВТ_РНПТКорректировкиУслуги.РНПТ = ВТ_РНПТДокументРеализацииУслуги.РНПТ
	|			И ВТ_РНПТКорректировкиУслуги.Номенклатура = ВТ_РНПТДокументРеализацииУслуги.Номенклатура
	|			И ВТ_РНПТКорректировкиУслуги.СтранаПроисхождения = ВТ_РНПТДокументРеализацииУслуги.СтранаПроисхождения
	|ГДЕ
	|	ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Ссылка.ВидОперации, ВТ_РНПТДокументРеализацииУслуги.Ссылка.ВидОперации) <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение)
	|	И НЕ &ЭтоИсправлениеКорректировки
	|	И ВЫБОР
	|			КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|				ТОГДА НЕ ВТ_РНПТКорректировкиУслуги.Номенклатура ЕСТЬ NULL
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И НЕ &ЭтоКомиссия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Количество,
	|	ВложенныйЗапрос.РНПТ,
	|	ВложенныйЗапрос.КоличествоПрослеживаемости,
	|	ВложенныйЗапрос.Контрагент,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.СуммаБезНДС < 0
	|			ТОГДА ВложенныйЗапрос.СуммаБезНДС * -1
	|		ИНАЧЕ ВложенныйЗапрос.СуммаБезНДС
	|	КОНЕЦ,
	|	ВложенныйЗапрос.Ссылка,
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.Ссылка.Дата, КВАРТАЛ),
	|	ВЫБОР
	|		КОГДА НЕ &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ДанныеПервичныхДокументов.Дата
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ДанныеПервичныхДокументов.Номер
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ТипыДокументов.УКД)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВложенныйЗапрос.КоличествоДляРаспределения,
	|	ВложенныйЗапрос.ИдентификаторСтроки,
	|	ИСТИНА,
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПустаяСсылка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.Реализация)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях)
	|		КОГДА ВложенныйЗапрос.СуммаБезНДСПослеИзменения > ВложенныйЗапрос.СуммаБезНДСДоИзменения
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПродаж)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПокупок)
	|	КОНЕЦ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Номенклатура, ВТ_РНПТДокументРеализацииУслуги.Номенклатура) КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_РНПТДокументРеализацииУслуги.Количество, 0) - ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Количество, 0) > 0
	|				ТОГДА ЕСТЬNULL(ВТ_РНПТДокументРеализацииУслуги.Количество, 0) - ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Количество, 0)
	|			ИНАЧЕ ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Количество, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализацииУслуги.Количество, 0)
	|		КОНЕЦ КАК Количество,
	|		ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.РНПТ, ВТ_РНПТДокументРеализацииУслуги.РНПТ) КАК РНПТ,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_РНПТДокументРеализацииУслуги.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.КоличествоПрослеживаемости, 0) > 0
	|				ТОГДА ЕСТЬNULL(ВТ_РНПТДокументРеализацииУслуги.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.КоличествоПрослеживаемости, 0)
	|			ИНАЧЕ ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТДокументРеализацииУслуги.КоличествоПрослеживаемости, 0)
	|		КОНЕЦ КАК КоличествоПрослеживаемости,
	|		ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Контрагент, ВТ_РНПТДокументРеализацииУслуги.Контрагент) КАК Контрагент,
	|		ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Ссылка, ВТ_РНПТДокументРеализацииУслуги.Ссылка) КАК Ссылка,
	|		ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Количество, 0) КАК КоличествоДляРаспределения,
	|		ЕСТЬNULL(ВТ_РНПТДокументРеализацииУслуги.ИдентификаторСтроки, ВТ_РНПТКорректировкиУслуги.ИдентификаторСтроки) КАК ИдентификаторСтроки,
	|		ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Комплектующие, ВТ_РНПТДокументРеализацииУслуги.Комплектующие) КАК Комплектующие,
	|		ЕСТЬNULL(ВТ_РНПТДокументРеализацииУслуги.СуммаБезНДС, 0) - ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.СуммаБезНДС, 0) КАК СуммаБезНДС,
	|		ВТ_РНПТКорректировкиУслуги.СуммаБезНДС КАК СуммаБезНДСПослеИзменения,
	|		ВТ_РНПТДокументРеализацииУслуги.СуммаБезНДС КАК СуммаБезНДСДоИзменения
	|	ИЗ
	|		ВТ_РНПТКорректировкиУслуги КАК ВТ_РНПТКорректировкиУслуги
	|			ПОЛНОЕ СОЕДИНЕНИЕ ВТ_РНПТДокументРеализацииУслуги КАК ВТ_РНПТДокументРеализацииУслуги
	|			ПО ВТ_РНПТКорректировкиУслуги.ИдентификаторСтроки = ВТ_РНПТДокументРеализацииУслуги.ИдентификаторСтроки
	|				И ВТ_РНПТКорректировкиУслуги.РНПТ = ВТ_РНПТДокументРеализацииУслуги.РНПТ
	|				И ВТ_РНПТКорректировкиУслуги.Номенклатура = ВТ_РНПТДокументРеализацииУслуги.Номенклатура
	|				И ВТ_РНПТКорректировкиУслуги.СтранаПроисхождения = ВТ_РНПТДокументРеализацииУслуги.СтранаПроисхождения
	|	ГДЕ
	|		(ВТ_РНПТКорректировкиУслуги.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение)
	|				ИЛИ ВТ_РНПТДокументРеализацииУслуги.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение))) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ВложенныйЗапрос.Ссылка = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	ВложенныйЗапрос.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение)
	|	И НЕ &ЭтоКомиссия
	|	И (ВложенныйЗапрос.СуммаБезНДС <> 0
	|			ИЛИ ВложенныйЗапрос.Количество <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Количество,
	|	ВложенныйЗапрос.РНПТ,
	|	ВложенныйЗапрос.КоличествоПрослеживаемости,
	|	ВложенныйЗапрос.Контрагент,
	|	ВложенныйЗапрос.СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ВложенныйЗапрос.Ссылка
	|		ИНАЧЕ &ИсправляемыйСчетФактура
	|	КОНЕЦ,
	|	ВложенныйЗапрос.ПериодОперации,
	|	ВЫБОР
	|		КОГДА НЕ &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ДанныеПервичныхДокументов.Дата
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ДанныеПервичныхДокументов.Номер
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ТипыДокументов.УКД)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВложенныйЗапрос.КоличествоДляРаспределения,
	|	ВложенныйЗапрос.ИдентификаторСтроки,
	|	ВложенныйЗапрос.ПрослеживаемыйКомплект,
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПустаяСсылка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.Реализация)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПродаж)
	|	КОНЕЦ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Количество, 0) - ЕСТЬNULL(ВТ_РНПТИсходногоДокументаУслуги.Количество, 0) > 0
	|				ТОГДА ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Количество, 0) - ЕСТЬNULL(ВТ_РНПТИсходногоДокументаУслуги.Количество, 0)
	|			ИНАЧЕ ЕСТЬNULL(ВТ_РНПТИсходногоДокументаУслуги.Количество, 0) - ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Количество, 0)
	|		КОНЕЦ КАК Количество,
	|		ЕСТЬNULL(ВТ_РНПТИсходногоДокументаУслуги.РНПТ, ВТ_РНПТКорректировкиУслуги.РНПТ) КАК РНПТ,
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТИсходногоДокументаУслуги.КоличествоПрослеживаемости, 0) > 0
	|				ТОГДА ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТИсходногоДокументаУслуги.КоличествоПрослеживаемости, 0)
	|			ИНАЧЕ ЕСТЬNULL(ВТ_РНПТИсходногоДокументаУслуги.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.КоличествоПрослеживаемости, 0)
	|		КОНЕЦ КАК КоличествоПрослеживаемости,
	|		ЕСТЬNULL(ВТ_РНПТИсходногоДокументаУслуги.Контрагент, ВТ_РНПТКорректировкиУслуги.Контрагент) КАК Контрагент,
	|		&Ссылка КАК Ссылка,
	|		НАЧАЛОПЕРИОДА(ЕСТЬNULL(ВТ_РНПТИсходногоДокументаУслуги.Ссылка.Дата, ВТ_РНПТКорректировкиУслуги.Ссылка.Дата), КВАРТАЛ) КАК ПериодОперации,
	|		ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.Количество, 0) КАК КоличествоДляРаспределения,
	|		ЕСТЬNULL(ВТ_РНПТКорректировкиУслуги.ИдентификаторСтроки, ВТ_РНПТИсходногоДокументаУслуги.ИдентификаторСтроки) КАК ИдентификаторСтроки,
	|		ИСТИНА КАК ПрослеживаемыйКомплект,
	|		ВТ_РНПТКорректировкиУслуги.СуммаБезНДС КАК СуммаБезНДС,
	|		ЕСТЬNULL(ВТ_РНПТИсходногоДокументаУслуги.Номенклатура, ВТ_РНПТКорректировкиУслуги.Номенклатура) КАК Номенклатура,
	|		ЕСТЬNULL(ВТ_РНПТИсходногоДокументаУслуги.СтранаПроисхождения, ВТ_РНПТКорректировкиУслуги.СтранаПроисхождения) КАК СтранаПроисхождения
	|	ИЗ
	|		ВТ_РНПТИсходногоДокументаУслуги КАК ВТ_РНПТИсходногоДокументаУслуги
	|			ПОЛНОЕ СОЕДИНЕНИЕ ВТ_РНПТКорректировкиУслуги КАК ВТ_РНПТКорректировкиУслуги
	|			ПО ВТ_РНПТИсходногоДокументаУслуги.ИдентификаторСтроки = ВТ_РНПТКорректировкиУслуги.ИдентификаторСтроки
	|				И ВТ_РНПТИсходногоДокументаУслуги.РНПТ = ВТ_РНПТКорректировкиУслуги.РНПТ
	|				И ВТ_РНПТИсходногоДокументаУслуги.СтранаПроисхождения = ВТ_РНПТКорректировкиУслуги.СтранаПроисхождения
	|	ГДЕ
	|		&ЭтоИсправлениеКорректировки) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО (ДанныеПервичныхДокументов.Документ = &ИсправляемыйСчетФактура)
	|ГДЕ
	|	&ЭтоИсправлениеКорректировки
	|	И НЕ &ЭтоКомиссия";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Процедура ПодготовитьТаблицуДокументаРасчетыВВалютеСУчетомРекомендацийПоНДС(ТаблицаДляОбработки, Реквизиты)
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РублевыеСуммыДокументовВВалюте.Всего КАК Всего,
	|	РублевыеСуммыДокументовВВалюте.НДС КАК НДС,
	|	РублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДС,
	|	РублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	ВЫБОР
	|		КОГДА РублевыеСуммыДокументовВВалюте.ИдентификаторСтроки = """"
	|			ТОГДА РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|		ИНАЧЕ РублевыеСуммыДокументовВВалюте.ИдентификаторСтроки
	|	КОНЕЦ КАК ИдентификаторСтроки
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РублевыеСуммыДокументовВВалюте.Регистратор = &ДокументОснование
	|	И РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента В(&ТЧДокумента)";
	
	ТЧДокумента = Новый Массив();
	ТЧДокумента.Добавить(Перечисления.ТабличныеЧастиДокументов.Товары);
	ТЧДокумента.Добавить(Перечисления.ТабличныеЧастиДокументов.Услуги);
	ТЧДокумента.Добавить(Перечисления.ТабличныеЧастиДокументов.АгентскиеУслуги);
	Если ТипЗнч(Реквизиты.ДокументРеализации) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		Запрос.УстановитьПараметр("ДокументОснование", Реквизиты.ИсходныйДокументРеализации);
	Иначе
		Запрос.УстановитьПараметр("ДокументОснование", Реквизиты.ДокументРеализации);
	КонецЕсли;

	Запрос.УстановитьПараметр("ТЧДокумента", ТЧДокумента);
	РублевыеСуммы = Запрос.Выполнить().Выгрузить();
	ТаблицаВРублях = ТаблицаДляОбработки.Скопировать();
	ТаблицаВРублях.Колонки.Добавить("НетИзменений", Новый ОписаниеТипов("Булево"));
	ТаблицаВРублях.Колонки.Добавить("Уменьшение", Новый ОписаниеТипов("Булево"));
	ТаблицаВРублях.Колонки.Добавить("Увеличение", Новый ОписаниеТипов("Булево"));
	ТаблицаВРублях.Колонки.Добавить("СуммаУвеличения");
	СуммаУменьшения = 0;
	СуммаУменьшенияВРублях = 0;
	
	Если ТипЗнч(Реквизиты.ДокументРеализации) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		ОснованиеВозврат = Истина;
		МетаданныеДокументаРеализации = Реквизиты.ИсправляемыйДокументРеализации.Метаданные();
		ЕстьСуммаДокумента = ОбщегоНазначения.ЕстьРеквизитОбъекта("СуммаДокумента", МетаданныеДокументаРеализации);
		Если ЕстьСуммаДокумента Тогда
		СуммаВВалютеДоИзменения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
			Реквизиты.ИсправляемыйДокументРеализации, "СуммаДокумента");
		Иначе
			СуммаВВалютеДоИзменения = ТаблицаВРублях.Итог("СуммаВзаиморасчетовДоИзменения");
		КонецЕсли;
	Иначе
		ОснованиеВозврат = Ложь;
		СуммаВВалютеДоИзменения = ТаблицаВРублях.Итог("СуммаВзаиморасчетовДоИзменения");
	КонецЕсли;
	
	// Курс на дату отгрузки нужен для расчета сумм увеличения
	// Если не было авансов, то курс на дату отгрузки = среднему курсу по отгрузке
	// Средний курс по отдельным позициям может отличаться от среднего курса по отгрузке если это не первая корректировка
	// И было увеличение с зачетом аванса в предыдущей корректировке
	
	КурсОтгрузки = ?(Реквизиты.КратностьДокументаРеализации = 0, 0,
		Реквизиты.КурсДокументаРеализации / Реквизиты.КратностьДокументаРеализации);
	Если РублевыеСуммы.Количество() > 0 И СуммаВВалютеДоИзменения > 0 Тогда
			
		СреднийКурсПоОтгрузке = РублевыеСуммы.Итог("Всего")/ СуммаВВалютеДоИзменения;
	Иначе
		СреднийКурсПоОтгрузке = КурсОтгрузки;
	КонецЕсли;
	
	СреднийКурсПоСтроке = СреднийКурсПоОтгрузке;
	
	Для каждого Строка Из ТаблицаВРублях Цикл
		Если Строка.СуммаВзаиморасчетовДоКорректировки = 0 Тогда
			Строка.СуммаВзаиморасчетовДоКорректировки 		= Строка.СуммаВзаиморасчетовДоИзменения;
			Строка.СуммаНДСВзаиморасчетовДоКорректировки 	= Строка.СуммаНДСВзаиморасчетовДоИзменения;
			Строка.СуммаРубДоКорректировки 					= Строка.СуммаРубДоИзменения;
			Строка.СуммаНДСРубДоКорректировки 				= Строка.СуммаНДСРубДоИзменения;
			Строка.СуммаБезНДСРубДоКорректировки 			= Строка.СуммаБезНДСРубДоИзменения;
		КонецЕсли;
		// 1. Расчет сумм до корректировки, до изменения 
		Если ЗначениеЗаполнено(Строка.СуммаВзаиморасчетовДоИзменения) И ОснованиеВозврат Тогда
			
			Строка.СуммаРубДоИзменения = Окр(Строка.СуммаРубДоИзменения * СреднийКурсПоОтгрузке, 2);
			
			ПроцентНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(Строка.СтавкаНДСДоИзменения);
			
			Если Реквизиты.РасчетыВУсловныхЕдиницах Тогда
				Строка.СуммаНДСРубДоИзменения = Окр(Строка.СуммаРубДоИзменения*ПроцентНДС/(100 + ПроцентНДС), 2);
				Строка.СуммаБезНДСРубДоИзменения = Строка.СуммаРубДоИзменения - Строка.СуммаНДСРубДоИзменения;
			Иначе
				Строка.СуммаБезНДСРубДоИзменения = Окр(Строка.СуммаВзаиморасчетовДоИзменения* КурсОтгрузки /(100 + ПроцентНДС)*100 ,2);
				Строка.СуммаНДСРубДоИзменения = Окр(Строка.СуммаБезНДСРубДоИзменения * ПроцентНДС / 100,2);
			КонецЕсли;
		ИначеЕсли Не ЗначениеЗаполнено(Строка.СуммаВзаиморасчетовДоИзменения)Тогда
			// Добавлена новая строка 
			Строка.Увеличение = Истина;
			Строка.СуммаУвеличения = Строка.СуммаВзаиморасчетов;
		Иначе
			Если Строка.ИмяСписка = "Услуги" Тогда
				ТЧПоиска = Перечисления.ТабличныеЧастиДокументов.Услуги;
			ИначеЕсли Строка.ИмяСписка = "Товары" Тогда
				ТЧПоиска = Перечисления.ТабличныеЧастиДокументов.Товары;
			ИначеЕсли Строка.ИмяСписка = "АгентскиеУслуги" Тогда 
				ТЧПоиска = Перечисления.ТабличныеЧастиДокументов.АгентскиеУслуги;
			КонецЕсли;

			СтруктураПоиска = Новый Структура();
			СтруктураПоиска.Вставить("ИдентификаторСтроки", Строка.ИдентификаторСтроки);
			СтруктураПоиска.Вставить("ТабличнаяЧастьДокумента", ТЧПоиска);
			РублевыеСуммыПоСтроке = РублевыеСуммы.НайтиСтроки(СтруктураПоиска);
			Если РублевыеСуммыПоСтроке.Количество() = 0 Тогда
				СтруктураПоиска = Новый Структура();
				СтруктураПоиска.Вставить("ИдентификаторСтроки", Строка.НомерСтроки);
				СтруктураПоиска.Вставить("ТабличнаяЧастьДокумента", ТЧПоиска);
				РублевыеСуммыПоСтроке = РублевыеСуммы.НайтиСтроки(СтруктураПоиска);
			КонецЕсли;
			Если РублевыеСуммыПоСтроке.Количество() > 0 Тогда
				СтрокаРублевыхСумм =  РублевыеСуммыПоСтроке[0];
				СреднийКурсПоСтроке = СтрокаРублевыхСумм.Всего / ?(Строка.СуммаВзаиморасчетовДоИзменения = 0, 1, Строка.СуммаВзаиморасчетовДоИзменения);

				Строка.СуммаРубДоИзменения = СтрокаРублевыхСумм.Всего;
				Строка.СуммаНДСРубДоИзменения = СтрокаРублевыхСумм.НДС;
				Строка.СуммаБезНДСРубДоИзменения = СтрокаРублевыхСумм.НалоговаяБазаНДС;
			Иначе
				Строка.СуммаРубДоИзменения = Окр(Строка.СуммаРубДоИзменения * СреднийКурсПоОтгрузке, 2);
				
				ПроцентНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(Строка.СтавкаНДСДоИзменения);
				
				Если Реквизиты.РасчетыВУсловныхЕдиницах Тогда
					Строка.СуммаНДСРубДоИзменения = Окр(Строка.СуммаРубДоИзменения*ПроцентНДС/(100 + ПроцентНДС), 2);
					Строка.СуммаБезНДСРубДоИзменения = Строка.СуммаРубДоИзменения - Строка.СуммаНДСРубДоИзменения;
				Иначе
					Строка.СуммаБезНДСРубДоИзменения = Окр(Строка.СуммаВзаиморасчетовДоИзменения * КурсОтгрузки /(100 + ПроцентНДС)*100 ,2);
					Строка.СуммаНДСРубДоИзменения = Окр(Строка.СуммаБезНДСРубДоИзменения * ПроцентНДС / 100,2);
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
		Если Строка.СуммаВзаиморасчетовДоКорректировки = Строка.СуммаВзаиморасчетовДоИзменения Тогда
			Строка.СуммаРубДоКорректировки 					= Строка.СуммаРубДоИзменения;
			Строка.СуммаНДСРубДоКорректировки 				= Строка.СуммаНДСРубДоИзменения;
			Строка.СуммаБезНДСРубДоКорректировки 			= Строка.СуммаБезНДСРубДоИзменения;
		Иначе
			Строка.СуммаРубДоКорректировки = Окр(Строка.СуммаРубДоКорректировки * СреднийКурсПоОтгрузке, 2);
			
			ПроцентНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(Строка.СтавкаНДС);
			
			Если Реквизиты.РасчетыВУсловныхЕдиницах Тогда
				Строка.СуммаНДСРубДоКорректировки = Окр(Строка.СуммаРубДоКорректировки * ПроцентНДС/(100 + ПроцентНДС), 2);
				Строка.СуммаБезНДСРубДоКорректировки = Строка.СуммаРубДоКорректировки - Строка.СуммаНДСРубДоКорректировки;
			Иначе
				Строка.СуммаБезНДСРубДоКорректировки = Окр(Строка.СуммаВзаиморасчетовДоКорректировки * КурсОтгрузки /(100 + ПроцентНДС)*100 ,2);
				Строка.СуммаНДСРубДоКорректировки = Окр(Строка.СуммаБезНДСРубДоКорректировки * ПроцентНДС / 100,2);
			КонецЕсли;
		КонецЕсли;


		// 2. Расчет сумм по строке после изменения/корректировки
		// 2.1 Расчет рублевых суммы для тех строк, по которым не было никаких изменений
		Если Строка.СуммаВзаиморасчетовДоИзменения = Строка.СуммаВзаиморасчетов Тогда
			Строка.НетИзменений = Истина;
			Строка.СуммаРуб = Строка.СуммаРубДоИзменения;
			Если Строка.СтавкаНДСДоИзменения = Строка.СтавкаНДС Тогда
				Строка.СуммаНДСРуб = Строка.СуммаНДСРубДоИзменения;
				Строка.СуммаБезНДСРуб = Строка.СуммаБезНДСРубДоИзменения;
			Иначе
				ПроцентНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(Строка.СтавкаНДС);

				Если Реквизиты.РасчетыВУсловныхЕдиницах Тогда
					Строка.СуммаНДСРуб = Окр(Строка.СуммаРуб*ПроцентНДС/(100 + ПроцентНДС), 2);
					Строка.СуммаБезНДСРуб = Строка.СуммаРуб - Строка.СуммаНДСРуб;
				Иначе
					Строка.СуммаБезНДСРуб = Окр(Строка.СуммаВзаиморасчетов * КурсОтгрузки /(100 + ПроцентНДС)*100 ,2);
					Строка.СуммаНДСРуб = Окр(Строка.СуммаБезНДСРуб * ПроцентНДС / 100,2);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		//2.2.Расчет по строкам, в которых было уменьшение суммы
		Если Строка.СуммаВзаиморасчетовДоИзменения > Строка.СуммаВзаиморасчетов Тогда
			Строка.СуммаРуб = Окр(Строка.СуммаРуб * СреднийКурсПоСтроке, 2);
			ПроцентНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(Строка.СтавкаНДС);

			Если Реквизиты.РасчетыВУсловныхЕдиницах Тогда
				Строка.СуммаНДСРуб = Окр(Строка.СуммаРуб*ПроцентНДС/(100 + ПроцентНДС), 2);
				Строка.СуммаБезНДСРуб = Строка.СуммаРуб - Строка.СуммаНДСРуб;
			Иначе
				Строка.СуммаБезНДСРуб = Окр(Строка.СуммаВзаиморасчетов * КурсОтгрузки /(100 + ПроцентНДС)*100 ,2);
				Строка.СуммаНДСРуб = Окр(Строка.СуммаБезНДСРуб * ПроцентНДС / 100,2); 
			КонецЕсли;
			
			СуммаУменьшения = СуммаУменьшения + (Строка.СуммаВзаиморасчетовДоИзменения - Строка.СуммаВзаиморасчетов);
			СуммаУменьшенияВРублях = СуммаУменьшенияВРублях + (Строка.СуммаРубДоИзменения - Строка.СуммаРуб);
			Строка.Уменьшение = Истина;
		КонецЕсли;
		
		// 2.3.Строки с увеличением необходимо отметить, расчет будет произведен дальше
		Если Строка.СуммаВзаиморасчетовДоИзменения < Строка.СуммаВзаиморасчетов Тогда
			Строка.Увеличение = Истина;
			Строка.СуммаУвеличения = Строка.СуммаВзаиморасчетов;
		КонецЕсли;
	КонецЦикла;
	
	ОтборСтрокСУвеличением = Новый Структура();
	ОтборСтрокСУвеличением.Вставить("Увеличение", Истина);
	СтрокиСУвеличением = ТаблицаВРублях.НайтиСтроки(ОтборСтрокСУвеличением);
	КурсДляУвеличения = ?(СуммаУменьшения = 0, КурсОтгрузки,
	СуммаУменьшенияВРублях / СуммаУменьшения);
	ТаблицаСтрокСУвеличением = ТаблицаВРублях.Скопировать(ОтборСтрокСУвеличением);
	Если ТаблицаСтрокСУвеличением.Количество() > 0 Тогда
		Если ТаблицаВРублях.Итог("СуммаВзаиморасчетов") <= ТаблицаВРублях.Итог("СуммаВзаиморасчетовДоИзменения")
			Или СуммаУменьшения = 0 Тогда
			Для каждого СтрокаУвеличения Из ТаблицаСтрокСУвеличением Цикл
				СтрокаУвеличения.СуммаРуб = Окр(СтрокаУвеличения.СуммаРубДоИзменения +
				(СтрокаУвеличения.СуммаВзаиморасчетов - СтрокаУвеличения.СуммаВзаиморасчетовДоИзменения) 
				* КурсДляУвеличения, 2);
				
				ПроцентНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаУвеличения.СтавкаНДС);
				
				Если Реквизиты.РасчетыВУсловныхЕдиницах Тогда
					СтрокаУвеличения.СуммаНДСРуб = Окр(СтрокаУвеличения.СуммаРуб*ПроцентНДС/(100 + ПроцентНДС), 2);
					СтрокаУвеличения.СуммаБезНДСРуб = СтрокаУвеличения.СуммаРуб - СтрокаУвеличения.СуммаНДСРуб;
				Иначе
					Если Строка.ИмяСписка = "Услуги" Тогда
						ТЧПоиска = Перечисления.ТабличныеЧастиДокументов.Услуги;
					ИначеЕсли Строка.ИмяСписка = "Товары" Тогда
						ТЧПоиска = Перечисления.ТабличныеЧастиДокументов.Товары;
					ИначеЕсли Строка.ИмяСписка = "АгентскиеУслуги" Тогда 
						ТЧПоиска = Перечисления.ТабличныеЧастиДокументов.АгентскиеУслуги;
					КонецЕсли;
					
					Если ОснованиеВозврат Тогда
						СтрокаУвеличения.СуммаБезНДСРуб = Окр(СтрокаУвеличения.СуммаВзаиморасчетов * КурсОтгрузки /(100 + ПроцентНДС)*100 ,2);
					Иначе
						СтруктураПоиска = Новый Структура();
						СтруктураПоиска.Вставить("ИдентификаторСтроки", СтрокаУвеличения.ИдентификаторСтроки);
						СтруктураПоиска.Вставить("ТабличнаяЧастьДокумента", ТЧПоиска);
						РублевыеСуммыПоСтроке = РублевыеСуммы.НайтиСтроки(СтруктураПоиска);
						Если РублевыеСуммыПоСтроке.Количество() > 0 Тогда
							СтрокаРублевыхСумм =  РублевыеСуммыПоСтроке[0];
							СтрокаУвеличения.СуммаБезНДСРуб = Окр((СтрокаРублевыхСумм.НалоговаяБазаНДС + СтрокаРублевыхСумм.НДС
							+(СтрокаУвеличения.СуммаВзаиморасчетов - СтрокаУвеличения.СуммаВзаиморасчетовДоИзменения)
							* КурсОтгрузки) /(100 + ПроцентНДС)*100 ,2);
						Иначе
							СтрокаУвеличения.СуммаБезНДСРуб = Окр(СтрокаУвеличения.СуммаВзаиморасчетов * КурсОтгрузки /(100 + ПроцентНДС)*100 ,2);
						КонецЕсли;
					КонецЕсли;
					СтрокаУвеличения.СуммаНДСРуб = Окр(СтрокаУвеличения.СуммаБезНДСРуб * ПроцентНДС / 100,2);
				КонецЕсли;
			КонецЦикла;
		Иначе
			ОбщегоНазначенияБПВызовСервера.РаспределитьСуммуПоКолонкеТаблицы(
			СуммаУменьшения, ТаблицаСтрокСУвеличением, "СуммаУвеличения");
			Для каждого СтрокаУвеличения Из ТаблицаСтрокСУвеличением Цикл
				СтрокаУвеличения.СуммаРуб = Окр(СтрокаУвеличения.СуммаРубДоИзменения
				+ СтрокаУвеличения.СуммаУвеличения * КурсДляУвеличения
				+ (СтрокаУвеличения.СуммаВзаиморасчетов - СтрокаУвеличения.СуммаВзаиморасчетовДоИзменения
				- СтрокаУвеличения.СуммаУвеличения) * КурсОтгрузки, 2);
				
				ПроцентНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаУвеличения.СтавкаНДС);
				
				Если Реквизиты.РасчетыВУсловныхЕдиницах Тогда
					СтрокаУвеличения.СуммаНДСРуб = Окр(СтрокаУвеличения.СуммаРуб*ПроцентНДС/(100 + ПроцентНДС), 2);
					СтрокаУвеличения.СуммаБезНДСРуб = СтрокаУвеличения.СуммаРуб - СтрокаУвеличения.СуммаНДСРуб;
				Иначе
					Если Строка.ИмяСписка = "Услуги" Тогда
						ТЧПоиска = Перечисления.ТабличныеЧастиДокументов.Услуги;
					ИначеЕсли Строка.ИмяСписка = "Товары" Тогда
						ТЧПоиска = Перечисления.ТабличныеЧастиДокументов.Товары;
					ИначеЕсли Строка.ИмяСписка = "АгентскиеУслуги" Тогда 
						ТЧПоиска = Перечисления.ТабличныеЧастиДокументов.АгентскиеУслуги;
					КонецЕсли;
					
					Если ОснованиеВозврат Тогда
						СтрокаУвеличения.СуммаБезНДСРуб = Окр(СтрокаУвеличения.СуммаВзаиморасчетов * КурсОтгрузки /(100 + ПроцентНДС)*100 ,2);
					Иначе
						СтруктураПоиска = Новый Структура();
						СтруктураПоиска.Вставить("ИдентификаторСтроки", СтрокаУвеличения.ИдентификаторСтроки);
						СтруктураПоиска.Вставить("ТабличнаяЧастьДокумента", ТЧПоиска);
						РублевыеСуммыПоСтроке = РублевыеСуммы.НайтиСтроки(СтруктураПоиска);
						
						Если РублевыеСуммыПоСтроке.Количество() > 0 Тогда
							СтрокаРублевыхСумм =  РублевыеСуммыПоСтроке[0];				
							СтрокаУвеличения.СуммаБезНДСРуб = Окр((СтрокаРублевыхСумм.НалоговаяБазаНДС + СтрокаРублевыхСумм.НДС
							+(СтрокаУвеличения.СуммаВзаиморасчетов - СтрокаУвеличения.СуммаВзаиморасчетовДоИзменения)
							* КурсОтгрузки) /(100 + ПроцентНДС)*100 ,2);
						Иначе
							СтрокаУвеличения.СуммаБезНДСРуб = Окр(СтрокаУвеличения.СуммаВзаиморасчетов * КурсОтгрузки /(100 + ПроцентНДС)*100 ,2);
						КонецЕсли;
					КонецЕсли;
					СтрокаУвеличения.СуммаНДСРуб = Окр(СтрокаУвеличения.СуммаБезНДСРуб * ПроцентНДС / 100,2);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Для каждого Стр из СтрокиСУвеличением Цикл
		ТаблицаВРублях.Удалить(Стр);
	КонецЦикла;
	Для каждого Стр Из ТаблицаСтрокСУвеличением Цикл
		НоваяСтрока = ТаблицаВРублях.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Стр);
	КонецЦикла;
	
	ТаблицаВРублях.Колонки.Удалить("НетИзменений");
	ТаблицаВРублях.Колонки.Удалить("Уменьшение");
	ТаблицаВРублях.Колонки.Удалить("Увеличение");
	ТаблицаДляОбработки = ТаблицаВРублях;

КонецПроцедуры

#Область Прослеживаемость

//Формирует текст запроса для определения прослеживаемого товара в документе
//
// Возвращаемое значение:
// Строка - Текст сформированного запроса
//
Функция ТекстЗапросаТаблицаПрослеживаемыхТоваровПоОснованию() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ХозрасчетныйСубконто.Значение КАК Номенклатура,
	|	СУММА(-Хозрасчетный.Сумма) КАК Сумма,
	|	Хозрасчетный.СчетКт КАК СчетКт
	|ПОМЕСТИТЬ ВТ_СебестоимостьТоваровПоДокументу
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ПО ХозрасчетныйСубконто.Регистратор = Хозрасчетный.Регистратор
	|			И ХозрасчетныйСубконто.НомерСтроки = Хозрасчетный.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ПО ХозрасчетныйСубконто.Регистратор = КорректировкаРеализации.Ссылка
	|ГДЕ
	|	ХозрасчетныйСубконто.Регистратор = &Основание
	|	И ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
	|	И ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит)
	|	И НЕ КорректировкаРеализации.ОтчетностьПодписана
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйСубконто.Значение,
	|	Хозрасчетный.СчетКт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйСубконто.Значение,
	|	СУММА(Хозрасчетный.Сумма),
	|	Хозрасчетный.СчетДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ПО ХозрасчетныйСубконто.Регистратор = Хозрасчетный.Регистратор
	|			И ХозрасчетныйСубконто.НомерСтроки = Хозрасчетный.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ПО ХозрасчетныйСубконто.Регистратор = КорректировкаРеализации.Ссылка
	|ГДЕ
	|	ХозрасчетныйСубконто.Регистратор = &Основание
	|	И ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
	|	И ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет)
	|	И КорректировкаРеализации.ОтчетностьПодписана
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйСубконто.Значение,
	|	Хозрасчетный.СчетДт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаРеализацииТовары.Номенклатура КАК Номенклатура,
	|	СУММА(КорректировкаРеализацииТовары.КоличествоДоИзменения - КорректировкаРеализацииТовары.Количество) КАК Количество,
	|	КорректировкаРеализации.Организация КАК Организация,
	|	КорректировкаРеализации.Дата КАК ПериодСобытия,
	|	КорректировкаРеализацииТовары.СчетУчета КАК СчетУчета,
	|	КорректировкаРеализацииТовары.СтранаПроисхождения КАК СтранаПроисхождения
	|ПОМЕСТИТЬ ВТ_ТаблицаТоваров
	|ИЗ
	|	Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ПО КорректировкаРеализацииТовары.Ссылка = КорректировкаРеализации.Ссылка
	|ГДЕ
	|	КорректировкаРеализацииТовары.Ссылка = &Основание
	|	И КорректировкаРеализацииТовары.ПрослеживаемыйТовар
	|	И КорректировкаРеализации.Проведен
	|	И КорректировкаРеализацииТовары.КоличествоДоИзменения - КорректировкаРеализацииТовары.Количество <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	КорректировкаРеализацииТовары.Номенклатура,
	|	КорректировкаРеализации.Организация,
	|	КорректировкаРеализации.Дата,
	|	КорректировкаРеализацииТовары.СтранаПроисхождения,
	|	КорректировкаРеализацииТовары.СчетУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	СУММА(ВТ_ТаблицаТоваров.Количество) КАК Количество,
	|	ВТ_ТаблицаТоваров.Организация КАК Организация,
	|	ВТ_ТаблицаТоваров.ПериодСобытия КАК ПериодСобытия,
	|	ВТ_ТаблицаТоваров.СтранаПроисхождения КАК СтранаПроисхождения,
	|	СУММА(ВТ_СебестоимостьТоваровПоДокументу.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТ_ТаблицаТоваровИСтоимость
	|ИЗ
	|	ВТ_ТаблицаТоваров КАК ВТ_ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СебестоимостьТоваровПоДокументу КАК ВТ_СебестоимостьТоваровПоДокументу
	|		ПО ВТ_ТаблицаТоваров.Номенклатура = ВТ_СебестоимостьТоваровПоДокументу.Номенклатура
	|			И ВТ_ТаблицаТоваров.СчетУчета = ВТ_СебестоимостьТоваровПоДокументу.СчетКт
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаТоваров.Номенклатура,
	|	ВТ_ТаблицаТоваров.Организация,
	|	ВТ_ТаблицаТоваров.ПериодСобытия,
	|	ВТ_ТаблицаТоваров.СтранаПроисхождения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураСправочник.КодТНВЭД КАК ТНВЭД,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Количество КАК Количество,
	|	ТаблицаТоваров.Сумма КАК Сумма,
	|	ТаблицаТоваров.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацииПрослеживаемыхТоваров.ИнвентаризацияТоваров) КАК ВидОперации,
	|	ТаблицаТоваров.ПериодСобытия КАК ПериодСобытия,
	|	ТаблицаТоваров.СтранаПроисхождения КАК СтранаПроисхождения,
	|	&ПустаяСсылкаРнпт КАК РНПТ,
	|	NULL КАК ПервичныйДокумент,
	|	ЗНАЧЕНИЕ(Справочник.ОсновныеСредства.ПустаяСсылка) КАК ОсновноеСредство,
	|	0 КАК ВсегоКоличествоКомплектующих,
	|	0 КАК ВсегоКомлектующихНаСумму
	|ПОМЕСТИТЬ ВТ_ТоварыПоОснованию
	|ИЗ
	|	ВТ_ТаблицаТоваровИСтоимость КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
	|		ПО ТаблицаТоваров.Номенклатура = НоменклатураСправочник.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ВТ_ТаблицаТоваров.Количество КАК Количество,
	|	ВТ_ТаблицаТоваров.Сумма КАК Сумма,
	|	ВТ_ТаблицаТоваров.Организация КАК Организация,
	|	ВТ_ТаблицаТоваров.ПериодСобытия КАК ПериодСобытия,
	|	ЛОЖЬ КАК РанееРегистрировалсяВПрослеживаемости,
	|	0 КАК КоличествоУчет,
	|	ВТ_ТаблицаТоваров.ТНВЭД КАК ТНВЭД,
	|	ВТ_ТаблицаТоваров.ВидОперации КАК ВидОперации,
	|	ВТ_ТаблицаТоваров.СтранаПроисхождения КАК СтранаПроисхождения
	|ПОМЕСТИТЬ ВТ_ТаблицаТоваровРазмеченный
	|ИЗ
	|	ВТ_ТоварыПоОснованию КАК ВТ_ТаблицаТоваров";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецЕсли
