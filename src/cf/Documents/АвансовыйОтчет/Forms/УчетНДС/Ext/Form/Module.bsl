
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
			
	Для каждого РеквизитФормы Из ПолучитьРеквизиты() Цикл
		ИмяРеквизита = РеквизитФормы.Имя;
		Если Параметры.Свойство(ИмяРеквизита) Тогда
			ЭтотОбъект[ИмяРеквизита] = Параметры[ИмяРеквизита];
		КонецЕсли;	
	КонецЦикла; 
 
	// В разных сценариях количество отображаемых полей различно.
	// Для того, чтобы форма подстраивалась по размерам под конкретное количество полей, 
	// подсчитаем фактическое количество видимых элементов (блоков), 
	// и ниже используем это значение как КлючСохраненияПоложенияОкна.
	КоличествоОтображаемыхЭлементов = 3; // всего 3 или 4
	
	ПоказыватьСчетаУчета = СчетаУчетаВДокументахВызовСервераПовтИсп.ПользовательУправляетСчетамиУчета();	
		
	Элементы.ПринятьКВычету.Видимость = Не РаздельныйУчетНДСНаСчете19 Или Не ПоказыватьСчетаУчета;
	Элементы.СпособУчетаНДС.Видимость = РаздельныйУчетНДСНаСчете19 И ПоказыватьСчетаУчета;
	
	ЧастиПодсказки = Новый Массив;
	ЧастиПодсказки.Добавить(НСтр("ru='Для включения расхода в книгу покупок укажите'"));
	
	Если ИмяТЧ = "Билеты" Тогда
		ЧастиПодсказки.Добавить(НСтр("ru='номер и дату документа оплаты билета'"));
		Элементы.ГруппаДатаНомерСФ.Видимость = Ложь;
		Элементы.НомерДокументаОплаты.Заголовок = НСтр("ru='Номер'");
	ИначеЕсли ВидДокументаРасхода = Перечисления.ВидыДокументовПодтверждающихКомандировочныеРасходы.Билет Тогда 
		ЧастиПодсказки.Добавить(НСтр("ru='номер и дату чека, полученного при покупке билета, а также перевозчика'"));
		Элементы.ГруппаДатаНомерСФ.Видимость = Ложь;
		Элементы.НомерДокументаОплаты.Заголовок = НСтр("ru='Чек №'");
	ИначеЕсли ВидДокументаРасхода = Перечисления.ВидыДокументовПодтверждающихКомандировочныеРасходы.Чек Тогда
		ЧастиПодсказки.Добавить(НСтр("ru='номер и дату счета-фактуры, а также поставщика'"));
		Элементы.ГруппаДатаНомерДокументаОплаты.Видимость = Ложь;
	Иначе // другой документ - требуется ввести и реквизиты СФ, и реквизиты документа оплаты
		ЧастиПодсказки.Добавить(НСтр("ru='реквизиты счета-фактуры и документа оплаты, а также поставщика'"));
		Элементы.НомерДокументаОплаты.Заголовок = НСтр("ru='Чек №'");
		КоличествоОтображаемыхЭлементов = 4;
	КонецЕсли;
	
	Элементы.ГруппаПодтверждениеРасхода.РасширеннаяПодсказка.Заголовок = СтрСоединить(ЧастиПодсказки, " ");
	
	// По билету поставщик (фактически перевозчик) указан в билете
	Если ИмяТЧ = "Билеты" Тогда 
		Элементы.Поставщик.Видимость = Ложь;
	ИначеЕсли ВидДокументаРасхода = Перечисления.ВидыДокументовПодтверждающихКомандировочныеРасходы.Билет Тогда
		Элементы.Перевозчик.Видимость = Ложь;
		Элементы.Поставщик.Заголовок = НСтр("ru='Перевозчик'"); 
	Иначе
		Элементы.Перевозчик.Видимость = Ложь;		
	КонецЕсли;
	
	// В разных сценариях количество отображаемых полей различно.
	// Для того, чтобы форма подстраивалась по размерам под конкретное количество полей, используем это значения как КлючСохраненияПоложенияОкна
	КлючСохраненияПоложенияОкна = КоличествоОтображаемыхЭлементов;

	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ПоказыватьСчетаУчета = СчетаУчетаВДокументахВызовСервераПовтИсп.ПользовательУправляетСчетамиУчета();
	
	Если Не ПредъявленСФ Тогда
		ПроверяемыеРеквизиты.Очистить();
		Если РаздельныйУчетНДСНаСчете19 И ПоказыватьСчетаУчета Тогда
			ПроверяемыеРеквизиты.Добавить("СпособУчетаНДС");
		КонецЕсли;
		Возврат;	
	КонецЕсли;	
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ИмяТЧ = "Билеты" Тогда
		// Следующие реквизиты заполняются при записи АО
		МассивНепроверяемыхРеквизитов.Добавить("НомерСФ");
		МассивНепроверяемыхРеквизитов.Добавить("ДатаСФ");
		МассивНепроверяемыхРеквизитов.Добавить("НомерДокументаОплаты"); // если пустой, то будет заполнен при записи АО
		МассивНепроверяемыхРеквизитов.Добавить("ДатаДокументаОплаты");  // если пустая, то будет заполнена при записи АО
		// В таблице билетов реквизит как таковой отсуствует - просто копируется из билета для отображения на форме				
		МассивНепроверяемыхРеквизитов.Добавить("Поставщик");
	ИначеЕсли ВидДокументаРасхода = ПредопределенноеЗначение("Перечисление.ВидыДокументовПодтверждающихКомандировочныеРасходы.Билет") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НомерСФ");
		МассивНепроверяемыхРеквизитов.Добавить("ДатаСФ");
	ИначеЕсли ВидДокументаРасхода = ПредопределенноеЗначение("Перечисление.ВидыДокументовПодтверждающихКомандировочныеРасходы.Чек") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НомерДокументаОплаты");
		МассивНепроверяемыхРеквизитов.Добавить("ДатаДокументаОплаты");		
	КонецЕсли;	
	
	Если Не РаздельныйУчетНДСНаСчете19 Или Не ПоказыватьСчетаУчета Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СпособУчетаНДС");
	КонецЕсли;	

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	ИначеЕсли Модифицированность И НЕ ПеренестиВДокумент Тогда
		
		Отказ = Истина;
		
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		Оповещение = Новый ОписаниеОповещения("ВопросПередЗакрытиемФормыЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Да);
		
	КонецЕсли;
	
	Если ПеренестиВДокумент И НЕ Отказ Тогда
		Отказ = Не ПроверитьЗаполнение();
	КонецЕсли;
	
	Если Отказ Тогда
		ПеренестиВДокумент = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)

	Если ПеренестиВДокумент Тогда
		
		СтруктураРезультат = Новый Структура;
		
		СтруктураРезультат.Вставить("ПредъявленСФ",			ПредъявленСФ);
		СтруктураРезультат.Вставить("НомерСФ",				НомерСФ);
		СтруктураРезультат.Вставить("ДатаСФ",				ДатаСФ);
		СтруктураРезультат.Вставить("НомерДокументаОплаты",	НомерДокументаОплаты);
		СтруктураРезультат.Вставить("ДатаДокументаОплаты",	ДатаДокументаОплаты);
		СтруктураРезультат.Вставить("Поставщик",			Поставщик);
		СтруктураРезультат.Вставить("СпособУчетаНДС",		СпособУчетаНДС);
		 
		ЗаполнитьЗначенияСвойств(СтруктураРезультат, ЭтотОбъект);
		ОповеститьОВыборе(СтруктураРезультат);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПринятьКВычетуПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура СпособУчетаНДСПриИзменении(Элемент)
	
	ПредъявленСФ = ЗначениеЗаполнено(СпособУчетаНДС) 
		И СпособУчетаНДС <> ПредопределенноеЗначение("Перечисление.СпособыУчетаНДС.Списывается");	

	УправлениеФормой(ЭтотОбъект);	

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	ПеренестиВДокумент = Истина;
	Закрыть();

КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Модифицированность = Ложь;
	ПеренестиВДокумент = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Элементы.ГруппаПодтверждениеРасхода.Доступность = Форма.ПредъявленСФ;

КонецПроцедуры

&НаКлиенте
Процедура ВопросПередЗакрытиемФормыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПеренестиВДокумент = Истина;
		Модифицированность = Ложь;
		Закрыть();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		ПеренестиВДокумент = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

