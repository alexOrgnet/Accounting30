#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Доверенность (М-2)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "М2";
	КомандаПечати.Представление = НСтр("ru = 'Доверенность (М-2)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Доверенность (М-2а)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "М2а";
	КомандаПечати.Представление = НСтр("ru = 'Доверенность (М-2а)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Доверенность""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

// Заполняет список команд отправки по электронной почте.
// 
// Параметры:
//  КомандыОтправки - ТаблицаЗначений - состав полей см. в функции ОтправкаПочтовыхСообщений.КомандыОтправки
//
Процедура ДобавитьКомандыОтправки(КомандыОтправки) Экспорт
	
	// Доверенность (М-2)
	КомандаОтправки = КомандыОтправки.Добавить();
	КомандаОтправки.Идентификатор = "М2";
	КомандаОтправки.Представление = НСтр("ru = 'Доверенность (М-2)'");
	КомандаОтправки.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";
	КомандаОтправки.Порядок       = 10;
	
		// Доверенность (М-2)
	КомандаОтправки = КомандыОтправки.Добавить();
	КомандаОтправки.Идентификатор = "М2а";
	КомандаОтправки.Представление = НСтр("ru = 'Доверенность (М-2а)'");
	КомандаОтправки.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокумента";
	КомандаОтправки.Порядок       = 10;
	
КонецПроцедуры

Функция ОпределитьПодписантов(СписокДокументов) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылки", СписокДокументов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Доверенность.Ссылка КАК Ссылка,
	|	Доверенность.ФизЛицо КАК ДоверенноеЛицо
	|ИЗ
	|	Документ.Доверенность КАК Доверенность
	|ГДЕ
	|	Доверенность.Ссылка В(&Ссылки)";
	
	ПодписантыДокументов = Новый Соответствие;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ПодписиДокумента = Новый Структура;
		
		Если ЗначениеЗаполнено(Выборка.ДоверенноеЛицо) Тогда
			ПодписиДокумента.Вставить("ДоверенноеЛицо", Выборка.ДоверенноеЛицо);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПодписиДокумента) Тогда
			ПодписантыДокументов.Вставить(Выборка.Ссылка, ПодписиДокумента);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ПодписантыДокументов;
	
КонецФункции

Функция ПечатьДоверенности(МассивОбъектов, ОбъектыПечати, НазваниеМакета, ПараметрыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Доверенность.Ссылка КАК Ссылка,
	|	Доверенность.Номер КАК НомерДокумента,
	|	Доверенность.Дата КАК ДатаДокумента,
	|	Доверенность.Организация КАК Руководители,
	|	Доверенность.Организация КАК Организация,
	|	Доверенность.ФизЛицо КАК ДоверенноеЛицо,
	|	Доверенность.ФизЛицо.Наименование КАК ФамилияИмяОтчествоДоверенного,
	|	Доверенность.БанковскийСчетОрганизации КАК БанковскийСчет,
	|	Доверенность.Контрагент КАК Поставщик,
	|	Доверенность.НаПолучениеОт КАК ПоставщикПредставление,
	|	Доверенность.ДатаДействия КАК СрокДействия,
	|	Доверенность.ПоДокументу КАК РеквизитыДокументаНаПолучение,
	|	Доверенность.Товары.(
	|		НомерСтроки КАК Номер,
	|		НаименованиеТовара КАК Ценности,
	|		НаименованиеТовара КАК ЦенностиПредставление,
	|		ЕдиницаПоКлассификатору КАК ЕдиницаИзмерения,
	|		ЕдиницаПоКлассификатору.Представление КАК ЕдиницаИзмеренияПредставление,
	|		Количество КАК Количество
	|	) КАК Товары
	|ИЗ
	|	Документ.Доверенность КАК Доверенность
	|ГДЕ
	|	Доверенность.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Доверенность.Дата,
	|	Доверенность.Ссылка,
	|	Номер";
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = ТекстЗапроса;
	
	Шапка = Запрос.Выполнить().Выбрать();

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_Доверенность_М2";

	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_М2");

	ПервыйДокумент = Истина;
	Пока Шапка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ДанныеОФизЛице = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Шапка.Организация, Шапка.ДоверенноеЛицо,  Шапка.ДатаДокумента);
		
		ФамилияИмяОтчествоДоверенного = СокрЛП(ДанныеОФизЛице.Фамилия) + " " + СокрЛП(ДанныеОФизЛице.Имя) + " " + СокрЛП(ДанныеОФизЛице.Отчество);
		Должность                     = СокрЛП(ДанныеОФизЛице.Должность);
		
		Если НазваниеМакета = "М2" тогда
			ПараметрыМакета = Новый Структура("НомерДокумента, ФИОДоверенного");
			ПараметрыМакета.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерДокумента, Истина, Ложь);
			ПараметрыМакета.ФИОДоверенного = "" + ?(ПустаяСтрока(Должность), "", Должность + ", " + Символы.ПС) + (ФамилияИмяОтчествоДоверенного);
			
			ОбластьМакета = Макет.ПолучитьОбласть("Отрез");
			ОбластьМакета.Параметры.Заполнить(Шапка);
			ОбластьМакета.Параметры.Заполнить(ПараметрыМакета);
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			НазваниеФормы = "Типовая межотраслевая форма № М-2";
		Иначе
			НазваниеФормы = "Типовая межотраслевая форма № М-2а";
		КонецЕсли;

		Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Организация, Шапка.ДатаДокумента);
		Руководитель = Руководители.РуководительПредставление;
		Бухгалтер    = Руководители.ГлавныйБухгалтерПредставление;

		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента, Шапка.БанковскийСчет);

		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		ПараметрыМакета = Новый Структура("ОКУД");
		
		Если НазваниеМакета = "М2" тогда
			ПараметрыМакета.ОКУД = "0315001";
		Иначе
			ПараметрыМакета.ОКУД = "0315002";
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(ПараметрыМакета);
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		ПараметрыМакета = Новый Структура;
		
		ПараметрыМакета.Вставить("НомерДокумента", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерДокумента, Истина, Ложь));
		ПараметрыМакета.Вставить("НазваниеФормы",  НазваниеФормы);
		
		ПараметрыМакета.Вставить("ОрганизацияПредставление", ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,ИНН,КПП,ЮридическийАдрес,Телефоны,"));
			
		ПараметрыМакета.Вставить("РеквизитыСчета", ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			СведенияОбОрганизации, "НомерСчета,Банк,БИК,КоррСчет,"));
			
		ПараметрыМакета.Вставить("РеквизитыПотребителя", ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,ИНН,КПП,ЮридическийАдрес,Телефоны,"));
			
		ПараметрыМакета.Вставить("РеквизитыПлательщика", ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,ИНН,КПП,ЮридическийАдрес,Телефоны,"));
			
		ПараметрыМакета.Вставить("ОрганизацияКодПоОКПО",          СведенияОбОрганизации.КодПоОКПО);
		ПараметрыМакета.Вставить("ПаспортСерия",                  ДанныеОФизЛице.Серия);
		ПараметрыМакета.Вставить("ПаспортНомер",                  ДанныеОФизЛице.Номер);
		ПараметрыМакета.Вставить("ПаспортВыдан",                  ДанныеОФизЛице.КемВыдан);
		ПараметрыМакета.Вставить("ПаспортДатаВыдачи",             ДанныеОФизЛице.ДатаВыдачи);
		ПараметрыМакета.Вставить("ФамилияИмяОтчествоДоверенного", ФамилияИмяОтчествоДоверенного);
		ПараметрыМакета.Вставить("ДолжностьДоверенного",          Должность);
		
		ОбластьМакета.Параметры.Заполнить(ПараметрыМакета);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
		
		ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакетаПодвал.Параметры.Заполнить(Шапка);
		
		ПараметрыМакета = Новый Структура;

		Если ЗначениеЗаполнено(Руководитель) Тогда
			ПараметрыМакета.Вставить("ФИОРуководителя", Руководитель);
			ПараметрыМакета.Вставить("Руководитель",    Руководитель);
		КонецЕсли;

		Если ЗначениеЗаполнено(Бухгалтер) Тогда
			ПараметрыМакета.Вставить("ФИОГлавногоБухгалтера", Бухгалтер);
			ПараметрыМакета.Вставить("ГлавныйБухгалтер",      Бухгалтер);
		КонецЕсли;
		
		ОбластьМакетаПодвал.Параметры.Заполнить(ПараметрыМакета);
		
		
		Если Макет.Области.Найти("ПодвалСтраницы") <> Неопределено Тогда
			ОбластьПодвалСтраницы = Макет.ПолучитьОбласть("ПодвалСтраницы");
		Иначе
			ОбластьПодвалСтраницы = Неопределено;
		КонецЕсли;

		ОбластьМакетаСтрока = Макет.ПолучитьОбласть("Строка");
		
		ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
		КоличествоСтрок = ВыборкаСтрокТовары.Количество();
		
		ПараметрыМакета = Новый Структура("КоличествоПрописью");
		
		Пока ВыборкаСтрокТовары.Следующий() Цикл

			ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрокТовары);
			
			Если ВыборкаСтрокТовары.Количество = 0 Тогда
				ПараметрыМакета.КоличествоПрописью = "";
			Иначе
				ПараметрыМакета.КоличествоПрописью = СтрШаблон(
					"%1 (%2)", 
					Строка(ВыборкаСтрокТовары.Количество),
					ОбщегоНазначенияБПВызовСервера.КоличествоПрописью(ВыборкаСтрокТовары.Количество));
				КонецЕсли; 
				
			ОбластьМакетаСтрока.Параметры.Заполнить(ПараметрыМакета);
			МассивСтрок = Новый Массив;
			МассивСтрок.Добавить(ОбластьМакетаСтрока);
			Если ВыборкаСтрокТовары.Номер = КоличествоСтрок Тогда
				МассивСтрок.Добавить(ОбластьМакетаПодвал);
			ИначеЕсли ОбластьПодвалСтраницы <> Неопределено Тогда
				МассивСтрок.Добавить(ОбластьПодвалСтраницы);
			КонецЕсли;
			
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, МассивСтрок) Тогда
				
				Если ОбластьПодвалСтраницы <> Неопределено Тогда
					ТабличныйДокумент.Вывести(ОбластьПодвалСтраницы);
				КонецЕсли;
				
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);

		КонецЦикла;

		ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
		УправлениеПечатьюБП.ДоработатьФаксимильнуюПодписьИПечать(ТабличныйДокумент, ОбъектыПечати,
			Шапка.Организация, Шапка.Ссылка);
		
	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции // ПечатьДоверенности()

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Проверяем, нужно ли для макета М2 формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М2") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"М2", "Доверенность (М-2)", ПечатьДоверенности(МассивОбъектов, ОбъектыПечати, "М2", ПараметрыПечати) ,, "ОбщийМакет.ПФ_MXL_М2");
	КонецЕсли;
	
	// Проверяем, нужно ли для макета М2а формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М2а") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"М2а", "Доверенность (М-2а)", ПечатьДоверенности(МассивОбъектов, ОбъектыПечати, "М2а", ПараметрыПечати), , "ОбщийМакет.ПФ_MXL_М2");
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	
	
КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Контрагент");
	
	Возврат Результат;
	
КонецФункции

#КонецЕсли