#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область Свойства

// Получает описание предопределенных наборов свойств.
//
// Параметры:
//  Наборы - ДеревоЗначений - с колонками:
//     * Имя           - Строка - Имя набора свойств. Формируется из полного имени объекта
//                       метаданных заменой символа "." на "_".
//                       Например, "Документ_ЗаказПокупателя".
//     * Идентификатор - УникальныйИдентификатор - Идентификатор ссылки предопределенного элемента.
//     * Используется  - Неопределено, Булево - Признак того, что набор свойств используется.
//                       Например, можно использовать для скрытия набора по функциональным опциям.
//                       Значение по умолчанию - Неопределено, соответствует значению Истина.
//     * ЭтоГруппа     - Булево - Истина, если набор свойств является группой.
//
Процедура ПриПолученииПредопределенныхНаборовСвойств(Наборы) Экспорт
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_ОперацияСПатентом";
	Набор.Идентификатор = Новый УникальныйИдентификатор("1e2886e6-53a1-46b3-bd06-ee2ac83f24d5");
	Набор.Используется  = Истина;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ЗначениеЗаполнено(Данные.ДатаНачала)
		Или Не ЗначениеЗаполнено(Данные.ДатаОкончания) Тогда
		Представление = СтрШаблон(НСтр("ru = 'Патент №%1'"), Данные.НомерПатента);
	Иначе
		Представление = СтрШаблон(НСтр("ru = 'Патент №%1 на %2'"),
			Данные.НомерПатента,
			ПредставлениеПериода(НачалоДня(Данные.ДатаНачала), КонецДня(Данные.ДатаОкончания), "ФП = Истина"));
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Очистить();
	Поля.Добавить("НомерПатента");
	Поля.Добавить("ДатаНачала");
	Поля.Добавить("ДатаОкончания");
	Поля.Добавить("Ссылка");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПодготовкаПараметровПроведенияДокумента

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	ПодготовитьПараметрыРеквизитыДокумента(Запрос, ПараметрыПроведения);
	
	Реквизиты = ПараметрыПроведения.Реквизиты[0];
	Если Не УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Процедура ПодготовитьПараметрыРеквизитыДокумента(Запрос, ПараметрыПроведения)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Патент КАК Патент,
	|	Реквизиты.КБК КАК КБК,
	|	Реквизиты.СуммаПервогоПлатежа + Реквизиты.СуммаВторогоПлатежа КАК СуммаНалога,
	|	Реквизиты.ДатаПервогоПлатежа КАК ДатаПервогоПлатежа,
	|	Реквизиты.СуммаПервогоПлатежа КАК СуммаПервогоПлатежа,
	|	Реквизиты.ДатаВторогоПлатежа КАК ДатаВторогоПлатежа,
	|	Реквизиты.СуммаВторогоПлатежа КАК СуммаВторогоПлатежа
	|ИЗ
	|	Документ.ОперацияСПатентом КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	ТаблицаРеквизиты = Запрос.Выполнить().Выгрузить();
	
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
КонецПроцедуры

#КонецОбласти

#Область ОплатаПатентаИзСпискаЗадач

// Возвращает реквизиты платежа налога по патенту
//
// Параметры:
//  ДокументПатент - ДокументСсылка.ОперацияСПатентом - Патент, для которого необходимо получить реквизиты платежа.
// 
// Возвращаемое значение:
//   Структура - Реквизиты налогового платежа. См. НовыйРеквизитыНалоговогоПлатежа
//
Функция РеквизитыНалоговогоПлатежа(ДокументПатент) Экспорт
	
	Реквизиты = НовыйРеквизитыНалоговогоПлатежа();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОперацияСПатентом.Организация КАК Организация,
	|	ОперацияСПатентом.ПостановкаНаУчетВНалоговомОргане КАК ПостановкаНаУчетВНалоговомОргане,
	|	ОперацияСПатентом.НалоговыйОрган КАК РегистрацияВНалоговомОргане,
	|	ОперацияСПатентом.КодПоОКТМО КАК ОКАТО,
	|	ОперацияСПатентом.КБК КАК КБК,
	|	ОперацияСПатентом.НомерПатента КАК НомерПатента,
	|	ОперацияСПатентом.ДатаВыдачи КАК ДатаВыдачи,
	|	ОперацияСПатентом.ДатаНачала КАК ДатаНачала,
	|	ОперацияСПатентом.ДатаОкончания КАК ДатаОкончания
	|ИЗ
	|	Документ.ОперацияСПатентом КАК ОперацияСПатентом
	|ГДЕ
	|	ОперацияСПатентом.Ссылка = &ДокументПатент";
	
	Запрос.УстановитьПараметр("ДокументПатент", ДокументПатент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Реквизиты, Выборка);
		
		Если Выборка.ПостановкаНаУчетВНалоговомОргане =
			Перечисления.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане Тогда
			
			Реквизиты.РегистрацияВНалоговомОргане = Выборка.РегистрацияВНалоговомОргане;
			Реквизиты.ОКАТО = Выборка.ОКАТО;
			Реквизиты.КодНалоговогоОргана = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				Выборка.РегистрацияВНалоговомОргане, "Код");
			
		Иначе
			НалоговыйОрганОрганизации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				Выборка.Организация, "РегистрацияВНалоговомОргане");
			
			РеквизитыНалоговогоОргана = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
				НалоговыйОрганОрганизации, "КодПоОКТМО, Код");
			
			Реквизиты.РегистрацияВНалоговомОргане = НалоговыйОрганОрганизации;
			Реквизиты.ОКАТО = РеквизитыНалоговогоОргана.КодПоОКТМО;
			Реквизиты.КодНалоговогоОргана = РеквизитыНалоговогоОргана.Код;
		КонецЕсли;
		
		Реквизиты.Налог = Справочники.ВидыНалоговИПлатежейВБюджет.НалогПоКБК(Выборка.КБК);
		Реквизиты.ВидНалога = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Реквизиты.Налог, "ВидНалога");
		
		ШаблонОписания = НСтр("ru = '. Оплата стоимости патента N %1 от %2'");
		Описание = СтрШаблон(ШаблонОписания, Выборка.НомерПатента, Формат(Выборка.ДатаНачала, "ДЛФ=D"));
		Реквизиты.Описание = Описание;
	КонецЕсли;
	
	Возврат Реквизиты;
	
КонецФункции

// Формирует список действующих правил уплаты налога по патентам организации в периоде
//
// Параметры:
//  Организация - СправочникСсылка.Организации - Организация, по которой необходимо сформировать правила.
//  Период      - Дата - Дата, на которую требуется сформировать правила.
// 
// Возвращаемое значение:
//   ТаблицаЗначений - Список правил уплаты налога. См. НовыйТаблицаПравил
//
Функция ПравилаУплатыПатентов(Организация, Период) Экспорт
	
	ТаблицаПравил = НовыйТаблицаПравил();
	
	ПорядокПлатежей = ПорядокПлатежей();
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация",            Организация);
	Запрос.УстановитьПараметр("Период",                 Период);
	Запрос.УстановитьПараметр("Действие",               Перечисления.ВидыДействийКалендаряБухгалтера.УплатаНалога);
	Запрос.УстановитьПараметр("НачалоПростогоУчетаЕНС", ЕдиныйНалоговыйСчет.НачалоПростогоУчета());
	
	// При закрытии ИП полную стоимость по патенту необходимо оплатить в срок не позднее 20 календарных дней после закрытия ИП
	Запрос.УстановитьПараметр("СрокУплатыПриЗакрытии", УчетПСН.СрокУплатыПатентаПриЗакрытииИП());
	Запрос.УстановитьПараметр("ДатаЗакрытия", ОбщегоНазначенияБПВызовСервераПовтИсп.ДатаЗакрытияОрганизации(Организация));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОперацияСПатентом.Патент КАК Патент,
	|	ОперацияСПатентом.ДатаПервогоПлатежа КАК ДатаПервогоПлатежа,
	|	ОперацияСПатентом.ДатаВторогоПлатежа КАК ДатаВторогоПлатежа,
	|	ОперацияСПатентом.ДатаНачала КАК ДатаНачала,
	|	ОперацияСПатентом.ДатаОкончания КАК ДатаОкончания,
	|	ОперацияСПатентом.НомерПатента КАК НомерПатента,
	|	&Действие КАК Действие
	|ПОМЕСТИТЬ Патенты
	|ИЗ
	|	Документ.ОперацияСПатентом КАК ОперацияСПатентом
	|ГДЕ
	|	ОперацияСПатентом.Организация = &Организация
	|	И ОперацияСПатентом.Проведен
	|	И ОперацияСПатентом.СуммаПервогоПлатежа > 0
	|	И ОперацияСПатентом.ДатаПервогоПлатежа > ОперацияСПатентом.ДатаНачала
	|	И ОперацияСПатентом.ДатаНачала >= НАЧАЛОПЕРИОДА(&Период, ГОД)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Патенты.Патент КАК Правило,
	|	Патенты.ДатаПервогоПлатежа КАК Срок,
	|	Патенты.ДатаНачала КАК НачалоВыполнения,
	|	ВЫБОР
	|		КОГДА Патенты.ДатаНачала < &НачалоПростогоУчетаЕНС
	|			ТОГДА НАЧАЛОПЕРИОДА(Патенты.ДатаНачала, ГОД)
	|		ИНАЧЕ Патенты.ДатаНачала
	|	КОНЕЦ КАК ПериодСобытия,
	|	0 КАК ПорядокПлатежа,
	|	Патенты.Действие КАК Действие,
	|	Патенты.ДатаНачала КАК ДатаНачала,
	|	Патенты.ДатаОкончания КАК ДатаОкончания,
	|	Патенты.НомерПатента КАК НомерПатента
	|ИЗ
	|	Патенты КАК Патенты
	|ГДЕ
	|	Патенты.ДатаПервогоПлатежа >= Патенты.ДатаОкончания
	|	И (Патенты.ДатаПервогоПлатежа < &ДатаЗакрытия
	|			ИЛИ &ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Патенты.Патент,
	|	Патенты.ДатаПервогоПлатежа,
	|	Патенты.ДатаНачала,
	|	ВЫБОР
	|		КОГДА Патенты.ДатаНачала < &НачалоПростогоУчетаЕНС
	|			ТОГДА НАЧАЛОПЕРИОДА(Патенты.ДатаНачала, ГОД)
	|		ИНАЧЕ Патенты.ДатаНачала
	|	КОНЕЦ,
	|	1,
	|	Патенты.Действие,
	|	Патенты.ДатаНачала,
	|	Патенты.ДатаОкончания,
	|	Патенты.НомерПатента
	|ИЗ
	|	Патенты КАК Патенты
	|ГДЕ
	|	Патенты.ДатаВторогоПлатежа > Патенты.ДатаНачала
	|	И (Патенты.ДатаВторогоПлатежа < &ДатаЗакрытия
	|			ИЛИ &ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Патенты.Патент,
	|	Патенты.ДатаВторогоПлатежа,
	|	Патенты.ДатаНачала,
	|	ВЫБОР
	|		КОГДА Патенты.ДатаНачала < &НачалоПростогоУчетаЕНС
	|			ТОГДА КОНЕЦПЕРИОДА(Патенты.ДатаНачала, ГОД)
	|		ИНАЧЕ Патенты.ДатаОкончания
	|	КОНЕЦ,
	|	2,
	|	Патенты.Действие,
	|	Патенты.ДатаНачала,
	|	Патенты.ДатаОкончания,
	|	Патенты.НомерПатента
	|ИЗ
	|	Патенты КАК Патенты
	|ГДЕ
	|	Патенты.ДатаВторогоПлатежа > Патенты.ДатаНачала
	|	И (Патенты.ДатаВторогоПлатежа < &ДатаЗакрытия
	|			ИЛИ &ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Патенты.Патент,
	|	ДОБАВИТЬКДАТЕ(&ДатаЗакрытия, ДЕНЬ, &СрокУплатыПриЗакрытии),
	|	&ДатаЗакрытия,
	|	&ДатаЗакрытия,
	|	0,
	|	Патенты.Действие,
	|	Патенты.ДатаНачала,
	|	Патенты.ДатаОкончания,
	|	Патенты.НомерПатента
	|ИЗ
	|	Патенты КАК Патенты
	|ГДЕ
	|	Патенты.ДатаПервогоПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|	И Патенты.ДатаПервогоПлатежа >= &ДатаЗакрытия
	|	И &ДатаЗакрытия <> ДАТАВРЕМЯ(1, 1, 1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Патенты.Патент,
	|	ДОБАВИТЬКДАТЕ(&ДатаЗакрытия, ДЕНЬ, &СрокУплатыПриЗакрытии),
	|	&ДатаЗакрытия,
	|	&ДатаЗакрытия,
	|	0,
	|	Патенты.Действие,
	|	Патенты.ДатаНачала,
	|	Патенты.ДатаОкончания,
	|	Патенты.НомерПатента
	|ИЗ
	|	Патенты КАК Патенты
	|ГДЕ
	|	Патенты.ДатаВторогоПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|	И Патенты.ДатаВторогоПлатежа >= &ДатаЗакрытия
	|	И &ДатаЗакрытия <> ДАТАВРЕМЯ(1, 1, 1)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяЗапись = ТаблицаПравил.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
		НоваяЗапись.Наименование = СтрШаблон(
			НСтр("ru = 'Патент %1 на %2, уплата %3 стоимости'"),
				Выборка.Правило,
				ПредставлениеПериода(НачалоДня(Выборка.ДатаНачала), КонецДня(Выборка.ДатаОкончания), "Л=ru_RU;ФП=Истина"),
				ПорядокПлатежей[Выборка.ПорядокПлатежа]);
		
	КонецЦикла;
	
	Возврат ТаблицаПравил;
	
КонецФункции

Функция НовыйРеквизитыНалоговогоПлатежа()
	
	Результат = Новый Структура;
	
	Результат.Вставить("КБК",                         "");
	Результат.Вставить("Налог",                       Справочники.ВидыНалоговИПлатежейВБюджет.ПустаяСсылка());
	Результат.Вставить("ВидНалога",                   Перечисления.ВидыНалогов.ПустаяСсылка());
	Результат.Вставить("РегистрацияВНалоговомОргане", Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	Результат.Вставить("КодНалоговогоОргана",         "");
	Результат.Вставить("ОКАТО",                       "");
	Результат.Вставить("Описание",                    "");
	
	Возврат Результат;
	
КонецФункции

Функция НовыйТаблицаПравил()
	
	ТаблицаПравил = Новый ТаблицаЗначений;
	ТаблицаПравил.Колонки.Добавить("Правило",          Новый ОписаниеТипов("СправочникСсылка.Патенты"));
	ТаблицаПравил.Колонки.Добавить("Организация",      Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаПравил.Колонки.Добавить("Срок",             ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	ТаблицаПравил.Колонки.Добавить("НачалоВыполнения", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	ТаблицаПравил.Колонки.Добавить("ПериодСобытия",    ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	ТаблицаПравил.Колонки.Добавить("Наименование",     Новый ОписаниеТипов("Строка"));
	ТаблицаПравил.Колонки.Добавить("Действие",         Новый ОписаниеТипов("ПеречислениеСсылка.ВидыДействийКалендаряБухгалтера"));
	
	Возврат ТаблицаПравил;
	
КонецФункции

Функция ПорядокПлатежей()
	
	ПорядокПлатежей = Новый Массив;
	ПорядокПлатежей.Добавить("");
	ПорядокПлатежей.Добавить("1/3");
	ПорядокПлатежей.Добавить("2/3");
	
	Возврат ПорядокПлатежей;
	
КонецФункции

#КонецОбласти

#Область ОплатаПатентаИзДокумента

// Возвращает данные патента для формирования оплаты
//
// Параметры:
//  ДокументПатент - ДокументСсылка.ОперацияСПатентом - Патент, для которого необходимо получить данные.
// 
// Возвращаемое значение:
//   Структура - Сведения для оплаты патента. См. НовыйОписаниеПатента
//
Функция ДанныеПатентаДляОплаты(ДокументПатент) Экспорт
	
	ОписаниеПатента = НовыйОписаниеПатента();
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ДокументПатент", ДокументПатент);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОперацияСПатентом.Патент КАК Патент,
	|	ОперацияСПатентом.Ссылка КАК ДокументПатент,
	|	ОперацияСПатентом.Организация КАК Организация,
	|	ОперацияСПатентом.ДатаНачала КАК ДатаНачала,
	|	ОперацияСПатентом.ДатаОкончания КАК ДатаОкончания,
	|	ОперацияСПатентом.СуммаПервогоПлатежа КАК СуммаПервогоПлатежа,
	|	ОперацияСПатентом.ДатаПервогоПлатежа КАК ДатаПервогоПлатежа,
	|	ОперацияСПатентом.СуммаВторогоПлатежа КАК СуммаВторогоПлатежа,
	|	ОперацияСПатентом.ДатаВторогоПлатежа КАК ДатаВторогоПлатежа,
	|	ОперацияСПатентом.СуммаПервогоПлатежа + ОперацияСПатентом.СуммаВторогоПлатежа КАК СуммаПлатежаПолного
	|ПОМЕСТИТЬ ДанныеПатента
	|ИЗ
	|	Документ.ОперацияСПатентом КАК ОперацияСПатентом
	|ГДЕ
	|	ОперацияСПатентом.Ссылка = &ДокументПатент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеПатента.Патент КАК Патент,
	|	ДанныеПатента.ДокументПатент КАК ДокументПатент,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗадачиБухгалтера.ПериодСобытия = ДанныеПатента.ДатаНачала
	|					И ЕСТЬNULL(ЗадачиБухгалтера.Статус, """") = ""Оплачено""
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ПервыйПлатежВыполнен,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗадачиБухгалтера.ПериодСобытия = ДанныеПатента.ДатаОкончания
	|					И ЕСТЬNULL(ЗадачиБухгалтера.Статус, """") = ""Оплачено""
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ВторойПлатежВыполнен
	|ПОМЕСТИТЬ ТаблицаОплаты
	|ИЗ
	|	ДанныеПатента КАК ДанныеПатента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗадачиБухгалтера КАК ЗадачиБухгалтера
	|		ПО ДанныеПатента.Организация = ЗадачиБухгалтера.Организация
	|			И ДанныеПатента.Патент = ЗадачиБухгалтера.Правило
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПатента.Патент,
	|	ДанныеПатента.ДокументПатент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеПатента.Патент КАК Патент,
	|	ДанныеПатента.ДокументПатент КАК ДокументПатент,
	|	ДанныеПатента.Организация КАК Организация,
	|	ДанныеПатента.ДатаНачала КАК ДатаНачала,
	|	ДанныеПатента.ДатаОкончания КАК ДатаОкончания,
	|	ДанныеПатента.СуммаПервогоПлатежа КАК СуммаПервогоПлатежа,
	|	ДанныеПатента.ДатаПервогоПлатежа КАК ДатаПервогоПлатежа,
	|	ДанныеПатента.СуммаВторогоПлатежа КАК СуммаВторогоПлатежа,
	|	ДанныеПатента.ДатаВторогоПлатежа КАК ДатаВторогоПлатежа,
	|	ДанныеПатента.СуммаПлатежаПолного КАК СуммаПлатежаПолного,
	|	ЕСТЬNULL(ТаблицаОплаты.ПервыйПлатежВыполнен, ЛОЖЬ) КАК ПервыйПлатежВыполнен,
	|	ЕСТЬNULL(ТаблицаОплаты.ВторойПлатежВыполнен, ЛОЖЬ) КАК ВторойПлатежВыполнен
	|ИЗ
	|	ДанныеПатента КАК ДанныеПатента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОплаты КАК ТаблицаОплаты
	|		ПО ДанныеПатента.Патент = ТаблицаОплаты.Патент
	|			И ДанныеПатента.ДокументПатент = ТаблицаОплаты.ДокументПатент";
	
	Результат = Запрос.Выполнить().Выбрать();
	Результат.Следующий();
	
	ЗаполнитьЗначенияСвойств(ОписаниеПатента, Результат);
	
	НаименованиеПатента = СтрШаблон(НСтр("ru = 'Патент %1 на %2'"),
		Результат.Патент,
		ПредставлениеПериода(НачалоДня(Результат.ДатаНачала), КонецДня(Результат.ДатаОкончания), "ФП = Истина"));
	
	ОписаниеПатента.Наименование = НаименованиеПатента;
	
	ОписаниеПатента.НомерПлатежа = 1;
	
	Если ЗначениеЗаполнено(Результат.ДатаВторогоПлатежа)
		И (Результат.ПервыйПлатежВыполнен
			Или Результат.ВторойПлатежВыполнен
			Или Результат.ДатаПервогоПлатежа < ТекущаяДатаСеанса()) Тогда
		ОписаниеПатента.НомерПлатежа = 2;
	КонецЕсли;
	
	ОписаниеПатента.ОплаченПолностью = Ложь;
	Если ЗначениеЗаполнено(Результат.ДатаВторогоПлатежа) Тогда
		Если Результат.ПервыйПлатежВыполнен И Результат.ВторойПлатежВыполнен Тогда
			ОписаниеПатента.ОплаченПолностью = Истина;
		КонецЕсли;
	ИначеЕсли Результат.ПервыйПлатежВыполнен Тогда
		ОписаниеПатента.ОплаченПолностью = Истина;
	КонецЕсли;
	
	Возврат ОписаниеПатента;
	
КонецФункции

// Возвращает описание действия по нажатию на команду оплаты патента
//
// Параметры:
//  ДанныеПатента - Структура - см. НовыйОписаниеПатента
// 
// Возвращаемое значение:
//   Структура - см. ВыполнениеЗадачБухгалтера.ОписаниеДействияПомощникОплатыПатента
//
Функция ОписаниеОплатыПатента(ДанныеПатента) Экспорт
	
	ЭтоВторойПлатеж = ДанныеПатента.НомерПлатежа = 2;
	
	Если ЭтоВторойПлатеж Тогда
		ДатаОплаты    = ДанныеПатента.ДатаВторогоПлатежа;
		ПериодСобытия = НачалоДня(ДанныеПатента.ДатаОкончания);
	Иначе
		ДатаОплаты    = ДанныеПатента.ДатаПервогоПлатежа;
		ПериодСобытия = НачалоДня(ДанныеПатента.ДатаНачала);
	КонецЕсли;
	
	ПараметрыЗадачи = ВыполнениеЗадачБухгалтераКлиентСервер.НовыеПараметрыКомандЗадачи();
	
	ПараметрыЗадачи.Организация   = ДанныеПатента.Организация;
	ПараметрыЗадачи.ПериодСобытия = ПериодСобытия;
	ПараметрыЗадачи.Правило       = ДанныеПатента.Патент;
	ПараметрыЗадачи.Срок          = ДатаОплаты;
	
	ПараметрыЗадачи.Вставить("ДокументПатент", ДанныеПатента.ДокументПатент);
	
	Возврат ВыполнениеЗадачБухгалтера.ОписаниеДействияПомощникОплатыПатента(ПараметрыЗадачи);
	
КонецФункции

Функция НовыйОписаниеПатента()
	
	ОписаниеПатента = Новый Структура;
	
	ОписаниеПатента.Вставить("Патент", Справочники.Патенты.ПустаяСсылка());
	ОписаниеПатента.Вставить("ДокументПатент", Документы.ОперацияСПатентом.ПустаяСсылка());
	ОписаниеПатента.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	ОписаниеПатента.Вставить("Наименование", "");
	ОписаниеПатента.Вставить("ДатаНачала", '00010101');
	ОписаниеПатента.Вставить("ДатаОкончания", '00010101');
	ОписаниеПатента.Вставить("ДатаПервогоПлатежа", '00010101');
	ОписаниеПатента.Вставить("ДатаВторогоПлатежа", '00010101');
	ОписаниеПатента.Вставить("ОплаченПолностью", Ложь);
	ОписаниеПатента.Вставить("СуммаПлатежаПолного", 0);
	ОписаниеПатента.Вставить("НомерПлатежа", 0);
	
	Возврат ОписаниеПатента;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиОбновления

// Создает документы патенты по данным справочника патентов.
// Также записывает сведения по патентам в регистр сведений,
// т.к. созданные докумены патенты не проводим в учете, но сведения по патентам необходимы.
//
Процедура СоздатьДокументыПолученияПатентаПоДаннымСправочника() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОперацияСПатентом.Ссылка КАК Документ,
	|	Патенты.Владелец КАК Организация,
	|	Патенты.Ссылка КАК Патент,
	|	Патенты.УдалитьДатаНачала КАК ДатаНачала,
	|	Патенты.УдалитьДатаОкончания КАК ДатаОкончания,
	|	Патенты.УдалитьПотенциальноВозможныйГодовойДоход КАК ПотенциальноВозможныйГодовойДоход,
	|	Патенты.УдалитьСуммаПервогоПлатежа КАК СуммаПервогоПлатежа,
	|	Патенты.УдалитьДатаПервогоПлатежа КАК ДатаПервогоПлатежа,
	|	Патенты.УдалитьСуммаВторогоПлатежа КАК СуммаВторогоПлатежа,
	|	Патенты.УдалитьДатаВторогоПлатежа КАК ДатаВторогоПлатежа,
	|	Патенты.УдалитьНалоговыйОрган КАК НалоговыйОрган,
	|	Патенты.УдалитьПостановкаНаУчетВНалоговомОргане КАК ПостановкаНаУчетВНалоговомОргане,
	|	Патенты.УдалитьКодПоОКТМО КАК КодПоОКТМО,
	|	Патенты.УдалитьНомерПатента КАК НомерПатента,
	|	Патенты.УдалитьДатаВыдачи КАК ДатаВыдачи,
	|	Патенты.УдалитьСуммаОсвобожденияОтНалога КАК СуммаОсвобожденияОтНалога,
	|	Патенты.УдалитьКБК КАК КБК
	|ИЗ
	|	Справочник.Патенты КАК Патенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОперацияСПатентом КАК ОперацияСПатентом
	|		ПО Патенты.Ссылка = ОперацияСПатентом.Патент
	|ГДЕ
	|	НЕ Патенты.ПометкаУдаления
	|	И ОперацияСПатентом.Ссылка ЕСТЬ NULL";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(Выборка.ДатаНачала)
			Или Не ЗначениеЗаполнено(Выборка.ДатаОкончания) Тогда
			Продолжить;
		КонецЕсли;
		
		// Расчитаем налоговую ставку
		ПотенциальныйДоход = УчетПСНКлиентСервер.РассчитатьПотенциальноВозможныйДоход(
			Выборка.ПотенциальноВозможныйГодовойДоход, Выборка.ДатаНачала, Выборка.ДатаОкончания);
		
		Если ПотенциальныйДоход = 0 Тогда
			НалоговаяСтавка = 0;
		Иначе
			НалоговаяСтавка = Окр((Выборка.СуммаПервогоПлатежа + Выборка.СуммаВторогоПлатежа) / ПотенциальныйДоход * 100, 0);
		КонецЕсли;
		
		ДокументОбъект = СоздатьДокумент();
		
		ЗаполнениеДокументов.Заполнить(ДокументОбъект);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Выборка);
		
		Если Выборка.ДатаНачала >= ЕдиныйНалоговыйСчет.НачалоПростогоУчета() Тогда
			ДокументОбъект.ДатаПервогоПлатежа = УчетПСН.УточнитьСрокОплатыПатента(Выборка.ДатаПервогоПлатежа);
			ДокументОбъект.ДатаВторогоПлатежа = УчетПСН.УточнитьСрокОплатыПатента(Выборка.ДатаВторогоПлатежа);
		КонецЕсли;
		
		ДокументОбъект.Дата            = Выборка.ДатаНачала;
		ДокументОбъект.НалоговаяСтавка = НалоговаяСтавка;
		
		Попытка
			ДокументОбъект.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
			ДокументОбъект.ДополнительныеСвойства.Вставить("НеИзменятьРегистрациюВПоследовательности", Истина);
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект, , , РежимЗаписиДокумента.Проведение);
			
			ОбменДаннымиБП.ПеренестиСсылкиВПубличныхИдентификаторах(Выборка.Патент, ДокументОбъект.Ссылка);
		Исключение
			ИнформацияОшибки = ИнформацияОбОшибке();
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Патент'", ОбщегоНазначения.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				ДокументОбъект.Метаданные(),
				ДокументОбъект.Ссылка,
				ПодробноеПредставлениеОшибки(ИнформацияОшибки));
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли