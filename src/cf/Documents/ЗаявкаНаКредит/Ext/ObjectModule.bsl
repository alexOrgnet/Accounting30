#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	Дата = НачалоДня(ТекущаяДатаСеанса()); // Заявку заполняем всегда по состоянию "на сегодня".
	
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения); // Общие для документов реквизиты (организация и т.п.)
	
	// В заявке можно выбирать головную организацию.
	Организация = ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(Организация);
	
	Документы.ЗаявкаНаКредит.ЗаполнитьПоУмолчанию(ЭтотОбъект);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	Документы.ЗаявкаНаКредит.ЗаполнитьПоУмолчанию(ЭтотОбъект);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПериодРегистрации = НачалоМесяца(ПериодРегистрации);
	
	// Синхронизируем связанные данные.
	Если НЕ ЗначениеЗаполнено(КонтактноеЛицо) Тогда
		// Очистим данные контактного лица, т.к их надо получать от руководителя.
		ТелефонКонтактногоЛица   = "";
		АдресЭПКонтактногоЛица   = "";
		ДолжностьКонтактногоЛица = Неопределено;
	КонецЕсли;

	// Проверим, если руководитель является единственным учредителем,
	// то не будем его записывать в табличную часть совсем,
	// чтобы не возникало неоднозначности, где его редактировать.
	// Если данные об учредителях не требуются банкам, то тоже не будем сохранять их в заявке.
	Если НЕ ТребуютсяДанныеУчредителей
		ИЛИ СоставУчредителей = Перечисления.СоставУчредителейЮридическогоЛица.РуководительЕдинственныйУчредитель Тогда
		Учредители.Очистить();
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		ДополнительныеСвойства.Вставить("СинхронизироватьПрисоединенныеФайлы", Ложь);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	РегистрыСведений.СостояниеЗаявокНаКредит.УстановитьСостояниеНеотправленнойЗаявки(Ссылка);
	
	Если ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеСвойства, "СинхронизироватьПрисоединенныеФайлы", Истина) Тогда
		// Если присоед. файлы из справочника "ЗаявкаНаКредитПрисоединенныеФайлы" выбраны в строках в текущем документе,
		// то у них не должно быть пометки удаления, если есть - то ее снять. И наоборот - поставить для удаленных.

		ТипПрисоединенногоФайлаПакета = Тип("СправочникСсылка.ЗаявкаНаКредитПрисоединенныеФайлы");
		СписокФайлов = Новый Массив;
		Для Каждого ДопФайл Из ДополнительныеФайлы Цикл

			Если ЗначениеЗаполнено(ДопФайл.Значение)
			   И ТипЗнч(ДопФайл.Значение) = ТипПрисоединенногоФайлаПакета Тогда
				СписокФайлов.Добавить(ДопФайл.Значение);
			КонецЕсли;
			
		КонецЦикла;
		Для Каждого ДопФайл Из Учредители Цикл

			Если ЗначениеЗаполнено(ДопФайл.ПаспортУчредителя)
			   И ТипЗнч(ДопФайл.ПаспортУчредителя) = ТипПрисоединенногоФайлаПакета Тогда
				СписокФайлов.Добавить(ДопФайл.ПаспортУчредителя);
			КонецЕсли;
			
		КонецЦикла;
		Если СписокФайлов.Количество() <> 0 Тогда
			
			СвойстваФайлов = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(СписокФайлов, "ПометкаУдаления", Истина);
		
			ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияПроцедуры();
			ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Синхронизация присоединенных файлов'");
			ПараметрыВыполнения.ОжидатьЗавершение           = 0;
			ПараметрыВыполнения.КлючФоновогоЗадания         = Строка(Ссылка.УникальныйИдентификатор());
			ПараметрыВыполнения.ЗапуститьВФоне              = Истина;

			ДлительныеОперации.ВыполнитьПроцедуру(ПараметрыВыполнения,
				"УниверсальныйОбменСБанкамиФормы.СинхронизироватьПрисоединенныеФайлы", Ссылка, СвойстваФайлов,
				СервисОбменаСБанками);
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли