#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 6, 0);
	
КонецФункции

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента();

	Результат = Запрос.Выполнить();
	Реквизиты = ОбщегоНазначенияБПВызовСервера.ПолучитьСтруктуруИзРезультатаЗапроса(Результат);

	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;

	НомераТаблиц = Новый Структура;

	Запрос.Текст =
		ТекстЗапросаТаблицаОС(НомераТаблиц)
		+ ТекстЗапросаОбесценениеОС(НомераТаблиц)
		+ ТекстЗапросаСобытияОС(НомераТаблиц)
		+ ТекстЗапросаПроверкиПоОС(НомераТаблиц);

	Результат = Запрос.ВыполнитьПакет();

	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;

	Возврат ПараметрыПроведения;

КонецФункции

// Возвращает первоначальную стоимость, начисленную амортизацию и остаток обесценения для списка основных средств
//
// Параметры:
//  ПараметрыЗадания - Структура - Структура с ключами:
//                                 * Организация - Организация документа
//                                 * Дата - Дата документа
//                                 * МассивОсновныхСредств - Основные средства, для которых следует вернуть предыдущие значения
//  АдресХранилища - Строка - Адрес хранилища результата
//
Процедура УчетныеДанныеОС(ПараметрыЗадания, АдресХранилища) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", ПараметрыЗадания.Организация);
	Если ПараметрыЗадания.МежотчетныйПериод Тогда
		// Учтем результат перехода на ФСБУ 6
		Запрос.УстановитьПараметр("Период", Новый Граница(ПараметрыЗадания.Дата + 1, ВидГраницы.Исключая));
	Иначе
		Запрос.УстановитьПараметр("Период", Новый Граница(ПараметрыЗадания.Дата, ВидГраницы.Исключая));
	КонецЕсли;
	Запрос.УстановитьПараметр("КонецМесяца", Новый Граница(КонецМесяца(ПараметрыЗадания.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("МежотчетныйПериод", ПараметрыЗадания.МежотчетныйПериод);
	Запрос.УстановитьПараметр("МассивОсновныхСредств", ПараметрыЗадания.МассивОсновныхСредств);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновныеСредства.Ссылка КАК ОсновноеСредство
	|ПОМЕСТИТЬ МассивОсновныхСредств
	|ИЗ
	|	Справочник.ОсновныеСредства КАК ОсновныеСредства
	|ГДЕ
	|	ОсновныеСредства.Ссылка В(&МассивОсновныхСредств)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер, """") КАК ИнвентарныйНомер,
	|	СчетаБухгалтерскогоУчетаОС.СчетУчета КАК СчетУчета,
	|	СчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации,
	|	СправочникОсновныеСредства.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ РеквизитыОС
	|ИЗ
	|	МассивОсновныхСредств КАК СправочникОсновныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И ОсновноеСредство В (&МассивОсновныхСредств)) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	|		ПО СправочникОсновныеСредства.ОсновноеСредство = ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
	|				&Период,
	|				Организация = &Организация
	|					И ОсновноеСредство В (&МассивОсновныхСредств)) КАК СчетаБухгалтерскогоУчетаОС
	|		ПО СправочникОсновныеСредства.ОсновноеСредство = СчетаБухгалтерскогоУчетаОС.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальнаяСтоимостьОС.Субконто1 КАК ОсновноеСредство,
	|	ПервоначальнаяСтоимостьОС.СуммаОстатокДт КАК ПервоначальнаяСтоимость,
	|	0 КАК Амортизация,
	|	0 КАК Обесценение
	|ПОМЕСТИТЬ ОстаткиОС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонецМесяца,
	|			Счет В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					РеквизитыОС.СчетУчета
	|				ИЗ
	|					РеквизитыОС
	|				ГДЕ
	|					РеквизитыОС.СчетУчета ЕСТЬ НЕ NULL ),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Субконто1 В (&МассивОсновныхСредств)) КАК ПервоначальнаяСтоимостьОС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АмортизацияОС.Субконто1,
	|	0,
	|	АмортизацияОС.СуммаОстатокКт,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					РеквизитыОС.СчетНачисленияАмортизации
	|				ИЗ
	|					РеквизитыОС
	|				ГДЕ
	|					РеквизитыОС.СчетНачисленияАмортизации ЕСТЬ НЕ NULL ),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Субконто1 В (&МассивОсновныхСредств)) КАК АмортизацияОС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОбесценениеОС.Субконто1,
	|	0,
	|	0,
	|	ОбесценениеОС.СуммаОстатокКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОбесценениеОС_01)),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Субконто1 В (&МассивОсновныхСредств)) КАК ОбесценениеОС
	|ГДЕ
	|	НЕ &МежотчетныйПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеквизитыОС.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	РеквизитыОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ОстаткиОС.ПервоначальнаяСтоимость) КАК ПервоначальнаяСтоимость,
	|	СУММА(ОстаткиОС.Амортизация) КАК Амортизация,
	|	СУММА(ОстаткиОС.Обесценение) КАК СуммаОбесценения,
	|	СУММА(ОстаткиОС.ПервоначальнаяСтоимость - ОстаткиОС.Амортизация - ОстаткиОС.Обесценение) КАК БалансоваяСтоимость
	|ИЗ
	|	РеквизитыОС КАК РеквизитыОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиОС КАК ОстаткиОС
	|		ПО РеквизитыОС.ОсновноеСредство = ОстаткиОС.ОсновноеСредство
	|
	|СГРУППИРОВАТЬ ПО
	|	РеквизитыОС.ИнвентарныйНомер,
	|	РеквизитыОС.ОсновноеСредство";
	
	ТаблицаУчетныеДанные = Запрос.Выполнить().Выгрузить();
	ТаблицаУчетныеДанные.Индексы.Добавить("ОсновноеСредство");
	
	//Подготовим таблицы для расчета амортизации
	ТаблицаОС = ТаблицаУчетныеДанные.Скопировать(, "ОсновноеСредство");
	ТаблицаОС.Колонки.Добавить("НомерСтроки", ОбщегоНазначения.ОписаниеТипаСтрока(11));
	
	ТаблицаРеквизиты = Новый ТаблицаЗначений;
	ТаблицаРеквизиты.Колонки.Добавить("Период");
	ТаблицаРеквизиты.Колонки.Добавить("ДатаРасчета");
	ТаблицаРеквизиты.Колонки.Добавить("Организация");
	ТаблицаРеквизиты.Колонки.Добавить("Регистратор");
	ТаблицаРеквизиты.Колонки.Добавить("ВыдаватьСообщения");
	
	Реквизиты = ТаблицаРеквизиты.Добавить();
	Реквизиты.Организация       = ПараметрыЗадания.Организация;
	Реквизиты.Период            = ПараметрыЗадания.Дата;
	Реквизиты.ДатаРасчета       = ПараметрыЗадания.Дата;
	Реквизиты.Регистратор       = ПараметрыЗадания.Ссылка;
	Реквизиты.ВыдаватьСообщения = Ложь;
	
	//Рассчитаем амортизацию текущего месяца и учтем ее в балансовой стоимости для расчета обесценения
	Если НЕ ПараметрыЗадания.МежотчетныйПериод Тогда
		Отказ = Ложь;
		РасчетАмортизацииОС = УчетОС.ПодготовитьРасчетАмортизацииОС(ТаблицаОС, ТаблицаРеквизиты, Отказ);
		
		Если НЕ Отказ Тогда
			ТаблицаАмортизации = РасчетАмортизацииОС.ТаблицаАмортизации;
			Для Каждого СтрокаДокумента Из ТаблицаУчетныеДанные Цикл
				СтрокаАмортизации = ТаблицаАмортизации.Найти(СтрокаДокумента.ОсновноеСредство, "ОбъектУчета");
				Если СтрокаАмортизации = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				СтрокаДокумента.БалансоваяСтоимость = Макс(СтрокаДокумента.БалансоваяСтоимость - СтрокаАмортизации.СуммаАмортизацииБУ + СтрокаАмортизации.КорректировкаОбесценения, 0);
				СтрокаДокумента.Амортизация = СтрокаДокумента.Амортизация + СтрокаАмортизации.СуммаАмортизацииБУ;
				СтрокаДокумента.СуммаОбесценения =  Макс(СтрокаДокумента.СуммаОбесценения - СтрокаАмортизации.КорректировкаОбесценения, 0);
			КонецЦикла
		КонецЕсли;
	КонецЕсли;
	
	ПоместитьВоВременноеХранилище(ТаблицаУчетныеДанные, АдресХранилища);
	
КонецПроцедуры

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОбесценениеОС";
	КомандаПечати.Представление = НСтр("ru = 'Обесценение ОС'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр),
//                                            см. УправлениеПечатью.ПодготовитьКоллекциюПечатныхФорм.
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной
//                                                            параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной
//                                            параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОбесценениеОС") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ОбесценениеОС",
			НСтр("ru = 'Обесценение ОС'"),
			ПечатьОбесценениеОС(МассивОбъектов, ОбъектыПечати),
			, // пиктограмма печатной формы отсутствует
			"Документ.ОбесценениеОС.ПФ_MXL_ОбесценениеОС");
		
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(
		МассивОбъектов,
		КоллекцияПечатныхФорм,
		ОбъектыПечати,
		ПараметрыВывода);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиОбновления

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаРеквизитыДокумента()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата        КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	Реквизиты.СтатьяПрочихДоходовРасходов КАК СтатьяПрочихДоходовИРасходов,
	|	Реквизиты.СобытиеОС   КАК ОтражатьВНалоговомУчете
	|ИЗ
	|	Документ.ОбесценениеОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаТаблицаОС(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаОС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ОсновныеСредства", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.Ссылка               КАК Регистратор,
	|	ТаблицаОС.НомерСтроки          КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство     КАК ОсновноеСредство,
	|	ТаблицаОС.ИзменениеОбесценения КАК ИзменениеОбесценения
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	Документ.ОбесценениеОС.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.Регистратор      КАК Регистратор,
	|	ТаблицаОС.НомерСтроки      КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	ТаблицаОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции // ТекстЗапросаТаблицыДокумента()

Функция ТекстЗапросаОбесценениеОС(НомераТаблиц)

	НомераТаблиц.Вставить("ОбесценениеОС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ОбесценениеОСТаблица", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Номер КАК Номер,
	|	Реквизиты.СтатьяПрочихДоходовРасходов КАК СтатьяПрочихДоходовИРасходов,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.МежотчетныйПериод КАК МежотчетныйПериод
	|ИЗ
	|	Документ.ОбесценениеОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.Регистратор КАК Регистратор,
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.ИзменениеОбесценения КАК ИзменениеОбесценения
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаСобытияОС(НомераТаблиц)

	НомераТаблиц.Вставить("СобытияОС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СобытияОСТаблица", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка      КАК Регистратор,
	|	Реквизиты.Дата        КАК Период,
	|	Реквизиты.Номер       КАК Номер,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	Реквизиты.СобытиеОС   КАК СобытиеОС
	|ИЗ
	|	Документ.ОбесценениеОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.Регистратор      КАК Регистратор,
	|	ТаблицаОС.НомерСтроки      КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	0                          КАК СуммаЗатратБУ,
	|	0                          КАК СуммаЗатратНУ,
	|	0                          КАК СуммаЗатратУСН
	|ИЗ
	|	ТаблицаОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаПроверкиПоОС(НомераТаблиц)

	НомераТаблиц.Вставить("ПроверкиПоОС", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка      КАК Регистратор,
	|	Реквизиты.Дата        КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	""ОС""                КАК ИмяСписка,
	|	НЕОПРЕДЕЛЕНО КАК МОЛ
	|ИЗ
	|	Документ.ОбесценениеОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

#Область Печать

Функция ПечатьОбесценениеОС(Ссылки, ОбъектыПечати)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылки", Ссылки);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОбесценениеОС.Ссылка КАК Ссылка,
	|	ОбесценениеОС.Дата КАК Дата,
	|	ОбесценениеОС.СобытиеОС КАК СобытиеОС,
	|	ОбесценениеОС.Организация КАК Организация,
	|	ОбесценениеОС.Организация.НаименованиеСокращенное КАК ОрганизацияПредставление,
	|	ОбесценениеОС.Ответственный.ФизическоеЛицо КАК ОтветственныйФизическоеЛицо,
	|	ОбесценениеОС.ОС.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		ОсновноеСредство КАК ОсновноеСредство,
	|		БалансоваяСтоимость КАК БалансоваяСтоимость,
	|		ВозмещаемаяСтоимость КАК ВозмещаемаяСтоимость,
	|		СуммаОбесценения КАК СуммаОбесценения,
	|		ИзменениеОбесценения КАК ИзменениеОбесценения
	|	) КАК ОС
	|ИЗ
	|	Документ.ОбесценениеОС КАК ОбесценениеОС
	|ГДЕ
	|	ОбесценениеОС.Ссылка В(&Ссылки)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Новый ТабличныйДокумент;
	КонецЕсли;
	
	Результат = Новый ТабличныйДокумент;
	Результат.АвтоМасштаб = Истина;
	Результат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	Результат.КлючПараметровПечати = "Документ.ОбесценениеОС.ПФ_MXL_ОбесценениеОС";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОбесценениеОС.ПФ_MXL_ОбесценениеОС");
	
	ОбластиМакета = Новый Структура("Шапка, Подпись");
	Для Каждого ОписаниеОбласти Из ОбластиМакета Цикл
		ОбластиМакета[ОписаниеОбласти.Ключ] = Макет.ПолучитьОбласть(ОписаниеОбласти.Ключ);
	КонецЦикла;
	
	ВыборкаДокумент = РезультатЗапроса.Выбрать();
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаДокумент.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			Результат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НачалоОбластиПечати = Результат.ВысотаТаблицы + 1;
		
		// Начало документа
		ОбластиМакета.Шапка.Параметры.Заполнить(ВыборкаДокумент);
		ФорматированныеПараметры = Новый Структура;
		ФорматированныеПараметры.Вставить("ДатаДокумента", НРег(Формат(ВыборкаДокумент.Дата, "ДЛФ=D")));
		ФорматированныеПараметры.Вставить("ДействуетС", Формат(КонецМесяца(ВыборкаДокумент.Дата) + 1, "ДФ='MMMM yyyy ""г.""'"));
		ОбластиМакета.Шапка.Параметры.Заполнить(ФорматированныеПараметры);
		Результат.Вывести(ОбластиМакета.Шапка);
		
		// Строки таблицы
		ТаблицаСтрокОС = ВыборкаДокумент.ОС.Выгрузить();
		ТаблицаСтрокОС = УчетОС.ПолучитьТаблицуИнвентарныхНомеровОС(ТаблицаСтрокОС,
			ВыборкаДокумент.Организация, ВыборкаДокумент.Дата);
			
		// Шапка таблицы
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		Результат.Вывести(ОбластьШапкаТаблицы);
		
		Для Каждого СтрокаТаблицы Из ТаблицаСтрокОС Цикл
			// Основная часть
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
			ОбластьСтрока.Параметры.Заполнить(СтрокаТаблицы);
			
			Если СтрокаТаблицы.ИзменениеОбесценения > 0 Тогда
				ОбластьСтрока.Параметры.СуммаУбыткаПризнаваемая = СтрокаТаблицы.ИзменениеОбесценения;
			КонецЕсли;
			Если СтрокаТаблицы.ИзменениеОбесценения < 0 Тогда
				ОбластьСтрока.Параметры.СуммаУбыткаВосстанавливаемая = -СтрокаТаблицы.ИзменениеОбесценения;
			КонецЕсли;
			
			Результат.Вывести(ОбластьСтрока);			
		КонецЦикла;
		
		// Конец таблицы
		ОбластьКонецТаблицы = Макет.ПолучитьОбласть("КонецТаблицы");
		Результат.Вывести(ОбластьКонецТаблицы);
		
		// Конец документа
		ОбластиМакета.Подпись.Параметры.Заполнить(ВыборкаДокумент);
		
		Полномочия = ОтветственныеЛицаБП.ПолномочияОтветственного(
			ВыборкаДокумент.ОтветственныйФизическоеЛицо,
			ВыборкаДокумент.Организация,
			ВыборкаДокумент.Дата);
		СведенияПодписи = Новый Структура;
		СведенияПодписи.Вставить("ДолжностьПодписавшегоЛица", Полномочия.ДолжностьПредставление);
		СведенияПодписи.Вставить("ДокументПодписал",          Полномочия.ФИО.Представление);
		ОбластиМакета.Подпись.Параметры.Заполнить(СведенияПодписи);
		
		Результат.Вывести(ОбластиМакета.Подпись);
		
		// В табличном документе зададим имя области, в которую был выведен объект.
		// Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			Результат,
			НачалоОбластиПечати,
			ОбъектыПечати,
			ВыборкаДокумент.Ссылка);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли