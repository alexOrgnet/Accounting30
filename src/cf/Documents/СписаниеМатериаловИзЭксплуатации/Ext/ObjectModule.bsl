#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения)

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено
			И ТипДанныхЗаполнения <> Тип("Структура")
			И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	КонецЕсли;
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.СписаниеМатериаловИзЭксплуатации.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ

	Документы.СписаниеМатериаловИзЭксплуатации.ДобавитьКолонкуСодержаниеСписаниеСпецодеждыСпецоснастки(
		ПараметрыПроведения.СписаниеСпецодеждыСпецоснасткиТаблица);
	Документы.СписаниеМатериаловИзЭксплуатации.ДобавитьКолонкуСодержаниеСписаниеИнвентаря(
		ПараметрыПроведения.СписаниеИнвентаряТаблица);

	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
		
	// Алгоритмы формирования проводок этого документа рассчитывают суммы проводок налогового учета
	Движения.Хозрасчетный.ДополнительныеСвойства.Вставить("СуммыНалоговогоУчетаЗаполнены", Истина);

	УчетМатериаловВЭксплуатации.СформироватьДвиженияСписаниеСпецодеждыСпецоснасткиИзЭксплуатации(
		ПараметрыПроведения.СписаниеСпецодеждыСпецоснасткиТаблица,
		ПараметрыПроведения.СписаниеСпецодеждыСпецоснасткиРеквизиты,
		Движения, Отказ);

	УчетМатериаловВЭксплуатации.СформироватьДвиженияСписаниеИнвентаряИзЭксплуатации(
		ПараметрыПроведения.СписаниеИнвентаряТаблица,
		ПараметрыПроведения.СписаниеИнвентаряРеквизиты,
		Движения, Отказ);
		
	ТаблицаСуммСписания = ПодготовитьТаблицуПоСуммамСписания(Движения);
	
	ПрослеживаемыеОперации = ПрослеживаемостьБП.ПодготовитьТаблицуПоПрослеживаемымОперациям(
		ПараметрыПроведения.ПрослеживаемыеОперации, ТаблицаСуммСписания, Ложь);
		
	ПрослеживаемостьБП.СформироватьДвиженияРеализацияТоваров(
		ПараметрыПроведения.ПрослеживаемыеТовары,
		ПрослеживаемыеОперации,
		ПараметрыПроведения.СписаниеИнвентаряРеквизиты,
		Движения);
		
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	МассивНепроверяемыхРеквизитов = Новый Массив;

	Если Спецоснастка.Количество() = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ПодразделениеОрганизации");
	КонецЕсли;

	Если Спецодежда.Количество() = 0 ИЛИ Спецоснастка.Количество() = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СпособСписанияРасходов");
	КонецЕсли;

	Если СпособСписанияРасходов <> Перечисления.СпособыСписанияРасходов.ВДебетСчетаУказанногоВДокументе Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СчетДт");
	КонецЕсли;

	ПрослеживаемыйТовар = ИнвентарьИХозяйственныеПринадлежности.НайтиСтроки(Новый Структура("ПрослеживаемыйТовар", Истина));
	ЕстьПрослеживаемыйТовар = ПрослеживаемыйТовар.Количество() <> 0;
	Если ЕстьПрослеживаемыйТовар И Не ЗначениеЗаполнено(КодОперацииПрослеживаемости) Тогда
		ТекстОшибки = НСтр("ru='Не выбрана причина списания в прослеживаемости'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, Ссылка, "НадписьКодОперации", , Отказ);
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();
	
	ВедетсяУчетПрослеживаемыхТоваров = ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров")
		И ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(Дата);
		
	Если ИнвентарьИХозяйственныеПринадлежности.Количество() > 0 Тогда
		МассивИнвентарьИХозяйственныеПринадлежности = Новый Массив(ИнвентарьИХозяйственныеПринадлежности.Количество());
		ИнвентарьИХозяйственныеПринадлежности.ЗагрузитьКолонку(МассивИнвентарьИХозяйственныеПринадлежности, "ИдентификаторСтроки");
	КонецЕсли;
	
	СведенияПрослеживаемости.Очистить();
	РаботаСНоменклатуройБП.ОбновитьПризнакПрослеживаемости(ИнвентарьИХозяйственныеПринадлежности, ВедетсяУчетПрослеживаемыхТоваров, Дата);
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ВедетсяУчетПрослеживаемыхТоваров = ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров")
		И ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(Дата);
		
	Для Каждого СтрокаТабличнойЧасти Из ЭтотОбъект.ИнвентарьИХозяйственныеПринадлежности Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.ИдентификаторСтроки) Тогда
			СтрокаТабличнойЧасти.ИдентификаторСтроки = Новый УникальныйИдентификатор;
		КонецЕсли;
		Если СтрокаТабличнойЧасти.ПрослеживаемыйТовар = Ложь И ВедетсяУчетПрослеживаемыхТоваров Тогда
			СтрокиСРНПТ = СведенияПрослеживаемости.НайтиСтроки(
			Новый Структура("ИдентификаторСтроки", СтрокаТабличнойЧасти.ИдентификаторСтроки));
			Для Каждого СтрокаСРНПТ Из СтрокиСРНПТ Цикл
				СведенияПрослеживаемости.Удалить(СтрокаСРНПТ);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;

	ПрослеживаемыйТовар = ИнвентарьИХозяйственныеПринадлежности.НайтиСтроки(Новый Структура("ПрослеживаемыйТовар", Истина));
	ЕстьПрослеживаемыйТовар = ПрослеживаемыйТовар.Количество() <> 0;
	
	Если ЕстьПрослеживаемыйТовар Тогда
		Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
			ПрослеживаемостьБП.ПодобратьРНПТ(ЭтотОбъект, Отказ, "ИнвентарьИХозяйственныеПринадлежности");
		КонецЕсли;
	Иначе
		СведенияПрослеживаемости.Очистить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения)

	ТипОснования = ТипЗнч(ДанныеЗаполнения);

	Если ТипОснования = Тип("ДокументСсылка.ПередачаМатериаловВЭксплуатацию") Тогда
		
		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, ДанныеЗаполнения);

		ПодразделениеОрганизации     = ДанныеЗаполнения.Местонахождение;
		Комментарий                  = ДанныеЗаполнения.Комментарий;
		Ответственный                = ДанныеЗаполнения.Ответственный;
		
		ВедетсяУчетПрослеживаемыхТоваров = ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров")
			И ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(Дата);

		// Заполнение табличной части "Спецодежда"
		Для Каждого ТекСтрокаСпецодежда Из ДанныеЗаполнения.Спецодежда Цикл

			НоваяСтрока = Спецодежда.Добавить();

			НоваяСтрока.Номенклатура                  = ТекСтрокаСпецодежда.Номенклатура;
			НоваяСтрока.ФизЛицо                       = ТекСтрокаСпецодежда.ФизЛицо;
			НоваяСтрока.ПартияМатериаловВЭксплуатации = ДанныеЗаполнения;
			НоваяСтрока.Количество                    = ТекСтрокаСпецодежда.Количество;
			Если (НЕ Значениезаполнено(ТекСтрокаСпецодежда.НазначениеИспользования))
				ИЛИ ТекСтрокаСпецодежда.НазначениеИспользования.СпособПогашенияСтоимости = Перечисления.СпособыПогашенияСтоимости.ПогашатьСтоимостьПриПередачеВЭксплуатацию Тогда
				НоваяСтрока.СчетПередачи = ПланыСчетов.Хозрасчетный.СпецодеждаВЭксплуатацииВспомогательный;
			Иначе
				НоваяСтрока.СчетПередачи = ТекСтрокаСпецодежда.СчетПередачи;
			КонецЕсли;

		КонецЦикла;

		// Заполнение табличной части "Спецоснастка"
		Для Каждого ТекСтрокаСпецоснастка Из ДанныеЗаполнения.Спецоснастка Цикл

			НоваяСтрока = Спецоснастка.Добавить();

			НоваяСтрока.Номенклатура                  = ТекСтрокаСпецоснастка.Номенклатура;
			НоваяСтрока.ПартияМатериаловВЭксплуатации = ДанныеЗаполнения;
			НоваяСтрока.Количество                    = ТекСтрокаСпецоснастка.Количество;
			Если (НЕ Значениезаполнено(ТекСтрокаСпецоснастка.НазначениеИспользования))
				ИЛИ ТекСтрокаСпецоснастка.НазначениеИспользования.СпособПогашенияСтоимости = Перечисления.СпособыПогашенияСтоимости.ПогашатьСтоимостьПриПередачеВЭксплуатацию Тогда
				НоваяСтрока.СчетПередачи = ПланыСчетов.Хозрасчетный.СпецоснасткаВЭксплуатацииВспомогательный;
			Иначе
				НоваяСтрока.СчетПередачи = ТекСтрокаСпецоснастка.СчетПередачи;
			КонецЕсли;

		КонецЦикла;

		// Заполнение табличной части "Инвентарь и хозяйственные принадлежности"
		Для Каждого ТекСтрокаИнвентарьИХозяйственныеПринадлежности Из ДанныеЗаполнения.ИнвентарьИХозяйственныеПринадлежности Цикл
			
			НоваяСтрока = ИнвентарьИХозяйственныеПринадлежности.Добавить();
			
			НоваяСтрока.Номенклатура                  = ТекСтрокаИнвентарьИХозяйственныеПринадлежности.Номенклатура;
			НоваяСтрока.ПартияМатериаловВЭксплуатации = ДанныеЗаполнения;
			НоваяСтрока.ФизЛицо                       = ТекСтрокаИнвентарьИХозяйственныеПринадлежности.ФизЛицо;
			НоваяСтрока.Количество                    = ТекСтрокаИнвентарьИХозяйственныеПринадлежности.Количество;
			Если ВедетсяУчетПрослеживаемыхТоваров Тогда
				
				ДанныеОбъекта = Новый Структура(
				"Дата, Организация, ВедетсяУчетПрослеживаемыхТоваров");
				ДанныеОбъекта.Дата                             = Дата;
				ДанныеОбъекта.Организация                      = Организация;
				ДанныеОбъекта.ВедетсяУчетПрослеживаемыхТоваров = ВедетсяУчетПрослеживаемыхТоваров;
				
				СведенияОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОНоменклатуре(
				НоваяСтрока.Номенклатура, ДанныеОбъекта);
				
				Если ДанныеОбъекта.ВедетсяУчетПрослеживаемыхТоваров  И СведенияОНоменклатуре <> Неопределено Тогда
					НоваяСтрока.ПрослеживаемыйТовар    = СведенияОНоменклатуре.ПрослеживаемыйТовар
						Или СведенияОНоменклатуре.ПрослеживаемыйКомплект;
					НоваяСтрока.СтранаПроисхождения    = СведенияОНоменклатуре.СтранаПроисхождения;
					НоваяСтрока.ПрослеживаемыйКомплект = СведенияОНоменклатуре.ПрослеживаемыйКомплект;
				Иначе
					НоваяСтрока.ПрослеживаемыйТовар    = Ложь;
					НоваяСтрока.ПрослеживаемыйКомплект = Ложь;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

Функция ПодготовитьТаблицуПоСуммамСписания(Движения)
	
	ТаблицаСуммСписания = Новый ТаблицаЗначений();
	ТаблицаСуммСписания.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаСуммСписания.Колонки.Добавить("Количество",   Новый ОписаниеТипов("Число"));
	ТаблицаСуммСписания.Колонки.Добавить("Сумма",        Новый ОписаниеТипов("Число"));
	СчетМЦ04 = ПланыСчетов.Хозрасчетный.ИнвентарьИХозяйственныеПринадлежностиВЭксплуатации;
	Для Каждого Строка Из Движения.Хозрасчетный Цикл
		Если Строка.СчетКт = СчетМЦ04 Тогда
			НоваяСтрока = ТаблицаСуммСписания.Добавить();
			НоваяСтрока.Номенклатура = Строка.СубконтоКт.Номенклатура;
			НоваяСтрока.Количество = Строка.КоличествоКт;
			НоваяСтрока.Сумма = Строка.Сумма;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТаблицаСуммСписания;
	
КонецФункции

#КонецОбласти

#КонецЕсли