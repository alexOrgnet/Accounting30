#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено
			И ТипДанныхЗаполнения <> Тип("Структура")
			И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	КонецЕсли;
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);

	Если НЕ ЗначениеЗаполнено(СобытиеОС) Тогда
		СобытиеОС = УчетОС.ПолучитьСобытиеПоОСИзСправочника(Перечисления.ВидыСобытийОС.ВнутреннееПеремещение);
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ВестиУчетПоПодразделениям = БухгалтерскийУчетПереопределяемый.ВестиУчетПоПодразделениям();
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.ПеремещениеОС.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ
	УчетОС.ПроверитьСоответствиеОСОрганизации(
		ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.ПроверкиПоОС,
		Отказ);

	УчетОС.ПроверитьСостояниеОСПринятоКУчету(
		ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.ПроверкиПоОС,
		Отказ);

	УчетОС.ПроверитьСоответствиеМестонахожденияОС(
		ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.ПроверкиПоОС,
		Отказ);

	УчетОС.ПроверитьЗаполнениеСчетаУчетаОС(
		ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.ПроверкиПоОС,
		Отказ);

	Если ПодразделениеОрганизации <> ПодразделениеПолучатель 
		И ЗначениеЗаполнено(ПараметрыПроведения.ОсновныеСредства) 
		И ВестиУчетПоПодразделениям Тогда 
		
		ПараметрыНачисленияАмортизации = УчетОС.ПодготовитьТаблицыАмортизацииОСИСуммАмортизационнойПремии(
			ПараметрыПроведения.ОсновныеСредства,
			ПараметрыПроведения.НачислениеАмортизацииРегл,
			Отказ);
			
		УчетОС.УдалитьИзТаблицыНачисленияАмортизацииНенужноеПриПеремещенииОС(
			ПараметрыНачисленияАмортизации,
			Отказ);
			
	КонецЕсли;
	
	ДанныеУчетаГрупповыхОС = УчетГрупповыхОС.ДанныеУчетаГрупповыхОС(
		ПараметрыПроведения.ГрупповыеОС,
		ПараметрыПроведения.ПеремещениеГрупповыхОС,
		Отказ);
	
	ИзменяетсяПодразделениеБУ = ВестиУчетПоПодразделениям
		И ПодразделениеОрганизации <> ПодразделениеПолучатель 
		И ЗначениеЗаполнено(ПараметрыПроведения.ОсновныеСредства);
	
	ДанныеУчетаЗатратНаРемонт = Неопределено;
	Если ИзменяетсяПодразделениеБУ Тогда
		УчетРемонтовОС.РассчитатьВыбытие(
			ДанныеУчетаЗатратНаРемонт, 
			ПараметрыПроведения.ЗатратыНаРемонтОС, 
			ПараметрыПроведения.ЗатратыНаРемонтОСТаблица, 
			Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
		
	// Алгоритмы формирования проводок этого документа рассчитывают суммы проводок налогового учета
	Движения.Хозрасчетный.ДополнительныеСвойства.Вставить("СуммыНалоговогоУчетаЗаполнены", Истина);

	УчетОС.СформироватьДвиженияИзменениеМестонахожденияОСБУ(
		ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.МестонахождениеОСБУ,
		Движения, Отказ);

	УчетОС.СформироватьДвиженияРегистрацияСобытияОС(
		ПараметрыПроведения.СобытияОСТаблица,
		ПараметрыПроведения.СобытияОС,
		Движения, Отказ);

	УчетОС.СформироватьДвиженияИзменениеСпособовОтраженияРасходовПоАмортизацииОСБУ(
		ПараметрыПроведения.СпособыОтраженияРасходовПоАмортизацииОСБУТаблица,
		ПараметрыПроведения.СпособыОтраженияРасходовПоАмортизацииОСБУ,
		Движения, Отказ);

	УчетОС.СформироватьДвиженияИзменениеПризнакаНачисленияАмортизацииОСБУ(
		ПараметрыПроведения.НачислениеАмортизацииОСБУТаблица,
		ПараметрыПроведения.НачислениеАмортизацииОСБУ,
		Движения, Отказ);

	УчетОС.СформироватьДвиженияИзменениеПризнакаНачисленияАмортизацииОСНУ(
		ПараметрыПроведения.НачислениеАмортизацииОСНУТаблица,
		ПараметрыПроведения.НачислениеАмортизацииОСНУ,
		Движения, Отказ);
	
	Если ИзменяетсяПодразделениеБУ Тогда 
		
		УчетОС.СформироватьДвиженияНачислениеАмортизацииИАмортизационнойПремии(
			ПараметрыНачисленияАмортизации,
			Движения, Отказ);
		
		УчетОС.СформироватьДвиженияПеремещениеОС(
			ПараметрыПроведения.ОсновныеСредства,
			ПараметрыПроведения.ПеремещениеОСРегл,
			ПараметрыНачисленияАмортизации,
			Движения, Отказ);
		
		УчетРемонтовОС.ОтразитьПеремещениеВУчете(
			ДанныеУчетаЗатратНаРемонт, 
			ПараметрыПроведения.ЗатратыНаРемонтОС, 
			Движения, 
			Отказ);
		
	КонецЕсли;
	
	УчетГрупповыхОС.СформироватьДвиженияРасходГрупповыхОС(
		ПараметрыПроведения.ГрупповыеОС,
		Неопределено,
		ПараметрыПроведения.ПеремещениеГрупповыхОС, 
		ДанныеУчетаГрупповыхОС, 
		Движения, Отказ);
	
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	УправлениеВнеоборотнымиАктивами.ПроверитьОтсутствиеДублейВТабличнойЧасти(
		ЭтотОбъект, "ОС", Новый Структура("ОсновноеСредство"), Отказ);
		
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	// Количество должно быть заполнено для групповых объектов
	
	МассивНепроверяемыхРеквизитов.Добавить("ОС.Количество");
	
	МассивОС = Новый Массив;
	Для Каждого СтрокаТаблицы Из ОС Цикл
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.ОсновноеСредство)
			Или МассивОС.Найти(СтрокаТаблицы.ОсновноеСредство) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		МассивОС.Добавить(СтрокаТаблицы.ОсновноеСредство);
	КонецЦикла;
	
	Если ЗначениеЗаполнено(МассивОС) Тогда
		
		Префикс = "ОС";
		ИмяСписка = "ОС";
		ЕдиницыУчета = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивОС, "ЕдиницаУчета");
		Для Каждого СтрокаТаблицы Из ОС Цикл
			Если Не ЗначениеЗаполнено(СтрокаТаблицы.ОсновноеСредство) Тогда
				Продолжить;
			КонецЕсли;
			ЕдиницаУчета = ЕдиницыУчета[СтрокаТаблицы.ОсновноеСредство];
			Если ЕдиницаУчета <> Перечисления.ЕдиницыУчетаОС.ГрупповойОбъект Тогда
				Продолжить;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Количество) Тогда
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Количество'"),
					СтрокаТаблицы.НомерСтроки, ИмяСписка);
				Поле = Префикс + "Количество";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоДокументуОснованию(Основание)

	// Заполним реквизиты из стандартного набора по документу основанию.
	ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);

	Если ТипЗнч(Основание) = Тип("СправочникСсылка.ОсновныеСредства") Тогда

		Если Основание.ЭтоГруппа Тогда

			ТекстСообщения = НСтр("ru = 'Ввод Перемещения ОС в аренду на основании группы ОС невозможен!
				|Выберите ОС. Для раскрытия группы используйте клавиши Ctrl и стрелку вниз'");
			ВызватьИсключение(ТекстСообщения);

		КонецЕсли;

		СтрокаТабличнойЧасти = ОС.Добавить();
		СтрокаТабличнойЧасти.ОсновноеСредство = Основание;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСТЬNULL(ПервоначальныеСведенияОС.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&Дата, ОсновноеСредство = &ОсновноеСредство) КАК ПервоначальныеСведенияОС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ,
		|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение
		|ИЗ
		|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&Дата, ОсновноеСредство = &ОсновноеСредство) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних";
		Запрос.УстановитьПараметр("Дата", НачалоДня(ТекущаяДатаСеанса()));
		Запрос.УстановитьПараметр("ОсновноеСредство", Основание);
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		Если НЕ РезультатЗапроса[0].Пустой() Тогда
			Выборка = РезультатЗапроса[0].Выбрать();
			Выборка.Следующий();
			Организация = Выборка.Организация;
		КонецЕсли;
		Если НЕ РезультатЗапроса[1].Пустой() Тогда
			Выборка = РезультатЗапроса[1].Выбрать();
			Выборка.Следующий();
			МОЛОрганизации = Выборка.МОЛ;
			ПодразделениеОрганизации = Выборка.Местонахождение;
		КонецЕсли;
	
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ИнвентаризацияОС") Тогда
		
		МОЛОрганизации = Основание.ОтветственноеЛицо;
		Для каждого ТекСтрокаОС Из Основание.ОС Цикл
			Если ТекСтрокаОС.НаличиеПоДаннымУчета И ТекСтрокаОС.НаличиеФактическое Тогда
				НоваяСтрока = ОС.Добавить();
				НоваяСтрока.ОсновноеСредство = ТекСтрокаОС.ОсновноеСредство;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецЕсли