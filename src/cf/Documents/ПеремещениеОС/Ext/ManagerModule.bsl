#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 12, 0);
	
КонецФункции

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация
	|ИЗ
	|	Документ.ПеремещениеОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = ОбщегоНазначенияБПВызовСервера.ПолучитьСтруктуруИзРезультатаЗапроса(Результат);
	
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	НомераТаблиц = Новый Структура;
	
	Запрос.УстановитьПараметр("ПлательщикНалогаНаПрибыль", 
		УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("СодержаниеПроводокГрупповыеОС", 
		НСтр("ru='Перемещение ОС'", ОбщегоНазначения.КодОсновногоЯзыка()));

	Запрос.Текст = ТекстЗапросаТаблицаОС(НомераТаблиц)
		+ ТекстЗапросаМестонахождениеОСБУ(НомераТаблиц)
		+ ТекстЗапросаСобытияОС(НомераТаблиц)
		+ ТекстЗапросаСпособыОтраженияРасходовПоАмортизацииОСБУ(НомераТаблиц)
		+ ТекстЗапросаНачислениеАмортизацииОСБУ(НомераТаблиц)
		+ ТекстЗапросаНачислениеАмортизацииОСНУ(НомераТаблиц)
		+ ТекстЗапросаНачислениеАмортизацииРегл(НомераТаблиц)
		+ ТекстЗапросаПеремещениеОСРегл(НомераТаблиц)
		+ ТекстЗапросаПеремещениеГрупповыхОС(НомераТаблиц)
		+ ТекстЗапросаЗатратыНаРемонтОС(НомераТаблиц)
		+ ТекстЗапросаПроверкиПоОС(НомераТаблиц);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
		
	Возврат ПараметрыПроведения;
	
КонецФункции 

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Накладная на перемещение ОС (ОС-2)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОС2";
	КомандаПечати.Представление = НСтр("ru = 'Накладная на перемещение ОС (ОС-2)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Перемещение ОС""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// Проверяем, нужно ли для макета СчетЗаказа формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОС2") Тогда
		
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОС2", НСтр("ru = 'ОС-2 (Накладная на внутреннее перемещение ОС)'"), 
			ПечатьОС2(МассивОбъектов, ОбъектыПечати, ПараметрыПечати), , "Документ.ПеремещениеОС.ПФ_MXL_ОС2");
		
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	
	
КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "СобытиеОС");
	
	Возврат Результат;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаТаблицаОС(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаОС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ОсновныеСредства", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаГрупповыеОС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ГрупповыеОС", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.Ссылка КАК Регистратор,
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	Документ.ПеремещениеОС.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И ТаблицаОС.ОсновноеСредство.ЕдиницаУчета <> ЗНАЧЕНИЕ(Перечисление.ЕдиницыУчетаОС.ГрупповойОбъект)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаОС.Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.Регистратор КАК Регистратор,
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.Ссылка КАК Регистратор,
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.Количество КАК Количество
	|ПОМЕСТИТЬ ГрупповыеОС
	|ИЗ
	|	Документ.ПеремещениеОС.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И ТаблицаОС.ОсновноеСредство.ЕдиницаУчета = ЗНАЧЕНИЕ(Перечисление.ЕдиницыУчетаОС.ГрупповойОбъект)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаОС.Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрупповыеОС.Регистратор КАК Регистратор,
	|	ГрупповыеОС.НомерСтроки КАК НомерСтроки,
	|	ГрупповыеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ГрупповыеОС.Количество КАК Количество
	|ИЗ
	|	ГрупповыеОС КАК ГрупповыеОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаМестонахождениеОСБУ(НомераТаблиц)
	
	НомераТаблиц.Вставить("МестонахождениеОСБУ", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ПодразделениеПолучатель КАК Местонахождение,
	|	Реквизиты.МОЛПолучатель КАК МОЛ,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент
	|ИЗ
	|	Документ.ПеремещениеОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаСобытияОС(НомераТаблиц)
	
	НомераТаблиц.Вставить("СобытияОС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СобытияОСТаблица", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Номер,
	|	Реквизиты.Организация,
	|	Реквизиты.СобытиеОС КАК СобытиеОС
	|ИЗ
	|	Документ.ПеремещениеОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.Регистратор      КАК Регистратор,
	|	ТаблицаОС.НомерСтроки      КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	0                          КАК СуммаЗатратБУ,
	|	0                          КАК СуммаЗатратНУ,
	|	0                          КАК СуммаЗатратУСН
	|ИЗ
	|	ТаблицаОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки
	|";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаСпособыОтраженияРасходовПоАмортизацииОСБУ(НомераТаблиц)
	
	НомераТаблиц.Вставить("СпособыОтраженияРасходовПоАмортизацииОСБУ", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СпособыОтраженияРасходовПоАмортизацииОСБУТаблица", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.СпособОтраженияРасходовПоАмортизации КАК СпособыОтраженияРасходовПоАмортизации
	|ИЗ
	|	Документ.ПеремещениеОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Регистратор.СпособОтраженияРасходовПоАмортизации <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияРасходовПоАмортизации.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаНачислениеАмортизацииОСБУ(НомераТаблиц)
	
	НомераТаблиц.Вставить("НачислениеАмортизацииОСБУ", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("НачислениеАмортизацииОСБУТаблица", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	ВЫБОР
	|		КОГДА Реквизиты.НачислениеАмортизации = 1
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НачислятьАмортизацию
	|ИЗ
	|	Документ.ПеремещениеОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Регистратор.НачислениеАмортизации <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаНачислениеАмортизацииОСНУ(НомераТаблиц)
	
	НомераТаблиц.Вставить("НачислениеАмортизацииОСНУ", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("НачислениеАмортизацииОСНУТаблица", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка           КАК Регистратор,
	|	Реквизиты.Дата             КАК Период,
	|	Реквизиты.Организация      КАК Организация,
	|	&ПлательщикНалогаНаПрибыль КАК ПлательщикНалогаНаПрибыль,
	|	ВЫБОР
	|		КОГДА Реквизиты.НачислениеАмортизации = 1
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НачислятьАмортизацию
	|ИЗ
	|	Документ.ПеремещениеОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Регистратор.НачислениеАмортизации <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаНачислениеАмортизацииРегл(НомераТаблиц)
	
	НомераТаблиц.Вставить("НачислениеАмортизацииРегл", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("НачислениеАмортизацииРеглТаблица", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ПодразделениеОрганизации,
	|	""ОС"" КАК ИмяСписка
	|ИЗ
	|	Документ.ПеремещениеОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Регистратор.ПодразделениеПолучатель <> ТаблицаОС.Регистратор.ПодразделениеОрганизации
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПеремещениеОСРегл(НомераТаблиц)
	
	НомераТаблиц.Вставить("ПеремещениеОСРегл", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПеремещениеОСРеглТаблица", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ПодразделениеПолучатель,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО КАК СчетУчета
	|ИЗ
	|	Документ.ПеремещениеОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Регистратор.ПодразделениеПолучатель <> ТаблицаОС.Регистратор.ПодразделениеОрганизации
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПроверкиПоОС(НомераТаблиц)
	
	НомераТаблиц.Вставить("ПроверкиПоОС", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	""ОС"" КАК ИмяСписка,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.МОЛОрганизации КАК МОЛ
	|ИЗ
	|	Документ.ПеремещениеОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПеремещениеГрупповыхОС(НомераТаблиц)
	
	НомераТаблиц.Вставить("ПеремещениеГрупповыхОС", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
	|	Реквизиты.СпособОтраженияРасходовПоАмортизации КАК СпособОтраженияРасходовПоАмортизации,
	|	&СодержаниеПроводокГрупповыеОС КАК СодержаниеПроводок,
	|	ИСТИНА КАК ЭтоПеремещение,
	|	""ОС"" КАК ИмяСписка
	|ИЗ
	|	Документ.ПеремещениеОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаЗатратыНаРемонтОС(НомераТаблиц)
	
	НомераТаблиц.Вставить("ЗатратыНаРемонтОС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗатратыНаРемонтОСТаблица", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Номер КАК Номер,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
	|	""ОС"" КАК ИмяСписка,
	|	Реквизиты.СобытиеОС КАК СобытиеОС,
	|	""Перемещение затрат на ремонт ОС"" КАК Содержание
	|ИЗ
	|	Документ.ПеремещениеОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.Ссылка КАК Регистратор,
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	НЕОПРЕДЕЛЕНО КАК СчетВыбытия,
	|	НЕОПРЕДЕЛЕНО КАК Субконто1
	|ИЗ
	|	Документ.ПеремещениеОС.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И ТаблицаОС.ОсновноеСредство.ЕдиницаУчета <> ЗНАЧЕНИЕ(Перечисление.ЕдиницыУчетаОС.ГрупповойОбъект)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ПечатьОС2(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	Перем ПодразделениеОтветственныхЛиц;

	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеОС_ОС2";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПеремещениеОС.ПФ_MXL_ОС2");
	
	// Области
	ОбластьШапка1             = Макет.ПолучитьОбласть("Шапка1");
	ОбластьСтрока             = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвалСтраницы     = Макет.ПолучитьОбласть("ПодвалСтраницы");
	ОбластьПодвал             = Макет.ПолучитьОбласть("Подвал");
	ОбластьШапка2             = Макет.ПолучитьОбласть("Шапка2");
	ОбластьПодвалСтраницыИтог = Макет.ПолучитьОбласть("ПодвалСтраницыИтог");
	ОбластьПодвалОписание     = Макет.ПолучитьОбласть("ПодвалОписание");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПеремещениеОС.Ссылка КАК Ссылка,
	|	ПеремещениеОС.МоментВремени КАК МоментВремени,
	|	ПеремещениеОС.Организация КАК Организация,
	|	ПеремещениеОС.Организация.КодПоОКПО КАК КодПоОКПО,
	|	ПеремещениеОС.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ПеремещениеОС.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
	|	ВЫБОР
	|		КОГДА ПеремещениеОС.ПодразделениеОрганизации.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ПеремещениеОС.ПодразделениеОрганизации.Наименование
	|		ИНАЧЕ ПеремещениеОС.ПодразделениеОрганизации.НаименованиеПолное
	|	КОНЕЦ КАК ПодрСдатчик,
	|	ВЫБОР
	|		КОГДА ПеремещениеОС.ПодразделениеПолучатель.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ПеремещениеОС.ПодразделениеПолучатель.Наименование
	|		ИНАЧЕ ПеремещениеОС.ПодразделениеПолучатель.НаименованиеПолное
	|	КОНЕЦ КАК ПодрПолучатель,
	|	ПеремещениеОС.Номер КАК Номер,
	|	ПеремещениеОС.Номер КАК НомерДок,
	|	ПеремещениеОС.Дата КАК Дата,
	|	ПеремещениеОС.Дата КАК ДатаДок,
	|	ПеремещениеОС.МОЛОрганизации КАК МОЛСдатчик,
	|	ПеремещениеОС.МОЛПолучатель КАК МОЛПолучатель,
	|	Константы.ВалютаРегламентированногоУчета.Наименование КАК Валюта
	|ИЗ
	|	Документ.ПеремещениеОС КАК ПеремещениеОС,
	|	Константы КАК Константы
	|ГДЕ
	|	ПеремещениеОС.Ссылка В (&МассивОбъектов)
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка";
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПеремещениеОСОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ СписокОС
	|ИЗ
	|	Документ.ПеремещениеОС.ОС КАК ПеремещениеОСОС
	|ГДЕ
	|	ПеремещениеОСОС.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер КАК ИнвентарныйНомер
	|ПОМЕСТИТЬ ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС)) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета КАК СчетУчета
	|ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаОССрезПоследних
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС)) КАК СчетаБухгалтерскогоУчетаОССрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаОстатокДт
	|ПОМЕСТИТЬ ХозрасчетныйОстатки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета
	|				ИЗ
	|					СчетаБухгалтерскогоУчетаОССрезПоследних),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС)) КАК ХозрасчетныйОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаОстатокДт,
	|	ХозрасчетныйОстатки.КоличествоОстатокДт КАК КоличествоОстатокДт
	|ПОМЕСТИТЬ ХозрасчетныйОстаткиГрупповыхОС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ГрупповыеОбъектыОС),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Подразделение = &Подразделение
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС)) КАК ХозрасчетныйОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеОСОС.НомерСтроки КАК НС,
	|	ПеремещениеОСОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА ПеремещениеОСОС.Количество = 0
	|			ТОГДА 1
	|		ИНАЧЕ ПеремещениеОСОС.Количество
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА ПеремещениеОСОС.ОсновноеСредство.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ПеремещениеОСОС.ОсновноеСредство.Наименование
	|		ИНАЧЕ ПеремещениеОСОС.ОсновноеСредство.НаименованиеПолное
	|	КОНЕЦ КАК НаименованиеОС,
	|	ПеремещениеОСОС.ОсновноеСредство.ДатаВыпуска КАК ГодВыпуска,
	|	ЕСТЬNULL(ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер, ""-"") КАК ИнвНомер,
	|	ВЫБОР
	|		КОГДА ПеремещениеОСОС.ОсновноеСредство.ЕдиницаУчета <> ЗНАЧЕНИЕ(Перечисление.ЕдиницыУчетаОС.ГрупповойОбъект)
	|			ТОГДА ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокДт, 0)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ХозрасчетныйОстаткиГрупповыхОС.КоличествоОстатокДт, 0) = 0
	|					ТОГДА 0
	|				ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(ХозрасчетныйОстаткиГрупповыхОС.СуммаОстатокДт, 0) / ХозрасчетныйОстаткиГрупповыхОС.КоличествоОстатокДт КАК ЧИСЛО(15, 2))
	|			КОНЕЦ
	|	КОНЕЦ КАК ЦенаПеремещения,
	|	ВЫБОР
	|		КОГДА ПеремещениеОСОС.ОсновноеСредство.ЕдиницаУчета <> ЗНАЧЕНИЕ(Перечисление.ЕдиницыУчетаОС.ГрупповойОбъект)
	|			ТОГДА ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокДт, 0)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ХозрасчетныйОстаткиГрупповыхОС.КоличествоОстатокДт, 0) = 0
	|					ТОГДА 0
	|				ИНАЧЕ ВЫРАЗИТЬ(ЕСТЬNULL(ХозрасчетныйОстаткиГрупповыхОС.СуммаОстатокДт, 0) / ХозрасчетныйОстаткиГрупповыхОС.КоличествоОстатокДт * ПеремещениеОСОС.Количество КАК ЧИСЛО(15, 2))
	|			КОНЕЦ
	|	КОНЕЦ КАК СуммаПеремещения
	|ИЗ
	|	Документ.ПеремещениеОС.ОС КАК ПеремещениеОСОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	|		ПО (ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство = ПеремещениеОСОС.ОсновноеСредство)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОстаткиГрупповыхОС КАК ХозрасчетныйОстаткиГрупповыхОС
	|		ПО ПеремещениеОСОС.ОсновноеСредство = ХозрасчетныйОстаткиГрупповыхОС.Субконто1
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаБухгалтерскогоУчетаОССрезПоследних КАК СчетаБухгалтерскогоУчетаОССрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОстатки КАК ХозрасчетныйОстатки
	|			ПО (ХозрасчетныйОстатки.Субконто1 = СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство)
	|				И (ХозрасчетныйОстатки.Счет = СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета)
	|		ПО (СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = ПеремещениеОСОС.ОсновноеСредство)
	|ГДЕ
	|	ПеремещениеОСОС.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НС";
	
	ПервыйДокумент = Истина;
	
	Пока Шапка.Следующий() Цикл
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Запрос.УстановитьПараметр("Ссылка",      Шапка.Ссылка);
		Запрос.УстановитьПараметр("Организация", Шапка.Организация);
		Запрос.УстановитьПараметр("Подразделение", Шапка.ПодразделениеОрганизации);
		Запрос.УстановитьПараметр("Период",      Новый Граница(Шапка.МоментВремени, ВидГраницы.Исключая));
		
		ОбластьШапка1.Параметры.Заполнить(Шапка);
		
		СведенияОбОрганизации    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");
		
		ДанныеЗаполнения = Новый Структура;
		ДанныеЗаполнения.Вставить("Организация", ПредставлениеОрганизации);
		ДанныеЗаполнения.Вставить("НомерДок",
			ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерДок, Истина, Ложь));
		
		ОбластьШапка1.Параметры.Заполнить(ДанныеЗаполнения);
			
		ТабличныйДокумент.Вывести(ОбластьШапка1);

		ИтогСумма = 0;
		ВыборкаПоОС = Запрос.Выполнить().Выбрать();

		Пока ВыборкаПоОС.Следующий() Цикл
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаПоОС);
			
			СтрокаСПодвалом = Новый Массив;
			СтрокаСПодвалом.Добавить(ОбластьСтрока);
			СтрокаСПодвалом.Добавить(ОбластьПодвалСтраницыИтог);
			
			Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, СтрокаСПодвалом) Тогда
				ТабличныйДокумент.Вывести(ОбластьПодвалСтраницы);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьШапка2);
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			ИтогСумма = ИтогСумма + ВыборкаПоОС.СуммаПеремещения;
			
		КонецЦикла;

		ДанныеЗаполнения = Новый Структура;
		ДанныеЗаполнения.Вставить("ИтогСумма", ИтогСумма);
		ОбластьПодвалСтраницыИтог.Параметры.Заполнить(ДанныеЗаполнения);
		ТабличныйДокумент.Вывести(ОбластьПодвалСтраницыИтог);
		
		Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ОбластьПодвалОписание) Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОбластьПодвалОписание);
		
		Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабличныйДокумент, ОбластьПодвал) Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ДанныеЗаполнения = Новый Структура;
		Если ЗначениеЗаполнено(Шапка.МОЛСдатчик) Тогда
			
			ДанныеМОЛ = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛиц(Шапка.Организация, Шапка.МОЛСдатчик, Шапка.Дата);
			
			ДанныеЗаполнения.Вставить("СдатчикДолжность", ДанныеМОЛ[0].Должность);
			ДанныеЗаполнения.Вставить("СдатчикРасшифровкаПодписи", ДанныеМОЛ[0].Представление);
			ДанныеЗаполнения.Вставить("СдатчикТабельныйНомер", ДанныеМОЛ[0].ТабельныйНомер);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Шапка.МОЛПолучатель) Тогда
			
			ДанныеМОЛ = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛиц(Шапка.Организация, Шапка.МОЛПолучатель, Шапка.Дата);
			
			ДанныеЗаполнения.Вставить("ПолучательДолжность", ДанныеМОЛ[0].Должность);
			ДанныеЗаполнения.Вставить("ПолучательРасшифровкаПодписи", ДанныеМОЛ[0].Представление);
			ДанныеЗаполнения.Вставить("ПолучательТабельныйНомер", ДанныеМОЛ[0].ТабельныйНомер);
		КонецЕсли;
		
		ПодразделениеОтветственныхЛиц = Шапка.ПодразделениеОрганизации;
		ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Организация, Шапка.Дата, ПодразделениеОтветственныхЛиц);
		
		ДанныеЗаполнения.Вставить("ГлавБух", ОтветственныеЛица.ГлавныйБухгалтерПредставление);
		ОбластьПодвал.Параметры.Заполнить(ДанныеЗаполнения);
		
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ПолеСверху         = 0;
	ТабличныйДокумент.ПолеСнизу          = 0;
	ТабличныйДокумент.ПолеСправа         = 0;
	
	СисИнфо = Новый СистемнаяИнформация;
	Если ПустаяСтрока(СисИнфо.ИнформацияПрограммыПросмотра) Тогда 
		ТабличныйДокумент.ПолеСлева          = 0;
	Иначе
		ТабличныйДокумент.ПолеСлева          = 10;
	КонецЕсли;

	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиОбновления

Процедура ЗаполнитьПустоеКоличество(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
	|	ПеремещениеОС.Ссылка КАК Ссылка,
	|	ПеремещениеОС.Дата КАК Дата
	|ИЗ
	|	Документ.ПеремещениеОС.ОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеОС КАК ПеремещениеОС
	|		ПО ТаблицаОС.Ссылка = ПеремещениеОС.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК СправочникОС
	|		ПО ТаблицаОС.ОсновноеСредство = СправочникОС.Ссылка
	|ГДЕ
	|	ТаблицаОС.Количество = 0
	|	И СправочникОС.ЕдиницаУчета <> ЗНАЧЕНИЕ(Перечисление.ЕдиницыУчетаОС.ГрупповойОбъект)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ,
	|	Ссылка УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Ложь;
	ОбъектовОбработано = 0;
	ПроблемныхОбъектов = 0;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ОбъектовОбработано = ОбъектовОбработано + 1;
		
		НачатьТранзакцию();
		
		// Блокируем объект от изменения другими сеансами.
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Документ.ПеремещениеОС");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
		
		Попытка
		
			Блокировка.Заблокировать();
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			
			Для Каждого СтрокаТЧ Из ДокументОбъект.ОС Цикл
				СтрокаТЧ.Количество = ?(СтрокаТЧ.Количество = 0, 1, СтрокаТЧ.Количество);
			КонецЦикла;
		
			// Запись обработанного объекта.
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			ЗафиксироватьТранзакцию();
		Исключение
			// Если не удалось обработать какой-либо объект, повторяем попытку снова.
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			ОтменитьТранзакцию();
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'В процедуре Документы.ПеремещениеОС.ЗаполнитьПустоеКоличество() не удалось обработать элемент по причине:
					|%1'"),
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Документы.ПеремещениеОС, Выборка.Ссылка, ТекстСообщения);
				
		КонецПопытки; 
		
	КонецЦикла;
	
	Если ПроблемныхОбъектов > 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'В процедуре Документы.ПеремещениеОС.ЗаполнитьПустоеКоличество() не удалось обработать все элементы: в %1 из %2 возникли ошибки'"),
				ПроблемныхОбъектов,
				ОбъектовОбработано);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Информация,
			Метаданные.Документы.ПеремещениеОС, ,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Процедура Документы.ПеремещениеОС.ЗаполнитьПустоеКоличество() обработала очередную порцию: %1 элементов'"), 
					ОбъектовОбработано));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли