
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.Ключ.Пустая() Тогда
		ЗаполнитьРеквизитыИзПараметровФормы(ЭтотОбъект);
		УстановитьСостояниеДокумента();
	КонецЕсли;
	
	ТекущаяДатаДокумента = Объект.Дата;
	ТекущаяОрганизация = Объект.Организация;
	ВерсияПостановления1137 = УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(Объект.Дата);
	
	ОбновитьПодвал(ЭтотОбъект);
	УправлениеФормой(ЭтотОбъект);
	
	//Загружаем полную таблицу кодов операций, потом будет фильтрация, согласно дате документа
	КлассификаторXML = ПолучитьОбщийМакет("ПереченьКодовОпераций0").ПолучитьТекст();
	Чтение = Новый ЧтениеXML;
	Чтение.УстановитьСтроку(КлассификаторXML);
	ТаблицаКодовОпераций0.Загрузить(СериализаторXDTO.ПрочитатьXML(Чтение));
	
	НеПодтвержденаСтавка0 = Перечисления.СобытияПоНДСПродажи.НеПодтвержденаСтавка0;
	
	УстановитьУсловноеОформление();
	
	// ИнтернетПоддержкаПользователей.Новости.КонтекстныеНовости_ПриСозданииНаСервере
	ИдентификаторыСобытийПриОткрытии = "ПриОткрытии";
	ОбработкаНовостейПереопределяемый.КонтекстныеНовости_ПриСозданииНаСервере(
		ЭтотОбъект,
		"БП.Документ.ПодтверждениеНулевойСтавкиНДС",
		"ФормаДокумента",
		НСтр("ru='Новости: Подтверждение нулевой ставки НДС'"),
		ИдентификаторыСобытийПриОткрытии
	);
	// Конец ИнтернетПоддержкаПользователей.Новости.КонтекстныеНовости_ПриСозданииНаСервере
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ИнтернетПоддержкаПользователей.Новости.ПриОткрытии
	ОбработкаНовостейКлиент.КонтекстныеНовости_ПриОткрытии(ЭтотОбъект);
	// Конец ИнтернетПоддержкаПользователей.Новости.ПриОткрытии
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "РедактированиеСпискаКодовОпераций" Тогда 
		
		КлючПоиска = Новый Структура("КлючСтроки", Параметр.КлючСтроки);
		
		МассивСтрокКодыОперацийНалоговаяБаза = Объект.КодыОперацийНалоговаяБаза.НайтиСтроки(КлючПоиска);
		
		Для Каждого СтрокаТЧ Из МассивСтрокКодыОперацийНалоговаяБаза Цикл
			Объект.КодыОперацийНалоговаяБаза.Удалить(СтрокаТЧ);
		КонецЦикла;
		
		АдресТаблицыКодыОперацийНалоговаяБаза = Параметр.АдресТаблицыКодыОперацийНалоговаяБаза;
		ЗагрузитьКодыОперацийИзХранилища(Параметр.КлючСтроки, Параметр.ОтредактированыСтрокиКодовОпераций);
		
	Иначе
		
		ОбщегоНазначенияБПКлиент.ОбработкаОповещенияФормыДокумента(ЭтотОбъект, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
		// ИнтернетПоддержкаПользователей.Новости.ОбработкаОповещения
		ОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
		// Конец ИнтернетПоддержкаПользователей.Новости.ОбработкаОповещения
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Оповестить("СостояниеРегламентнойОперации", 
		?(Объект.Проведен, ПредопределенноеЗначение("Перечисление.ВидыСостоянийРегламентныхОпераций.Выполнено"), 
						   ПредопределенноеЗначение("Перечисление.ВидыСостоянийРегламентныхОпераций.НеВыполнено")));
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	УстановитьСостояниеДокумента();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Отказ = ПроверкаЗаполнения();
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = УчетНДСКлиент.ПроверкаЗаписиСтрокТабличныхЧастей(ЭтотОбъект,
			ПараметрыПереносаСтрокТабличныхЧастей(ПараметрыЗаписи.РежимЗаписи));
	
	Если Отказ Тогда
		Возврат;     // Чтобы не вызывалось по умолчанию платформеннная ошибка "Табличная часть содержит более 99999 строк"
	КонецЕсли;
	
	Если ПараметрыЗаписи.РежимЗаписи = ПредопределенноеЗначение("РежимЗаписиДокумента.Проведение") Тогда
		КлючеваяОперация = "ПроведениеПодтверждениеНулевойСтавкиНДС";
		ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ПроведениеСервер.УстановитьПризнакПроверкиРеквизитов(Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДатаДокумента) Тогда
		// Изменение времени не влияет на поведение документа.
		ТекущаяДатаДокумента = Объект.Дата;
		Возврат;
	КонецЕсли;

	// Общие проверки условий по датам.
	ТребуетсяВызовСервера = ОбщегоНазначенияБПКлиент.ТребуетсяВызовСервераПриИзмененииДатыДокумента(Объект.Дата, 
		ТекущаяДатаДокумента);
		
	// Если определили, что изменение даты может повлиять на какие-либо параметры, 
	// то передаем обработку на сервер.
	Если ТребуетсяВызовСервера Тогда
		Если Объект.Состав.Количество() > 0 Тогда
			ТекстВопроса = НСтр("ru = 'Табличная часть будет очищена. Продолжить?'");
			Оповещение = Новый ОписаниеОповещения("ВопросОчиститьТабличнуюЧастьЗавершение", ЭтотОбъект, ТекущаяДатаДокумента);
			ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Иначе
			ДатаПриИзмененииНаСервере();
			УправлениеФормой(ЭтотОбъект);
		КонецЕсли;
	Иначе
		// Запомним новую дату документа.
		ТекущаяДатаДокумента = Объект.Дата;
		УправлениеФормой(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если Объект.Состав.Количество() <> 0 Тогда 
		ТекстВопроса = НСтр("ru = 'Необходимо очистить табличную часть. Продолжить?'");
		Оповещение = Новый ОписаниеОповещения("ВопросПриИзмененииОрганизацииЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	ИначеЕсли ТекущаяОрганизация <> Объект.Организация Тогда
		ТекущаяОрганизация = Объект.Организация;
		УправлениеФормой(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСостав

&НаКлиенте
Процедура СоставПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекДанныеСостав = Элементы.Состав.ТекущиеДанные;
	
	Если ТекДанныеСостав <> Неопределено Тогда
	
		Если НоваяСтрока Тогда
			
			ТекДанныеСостав.КлючСтроки = Новый УникальныйИдентификатор;
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СоставДокументОтгрузкиПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Состав.ТекущиеДанные;
	ДанныеСтрокиТабличнойЧасти = Новый Структура(
		"ДокументОтгрузки,Событие,СуммаНДС,КлючСтроки");
	ЗаполнитьЗначенияСвойств(ДанныеСтрокиТабличнойЧасти, ТекущаяСтрока);
	
	ДанныеСтрокиТабличнойЧасти = СоставДокументОтгрузкиПриИзмененииСервер(ДанныеСтрокиТабличнойЧасти);
	ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ДанныеСтрокиТабличнойЧасти);

КонецПроцедуры

&НаКлиенте
Процедура СоставДокументОтгрузкиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Тип") Тогда
		Возврат;
	КонецЕсли;

	ПараметрыОбработки = ПроверкаВыбраногоДокументаОтгрузкиСервер(ВыбранноеЗначение);
	
	Если ПараметрыОбработки.ПредупреждениеОбОшибке <> Неопределено Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьПредупреждение( , ПараметрыОбработки.ПредупреждениеОбОшибке);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СоставСобытиеПриИзменении(Элемент)
	
	Если Элементы.Состав.ТекущиеДанные <> Неопределено Тогда
		
		Если Элементы.Состав.ТекущиеДанные.КлючСтроки = "" Тогда
			
			ТекДанныеСостав = Элементы.Состав.ТекущиеДанные;
			ТекДанныеСостав.КлючСтроки = Новый УникальныйИдентификатор;
			
		КонецЕсли;
		
		ТекущаяСтрока = Элементы.Состав.ТекущиеДанные;
		ДанныеСтрокиТабличнойЧасти = Новый Структура(
			"Событие,СтавкаНДС,СуммаНДС,ПродажиСНДС0,СчетФактураВыданный,ДокументОтгрузки,
			|Покупатель,КлючСтроки,КодыОперацийПредставление,ОтредактированыСтрокиКодовОпераций");
			ЗаполнитьЗначенияСвойств(ДанныеСтрокиТабличнойЧасти, ТекущаяСтрока);

		
		Если ТекущаяСтрока.ОтредактированыСтрокиКодовОпераций Тогда
			//Задать вопрос пользователю
			Оповещение = Новый ОписаниеОповещения("ОбработкаВопросаПоКодамОпераций", ЭтотОбъект, ДанныеСтрокиТабличнойЧасти);
			ПоказатьВопрос(Оповещение, НСтр("ru = 'В данной строке коды операций отредактированы вручную. Выполнить перерасчет кодов операций после смены события?'"), РежимДиалогаВопрос.ДаНет);
		Иначе
			
			ДанныеСтрокиТабличнойЧасти = СоставСобытиеПриИзмененииСервер(ДанныеСтрокиТабличнойЧасти);
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ДанныеСтрокиТабличнойЧасти);
		
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВопросаПоКодамОпераций(Результат, ДанныеСтрокиТабличнойЧасти) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ДанныеСтрокиТабличнойЧасти = СоставСобытиеПриИзмененииСервер(ДанныеСтрокиТабличнойЧасти);
		ДанныеСтрокиТабличнойЧасти.ОтредактированыСтрокиКодовОпераций = Ложь;
		
	Иначе
		
		ДанныеСтрокиТабличнойЧасти = СоставСобытиеПриИзмененииСервер(ДанныеСтрокиТабличнойЧасти, Ложь);
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Элементы.Состав.ТекущиеДанные, ДанныеСтрокиТабличнойЧасти);
	
КонецПроцедуры

&НаКлиенте
Процедура СоставПриИзменении(Элемент)
	
	ТекДанные = Элементы.Состав.ТекущиеДанные;
	
	Если ТекДанные <> Неопределено Тогда
		
		Если ТекДанные.КлючСтроки = "" Тогда
			
			ТекДанные.КлючСтроки = Новый УникальныйИдентификатор;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОбновитьПодвал(ЭтотОбъект);
	УправлениеФормой(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура СоставСтавкаНДСПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Состав.ТекущиеДанные;
	ТекущаяСтрока.СуммаНДС = УчетНДСКлиентСервер.РассчитатьСуммуНДС(ТекущаяСтрока.ПродажиСНДС0, 
								Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(ТекущаяСтрока.СтавкаНДС));

КонецПроцедуры

&НаКлиенте
Процедура СоставКодыОперацийПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Элементы.Состав.ТекущиеДанные <> Неопределено Тогда
		Если Элементы.Состав.ТекущиеДанные.КлючСтроки = "" Тогда
				
			ТекДанныеСостав = Элементы.Состав.ТекущиеДанные;
			ТекДанныеСостав.КлючСтроки = Новый УникальныйИдентификатор;
			
		КонецЕсли;
	КонецЕсли;
	
	ВыбраннаяСтрока = Элементы.Состав.ТекущаяСтрока;
	
	ОткрытьФормуКодыОпераций(ВыбраннаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура СоставВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекДанныеСостав = Элементы.Состав.ТекущиеДанные;
	
	Если ТекДанныеСостав <> Неопределено Тогда
	
		Если Поле.Имя = "СоставКодыОперацийПредставление" Тогда
			
			Если Элементы.Состав.ТекущиеДанные.КлючСтроки = "" Тогда
				
				ТекДанныеСостав.КлючСтроки = Новый УникальныйИдентификатор;
			
			КонецЕсли;
		
			ОткрытьФормуКодыОпераций(ВыбраннаяСтрока);
			СтандартнаяОбработка = Ложь;
			
		КонецЕсли;
		
		Если Поле.Имя = "СоставПродажиСНДС0" Тогда
			Если ТипЗнч(ТекДанныеСостав.ДокументОтгрузки) = Тип("ДокументСсылка.ДокументРасчетовСКонтрагентом")
				И ТекДанныеСостав.Событие = НеПодтвержденаСтавка0 Тогда
				Оповещение = Новый ОписаниеОповещения("ПослеВводаПродажиСНДС0", ЭтотОбъект);
				ПоказатьВводЧисла(Оповещение,0, "Введите ""Продажи с НДС 0%""", 15, 2);
			КонецЕсли;
		КонецЕсли;
		
		Если Поле.Имя = "СоставСуммаНДС" Тогда
			Если ТипЗнч(ТекДанныеСостав.ДокументОтгрузки) = Тип("ДокументСсылка.ДокументРасчетовСКонтрагентом")
				И ТекДанныеСостав.Событие = НеПодтвержденаСтавка0 Тогда
				Оповещение = Новый ОписаниеОповещения("ПослеВводаНДС", ЭтотОбъект);
				ПоказатьВводЧисла(Оповещение,0, "Введите ""НДС""", 15, 2);
			КонецЕсли;
		КонецЕсли;
	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаПродажиСНДС0(Число, Параметры) Экспорт
	
	Если Число <> Неопределено Тогда
		ТекДанныеСостав = Элементы.Состав.ТекущиеДанные;
		Если ТекДанныеСостав <> Неопределено Тогда
			ТекДанныеСостав.ПродажиСНДС0 = Число;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаНДС(Число, Параметры) Экспорт
	
	Если Число <> Неопределено Тогда
		ТекДанныеСостав = Элементы.Состав.ТекущиеДанные;
		Если ТекДанныеСостав <> Неопределено Тогда
			ТекДанныеСостав.СуммаНДС = Число;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоставПередУдалением(Элемент, Отказ)
	
	ВыделенныеСтроки = Элементы.Состав.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Для Каждого ИдСтроки Из ВыделенныеСтроки Цикл
		ТекДанные = Объект.Состав.НайтиПоИдентификатору(ИдСтроки);
		Если ТекДанные <> Неопределено Тогда
			// Необходимо очистить дополнительные сведения
			НоваяСтрока = ТаблицаУдаленныхКлючей.Добавить();
			НоваяСтрока.КлючСтроки = ТекДанные.КлючСтроки;
		КонецЕсли;
	КонецЦикла;
	ПодключитьОбработчикОжидания("Подключаемый_УдалитьСвязанныеЗаписи", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_УдалитьСвязанныеЗаписи()
	
	УдалитьСвязанныеЗаписиНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСвязанныеЗаписиНаСервере()
	
	Для Каждого СтрокаКлюча Из ТаблицаУдаленныхКлючей Цикл
		
		КлючПоиска = Новый Структура("КлючСтроки", СтрокаКлюча.КлючСтроки);
		
		МассивСтрок = Объект.КодыОперацийНалоговаяБаза.НайтиСтроки(КлючПоиска);
		Для Каждого СтрокаТЧ Из МассивСтрок Цикл
			Объект.КодыОперацийНалоговаяБаза.Удалить(СтрокаТЧ);
		КонецЦикла;
		
	КонецЦикла;
	
	ТаблицаУдаленныхКлючей.Очистить();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если Объект.Проведен Тогда
		ТекстВопроса = НСтр("ru='Проведенный документ не может быть заполнен автоматически. 
			|Отменить проведение документа для заполнения?'"); 
		Оповещение = Новый ОписаниеОповещения("ВопросЗаполнитьЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	Иначе
		ЗаполнитьДокумент();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьКонтекстныеНовости(Команда)

	ОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаКомандыНовости(
		ЭтотОбъект,
		Команда
	);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ПараметрыОтбора = Новый Структура("Событие", ПредопределенноеЗначение("Перечисление.СобытияПоНДСПродажи.НеПодтвержденаСтавка0"));
	МассивНеподтверждений = Объект.Состав.НайтиСтроки(ПараметрыОтбора);
	
	Форма.ЕстьНеподтверждениеСтавки = МассивНеподтверждений.Количество() <> 0;
	
	Форма.КлассифицироватьНоменклатуруПоОперациям0 = УчетНДСВызовСервера.КлассифицироватьНоменклатуруПоОперациям0(Объект.Дата, Объект.Организация);
	Элементы.СоставГруппаКодыОпераций.Видимость = Форма.КлассифицироватьНоменклатуруПоОперациям0;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьРеквизитыИзПараметровФормы(Форма)
	
	ПараметрыЗаполненияФормы = Неопределено;
	
	Если Форма.Параметры.Свойство("ПараметрыЗаполненияФормы",ПараметрыЗаполненияФормы) Тогда
		ЗаполнитьЗначенияСвойств(Форма.Объект,ПараметрыЗаполненияФормы);
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПодвал(Форма)
	
	Объект   			  = Форма.Объект;
	Форма.НадписьВсего 	  = Объект.Состав.Итог("ПродажиСНДС0");
	Форма.НадписьВсегоНДС = Объект.Состав.Итог("СуммаНДС");

КонецПроцедуры

&НаСервере
Функция СоставСобытиеПриИзмененииСервер(ДанныеСтрокиТабличнойЧасти, РассчитатьКодыОпераций = Истина)
	
	Если ДанныеСтрокиТабличнойЧасти.Событие = Перечисления.СобытияПоНДСПродажи.НеПодтвержденаСтавка0 Тогда
		
		Если ВерсияПостановления1137 >= 3 Тогда
			CуммыДокумента = ПолучитьСуммыПоДокументуОтгрузки(ДанныеСтрокиТабличнойЧасти, РассчитатьКодыОпераций);
			ДанныеСтрокиТабличнойЧасти.СуммаНДС = CуммыДокумента.СуммаНДС;
			ДанныеСтрокиТабличнойЧасти.ПродажиСНДС0 = CуммыДокумента.ПродажиСНДС0;
			
		Иначе
			ДанныеСтрокиТабличнойЧасти.СтавкаНДС = УчетНДСКлиентСервер.СтавкаНДСПоУмолчанию(Объект.Дата);
			ДанныеСтрокиТабличнойЧасти.СуммаНДС = УчетНДСКлиентСервер.РассчитатьСуммуНДС(ДанныеСтрокиТабличнойЧасти.ПродажиСНДС0, 
				Ложь, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(ДанныеСтрокиТабличнойЧасти.СтавкаНДС))
		КонецЕсли;
			
	Иначе
		ДанныеСтрокиТабличнойЧасти.СтавкаНДС = Перечисления.СтавкиНДС.ПустаяСсылка();
		ДанныеСтрокиТабличнойЧасти.СчетФактураВыданный = Документы.СчетФактураВыданный.ПустаяСсылка();
		ДанныеСтрокиТабличнойЧасти.СуммаНДС = 0;
		
		Если ВерсияПостановления1137 >= 3 Тогда
			// Вычисляем коды операций
			CуммыДокумента = ПолучитьСуммыПоДокументуОтгрузки(ДанныеСтрокиТабличнойЧасти, РассчитатьКодыОпераций);
			ДанныеСтрокиТабличнойЧасти.ПродажиСНДС0 = CуммыДокумента.ПродажиСНДС0;
			
		Иначе
			// Очищаем СуммаНДС в связной ТЧ КодыОпераций
			КлючПоиска = Новый Структура("КлючСтроки", ДанныеСтрокиТабличнойЧасти.КлючСтроки);
			СтрокиКодовОпераций = Объект.КодыОперацийНалоговаяБаза.НайтиСтроки(КлючПоиска);
			
			Для Каждого СтрокаКодаОперации Из СтрокиКодовОпераций Цикл
				СтрокаКодаОперации.СуммаНДС = 0;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ДанныеСтрокиТабличнойЧасти;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьДокумент(ОтменитьПроведение = Ложь)
	
	// 1. Запуск фонового задания на сервере.
	ДлительнаяОперация = ЗаполнитьДокументНаСервере();
	
	// 2. Подключение обработчика завершения фонового задания.
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	Оповещение = Новый ОписаниеОповещения("ЗаполнитьДокументЗавершение", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗаполнитьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьДокумент();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьДокументНаСервере()
	
	Если Объект.Проведен Тогда
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.ОтменаПроведения));
	КонецЕсли;
	
	Объект.Состав.Очистить();
	Объект.КодыОперацийНалоговаяБаза.Очистить();
	
	ПараметрыЗначений = Новый Структура("Организация, Дата, КлассифицироватьНоменклатуруПоОперациям0, ТаблицаКодовОпераций0",
			Объект.Организация, Объект.Дата, КлассифицироватьНоменклатуруПоОперациям0, ДанныеФормыВЗначение(ТаблицаКодовОпераций0,Тип("ТаблицаЗначений")));
			
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияПроцедуры();
	АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	
	Возврат ДлительныеОперации.ВыполнитьПроцедуру(ПараметрыВыполнения, 
												"Документы.ПодтверждениеНулевойСтавкиНДС.ЗаполнитьДокумент",
												ПараметрыЗначений, АдресХранилища);

КонецФункции

&НаСервере
Процедура ЗагрузитьПодготовленныеДанные()
	
	СтруктураДанных = ПолучитьИзВременногоХранилища(АдресХранилища);
	
	Если ТипЗнч(СтруктураДанных) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Состав.Загрузить(СтруктураДанных.Состав);
	
	Если СтруктураДанных.Свойство("КодыОперацийНалоговаяБаза") Тогда
		 Объект.КодыОперацийНалоговаяБаза.Загрузить(СтруктураДанных.КодыОперацийНалоговаяБаза);
	КонецЕсли;
	
	ОбновитьПодвал(ЭтотОбъект);
	УправлениеФормой(ЭтотОбъект);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДокументЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда // Пользователь отменил задание.
		Возврат;
	КонецЕсли;

	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		
	КонецЕсли;

	ЗагрузитьПодготовленныеДанные();
	УдалитьИзВременногоХранилища(АдресХранилища);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросОчиститьТабличнуюЧастьЗавершение(Результат, ТекущаяДатаДокумента) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ДатаПриИзмененииНаСервере();
		Объект.Состав.Очистить();
	Иначе
		Объект.Дата = ТекущаяДатаДокумента;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Функция ПараметрыПереносаСтрокТабличныхЧастей(РежимЗаписи)
	
	ПараметрыСтрокТЧ = Новый Структура;

	ПодчиненныеТабличныеЧасти = Новый Массив;
	ПодчиненныеТабличныеЧасти.Добавить("КодыОперацийНалоговаяБаза");
	
	ПараметрыСтрокТЧ.Вставить("ПодчиненныеТабличныеЧасти", ПодчиненныеТабличныеЧасти);
	ПараметрыСтрокТЧ.Вставить("КоличествоСтрокДляПереноса", 0);
	
	ТабличныеЧасти = Новый Соответствие;
	ТабличныеЧасти.Вставить("Состав", ПараметрыСтрокТЧ);
	
	РеквизитыДокумента = "Дата, Организация, СтатьяПрочихРасходов, РучнаяКорректировка, Ответственный";

	ПараметрыПереносаСтрокТЧ = Новый Структура;
	ПараметрыПереносаСтрокТЧ.Вставить("ТабличныеЧасти", ТабличныеЧасти);
	ПараметрыПереносаСтрокТЧ.Вставить("РеквизитыДокумента", РеквизитыДокумента);
	ПараметрыПереносаСтрокТЧ.Вставить("РежимЗаписи", РежимЗаписи);
	
	Возврат ПараметрыПереносаСтрокТЧ;
	
КонецФункции

&НаКлиенте
Процедура ВопросПеренестиСтрокиТабличныхЧастейВДругойДокументЗавершение(Результат, ПараметрыПереносаСтрокТЧ) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		УчетНДСКлиент.ПеренестиСтрокиТабличныхЧастейВДругойДокумент(ПараметрыПереносаСтрокТЧ);
	КонецЕсли;
	
	ЭтотОбъект.Прочитать();
	
КонецПроцедуры

&НаСервере
Функция ПроверкаЗаполнения()
	
	Отказ = Ложь;
	
	Если ЭтотОбъект.КлассифицироватьНоменклатуруПоОперациям0 Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТаблицаСостав", Объект.Состав.Выгрузить(,"КлючСтроки,НомерСтроки,ПродажиСНДС0,СуммаНДС"));
		Запрос.УстановитьПараметр("ТаблицаКодыОпераций", Объект.КодыОперацийНалоговаяБаза.Выгрузить(,"КлючСтроки,НомерСтроки,ПродажиСНДС0,СуммаНДС"));
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаСостав.КлючСтроки КАК КлючСтроки,
		|	ТаблицаСостав.НомерСтроки КАК НомерСтроки,
		|	ТаблицаСостав.ПродажиСНДС0 КАК ПродажиСНДС0,
		|	ТаблицаСостав.СуммаНДС КАК СуммаНДС
		|ПОМЕСТИТЬ СоставПроверкиСумм
		|ИЗ
		|	&ТаблицаСостав КАК ТаблицаСостав
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КлючСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаКодыОпераций.КлючСтроки КАК КлючСтроки,
		|	ТаблицаКодыОпераций.ПродажиСНДС0 КАК ПродажиСНДС0,
		|	ТаблицаКодыОпераций.СуммаНДС КАК СуммаНДС
		|ПОМЕСТИТЬ КодыОперацийСтрокиСумм
		|ИЗ
		|	&ТаблицаКодыОпераций КАК ТаблицаКодыОпераций
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КлючСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(КодыОперацийСтрокиСумм.ПродажиСНДС0) КАК ПродажиСНДС0,
		|	СУММА(КодыОперацийСтрокиСумм.СуммаНДС) КАК СуммаНДС,
		|	КодыОперацийСтрокиСумм.КлючСтроки КАК КлючСтроки
		|ПОМЕСТИТЬ КодыОперацийПроверкиСумм
		|ИЗ
		|	КодыОперацийСтрокиСумм КАК КодыОперацийСтрокиСумм
		|
		|СГРУППИРОВАТЬ ПО
		|	КодыОперацийСтрокиСумм.КлючСтроки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КлючСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КодыОперацийСтрокиСумм
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоставПроверкиСумм.НомерСтроки КАК НомерСтроки,
		|	""ПродажиСНДС0"" КАК Ошибка,
		|	СоставПроверкиСумм.ПродажиСНДС0 КАК СоставСумма,
		|	КодыОперацийПроверкиСумм.ПродажиСНДС0 КАК КодыОперацийСумма
		|ИЗ
		|	СоставПроверкиСумм КАК СоставПроверкиСумм
		|		Внутреннее СОЕДИНЕНИЕ КодыОперацийПроверкиСумм КАК КодыОперацийПроверкиСумм
		|		ПО СоставПроверкиСумм.КлючСтроки = КодыОперацийПроверкиСумм.КлючСтроки
		|			И СоставПроверкиСумм.ПродажиСНДС0 <> КодыОперацийПроверкиСумм.ПродажиСНДС0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СоставПроверкиСумм.НомерСтроки,
		|	""СуммаНДС"",
		|	СоставПроверкиСумм.СуммаНДС,
		|	КодыОперацийПроверкиСумм.СуммаНДС
		|ИЗ
		|	СоставПроверкиСумм КАК СоставПроверкиСумм
		|		Внутреннее СОЕДИНЕНИЕ КодыОперацийПроверкиСумм КАК КодыОперацийПроверкиСумм
		|		ПО СоставПроверкиСумм.КлючСтроки = КодыОперацийПроверкиСумм.КлючСтроки
		|			И СоставПроверкиСумм.СуммаНДС <> КодыОперацийПроверкиСумм.СуммаНДС
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СоставПроверкиСумм
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КодыОперацийПроверкиСумм";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			
			Выборка = РезультатЗапроса.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				Текст = СтрШаблон(НСтр("ru = 'В строке %1 значение %2 %3 по документу отгрузки не совпадает с суммарным значением %4 по кодам операций'"),
					Выборка.НомерСтроки,
					Выборка.Ошибка,
					Выборка.СоставСумма,
					Выборка.КодыОперацийСумма);
					
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					Текст,
					,
					"Состав[" + Выборка.НомерСтроки + "]." + Выборка.Ошибка,
					,
					Отказ);
					
			КонецЦикла;
				
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции

&НаСервере
Процедура ДатаПриИзмененииНаСервере()

	ВерсияПостановления1137 = УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(Объект.Дата);
	ТекущаяДатаДокумента = Объект.Дата;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСуммыПоДокументуОтгрузки(ДанныеСтрокиТабличнойЧасти, РассчитатьКодыОпераций = Истина) Экспорт
	
	КлючСтроки = ДанныеСтрокиТабличнойЧасти.КлючСтроки;
	ДокументОтгрузки = ДанныеСтрокиТабличнойЧасти.ДокументОтгрузки;
	Контрагент = ДанныеСтрокиТабличнойЧасти.Покупатель;
	Событие = ДанныеСтрокиТабличнойЧасти.Событие;
	
	СуммыПоДокументу = Новый Структура("СуммаНДС, ПродажиСНДС0");
	СуммыПоДокументу.СуммаНДС = 0;
	СуммыПоДокументу.ПродажиСНДС0 = 0;
	
	Если НЕ ЗначениеЗаполнено(ДокументОтгрузки) Тогда
		Возврат СуммыПоДокументу;
	КонецЕсли;
	
	ДанныеСчетаФактуры = Новый Структура(
		"СчетФактура,ВидСчетаФактуры,Контрагент,ДоговорКонтрагента,ИспользуетсяПостановлениеНДС1137,
		|НеподтверждениеНулевойСтавки,СводныйКомиссионный,НомерСтроки");
	
	ДанныеСчетаФактуры.Контрагент                       = Контрагент;
	ДанныеСчетаФактуры.ИспользуетсяПостановлениеНДС1137 = Истина;
	ДанныеСчетаФактуры.НеподтверждениеНулевойСтавки     = Истина;
	ДанныеСчетаФактуры.СводныйКомиссионный              = Ложь;
	ДанныеСчетаФактуры.НомерСтроки = 0;
	
	Если КлассифицироватьНоменклатуруПоОперациям0 Тогда
		
		ДокументОснование = Неопределено;
		
		Если ТипЗнч(ДокументОтгрузки) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
			
			ДокументОснование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОтгрузки, "ДокументОснование");
				
			Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
				Возврат 0;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ТипЗнч(ДокументОтгрузки) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах")
			ИЛИ ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") Тогда
			
			// Вычисляем по кодам операций налоговую базу и НДС по документу ОтчетКомиссионераОПродажах
			// У одного документа ОтчетКомиссионераОПродажах может быть несколько контрагентов.
			
			Если РассчитатьКодыОпераций Тогда
				
				КлючПоиска = Новый Структура("КлючСтроки", КлючСтроки);
				МассивСтрок = Объект.КодыОперацийНалоговаяБаза.НайтиСтроки(КлючПоиска);
				
				Для Каждого СтрокаТЧ Из МассивСтрок Цикл
					Объект.КодыОперацийНалоговаяБаза.Удалить(СтрокаТЧ);
				КонецЦикла;
				
				Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
					КодыОпераций = ВычислитьКодыОперацийПоОтчетуКомиссионераОПродажах(
								ДанныеФормыВЗначение(ТаблицаКодовОпераций0,Тип("ТаблицаЗначений")),
								Событие, ДокументОтгрузки, Объект.Организация, Контрагент, Объект.Дата, НеПодтвержденаСтавка0);
				Иначе
					КодыОпераций = ВычислитьКодыОперацийПоОтчетуКомиссионераОПродажах(
								ДанныеФормыВЗначение(ТаблицаКодовОпераций0,Тип("ТаблицаЗначений")),
								Событие, ДокументОснование, Объект.Организация, Контрагент, Объект.Дата, НеПодтвержденаСтавка0);
				КонецЕсли;
				
				Для Каждого СтрокаКодаОперации Из КодыОпераций Цикл
					
					НоваяСтрокаКодаОперации = Объект.КодыОперацийНалоговаяБаза.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаКодаОперации,СтрокаКодаОперации);
					НоваяСтрокаКодаОперации.КлючСтроки = КлючСтроки;
					
				КонецЦикла;
				
				СуммыПоДокументу.ПродажиСНДС0 = КодыОпераций.Итог("ПродажиСНДС0");
				
				Если Событие = НеПодтвержденаСтавка0 Тогда
					СуммыПоДокументу.СуммаНДС = КодыОпераций.Итог("СуммаНДС");
				КонецЕсли;
				
				ЗаполнитьКодыОпераций(ДанныеСтрокиТабличнойЧасти, КодыОпераций);
				
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(ДокументОтгрузки) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
			
			// Вычисляем по кодам операций налоговую базу и НДС по документу ОтчетОРозничныхПродажах
			// ОтчетОРозничныхПродажах используется при оформлении гостиничных услуг
			// Событие всегда равно ПодтвержденаСтавка0 по законодательству
			// В отчете нет информации по покупателям, только услуги за указанный период
			
			Если РассчитатьКодыОпераций Тогда
				
				КлючПоиска = Новый Структура("КлючСтроки", КлючСтроки);
				МассивСтрок = Объект.КодыОперацийНалоговаяБаза.НайтиСтроки(КлючПоиска);
				
				Для Каждого СтрокаТЧ Из МассивСтрок Цикл
					Объект.КодыОперацийНалоговаяБаза.Удалить(СтрокаТЧ);
				КонецЦикла;
				
				КодыОпераций = ВычислитьКодыОперацийПоОтчетуОРозничныхПродажах(
								ДанныеФормыВЗначение(ТаблицаКодовОпераций0,Тип("ТаблицаЗначений")),
								ДокументОтгрузки, Объект.Дата);
								
				Для Каждого СтрокаКодаОперации Из КодыОпераций Цикл
					
					НоваяСтрокаКодаОперации = Объект.КодыОперацийНалоговаяБаза.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаКодаОперации,СтрокаКодаОперации);
					НоваяСтрокаКодаОперации.КлючСтроки = КлючСтроки;
					
				КонецЦикла;
				
				СуммыПоДокументу.ПродажиСНДС0 = КодыОпераций.Итог("ПродажиСНДС0");
				
				ЗаполнитьКодыОпераций(ДанныеСтрокиТабличнойЧасти, КодыОпераций);
				
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(ДокументОтгрузки) = Тип("ДокументСсылка.ДокументРасчетовСКонтрагентом") Тогда
			
			Если РассчитатьКодыОпераций Тогда
				
				КлючПоиска = Новый Структура("КлючСтроки", КлючСтроки);
				МассивСтрок = Объект.КодыОперацийНалоговаяБаза.НайтиСтроки(КлючПоиска);
				
				Для Каждого СтрокаТЧ Из МассивСтрок Цикл
					Объект.КодыОперацийНалоговаяБаза.Удалить(СтрокаТЧ);
				КонецЦикла;
				
				ПродажиСНДС0 = ДанныеСтрокиТабличнойЧасти.ПродажиСНДС0;
				
				Если ПродажиСНДС0 <> 0 Тогда
					НоваяСтрокаКодаОперации = Объект.КодыОперацийНалоговаяБаза.Добавить();
					НоваяСтрокаКодаОперации.КодОперации = "1010400";
					НоваяСтрокаКодаОперации.КлючСтроки = КлючСтроки;
					НоваяСтрокаКодаОперации.ПродажиСНДС0 = ПродажиСНДС0;
					СуммыПоДокументу.ПродажиСНДС0 = ПродажиСНДС0;
				КонецЕсли;
				
				Если ДанныеСтрокиТабличнойЧасти.Свойство("КодыОперацийПредставление") Тогда
					ДанныеСтрокиТабличнойЧасти.КодыОперацийПредставление = "1010400";
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			
			// Случай, когда 1 документу отгрузки соответствует 1 покупатель
			
			Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОказаниеУслуг") Тогда
				// Отгрузка по ставке НДС 0% оформлена документом "Оказание услуг"
			
				РеквизитыСчетаФактуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОтгрузки, "ДоговорКонтрагента,ВидСчетаФактуры");
				
				ДанныеСчетаФактуры.ДоговорКонтрагента = РеквизитыСчетаФактуры.ДоговорКонтрагента;
				ДанныеСчетаФактуры.ВидСчетаФактуры    = РеквизитыСчетаФактуры.ВидСчетаФактуры;
				ДанныеСчетаФактуры.СчетФактура        = ДокументОтгрузки;
				ПараметрыДокумента                    = УчетНДС.ПодготовитьДанныеДляПечатиСчетовФактур(ДокументОснование, ДанныеСчетаФактуры);
			
			Иначе
			
				ДанныеСчетаФактуры.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
				ДанныеСчетаФактуры.СчетФактура        = Документы.СчетФактураВыданный.ПустаяСсылка();
				ПараметрыДокумента                    = УчетНДС.ПодготовитьДанныеДляПечатиСчетовФактур(ДокументОтгрузки, ДанныеСчетаФактуры);
			
			КонецЕсли;
			
			Если ПараметрыДокумента.Реквизиты <> Неопределено 
				И ПараметрыДокумента.ТаблицаДокумента <> Неопределено Тогда
				
				СуммыПоДокументу.ПродажиСНДС0 = ПараметрыДокумента.ТаблицаДокумента.Итог("СуммаБезНДС");
				
				Если Событие = НеПодтвержденаСтавка0 Тогда
					СуммыПоДокументу.СуммаНДС = ПараметрыДокумента.ТаблицаДокумента.Итог("СуммаНДС");
				КонецЕсли;
				
				//Вычисляем коды операций
				Если РассчитатьКодыОпераций Тогда
					
					КлючПоиска = Новый Структура("КлючСтроки", КлючСтроки);
					МассивСтрок = Объект.КодыОперацийНалоговаяБаза.НайтиСтроки(КлючПоиска);
					
					Для Каждого СтрокаТЧ Из МассивСтрок Цикл
						Объект.КодыОперацийНалоговаяБаза.Удалить(СтрокаТЧ);
					КонецЦикла;
					
					Если ТипЗнч(ДокументОтгрузки) = Тип("ДокументСсылка.ПередачаОС") Тогда
						
						НоваяСтрокаКодаОперации = Объект.КодыОперацийНалоговаяБаза.Добавить();
						НоваяСтрокаКодаОперации.КодОперации = ВычислитьКодОпераций("НеСырьевыеТоварыВДругиеСтраныОбщаяСтавкаНДС",
						ДанныеФормыВЗначение(ТаблицаКодовОпераций0,Тип("ТаблицаЗначений")), ДокументОтгрузки, Объект.Организация, Контрагент, Объект.Дата);
						НоваяСтрокаКодаОперации.ПродажиСНДС0 = ПараметрыДокумента.ТаблицаДокумента.Итог("СуммаБезНДС");
						НоваяСтрокаКодаОперации.НесырьевыеТовары = Истина;
						НоваяСтрокаКодаОперации.КлючСтроки = КлючСтроки;
							
						Если Событие = НеПодтвержденаСтавка0 Тогда
							НоваяСтрокаКодаОперации.СуммаНДС = ПараметрыДокумента.ТаблицаДокумента.Итог("СуммаНДС");
						КонецЕсли;
						
						Если ДанныеСтрокиТабличнойЧасти.Свойство("КодыОперацийПредставление") Тогда
							ДанныеСтрокиТабличнойЧасти.КодыОперацийПредставление = НоваяСтрокаКодаОперации.КодОперации;
						КонецЕсли;
						
					ИначеЕсли ТипЗнч(ДокументОтгрузки) = Тип("ДокументСсылка.РеализацияУслугПоПереработке") Тогда
						
						НоваяСтрокаКодаОперации = Объект.КодыОперацийНалоговаяБаза.Добавить();
						НоваяСтрокаКодаОперации.КодОперации = ВычислитьКодОпераций("ПереработкаТоваров",
						ДанныеФормыВЗначение(ТаблицаКодовОпераций0,Тип("ТаблицаЗначений")), ДокументОтгрузки, Объект.Организация, Контрагент, Объект.Дата);
						НоваяСтрокаКодаОперации.ПродажиСНДС0 = ПараметрыДокумента.ТаблицаДокумента.Итог("СуммаБезНДС");
						НоваяСтрокаКодаОперации.НесырьевыеТовары = Ложь;
						НоваяСтрокаКодаОперации.КлючСтроки = КлючСтроки;
						
						Если Событие = НеПодтвержденаСтавка0 Тогда
							НоваяСтрокаКодаОперации.СуммаНДС = ПараметрыДокумента.ТаблицаДокумента.Итог("СуммаНДС");
						КонецЕсли;
							
						Если ДанныеСтрокиТабличнойЧасти.Свойство("КодыОперацийПредставление") Тогда
							ДанныеСтрокиТабличнойЧасти.КодыОперацийПредставление = НоваяСтрокаКодаОперации.КодОперации;
						КонецЕсли;
						
					Иначе
							
						Если Событие = НеПодтвержденаСтавка0 Тогда
							
							ТаблицаНоменклатур = ПараметрыДокумента.ТаблицаДокумента.Скопировать(, "Товар,СуммаБезНДС,СуммаНДС");
							ТаблицаНоменклатур.Свернуть("Товар","СуммаБезНДС,СуммаНДС");
							
						Иначе
							
							ТаблицаНоменклатур = ПараметрыДокумента.ТаблицаДокумента.Скопировать(, "Товар,СуммаБезНДС");
							ТаблицаНоменклатур.Свернуть("Товар","СуммаБезНДС");
							
							Массив = Новый Массив;
							Массив.Добавить(Тип("Число"));
							ОписаниеТиповЧисло15_2 = Новый ОписаниеТипов(Массив, , Новый КвалификаторыЧисла(15,2));
							
							ТаблицаНоменклатур.Колонки.Добавить("СуммаНДС",ОписаниеТиповЧисло15_2);
							
						КонецЕсли;
							
						КодыОпераций = ВычислитьКодыОперацийПоДокументуОтгрузки(ТаблицаНоменклатур,
							ДанныеФормыВЗначение(ТаблицаКодовОпераций0,Тип("ТаблицаЗначений")), ДокументОтгрузки, Объект.Организация, Контрагент, Объект.Дата);
						
						// Добавляем обновленные строки ТЧ КодыОпераций
						
						Для Каждого СтрокаКодаОперации Из КодыОпераций Цикл
							
							НоваяСтрокаКодаОперации = Объект.КодыОперацийНалоговаяБаза.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрокаКодаОперации,СтрокаКодаОперации);
							НоваяСтрокаКодаОперации.КлючСтроки = КлючСтроки;
							
						КонецЦикла;
						
						ЗаполнитьКодыОпераций(ДанныеСтрокиТабличнойЧасти, КодыОпераций);
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		Если ТипЗнч(ДокументОтгрузки) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
		// Реализация по ставке НДС 0% оформлена документами "Оказание услуг" или "Отчет комиссионера (агента) о продажах"
			ДокументОснование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОтгрузки, "ДокументОснование");
			
			Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
				Возврат 0;
			КонецЕсли;
			
			РеквизитыСчетаФактуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОтгрузки, "ДоговорКонтрагента,ВидСчетаФактуры");
			
			ДанныеСчетаФактуры.ДоговорКонтрагента = РеквизитыСчетаФактуры.ДоговорКонтрагента;
			ДанныеСчетаФактуры.ВидСчетаФактуры    = РеквизитыСчетаФактуры.ВидСчетаФактуры;
			ДанныеСчетаФактуры.СчетФактура        = ДокументОтгрузки;
			ПараметрыДокумента                    = УчетНДС.ПодготовитьДанныеДляПечатиСчетовФактур(ДокументОснование, ДанныеСчетаФактуры);
			
		Иначе
			
			ДанныеСчетаФактуры.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
			ДанныеСчетаФактуры.СчетФактура        = Документы.СчетФактураВыданный.ПустаяСсылка();
			ПараметрыДокумента                    = УчетНДС.ПодготовитьДанныеДляПечатиСчетовФактур(ДокументОтгрузки, ДанныеСчетаФактуры);
			
		КонецЕсли;
			
		Если ПараметрыДокумента.Реквизиты <> Неопределено 
			И ПараметрыДокумента.ТаблицаДокумента <> Неопределено Тогда
			
			СуммыПоДокументу.ПродажиСНДС0 = ПараметрыДокумента.ТаблицаДокумента.Итог("СуммаБезНДС");
			
			Если Событие = НеПодтвержденаСтавка0 Тогда
				СуммыПоДокументу.СуммаНДС = ПараметрыДокумента.ТаблицаДокумента.Итог("СуммаНДС");
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СуммыПоДокументу;
	
КонецФункции

&НаСервереБезКонтекста
Функция ВычислитьКодыОперацийПоДокументуОтгрузки(ТаблицаНоменклатур, ТаблицаКодовОпераций0, ДокументОтгрузки, Организация, Контрагент, ДатаЗапроса)
	
	Если НЕ ЗначениеЗаполнено(ДатаЗапроса) Тогда
		
		ДатаЗапроса = ОбщегоНазначения.ТекущаяДатаПользователя();
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ОсновныеПараметрыЗапросаКодыОперацийПоСтавке0(Запрос, ДатаЗапроса, ТаблицаКодовОпераций0,
													Контрагент, Организация, ДокументОтгрузки);
	
	Запрос.Параметры.Вставить("ТаблицаНоменклатур",     ТаблицаНоменклатур);
	Запрос.Параметры.Вставить("КодОперацииПоУмолчанию", "1010400");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаНоменклатур.Товар КАК Справочник.Номенклатура) КАК Ссылка,
	|	ТаблицаНоменклатур.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаНоменклатур.СуммаНДС КАК СуммаНДС
	|ПОМЕСТИТЬ ТаблицаНоменклатур
	|ИЗ
	|	&ТаблицаНоменклатур КАК ТаблицаНоменклатур
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ТаблицаНоменклатур.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ТаблицаНоменклатур.СуммаНДС) КАК СуммаНДС,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ЕСТЬNULL(Номенклатура.Операции0, ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)
	|					И ЕСТЬNULL(Номенклатура.Услуга, ЛОЖЬ) = ЛОЖЬ
	|					И ЕСТЬNULL(Номенклатура.КодТНВЭД.СырьевойТовар, ЛОЖЬ) = ЛОЖЬ
	|				ТОГДА ""НеСырьевыеТоварыВДругиеСтраныОбщаяСтавкаНДС""
	|			КОГДА ЕСТЬNULL(Номенклатура.Операции0, ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)
	|					И ЕСТЬNULL(Номенклатура.Услуга, ЛОЖЬ) = ЛОЖЬ
	|					И ЕСТЬNULL(Номенклатура.КодТНВЭД.СырьевойТовар, ЛОЖЬ) = ИСТИНА
	|				ТОГДА ""РеализацияСырьевыхВДругиеСтраны""
	|			КОГДА ЕСТЬNULL(Номенклатура.Операции0, ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)
	|					И ЕСТЬNULL(Номенклатура.Услуга, ЛОЖЬ) = ИСТИНА
	|				ТОГДА ""ОперацииНДС0""
	|			ИНАЧЕ Номенклатура.Операции0.Код
	|		КОНЕЦ, ""ОперацииНДС0"") КАК Классификация
	|ПОМЕСТИТЬ НалоговаяБазаНДСПоКлассификации
	|ИЗ
	|	ТаблицаНоменклатур КАК ТаблицаНоменклатур
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО ТаблицаНоменклатур.Ссылка = Номенклатура.Ссылка
	|ГДЕ
	|	Номенклатура.ПометкаУдаления = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ЕСТЬNULL(Номенклатура.Операции0, ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)
	|					И ЕСТЬNULL(Номенклатура.Услуга, ЛОЖЬ) = ЛОЖЬ
	|					И ЕСТЬNULL(Номенклатура.КодТНВЭД.СырьевойТовар, ЛОЖЬ) = ЛОЖЬ
	|				ТОГДА ""НеСырьевыеТоварыВДругиеСтраныОбщаяСтавкаНДС""
	|			КОГДА ЕСТЬNULL(Номенклатура.Операции0, ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)
	|					И ЕСТЬNULL(Номенклатура.Услуга, ЛОЖЬ) = ЛОЖЬ
	|					И ЕСТЬNULL(Номенклатура.КодТНВЭД.СырьевойТовар, ЛОЖЬ) = ИСТИНА
	|				ТОГДА ""РеализацияСырьевыхВДругиеСтраны""
	|			КОГДА ЕСТЬNULL(Номенклатура.Операции0, ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)
	|					И ЕСТЬNULL(Номенклатура.Услуга, ЛОЖЬ) = ИСТИНА
	|				ТОГДА ""ОперацииНДС0""
	|			ИНАЧЕ Номенклатура.Операции0.Код
	|		КОНЕЦ, ""ОперацииНДС0"")
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаНоменклатур
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаКодовОпераций0.Код КАК Код,
	|	ТаблицаКодовОпераций0.ДатаНачала КАК ДатаНачала,
	|	ТаблицаКодовОпераций0.ДатаОкончания КАК ДатаОкончания,
	|	ТаблицаКодовОпераций0.Классификация КАК Классификация,
	|	ТаблицаКодовОпераций0.КонтрагентИЗОфшора КАК КонтрагентИЗОфшора,
	|	ТаблицаКодовОпераций0.КонтрагентВзаимозависимоеЛицо КАК КонтрагентВзаимозависимоеЛицо,
	|	ТаблицаКодовОпераций0.СтранаРеализации КАК СтранаРеализации,
	|	ТаблицаКодовОпераций0.НесырьевыеТовары КАК НесырьевыеТовары,
	|	ТаблицаКодовОпераций0.СырьевыеТовары КАК СырьевыеТовары
	|ПОМЕСТИТЬ КодыОпераций0
	|ИЗ
	|	&ТаблицаКодовОпераций0 КАК ТаблицаКодовОпераций0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Классификация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(КодыОпераций0.Код, &КодОперацииПоУмолчанию) КАК КодОперации,
	|	СУММА(НалоговаяБазаНДСПоКлассификации.СуммаБезНДС) КАК ПродажиСНДС0,
	|	СУММА(НалоговаяБазаНДСПоКлассификации.СуммаНДС) КАК СуммаНДС,
	|	ЕСТЬNULL(КодыОпераций0.НесырьевыеТовары, ИСТИНА) КАК НесырьевыеТовары,
	|	ЕСТЬNULL(КодыОпераций0.СырьевыеТовары, ИСТИНА) КАК СырьевыеТовары
	|ИЗ
	|	НалоговаяБазаНДСПоКлассификации КАК НалоговаяБазаНДСПоКлассификации
	|		ЛЕВОЕ СОЕДИНЕНИЕ КодыОпераций0 КАК КодыОпераций0
	|		ПО НалоговаяБазаНДСПоКлассификации.Классификация = КодыОпераций0.Классификация
	|			И (КодыОпераций0.КонтрагентИЗОфшора В (&КонтрагентИЗОфшора))
	|			И (КодыОпераций0.КонтрагентВзаимозависимоеЛицо В (&КонтрагентВзаимозависимоеЛицо))
	|			И (КодыОпераций0.СтранаРеализации В (&СтранаРеализации))
	|			И (КодыОпераций0.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|					И КодыОпераций0.ДатаНачала <= &ДатаЗапроса
	|				ИЛИ &ДатаЗапроса МЕЖДУ КодыОпераций0.ДатаНачала И КодыОпераций0.ДатаОкончания)
	|
	|СГРУППИРОВАТЬ ПО
	|	КодыОпераций0.Код,
	|	КодыОпераций0.НесырьевыеТовары,
	|	КодыОпераций0.СырьевыеТовары
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НалоговаяБазаНДСПоКлассификации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КодыОпераций0";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаСервереБезКонтекста
Функция ВычислитьКодыОперацийПоОтчетуКомиссионераОПродажах(ТаблицаКодовОпераций0, Событие, ДокументОтгрузки, Организация, Контрагент, ДатаЗапроса, НеПодтвержденаСтавка0)
	
	Если НЕ ЗначениеЗаполнено(ДатаЗапроса) Тогда
		
		ДатаЗапроса = ОбщегоНазначения.ТекущаяДатаПользователя();
		
	КонецЕсли;
	
	ПониженныеВидыСтавок = Новый Массив;
	ЗначениеОбщейСтавкиНДС = 0;
	ЗначениеПониженнойСтавкиНДС = 0;
	ОбщаяСтавкаНДС = Перечисления.СтавкиНДС.ПустаяСсылка();
	ПониженнаяСтавкаНДС = Перечисления.СтавкиНДС.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	
	ОсновныеПараметрыЗапросаКодыОперацийПоСтавке0(Запрос, ДатаЗапроса, ТаблицаКодовОпераций0,
													Контрагент, Организация, ДокументОтгрузки);
	
	Запрос.Параметры.Вставить("Ссылка",                 ДокументОтгрузки);
	Запрос.Параметры.Вставить("Покупатель",             Контрагент);
	Запрос.Параметры.Вставить("КодОперацииПоУмолчанию", "1010400");
	
	Если Событие = НеПодтвержденаСтавка0 Тогда
		
		ПониженныеВидыСтавок.Добавить(Перечисления.ВидыСтавокНДС.Пониженная);
		ПониженныеВидыСтавок.Добавить(Перечисления.ВидыСтавокНДС.ПониженнаяРасчетная);
		
		ОбщаяСтавкаНДС = Перечисления.СтавкиНДС.СтавкаНДС(Перечисления.ВидыСтавокНДС.Общая, ДокументОтгрузки.Дата);
		ПониженнаяСтавкаНДС = Перечисления.СтавкиНДС.СтавкаНДС(Перечисления.ВидыСтавокНДС.Пониженная, ДокументОтгрузки.Дата);
		
		ЗначениеОбщейСтавкиНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(ОбщаяСтавкаНДС);
		ЗначениеПониженнойСтавкиНДС = УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(ПониженнаяСтавкаНДС);
		
		Запрос.Параметры.Вставить("НеподтверждениеНулевойСтавки", Истина);
		
	Иначе
		
		Запрос.Параметры.Вставить("НеподтверждениеНулевойСтавки", Ложь);
		
	КонецЕсли;
	
	Запрос.Параметры.Вставить("ЗначениеПониженнойСтавкиНДС", ЗначениеПониженнойСтавкиНДС);
	Запрос.Параметры.Вставить("ЗначениеОбщейСтавкиНДС", ЗначениеОбщейСтавкиНДС);
	Запрос.Параметры.Вставить("ПониженныеВидыСтавок", ПониженныеВидыСтавок);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтчетКомиссионераОПродажахПокупатели.Ссылка КАК Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары) КАК ТабличнаяЧастьДокумента,
	|	ОтчетКомиссионераОПродажахТовары.НомерСтроки КАК НомерСтроки,
	|	ОтчетКомиссионераОПродажахТовары.Сумма КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ОтчетКомиссионераОПродажахТовары.Номенклатура.Операции0, ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)
	|				И ЕСТЬNULL(ОтчетКомиссионераОПродажахТовары.Номенклатура.Услуга, ЛОЖЬ) = ЛОЖЬ
	|				И ЕСТЬNULL(ОтчетКомиссионераОПродажахТовары.Номенклатура.КодТНВЭД.СырьевойТовар, ЛОЖЬ) = ЛОЖЬ
	|			ТОГДА ""НеСырьевыеТоварыВДругиеСтраныОбщаяСтавкаНДС""
	|		КОГДА ЕСТЬNULL(ОтчетКомиссионераОПродажахТовары.Номенклатура.Операции0, ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)
	|				И ЕСТЬNULL(ОтчетКомиссионераОПродажахТовары.Номенклатура.Услуга, ЛОЖЬ) = ЛОЖЬ
	|				И ЕСТЬNULL(ОтчетКомиссионераОПродажахТовары.Номенклатура.КодТНВЭД.СырьевойТовар, ЛОЖЬ) = ИСТИНА
	|			ТОГДА ""РеализацияСырьевыхВДругиеСтраны""
	|		КОГДА ЕСТЬNULL(ОтчетКомиссионераОПродажахТовары.Номенклатура.Операции0, ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)
	|				И ЕСТЬNULL(ОтчетКомиссионераОПродажахТовары.Номенклатура.Услуга, ЛОЖЬ) = ИСТИНА
	|			ТОГДА ""ОперацииНДС0""
	|		ИНАЧЕ ОтчетКомиссионераОПродажахТовары.Номенклатура.Операции0.Код
	|	КОНЕЦ КАК Классификация,
	|	ОтчетКомиссионераОПродажахТовары.СтавкаНДС КАК СтавкаНДС
	|ПОМЕСТИТЬ ДанныеОтчетаКомиссионераОПродажах
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Покупатели КАК ОтчетКомиссионераОПродажахПокупатели
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.Товары КАК ОтчетКомиссионераОПродажахТовары
	|		ПО ОтчетКомиссионераОПродажахПокупатели.КлючСтроки = ОтчетКомиссионераОПродажахТовары.КлючСтроки
	|			И ОтчетКомиссионераОПродажахПокупатели.Ссылка = ОтчетКомиссионераОПродажахТовары.Ссылка
	|ГДЕ
	|	ОтчетКомиссионераОПродажахТовары.Ссылка = &Ссылка
	|	И ОтчетКомиссионераОПродажахТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтчетКомиссионера.ОтчетОПродажах)
	|	И ОтчетКомиссионераОПродажахПокупатели.Покупатель = &Покупатель
	|	И ОтчетКомиссионераОПродажахТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ОтчетКомиссионераОПродажахТовары.Номенклатура.Операции0, ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)
	|				И ЕСТЬNULL(ОтчетКомиссионераОПродажахТовары.Номенклатура.Услуга, ЛОЖЬ) = ЛОЖЬ
	|				И ЕСТЬNULL(ОтчетКомиссионераОПродажахТовары.Номенклатура.КодТНВЭД.СырьевойТовар, ЛОЖЬ) = ЛОЖЬ
	|			ТОГДА ""НеСырьевыеТоварыВДругиеСтраныОбщаяСтавкаНДС""
	|		КОГДА ЕСТЬNULL(ОтчетКомиссионераОПродажахТовары.Номенклатура.Операции0, ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)
	|				И ЕСТЬNULL(ОтчетКомиссионераОПродажахТовары.Номенклатура.Услуга, ЛОЖЬ) = ЛОЖЬ
	|				И ЕСТЬNULL(ОтчетКомиссионераОПродажахТовары.Номенклатура.КодТНВЭД.СырьевойТовар, ЛОЖЬ) = ИСТИНА
	|			ТОГДА ""РеализацияСырьевыхВДругиеСтраны""
	|		КОГДА ЕСТЬNULL(ОтчетКомиссионераОПродажахТовары.Номенклатура.Операции0, ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)
	|				И ЕСТЬNULL(ОтчетКомиссионераОПродажахТовары.Номенклатура.Услуга, ЛОЖЬ) = ИСТИНА
	|			ТОГДА ""ОперацииНДС0""
	|		ИНАЧЕ ОтчетКомиссионераОПродажахТовары.Номенклатура.Операции0.Код
	|	КОНЕЦ,
	|	ОтчетКомиссионераОПродажахТовары.Сумма,
	|	ОтчетКомиссионераОПродажахПокупатели.Ссылка,
	|	ОтчетКомиссионераОПродажахТовары.НомерСтроки,
	|	ОтчетКомиссионераОПродажахТовары.СтавкаНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтчетКомиссионераОПродажахПокупатели.Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги),
	|	ОтчетКомиссионераОПродажахУслуги.НомерСтроки,
	|	ОтчетКомиссионераОПродажахУслуги.Сумма,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ОтчетКомиссионераОПродажахУслуги.Номенклатура.Операции0, ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)
	|				И ЕСТЬNULL(ОтчетКомиссионераОПродажахУслуги.Номенклатура.Услуга, ЛОЖЬ) = ЛОЖЬ
	|				И ЕСТЬNULL(ОтчетКомиссионераОПродажахУслуги.Номенклатура.КодТНВЭД.СырьевойТовар, ЛОЖЬ) = ЛОЖЬ
	|			ТОГДА ""НеСырьевыеТоварыВДругиеСтраныОбщаяСтавкаНДС""
	|		КОГДА ЕСТЬNULL(ОтчетКомиссионераОПродажахУслуги.Номенклатура.Операции0, ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)
	|				И ЕСТЬNULL(ОтчетКомиссионераОПродажахУслуги.Номенклатура.Услуга, ЛОЖЬ) = ЛОЖЬ
	|				И ЕСТЬNULL(ОтчетКомиссионераОПродажахУслуги.Номенклатура.КодТНВЭД.СырьевойТовар, ЛОЖЬ) = ИСТИНА
	|			ТОГДА ""РеализацияСырьевыхВДругиеСтраны""
	|		КОГДА ЕСТЬNULL(ОтчетКомиссионераОПродажахУслуги.Номенклатура.Операции0, ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)
	|				И ЕСТЬNULL(ОтчетКомиссионераОПродажахУслуги.Номенклатура.Услуга, ЛОЖЬ) = ИСТИНА
	|			ТОГДА ""ОперацииНДС0""
	|		ИНАЧЕ ОтчетКомиссионераОПродажахУслуги.Номенклатура.Операции0.Код
	|	КОНЕЦ,
	|	ОтчетКомиссионераОПродажахУслуги.СтавкаНДС
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах.Покупатели КАК ОтчетКомиссионераОПродажахПокупатели
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.Услуги КАК ОтчетКомиссионераОПродажахУслуги
	|		ПО ОтчетКомиссионераОПродажахПокупатели.КлючСтроки = ОтчетКомиссионераОПродажахУслуги.КлючСтроки
	|			И ОтчетКомиссионераОПродажахПокупатели.Ссылка = ОтчетКомиссионераОПродажахУслуги.Ссылка
	|ГДЕ
	|	ОтчетКомиссионераОПродажахУслуги.Ссылка = &Ссылка
	|	И ОтчетКомиссионераОПродажахУслуги.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтчетКомиссионера.ОтчетОПродажах)
	|	И ОтчетКомиссионераОПродажахПокупатели.Покупатель = &Покупатель
	|	И ОтчетКомиссионераОПродажахУслуги.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ОтчетКомиссионераОПродажахУслуги.Номенклатура.Операции0, ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)
	|				И ЕСТЬNULL(ОтчетКомиссионераОПродажахУслуги.Номенклатура.Услуга, ЛОЖЬ) = ЛОЖЬ
	|				И ЕСТЬNULL(ОтчетКомиссионераОПродажахУслуги.Номенклатура.КодТНВЭД.СырьевойТовар, ЛОЖЬ) = ЛОЖЬ
	|			ТОГДА ""НеСырьевыеТоварыВДругиеСтраныОбщаяСтавкаНДС""
	|		КОГДА ЕСТЬNULL(ОтчетКомиссионераОПродажахУслуги.Номенклатура.Операции0, ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)
	|				И ЕСТЬNULL(ОтчетКомиссионераОПродажахУслуги.Номенклатура.Услуга, ЛОЖЬ) = ЛОЖЬ
	|				И ЕСТЬNULL(ОтчетКомиссионераОПродажахУслуги.Номенклатура.КодТНВЭД.СырьевойТовар, ЛОЖЬ) = ИСТИНА
	|			ТОГДА ""РеализацияСырьевыхВДругиеСтраны""
	|		КОГДА ЕСТЬNULL(ОтчетКомиссионераОПродажахУслуги.Номенклатура.Операции0, ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)
	|				И ЕСТЬNULL(ОтчетКомиссионераОПродажахУслуги.Номенклатура.Услуга, ЛОЖЬ) = ИСТИНА
	|			ТОГДА ""ОперацииНДС0""
	|		ИНАЧЕ ОтчетКомиссионераОПродажахУслуги.Номенклатура.Операции0.Код
	|	КОНЕЦ,
	|	ОтчетКомиссионераОПродажахУслуги.Сумма,
	|	ОтчетКомиссионераОПродажахПокупатели.Ссылка,
	|	ОтчетКомиссионераОПродажахУслуги.НомерСтроки,
	|	ОтчетКомиссионераОПродажахУслуги.СтавкаНДС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ТабличнаяЧастьДокумента,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеОтчетаКомиссионераОПродажах.Классификация КАК Классификация,
	|	СУММА(ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, ДанныеОтчетаКомиссионераОПродажах.СуммаБезНДС)) КАК СуммаБезНДС,
	|	СУММА(ВЫРАЗИТЬ(ВЫБОР
	|				КОГДА &НеподтверждениеНулевойСтавки
	|					ТОГДА ЕСТЬNULL(РублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, ДанныеОтчетаКомиссионераОПродажах.СуммаБезНДС) * ВЫБОР
	|							КОГДА ДанныеОтчетаКомиссионераОПродажах.СтавкаНДС В (&ПониженныеВидыСтавок)
	|								ТОГДА &ЗначениеПониженнойСтавкиНДС / 100
	|							ИНАЧЕ &ЗначениеОбщейСтавкиНДС / 100
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаНДС
	|ПОМЕСТИТЬ НалоговаяБазаНДСПоКлассификации
	|ИЗ
	|	ДанныеОтчетаКомиссионераОПродажах КАК ДанныеОтчетаКомиссионераОПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ПО ДанныеОтчетаКомиссионераОПродажах.Ссылка = РублевыеСуммыДокументовВВалюте.Регистратор
	|			И ДанныеОтчетаКомиссионераОПродажах.ТабличнаяЧастьДокумента = РублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента
	|			И ДанныеОтчетаКомиссионераОПродажах.НомерСтроки = РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеОтчетаКомиссионераОПродажах.Классификация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Классификация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДанныеОтчетаКомиссионераОПродажах
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаКодовОпераций0.Код КАК Код,
	|	ТаблицаКодовОпераций0.ДатаНачала КАК ДатаНачала,
	|	ТаблицаКодовОпераций0.ДатаОкончания КАК ДатаОкончания,
	|	ТаблицаКодовОпераций0.Классификация КАК Классификация,
	|	ТаблицаКодовОпераций0.КонтрагентИЗОфшора КАК КонтрагентИЗОфшора,
	|	ТаблицаКодовОпераций0.КонтрагентВзаимозависимоеЛицо КАК КонтрагентВзаимозависимоеЛицо,
	|	ТаблицаКодовОпераций0.СтранаРеализации КАК СтранаРеализации,
	|	ТаблицаКодовОпераций0.НесырьевыеТовары КАК НесырьевыеТовары,
	|	ТаблицаКодовОпераций0.СырьевыеТовары КАК СырьевыеТовары
	|ПОМЕСТИТЬ КодыОпераций0
	|ИЗ
	|	&ТаблицаКодовОпераций0 КАК ТаблицаКодовОпераций0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Классификация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(КодыОпераций0.Код, &КодОперацииПоУмолчанию) КАК КодОперации,
	|	СУММА(НалоговаяБазаНДСПоКлассификации.СуммаБезНДС) КАК ПродажиСНДС0,
	|	СУММА(НалоговаяБазаНДСПоКлассификации.СуммаНДС) КАК СуммаНДС,
	|	ЕСТЬNULL(КодыОпераций0.НесырьевыеТовары, ИСТИНА) КАК НесырьевыеТовары,
	|	ЕСТЬNULL(КодыОпераций0.СырьевыеТовары, ИСТИНА) КАК СырьевыеТовары
	|ИЗ
	|	НалоговаяБазаНДСПоКлассификации КАК НалоговаяБазаНДСПоКлассификации
	|		ЛЕВОЕ СОЕДИНЕНИЕ КодыОпераций0 КАК КодыОпераций0
	|		ПО НалоговаяБазаНДСПоКлассификации.Классификация = КодыОпераций0.Классификация
	|			И (КодыОпераций0.КонтрагентИЗОфшора В (&КонтрагентИЗОфшора))
	|			И (КодыОпераций0.КонтрагентВзаимозависимоеЛицо В (&КонтрагентВзаимозависимоеЛицо))
	|			И (КодыОпераций0.СтранаРеализации В (&СтранаРеализации))
	|			И (КодыОпераций0.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|					И КодыОпераций0.ДатаНачала <= &ДатаЗапроса
	|				ИЛИ &ДатаЗапроса МЕЖДУ КодыОпераций0.ДатаНачала И КодыОпераций0.ДатаОкончания)
	|
	|СГРУППИРОВАТЬ ПО
	|	КодыОпераций0.Код,
	|	КодыОпераций0.НесырьевыеТовары,
	|	КодыОпераций0.СырьевыеТовары
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НалоговаяБазаНДСПоКлассификации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КодыОпераций0";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаСервереБезКонтекста
Функция ВычислитьКодыОперацийПоОтчетуОРозничныхПродажах(ТаблицаКодовОпераций0, ДокументОтгрузки, ДатаЗапроса)
	
	Если НЕ ЗначениеЗаполнено(ДатаЗапроса) Тогда
		
		ДатаЗапроса = ОбщегоНазначения.ТекущаяДатаПользователя();
		
	КонецЕсли;
	
	// В документе ОтчетОРозничныхПродажах расчеты  осуществляются всегда в рублях,
	// используются гостиничные услуги, для которых ставка НДС 0% всегда подтверждена,
	// поэтому СуммаНДС = 0
	
	Запрос = Новый Запрос;
	
	Запрос.Параметры.Вставить("ДатаЗапроса",            ДатаЗапроса);
	Запрос.Параметры.Вставить("Ссылка",                 ДокументОтгрузки);
	Запрос.Параметры.Вставить("ТаблицаКодовОпераций0",  ТаблицаКодовОпераций0);
	Запрос.Параметры.Вставить("КодОперацииПоУмолчанию", "1010400");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ОтчетОРозничныхПродажахТовары.Сумма) КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ОтчетОРозничныхПродажахТовары.Номенклатура.Операции0, ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)
	|			ТОГДА ""ОперацииНДС0""
	|		ИНАЧЕ ОтчетОРозничныхПродажахТовары.Номенклатура.Операции0.Код
	|	КОНЕЦ КАК Классификация
	|ПОМЕСТИТЬ НалоговаяБазаНДСПоКлассификации
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ОтчетОРозничныхПродажахТовары
	|ГДЕ
	|	ОтчетОРозничныхПродажахТовары.Ссылка = &Ссылка
	|	И ОтчетОРозничныхПродажахТовары.Номенклатура.Услуга
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетОРозничныхПродажахТовары.Номенклатура.Операции0,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ОтчетОРозничныхПродажахТовары.Номенклатура.Операции0, ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Операции0.ПустаяСсылка)
	|			ТОГДА ""ОперацииНДС0""
	|		ИНАЧЕ ОтчетОРозничныхПродажахТовары.Номенклатура.Операции0.Код
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаКодовОпераций0.Классификация КАК Классификация,
	|	ТаблицаКодовОпераций0.ДатаОкончания КАК ДатаОкончания,
	|	ТаблицаКодовОпераций0.ДатаНачала КАК ДатаНачала,
	|	ТаблицаКодовОпераций0.Код КАК Код
	|ПОМЕСТИТЬ КодыОпераций0
	|ИЗ
	|	&ТаблицаКодовОпераций0 КАК ТаблицаКодовОпераций0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Классификация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(КодыОпераций0.Код, &КодОперацииПоУмолчанию) КАК КодОперации,
	|	СУММА(НалоговаяБазаНДСПоКлассификации.СуммаБезНДС) КАК ПродажиСНДС0
	|ИЗ
	|	НалоговаяБазаНДСПоКлассификации КАК НалоговаяБазаНДСПоКлассификации
	|		ЛЕВОЕ СОЕДИНЕНИЕ КодыОпераций0 КАК КодыОпераций0
	|		ПО НалоговаяБазаНДСПоКлассификации.Классификация = КодыОпераций0.Классификация
	|			И (КодыОпераций0.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|					И КодыОпераций0.ДатаНачала <= &ДатаЗапроса
	|				ИЛИ &ДатаЗапроса МЕЖДУ КодыОпераций0.ДатаНачала И КодыОпераций0.ДатаОкончания)
	|
	|СГРУППИРОВАТЬ ПО
	|	КодыОпераций0.Код
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НалоговаяБазаНДСПоКлассификации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КодыОпераций0";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

//Данная функция используется для вычисления кода операций по документам отгрузки, которые не имеют вычеты по НДС предъявленный, реализация 0%
// используется для типов документов ПередачаОС, РеализацияУслугПоПереработке
&НаСервереБезКонтекста
Функция ВычислитьКодОпераций(Классификация, ТаблицаКодовОпераций0, ДокументОтгрузки, Организация, Контрагент, ДатаЗапроса)
	
	Если НЕ ЗначениеЗаполнено(ДатаЗапроса) Тогда
		
		ДатаЗапроса = ОбщегоНазначения.ТекущаяДатаПользователя();
		
	КонецЕсли;
	
	КодОперацииПоУмолчанию = "1010400";
	
	Запрос = Новый Запрос;
	
	ОсновныеПараметрыЗапросаКодыОперацийПоСтавке0(Запрос, ДатаЗапроса, ТаблицаКодовОпераций0,
													Контрагент, Организация, ДокументОтгрузки);
	
	Запрос.Параметры.Вставить("Классификация", Классификация);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаКодовОпераций0.Код КАК Код,
	|	ТаблицаКодовОпераций0.ДатаНачала КАК ДатаНачала,
	|	ТаблицаКодовОпераций0.ДатаОкончания КАК ДатаОкончания,
	|	ТаблицаКодовОпераций0.Классификация КАК Классификация,
	|	ТаблицаКодовОпераций0.КонтрагентИЗОфшора КАК КонтрагентИЗОфшора,
	|	ТаблицаКодовОпераций0.КонтрагентВзаимозависимоеЛицо КАК КонтрагентВзаимозависимоеЛицо,
	|	ТаблицаКодовОпераций0.СтранаРеализации КАК СтранаРеализации
	|ПОМЕСТИТЬ КодыОпераций0
	|ИЗ
	|	&ТаблицаКодовОпераций0 КАК ТаблицаКодовОпераций0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Классификация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КодыОпераций0.Код КАК КодОперации
	|ИЗ
	|	КодыОпераций0 КАК КодыОпераций0
	|ГДЕ
	|	КодыОпераций0.Классификация = &Классификация
	|	И КодыОпераций0.КонтрагентИЗОфшора В(&КонтрагентИЗОфшора)
	|	И КодыОпераций0.КонтрагентВзаимозависимоеЛицо В(&КонтрагентВзаимозависимоеЛицо)
	|	И КодыОпераций0.СтранаРеализации В(&СтранаРеализации)
	|	И (КодыОпераций0.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|				И КодыОпераций0.ДатаНачала <= &ДатаЗапроса
	|			ИЛИ &ДатаЗапроса МЕЖДУ КодыОпераций0.ДатаНачала И КодыОпераций0.ДатаОкончания)
	|
	|СГРУППИРОВАТЬ ПО
	|	КодыОпераций0.Код
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КодыОпераций0";
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		
		Возврат КодОперацииПоУмолчанию;
		
	Иначе
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		Возврат Выборка.КодОперации;
		
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция СтранаРеализации(ДокументОтгрузки, Контрагент)
	
	МассивПеречисленийСтран = Новый Массив;
	МассивПеречисленийСтран.Добавить("");
	
	РФ = Справочники.СтраныМира.Россия;
	
	Если ТипЗнч(ДокументОтгрузки) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		СтранаРеализации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОтгрузки, "СтранаРеализации");
		
		Если НЕ ЗначениеЗаполнено(СтранаРеализации) Тогда
			СтранаРеализации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "СтранаРегистрации");
		КонецЕсли;
		
	Иначе
		СтранаРеализации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "СтранаРегистрации");
	КонецЕсли;
	
	НеРФ = СтранаРеализации <> РФ;
	
	Если НеРФ Тогда
		МассивПеречисленийСтран.Добавить("За пределами РФ");
	КонецЕсли;
	
	УчастникЕАЭС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтранаРеализации, "УчастникЕАЭС");
	
	Если УчастникЕАЭС И НеРФ Тогда
		МассивПеречисленийСтран.Добавить("ЕАЭС");
	ИначеЕсли НеРФ Тогда
		МассивПеречисленийСтран.Добавить("За пределами ЕАЭС");
	КонецЕсли;

	Возврат МассивПеречисленийСтран;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ОсновныеПараметрыЗапросаКодыОперацийПоСтавке0(Запрос, Знач ДатаЗапроса, Знач ТаблицаКодовОпераций0,
														Знач Контрагент, Знач Организация, Знач ДокументОтгрузки)
	
	КонтрагентВзаимозависимоеЛицо = Новый Массив;
	КонтрагентВзаимозависимоеЛицо.Добавить("");
	ЯвляютсяВзаимозависимыми = "Нет";
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУведомленияОКонтролируемыхСделках") Тогда
		УчетОбособленныхПодразделений.ЯвляютсяВзаимозависимыми(ДатаЗапроса, Контрагент, Организация, ЯвляютсяВзаимозависимыми);
	КонецЕсли;
	КонтрагентВзаимозависимоеЛицо.Добавить(ЯвляютсяВзаимозависимыми);
	КонтрагентИЗОфшора = Новый Массив;
	КонтрагентИЗОфшора.Добавить("");
	КонтрагентИЗОфшора.Добавить(Строка(УчетОфшоров.ЯвляетсяОфшором(ДатаЗапроса,
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "СтранаРегистрации"))));
	
	Запрос.Параметры.Вставить("ДатаЗапроса",                   ДатаЗапроса);
	Запрос.Параметры.Вставить("ТаблицаКодовОпераций0",         ТаблицаКодовОпераций0);
	Запрос.Параметры.Вставить("КонтрагентВзаимозависимоеЛицо", КонтрагентВзаимозависимоеЛицо);
	Запрос.Параметры.Вставить("КонтрагентИЗОфшора",            КонтрагентИЗОфшора);
	Запрос.Параметры.Вставить("СтранаРеализации",              СтранаРеализации(ДокументОтгрузки, Контрагент));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	// СоставКодыОперацийПредставление

	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СоставКодыОперацийПредставление");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Состав.КодыОперацийПредставление", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", "<...>");
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
	// СоставСтавкаНДС

	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СоставСтавкаНДС");
	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Состав.Событие", ВидСравненияКомпоновкиДанных.Равно, Перечисления.СобытияПоНДСПродажи.НеПодтвержденаСтавка0);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Ложь);

	// СоставСчетФактураВыданный

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СоставСчетФактураВыданный");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ВерсияПостановления1137", ВидСравненияКомпоновкиДанных.Меньше, 3);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

	// СоставСчетФактураВыданный

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СоставСчетФактураВыданный");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Состав.Событие", ВидСравненияКомпоновкиДанных.Равно, Перечисления.СобытияПоНДСПродажи.ПодтвержденаСтавка0);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЗаголовкиСтрокЦветТекста);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Не требуется'"));

	// СоставСтавкаНДС, СоставВидЦенности

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СоставСтавкаНДС");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СоставВидЦенности");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ВерсияПостановления1137", ВидСравненияКомпоновкиДанных.БольшеИлиРавно, 3);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

	// СоставПродажиСНДС0

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СоставПродажиСНДС0");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Состав.Событие", ВидСравненияКомпоновкиДанных.Равно, Перечисления.СобытияПоНДСПродажи.НеПодтвержденаСтавка0);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	// Событие
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СоставСобытие");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.Состав.Покупатель", ВидСравненияКомпоновкиДанных.НеЗаполнено);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	// СтатьяПрочихРасходов

	ЭлементУО = УсловноеОформление.Элементы.Добавить();

	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "СтатьяПрочихРасходов");

	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ЕстьНеподтверждениеСтавки", ВидСравненияКомпоновкиДанных.Равно, Ложь);

	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);

КонецПроцедуры

// Процедура показывает новости, требующие прочтения (важные и очень важные)
//
// Параметры:
//  Нет
//
&НаКлиенте
Процедура Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии()

	// ИнтернетПоддержкаПользователей.Новости.Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии
	ИдентификаторыСобытийПриОткрытии = "ПриОткрытии";
	// Конец ИнтернетПоддержкаПользователей.Новости.Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии

	ОбработкаНовостейКлиент.КонтекстныеНовости_ПоказатьНовостиТребующиеПрочтенияПриОткрытии(ЭтотОбъект, ИдентификаторыСобытийПриОткрытии);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьКодыОпераций(СтрокаТабличнойЧасти, КодыОперацийПоСтроке)

	КодыОперацийПредставление = "";
	КоличествоКодовОпераций = КодыОперацийПоСтроке.Количество();
	Для Инд = 0 По КоличествоКодовОпераций - 1 Цикл
		
		КодОперации = КодыОперацийПоСтроке[Инд].КодОперации;
		Если Инд < 2 Тогда
			КодыОперацийПредставление = КодыОперацийПредставление + ?(ЗначениеЗаполнено(КодыОперацийПредставление), ";", "") + КодОперации;
		Иначе
			КодыОперацийПредставление = КодыОперацийПредставление + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = ' и ещё %1'"),
				КоличествоКодовОпераций - Инд);
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если СтрокаТабличнойЧасти.Свойство("КодыОперацийПредставление") Тогда
		СтрокаТабличнойЧасти.КодыОперацийПредставление = КодыОперацийПредставление;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуКодыОпераций(ВыбранноеЗначение)
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСтроки = Объект.Состав.НайтиПоИдентификатору(ВыбранноеЗначение);
	
	Если Не ТолькоПросмотр Тогда
		ЗаблокироватьДанныеФормыДляРедактирования();
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("АдресТаблицыКодыОперацийНалоговаяБаза", ПоместитьКодыОперацийНалоговаяБазаВХранилище(ДанныеСтроки.КлючСтроки));
	ПараметрыФормы.Вставить("ТолькоПросмотр", ЭтотОбъект.ТолькоПросмотр);
	ПараметрыФормы.Вставить("КлючСтроки", ДанныеСтроки.КлючСтроки);
	ПараметрыФормы.Вставить("ОтредактированыСтрокиКодовОпераций", ДанныеСтроки.ОтредактированыСтрокиКодовОпераций);
	ПараметрыФормы.Вставить("Дата", Объект.Дата);
	ПараметрыФормы.Вставить("ДокументОтгрузкиПродажиСНДС0", ДанныеСтроки.ПродажиСНДС0);
	ПараметрыФормы.Вставить("ДокументОтгрузкиСуммаНДС", ДанныеСтроки.СуммаНДС);
	ПараметрыФормы.Вставить("Событие", ДанныеСтроки.Событие);
	ПараметрыФормы.Вставить("Покупатель", ДанныеСтроки.Покупатель);
	ПараметрыФормы.Вставить("Организация", Объект.Организация);
	ПараметрыФормы.Вставить("ДокументОтгрузки", ДанныеСтроки.ДокументОтгрузки);
	ПараметрыФормы.Вставить("ВерсияПостановления1137", ВерсияПостановления1137);
	
	ОткрытьФорму("Документ.ПодтверждениеНулевойСтавкиНДС.Форма.ФормаКодовОпераций", ПараметрыФормы, ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервере
Функция ПоместитьКодыОперацийНалоговаяБазаВХранилище(КлючСтроки)
	
	СтруктураОтбора = Новый Структура("КлючСтроки", КлючСтроки);
	ТаблицаКодыОперацийНалоговаяБаза = Объект.КодыОперацийНалоговаяБаза.Выгрузить(СтруктураОтбора);
	АдресТаблицыКодыОперацийНалоговаяБаза = ПоместитьВоВременноеХранилище(ТаблицаКодыОперацийНалоговаяБаза, УникальныйИдентификатор);
	
	Возврат АдресТаблицыКодыОперацийНалоговаяБаза;
	
КонецФункции

&НаСервере
Процедура ЗагрузитьКодыОперацийИзХранилища(КлючСтроки, ОтредактированыСтрокиКодовОпераций)
	
	ТаблицаКодыОперацийНалоговаяБаза = ПолучитьИзВременногоХранилища(АдресТаблицыКодыОперацийНалоговаяБаза);
	
	Для Каждого СтрокаТЧ Из ТаблицаКодыОперацийНалоговаяБаза Цикл
		НоваяСтрока = Объект.КодыОперацийНалоговаяБаза.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
	КонецЦикла;
	
	КлючПоиска = Новый Структура("КлючСтроки", КлючСтроки);
	МассивСтрокСостав = Объект.Состав.НайтиСтроки(КлючПоиска);
	Если МассивСтрокСостав.Количество() > 0 Тогда 
		СтрокаТаблицы = МассивСтрокСостав[0];
		СтрокаТаблицы.ОтредактированыСтрокиКодовОпераций = ОтредактированыСтрокиКодовОпераций;
		Если ТаблицаКодыОперацийНалоговаяБаза.Количество() > 0 Тогда 
			ЗаполнитьКодыОпераций(СтрокаТаблицы, ТаблицаКодыОперацийНалоговаяБаза);
		Иначе
			СтрокаТаблицы.КодыОперацийПредставление = "<...>";
		КонецЕсли;
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПриИзмененииОрганизацииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		Объект.Состав.Очистить();
		Объект.КодыОперацийНалоговаяБаза.Очистить();
		
		Если ТекущаяОрганизация <> Объект.Организация Тогда
			
			ТекущаяОрганизация = Объект.Организация;
			
		КонецЕсли;
		
	Иначе
		
		Объект.Организация = ТекущаяОрганизация;
		
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверкаВыбраногоДокументаОтгрузкиСервер(Знач ВыбранноеЗначение)
	
	ПараметрыОбработки = Новый Структура("ПредупреждениеОбОшибке");

	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
		
		СтруктураРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВыбранноеЗначение, "ДокументОснование,ВидСчетаФактуры");
		
		ЭтоСчетФактураНаАванс = 
			(СтруктураРеквизитов.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАванс
			ИЛИ СтруктураРеквизитов.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыВыставленного.НаАвансКомитента);
			
		Если ЭтоСчетФактураНаАванс Тогда
			
			ПараметрыОбработки.ПредупреждениеОбОшибке =
				НСтр("ru = 'В качестве документа отгрузки можно выбрать счет-фактуру, введенный на основании документов ""Отчет комиссионера (агента) о продажах"" по оптовым продажам или ""Оказаниние услуг""!'");
			
			Возврат(ПараметрыОбработки);
			
		КонецЕсли;
		
		Если ТипЗнч(СтруктураРеквизитов.ДокументОснование) <> Тип("ДокументСсылка.ОтчетКомиссионераОПродажах")
			И ТипЗнч(СтруктураРеквизитов.ДокументОснование) <> Тип("ДокументСсылка.ОказаниеУслуг") Тогда
			
			ПараметрыОбработки.ПредупреждениеОбОшибке =
				НСтр("ru = 'В качестве документа отгрузки можно выбрать счет-фактуру, введенный на основании документов ""Отчет комиссионера (агента) о продажах"" по оптовым продажам или ""Оказаниние услуг""!'");
			
			Возврат(ПараметрыОбработки);
			
		КонецЕсли;
		
		Если ТипЗнч(СтруктураРеквизитов.ДокументОснование) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") 
			И СтруктураРеквизитов.ДокументОснование.ВидОперации <> Перечисления.ВидыОперацийОтчетКомиссионера.ОтчетОПродажах Тогда
			
			ПараметрыОбработки.ПредупреждениеОбОшибке =
				НСтр("ru = 'В качестве документа отгрузки можно выбрать счет-фактуру, веденный на основании документов ""Отчет комиссионера (агента) о продажах"" по оптовым продажам или ""Оказаниние услуг""!'");
			
			Возврат(ПараметрыОбработки);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах")
		И ВыбранноеЗначение.ВидОперации <> Перечисления.ВидыОперацийОтчетКомиссионера.ОтчетОПродажах Тогда
		
		ПараметрыОбработки.ПредупреждениеОбОшибке =
				НСтр("ru = 'В качестве документа отгрузки можно выбрать ""Отчет комиссионера (агента) о продажах"" по оптовым продажам!'");
			
		Возврат(ПараметрыОбработки);
		
	КонецЕсли;

	Возврат(ПараметрыОбработки);

КонецФункции

&НаСервере
Функция СоставДокументОтгрузкиПриИзмененииСервер(ДанныеСтрокиТабличнойЧасти)
	
	Если ТипЗнч(ДанныеСтрокиТабличнойЧасти.ДокументОтгрузки) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах")
		И ДанныеСтрокиТабличнойЧасти.Событие <> НеПодтвержденаСтавка0 Тогда
		
		ДанныеСтрокиТабличнойЧасти.Событие = Перечисления.СобытияПоНДСПродажи.ПодтвержденаСтавка0;
		ДанныеСтрокиТабличнойЧасти.СуммаНДС = 0;
		
		КлючПоиска = Новый Структура("КлючСтроки", ДанныеСтрокиТабличнойЧасти.КлючСтроки);
		МассивСтрок = Объект.КодыОперацийНалоговаяБаза.НайтиСтроки(КлючПоиска);
				
		Для Каждого СтрокаТЧ Из МассивСтрок Цикл
			СтрокаТЧ.СуммаНДС  = 0;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ДанныеСтрокиТабличнойЧасти;
	
КонецФункции

#КонецОбласти
