#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения)

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено
			И ТипДанныхЗаполнения <> Тип("Структура")
			И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	КонецЕсли;
	
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения, Истина);
	
	Документы.ТребованиеНакладная.ЗаполнитьСоставКомиссии(СоставКомиссии, Организация);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();
	НДСвСтоимостиТоваров = Перечисления.ДействиеНДСВСтоимостиТоваров.НеИзменять;
	ДляСписанияНДСИспользоватьСчетИАналитикуУчетаЗатрат = Ложь;
	
	Если Материалы.Количество() > 0 Тогда
		МассивМатериалы = Новый Массив(Материалы.Количество());
		
		Материалы.ЗагрузитьКолонку(МассивМатериалы, "Себестоимость");
		Материалы.ЗагрузитьКолонку(МассивМатериалы, "ДокументОприходования");
	КонецЕсли;
	
	ВедетсяУчетПрослеживаемыхТоваров = ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров")
		И ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(Дата);
	
	СведенияПрослеживаемости.Очистить();
	РаботаСНоменклатуройБП.ОбновитьПризнакПрослеживаемости(Материалы, ВедетсяУчетПрослеживаемыхТоваров, Дата);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	// Документ без данных о движении материалов не считаем заполненным корректно.
	// Следует заполнить данные в любой из табличных частей.
	ОбщегоНазначенияБП.ИсключитьИзПроверкиОсновныеТабличныеЧасти(
		ЭтотОбъект, 
		"Материалы,МатериалыЗаказчика",
		ПроверяемыеРеквизиты);
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ПроверяемыеРеквизиты.Найти("Склад") = Неопределено Тогда
		ПроверяемыеРеквизиты.Добавить("Склад");
	КонецЕсли;
	
	Если ВидОперации = Перечисления.ВидыОперацийРасходМатериалов.ПередачаСотруднику Тогда
		ПроверяемыеРеквизиты.Добавить("Сотрудник");
	КонецЕсли;
	
	Если ВидОперации = Перечисления.ВидыОперацийРасходМатериалов.ВозвратнаяТара 
		И НЕ УчетнаяПолитика.УчитыватьТаруЗаБалансом(Организация, Дата) Тогда
		ТекстОшибки = НСтр("ru='Операция ""Передача тары в эксплуатацию"" не применяется, если тара учитывается на балансе. Проверьте учетную политику.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, Ссылка, "ВидОперации", , Отказ);
	КонецЕсли;

	Если МатериалыЗаказчика.Количество() = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Контрагент");
	КонецЕсли;
	
	РаздельныйУчетНДСДо2014Года = УчетнаяПолитика.РаздельныйУчетНДСДо2014Года(Организация, Дата);
	
	Если НЕ РаздельныйУчетНДСДо2014Года Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НДСвСтоимостиТоваров");
	КонецЕсли; 

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	СчетаУчетаВДокументах.ПроверитьЗаполнение(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
	ПрослеживаемыйТовар = Материалы.НайтиСтроки(Новый Структура("ПрослеживаемыйТовар", Истина));
	ЕстьПрослеживаемыйТовар = ПрослеживаемыйТовар.Количество() <> 0;
	ТребуетсяУчетПрослеживаемости = (ВидОперации = Перечисления.ВидыОперацийРасходМатериалов.ИспользованиеМатериалов Или 
		(ВидОперации = Перечисления.ВидыОперацийРасходМатериалов.ПередачаСотруднику
		И СпособУчетаМатериаловПоСотруднику = Перечисления.СпособыУчетаМатериаловПоСотрудникам.Расход))
		И (Не СчетЗатрат = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств")
		Или СчетаУчетаЗатратВТаблице = Истина);
		
	Если ЕстьПрослеживаемыйТовар И Не ЗначениеЗаполнено(КодОперацииПрослеживаемости)
		И ТребуетсяУчетПрослеживаемости 
		И Не ТоварыПередаютсяВСоставеРабот Тогда
		ТекстОшибки = НСтр("ru='Не выбрана причина списания в прослеживаемости'");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, Ссылка, "НадписьКодОперации", , Отказ);
	КонецЕсли;
	
	Для Каждого Строка Из Материалы Цикл
		Если Строка.ПрослеживаемыйТовар И Не ЗначениеЗаполнено(Строка.СтранаПроисхождения)
			И ТребуетсяУчетПрослеживаемости Тогда
			ИмяСписка = НСтр("ru = 'Материалы'");
			Префикс = "Материалы[" + Формат(Строка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].";
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
			"Колонка", "Заполнение", НСтр("ru = 'Страна происхождения'"), Строка.НомерСтроки, ИмяСписка);
			ОбщегоНазначения.СообщитьПользователю(
			ТекстСообщения, ЭтотОбъект, Префикс + "СтранаПроисхождения", "Объект", Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;

	ПараметрыПроведения = Документы.ТребованиеНакладная.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ

	// Таблица списанных материалов
	ТаблицаСписанныеМатериалы = УчетТоваров.ПодготовитьТаблицуСписанныеТовары(
		ПараметрыПроведения.ТаблицаМатериалы, ПараметрыПроведения.МатериалыРеквизиты, Отказ);

	// Таблица списанных материалов заказчика
	ТаблицаСписанныеМатериалыЗаказчика = УчетТоваров.ПодготовитьТаблицуСписанныеТовары(
		ПараметрыПроведения.ТаблицаМатериалыЗаказчика, ПараметрыПроведения.МатериалыЗаказчикаРеквизиты, Отказ);

	// Структура таблиц для отражения в налоговом учете УСН
	СтруктураТаблицУСН = Новый Структура("ТаблицаТМЦ", ТаблицаСписанныеМатериалы);
	
	// Учет доходов и расходов ИП
	ТаблицыМатериаловПродукцииИП = Документы.ТребованиеНакладная.ПодготовитьТаблицыМатериаловПродукцииИП(
		ТаблицаСписанныеМатериалы, ПараметрыПроведения.ИПРеквизиты);
	
	ТаблицыСписанияМПЗИП = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицыСписанияМПЗ(
		ТаблицыМатериаловПродукцииИП.ТаблицаМатериалов, ПараметрыПроведения.ИПРеквизиты, Отказ);
	
	ТаблицаПоступлениеПродукцииИП = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуПоступлениеПродукции(
		ТаблицыМатериаловПродукцииИП.ПолученоПродукции, ПараметрыПроведения.ИПРеквизиты);
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ

	// Списание материалов
	УчетТоваров.СформироватьДвиженияСписаниеТоваров(
		ТаблицаСписанныеМатериалы, ПараметрыПроведения.МатериалыРеквизиты, Движения, Отказ);
	УчетТоваров.СформироватьДвиженияСписаниеТоваров(
		ТаблицаСписанныеМатериалыЗаказчика, ПараметрыПроведения.МатериалыЗаказчикаРеквизиты, Движения, Отказ);
		
	НалоговыйУчетУСН.СформироватьДвиженияУСН(ЭтотОбъект, СтруктураТаблицУСН);
	
	УчетМатериаловВЭксплуатации.СформироватьДвиженияПередачаМатериаловСотруднику(
		ПараметрыПроведения.ПередачаМатериаловСотрудникуТаблица,
		ТаблицаСписанныеМатериалы,
		ПараметрыПроведения.ПередачаМатериаловСотрудникуРеквизиты,
		Движения, Отказ);
		
	УчетТоваров.СформироватьДвиженияПоступлениеТарыВЭксплуатацию(ТаблицаСписанныеМатериалы,
		ПараметрыПроведения.ВозвратнаяТараТаблица,
		ПараметрыПроведения.ВозвратнаяТараРеквизиты, Движения, Отказ);
	
	// Учет НДС
	УчетНДСБП.СформироватьДвиженияСписаниеТоваровНаРасходы(
		ПараметрыПроведения.НДСМатериалы, ТаблицаСписанныеМатериалы, ПараметрыПроведения.НДСРеквизиты, Движения, Отказ);
		
	// Учет прослеживаемых товаров
	ТаблицыПрослеживаемости = ПодготовитьТаблицыДляПереносаРНПТНаОС(
		ПараметрыПроведения.ПрослеживаемыеТовары,
		ПараметрыПроведения.МатериалыРеквизиты,
		ПараметрыПроведения.ПрослеживаемыеОперации);
		
	ПрослеживаемыеОперации = ПрослеживаемостьБП.ПодготовитьТаблицуПоПрослеживаемымОперациям(
		ТаблицыПрослеживаемости.ПрослеживаемыеОперации, ТаблицаСписанныеМатериалы);
		
	ПрослеживаемостьБП.СформироватьДвиженияРеализацияТоваров(
		ПараметрыПроведения.ПрослеживаемыеТовары,
		ТаблицыПрослеживаемости.ПрослеживаемыеОперации,
		ПараметрыПроведения.МатериалыРеквизиты,
		Движения);
		
	ПрослеживаемостьБП.СформироватьДвиженияПоступлениеТоваров(
		ПараметрыПроведения.ПрослеживаемыеТоварыВСоставеработ,
		Неопределено,
		Неопределено,
		ПараметрыПроведения.МатериалыРеквизиты,
		Движения);
	
	ПрослеживаемостьБП.СформироватьДвиженияПоступлениеОС(
		ТаблицыПрослеживаемости.ПрослеживаемыеОС,
		Неопределено,
		Неопределено,
		ПараметрыПроведения.МатериалыРеквизиты,
		Движения);
	
	// Учет доходов и расходов ИП
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияСписаниеМПЗ(
		ТаблицыСписанияМПЗИП, ПараметрыПроведения.ИПРеквизиты, Движения, Отказ);
		
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияПоступлениеПродукции(
		ТаблицаПоступлениеПродукцииИП, ТаблицыСписанияМПЗИП.СтоимостьПродукции, 
		ПараметрыПроведения.ИПРеквизиты, Движения, Отказ);
		
	// Регистрация в последовательности
	РаботаСПоследовательностями.ЗарегистрироватьОтложенныеРасчетыВПоследовательности(
		ЭтотОбъект, Отказ, , ТаблицаСписанныеМатериалы);
		
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);
		
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();
	
	РаботаСПоследовательностями.ОтменитьРегистрациюВПоследовательности(ЭтотОбъект, Отказ);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЭтоНовый() Тогда
		Документы.ТребованиеНакладная.ЗаполнитьСубконтоЕслиОбъектНеОбработан(ЭтотОбъект);
	КонецЕсли;
	
	Если УчетнаяПолитика.СпособОценкиМПЗ(Организация, Дата) <> Перечисления.СпособыОценки.ФИФО 
		И НЕ ПолучитьФункциональнуюОпцию("ОсуществляетсяРеализацияТоваровУслугКомитентов")
		И Материалы.Количество() > 0 Тогда
		
		Материалы.ЗагрузитьКолонку(Новый Массив(Материалы.Количество()), "ДокументОприходования");
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВидОперации) Тогда
		ВидОперации = Перечисления.ВидыОперацийРасходМатериалов.ИспользованиеМатериалов;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СпособУчетаМатериаловПоСотруднику) Тогда
		СпособУчетаМатериаловПоСотруднику = Перечисления.СпособыУчетаМатериаловПоСотрудникам.Расход;
	КонецЕсли;
	
	Если ПроведениеСервер.ГрупповоеПерепроведение(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ВедетсяУчетПрослеживаемыхТоваров = ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров")
		И ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(Дата);
	
	Для каждого СтрокаТабличнойЧасти Из ЭтотОбъект.Материалы Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.ИдентификаторСтроки) Тогда
			СтрокаТабличнойЧасти.ИдентификаторСтроки = Новый УникальныйИдентификатор;
		КонецЕсли;
		Если СтрокаТабличнойЧасти.ПрослеживаемыйТовар = Ложь И ВедетсяУчетПрослеживаемыхТоваров Тогда
			СтрокиСРНПТ = СведенияПрослеживаемости.НайтиСтроки(
			Новый Структура("ИдентификаторСтроки", СтрокаТабличнойЧасти.ИдентификаторСтроки));
			Для Каждого СтрокаСРНПТ Из СтрокиСРНПТ Цикл
				СведенияПрослеживаемости.Удалить(СтрокаСРНПТ);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;

	ПрослеживаемыйТовар = Материалы.НайтиСтроки(Новый Структура("ПрослеживаемыйТовар", Истина));
	ЕстьПрослеживаемыйТовар = ПрослеживаемыйТовар.Количество() <> 0;
	
	Если ЕстьПрослеживаемыйТовар И (ВидОперации = Перечисления.ВидыОперацийРасходМатериалов.ИспользованиеМатериалов Или 
		(ВидОперации = Перечисления.ВидыОперацийРасходМатериалов.ПередачаСотруднику
		И СпособУчетаМатериаловПоСотруднику = Перечисления.СпособыУчетаМатериаловПоСотрудникам.Расход)) Тогда
		Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
			ПрослеживаемостьБП.ПодобратьРНПТ(ЭтотОбъект, Отказ, "Материалы");
			Для Каждого Строка Из ПрослеживаемыйТовар Цикл
				Строка.НомерГТД = Неопределено;
			КонецЦикла;
		КонецЕсли;
	Иначе
		СведенияПрослеживаемости.Очистить();
	КонецЕсли;

	СчетаУчетаВДокументах.ЗаполнитьПередЗаписью(ЭтотОбъект, РежимЗаписи);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоДокументуОснованию(Основание)

	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		
		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);
		
		ПодразделениеОрганизации = Основание.ПодразделениеОрганизации;
		Если Основание.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку Тогда
			Контрагент = Основание.Контрагент;
			ИмяТаблицы	= "МатериалыЗаказчика";
		Иначе
			ИмяТаблицы	= "Материалы";
		КонецЕсли;
		
		ДанныеОбъекта = Новый Структура("Дата, Организация, Склад");
		ЗаполнитьЗначенияСвойств(ДанныеОбъекта, ЭтотОбъект);
		
		Для Каждого ТекСтрокаТовары Из Основание.Товары Цикл
			
			СтрокаТабличнойЧасти                  = ЭтотОбъект[ИмяТаблицы].Добавить();
			СтрокаТабличнойЧасти.Номенклатура     = ТекСтрокаТовары.Номенклатура;
			СтрокаТабличнойЧасти.Количество       = ТекСтрокаТовары.Количество;
			СтрокаТабличнойЧасти.ЕдиницаИзмерения = ТекСтрокаТовары.ЕдиницаИзмерения;
			СтрокаТабличнойЧасти.КоличествоМест   = ТекСтрокаТовары.КоличествоМест;
			СтрокаТабличнойЧасти.Коэффициент      = ТекСтрокаТовары.Коэффициент;
			
			Если ИмяТаблицы	= "Материалы" Тогда
				СтрокаТабличнойЧасти.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Принимаются;
			КонецЕсли;
			
		КонецЦикла;
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.АвансовыйОтчет") Тогда
		
		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);
		
		ПодразделениеОрганизации = Основание.ПодразделениеОрганизации;
		
		СписокНоменклатуры = Основание.Товары.ВыгрузитьКолонку("Номенклатура");
		ЕдиницыИзмерения = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(СписокНоменклатуры, "ЕдиницаИзмерения");
		Для Каждого СтрокаОснования Из Основание.Товары Цикл
			
			НоваяСтрока                     = Материалы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОснования, "Номенклатура, Количество, НомерГТД, СтранаПроисхождения");
			НоваяСтрока.ЕдиницаИзмерения    = ЕдиницыИзмерения[СтрокаОснования.Номенклатура];
			НоваяСтрока.Коэффициент         = 1;
			НоваяСтрока.ОтражениеВУСН       = Перечисления.ОтражениеВУСН.Принимаются;
			
		КонецЦикла;
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену") Тогда
		
		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);

		СчетаУчетаЗатратВТаблице = Истина;
		
		// Подготовим исходные данные для заполнения табличной части
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос = Новый Запрос();
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Параметры.Вставить("Основание", Основание);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ СчетаПроизводствоИзДавальческогоСырья
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПроизводствоИзДавальческогоСырья))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА СчетаПроизводствоИзДавальческогоСырья.Счет ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПроизводствоИзМатериаловЗаказчика,
		|	ОтчетПроизводстваЗаСменуПродукция.НомерСтроки КАК НомерСтрокиВыпуск,
		|	ОтчетПроизводстваЗаСменуПродукция.Спецификация КАК Спецификация,
		|	ОтчетПроизводстваЗаСменуПродукция.Количество КАК КоличествоПродукции,
		|	ОтчетПроизводстваЗаСменуПродукция.Ссылка.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
		|	ОтчетПроизводстваЗаСменуПродукция.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	ОтчетПроизводстваЗаСменуПродукция.Ссылка.СчетЗатрат КАК СчетЗатрат,
		|	ВЫБОР
		|		КОГДА СчетаПроизводствоИзДавальческогоСырья.Счет ЕСТЬ NULL
		|			ТОГДА ОтчетПроизводстваЗаСменуПродукция.Номенклатура
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|	КОНЕЦ КАК Продукция
		|ПОМЕСТИТЬ Выпуск
		|ИЗ
		|	Документ.ОтчетПроизводстваЗаСмену.Продукция КАК ОтчетПроизводстваЗаСменуПродукция
		|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаПроизводствоИзДавальческогоСырья КАК СчетаПроизводствоИзДавальческогоСырья
		|		ПО ОтчетПроизводстваЗаСменуПродукция.Счет = СчетаПроизводствоИзДавальческогоСырья.Счет
		|ГДЕ
		|	ОтчетПроизводстваЗаСменуПродукция.Ссылка = &Основание
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЛОЖЬ,
		|	ОтчетПроизводстваЗаСменуУслуги.НомерСтроки,
		|	ОтчетПроизводстваЗаСменуУслуги.Спецификация,
		|	ОтчетПроизводстваЗаСменуУслуги.Количество,
		|	ОтчетПроизводстваЗаСменуУслуги.Ссылка.ПодразделениеЗатрат,
		|	ОтчетПроизводстваЗаСменуУслуги.НоменклатурнаяГруппа,
		|	ОтчетПроизводстваЗаСменуУслуги.Ссылка.СчетЗатрат,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Продукция
		|ИЗ
		|	Документ.ОтчетПроизводстваЗаСмену.Услуги КАК ОтчетПроизводстваЗаСменуУслуги
		|ГДЕ
		|	ОтчетПроизводстваЗаСменуУслуги.Ссылка = &Основание
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Спецификация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СчетаПроизводствоИзДавальческогоСырья";
		
		Запрос.Выполнить();
		
		ЗаполнитьМатериалыПоДаннымОВыпуске(МенеджерВременныхТаблиц);
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.АктОбОказанииПроизводственныхУслуг") Тогда
		
		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);

		СчетаУчетаЗатратВТаблице = Истина;
		
		// Подготовим исходные данные для заполнения табличной части
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос = Новый Запрос();
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Параметры.Вставить("Основание", Основание);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЛОЖЬ КАК ПроизводствоИзМатериаловЗаказчика,
		|	АктОбОказанииПроизводственныхУслугУслуги.НомерСтроки КАК НомерСтрокиВыпуск,
		|	АктОбОказанииПроизводственныхУслугУслуги.Спецификация КАК Спецификация,
		|	АктОбОказанииПроизводственныхУслугУслуги.Количество КАК КоличествоПродукции,
		|	АктОбОказанииПроизводственныхУслугУслуги.Ссылка.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
		|	АктОбОказанииПроизводственныхУслугУслуги.Ссылка.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	АктОбОказанииПроизводственныхУслугУслуги.Ссылка.СчетЗатрат КАК СчетЗатрат,
		|	АктОбОказанииПроизводственныхУслугУслуги.Номенклатура КАК Продукция
		|ПОМЕСТИТЬ Выпуск
		|ИЗ
		|	Документ.АктОбОказанииПроизводственныхУслуг.Услуги КАК АктОбОказанииПроизводственныхУслугУслуги
		|ГДЕ
		|	АктОбОказанииПроизводственныхУслугУслуги.Ссылка = &Основание
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Спецификация";
		Запрос.Выполнить();
		
		ЗаполнитьМатериалыПоДаннымОВыпуске(МенеджерВременныхТаблиц);
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.РеализацияУслугПоПереработке") Тогда
		// Заполнение шапки
		Комментарий        = Основание.Комментарий;
		Контрагент         = Основание.Контрагент;
		Организация        = Основание.Организация;
		ПодразделениеОрганизации = Основание.ПодразделениеОрганизации;
		Для Каждого ТекСтрокаМатериалыЗаказчика ИЗ Основание.МатериалыЗаказчика Цикл
			НоваяСтрока              = МатериалыЗаказчика.Добавить();
			НоваяСтрока.Количество   = ТекСтрокаМатериалыЗаказчика.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаМатериалыЗаказчика.Номенклатура;
			НоваяСтрока.СчетПередачи = ТекСтрокаМатериалыЗаказчика.СчетУчета;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);
		
		Склад                    = Основание.СкладПолучатель;
		ПодразделениеОрганизации = Основание.ПодразделениеПолучатель;
		
		Для Каждого СтрокаОснования Из Основание.Товары Цикл
			
			НоваяСтрока = Материалы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОснования, "Номенклатура, КоличествоМест, ЕдиницаИзмерения, Коэффициент, Количество");
			НоваяСтрока.ОтражениеВУСН = Перечисления.ОтражениеВУСН.Принимаются;
			
		КонецЦикла;
		
		// Не поддерживается перемещение материалов, принятых в переработку
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ИнвентаризацияНЗП") Тогда
		
		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);

		СчетаУчетаЗатратВТаблице = Истина;
		
		// Подготовим исходные данные для заполнения табличной части.
		// Спецификацию в первую очередь берем ту, которая указана основной для продукции, если она не помечена на удаление.
		// Если основная спецификация не указана или помечена на удаление,
		// то берем единственную не помеченную удаление спецификацию, относящуюся к продукции. Продукция, для которой
		// не удалось подобрать спецификацию, не попадет в создаваемый документ.
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос = Новый Запрос();
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Параметры.Вставить("Основание", Основание);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	МИНИМУМ(ИнвентаризацияНЗПСоставПоПродукции.НомерСтроки) КАК НомерСтрокиВыпуск,
		|	ИнвентаризацияНЗП.СчетЗатрат КАК СчетЗатрат,
		|	ИнвентаризацияНЗП.ПодразделениеОрганизации КАК ПодразделениеЗатрат,
		|	ИнвентаризацияНЗПСоставПоПродукции.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	ИнвентаризацияНЗПСоставПоПродукции.Продукция КАК Продукция,
		|	ВЫБОР
		|		КОГДА Номенклатура.ОсновнаяСпецификацияНоменклатуры.ПометкаУдаления
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.СпецификацииНоменклатуры.ПустаяСсылка)
		|		ИНАЧЕ Номенклатура.ОсновнаяСпецификацияНоменклатуры
		|	КОНЕЦ КАК Спецификация,
		|	СУММА(ИнвентаризацияНЗПСоставПоПродукции.Количество) КАК КоличествоПродукции
		|ПОМЕСТИТЬ ВТ_ОсновныеСпецификации
		|ИЗ
		|	Документ.ИнвентаризацияНЗП КАК ИнвентаризацияНЗП
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияНЗП.СоставПоПродукции КАК ИнвентаризацияНЗПСоставПоПродукции
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|			ПО ИнвентаризацияНЗПСоставПоПродукции.Продукция = Номенклатура.Ссылка
		|		ПО ИнвентаризацияНЗП.Ссылка = ИнвентаризацияНЗПСоставПоПродукции.Ссылка
		|ГДЕ
		|	ИнвентаризацияНЗП.Ссылка = &Основание
		|
		|СГРУППИРОВАТЬ ПО
		|	ИнвентаризацияНЗП.ПодразделениеОрганизации,
		|	ИнвентаризацияНЗПСоставПоПродукции.НоменклатурнаяГруппа,
		|	ИнвентаризацияНЗП.СчетЗатрат,
		|	ИнвентаризацияНЗПСоставПоПродукции.Продукция,
		|	ВЫБОР
		|		КОГДА Номенклатура.ОсновнаяСпецификацияНоменклатуры.ПометкаУдаления
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.СпецификацииНоменклатуры.ПустаяСсылка)
		|		ИНАЧЕ Номенклатура.ОсновнаяСпецификацияНоменклатуры
		|	КОНЕЦ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Продукция
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеСпецификации.Продукция КАК Продукция,
		|	МАКСИМУМ(СпецификацииНоменклатуры.Ссылка) КАК Спецификация
		|ПОМЕСТИТЬ ВТ_ЕдинственныеСпецификации
		|ИЗ
		|	ВТ_ОсновныеСпецификации КАК ОсновныеСпецификации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СпецификацииНоменклатуры КАК СпецификацииНоменклатуры
		|		ПО ОсновныеСпецификации.Продукция = СпецификацииНоменклатуры.Владелец
		|ГДЕ
		|	ОсновныеСпецификации.Спецификация = ЗНАЧЕНИЕ(Справочник.СпецификацииНоменклатуры.ПустаяСсылка)
		|	И НЕ СпецификацииНоменклатуры.ПометкаУдаления
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновныеСпецификации.Продукция
		|
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(СпецификацииНоменклатуры.Ссылка) = 1
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Спецификация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеСпецификации.НомерСтрокиВыпуск КАК НомерСтрокиВыпуск,
		|	ОсновныеСпецификации.СчетЗатрат КАК СчетЗатрат,
		|	ОсновныеСпецификации.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
		|	ОсновныеСпецификации.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	ОсновныеСпецификации.Продукция КАК Продукция,
		|	ВЫБОР
		|		КОГДА ОсновныеСпецификации.Спецификация = ЗНАЧЕНИЕ(Справочник.СпецификацииНоменклатуры.ПустаяСсылка)
		|			ТОГДА ЕдинственныеСпецификации.Спецификация
		|		ИНАЧЕ ОсновныеСпецификации.Спецификация
		|	КОНЕЦ КАК Спецификация,
		|	СУММА(ОсновныеСпецификации.КоличествоПродукции) КАК КоличествоПродукции,
		|	ЛОЖЬ КАК ПроизводствоИзМатериаловЗаказчика
		|ПОМЕСТИТЬ Выпуск
		|ИЗ
		|	ВТ_ОсновныеСпецификации КАК ОсновныеСпецификации
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЕдинственныеСпецификации КАК ЕдинственныеСпецификации
		|		ПО ОсновныеСпецификации.Продукция = ЕдинственныеСпецификации.Продукция
		|ГДЕ
		|	(ОсновныеСпецификации.Спецификация <> ЗНАЧЕНИЕ(Справочник.СпецификацииНоменклатуры.ПустаяСсылка)
		|			ИЛИ НЕ ЕдинственныеСпецификации.Спецификация ЕСТЬ NULL)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновныеСпецификации.НомерСтрокиВыпуск,
		|	ОсновныеСпецификации.СчетЗатрат,
		|	ОсновныеСпецификации.ПодразделениеЗатрат,
		|	ОсновныеСпецификации.НоменклатурнаяГруппа,
		|	ОсновныеСпецификации.Продукция,
		|	ОсновныеСпецификации.Спецификация,
		|	ВЫБОР
		|		КОГДА ОсновныеСпецификации.Спецификация = ЗНАЧЕНИЕ(Справочник.СпецификацииНоменклатуры.ПустаяСсылка)
		|			ТОГДА ЕдинственныеСпецификации.Спецификация
		|		ИНАЧЕ ОсновныеСпецификации.Спецификация
		|	КОНЕЦ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Спецификация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ОсновныеСпецификации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ЕдинственныеСпецификации";
		
		Запрос.Выполнить();
		
		ЗаполнитьМатериалыПоДаннымОВыпуске(МенеджерВременныхТаблиц);
			
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Дата) Тогда
		Дата = НачалоДня(ТекущаяДатаСеанса());
	КонецЕсли;
	
	ВедетсяУчетПрослеживаемыхТоваров = ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров")
	И ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(Дата);
	
	Если ВедетсяУчетПрослеживаемыхТоваров Тогда
		МассивНоменклатуры = Материалы.ВыгрузитьКолонку("Номенклатура");
		РеквизитыНоменклатурыИзСправочника = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(МассивНоменклатуры,
			"ПрослеживаемыйТовар, СтранаПроисхождения, ПрослеживаемыйКомплект");
		РеквизитыНомекнклатурыИзИстории = Справочники.Номенклатура.ПризнакПрослеживаемостиНаДатуИзИстории(МассивНоменклатуры, Дата);
		
		Для Каждого Строка Из Материалы Цикл
			СтрокаРеквизитыСправочника = РеквизитыНоменклатурыИзСправочника.Получить(Строка.Номенклатура);
			СтрокаРеквизитыИстории     = РеквизитыНомекнклатурыИзИстории.Получить(Строка.Номенклатура);
			Если СтрокаРеквизитыИстории <> Неопределено Тогда
				Строка.ПрослеживаемыйТовар    = СтрокаРеквизитыИстории.ПрослеживаемыйТовар Или СтрокаРеквизитыИстории.ПрослеживаемыйКомплект;
				Строка.ПрослеживаемыйКомплект = СтрокаРеквизитыИстории.ПрослеживаемыйКомплект;
			ИначеЕсли СтрокаРеквизитыСправочника <> Неопределено Тогда
				Строка.ПрослеживаемыйТовар    = СтрокаРеквизитыСправочника.ПрослеживаемыйТовар Или СтрокаРеквизитыСправочника.ПрослеживаемыйКомплект;
				Строка.ПрослеживаемыйКомплект = СтрокаРеквизитыСправочника.ПрослеживаемыйКомплект;
			КонецЕсли;
			
			Если СтрокаРеквизитыСправочника <> Неопределено Тогда
				
				Строка.СтранаПроисхождения    = СтрокаРеквизитыСправочника.СтранаПроисхождения;
				
			Конецесли;

		КонецЦикла;
		
	КонецЕсли;

	НДСвСтоимостиТоваров = Перечисления.ДействиеНДСВСтоимостиТоваров.НеИзменять;
	ДляСписанияНДСИспользоватьСчетИАналитикуУчетаЗатрат = Ложь;
	Ответственный = Пользователи.ТекущийПользователь();

КонецПроцедуры

Процедура ЗаполнитьМатериалыПоДаннымОВыпуске(МенеджерВременныхТаблиц)
	
	// Получим данные о сырье для заполнения табличной части
	// Исходные данные (таблица Выпуск) должны быть помещены в МенеджерВременныхТаблиц до выполнения процедуры
	ЭлементыТекстаЗапроса = Новый Массив;
	// Получаем данные о расходе сырья
	ЭлементыТекстаЗапроса.Добавить(УправлениеПроизводством.ТекстЗапросаВременнаяТаблицаЗатратыСырья());
	
	// Преобразуем в формат получателя
	ЭлементыТекстаЗапроса.Добавить(
		"ВЫБРАТЬ
		|	ЗатратыСырья.ПроизводствоИзМатериаловЗаказчика КАК ПроизводствоИзМатериаловЗаказчика,
		|	МИНИМУМ(ЗатратыСырья.НомерСтрокиВыпуск) КАК НомерСтрокиВыпуск,
		|	МАКСИМУМ(ЗатратыСырья.НомерСтрокиСпецификации) КАК НомерСтрокиСпецификации,
		|	ЗатратыСырья.СчетЗатрат КАК СчетЗатрат,
		|	ЗатратыСырья.СчетЗатрат.Код КАК СчетЗатратПредставление,
		|	ЗатратыСырья.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
		|	ЗатратыСырья.ПодразделениеЗатрат.Наименование КАК ПодразделениеЗатратПредставление,
		|	ЗатратыСырья.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	ЗатратыСырья.НоменклатурнаяГруппа.Наименование КАК НоменклатурнаяГруппаПредставление,
		|	ЗатратыСырья.Номенклатура КАК Номенклатура,
		|	ЗатратыСырья.Номенклатура.Наименование КАК НоменклатураПредставление,
		|	ВЫБОР
		|		КОГДА ЗатратыСырья.СчетЗатрат В (&СчетаСОтключеннойАналитикойПродукция)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|		ИНАЧЕ ЗатратыСырья.Продукция
		|	КОНЕЦ КАК Продукция,
		|	ВЫБОР
		|		КОГДА ЗатратыСырья.СчетЗатрат В (&СчетаСОтключеннойАналитикойПродукция)
		|			ТОГДА """"
		|		ИНАЧЕ ЗатратыСырья.Продукция.Наименование
		|	КОНЕЦ КАК ПродукцияПредставление,
		|	СУММА(ЗатратыСырья.Количество) КАК Количество,
		|	ЗатратыСырья.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	1 КАК Коэффициент,
		|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.Принимаются) КАК ОтражениеВУСН,
		|	ЗатратыСырья.СтатьяЗатрат КАК СтатьяЗатрат,
		|	ЕСТЬNULL(ВидСубконтоНоменклатурнаяГруппа.НомерСтроки, 0) КАК НомерСубконтоНоменклатурнаяГруппа,
		|	ЕСТЬNULL(ВидСубконтоСтатьяЗатрат.НомерСтроки, 0) КАК НомерСубконтоСтатьяЗатрат,
		|	ЕСТЬNULL(ВидСубконтоПродукция.НомерСтроки, 0) КАК НомерСтрокиСубконтоПродукция
		|ИЗ
		|	ЗатратыСырья КАК ЗатратыСырья
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидСубконтоНоменклатурнаяГруппа
		|		ПО ЗатратыСырья.СчетЗатрат = ВидСубконтоНоменклатурнаяГруппа.Ссылка
		|			И (ВидСубконтоНоменклатурнаяГруппа.ВидСубконто = &ВидСубконтоНоменклатурнаяГруппа)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидСубконтоСтатьяЗатрат
		|		ПО ЗатратыСырья.СчетЗатрат = ВидСубконтоСтатьяЗатрат.Ссылка
		|			И (ВидСубконтоСтатьяЗатрат.ВидСубконто = &ВидСубконтоСтатьяЗатрат)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидСубконтоПродукция
		|		ПО ЗатратыСырья.СчетЗатрат = ВидСубконтоПродукция.Ссылка
		|			И (ВидСубконтоПродукция.ВидСубконто = &ВидСубконтоПродукция)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗатратыСырья.ПроизводствоИзМатериаловЗаказчика,
		|	ЗатратыСырья.Номенклатура,
		|	ЗатратыСырья.Номенклатура.Наименование,
		|	ЗатратыСырья.НоменклатурнаяГруппа,
		|	ЗатратыСырья.НоменклатурнаяГруппа.Наименование,
		|	ЗатратыСырья.СчетЗатрат,
		|	ЗатратыСырья.СчетЗатрат.Код,
		|	ЗатратыСырья.ПодразделениеЗатрат,
		|	ЗатратыСырья.ПодразделениеЗатрат.Наименование,
		|	ЗатратыСырья.ЕдиницаИзмерения,
		|	ЗатратыСырья.СтатьяЗатрат,
		|	ЕСТЬNULL(ВидСубконтоНоменклатурнаяГруппа.НомерСтроки, 0),
		|	ЕСТЬNULL(ВидСубконтоСтатьяЗатрат.НомерСтроки, 0),
		|	ЕСТЬNULL(ВидСубконтоПродукция.НомерСтроки, 0),
		|	ВЫБОР
		|		КОГДА ЗатратыСырья.СчетЗатрат В (&СчетаСОтключеннойАналитикойПродукция)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|		ИНАЧЕ ЗатратыСырья.Продукция
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ЗатратыСырья.СчетЗатрат В (&СчетаСОтключеннойАналитикойПродукция)
		|			ТОГДА """"
		|		ИНАЧЕ ЗатратыСырья.Продукция.Наименование
		|	КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	СчетЗатратПредставление,
		|	ПодразделениеЗатратПредставление,
		|	НоменклатурнаяГруппаПредставление,
		|	ПродукцияПредставление,
		|	НомерСтрокиСпецификации,
		|	НоменклатураПредставление");
		
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = СтрСоединить(ЭлементыТекстаЗапроса, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета());
	Запрос.УстановитьПараметр("ВидСубконтоНоменклатурнаяГруппа", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	Запрос.УстановитьПараметр("ВидСубконтоСтатьяЗатрат", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	Запрос.УстановитьПараметр("ВидСубконтоПродукция", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Продукция);
	// Если на счете затрат не используется аналитика "Продукция", то заполнять ее в документе не требуется. При этом строки табличной части
	// будут сгруппированы по остальной аналитике.
	СчетаСОтключеннойАналитикойПродукция =
		Справочники.НастройкиУчетаЗатрат.СчетаСОтключеннойАналитикой(Дата, Организация, ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Продукция);
	Запрос.УстановитьПараметр("СчетаСОтключеннойАналитикойПродукция", СчетаСОтключеннойАналитикойПродукция);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл

		Если Выборка.ПроизводствоИзМатериаловЗаказчика Тогда
			НоваяСтрока = МатериалыЗаказчика.Добавить();
		Иначе
			НоваяСтрока = Материалы.Добавить();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Если Не Выборка.ПроизводствоИзМатериаловЗаказчика Тогда
			Если Выборка.НомерСубконтоНоменклатурнаяГруппа <> 0 Тогда
				НоваяСтрока["Субконто" + XMLСтрока(Выборка.НомерСубконтоНоменклатурнаяГруппа)] = Выборка.НоменклатурнаяГруппа;
			КонецЕсли;
			Если Выборка.НомерСубконтоСтатьяЗатрат <> 0 Тогда
				НоваяСтрока["Субконто" + XMLСтрока(Выборка.НомерСубконтоСтатьяЗатрат)] = Выборка.СтатьяЗатрат;
			КонецЕсли;
			Если Выборка.НомерСтрокиСубконтоПродукция <> 0 Тогда
				НоваяСтрока["Субконто" + XMLСтрока(Выборка.НомерСтрокиСубконтоПродукция)] = Выборка.Продукция;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПодготовитьТаблицыДляПереносаРНПТНаОС(ПрослеживаемыеТовары, Реквизиты, ПрослеживаемыеОперации)
	
	ТаблицаПрослеживаемыеОС       = Неопределено;
	ТаблицаОперации               = Неопределено;

	СтруктураТаблиц = Новый Структура();
	СтруктураТаблиц.Вставить("ПрослеживаемыеОС",       ТаблицаПрослеживаемыеОС);
	СтруктураТаблиц.Вставить("ПрослеживаемыеОперации", ТаблицаОперации);
	
	Если ПрослеживаемыеТовары = Неопределено Тогда
		Возврат СтруктураТаблиц;
	КонецЕсли;
	
	Если Реквизиты = Неопределено Тогда
		Возврат СтруктураТаблиц;
	КонецЕсли;
	
	СтрокаРеквизитов = Реквизиты[0];
	Если Не СтрокаРеквизитов.СчетаУчетаЗатратВТаблице И 
		СтрокаРеквизитов.СчетЗатрат = ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств Тогда
		ТаблицаПрослеживаемыеОС = ПрослеживаемыеТовары.Скопировать();
		ТаблицаПрослеживаемыеОС.ЗаполнитьЗначения(СтрокаРеквизитов.Субконто1, "ОсновноеСредство");
		КолонкаКомплектующие = ТаблицаПрослеживаемыеОС.ВыгрузитьКолонку("Номенклатура");
		ТаблицаПрослеживаемыеОС.ЗагрузитьКолонку(КолонкаКомплектующие, "Комплектующие");
	Иначе
		ТаблицаОперации = ПрослеживаемыеОперации;
	КонецЕсли;
	
	СтруктураТаблиц.ПрослеживаемыеОС       = ТаблицаПрослеживаемыеОС;
	СтруктураТаблиц.ПрослеживаемыеОперации = ТаблицаОперации;
	
	Возврат СтруктураТаблиц;

КонецФункции

#КонецОбласти

#КонецЕсли
