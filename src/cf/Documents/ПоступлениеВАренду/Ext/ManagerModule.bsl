#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 7, 0);
	
КонецФункции

Функция СчетаУчетаПредметаАренды(ДанныеОбъекта) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("СчетУчета", ?(ДанныеОбъекта.ПринятьКУчету Или ДанныеОбъекта.ПереходНаФСБУ25,
		ПланыСчетов.Хозрасчетный.АрендованноеИмущество,
		ПланыСчетов.Хозрасчетный.ПриобретениеОсновныхСредств));
	Результат.Вставить("СчетНачисленияАмортизации", ПланыСчетов.Хозрасчетный.АмортизацияАрендованногоИмущества);
	Если ДанныеОбъекта.ВалютаВзаиморасчетов = ДанныеОбъекта.ВалютаРегламентированногоУчета Тогда
		Результат.Вставить("СчетУчетаНДС", ПланыСчетов.Хозрасчетный.НДСпоАренднымОбязательствам);
	ИначеЕсли ДанныеОбъекта.РасчетыВУЕ Тогда
		Результат.Вставить("СчетУчетаНДС", ПланыСчетов.Хозрасчетный.НДСпоАренднымОбязательствамУЕ);
	Иначе
		Результат.Вставить("СчетУчетаНДС", ПланыСчетов.Хозрасчетный.НДСпоАренднымОбязательствамВал);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Устарела. Используется для старых документов с признаком ЛизингДоФСБУ25.
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(Объект, СтрокаТаблицы, ИмяТаблицы) Экспорт

	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаНоменклатуры(Объект.Организация,
		СтрокаТаблицы.Номенклатура, Объект.Склад);
		
	СтрокаТаблицы.СчетУчета = СчетаУчета.СчетУчета;
	
	Если Объект.РасчетыВУЕ Тогда
		СтрокаТаблицы.СчетУчетаНДС = ПланыСчетов.Хозрасчетный.НДСпоАренднымОбязательствамУЕ;
	Иначе
		СтрокаТаблицы.СчетУчетаНДС = ПланыСчетов.Хозрасчетный.НДСпоАренднымОбязательствам;
	КонецЕсли;

КонецПроцедуры

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Акт о принятии к учету ОС по произвольной форме
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктОПринятииКУчетуПредметовАренды";
	КомандаПечати.Представление = НСтр("ru = 'Акт о принятии к учету предметов аренды'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок       = 10;

	// Акт о приеме-передаче ОС (ОС-1)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОС1";
	КомандаПечати.Представление = НСтр("ru = 'Акт о приеме-передаче ОС (ОС-1)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок       = 20;
	
	// Справка-расчет "Начисление процентных расходов"
	УчетПроцентовПоОбязательствам.ДобавитьКомандуПечатиНачислениеПроцентныхРасходов(КомандыПечати);
	
	// Справка-расчет "Рублевые суммы документа в валюте"
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьРублевыхСуммДокументовВВалюте";
	КомандаПечати.Идентификатор = "РублевыеСуммыДокументаВВалюте";
	КомандаПечати.Представление = НСтр("ru = 'Справка-расчет ""Рублевые суммы документа в валюте""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ФункциональныеОпции = "ИспользоватьВалютныйУчет";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Поступление в аренду (лизинг)""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

Функция ПодготовитьТекстЗапросаДляПечатиСправкиРасчетаРублевыеСуммыДокументовВВалюте(НомераТаблиц) Экспорт
	
	НомераТаблиц.Вставить("ВТ_Реквизиты",                   НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаРеквизитов",              НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_РублевыеСуммые",              НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_ЗачтенныеАвансы",             НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаПредоплат",               НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ВТ_ЗачтенныеАвансы", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ВТ_Реквизиты",       НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаСумм",                    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_РублевыеСуммы",      НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Проведен КАК Проведен,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	"""" КАК НомерВходящегоДокумента,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаВходящегоДокумента,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДС, ЛОЖЬ) КАК УчетАгентскогоНДС,
	|	ЛОЖЬ КАК ЭлектронныеУслуги,
	|	Реквизиты.СуммаВключаетНДС КАК СуммаВключаетНДС
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.ПоступлениеВАренду КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Проведен КАК Проведен,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	Реквизиты.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	Реквизиты.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	|	Реквизиты.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	Реквизиты.ЭлектронныеУслуги КАК ЭлектронныеУслуги,
	|	Реквизиты.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	0 КАК ВсегоВал,
	|	0 КАК НДСВал
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РублевыеСуммы.Регистратор КАК Регистратор,
	|	РублевыеСуммы.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РублевыеСуммы.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РублевыеСуммы.Всего КАК Всего,
	|	РублевыеСуммы.НДС КАК НДС,
	|	РублевыеСуммы.НалоговаяБазаНДС КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ РублевыеСуммы
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО РублевыеСуммы.Регистратор = Реквизиты.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	ТабличнаяЧастьДокумента,
	|	НомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Регистратор КАК Ссылка,
	|	Хозрасчетный.Сумма КАК СуммаПредоплатыРуб,
	|	Хозрасчетный.ВалютнаяСуммаДт КАК СуммаПредоплатыВал,
	|	ХозрасчетныйСубконто.Значение КАК Документ,
	|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйСубконто.Значение) КАК ДокументПредоплатыПредставление,
	|	Реквизиты.Организация КАК Организация
	|ПОМЕСТИТЬ ЗачтенныеАвансы
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО Хозрасчетный.Регистратор = Реквизиты.Ссылка
	|			И Хозрасчетный.СчетДт = Реквизиты.СчетУчетаРасчетовСКонтрагентом
	|			И (Реквизиты.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗачтенныеАвансы.Ссылка КАК Ссылка,
	|	ЗачтенныеАвансы.СуммаПредоплатыРуб КАК СуммаПредоплатыРуб,
	|	ЗачтенныеАвансы.СуммаПредоплатыВал КАК СуммаПредоплатыВал,
	|	ЗачтенныеАвансы.Документ КАК Документ,
	|	ЗачтенныеАвансы.ДокументПредоплатыПредставление КАК ДокументПредоплатыПредставление,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК НомерВходящегоДокумента,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаВходящегоДокумента
	|ИЗ
	|	ЗачтенныеАвансы КАК ЗачтенныеАвансы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ЗачтенныеАвансы.Организация = ДанныеПервичныхДокументов.Организация
	|			И ЗачтенныеАвансы.Документ = ДанныеПервичныхДокументов.Документ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗачтенныеАвансы.Ссылка
	|ИТОГИ
	|	СУММА(СуммаПредоплатыРуб),
	|	СУММА(СуммаПредоплатыВал)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ЗачтенныеАвансы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредметыЛизинга.Ссылка КАК Ссылка,
	|	ПредметыЛизинга.НомерСтроки КАК НомерСтроки,
	|	ПредметыЛизинга.Номенклатура КАК Товар,
	|	ПредметыЛизинга.Номенклатура.Наименование КАК ТоварНаименование,
	|	ПредметыЛизинга.Сумма КАК ВсегоВал,
	|	ПредметыЛизинга.СуммаНДС КАК НДСВал,
	|	ПредметыЛизинга.СтавкаНДС КАК СтавкаНДС,
	|	РублевыеСуммы.Всего КАК ВсегоРуб,
	|	РублевыеСуммы.НДС КАК НДСРуб,
	|	РублевыеСуммы.НалоговаяБазаНДС КАК НалоговаяБазаНДСРуб
	|ИЗ
	|	Документ.ПоступлениеВАренду.ПредметыЛизинга КАК ПредметыЛизинга
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РублевыеСуммы КАК РублевыеСуммы
	|		ПО ПредметыЛизинга.Ссылка = РублевыеСуммы.Регистратор
	|			И (РублевыеСуммы.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ПредметыЛизинга))
	|			И ПредметыЛизинга.НомерСтроки = РублевыеСуммы.НомерСтрокиДокумента
	|ГДЕ
	|	ПредметыЛизинга.Сумма <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПредметыАренды.Ссылка,
	|	ПредметыАренды.НомерСтроки,
	|	ПредметыАренды.ПредметАренды,
	|	ПредметыАренды.ПредметАренды.Наименование,
	|	ПредметыАренды.Сумма,
	|	ПредметыАренды.СуммаНДС,
	|	ПредметыАренды.СтавкаНДС,
	|	РублевыеСуммы.Всего,
	|	РублевыеСуммы.НДС,
	|	РублевыеСуммы.НалоговаяБазаНДС
	|ИЗ
	|	Документ.ПоступлениеВАренду.ПредметыАренды КАК ПредметыАренды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РублевыеСуммы КАК РублевыеСуммы
	|		ПО ПредметыАренды.Ссылка = РублевыеСуммы.Регистратор
	|			И (РублевыеСуммы.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ПредметыАренды))
	|			И ПредметыАренды.НомерСтроки = РублевыеСуммы.НомерСтрокиДокумента
	|ГДЕ
	|	ПредметыАренды.Сумма <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ВсегоВал),
	|	СУММА(НДСВал),
	|	СУММА(ВсегоРуб),
	|	СУММА(НДСРуб),
	|	СУММА(НалоговаяБазаНДСРуб)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РублевыеСуммы";
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Контрагент");
	
	Возврат Результат;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы <> "ФормаОбъекта" Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Ключ, "ЛизингДоФСБУ25,ВидОперации,СпособОценкиАрендыБУ");
		Если Реквизиты.ЛизингДоФСБУ25 = Истина // Может быть Неопределено
			Или Реквизиты.ВидОперации = Перечисления.ВидыОперацийПоступлениеВАренду.ПустаяСсылка()
			И Реквизиты.СпособОценкиАрендыБУ = Перечисления.СпособыОценкиБУ.ПустаяСсылка() Тогда
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "ФормаДокументаЛизингДоФСБУ25";
		КонецЕсли;
		Возврат;
		
	КонецЕсли;
		
	Если Параметры.Свойство("ЗначениеКопирования") И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Параметры.Свойство("ЗначенияЗаполнения") Тогда
		Параметры.Вставить("ЗначенияЗаполнения", Новый Структура);
	КонецЕсли;
	
	ЕстьСвойствоВидОперации = Параметры.ЗначенияЗаполнения.Свойство("ВидОперации");
	Если ЕстьСвойствоВидОперации Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьЛизинг = ПолучитьФункциональнуюОпцию("ВедетсяУчетЛизинговогоИмущества");
	ЕстьАренда = ПолучитьФункциональнуюОпцию("ВедетсяУчетПредметовАренды");
	Если ЕстьЛизинг И ЕстьАренда Тогда // Просим пользователя выбрать вид операции
		СтандартнаяОбработка = Ложь;
		ВыбраннаяФорма = "ВыборОперации";
	Иначе
		ВидОперации = ?(ЕстьЛизинг,
			Перечисления.ВидыОперацийПоступлениеВАренду.ПоступлениеВЛизинг,
			Перечисления.ВидыОперацийПоступлениеВАренду.ПоступлениеВАренду);
		Параметры.ЗначенияЗаполнения.Вставить("ВидОперации", ВидОперации); 
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиОбновленияИБ

Процедура УстановитьСозданДоФСБУ25(Параметры) Экспорт

	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1000
		|	ПоступлениеВАрендуПредметыЛизинга.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ПоступлениеВАренду.ПредметыЛизинга КАК ПоступлениеВАрендуПредметыЛизинга
		|ГДЕ
		|	НЕ ПоступлениеВАрендуПредметыЛизинга.Ссылка.ЛизингДоФСБУ25");
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 0 Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Ложь;
	
	ПроблемныхОбъектов = 0;
	ОбъектовОбработано = 0;
	
	Пока Выборка.Следующий() Цикл
		
		Попытка
			
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Если ДокументОбъект = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ДокументОбъект.ЛизингДоФСБУ25 = Истина;
			ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийПоступлениеВАренду.ПоступлениеВЛизинг;
			ДокументОбъект.НалоговыйУчетИмуществаВедетЛизингополучатель = Истина;
			ДокументОбъект.СпособОценкиАрендыБУ = Перечисления.СпособыОценкиБУ.РавнаСуммеДоговора;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			ОбъектовОбработано = ОбъектовОбработано + 1;
			
		Исключение
			
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось обработать документ %1 по причине:
					|%2'"),
					Выборка.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Документы.ПоступлениеВАренду, 
				Выборка.Ссылка, 
				ТекстСообщения);
				
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбъектовОбработано = 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процедуре Документы.ПоступлениеВАренду.УстановитьСозданДоФСБУ25
				|не удалось обработать документы: %1'"),
				ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
			УровеньЖурналаРегистрации.Информация,
			Метаданные.Документы.ПоступлениеВАренду,
			,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Процедура Документы.ПоступлениеВАренду.УстановитьСозданДоФСБУ25
					|обработала очередную порцию документов: %1'"), ОбъектовОбработано));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.Ссылка,
	|	Реквизиты.СуммаВключаетНДС,
	|	Реквизиты.НДСВключенВСтоимость,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов,
	|	Реквизиты.СпособОценкиАрендыБУ,
	|	Реквизиты.ВидОперации,
	|	Реквизиты.НалоговыйУчетИмуществаВедетЛизингополучатель,
	|	Реквизиты.ПереходНаФСБУ25,
	|	Реквизиты.СтоимостьОбязательства,
	|	Реквизиты.АвансовыеПлатежи
	|ИЗ
	|	Документ.ПоступлениеВАренду КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	ТаблицаРеквизиты = Запрос.Выполнить().Выгрузить();
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	Реквизиты.Вставить("ВалютаРеглУчета", ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	
	Если Реквизиты.ВалютаВзаиморасчетов = Реквизиты.ВалютаРеглУчета Тогда
		Реквизиты.Вставить("КурсДокумента", 1);
		Реквизиты.Вставить("КратностьДокумента", 1);
		КоэффициентРуб = 1;
	Иначе
		Реквизиты.Вставить("КурсДокумента", Реквизиты.КурсВзаиморасчетов);
		Реквизиты.Вставить("КратностьДокумента", Реквизиты.КратностьВзаиморасчетов);
		КоэффициентРуб = Реквизиты.КурсВзаиморасчетов / Реквизиты.КратностьВзаиморасчетов;
	КонецЕсли;
	
	Если Реквизиты.ВалютаВзаиморасчетов = Реквизиты.ВалютаДокумента Тогда
		Реквизиты.Вставить("КурсВзаиморасчетов", 1);
		Реквизиты.Вставить("КратностьВзаиморасчетов", 1);
		КоэффициентВзаиморасчетов = 1;
	Иначе
		Реквизиты.Вставить("КурсВзаиморасчетов", Реквизиты.КурсВзаиморасчетов); 
		Реквизиты.Вставить("КратностьВзаиморасчетов", Реквизиты.КратностьВзаиморасчетов);
		КоэффициентВзаиморасчетов = (Реквизиты.КурсВзаиморасчетов / Реквизиты.КратностьВзаиморасчетов) / КоэффициентРуб;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("КоэффициентВзаиморасчетов", КоэффициентВзаиморасчетов);
	Запрос.УстановитьПараметр("КоэффициентРуб",            КоэффициентРуб);
	Запрос.УстановитьПараметр("ВалютаРеглУчета",           Реквизиты.ВалютаРеглУчета);
	Запрос.УстановитьПараметр("СуммаВключаетНДС",          Реквизиты.СуммаВключаетНДС);
	Запрос.УстановитьПараметр("СобытиеОС", 
		УчетОС.ПолучитьСобытиеПоОСИзСправочника(Перечисления.ВидыСобытийОС.ПринятиеКУчетуСВводомВЭксплуатацию));
	
	ПодготовитьТаблицыДокументаДляЦелейПриобретенияРеализации(Запрос, Реквизиты);
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц)
		+ ТекстЗапросаЗачетАвансов(ПараметрыПроведения, НомераТаблиц)
		+ ТекстЗапросаТаблицыДокумента(НомераТаблиц)
		+ ТекстЗапросаПоступлениеРеквизиты(НомераТаблиц)
		+ ТекстЗапросаПереоценкаВалютныхОстатков(НомераТаблиц)
		;
		
	Результат = Запрос.ВыполнитьПакет();
	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	АлгоритмПериодаАмортизации = УчетнаяПолитика.АлгоритмПериодаАмортизации(
		Реквизиты.Период,
		Реквизиты.Организация);
	
	УстановитьСрокПолезногоИспользованияТаблицаПринятиеКУчетуРегистрыБУ(
		ПараметрыПроведения.ТаблицаПринятиеКУчетуРегистрыБУ,
		АлгоритмПериодаАмортизации);
	
	СтруктураТаблицДокумента = Новый Структура;
	СтруктураТаблицДокумента.Вставить("ТаблицаПредметыЛизинга", ПараметрыПроведения.ТаблицаПредметыЛизинга);
	ПараметрыПроведения.Вставить("СтруктураТаблицДокумента", СтруктураТаблицДокумента);
	
	Возврат ПараметрыПроведения;
	
КонецФункции 

Функция ГрафикПроцентовПоАренде(ТаблицаГрафикПлатежей, ТаблицаПредметыАренды, ТаблицаРеквизиты) Экспорт
	
	Результат = Новый Структура;
	УчетПроцентовПоОбязательствам.ЗаполнитьГрафикПроцентов(
		Результат, ТаблицаГрафикПлатежей, ТаблицаПредметыАренды, ТаблицаРеквизиты, "ОсновноеСредство");
	График = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Результат, "График");
	
	Возврат График;
	
КонецФункции 

Процедура ДобавитьКолонкуСодержание(ТаблицаЗначений, ТаблицаРеквизиты) Экспорт
	
	Реквизиты = ТаблицаРеквизиты[0];
	
	КодЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
	
	НомерДокумента = Реквизиты.НомерВходящегоДокумента;
	ДатаДокумента = Формат(Реквизиты.ДатаВходящегоДокумента, НСтр("ru='ДФ=dd.MM.yyyy'", КодЯзыка));
	
	Если Реквизиты.ЛизингДоФСБУ25 Тогда
		Содержание = ?(ЗначениеЗаполнено(НомерДокумента) И ЗначениеЗаполнено(ДатаДокумента),
			СтрШаблон(НСтр("ru='Поступление предмета лизинга по вх.д. %1 от %2'", КодЯзыка), НомерДокумента, ДатаДокумента),
			НСтр("ru='Поступление предмета лизинга'", КодЯзыка));
	ИначеЕсли Реквизиты.ПереходНаФСБУ25 Тогда
		Содержание = НСтр("ru='Переход на ФСБУ 25'", КодЯзыка)
	Иначе
		Содержание = ?(ЗначениеЗаполнено(НомерДокумента) И ЗначениеЗаполнено(ДатаДокумента),
			СтрШаблон(НСтр("ru='Поступление в аренду по вх.д. %1 от %2'", КодЯзыка), НомерДокумента, ДатаДокумента),
			НСтр("ru='Поступление в аренду'", КодЯзыка));
	КонецЕсли;
	
	ТаблицаЗначений.Колонки.Добавить("Содержание", ОбщегоНазначения.ОписаниеТипаСтрока(150));
	ТаблицаЗначений.ЗаполнитьЗначения(Содержание, "Содержание");
	
КонецПроцедуры

Процедура ПодготовитьТаблицыДокументаДляЦелейПриобретенияРеализации(Запрос, Реквизиты)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаПредметыЛизинга.Ссылка КАК Ссылка,
	|	ТаблицаПредметыЛизинга.НомерСтроки КАК НомерСтроки,
	|	ТаблицаПредметыЛизинга.Номенклатура КАК Номенклатура,
	|	ТаблицаПредметыЛизинга.Количество КАК Количество,
	|	ТаблицаПредметыЛизинга.Сумма КАК Сумма,
	|	ТаблицаПредметыЛизинга.СчетУчета КАК СчетУчета,
	|	ТаблицаПредметыЛизинга.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаПредметыЛизинга.СуммаНДС КАК НДС,
	|	ТаблицаПредметыЛизинга.СчетУчетаНДС КАК СчетУчетаНДС,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.Распределен) КАК СпособУчетаНДС
	|ИЗ
	|	Документ.ПоступлениеВАренду.ПредметыЛизинга КАК ТаблицаПредметыЛизинга
	|ГДЕ
	|	ТаблицаПредметыЛизинга.Ссылка = &Ссылка
	|	И ТаблицаПредметыЛизинга.Ссылка.ЛизингДоФСБУ25
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаПредметыЛизинга.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПредметыАренды.Ссылка КАК Ссылка,
	|	ТаблицаПредметыАренды.НомерСтроки КАК НомерСтроки,
	|	ТаблицаПредметыАренды.ПредметАренды КАК ПредметАренды,
	|	ТаблицаПредметыАренды.Сумма КАК Сумма,
	|	ТаблицаПредметыАренды.РасходыЛизингодателя КАК РасходыЛизингодателя,
	|	ТаблицаПредметыАренды.ОценкаБУ КАК ОценкаБУ,
	|	ТаблицаПредметыАренды.СчетУчета КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА ТаблицаПредметыАренды.Ссылка.ПринятьКУчету
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеОсновныхСредств)
	|		ИНАЧЕ ТаблицаПредметыАренды.СчетУчета
	|	КОНЕЦ КАК СчетУчетаВнеоборотногоАктива,
	|	ТаблицаПредметыАренды.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаПредметыАренды.СуммаНДС КАК НДС,
	|	ТаблицаПредметыАренды.СчетУчетаНДС КАК СчетУчетаНДС,
	|	ТаблицаПредметыАренды.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации,
	|	ТаблицаПредметыАренды.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.Распределен) КАК СпособУчетаНДС
	|ИЗ
	|	Документ.ПоступлениеВАренду.ПредметыАренды КАК ТаблицаПредметыАренды
	|ГДЕ
	|	ТаблицаПредметыАренды.Ссылка = &Ссылка
	|	И НЕ ТаблицаПредметыАренды.Ссылка.ЛизингДоФСБУ25
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаПредметыАренды.НомерСтроки";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаПредметыЛизинга = РезультатЗапроса[0].Выгрузить();
	УчетВзаиморасчетов.ПодготовкаТаблицыЗначенийДляЦелейПриобретенияИРеализации(ТаблицаПредметыЛизинга, Реквизиты);
	Запрос.УстановитьПараметр("ТаблицаПредметыЛизинга", ТаблицаПредметыЛизинга);
	
	ТаблицаПредметыАренды = РезультатЗапроса[1].Выгрузить();
	УчетВзаиморасчетов.ПодготовкаТаблицыЗначенийДляЦелейПриобретенияИРеализации(ТаблицаПредметыАренды, Реквизиты);
	
	ОтражатьВНУ = Реквизиты.ВидОперации = Перечисления.ВидыОперацийПоступлениеВАренду.ПоступлениеВЛизинг 
		И Реквизиты.НалоговыйУчетИмуществаВедетЛизингополучатель 
		И Не Реквизиты.ПереходНаФСБУ25
		И УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
		
	РасчетыВВалюте = Реквизиты.ВалютаВзаиморасчетов <> Реквизиты.ВалютаРеглУчета;
	ДокументВВалюте = Реквизиты.ВалютаДокумента <> Реквизиты.ВалютаРеглУчета;
	РассчитыватьСуммыРуб = РасчетыВВалюте И ДокументВВалюте И Реквизиты.КратностьДокумента <> 0;
	РассчитыватьСуммыВал = РасчетыВВалюте И Не ДокументВВалюте И Реквизиты.КурсВзаиморасчетов <> 0;
	Если РассчитыватьСуммыРуб Тогда
		КоэффициентПересчета = Реквизиты.КурсДокумента/Реквизиты.КратностьДокумента;
	ИначеЕсли РассчитыватьСуммыВал Тогда
		КоэффициентПересчета = Реквизиты.КратностьВзаиморасчетов / Реквизиты.КурсВзаиморасчетов;
	Иначе
		КоэффициентПересчета = 1;
	КонецЕсли;
	
	Если ОтражатьВНУ Тогда
		
		МассивРасходыЛизингодателя = ТаблицаПредметыАренды.ВыгрузитьКолонку("РасходыЛизингодателя");
		Если РассчитыватьСуммыРуб Тогда
			РасходыЛизингодателя = ТаблицаПредметыАренды.Итог("РасходыЛизингодателя");
			РасходыЛизингодателяРуб = Окр(РасходыЛизингодателя * КоэффициентПересчета, 2);
			МассивРасходыЛизингодателяРуб = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(
				РасходыЛизингодателяРуб, МассивРасходыЛизингодателя);
			Если ЗначениеЗаполнено(МассивРасходыЛизингодателяРуб) Тогда
				ТаблицаПредметыАренды.ЗагрузитьКолонку(МассивРасходыЛизингодателяРуб, "СуммаНУ");
			Иначе
				ТаблицаПредметыАренды.ЗаполнитьЗначения(0, "СуммаНУ");
			КонецЕсли;
		Иначе
			ТаблицаПредметыАренды.ЗагрузитьКолонку(МассивРасходыЛизингодателя, "СуммаНУ");
		КонецЕсли;
	Иначе
		ТаблицаПредметыАренды.ЗаполнитьЗначения(0, "СуммаНУ");
	КонецЕсли;
	
	Если Не Реквизиты.НДСВключенВСтоимость Тогда
		Для каждого СтрокаТаблицы Из ТаблицаПредметыАренды Цикл
			СтрокаТаблицы.Сумма = СтрокаТаблицы.СуммаБезНДС;
			СтрокаТаблицы.СуммаВал = СтрокаТаблицы.СуммаБезНДСВал;
			СтрокаТаблицы.СуммаБУ = СтрокаТаблицы.СуммаБУБезНДС;
		КонецЦикла;
	КонецЕсли;
	
	// Обрабатываем колонки дополнительных сумм
	
	ТаблицаПредметыАренды.Колонки.Добавить("СуммаВалБУ", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	МассивСуммаВал = ?(Реквизиты.НДСВключенВСтоимость, 
		ТаблицаПредметыАренды.ВыгрузитьКолонку("СуммаВал"),
		ТаблицаПредметыАренды.ВыгрузитьКолонку("СуммаБезНДСВал"));
	ТаблицаПредметыАренды.ЗагрузитьКолонку(МассивСуммаВал, "СуммаВалБУ");
	
	УчетПроцентовПоОбязательствам.ПодготовитьТаблицуДокументаДляЦелейПриобретенияРеализации(
		ТаблицаПредметыАренды, Реквизиты);
	
	Запрос.УстановитьПараметр("ТаблицаПредметыАренды", ТаблицаПредметыАренды);
	
КонецПроцедуры

Функция ТаблицаКорректировкаЛизингаПараметрыАмортизацииБУ(ТаблицаОС, ТаблицаРеквизиты) Экспорт
	
	Реквизиты = ТаблицаРеквизиты[0];
	Если Не ЗначениеЗаполнено(ТаблицаОС)
		Или Не (Реквизиты.ПереходНаФСБУ25 
		И Реквизиты.Лизинг
		И Реквизиты.НалоговыйУчетИмуществаВедетЛизингополучатель) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
		|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаОС.ОценкаБУ КАК СтоимостьДляВычисленияАмортизации
		|ПОМЕСТИТЬ ТаблицаОС
		|ИЗ
		|	&ТаблицаОС КАК ТаблицаОС
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПараметрыАмортизацииОСБУ.ОсновноеСредство КАК ОсновноеСредство,
		|	ПараметрыАмортизацииОСБУ.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
		|	ПараметрыАмортизацииОСБУ.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
		|	ПараметрыАмортизацииОСБУ.ОбъемПродукцииРабот КАК ОбъемПродукцииРабот,
		|	ПараметрыАмортизацииОСБУ.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
		|	ПараметрыАмортизацииОСБУ.КоэффициентАмортизации КАК КоэффициентАмортизации,
		|	ПараметрыАмортизацииОСБУ.КоэффициентУскорения КАК КоэффициентУскорения,
		|	ПараметрыАмортизацииОСБУ.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
		|	ПараметрыАмортизацииОСБУ.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации
		|ПОМЕСТИТЬ ПараметрыАмортизации
		|ИЗ
		|	РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПоследних(
		|			&ГраницаПериода,
		|			Организация = &Организация
		|				И ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						ТаблицаОС.ОсновноеСредство
		|					ИЗ
		|						ТаблицаОС КАК ТаблицаОС)) КАК ПараметрыАмортизацииОСБУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СостоянияОС.ОсновноеСредство КАК ОсновноеСредство,
		|	РАЗНОСТЬДАТ(СостоянияОС.ДатаСостояния, &Период, МЕСЯЦ) КАК ПрошедшийСрок
		|ПОМЕСТИТЬ ФактическоеИспользование
		|ИЗ
		|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОС КАК ТаблицаОС
		|		ПО (СостоянияОС.Организация = &Организация)
		|			И (СостоянияОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
		|			И (ТаблицаОС.ОсновноеСредство = СостоянияОС.ОсновноеСредство)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
		|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаОС.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
		|	ПараметрыАмортизации.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
		|	ПараметрыАмортизации.СрокИспользованияДляВычисленияАмортизации - ФактическоеИспользование.ПрошедшийСрок КАК СрокИспользованияДляВычисленияАмортизации,
		|	ПараметрыАмортизации.ОбъемПродукцииРабот КАК ОбъемПродукцииРабот,
		|	ПараметрыАмортизации.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
		|	ПараметрыАмортизации.КоэффициентАмортизации КАК КоэффициентАмортизации,
		|	ПараметрыАмортизации.КоэффициентУскорения КАК КоэффициентУскорения,
		|	ПараметрыАмортизации.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
		|	ПараметрыАмортизации.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации
		|ИЗ
		|	ТаблицаОС КАК ТаблицаОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПараметрыАмортизации КАК ПараметрыАмортизации
		|		ПО ТаблицаОС.ОсновноеСредство = ПараметрыАмортизации.ОсновноеСредство
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ФактическоеИспользование КАК ФактическоеИспользование
		|		ПО ТаблицаОС.ОсновноеСредство = ФактическоеИспользование.ОсновноеСредство
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки");
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("Период", Реквизиты.Период);
	Запрос.УстановитьПараметр("ГраницаПериода",
		Новый Граница(Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ТаблицаОС", ТаблицаОС);
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	Возврат ТаблицаРезультат;
	
КонецФункции

Функция ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаПредметыЛизинга", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаПредметыАренды", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаПредметыЛизинга.Ссылка КАК Ссылка,
	|	ТаблицаПредметыЛизинга.НомерСтроки КАК НомерСтроки,
	|	ТаблицаПредметыЛизинга.Номенклатура КАК Номенклатура,
	|	ТаблицаПредметыЛизинга.Количество КАК Количество,
	|	ТаблицаПредметыЛизинга.Сумма КАК СуммаРуб,
	|	ТаблицаПредметыЛизинга.СуммаБезНДС КАК СуммаБезНДСРуб,
	|	ТаблицаПредметыЛизинга.НДС КАК СуммаНДСРуб,
	|	ТаблицаПредметыЛизинга.СуммаВал КАК СуммаВзаиморасчетов,
	|	ТаблицаПредметыЛизинга.НДСВал КАК СуммаНДСВзаиморасчетов,
	|	ТаблицаПредметыЛизинга.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаПредметыЛизинга.СчетУчета КАК СчетУчета,
	|	ТаблицаПредметыЛизинга.СчетУчетаНДС КАК СчетУчетаНДС,
	|	ТаблицаПредметыЛизинга.СпособУчетаНДС КАК СпособУчетаНДС
	|ПОМЕСТИТЬ ТаблицаПредметыЛизинга
	|ИЗ
	|	&ТаблицаПредметыЛизинга КАК ТаблицаПредметыЛизинга
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПредметыАренды.Ссылка КАК Ссылка,
	|	ТаблицаПредметыАренды.НомерСтроки КАК НомерСтроки,
	|	ТаблицаПредметыАренды.ПредметАренды КАК ПредметАренды,
	|	ТаблицаПредметыАренды.Сумма КАК СуммаРуб,
	|	ТаблицаПредметыАренды.СуммаБезНДС КАК СуммаБезНДСРуб,
	|	ТаблицаПредметыАренды.НДСВал КАК СуммаНДСВзаиморасчетов,
	|	ТаблицаПредметыАренды.НДС КАК СуммаНДСРуб,
	|	ТаблицаПредметыАренды.СуммаВал КАК СуммаВзаиморасчетов,
	|	ТаблицаПредметыАренды.СуммаВалБУ КАК СуммаВалБУ,
	|	ТаблицаПредметыАренды.СуммаБУ КАК СуммаБУ,
	|	ТаблицаПредметыАренды.СуммаНУ КАК СуммаНУ,
	|	ТаблицаПредметыАренды.ОценкаБУ КАК ОценкаБУ,
	|	ТаблицаПредметыАренды.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаПредметыАренды.СчетУчета КАК СчетУчета,
	|	ТаблицаПредметыАренды.СчетУчетаВнеоборотногоАктива КАК СчетУчетаВнеоборотногоАктива,
	|	ТаблицаПредметыАренды.СчетУчетаНДС КАК СчетУчетаНДС,
	|	ТаблицаПредметыАренды.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации,
	|	ТаблицаПредметыАренды.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ТаблицаПредметыАренды.СпособУчетаНДС КАК СпособУчетаНДС
	|ПОМЕСТИТЬ ТаблицаПредметыАренды
	|ИЗ
	|	&ТаблицаПредметыАренды КАК ТаблицаПредметыАренды";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаЗачетАвансов(ПараметрыПроведения, НомераТаблиц)
	
	НомераТаблиц.Вставить("ЗачетАвансовРеквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаАвансов.НеЗачитывать) КАК СпособЗачетаАвансов,
	|	ЛОЖЬ КАК УчитыватьЗадолженностьУСН,
	|	ЛОЖЬ КАК УчитыватьЗадолженностьУСНПатент,
	|	""Поступление"" КАК НаправлениеДвижения,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	Реквизиты.НДСВключенВСтоимость КАК НДСВключенВСтоимость
	|ИЗ
	|	Документ.ПоступлениеВАренду КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	ПараметрыПроведения.Вставить("ЗачетАвансовТаблицаДокумента", Неопределено);
	ПараметрыПроведения.Вставить("ЗачетАвансовТаблицаАвансов",   Неопределено);
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицыДокумента(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаПредметыЛизинга", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаПредметыАренды", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаПредметыАрендыПроводки", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаРублевыеСуммыДокументовВВалюте", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаПринятиеКУчетуПроводки", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаКорректировкаЛизингаПроводки", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаПринятиеКУчетуРегистрыБУ", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаПринятиеКУчетуРегистрыНУ", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаГрафикПлатежей", НомераТаблиц.Количество());
	
	// Поля СрокПолезногоИспользования и СрокИспользованияДляВычисленияАмортизации таблицы ТаблицаПринятиеКУчетуРегистрыБУ
	// могут рассчитываться вне запроса с помощью УстановитьСрокПолезногоИспользования
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПредметыЛизинга.Ссылка КАК Ссылка,
	|	""ПредметыЛизинга"" КАК ИмяСписка,
	|	ПредметыЛизинга.НомерСтроки КАК НомерСтроки,
	|	ПредметыЛизинга.Номенклатура КАК Номенклатура,
	|	ПредметыЛизинга.Количество КАК Количество,
	|	ПредметыЛизинга.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ПредметыЛизинга.СуммаНДСВзаиморасчетов КАК СуммаНДСВзаиморасчетов,
	|	ПредметыЛизинга.СуммаРуб КАК СуммаРуб,
	|	ПредметыЛизинга.СуммаРуб КАК СуммаБУ,
	|	ПредметыЛизинга.СуммаРуб КАК СуммаНУ,
	|	ПредметыЛизинга.СуммаБезНДСРуб КАК СуммаБезНДСРуб,
	|	ПредметыЛизинга.СуммаНДСРуб КАК СуммаНДСРуб,
	|	ПредметыЛизинга.СчетУчета КАК СчетУчета,
	|	ПредметыЛизинга.Ссылка.СчетУчетаРасчетовСКонтрагентом КАК КорСчет,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты) КАК ВидКорСубконто1,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры) КАК ВидКорСубконто2,
	|	ПредметыЛизинга.Ссылка.Контрагент КАК КорСубконто1,
	|	ПредметыЛизинга.Ссылка.ДоговорКонтрагента КАК КорСубконто2,
	|	ПредметыЛизинга.СчетУчетаНДС КАК СчетУчетаНДС,
	|	ПредметыЛизинга.СпособУчетаНДС КАК СпособУчетаНДС,
	|	ПредметыЛизинга.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	ТаблицаПредметыЛизинга КАК ПредметыЛизинга
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредметыАренды.Ссылка КАК Ссылка,
	|	""ПредметыАренды"" КАК ИмяСписка,
	|	ПредметыАренды.НомерСтроки КАК НомерСтроки,
	|	ПредметыАренды.ПредметАренды КАК ОсновноеСредство,
	|	ПредметыАренды.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ПредметыАренды.СуммаНДСВзаиморасчетов КАК СуммаНДСВзаиморасчетов,
	|	ПредметыАренды.СуммаРуб КАК СуммаРуб,
	|	ПредметыАренды.СуммаБУ КАК СуммаБУ,
	|	ПредметыАренды.СуммаВалБУ КАК СуммаВалБУ,
	|	ПредметыАренды.СуммаНУ КАК СуммаНУ,
	|	ПредметыАренды.СуммаБезНДСРуб КАК СуммаБезНДСРуб,
	|	ПредметыАренды.СуммаНДСРуб КАК СуммаНДСРуб,
	|	ПредметыАренды.ОценкаБУ КАК ОценкаБУ,
	|	ПредметыАренды.СчетУчета КАК СчетУчета,
	|	ПредметыАренды.СчетУчетаВнеоборотногоАктива КАК СчетУчетаВнеоборотногоАктива,
	|	ПредметыАренды.СчетУчетаНДС КАК СчетУчетаНДС,
	|	ПредметыАренды.СпособУчетаНДС КАК СпособУчетаНДС,
	|	ПредметыАренды.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	ТаблицаПредметыАренды КАК ПредметыАренды
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредметыАренды.Ссылка КАК Ссылка,
	|	ПредметыАренды.НомерСтроки КАК НомерСтроки,
	|	ПредметыАренды.ПредметАренды КАК ОсновноеСредство,
	|	ПредметыАренды.СуммаРуб КАК СуммаРуб,
	|	ПредметыАренды.СуммаБУ КАК СуммаБУ,
	|	ПредметыАренды.СуммаВалБУ КАК СуммаВалБУ,
	|	ПредметыАренды.СуммаНДСРуб КАК СуммаНДСРуб,
	|	ПредметыАренды.СуммаНДСВзаиморасчетов КАК СуммаНДСВзаиморасчетов,
	|	ПредметыАренды.СчетУчета КАК СчетУчета,
	|	ПредметыАренды.СчетУчетаВнеоборотногоАктива КАК СчетУчетаВнеоборотногоАктива,
	|	ПредметыАренды.СтавкаНДС КАК СтавкаНДС,
	|	ПредметыАренды.СчетУчетаНДС КАК СчетУчетаНДС
	|ИЗ
	|	ТаблицаПредметыАренды КАК ПредметыАренды
	|ГДЕ
	|	НЕ(ПредметыАренды.Ссылка.ПереходНаФСБУ25
	|				И ПредметыАренды.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВАренду.ПоступлениеВЛизинг)
	|				И ПредметыАренды.Ссылка.НалоговыйУчетИмуществаВедетЛизингополучатель)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредметыАренды.Ссылка КАК Ссылка,
	|	""ПредметыАренды"" КАК ИмяСписка,
	|	ПредметыАренды.НомерСтроки КАК НомерСтроки,
	|	ПредметыАренды.СуммаРуб КАК СуммаБУ,
	|	ПредметыАренды.СуммаБезНДСРуб КАК СуммаБезНДСРуб,
	|	ПредметыАренды.СуммаНДСРуб КАК СуммаНДСРуб
	|ИЗ
	|	ТаблицаПредметыАренды КАК ПредметыАренды
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредметыАренды.Ссылка КАК Ссылка,
	|	ПредметыАренды.НомерСтроки КАК НомерСтроки,
	|	ПредметыАренды.ПредметАренды КАК ОсновноеСредство,
	|	ПредметыАренды.СуммаРуб КАК СуммаРуб,
	|	ПредметыАренды.СуммаБУ КАК СуммаБУ,
	|	ПредметыАренды.СуммаНУ КАК СуммаНУ,
	|	0 КАК СуммаВР,
	|	0 КАК СуммаПР,
	|	ПредметыАренды.СчетУчета КАК СчетУчета,
	|	ПредметыАренды.СчетУчетаВнеоборотногоАктива КАК СчетУчетаВнеоборотногоАктива
	|ИЗ
	|	ТаблицаПредметыАренды КАК ПредметыАренды
	|ГДЕ
	|	ПредметыАренды.Ссылка.ПринятьКУчету
	|	И НЕ ПредметыАренды.Ссылка.ПереходНаФСБУ25
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредметыАренды.Ссылка КАК Ссылка,
	|	ПредметыАренды.НомерСтроки КАК НомерСтроки,
	|	ПредметыАренды.ПредметАренды КАК ОсновноеСредство,
	|	ПредметыАренды.СчетУчета КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА ПредметыАренды.Ссылка.НалоговыйУчетИмуществаВедетЛизингополучатель
	|			ТОГДА 0
	|		ИНАЧЕ ПредметыАренды.СуммаБУ
	|	КОНЕЦ КАК СуммаБУ,
	|	ПредметыАренды.ОценкаБУ КАК ОценкаБУ
	|ИЗ
	|	ТаблицаПредметыАренды КАК ПредметыАренды
	|ГДЕ
	|	ПредметыАренды.Ссылка.ПереходНаФСБУ25
	|	И ПредметыАренды.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВАренду.ПоступлениеВЛизинг)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредметыАренды.Ссылка КАК Ссылка,
	|	ПредметыАренды.НомерСтроки КАК НомерСтроки,
	|	ПредметыАренды.ПредметАренды КАК ОсновноеСредство,
	|	ПредметыАренды.ПредметАренды.Код КАК ИнвентарныйНомер,
	|	0 КАК КоэффициентУскорения,
	|	0 КАК ОбъемПродукцииРабот,
	|	0 КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ВЫБОР
	|		КОГДА ПредметыАренды.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВАренду.ПоступлениеВЛизинг)
	|			ТОГДА ПредметыАренды.СрокПолезногоИспользования
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СрокПолезногоИспользования,
	|	НАЧАЛОПЕРИОДА(ПредметыАренды.Ссылка.Дата, ДЕНЬ) КАК НачалоСрокаАренды,
	|	ПредметыАренды.Ссылка.ДатаОкончанияАренды КАК КонецСрокаАренды,
	|	ВЫБОР
	|		КОГДА ПредметыАренды.Ссылка.ПереходНаФСБУ25
	|				И ПредметыАренды.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВАренду.ПоступлениеВЛизинг)
	|			ТОГДА ПредметыАренды.ОценкаБУ
	|		ИНАЧЕ ПредметыАренды.СуммаБУ
	|	КОНЕЦ КАК СуммаБУ,
	|	ВЫБОР
	|		КОГДА ПредметыАренды.Ссылка.ПереходНаФСБУ25
	|				И ПредметыАренды.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВАренду.ПоступлениеВЛизинг)
	|			ТОГДА ПредметыАренды.ОценкаБУ
	|		ИНАЧЕ ПредметыАренды.СуммаБУ
	|	КОНЕЦ КАК СтоимостьДляВычисленияАмортизации,
	|	0 КАК СуммаЗатратБУ,
	|	0 КАК СуммаЗатратНУ,
	|	0 КАК СуммаЗатратУСН,
	|	ПредметыАренды.СчетУчета КАК СчетУчета,
	|	ПредметыАренды.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации,
	|	0 КАК КоэффициентАмортизации,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.Линейный) КАК СпособНачисленияАмортизации,
	|	0 КАК ЛиквидационнаяСтоимость,
	|	ВЫБОР
	|		КОГДА ПредметыАренды.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВАренду.ПоступлениеВЛизинг)
	|			ТОГДА ПредметыАренды.СрокПолезногоИспользования
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СрокИспользованияДляВычисленияАмортизации
	|ИЗ
	|	ТаблицаПредметыАренды КАК ПредметыАренды
	|ГДЕ
	|	ПредметыАренды.Ссылка.ПринятьКУчету
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредметыАренды.Ссылка КАК Ссылка,
	|	ПредметыАренды.НомерСтроки КАК НомерСтроки,
	|	ПредметыАренды.ПредметАренды КАК ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА ПредметыАренды.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВАренду.ПоступлениеВЛизинг)
	|				И ПредметыАренды.Ссылка.НалоговыйУчетИмуществаВедетЛизингополучатель
	|			ТОГДА ПредметыАренды.СрокПолезногоИспользования
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СрокПолезногоИспользования,
	|	ВЫБОР
	|		КОГДА ПредметыАренды.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВАренду.ПоступлениеВЛизинг)
	|				И ПредметыАренды.Ссылка.НалоговыйУчетИмуществаВедетЛизингополучатель
	|			ТОГДА ПредметыАренды.СуммаНУ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНУ,
	|	0 КАК ПРДляВычисленияАмортизации,
	|	0 КАК СпециальныйКоэффициент
	|ИЗ
	|	ТаблицаПредметыАренды КАК ПредметыАренды
	|ГДЕ
	|	ПредметыАренды.Ссылка.ПринятьКУчету
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикПлатежей.НомерСтроки КАК НомерСтроки,
	|	ГрафикПлатежей.ДатаПлатежа КАК ДатаПлатежа,
	|	ГрафикПлатежей.СуммаПлатежа КАК СуммаПлатежа,
	|	ГрафикПлатежей.СуммаНДСПлатежа КАК СуммаНДСПлатежа,
	|	ВЫБОР
	|		КОГДА ГрафикПлатежей.Ссылка.НДСВключенВСтоимость
	|			ТОГДА ГрафикПлатежей.СуммаПлатежа
	|		ИНАЧЕ ГрафикПлатежей.СуммаПлатежа - ГрафикПлатежей.СуммаНДСПлатежа
	|	КОНЕЦ КАК СуммаБезНДСПлатежа
	|ИЗ
	|	Документ.ПоступлениеВАренду.ГрафикПлатежей КАК ГрафикПлатежей
	|ГДЕ
	|	ГрафикПлатежей.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПлатежа,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПоступлениеРеквизиты(НомераТаблиц)

	НомераТаблиц.Вставить("РеквизитыПоступление", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РеквизитыПринятиеКУчетуПроводки", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РеквизитыПринятиеКУчетуРегистрыБУ", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РеквизитыПринятиеКУчетуРегистрыНУ", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РеквизитыПереходНаФСБУ25", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПереходНаФСБУ25
	|			ТОГДА КОНЕЦПЕРИОДА(Реквизиты.Дата, ДЕНЬ)
	|		ИНАЧЕ Реквизиты.Дата
	|	КОНЕЦ КАК Период,
	|	Реквизиты.Номер КАК Номер,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВАренду.ПоступлениеВЛизинг) КАК Лизинг,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.КурсВзаиморасчетов КАК Курс,
	|	Реквизиты.КратностьВзаиморасчетов КАК Кратность,
	|	Реквизиты.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеДт,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеКт,
	|	Реквизиты.ПодразделениеОрганизации КАК Местонахождение,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЛОЖЬ КАК УчетАгентскогоНДС,
	|	ЛОЖЬ КАК ЭлектронныеУслуги,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.ПустаяСсылка) КАК ВидАгентскогоДоговора,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.Валютный, ЛОЖЬ) КАК РасчетыВВалюте,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	Реквизиты.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	|	Реквизиты.ЛизингДоФСБУ25 КАК ЛизингДоФСБУ25,
	|	Реквизиты.ПереходНаФСБУ25 КАК ПереходНаФСБУ25,
	|	Реквизиты.НалоговыйУчетИмуществаВедетЛизингополучатель КАК НалоговыйУчетИмуществаВедетЛизингополучатель,
	|	Реквизиты.ДатаОкончанияАренды КАК ДатаОкончанияАренды,
	|	Реквизиты.СпособОценкиАрендыБУ КАК СпособОценкиАрендыБУ,
	|	Реквизиты.СтавкаДисконтирования КАК СтавкаДисконтирования,
	|	Реквизиты.АвансовыеПлатежи КАК АвансовыеПлатежи,
	|	Реквизиты.СтоимостьОбязательства КАК СтоимостьОбязательства,
	|	Реквизиты.ПринятьКУчету КАК ПринятьКУчету,
	|	ЛОЖЬ КАК ИзменениеУсловий,
	|	""ПредметыАренды"" КАК ИмяСписка
	|ИЗ
	|	Документ.ПоступлениеВАренду КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПереходНаФСБУ25
	|			ТОГДА КОНЕЦПЕРИОДА(Реквизиты.Дата, ДЕНЬ)
	|		ИНАЧЕ Реквизиты.Дата
	|	КОНЕЦ КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеДт,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеКт
	|ИЗ
	|	Документ.ПоступлениеВАренду КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПереходНаФСБУ25
	|			ТОГДА КОНЕЦПЕРИОДА(Реквизиты.Дата, ДЕНЬ)
	|		ИНАЧЕ Реквизиты.Дата
	|	КОНЕЦ КАК Период,
	|	Реквизиты.Номер КАК Номер,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Местонахождение,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ИСТИНА КАК НачислятьАмортизацию,
	|	Реквизиты.СпособОтраженияРасходовПоАмортизации КАК СпособыОтраженияРасходовПоАмортизации,
	|	Реквизиты.МОЛ КАК МОЛ,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету) КАК СостояниеОС,
	|	&СобытиеОС КАК СобытиеОС,
	|	НЕОПРЕДЕЛЕНО КАК ПараметрВыработки,
	|	ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации) КАК ПорядокПогашенияСтоимости,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.Линейный) КАК СпособНачисленияАмортизации,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВАренду.ПоступлениеВЛизинг)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыПоступленияАктивов.ПоДоговоруЛизинга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыПоступленияАктивов.ПоДоговоруАренды)
	|	КОНЕЦ КАК СпособПоступления,
	|	""ПредметыАренды"" КАК ИмяСписка
	|ИЗ
	|	Документ.ПоступлениеВАренду КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПереходНаФСБУ25
	|			ТОГДА КОНЕЦПЕРИОДА(Реквизиты.Дата, ДЕНЬ)
	|		ИНАЧЕ Реквизиты.Дата
	|	КОНЕЦ КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВАренду.ПоступлениеВЛизинг)
	|		И Реквизиты.НалоговыйУчетИмуществаВедетЛизингополучатель КАК НачислятьАмортизацию,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВАренду.ПоступлениеВЛизинг)
	|				И Реквизиты.НалоговыйУчетИмуществаВедетЛизингополучатель
	|			ТОГДА Реквизиты.СпособОтраженияРасходовПоАмортизации
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СпособыОтраженияРасходовПоАмортизации,
	|	Реквизиты.СпособОтраженияРасходовПоАренднымПлатежам КАК СпособОтраженияРасходовПоАренднымПлатежам,
	|	ИСТИНА КАК ПоступлениеВАренду,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВАренду.ПоступлениеВЛизинг)
	|				И Реквизиты.НалоговыйУчетИмуществаВедетЛизингополучатель
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.СтоимостьНеВключаетсяВРасходы)
	|	КОНЕЦ КАК ПорядокВключенияСтоимостиВСоставРасходов,
	|	НЕОПРЕДЕЛЕНО КАК СпособОтраженияРасходовПриВключенииВСтоимость
	|ИЗ
	|	Документ.ПоступлениеВАренду КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(Реквизиты.Дата, ГОД), СЕКУНДА, 1) КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	"""" КАК ИмяСписка
	|ИЗ
	|	Документ.ПоступлениеВАренду КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаПереоценкаВалютныхОстатков(НомераТаблиц)

	НомераТаблиц.Вставить("ПереоценкаВалютныхОстатковРеквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ВалютаДокумента
	|ИЗ
	|	Документ.ПоступлениеВАренду КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Процедура УстановитьСрокПолезногоИспользованияТаблицаПринятиеКУчетуРегистрыБУ(ТаблицаПринятиеКУчетуРегистрыБУ, АлгоритмПериодаАмортизации)
	
	Для Каждого Запись Из ТаблицаПринятиеКУчетуРегистрыБУ Цикл
		
		Если Запись.СрокПолезногоИспользования > 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Запись.СрокПолезногоИспользования = АмортизацияАктивов.СрокЦелыхМесяцев(
			Запись.НачалоСрокаАренды,
			Запись.КонецСрокаАренды,
			АлгоритмПериодаАмортизации);
			
		Если Запись.СрокИспользованияДляВычисленияАмортизации > 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Запись.СрокИспользованияДляВычисленияАмортизации = Запись.СрокПолезногоИспользования;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ТекстЗапросаАктОПринятииКУчетуПредметовАренды()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПредметыАренды.Ссылка КАК Ссылка,
	|	ПредметыАренды.Ссылка.Организация КАК Организация,
	|	ПредметыАренды.НомерСтроки КАК НомерСтроки,
	|	ПредметыАренды.ПредметАренды КАК ОсновноеСредство,
	|	МАКСИМУМ(ПервоначальныеСведенияОСБухгалтерскийУчет.Период) КАК МаксПериод
	|ПОМЕСТИТЬ МаксПериодыСведенийОСБУ
	|ИЗ
	|	Документ.ПоступлениеВАренду.ПредметыАренды КАК ПредметыАренды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК ПервоначальныеСведенияОСБухгалтерскийУчет
	|		ПО ПредметыАренды.ПредметАренды = ПервоначальныеСведенияОСБухгалтерскийУчет.ОсновноеСредство
	|			И ПредметыАренды.Ссылка.Организация = ПервоначальныеСведенияОСБухгалтерскийУчет.Организация
	|			И (ПервоначальныеСведенияОСБухгалтерскийУчет.Период <= КОНЕЦПЕРИОДА(ПредметыАренды.Ссылка.Дата, МЕСЯЦ))
	|ГДЕ
	|	ПредметыАренды.Ссылка В(&МассивОбъектов)
	|	И ПредметыАренды.Ссылка.ПринятьКУчету = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	ПредметыАренды.Ссылка,
	|	ПредметыАренды.НомерСтроки,
	|	ПредметыАренды.ПредметАренды,
	|	ПредметыАренды.Ссылка.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксПериодыСведенийОСБУ.Ссылка КАК Ссылка,
	|	МаксПериодыСведенийОСБУ.Организация КАК Организация,
	|	МаксПериодыСведенийОСБУ.НомерСтроки КАК НомерСтроки,
	|	МаксПериодыСведенийОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.ИнвентарныйНомер, ""-"") КАК ИнвентарныйНомер,
	|	ЕСТЬNULL(ПараметрыАмортизацииОС.СрокПолезногоИспользования, 0) КАК СрокПолезногоИспользования
	|ПОМЕСТИТЬ СведенияОСБУ
	|ИЗ
	|	МаксПериодыСведенийОСБУ КАК МаксПериодыСведенийОСБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК ПервоначальныеСведенияОС
	|		ПО МаксПериодыСведенийОСБУ.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|			И МаксПериодыСведенийОСБУ.Организация = ПервоначальныеСведенияОС.Организация
	|			И МаксПериодыСведенийОСБУ.МаксПериод = ПервоначальныеСведенияОС.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет КАК ПараметрыАмортизацииОС
	|		ПО МаксПериодыСведенийОСБУ.ОсновноеСредство = ПараметрыАмортизацииОС.ОсновноеСредство
	|			И МаксПериодыСведенийОСБУ.Организация = ПараметрыАмортизацииОС.Организация
	|			И МаксПериодыСведенийОСБУ.МаксПериод = ПараметрыАмортизацииОС.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МаксПериодыСведенийОСБУ.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеВАренду.Номер КАК НомерДокумента,
	|	ПоступлениеВАренду.Дата КАК ДатаДокумента,
	|	ПоступлениеВАренду.Организация КАК Организация,
	|	ПоступлениеВАренду.Ссылка КАК Ссылка,
	|	ПоступлениеВАренду.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА ПоступлениеВАренду.ПодразделениеОрганизации.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ПоступлениеВАренду.ПодразделениеОрганизации.Наименование
	|		ИНАЧЕ ПоступлениеВАренду.ПодразделениеОрганизации.НаименованиеПолное
	|	КОНЕЦ КАК ПредставлениеПодразделения,
	|	ПоступлениеВАренду.Контрагент КАК Контрагент,
	|	ПРЕДСТАВЛЕНИЕ(ПоступлениеВАренду.ДоговорКонтрагента) КАК ДоговорКонтрагентаПредставление,
	|	ЕСТЬNULL(ПоступлениеВАренду.ДоговорКонтрагента.Номер, """") КАК НомерДоговораКонтрагента,
	|	ЕСТЬNULL(ПоступлениеВАренду.ДоговорКонтрагента.Дата, """") КАК ДатаДоговораКонтрагента,
	|	ВЫБОР
	|		КОГДА ПоступлениеВАренду.Контрагент.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ПоступлениеВАренду.Контрагент.Наименование
	|		ИНАЧЕ ПоступлениеВАренду.Контрагент.НаименованиеПолное
	|	КОНЕЦ КАК КонтрагентПредставление,
	|	ПоступлениеВАренду.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	ПоступлениеВАренду.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	|	ПоступлениеВАренду.МОЛ КАК МОЛ,
	|	ПоступлениеВАренду.СпособОценкиАрендыБУ КАК СпособОценкиАрендыБУ,
	|	ПРЕДСТАВЛЕНИЕ(ПоступлениеВАренду.СпособОценкиАрендыБУ) КАК СпособОценкиАрендыБУПредставление,
	|	ПоступлениеВАренду.СтавкаДисконтирования КАК СтавкаДисконтирования,
	|	СведенияОСБУ.НомерСтроки КАК НомерСтроки,
	|	СведенияОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	СведенияОСБУ.ИнвентарныйНомер КАК ОСКод,
	|	СведенияОСБУ.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ВЫБОР
	|		КОГДА СведенияОСБУ.ОсновноеСредство.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА СведенияОСБУ.ОсновноеСредство.Наименование
	|		ИНАЧЕ СведенияОСБУ.ОсновноеСредство.НаименованиеПолное
	|	КОНЕЦ КАК ОСНаименование,
	|	&ОсновнаяЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	1 КАК Количество
	|ИЗ
	|	Документ.ПоступлениеВАренду КАК ПоступлениеВАренду
	|		ЛЕВОЕ СОЕДИНЕНИЕ СведенияОСБУ КАК СведенияОСБУ
	|		ПО ПоступлениеВАренду.Ссылка = СведенияОСБУ.Ссылка
	|ГДЕ
	|	ПоступлениеВАренду.Ссылка В(&МассивОбъектов)
	|	И ПоступлениеВАренду.ПринятьКУчету = ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПоступлениеВАренду.Дата,
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Проводки01.Регистратор КАК Регистратор,
	|	Проводки01.НомерСтроки КАК НомерСтроки,
	|	Проводки01.Сумма КАК Сумма
	|ПОМЕСТИТЬ Проводки01
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Проводки01
	|ГДЕ
	|	Проводки01.Регистратор В(&МассивОбъектов)
	|	И Проводки01.СчетДт В(&Счета01)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Проводки01.Регистратор КАК Регистратор,
	|	Субконто01.Значение КАК ОсновноеСредство,
	|	Проводки01.Сумма КАК Сумма
	|ПОМЕСТИТЬ ДанныеПоОС
	|ИЗ
	|	Проводки01 КАК Проводки01
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК Субконто01
	|		ПО Проводки01.Регистратор = Субконто01.Регистратор
	|			И Проводки01.НомерСтроки = Субконто01.НомерСтроки
	|			И (Субконто01.Вид = &ВидСубконтоОС)
	|			И (Субконто01.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеПоОС.Регистратор КАК Ссылка,
	|	ДанныеПоОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ДанныеПоОС.Сумма) КАК ПервоначальнаяСтоимость
	|ИЗ
	|	ДанныеПоОС КАК ДанныеПоОС
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПоОС.Регистратор,
	|	ДанныеПоОС.ОсновноеСредство";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Формирует табличный документ унифицированной формы ОС-1
//
// Возвращаемое значение:
//  Табличный документ по форме ОС-1.
//
Функция ПечатьОС1(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеВАренду_ОС1";

	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ОС1");
	МакетОС1а = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ОС1а");
	МакетОС1б = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ОС1б");

	// Области
	ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакетаЗаголовок_а = МакетОС1а.ПолучитьОбласть("Заголовок");

	Шапка1ОС1б     = МакетОС1б.ПолучитьОбласть("Шапка1");
	Шапка2ОС1б     = МакетОС1б.ПолучитьОбласть("Шапка2");
	Строка2ОС1б    = МакетОС1б.ПолучитьОбласть("Строка2");
	Строка2ПОС1б   = МакетОС1б.ПолучитьОбласть("Строка2П");
	Подвал2        = МакетОС1б.ПолучитьОбласть("Подвал2");
	Шапка3ОС1б     = МакетОС1б.ПолучитьОбласть("Шапка3");
	Строка3ОС1б    = МакетОС1б.ПолучитьОбласть("Строка3");
	Строка3ПОС1б   = МакетОС1б.ПолучитьОбласть("Строка3П");
	Подвал3        = МакетОС1б.ПолучитьОбласть("Подвал3");
	Шапка4ОС1б     = МакетОС1б.ПолучитьОбласть("Шапка4");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПредметыАренды.Ссылка КАК Ссылка,
	|	ПредметыАренды.Ссылка.Организация КАК Организация,
	|	ПредметыАренды.НомерСтроки КАК НомерСтроки,
	|	ПредметыАренды.ПредметАренды КАК ОсновноеСредство,
	|	ПредметыАренды.СчетУчета КАК СчетУчета,
	|	ПредметыАренды.ПредметАренды.АмортизационнаяГруппа.Порядок + 1 КАК НомерГруппы,
	|	ПредметыАренды.ПредметАренды.Изготовитель КАК Изготовитель,
	|	ПредметыАренды.ПредметАренды.ГруппаОС КАК ГруппаОС,
	|	ПредметыАренды.ПредметАренды.НаименованиеПолное КАК НаименованиеОС,
	|	ПредметыАренды.ПредметАренды.ЗаводскойНомер КАК ЗаводскойНомер,
	|	ПредметыАренды.ПредметАренды.КодПоОКОФ.Код КАК КодОКОФ,
	|	ПредметыАренды.ПредметАренды.ДатаВыпуска КАК ДатаВыпуска,
	|	МАКСИМУМ(ПервоначальныеСведенияОСБухгалтерскийУчет.Период) КАК МаксПериод
	|ПОМЕСТИТЬ МаксПериодыСведенийОСБУ
	|ИЗ
	|	Документ.ПоступлениеВАренду.ПредметыАренды КАК ПредметыАренды
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК ПервоначальныеСведенияОСБухгалтерскийУчет
	|		ПО ПредметыАренды.ПредметАренды = ПервоначальныеСведенияОСБухгалтерскийУчет.ОсновноеСредство
	|			И ПредметыАренды.Ссылка.Организация = ПервоначальныеСведенияОСБухгалтерскийУчет.Организация
	|			И (ПервоначальныеСведенияОСБухгалтерскийУчет.Период <= КОНЕЦПЕРИОДА(ПредметыАренды.Ссылка.Дата, МЕСЯЦ))
	|ГДЕ
	|	ПредметыАренды.Ссылка В(&МассивОбъектов)
	|	И ПредметыАренды.Ссылка.ПринятьКУчету = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	ПредметыАренды.Ссылка,
	|	ПредметыАренды.ПредметАренды,
	|	ПредметыАренды.СчетУчета,
	|	ПредметыАренды.Ссылка.Организация,
	|	ПредметыАренды.ПредметАренды.АмортизационнаяГруппа.Порядок + 1,
	|	ПредметыАренды.ПредметАренды.Изготовитель,
	|	ПредметыАренды.НомерСтроки,
	|	ПредметыАренды.ПредметАренды.ГруппаОС,
	|	ПредметыАренды.ПредметАренды.НаименованиеПолное,
	|	ПредметыАренды.ПредметАренды.ЗаводскойНомер,
	|	ПредметыАренды.ПредметАренды.КодПоОКОФ.Код,
	|	ПредметыАренды.ПредметАренды.ДатаВыпуска
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОСБУ.Ссылка КАК Ссылка,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СведенияОСБУ.ОсновноеСредство) КАК КоличествоСтрок
	|ПОМЕСТИТЬ КоличествоОсновныхСредств
	|ИЗ
	|	МаксПериодыСведенийОСБУ КАК СведенияОСБУ
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОСБУ.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксПериодыСведенийОСБУ.Ссылка КАК Ссылка,
	|	МаксПериодыСведенийОСБУ.Организация КАК Организация,
	|	МаксПериодыСведенийОСБУ.НомерСтроки КАК НомерСтроки,
	|	МаксПериодыСведенийОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	МаксПериодыСведенийОСБУ.СчетУчета КАК СчетУчета,
	|	МаксПериодыСведенийОСБУ.НомерГруппы КАК НомерГруппы,
	|	МаксПериодыСведенийОСБУ.Изготовитель КАК Изготовитель,
	|	МаксПериодыСведенийОСБУ.ГруппаОС КАК ГруппаОС,
	|	МаксПериодыСведенийОСБУ.НаименованиеОС КАК НаименованиеОС,
	|	МаксПериодыСведенийОСБУ.ЗаводскойНомер КАК ЗаводскойНомер,
	|	МаксПериодыСведенийОСБУ.КодОКОФ КАК КодОКОФ,
	|	МаксПериодыСведенийОСБУ.ДатаВыпуска КАК ДатаВыпуска,
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.ИнвентарныйНомер, """") КАК ИнвентарныйНомер,
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.ПервоначальнаяСтоимость, 0) КАК ПервоначальнаяСтоимость,
	|	ЕСТЬNULL(ПараметрыАмортизацииОС.СрокПолезногоИспользования, 0) КАК СрокПолезногоИспользования
	|ПОМЕСТИТЬ СведенияОСБУ
	|ИЗ
	|	МаксПериодыСведенийОСБУ КАК МаксПериодыСведенийОСБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК ПервоначальныеСведенияОС
	|		ПО МаксПериодыСведенийОСБУ.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|			И МаксПериодыСведенийОСБУ.Организация = ПервоначальныеСведенияОС.Организация
	|			И МаксПериодыСведенийОСБУ.МаксПериод = ПервоначальныеСведенияОС.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет КАК ПараметрыАмортизацииОС
	|		ПО МаксПериодыСведенийОСБУ.ОсновноеСредство = ПараметрыАмортизацииОС.ОсновноеСредство
	|			И МаксПериодыСведенийОСБУ.Организация = ПараметрыАмортизацииОС.Организация
	|			И МаксПериодыСведенийОСБУ.МаксПериод = ПараметрыАмортизацииОС.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МаксПериодыСведенийОСБУ.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеВАренду.Ссылка КАК Ссылка,
	|	ПоступлениеВАренду.Номер КАК НомерАкта,
	|	ПоступлениеВАренду.Дата КАК Дата,
	|	ПоступлениеВАренду.Дата КАК ДатаВвода,
	|	ПоступлениеВАренду.Дата КАК ДатаВводаПриПередаче,
	|	0 КАК КоэффициентУскоренияБУ,
	|	ПоступлениеВАренду.МОЛ КАК МОЛБУ,
	|	0 КАК НормаАморт,
	|	ПоступлениеВАренду.Ответственный КАК Ответственный,
	|	ПоступлениеВАренду.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА ПоступлениеВАренду.ПодразделениеОрганизации.НаименованиеПолное ПОДОБНО """"""""
	|			ТОГДА ПоступлениеВАренду.ПодразделениеОрганизации.Наименование
	|		ИНАЧЕ ПоступлениеВАренду.ПодразделениеОрганизации.НаименованиеПолное
	|	КОНЕЦ КАК ПодрПолучателя,
	|	ПоступлениеВАренду.Склад КАК Склад,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыПоступленияАктивов.ПоДоговоруЛизинга) КАК СпособПоступления,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.Линейный) КАК СпособАмортизации,
	|	ПоступлениеВАренду.Организация КАК Организация,
	|	СведенияОСБУ.ИнвентарныйНомер КАК ИнвНомер,
	|	СведенияОСБУ.ПервоначальнаяСтоимость КАК НачСтоимость,
	|	СведенияОСБУ.ПервоначальнаяСтоимость КАК СтоимостьБУ,
	|	СведенияОСБУ.СчетУчета КАК СчетУчетаОС,
	|	СведенияОСБУ.НомерГруппы КАК НомерГруппы,
	|	СведенияОСБУ.Изготовитель КАК Изготовитель,
	|	СведенияОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	СведенияОСБУ.НомерСтроки КАК НомерСтроки,
	|	СведенияОСБУ.ГруппаОС КАК ГруппаОС,
	|	СведенияОСБУ.НаименованиеОС КАК НаименованиеОС,
	|	СведенияОСБУ.ЗаводскойНомер КАК ЗаводскойНомер,
	|	СведенияОСБУ.ДатаВыпуска КАК ГодВыпуска,
	|	СведенияОСБУ.КодОКОФ КАК КодОКОФ,
	|	СведенияОСБУ.СрокПолезногоИспользования КАК СрокПолезнИспПриПост,
	|	ЕСТЬNULL(КоличествоОС.КоличествоСтрок, 0) КАК КоличествоСтрок
	|ИЗ
	|	Документ.ПоступлениеВАренду КАК ПоступлениеВАренду
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоОсновныхСредств КАК КоличествоОС
	|		ПО ПоступлениеВАренду.Ссылка = КоличествоОС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ СведенияОСБУ КАК СведенияОСБУ
	|		ПО ПоступлениеВАренду.Ссылка = СведенияОСБУ.Ссылка
	|ГДЕ
	|	ПоступлениеВАренду.Ссылка В(&МассивОбъектов)
	|	И ПоступлениеВАренду.ПринятьКУчету = ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка,
	|	НомерСтроки";

	ВыборкаПоОС = Запрос.Выполнить().Выбрать();

	ПервыйДокумент = Истина;

	Пока ВыборкаПоОС.СледующийПоЗначениюПоля("Ссылка") Цикл

		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;

		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		Если ВыборкаПоОС.КоличествоСтрок <= 1 Тогда

			ВыборкаПоОС.Следующий();

			Если НЕ(ВыборкаПоОС.ГруппаОС = Перечисления.ГруппыОС.Здания 
				ИЛИ ВыборкаПоОС.ГруппаОС = Перечисления.ГруппыОС.Сооружения) Тогда
				
				ОбластьМакетаЗаголовок.Параметры.Заполнить(ВыборкаПоОС);
				
				ОбластьМакетаЗаголовок.Параметры.НомерАкта = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПоОС.НомерАкта, Истина, Ложь);
				
				Если ПустаяСтрока(ВыборкаПоОС.НаименованиеОС) Тогда
					ОбластьМакетаЗаголовок.Параметры.НаименованиеОС = СокрЛП(ВыборкаПоОС.ОсновноеСредство);
				КонецЕсли;

				ОбластьМакетаЗаголовок.Параметры.ПодрПолучателя = Строка(ВыборкаПоОС.ПодразделениеОрганизации);
				Документы.ПринятиеКУчетуОС.ЗаполнитьДанныеОрганизацииПолучателя(ВыборкаПоОС, ОбластьМакетаЗаголовок);
				
				ДанныеФизЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(ВыборкаПоОС.Организация,ВыборкаПоОС.МОЛБУ,ВыборкаПоОС.Дата);
				ОбластьМакетаЗаголовок.Параметры.МОЛДолжность = ДанныеФизЛица.Должность;
				ОбластьМакетаЗаголовок.Параметры.МОЛРасшифровкаПодписи = ДанныеФизЛица.Представление;

				ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовок);

			Иначе
				
				ОбластьМакетаЗаголовок_а.Параметры.Заполнить(ВыборкаПоОС);
				
				ОбластьМакетаЗаголовок_а.Параметры.НомерАкта = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПоОС.НомерАкта, Истина, Ложь);
				
				Если ПустаяСтрока(ВыборкаПоОС.НаименованиеОС) Тогда
					ОбластьМакетаЗаголовок_а.Параметры.НаименованиеОС = СокрЛП(ВыборкаПоОС.ОсновноеСредство);
				КонецЕсли;

				ОбластьМакетаЗаголовок_а.Параметры.ПодрПолучателя = Строка(ВыборкаПоОС.ПодразделениеОрганизации);
				
				ДанныеФизЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(ВыборкаПоОС.Организация,ВыборкаПоОС.МОЛБУ,ВыборкаПоОС.Дата);
				ОбластьМакетаЗаголовок_а.Параметры.МОЛДолжность = ДанныеФизЛица.Должность;
				ОбластьМакетаЗаголовок_а.Параметры.МОЛРасшифровкаПодписи = ДанныеФизЛица.Представление;
				
				Документы.ПринятиеКУчетуОС.ЗаполнитьДанныеОрганизацииПолучателя(ВыборкаПоОС, ОбластьМакетаЗаголовок_а);
				ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовок_а);

			КонецЕсли;

		Иначе // Объектов много - групповая печать.

			ОС1б_Страница1 = Новый ТабличныйДокумент();
			ОС1б_Страница2 = Новый ТабличныйДокумент();
			ОС1б_Страница3 = Новый ТабличныйДокумент();
			ОС1б_Страница4 = Новый ТабличныйДокумент();

			Шапка1ОС1б.Параметры.Заполнить(ВыборкаПоОС);
			Документы.ПринятиеКУчетуОС.ЗаполнитьДанныеОрганизацииПолучателя(ВыборкаПоОС, Шапка1ОС1б);
			Шапка1ОС1б.Параметры.НомерАкта = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПоОС.НомерАкта, Истина, Ложь);
			Шапка1ОС1б.Параметры.ЦельПередачи = НСтр("ru = 'включение объектов в состав основных средств и учета их ввода в эксплуатацию'");
			ОС1б_Страница1.Вывести(Шапка1ОС1б);

			Шапка2ОС1б.Параметры.Заполнить(ВыборкаПоОС);
			ОС1б_Страница2.Вывести(Шапка2ОС1б);

			Шапка3ОС1б.Параметры.Заполнить(ВыборкаПоОС);
			ОС1б_Страница3.Вывести(Шапка3ОС1б);

			Шапка4ОС1б.Параметры.Заполнить(ВыборкаПоОС);
			ДанныеФизЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(ВыборкаПоОС.Организация,ВыборкаПоОС.МОЛБУ,ВыборкаПоОС.Дата);
			Шапка4ОС1б.Параметры.МОЛДолжность = ДанныеФизЛица.Должность;
			Шапка4ОС1б.Параметры.МОЛРасшифровкаПодписи = ДанныеФизЛица.Представление;
			ОС1б_Страница4.Вывести(Шапка4ОС1б);

			НомПП            = 0;
			ИтогНачСтоимость = 0;

			Пока ВыборкаПоОС.Следующий() Цикл

				ИтогНачСтоимость = ИтогНачСтоимость + ВыборкаПоОС.НачСтоимость;

				НомПП = НомПП + 1;
				Строка2ОС1б.Параметры.Нс = НомПП;

				Строка2ОС1б.Параметры.Заполнить(ВыборкаПоОС);
				Если ПустаяСтрока(ВыборкаПоОС.НаименованиеОС) Тогда
					Строка2ОС1б.Параметры.НаименованиеОС = СокрЛП(ВыборкаПоОС.ОсновноеСредство);
				КонецЕсли;
				ОС1б_Страница2.Вывести(Строка2ОС1б);

				Строка3ОС1б.Параметры.Заполнить(ВыборкаПоОС);
				ОС1б_Страница3.Вывести(Строка3ОС1б);

			КонецЦикла;

			Строка2ПОС1б.Параметры.Заполнить(ВыборкаПоОС);
			ОС1б_Страница2.Вывести(Строка2ПОС1б);

			Подвал2.Параметры.Заполнить(ВыборкаПоОС);
			ОС1б_Страница2.Вывести(Подвал2);

			Строка3ПОС1б.Параметры.Заполнить(ВыборкаПоОС);
			ОС1б_Страница3.Вывести(Строка3ПОС1б);

			Подвал3.Параметры.Заполнить(ВыборкаПоОС);
			Подвал3.Параметры.ИтогНачСтоимость = ИтогНачСтоимость;
			ОС1б_Страница3.Вывести(Подвал3);

			ТабличныйДокумент.Вывести(ОС1б_Страница1);
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабличныйДокумент.Вывести(ОС1б_Страница2);
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабличныйДокумент.Вывести(ОС1б_Страница3);
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабличныйДокумент.Вывести(ОС1б_Страница4);
			
		КонецЕсли;

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоОС.Ссылка);

	КонецЦикла;
	
	Возврат ТабличныйДокумент;

КонецФункции

Функция ПечатьАктОПринятииКУчетуПредметовАренды(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВалютаРегУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеВАренду_АктОПринятииКУчетуПредметовАренды";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПоступлениеВАренду.ПФ_MXL_АктОПринятииКУчетуПредметовАренды");
	
	ОсновнаяЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.ПолучитьЕдиницуИзмеренияПоУмолчанию();
	Счета01 = БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ОсновныеСредства);
	
	Запрос = Новый Запрос();
	Запрос.Текст = ТекстЗапросаАктОПринятииКУчетуПредметовАренды();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ОсновнаяЕдиницаИзмерения", ОсновнаяЕдиницаИзмерения);
	Запрос.УстановитьПараметр("Счета01", Счета01);
	Запрос.УстановитьПараметр("ВидСубконтоОС", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаСумм = РезультатыЗапроса[5].Выгрузить();
	ТаблицаСумм.Индексы.Добавить("Ссылка,ОсновноеСредство");
	
	ПервыйДокумент = Истина;
	ВыборкаПоОС = РезультатыЗапроса[2].Выбрать();

	Пока ВыборкаПоОС.СледующийПоЗначениюПоля("Ссылка") Цикл

		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(ВыборкаПоОС);
		
		ПараметрыЗаполнения = Новый Структура;
		
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(
			ВыборкаПоОС.Организация, ВыборкаПоОС.ДатаДокумента);
		ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации);
		ПараметрыЗаполнения.Вставить("ПредставлениеОрганизации", ПредставлениеОрганизации);
		
		НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПоОС.НомерДокумента, Истина, Ложь);
		ПараметрыЗаполнения.Вставить("НомерДокумента", НомерДокумента);
		ДатаДокумента = Формат(ВыборкаПоОС.ДатаДокумента, "ДФ='dd.MM.yyyy ""г.""'");
		ПараметрыЗаполнения.Вставить("ДатаДокумента", ДатаДокумента);
		
		ПодразделениеОтветственныхЛиц = ВыборкаПоОС.ПодразделениеОрганизации;
		Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(
			ВыборкаПоОС.Организация, ВыборкаПоОС.ДатаДокумента, ПодразделениеОтветственныхЛиц);
		ФИОРуководителя = Руководители.РуководительПредставление;
		ПараметрыЗаполнения.Вставить("ФИОРуководителя", ФИОРуководителя);
		
		ЭтоИндивидуальныйПредприниматель = 
			СведенияОбОрганизации.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо
			И СведенияОбОрганизации.ИндивидуальныйПредприниматель = Руководители.Руководитель;
		
		ДолжностьРуководителя = ?(ЭтоИндивидуальныйПредприниматель,
			НСтр("ru = 'Индивидуальный предприниматель'"),
			Руководители.РуководительДолжностьПредставление);
		ПараметрыЗаполнения.Вставить("ДолжностьРуководителя", ДолжностьРуководителя);
		
		КонтрагентПредставление = ВыборкаПоОС.КонтрагентПредставление;
		ПараметрыЗаполнения.Вставить("КонтрагентПредставление", КонтрагентПредставление);
		
		ДоговорПредставление = ВыборкаПоОС.ДоговорКонтрагентаПредставление;
		Если ЗначениеЗаполнено(ВыборкаПоОС.НомерДоговораКонтрагента)
			И ЗначениеЗаполнено(ВыборкаПоОС.ДатаДоговораКонтрагента) Тогда
			
			ДоговорПредставление = СтрШаблон(НСтр("ru='№ %1 от %2'"),
				ВыборкаПоОС.НомерДоговораКонтрагента,
				Формат(ВыборкаПоОС.ДатаДоговораКонтрагента, "ДФ='dd.MM.yyyy ""г.""'"));
		КонецЕсли;
		ПараметрыЗаполнения.Вставить("ДоговорПредставление", ДоговорПредставление);
		
		Если ЗначениеЗаполнено(ВыборкаПоОС.ДатаВходящегоДокумента) 
			И ЗначениеЗаполнено(ВыборкаПоОС.НомерВходящегоДокумента) Тогда
			НомерВходящегоДокумента = ВыборкаПоОС.НомерВходящегоДокумента;
			ДатаВходящегоДокумента = Формат(ВыборкаПоОС.ДатаВходящегоДокумента, "ДФ='dd.MM.yyyy ""г.""'");
			ДокументПредставление = СтрШаблон(НСтр("ru='№ %1 от %2'"), НомерВходящегоДокумента, ДатаВходящегоДокумента);
		Иначе
			ДокументПредставление = "";
		КонецЕсли;
		ПараметрыЗаполнения.Вставить("ДокументПредставление", ДокументПредставление);
		
		ОбластьМакета.Параметры.Заполнить(ПараметрыЗаполнения);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		
		ИтогоПервоначальнаяСтоимость = 0;
		КоличествоОС = 1;
		
		Пока ВыборкаПоОС.Следующий() Цикл
			
			ПараметрыЗаполнения = Новый Структура;
			ПараметрыЗаполнения.Вставить("НомерСтроки", ВыборкаПоОС.НомерСтроки);
			ПараметрыЗаполнения.Вставить("ОСНаименование", ВыборкаПоОС.ОСНаименование);
			ПараметрыЗаполнения.Вставить("ОСКод", ВыборкаПоОС.ОСКод);
			ПараметрыЗаполнения.Вставить("ЕдиницаИзмерения", ВыборкаПоОС.ЕдиницаИзмерения);
			ПараметрыЗаполнения.Вставить("Количество", КоличествоОС);
			ПараметрыЗаполнения.Вставить("СрокПолезногоИспользования", ВыборкаПоОС.СрокПолезногоИспользования);
			
			ОтборСтрок = Новый Структура("Ссылка,ОсновноеСредство", ВыборкаПоОС.Ссылка, ВыборкаПоОС.ОсновноеСредство);
			СтрокиСумм = ТаблицаСумм.НайтиСтроки(ОтборСтрок);
			ПервоначальнаяСтоимость = 0;
			Если СтрокиСумм.Количество() > 0 Тогда
				ПервоначальнаяСтоимость = Окр(СтрокиСумм[0].ПервоначальнаяСтоимость, 2);
			КонецЕсли;
			ПараметрыЗаполнения.Вставить("ПервоначальнаяСтоимость", ПервоначальнаяСтоимость);
			
			ОбластьМакета.Параметры.Заполнить(ПараметрыЗаполнения);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			ИтогоПервоначальнаяСтоимость = ИтогоПервоначальнаяСтоимость + ПервоначальнаяСтоимость;
			
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("КонецТаблицы");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим итоги по документу
		ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
		ПараметрыЗаполнения = Новый Структура;
		ПараметрыЗаполнения.Вставить("ИтогоПервоначальнаяСтоимость", ИтогоПервоначальнаяСтоимость);
		ПараметрыЗаполнения.Вставить("СпособОценкиАрендыБУ", Нрег(ВыборкаПоОС.СпособОценкиАрендыБУПредставление));
		
		Если ВыборкаПоОС.СпособОценкиАрендыБУ = Перечисления.СпособыОценкиБУ.РассчитываетсяПоСтавке Тогда
			СтавкаДисконтирования = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку
				("%1%", ВыборкаПоОС.СтавкаДисконтирования);
			ПараметрыЗаполнения.Вставить("СтавкаДисконтирования", СтавкаДисконтирования);
		КонецЕсли;
		ОбластьМакета.Параметры.Заполнить(ПараметрыЗаполнения);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим подпись МОЛ
		ОбластьМакета = Макет.ПолучитьОбласть("ПодписьМОЛ");
		Если ЗначениеЗаполнено(ВыборкаПоОС.МОЛ) Тогда
			ПараметрыЗаполнения = Новый Структура;
			ДанныеМОЛ = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(
				ВыборкаПоОС.Организация, ВыборкаПоОС.МОЛ, ВыборкаПоОС.ДатаДокумента);
			ПараметрыЗаполнения.Вставить("ДолжностьМОЛ", ДанныеМОЛ.Должность);
			ПараметрыЗаполнения.Вставить("ФИОМОЛ", ДанныеМОЛ.Представление);
			ОбластьМакета.Параметры.Заполнить(ПараметрыЗаполнения);
		КонецЕсли;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим подпись главного бухгалтера
		Если Не ЭтоИндивидуальныйПредприниматель Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ПодписьГлавногоБухгалтера");
			ПараметрыЗаполнения = Новый Структура;
			ФИОГлавногоБухгалтера = Руководители.ГлавныйБухгалтерПредставление;
			ПараметрыЗаполнения.Вставить("ФИОГлавногоБухгалтера", ФИОГлавногоБухгалтера);
			ОбластьМакета.Параметры.Заполнить(ПараметрыЗаполнения);
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоОС.Ссылка);
			
	КонецЦикла;
	
	СтатистикаПоПоказателямКлиентСервер.ДобавитьСобытие("ПоступлениеТоваровУслуг.Печать.АктОПринятииКУчетуПредметовАренды");
	
	Возврат ТабличныйДокумент;

КонецФункции

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктОПринятииКУчетуПредметовАренды") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"АктОПринятииКУчетуПредметовАренды",
			НСтр("ru = 'Акт о принятии к учету предметов аренды'"),
			ПечатьАктОПринятииКУчетуПредметовАренды(МассивОбъектов, ОбъектыПечати),
			, // пиктограмма - по умолчанию
			"Документ.ПоступлениеВАренду.ПФ_MXL_АктОПринятииКУчетуПредметовАренды");
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОС1") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОС1",
			"Акт о приеме-передаче объекта ОС (ОС-1)", ПечатьОС1(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,
			"ОбщийМакет.ПФ_MXL_ОС1");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли