#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#Область Свойства

// Получает описание предопределенных наборов свойств.
//
// Параметры:
//  Наборы - ДеревоЗначений - с колонками:
//     * Имя           - Строка - Имя набора свойств. Формируется из полного имени объекта
//                       метаданных заменой символа "." на "_".
//                       Например, "Документ_ЗаказПокупателя".
//     * Идентификатор - УникальныйИдентификатор - Идентификатор ссылки предопределенного элемента.
//     * Используется  - Неопределено, Булево - Признак того, что набор свойств используется.
//                       Например, можно использовать для скрытия набора по функциональным опциям.
//                       Значение по умолчанию - Неопределено, соответствует значению Истина.
//     * ЭтоГруппа     - Булево - Истина, если набор свойств является группой.
//
Процедура ПриПолученииПредопределенныхНаборовСвойств(Наборы) Экспорт
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_УведомлениеОбУменьшенииНалогаПоПатенту";
	Набор.Идентификатор = Новый УникальныйИдентификатор("138980f1-0071-4519-8250-5ca4a598f00a");
	Набор.Используется  = Истина;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//  КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.УведомлениеОСпецрежимахНалогообложения";
	КомандаПечати.Обработчик     = "УчетПСНКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор  = "Уведомление";
	КомандаПечати.Представление  = НСтр("ru = 'Уведомление об уменьшении налога по патенту'");
	КомандаПечати.Порядок        = 10;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.УведомлениеОСпецрежимахНалогообложения";
	КомандаПечати.Обработчик     = "УчетПСНКлиент.ВыполнитьКомандуПечатиPDF417";
	КомандаПечати.Идентификатор  = "Уведомление";
	КомандаПечати.Представление  = НСтр("ru = 'Уведомление об уменьшении налога по патенту (PDF417)'");
	КомандаПечати.СписокФорм     = "ФормаДокумента";
	КомандаПечати.Порядок        = 20;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ПодготовкаПараметровПроведенияДокумента

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	ПодготовитьПараметрыРеквизитыДокумента(Запрос, ПараметрыПроведения, Отказ);
	
	Реквизиты = ПараметрыПроведения.Реквизиты[0];
	Если Отказ Или Не УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаТаблицыПатентов(НомераТаблиц);
	Результат = Запрос.ВыполнитьПакет();
	
	Для Каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Процедура ПодготовитьПараметрыРеквизитыДокумента(Запрос, ПараметрыПроведения, Отказ)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Уведомление КАК Уведомление
	|ИЗ
	|	Документ.УведомлениеОбУменьшенииНалогаПоПатенту КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	ТаблицаРеквизиты = Запрос.Выполнить().Выгрузить();
	
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицыПатентов(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаПатенты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	УведомлениеОбУменьшенииНалогаПоПатентуПатенты.ДокументПатент КАК ДокументПатент,
	|	ЕСТЬNULL(ОперацияСПатентом.Патент, ЗНАЧЕНИЕ(Справочник.Патенты.ПустаяСсылка)) КАК Патент,
	|	ЕСТЬNULL(ОперацияСПатентом.ДатаНачала, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаНачалаДействия,
	|	ЕСТЬNULL(ОперацияСПатентом.ДатаОкончания, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОкончанияДействия,
	|	ЕСТЬNULL(ОперацияСПатентом.КБК, """") КАК КБК,
	|	ЕСТЬNULL(ОперацияСПатентом.ДатаПервогоПлатежа, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПервогоПлатежа,
	|	ЕСТЬNULL(ОперацияСПатентом.СуммаПервогоПлатежа, 0) КАК СуммаПервогоПлатежа,
	|	ЕСТЬNULL(ОперацияСПатентом.ДатаВторогоПлатежа, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаВторогоПлатежа,
	|	ЕСТЬNULL(ОперацияСПатентом.СуммаВторогоПлатежа, 0) КАК СуммаВторогоПлатежа,
	|	УведомлениеОбУменьшенииНалогаПоПатентуПатенты.Сумма КАК Сумма,
	|	УведомлениеОбУменьшенииНалогаПоПатентуПатенты.СуммаУменьшеноРанее КАК УменьшеноРанее
	|ИЗ
	|	Документ.УведомлениеОбУменьшенииНалогаПоПатенту.Патенты КАК УведомлениеОбУменьшенииНалогаПоПатентуПатенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОперацияСПатентом КАК ОперацияСПатентом
	|		ПО УведомлениеОбУменьшенииНалогаПоПатентуПатенты.ДокументПатент = ОперацияСПатентом.Ссылка
	|ГДЕ
	|	УведомлениеОбУменьшенииНалогаПоПатентуПатенты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

#КонецОбласти

#Область ОбработчикиОбновления

// Создает документы уведомления об уменьшении налога по патентам по данным документов БРО.
// Также записывает данные по уменьшению налога в регистр сведений,
// т.к. созданные документы в учете не отражаем, но данные по уменьшению налога необходимы.
//
Процедура СоздатьДокументыПоДаннымУведомлений() Экспорт
	
	СоответствиеПатентов = СоответствиеПатентовИДокументов();
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ВидУведомления",
		Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УменьшениеНалогаНаСтраховыеВзносы);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УведомлениеОбУменьшенииНалогаПоПатенту.Ссылка КАК Документ,
	|	УведомлениеОСпецрежимахНалогообложения.Ссылка КАК Ссылка,
	|	УведомлениеОСпецрежимахНалогообложения.Дата КАК Дата,
	|	УведомлениеОСпецрежимахНалогообложения.Организация КАК Организация,
	|	УведомлениеОСпецрежимахНалогообложения.ДанныеУведомления КАК ДанныеУведомления,
	|	УведомлениеОСпецрежимахНалогообложения.РегистрацияВИФНС КАК РегистрацияВИФНС
	|ИЗ
	|	Документ.УведомлениеОСпецрежимахНалогообложения КАК УведомлениеОСпецрежимахНалогообложения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОбУменьшенииНалогаПоПатенту КАК УведомлениеОбУменьшенииНалогаПоПатенту
	|		ПО УведомлениеОСпецрежимахНалогообложения.Основание = УведомлениеОбУменьшенииНалогаПоПатенту.Ссылка
	|ГДЕ
	|	УведомлениеОСпецрежимахНалогообложения.ВидУведомления = &ВидУведомления
	|	И НЕ УведомлениеОСпецрежимахНалогообложения.ПометкаУдаления
	|	И УведомлениеОбУменьшенииНалогаПоПатенту.Ссылка ЕСТЬ NULL";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДокументОбъект = СоздатьДокумент();
		
		// Заполнение по данным уведомления
		ДанныеУведомления = Выборка.ДанныеУведомления.Получить();
		Если ТипЗнч(ДанныеУведомления) = Тип("Структура")
			И ДанныеУведомления.Свойство("ДанныеУведомления") И ТипЗнч(ДанныеУведомления.ДанныеУведомления) = Тип("Структура")
			И ДанныеУведомления.ДанныеУведомления.Свойство("ДанныеПомощника")
			И ТипЗнч(ДанныеУведомления.ДанныеУведомления.ДанныеПомощника) = Тип("Структура") Тогда
			ДанныеПомощника = ДанныеУведомления.ДанныеУведомления.ДанныеПомощника;
			
			Если Не ДанныеПомощника.Свойство("ОбщаяСуммаРасходов", ДокументОбъект.СуммаРасходов) Тогда
				Продолжить;
			КонецЕсли;
			
			Если ДанныеПомощника.Свойство("Патенты")
				И ТипЗнч(ДанныеПомощника.Патенты) = Тип("ХранилищеЗначения") Тогда
				Патенты = ДанныеПомощника.Патенты.Получить();
				Если ТипЗнч(Патенты) = Тип("ТаблицаЗначений")
					И ЗначениеЗаполнено(Патенты)
					И Патенты.Колонки.Найти("Ссылка") <> Неопределено
					И Патенты.Колонки.Найти("ДатаНачала") <> Неопределено
					И Патенты.Колонки.Найти("ДатаОкончания") <> Неопределено
					И Патенты.Колонки.Найти("УменьшеноРанее") <> Неопределено
					И Патенты.Колонки.Найти("Уменьшить") <> Неопределено Тогда
					
					Патенты.Колонки.Добавить("ДокументПатент", Новый ОписаниеТипов("ДокументСсылка.ОперацияСПатентом"));
					Для Каждого СтрокаПатент Из Патенты Цикл
						Если ОбщегоНазначения.СсылкаСуществует(СтрокаПатент.Ссылка) Тогда
							ДокументПатент = СоответствиеПатентов.Получить(СтрокаПатент.Ссылка);
							Если ЗначениеЗаполнено(ДокументПатент) Тогда
								НоваяСтрока = ДокументОбъект.Патенты.Добавить();
								НоваяСтрока.ДокументПатент = ДокументПатент;
								НоваяСтрока.СуммаУменьшеноРанее = СтрокаПатент.УменьшеноРанее;
								НоваяСтрока.Сумма = СтрокаПатент.Уменьшить;
								
								СтрокаПатент.ДокументПатент = ДокументПатент;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				Иначе
					Продолжить;
				КонецЕсли;
				ДанныеПомощника.Патенты = Новый ХранилищеЗначения(Патенты);
			Иначе
				Продолжить;
			КонецЕсли;
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если ДокументОбъект.Патенты.Количество() = 0 Тогда
			УведомлениеОбъект = Выборка.Ссылка.ПолучитьОбъект();
			УведомлениеОбъект.ДанныеУведомления = Новый ХранилищеЗначения(ДанныеУведомления);
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(УведомлениеОбъект);
			Продолжить;
		КонецЕсли;
		
		ЗаполнениеДокументов.Заполнить(ДокументОбъект);
		
		ДокументОбъект.Дата           = Выборка.Дата;
		ДокументОбъект.Организация    = Выборка.Организация;
		ДокументОбъект.НалоговыйОрган = Выборка.РегистрацияВИФНС;
		ДокументОбъект.Уведомление    = Выборка.Ссылка;
		
		Попытка
			ДокументОбъект.ДополнительныеСвойства.Вставить("СинхронизацияСостоянийУведомлений");
			ДокументОбъект.ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
			ДокументОбъект.ДополнительныеСвойства.Вставить("НеИзменятьРегистрациюВПоследовательности", Истина);
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект, , , РежимЗаписиДокумента.Проведение);
		Исключение
			ИнформацияОшибки = ИнформацияОбОшибке();
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Уведомления об уменьшении налога по патенту'", ОбщегоНазначения.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				ДокументОбъект.Метаданные(),
				ДокументОбъект.Ссылка,
				ПодробноеПредставлениеОшибки(ИнформацияОшибки));
			Продолжить;
		КонецПопытки;
		
		// В уведомлении заполним основание
		ДанныеУведомления.Вставить("ДокументОснование", ДокументОбъект.Ссылка);
		
		УведомлениеОбъект = Выборка.Ссылка.ПолучитьОбъект();
		УведомлениеОбъект.ДанныеУведомления = Новый ХранилищеЗначения(ДанныеУведомления);
		УведомлениеОбъект.Основание = ДокументОбъект.Ссылка;
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(УведомлениеОбъект);
		
	КонецЦикла;
	
КонецПроцедуры

Функция СоответствиеПатентовИДокументов()
	
	СоответствиеПатентов = Новый Соответствие;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОперацияСПатентом.Патент КАК Патент,
	|	ОперацияСПатентом.Ссылка КАК ДокументПатент
	|ИЗ
	|	Документ.ОперацияСПатентом КАК ОперацияСПатентом
	|ГДЕ
	|	ОперацияСПатентом.Проведен";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СоответствиеПатентов.Вставить(Выборка.Патент, Выборка.ДокументПатент);
	КонецЦикла;
	
	Возврат СоответствиеПатентов;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли