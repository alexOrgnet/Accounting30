#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ
//

Процедура ЗаполнитьПоДокументуОснованию(Основание)

	// Заполним реквизиты из стандартного набора по документу основанию.
	ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Если обработчик обновления, заполняющий вид операции, еще не завершен, принудительно заполним вид операции.
	Если Не ЗначениеЗаполнено(ВидОперации) Тогда
		ВидОперации = Перечисления.ВидыОперацийИнвентаризацияНЗП.СуммоваяОценка;
	КонецЕсли;
	
	Если ВидОперации = Перечисления.ВидыОперацийИнвентаризацияНЗП.КоличественнаяОценка И Состав.Количество() > 0 Тогда
		Состав.Очистить();
	КонецЕсли;
	
	Если ВидОперации = Перечисления.ВидыОперацийИнвентаризацияНЗП.СуммоваяОценка И СоставПоПродукции.Количество() > 0 Тогда
		СоставПоПродукции.Очистить();
	КонецЕсли;
	
КонецПроцедуры

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено
			И ТипДанныхЗаполнения <> Тип("Структура")
			И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения);
	КонецЕсли;
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
	СчетаПрямыхЗатрат = Справочники.НастройкиУчетаЗатрат.КалькуляционныеСчета(Дата, Организация);
	Если СчетаПрямыхЗатрат.Количество() > 0 И СчетаПрямыхЗатрат.Найти(СчетЗатрат) = Неопределено Тогда
		СчетЗатрат = СчетаПрямыхЗатрат[0];
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	ПроверитьИспользование(Отказ, ПроверяемыеРеквизиты);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьИспользование(Отказ, ПроверяемыеРеквизиты)
	
	Если ПроверяемыеРеквизиты.Найти("СчетЗатрат") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СчетЗатрат) Тогда
		Возврат;
	КонецЕсли;
	
	ВидОперацииОпределенныйВУчетнойПолитике =
		Справочники.НастройкиУчетаЗатрат.ИспользованиеДокументаИнвентаризацияНезавершенногоПроизводства(
			Дата,
			СчетЗатрат,
			Организация);
	
	СчетИспользуется = ЗначениеЗаполнено(ВидОперацииОпределенныйВУчетнойПолитике);
	
	Если СчетИспользуется И ВидОперацииОпределенныйВУчетнойПолитике = ВидОперации Тогда
		Возврат;
	КонецЕсли;
	
	Если Не СчетИспользуется Тогда
		ТекстСообщения = НСтр("ru = 'Учет незавершенного производства отключен в учетной политике'");
	ИначеЕсли ВидОперацииОпределенныйВУчетнойПолитике = Перечисления.ВидыОперацийИнвентаризацияНЗП.КоличественнаяОценка Тогда
		ТекстСообщения = НСтр("ru = 'В документе введены данные в разрезе номенклатурных групп с указанием сумм незавершенного производства.
			|Данные документа не совместимы с текущей настройкой незавершенного производства, указанной в учетной политике.
			|Измените настройку счета в учетной политике или укажите счет учета, на котором суммы незавершенного производства указываются вручную.'");
	Иначе
		ТекстСообщения = НСтр("ru = 'В документе введены данные в разрезе продукции с указанием количества и степени готовности.
			|Данные документа не совместимы с текущей настройкой незавершенного производства, указанной в учетной политике.
			|Измените настройку счета в учетной политике или укажите счет учета, для которого установлена количественная оценка незавершенного производства.'");
	КонецЕсли;
	
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли