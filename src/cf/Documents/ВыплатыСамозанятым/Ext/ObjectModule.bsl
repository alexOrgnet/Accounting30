#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения, Истина);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();
	Для Каждого СтрокаВыплаты Из Выплаты Цикл
		СтрокаВыплаты.СсылкаНаЧек = "";
		СтрокаВыплаты.НомерЧека = "";
		СтрокаВыплаты.ЧекСамозанятого = Неопределено;
		СтрокаВыплаты.ПричинаОтказа = Неопределено;
		СтрокаВыплаты.РасшифровкаРезультата = Неопределено;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	СуммаДокумента = Выплаты.Итог("Сумма");
	
	СчетаУчетаВДокументах.ЗаполнитьПередЗаписью(ЭтотОбъект, РежимЗаписи);
	
	Если ЗначениеЗаполнено(Организация) И НЕ ЗначениеЗаполнено(СчетОрганизации) Тогда
		УчетДенежныхСредствБП.УстановитьБанковскийСчет(
			СчетОрганизации, Организация,
			ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета(), Истина);
	КонецЕсли;

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Состояние = Неопределено;
	ДополнительныеСвойства.Свойство("Состояние", Состояние);
	Если Состояние <> Неопределено Тогда
		СтатусЗагрузкиЧеков = Документы.ВыплатыСамозанятым.СтатусЗагрузкиЧеков(Ссылка);
		Если (СтатусЗагрузкиЧеков <> "ЧекиЗагружены") 
			И (СтатусЗагрузкиЧеков <> "НеВсеЧекиЗагружены") Тогда
				НовыеСтатусыДокумента = РегистрыСведений.СтатусыДокументов.НовыеСтатусыДокумента();
				НовыеСтатусыДокумента.Статус = Состояние;
				РегистрыСведений.СтатусыДокументов.УстановитьСтатусыДокумента(Ссылка, НовыеСтатусыДокумента);
		Иначе
			Документы.ВыплатыСамозанятым.УстановитьСостояниеДокумента(Ссылка);
		КонецЕсли;
	Иначе
		Документы.ВыплатыСамозанятым.УстановитьСостояниеДокумента(Ссылка);
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПроведения = Документы.ВыплатыСамозанятым.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Документы.ВыплатыСамозанятым.СформироватьДвиженияНачислениеЗадолженностиСамозанятым(
		ПараметрыПроведения.Выплаты,
		ПараметрыПроведения.Реквизиты,
		Движения, Отказ);
		
	ВыплатыСамозанятым.СформироватьДвиженияЗадолженностиСамозанятыхПоРеестру(
		ПараметрыПроведения.Выплаты,
		ПараметрыПроведения.Реквизиты,
		Движения, Отказ);
	
	// УСН
	УчетУСН.ПоступлениеРасходовУСН(ПараметрыПроведения.УСНТаблицаРасходов,
		ПараметрыПроведения.УСНРеквизиты, 0, Движения, Отказ);
	Если Не Отказ И Движения.РасходыПриУСН.Количество() > 0 Тогда
		Движения.РасходыПриУСН.Записать(Истина);
		Движения.РасходыПриУСН.Записывать = Ложь;
	КонецЕсли;
	
	// Учет доходов и расходов ИП
	ТаблицаУслугИП = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицуПоступленияМПЗ(
		ПараметрыПроведения.ИПТаблицаУслуг,
		ПараметрыПроведения.ИПРеквизиты);
		
	СтруктураТаблицМПЗ = Новый Структура;
	СтруктураТаблицМПЗ.Вставить("ТаблицаТоваров",      Неопределено);
	СтруктураТаблицМПЗ.Вставить("ТаблицаУслуг",        ТаблицаУслугИП);
	СтруктураТаблицМПЗ.Вставить("ТаблицаОборудования", Неопределено);
	СтруктураТаблицМПЗ.Вставить("ТаблицаПрочее",       Неопределено);
	
	УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияПоступлениеМПЗ(СтруктураТаблицМПЗ,
		ПараметрыПроведения.ТаблицаВзаиморасчетыИП, , ПараметрыПроведения.ИПРеквизиты, Движения, Отказ);
	
	РаботаСПоследовательностями.ЗарегистрироватьВПоследовательности(ЭтотОбъект, Отказ, Ложь);
	
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив();
	Если УслугаВТаблице Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Номенклатура");
	Иначе
		МассивНепроверяемыхРеквизитов.Добавить("Выплаты.Содержание");
	КонецЕсли;
	
	СтруктураПоиска = Новый Структура("Контрагент");
	СтруктураПоиска.Вставить("БанковскийСчет");
	Если УслугаВТаблице Тогда
		СтруктураПоиска.Вставить("Содержание");
	КонецЕсли;
	
	ПроверкаЗаполненияДокументов.ПроверитьОтсутствиеДублейВТабличнойЧасти(ЭтотОбъект, "Выплаты", СтруктураПоиска, Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	СчетаУчетаВДокументах.ПроверитьЗаполнение(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
 
 ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
 Движения.Записать();
 
 РаботаСПоследовательностями.ОтменитьРегистрациюВПоследовательности(ЭтотОбъект, Отказ);
 
КонецПроцедуры

#КонецОбласти

#КонецЕсли