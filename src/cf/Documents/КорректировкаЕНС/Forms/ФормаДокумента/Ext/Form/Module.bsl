#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НачалоПростогоУчета = ЕдиныйНалоговыйСчет.НачалоПростогоУчета();
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
	
	Если Объект.СозданАвтоматически Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
	#Область СтандартныеПодсистемы
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПараметрыРазмещения = ПодключаемыеКоманды.ПараметрыРазмещения();
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	#КонецОбласти
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПодготовитьФормуНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ОбщегоНазначенияБПКлиент.ОбработкаОповещенияФормыДокумента(ЭтаФорма, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	УправлениеФормой(ЭтотОбъект);
	
	УстановитьСостояниеДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Организация", Объект.Организация);
	ПараметрыОповещения.Вставить("Период",      Объект.Дата);
	
	Оповестить("Запись_КорректировкаЕНС", ПараметрыОповещения, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если Объект.Дата < НачалоПростогоУчета Тогда
		ТекстОшибки = СтрШаблон(НСтр("ru='Документ используется, начиная с %1'"),
			Формат(НачалоПростогоУчета, "ДЛФ=DD"));
		ПоказатьПредупреждение(, ТекстОшибки);
		Объект.Дата = НачалоПростогоУчета;
	КонецЕсли;
	
	ОсновнаяРегистрацияВНалоговомОргане = ОсновнаяРегистрацияВНалоговомОргане(Объект.Организация, Объект.Дата);
	Если ЕстьРегистрацияВНалоговомОргане 
		И Не ЗначениеЗаполнено(Объект.РегистрацияВНалоговомОргане) Тогда
		Объект.РегистрацияВНалоговомОргане = ОсновнаяРегистрацияВНалоговомОргане;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОсновнаяРегистрацияВНалоговомОргане = ОсновнаяРегистрацияВНалоговомОргане(Объект.Организация, Объект.Дата);
	Если ЕстьРегистрацияВНалоговомОргане 
		И Не ЗначениеЗаполнено(Объект.РегистрацияВНалоговомОргане) Тогда
		Объект.РегистрацияВНалоговомОргане = ОсновнаяРегистрацияВНалоговомОргане;
	КонецЕсли;
	Если ЭтоПрочее(Объект.ВидОперации) Тогда
		БухгалтерскийУчетКлиентСервер.УстановитьСвойстваСубконтоШапкиПриИзмененииОрганизации(
			ЭтотОбъект, Объект, ПараметрыУстановкиСвойствСубконто(ЭтотОбъект));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	Если ЭтоПрочее(Объект.ВидОперации) Тогда
		БухгалтерскийУчетКлиентСервер.УстановитьНачальныеСвойстваСубконтоШапки(
			ЭтотОбъект, Объект, ПараметрыУстановкиСвойствСубконто(ЭтотОбъект));
	Иначе
		ДанныеСчета = ДанныеСчета(Объект.ВидОперации, Объект.Налог, Объект.Дата);
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеСчета);
		Объект.СчетУчета = ДанныеСчета.СчетУчета;
		Если ЕстьУровниБюджетов Тогда
			Объект.УровеньБюджета = ДанныеСчета.УровеньБюджета;
		Иначе
			Объект.УровеньБюджета = Неопределено;
		КонецЕсли;
		Если ЕстьРегистрацияВНалоговомОргане 
			И Не ЗначениеЗаполнено(Объект.РегистрацияВНалоговомОргане) Тогда
			Объект.РегистрацияВНалоговомОргане = ОсновнаяРегистрацияВНалоговомОргане;
		КонецЕсли;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура НалогПриИзменении(Элемент)
	
	ДанныеСчета = ДанныеСчета(Объект.ВидОперации, Объект.Налог, Объект.Дата);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеСчета);
	Объект.СчетУчета = ДанныеСчета.СчетУчета;
	Если ЕстьУровниБюджетов Тогда
		Объект.УровеньБюджета = ДанныеСчета.УровеньБюджета;
	Иначе
		Объект.УровеньБюджета = Неопределено;
	КонецЕсли;
	Если ЕстьРегистрацияВНалоговомОргане 
		И Не ЗначениеЗаполнено(Объект.РегистрацияВНалоговомОргане) Тогда
		Объект.РегистрацияВНалоговомОргане = ОсновнаяРегистрацияВНалоговомОргане;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СчетУчетаПриИзменении(Элемент)
	
	Если ЭтоПрочее(Объект.ВидОперации) Тогда
		БухгалтерскийУчетКлиентСервер.УстановитьСвойстваСубконтоШапкиПриИзмененииСчета(
			ЭтотОбъект, Объект, ПараметрыУстановкиСвойствСубконто(ЭтотОбъект));
	Иначе
		СвойстваСчетаУчета = СвойстваСчета(Объект.СчетУчета);
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, СвойстваСчетаУчета);
		Если ЕстьРегистрацияВНалоговомОргане 
			И Не ЗначениеЗаполнено(Объект.РегистрацияВНалоговомОргане) Тогда
			Объект.РегистрацияВНалоговомОргане = ОсновнаяРегистрацияВНалоговомОргане;
		КонецЕсли;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Субконто1ПриИзменении(Элемент)
	
	ПриИзмененииСубконто(1);
	
КонецПроцедуры

&НаКлиенте
Процедура Субконто1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НачалоВыбораСубконто(Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Субконто2ПриИзменении(Элемент)
	
	ПриИзмененииСубконто(2);
	
КонецПроцедуры

&НаКлиенте
Процедура Субконто2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НачалоВыбораСубконто(Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Субконто3ПриИзменении(Элемент)
	
	ПриИзмененииСубконто(3);
	
КонецПроцедуры

&НаКлиенте
Процедура Субконто3НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	НачалоВыбораСубконто(Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	ПользовательУправляетСчетамиУчета = СчетаУчетаВДокументахВызовСервераПовтИсп.ПользовательУправляетСчетамиУчета();
	ОсновнаяРегистрацияВНалоговомОргане = ОсновнаяРегистрацияВНалоговомОргане(Объект.Организация, Объект.Дата);
	Если ЭтоПрочее(Объект.ВидОперации) Тогда
		БухгалтерскийУчетКлиентСервер.УстановитьНачальныеСвойстваСубконтоШапки(
			ЭтотОбъект, Объект, ПараметрыУстановкиСвойствСубконто(ЭтотОбъект));
	Иначе
		СвойстваСчетаУчета = Документы.КорректировкаЕНС.СвойстваСчета(Объект.СчетУчета);
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, СвойстваСчетаУчета);
	КонецЕсли;
	
	УстановитьСостояниеДокумента();
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПараметрыУстановкиСвойствСубконто(Форма)
	
	Результат = БухгалтерскийУчетКлиентСервер.ПараметрыУстановкиСвойствСубконтоПоШаблону(
		"Субконто", "", "Субконто", "", "СчетУчета");
	
	Результат.ДопРеквизиты.Вставить("Организация", Форма.Объект.Организация);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПриИзмененииСубконто(НомерСубконто)
	
	БухгалтерскийУчетКлиентСервер.УстановитьСвойстваСубконтоШапкиПриИзмененииСубконто(
		ЭтотОбъект, Объект, НомерСубконто, ПараметрыУстановкиСвойствСубконто(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоВыбораСубконто(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДанныеОбъекта = БухгалтерскийУчетКлиентСервер.ДанныеУстановкиПараметровСубконто(
		Объект, ПараметрыУстановкиСвойствСубконто(ЭтотОбъект));
	
	ОбщегоНазначенияБПКлиент.НачалоВыбораЗначенияСубконто(
		ЭтотОбъект, Элемент, СтандартнаяОбработка, ДанныеОбъекта);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеСчета(Знач ВидОперации, Знач Налог, Знач Дата)
	
	Возврат Документы.КорректировкаЕНС.ДанныеСчета(ВидОперации, Налог, Дата);
	
КонецФункции

&НаСервереБезКонтекста
Функция СвойстваСчета(Знач Счет)
	
	Возврат Документы.КорректировкаЕНС.СвойстваСчета(Счет);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ЭтоНалог = ЭтоНалог(Объект.ВидОперации);
	ЭтоРасходы = ЭтоРасходы(Объект.ВидОперации);
	ЭтоДоходы = ЭтоДоходы(Объект.ВидОперации);
	ЭтоТретьиЛица = ЭтоТретьиЛица(Объект.ВидОперации);
	ЭтоПрочее = ЭтоПрочее(Объект.ВидОперации);
	
	Элементы.Налог.Видимость = ЭтоНалог;
	Элементы.Контрагент.Видимость = ЭтоТретьиЛица;
	Элементы.СчетУчета.Видимость = Форма.ПользовательУправляетСчетамиУчета Или ЭтоПрочее;
	Элементы.ГруппаПрочее.Видимость = ЭтоПрочее;
	Элементы.ВидПлатежаВГосБюджет.Видимость = ЭтоНалог;
	Элементы.УровеньБюджета.Видимость = ЭтоНалог И Форма.ЕстьУровниБюджетов;
	Элементы.РегистрацияВНалоговомОргане.Видимость = ЭтоНалог И Форма.ЕстьРегистрацияВНалоговомОргане;
	Элементы.Подразделение.Видимость = Форма.ЕстьУчетПоПодразделениям;
	
	Если ЭтоНалог Тогда
		Элементы.СчетУчета.Заголовок = "Счет налога";
		Элементы.Подразделение.Заголовок = "Подразделение";
	ИначеЕсли ЭтоРасходы Тогда
		Элементы.СчетУчета.Заголовок = "Счет расходов";
		Элементы.Подразделение.Заголовок = "Подразделение расходов";
	ИначеЕсли ЭтоДоходы Тогда
		Элементы.СчетУчета.Заголовок = "Счет доходов";
		Элементы.Подразделение.Заголовок = "Подразделение доходов";
	ИначеЕсли ЭтоТретьиЛица Тогда
		Элементы.СчетУчета.Заголовок = "Счет расчетов";
		Элементы.Подразделение.Заголовок = "Подразделение расчетов";
	Иначе
		Элементы.СчетУчета.Заголовок = "Счет учета";
		Элементы.Подразделение.Заголовок = "Подразделение";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоНалог(ВидОперации)
	
	Возврат ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийКорректировкиЕНС.НачислениеНалога")
		Или ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийКорректировкиЕНС.ВозмещениеНалога");
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоРасходы(ВидОперации)
	
	Возврат ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийКорректировкиЕНС.НачислениеПени")
		Или ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийКорректировкиЕНС.НачислениеШтрафа") 
		Или ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийКорректировкиЕНС.НачислениеПроцентов")
		Или ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийКорректировкиЕНС.НачислениеГосПошлины");
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоДоходы(ВидОперации)
	
	Возврат ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийКорректировкиЕНС.ПоступлениеПроцентовОтНалоговогоОргана");
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоТретьиЛица(ВидОперации)
	
	Возврат ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийКорректировкиЕНС.ПереводСредствТретьемуЛицу")
		Или ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийКорректировкиЕНС.ПоступлениеСредствОтТретьегоЛица");
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоПрочее(ВидОперации)
	
	Возврат ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийКорректировкиЕНС.ПрочееУвеличениеСальдо")
		Или ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийКорректировкиЕНС.ПрочееУменьшениеСальдо");
	
КонецФункции

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОсновнаяРегистрацияВНалоговомОргане(Организация, Дата)
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Справочники.Организации.РегистрацияВНалоговомОрганеНаДату(Организация, Дата);
	
КонецФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
