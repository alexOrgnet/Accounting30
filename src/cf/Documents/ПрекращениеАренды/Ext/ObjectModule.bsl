#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ДанныеЗаполнения <> Неопределено
			И ТипДанныхЗаполнения <> Тип("Структура")
			И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
		ЗаполнитьПоОснованию(ДанныеЗаполнения);
	КонецЕсли;
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения, Истина);
	
	Если НЕ ЗначениеЗаполнено(СобытиеОС) Тогда
		СобытиеОС = УчетОС.ПолучитьСобытиеПоОСИзСправочника(Перечисления.ВидыСобытийОС.Списание);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВидОперации) Тогда
		ВидОперации = ?(ПолучитьФункциональнуюОпцию("ВедетсяУчетПредметовАренды"),
			Перечисления.ВидыОперацийПрекращениеАренды.ПрекращениеАренды,
			Перечисления.ВидыОперацийПрекращениеАренды.ПрекращениеЛизинга);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Контрагент) И Не ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		РаботаСДоговорамиКонтрагентовБП.УстановитьДоговорКонтрагента(
			ДоговорКонтрагента, Контрагент, Организация, 
			БухгалтерскийУчетПереопределяемый.ПолучитьМассивВидовДоговоров(Истина));
	КонецЕсли;
	
	ДанныеЗаполненияПоДоговору = Документы.ПрекращениеАренды.ДанныеЗаполненияПоДоговору(ДоговорКонтрагента);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполненияПоДоговору);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ)
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПроведения = Документы.ПрекращениеАренды.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Алгоритмы формирования проводок этого документа рассчитывают суммы проводок налогового учета
	Движения.Хозрасчетный.ДополнительныеСвойства.Вставить("СуммыНалоговогоУчетаЗаполнены", Истина);
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ
	
	// Проверки по данным ИБ
	
	УчетОС.ПроверитьСоответствиеОСОрганизации(
		ПараметрыПроведения.ОсновныеСредства, ПараметрыПроведения.ПроверкиПоОС, Отказ);

	УчетОС.ПроверитьСоответствиеМестонахожденияОС(
		ПараметрыПроведения.ОсновныеСредства, ПараметрыПроведения.ПроверкиПоОС, Отказ);

	УчетОС.ПроверитьЗаполнениеСчетаУчетаОС(
		ПараметрыПроведения.ОсновныеСредства, ПараметрыПроведения.ПроверкиПоОС, Отказ);

	УчетОС.ПроверитьВозможностьИзмененияСостоянияОС(
		ПараметрыПроведения.ОсновныеСредства, ПараметрыПроведения.СостоянияОС, Отказ);
	
	УчетОС.ПроверитьДоговорПредметовАренды(
		ПараметрыПроведения.ОсновныеСредства, ПараметрыПроведения.ПроверкиПоОС, Отказ);
	
	// Подготовка таблиц по данным ИБ
	
	ПараметрыВыбытия = УчетОС.ПодготовитьТаблицыСведенийПоВыбытиюОС(
		ПараметрыПроведения.ОсновныеСредства, ПараметрыПроведения.ВыбытиеОС, Отказ);
	
	ТаблицаСтоимости = УчетОС.ПодготовитьТаблицуОстаточнойСтоимости(
		ПараметрыПроведения.СписаниеОстаточнойСтоимостиТаблица,
		ПараметрыПроведения.СписаниеОстаточнойСтоимости, ПараметрыВыбытия, Отказ);
	
	ТаблицаОСДляСостоянияОС = УчетОС.ПодготовитьТаблицуОСДляСнятияСУчетаПриСписании(
		ПараметрыПроведения.СостоянияОС, ПараметрыВыбытия, Отказ);
	
	ТаблицыПроцентов = Документы.ПрекращениеАренды.ТаблицыПроцентовПоАренде(
		ПараметрыПроведения.ОсновныеСредства, ПараметрыПроведения.ПрекращениеАренды);
		
	ДанныеРасчетов = Документы.ПрекращениеАренды.ДанныеСписанияРасчетов(
		ПараметрыПроведения.ОсновныеСредства, ТаблицыПроцентов.Проценты, ПараметрыПроведения.ПрекращениеАренды);
	
	Документы.ПрекращениеАренды.ИзменитьПараметрыСписанияОС(
		ПараметрыВыбытия.ТаблицаПараметрыСписания, ДанныеРасчетов.ИзменениеСтоимостиОС, ПараметрыПроведения.ПрекращениеАренды);
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
	
	// Алгоритмы формирования проводок этого документа рассчитывают суммы проводок налогового учета
	Движения.Хозрасчетный.ДополнительныеСвойства.Вставить("СуммыНалоговогоУчетаЗаполнены", Истина);
	
	// Рассчитанная стоимость обязательства
	Документы.ПрекращениеАренды.СформироватьДвиженияСтоимостьОбязательстваПоАренде(
		ТаблицыПроцентов.СтоимостьОбязательства, Движения);
	
	// Рассчитанный график процентных расходов
	УчетПроцентовПоОбязательствам.СформироватьДвиженияГрафикиПроцентныхРасходов(
		ТаблицыПроцентов.График, ПараметрыПроведения.ПрекращениеАренды, Движения, Отказ);
	
	// Начисление процентов по новому графику
	УчетПроцентовПоОбязательствам.СформироватьДвиженияНачислениеПроцентныхРасходов(
		Движения, ТаблицыПроцентов.Проценты, ПараметрыПроведения.ПрекращениеАренды);
	
	// Списание обязательств и процентов по прекращаемой аренде
	Документы.ПрекращениеАренды.СформироватьДвиженияСписаниеОбязательств(
		ДанныеРасчетов, ПараметрыПроведения.ПрекращениеАренды, Движения);
	
	// Списание остатков по счету учета ОС и счету амортизации
	УчетОС.СформироватьДвиженияВыбытиеОС(
		ПараметрыПроведения.ВыбытиеОС, ПараметрыВыбытия, Движения, Отказ);
	
	// Списание остатков по счету выбытия ОС
	Документы.ПрекращениеАренды.СформироватьДвиженияВыбытиеОС(
		ПараметрыВыбытия.ТаблицаПараметрыСписания, ПараметрыПроведения.ПрекращениеАренды, Движения);
	
	// Списание суммы корректировки (01.К) в налоговом учете
	Документы.ПрекращениеАренды.СформироватьДвиженияСписаниеКорректировкиСтоимостиНУ(
		ДанныеРасчетов.ИзменениеСтоимостиОС, ПараметрыПроведения.ПрекращениеАренды, Движения);
	
	УчетОС.СформироватьДвиженияИзменениеСостоянияОС(
		ТаблицаОСДляСостоянияОС, ПараметрыПроведения.СостоянияОС, Движения, Отказ);
	
	// Данные предметов аренды с нулевыми суммами по списанным ОС 
	УчетОС.СформироватьДвиженияДанныеОПоступленииПредметыАренды(
		ПараметрыПроведения.ОсновныеСредства, ПараметрыПроведения.ПрекращениеАренды, Движения, Отказ);
	
	// Переоценка валютных остатков - после формирования проводок всеми другими механизмами
	
	ТаблицаПереоценка = УчетДоходовРасходов.ПодготовитьТаблицуПереоценкаВалютныхОстатковПоПроводкамДокумента(
		ПараметрыПроведения.ПрекращениеАренды, Движения, Отказ);
	
	УчетДоходовРасходов.СформироватьДвиженияПереоценкаВалютныхОстатков(ТаблицаПереоценка,
		ПараметрыПроведения.ПрекращениеАренды, Движения, Отказ);
	
	УчетДоходовРасходов.СформироватьДвиженияРасчетПереоценкиВалютныхСредств(ТаблицаПереоценка,
		ПараметрыПроведения.ПрекращениеАренды, Движения, Отказ);
	
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	УправлениеВнеоборотнымиАктивами.ПроверитьОтсутствиеДублейВТабличнойЧасти(
		ЭтотОбъект, "ПредметыАренды", Новый Структура("ПредметАренды"), Отказ);
	
	РеквизитыЗаСсылками = Документы.ПрекращениеАренды.РеквизитыЗаСсылками();
	
	СчетаУчетаВДокументах.ПроверитьЗаполнение(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, РеквизитыЗаСсылками);
	
	ПроверкаЗаполненияДокументов.ПроверитьРеквизитыЗаСсылками(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, РеквизитыЗаСсылками);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	РаботаСДоговорамиКонтрагентовБП.ЗаполнитьДоговорПередЗаписью(ЭтотОбъект);
	СчетаУчетаВДокументах.ЗаполнитьПередЗаписью(ЭтотОбъект, РежимЗаписи);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоОснованию(Основание)
	
	// Заполним реквизиты из стандартного набора по документу основанию.
	ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);
	
	Если ТипЗнч(Основание) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
	
		Если Основание.ЭтоГруппа Тогда
			
			ТекстСообщения = НСтр("ru = 'Прекращение аренды на основании группы ОС невозможен!
				|Выберите ОС. Для раскрытия группы используйте клавиши Ctrl и стрелку вниз'");
			ВызватьИсключение(ТекстСообщения);
			
		КонецЕсли;
		
		СтрокаТабличнойЧасти = ПредметыАренды.Добавить();
		СтрокаТабличнойЧасти.ПредметАренды = Основание;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСТЬNULL(ПервоначальныеСведенияОС.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация
		|ИЗ
		|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&Дата, ОсновноеСредство = &ОсновноеСредство) КАК ПервоначальныеСведенияОС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение
		|ИЗ
		|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&Дата, ОсновноеСредство = &ОсновноеСредство) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних";
		Запрос.УстановитьПараметр("Дата", НачалоДня(ТекущаяДатаСеанса()));
		Запрос.УстановитьПараметр("ОсновноеСредство", Основание);
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		Если НЕ РезультатЗапроса[0].Пустой() Тогда
			Выборка = РезультатЗапроса[0].Выбрать();
			Выборка.Следующий();
			Организация = Выборка.Организация;
		КонецЕсли;
		Если НЕ РезультатЗапроса[1].Пустой() Тогда
			Выборка = РезультатЗапроса[1].Выбрать();
			Выборка.Следующий();
			ПодразделениеОрганизации = Выборка.Местонахождение;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли