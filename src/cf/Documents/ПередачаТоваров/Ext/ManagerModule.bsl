#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 14, 0);
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

Процедура ЗаполнитьСчетаУчетаРасчетов(Объект, Знач СчетаУчета = Неопределено) Экспорт
	
	Если СчетаУчета = Неопределено Тогда
		СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(
			Объект.Организация, 
			Объект.Контрагент, 
			Объект.ДоговорКонтрагента);
	КонецЕсли;

	Объект.СчетУчетаРасчетовПоТаре = СчетаУчета.СчетУчетаТарыПокупателя;
	
КонецПроцедуры

// Заполняет счета учета номенклатуры в табличной части документа
//
Процедура ЗаполнитьСчетаУчетаВТабличнойЧасти(Объект, ИмяТабличнойЧасти) Экспорт

	ТабличнаяЧасть = Объект[ИмяТабличнойЧасти];
	
	ДанныеОбъекта = Новый Структура("Дата, ВидОперации, Организация, Склад");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	
	СоответствиеСчетовУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаУчетаСпискаНоменклатуры(
		ДанныеОбъекта.Организация, ОбщегоНазначения.ВыгрузитьКолонку(ТабличнаяЧасть, "Номенклатура", Истина)
			, ДанныеОбъекта.Склад, ДанныеОбъекта.Дата);
	
	Если Объект.ВидОперации = Перечисления.ВидыОперацийПередачаТоваров.БезвозмезднаяПередача Тогда
		СчетаУчетаВДокументах.ЗаполнитьСтроки(ТабличнаяЧасть, ИмяТабличнойЧасти, Объект, Документы.ПередачаТоваров);
	Иначе
		
		Для каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
			СчетаУчета = СоответствиеСчетовУчета.Получить(СтрокаТабличнойЧасти.Номенклатура);
			ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СчетаУчета);
		КонецЦикла;
	КонецЕсли;


КонецПроцедуры

Функция ПодготовитьДанныеДляПечатиУниверсальныхПередаточныхДокументов(ДокументОснование) Экспорт
	
	ДанныеДляПечати = Новый Структура("Реквизиты, ТаблицаДокумента");
	
	ДополнительнаяКолонкаПечатныхФормДокументов = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если НЕ ЗначениеЗаполнено(ДополнительнаяКолонкаПечатныхФормДокументов) Тогда
		ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", ДополнительнаяКолонкаПечатныхФормДокументов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК ДокументОснование,
	|	Реквизиты.Дата КАК ДатаОснования,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации.ЦифровойИндексОбособленногоПодразделения
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|					ТОГДА Реквизиты.Организация.ЦифровойИндексОбособленногоПодразделения
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК ЦифровойИндексОбособленногоПодразделения,
	|	Реквизиты.Организация КАК Поставщик,
	|	Реквизиты.Организация.ИНН КАК ИННпоставщика,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК ОбособленноеПодразделениеПоставщика,
	|	ВЫБОР
	|		КОГДА Реквизиты.Грузоотправитель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Реквизиты.Грузоотправитель
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА Реквизиты.Контрагент.ОбособленноеПодразделение
	|				И Реквизиты.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Покупатель,
	|	Реквизиты.Контрагент.ИНН КАК ИННпокупателя,
	|	ВЫБОР
	|		КОГДА Реквизиты.Грузополучатель.ОбособленноеПодразделение
	|				И Реквизиты.Грузополучатель.ГоловнойКонтрагент = Реквизиты.Контрагент
	|				И Реквизиты.Грузополучатель.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Грузополучатель
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК ОбособленноеПодразделениеПокупателя,
	|	ВЫБОР
	|		КОГДА Реквизиты.Грузополучатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Реквизиты.Грузополучатель
	|		КОГДА Реквизиты.Контрагент.ОбособленноеПодразделение
	|				И Реквизиты.Контрагент.ГоловнойКонтрагент = Реквизиты.Контрагент
	|				И Реквизиты.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Грузополучатель,
	|	Реквизиты.ВалютаДокумента КАК Валюта,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.Представление КАК Основание,
	|	Реквизиты.ДоговорКонтрагента.Дата КАК ОснованиеДата,
	|	Реквизиты.ДоговорКонтрагента.Номер КАК ОснованиеНомер,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.БезвозмезднаяПередача)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК БезвозмезднаяПередача,
	|	НЕОПРЕДЕЛЕНО КАК Исполнитель,
	|	НЕОПРЕДЕЛЕНО КАК ОтпускПроизвел,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьНомер,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьДата,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьВыдана,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьЧерезКого,
	|	НЕОПРЕДЕЛЕНО КАК ЗаЗаказчикаНаОсновании,
	|	ИСТИНА КАК ЕстьТовары,
	|	ЛОЖЬ КАК СводныйСФКомиссияПоЗакупке,
	|	ЛОЖЬ КАК СводныйСФКомиссияПоПродаже,
	|	Реквизиты.АдресДоставки КАК АдресДоставки,
	|	Реквизиты.СведенияОТранспортировкеИГрузе КАК СведенияОТранспортировкеИГрузе,
	|	НЕОПРЕДЕЛЕНО КАК ОтветственныйЗаОформление,
	|	Реквизиты.СопроводительныеДокументы КАК СопроводительныеДокументы,
	|	Реквизиты.Перевозчик КАК Перевозчик,
	|	Реквизиты.ПеревозкаАвтотранспортом КАК ПеревозкаАвтотранспортом,
	|	Реквизиты.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Реквизиты.ВидОперации КАК ВидОперации
	|ИЗ
	|	Документ.ПередачаТоваров КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерТабЧасти,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Номенклатура КАК Товар,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА ТаблицаДокумента.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ТаблицаДокумента.Номенклатура.Артикул
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ТоварКод,
	|	ТаблицаДокумента.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК ТоварКодТНВЭД,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК КонтрагентСводныйСФ,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Код, """") КАК ЕдиницаИзмеренияКод,
	|	ЕСТЬNULL(ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Наименование, """") КАК ЕдиницаИзмеренияНаименование,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ЕСТЬNULL(ТаблицаДокумента.СчетУчета.Забалансовый, ЛОЖЬ) КАК ЭтоКомиссия,
	|	ТаблицаДокумента.Сумма КАК Сумма,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.Цена КАК Цена,
	|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.Номенклатура.КодТНВЭД КАК НоменклатураКодТНВЭД,
	|	ТаблицаДокумента.СтранаПроисхождения КАК СтранаПроисхождения
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.ПередачаТоваров.Товары КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторСтроки,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерТабЧасти КАК НомерТабЧасти,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Товар КАК Товар,
	|	ТаблицаДокумента.ТоварКод КАК ТоварКод,
	|	ТаблицаДокумента.ТоварНаименование КАК ТоварНаименование,
	|	ТаблицаДокумента.ТоварКодТНВЭД КАК ТоварКодТНВЭД,
	|	ТаблицаДокумента.КонтрагентСводныйСФ КАК КонтрагентСводныйСФ,
	|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	ТаблицаДокумента.ЕдиницаИзмеренияНаименование КАК ЕдиницаИзмеренияНаименование,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.ЭтоКомиссия КАК ЭтоКомиссия,
	|	ТаблицаДокумента.Сумма КАК Сумма,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.Цена КАК Цена,
	|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.НоменклатураКодТНВЭД КАК НоменклатураКодТНВЭД,
	|	ТаблицаДокумента.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СтранаПроисхождения = ЗНАЧЕНИЕ(Справочник.СтраныМира.РОССИЯ)
	|			ТОГДА """"
	|		ИНАЧЕ ЕСТЬNULL(СтраныМира.Наименование, """")
	|	КОНЕЦ КАК ПредставлениеСтраны,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СтранаПроисхождения = ЗНАЧЕНИЕ(Справочник.СтраныМира.РОССИЯ)
	|			ТОГДА """"
	|		ИНАЧЕ ЕСТЬNULL(СтраныМира.Код, """")
	|	КОНЕЦ КАК СтранаПроисхожденияКод
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК СтраныМира
	|		ПО ТаблицаДокумента.СтранаПроисхождения = СтраныМира.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаДокумента.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаТоваровСведенияПрослеживаемости.РНПТ.Код КАК НомерТовара,
	|	ПередачаТоваровСведенияПрослеживаемости.Количество КАК КоличествоУчетное,
	|	ПередачаТоваровСведенияПрослеживаемости.КоличествоПрослеживаемости КАК Количество,
	|	ЕСТЬNULL(КлассификаторТНВЭД.ЕдиницаИзмерения.Наименование, """") КАК ЕдиницаИзмеренияПрослеживаемостиНаименование,
	|	ЕСТЬNULL(КлассификаторТНВЭД.ЕдиницаИзмерения.Код, """") КАК ЕдиницаИзмеренияПрослеживаемостиКод,
	|	ТаблицаДокумента.Товар КАК Товар,
	|	ТаблицаДокумента.ТоварКодТНВЭД КАК ТоварКодТНВЭД,
	|	ТаблицаДокумента.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.Цена КАК Цена,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.КонтрагентСводныйСФ КАК КонтрагентСводныйСФ,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.НомерТабЧасти КАК НомерТабЧасти,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровСведенияПрослеживаемости.Сумма = 0
	|			ТОГДА ПередачаТоваровСведенияПрослеживаемости.Количество * ВЫБОР
	|					КОГДА ПередачаТоваровСведенияПрослеживаемости.Ссылка.СуммаВключаетНДС
	|						ТОГДА ВЫРАЗИТЬ((ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС) / ТаблицаДокумента.Количество КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ ТаблицаДокумента.Цена
	|				КОНЕЦ
	|		ИНАЧЕ ПередачаТоваровСведенияПрослеживаемости.Сумма
	|	КОНЕЦ КАК СтоимостьБезНалога
	|ИЗ
	|	Документ.ПередачаТоваров.СведенияПрослеживаемости КАК ПередачаТоваровСведенияПрослеживаемости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДокумента КАК ТаблицаДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
	|			ПО ТаблицаДокумента.НоменклатураКодТНВЭД = КлассификаторТНВЭД.Ссылка
	|		ПО (ТаблицаДокумента.ИдентификаторСтроки = ПередачаТоваровСведенияПрослеживаемости.ИдентификаторСтроки)
	|			И ПередачаТоваровСведенияПрослеживаемости.Ссылка = ТаблицаДокумента.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.ШтрихкодУпаковки КАК Штрихкод
	|ИЗ
	|	Документ.ПередачаТоваров.ШтрихкодыУпаковок КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтгрузкаТоваровИСМП КАК ДокументыПрямогоОбмена
	|		ПО ТаблицаДокумента.Ссылка = ДокументыПрямогоОбмена.ДокументОснование
	|			И (НЕ ДокументыПрямогоОбмена.ПометкаУдаления)
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &ДокументОснование
	|	И ДокументыПрямогоОбмена.Ссылка ЕСТЬ NULL";
	
	Результат = Запрос.ВыполнитьПакет();
	
	Если Результат[0].Пустой() ИЛИ Результат[2].Пустой() Тогда
		Возврат ДанныеДляПечати;
	КонецЕсли;
	
	ТаблицаРеквизиты = Результат[0].Выгрузить();
	ТаблицаДокумента = Результат[2].Выгрузить();
	СведенияОПрослеживаемости = Результат[3].Выгрузить();
	ШтрихкодыУпаковок = Результат[4].Выгрузить();
	
	Реквизиты = ТаблицаРеквизиты[0];
	
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(ДокументОснование);
	
	ДатаНач = Новый Граница(Новый МоментВремени(Реквизиты.ДатаОснования, ДокументОснование), ВидГраницы.Включая);
	ДатаКон = ДатаНач;
	
	ТаблицаСуммСписанияПоДокументам = БухгалтерскийУчетПереопределяемый.ПолучитьСуммуСписанияАктивов(МассивОбъектов, 
		ДатаНач, ДатаКон);
	СтруктураПоиска = Новый Структура("Регистратор, Номенклатура");
	СтруктураПоиска.Регистратор = ДокументОснование;
	
	ТаблицаДокумента.Колонки.Добавить("НомерГТД",               Новый ОписаниеТипов("СправочникСсылка.НомераГТД"));
	ТаблицаДокумента.Колонки.Добавить("ПредставлениеГТД",       ОбщегоНазначения.ОписаниеТипаСтрока(10));
	ТаблицаДокумента.Колонки.Добавить("РегистрационныйНомерТД", ОбщегоНазначения.ОписаниеТипаСтрока(23));
	
	ТаблицаДокумента.Колонки.Добавить("Акциз", ОбщегоНазначения.ОписаниеТипаСтрока(10));
	
	ТаблицаДокумента.Колонки.Добавить("Всего",       ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаДокумента.Колонки.Добавить("СуммаБезНДС", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	
	ЭтоБезвозмезднаяПередача = Реквизиты.ВидОперации = Перечисления.ВидыОперацийПередачаТоваров.БезвозмезднаяПередача;
	
	// Заполним суммы документа из проводок
	Если НЕ ЭтоБезвозмезднаяПередача Тогда
		СписокТоваров = ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаДокумента, "Товар", Истина);
		Для каждого Товар Из СписокТоваров Цикл
			СтруктураПоиска.Номенклатура = Товар;
			
			СтрокиСуммСписания = ТаблицаСуммСписанияПоДокументам.НайтиСтроки(СтруктураПоиска);
			Если СтрокиСуммСписания.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаСуммСписания = СтрокиСуммСписания[0];
			
			СтрокиДокумента = ТаблицаДокумента.НайтиСтроки(Новый Структура("Товар", Товар));
			МассивСумм      = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(
				СтрокаСуммСписания.Сумма, 
				ОбщегоНазначения.ВыгрузитьКолонку(СтрокиДокумента, "Количество"));
				
			Если МассивСумм = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Для Индекс = 0 По СтрокиДокумента.Количество()-1 Цикл
				СтрокиДокумента[Индекс].Сумма = МассивСумм[Индекс];
			КонецЦикла; 
		КонецЦикла; 
	КонецЕсли; 
	
	Для каждого СтрокаДокумента Из ТаблицаДокумента Цикл
		Если ЭтоБезвозмезднаяПередача Тогда
			Если Реквизиты.СуммаВключаетНДС Тогда
				СтрокаДокумента.Всего       = СтрокаДокумента.Сумма;
				СтрокаДокумента.СуммаБезНДС = СтрокаДокумента.Сумма- СтрокаДокумента.СуммаНДС;
			Иначе	
				СтрокаДокумента.Всего       = СтрокаДокумента.Сумма + СтрокаДокумента.СуммаНДС;
				СтрокаДокумента.СуммаБезНДС = СтрокаДокумента.Сумма;
			КонецЕсли;
		Иначе
			Если СтрокаДокумента.Количество <> 0 Тогда
				СтрокаДокумента.Цена = СтрокаДокумента.Сумма/СтрокаДокумента.Количество;
			Иначе
				СтрокаДокумента.Цена = 0;
			КонецЕсли; 
			
			СтрокаДокумента.СуммаБезНДС = СтрокаДокумента.Сумма;
			СтрокаДокумента.СтавкаНДС   = Перечисления.СтавкиНДС.БезНДС;
			СтрокаДокумента.СуммаНДС    = 0;
			СтрокаДокумента.Всего       = СтрокаДокумента.Сумма;
			
			СтрокиПрослеживаемости = СведенияОПрослеживаемости.НайтиСтроки(Новый Структура("ИдентификаторСтроки", СтрокаДокумента.ИдентификаторСтроки));
			КоличествоПоПрослеживаемости = 0;
			СуммаПоПрослеживаемости = 0;
			Для Каждого СтрокаПрослеживаемости Из СтрокиПрослеживаемости Цикл
				КоличествоПоПрослеживаемости = КоличествоПоПрослеживаемости + СтрокаПрослеживаемости.Количество;
				СтрокаПрослеживаемости.Цена = СтрокаДокумента.Цена;
				СтрокаПрослеживаемости.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
				
				Если КоличествоПоПрослеживаемости = СтрокаДокумента.Количество Тогда
					СтрокаПрослеживаемости.СтоимостьБезНалога = СтрокаДокумента.СуммаБезНДС - СуммаПоПрослеживаемости;
				Иначе
					СтрокаПрослеживаемости.СтоимостьБезНалога = СтрокаДокумента.СуммаБезНДС /
					?(СтрокаДокумента.Количество = 0, 1, СтрокаДокумента.Количество) * СтрокаПрослеживаемости.Количество;
					СуммаПоПрослеживаемости = СуммаПоПрослеживаемости +СтрокаПрослеживаемости.СтоимостьБезНалога;
				КонецЕсли;
			
			КонецЦикла;
		КонецЕсли;
		
		СтрокаДокумента.Акциз     = НСтр("ru = 'без акциза'");
	КонецЦикла;
	
	ДанныеДляПечати.Вставить("Реквизиты",        ТаблицаРеквизиты);
	ДанныеДляПечати.Вставить("ТаблицаДокумента", ТаблицаДокумента);
	ДанныеДляПечати.Вставить("СведенияОПрослеживаемости", СведенияОПрослеживаемости);
	//ГосИС
	ДанныеДляПечати.Вставить("ШтрихкодыУпаковок", ЭлектронноеВзаимодействиеИСМП.ЧастичноеСодержимое(ШтрихкодыУпаковок));
	//Конец ГосИС
	
	Возврат ДанныеДляПечати;
	
КонецФункции

// Возвращает текст запроса для отбора документов к печати УПД по релевантной форме.
// Добавлена во все документы, для которых доступна печать УПД.
// Параметры:
// ВерсияПостановленияНДС1137 - см.УчетНДСПереопределяемый.ВерсияПостановленияНДС1137()
// ЕстьПрослеживаемыеТовары - Булево - признак того, что в документе есть прослеживаемый товар.
//
// Возвращаемое значение: 
// ТекстЗапроса - строка с необходимым текстом запроса.
//
Функция ТекстЗапросаПечатьУниверсальныхПередаточныхДокументов(ВерсияПостановленияНДС1137 = Неопределено, ЕстьПрослеживаемыеТовары = Ложь) Экспорт
	
	ОтбиратьВсеСФ1137 = Ложь;
	Если ВерсияПостановленияНДС1137 = Неопределено Тогда
		ОтбиратьВсеСФ1137 = Истина;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Документ.СчетФактураВыданный.ПустаяСсылка) КАК СчетФактура,
	|	ПередачаТоваров.Дата КАК Дата,
	|	ПередачаТоваров.Номер КАК Номер,
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК Руководитель,
	|	НЕОПРЕДЕЛЕНО КАК ГлавныйБухгалтер,
	|	ИСТИНА КАК СчетФактураБезНДС,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ИСТИНА КАК УдалитьПрефиксыИзНомера,
	|	ИСТИНА КАК ЭтоСчетФактураВыданный,
	|	ИСТИНА КАК ВыводитьСуммуБезНДС,
	|	ПередачаТоваров.Ссылка КАК ДокументОснование,
	|	1 КАК НомерСтроки,
	|	ПередачаТоваров.Контрагент КАК Контрагент,
	|	ПередачаТоваров.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ГосКонтракты.Код, """") КАК ИдентификаторГосКонтракта,
	|	"""" КАК КППСчетаФактуры,
	|	"""" КАК КПППродавца,
	|	ПередачаТоваров.Дата КАК ДатаСведений
	|ИЗ
	|	Документ.ПередачаТоваров КАК ПередачаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			ПередачаТоваровСведенияПрослеживаемости.Ссылка КАК Ссылка,
	|			ИСТИНА КАК ЕстьПрослеживаемыеТовары
	|		ИЗ
	|			Документ.ПередачаТоваров.СведенияПрослеживаемости КАК ПередачаТоваровСведенияПрослеживаемости
	|		ГДЕ
	|			ПередачаТоваровСведенияПрослеживаемости.Ссылка В(&МассивОбъектов)) КАК ПрослеживаемыеТовары
	|		ПО ПередачаТоваров.Ссылка = ПрослеживаемыеТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГосКонтракты КАК ГосКонтракты
	|			ПО ДоговорыКонтрагентов.ГосударственныйКонтракт = ГосКонтракты.Ссылка
	|		ПО ПередачаТоваров.ДоговорКонтрагента = ДоговорыКонтрагентов.Ссылка
	|ГДЕ
	|	ПередачаТоваров.Ссылка В(&МассивОбъектов)
	|	И ПередачаТоваров.Дата > &УсловиеПоДате
	|	И &ЕстьПрослеживаемыеТовары";
	
	Если ОтбиратьВсеСФ1137 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			">= &НачалоПримененияПостановления1137");
	ИначеЕсли ВерсияПостановленияНДС1137 = 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			"< &НачалоПримененияПостановления1137");
	ИначеЕсли ВерсияПостановленияНДС1137 >= 1 И ВерсияПостановленияНДС1137 <= 3 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			"МЕЖДУ &НачалоПримененияПостановления1137 И ДАТАВРЕМЯ(2017,09,30,23,59,59)");
	ИначеЕсли ВерсияПостановленияНДС1137 = 4 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			"МЕЖДУ ДАТАВРЕМЯ(2017,10,1) И ДАТАВРЕМЯ(2021,06,30,23,59,59)");
	ИначеЕсли ВерсияПостановленияНДС1137 = 5 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			"МЕЖДУ ДАТАВРЕМЯ(2021,7,1) И ДАТАВРЕМЯ(2023,09,30,23,59,59)");
	ИначеЕсли ВерсияПостановленияНДС1137 = 6 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			">= ДАТАВРЕМЯ(2023,10,1)");
	КонецЕсли;
	
	Если ОтбиратьВсеСФ1137 Тогда
		// Не накладываем отбор.
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЕстьПрослеживаемыеТовары", "ИСТИНА");
	ИначеЕсли ЕстьПрослеживаемыеТовары Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЕстьПрослеживаемыеТовары", "ЕСТЬNULL(ПрослеживаемыеТовары.ЕстьПрослеживаемыеТовары, ЛОЖЬ) = ИСТИНА");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЕстьПрослеживаемыеТовары", "ЕСТЬNULL(ПрослеживаемыеТовары.ЕстьПрослеживаемыеТовары, ЛОЖЬ) = ЛОЖЬ");
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаДанныеДляПечатиСчетовФактур(НомераТаблиц) Экспорт

	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_РублевыеСуммыДокументовВВалюте", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаДокумента",  НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СведенияОПрослеживаемости",  НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК ДатаОснования,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации.ЦифровойИндексОбособленногоПодразделения
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|					ТОГДА Реквизиты.Организация.ЦифровойИндексОбособленногоПодразделения
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК ЦифровойИндексОбособленногоПодразделения,
	|	ВЫБОР
	|		КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК Поставщик,
	|	ВЫБОР
	|		КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Организация.ГоловнаяОрганизация.ИНН
	|		ИНАЧЕ Реквизиты.Организация.ИНН
	|	КОНЕЦ КАК ИННпоставщика,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК ОбособленноеПодразделениеПоставщика,
	|	ВЫБОР
	|		КОГДА Реквизиты.Грузоотправитель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Реквизиты.Грузоотправитель
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации
	|		КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Организация
	|		ИНАЧЕ ""он же""
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА Реквизиты.Контрагент.ОбособленноеПодразделение
	|				И Реквизиты.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Покупатель,
	|	Реквизиты.Контрагент.ИНН КАК ИННпокупателя,
	|	ВЫБОР
	|		КОГДА Реквизиты.Грузополучатель.ОбособленноеПодразделение
	|				И Реквизиты.Грузополучатель.ГоловнойКонтрагент = Реквизиты.Контрагент
	|				И Реквизиты.Грузополучатель.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Грузополучатель
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК ОбособленноеПодразделениеПокупателя,
	|	ВЫБОР
	|		КОГДА Реквизиты.Грузополучатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Реквизиты.Грузополучатель
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Грузополучатель,
	|	Реквизиты.ВалютаДокумента КАК Валюта,
	|	Реквизиты.ВалютаДокумента КАК ВалютаВзаиморасчетов,
	|	ЛОЖЬ КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.Представление КАК Основание,
	|	Реквизиты.ДоговорКонтрагента.Дата КАК ОснованиеДата,
	|	Реквизиты.ДоговорКонтрагента.Номер КАК ОснованиеНомер,
	|	ЛОЖЬ КАК НДСИсчисляетсяНалоговымАгентом,
	|	"""" КАК Исполнитель,
	|	"""" КАК ИсполнительНаОсновании,
	|	"""" КАК ОтпускПроизвел,
	|	"""" КАК ДоверенностьНомер,
	|	"""" КАК ДоверенностьДата,
	|	"""" КАК ДоверенностьВыдана,
	|	"""" КАК ДоверенностьЧерезКого,
	|	"""" КАК ЗаЗаказчикаНаОсновании,
	|	ИСТИНА КАК ЕстьТовары,
	|	Реквизиты.АдресДоставки КАК АдресДоставки,
	|	Реквизиты.СведенияОТранспортировкеИГрузе КАК СведенияОТранспортировкеИГрузе,
	|	"""" КАК ОтветственныйЗаОформление,
	|	Реквизиты.СопроводительныеДокументы КАК СопроводительныеДокументы,
	|	Реквизиты.Перевозчик КАК Перевозчик,
	|	Реквизиты.ПеревозкаАвтотранспортом КАК ПеревозкаАвтотранспортом,
	|	ИСТИНА КАК БезвозмезднаяПередача
	|ИЗ
	|	Документ.ПередачаТоваров КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОснование
	|	И Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.БезвозмезднаяПередача)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор = &ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтрокиДокумента,
	|	ТабличнаяЧастьДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерТабЧасти,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Товар,
	|	ТаблицаТовары.Номенклатура.Код КАК ТоварКод,
	|	ТаблицаТовары.Номенклатура.Артикул КАК ТоварАртикул,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ТаблицаТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаТовары.СтранаПроисхождения КАК ПредставлениеСтраны,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.НомерГТД.Представление КАК ПредставлениеГТД,
	|	ТаблицаТовары.НомерГТД.РегистрационныйНомер КАК РегистрационныйНомерТД,
	|	ТаблицаТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	ТаблицаТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(ТаблицаТовары.СчетУчета.Забалансовый, ЛОЖЬ) КАК ЭтоКомиссия,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0) КАК ВсегоРуб,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0) КАК НДСРуб,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0) КАК СуммаБезНДСРуб,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК КонтрагентСводныйСФ,
	|	НЕОПРЕДЕЛЕНО КАК ПериодичностьУслуги,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК ТоварКодТНВЭД,
	|	ТаблицаТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаТовары.Номенклатура.КодТНВЭД КАК НоменклатураКодТНВЭД,
	|	0 КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	Документ.ПередачаТоваров.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ТаблицаТовары.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
	|			И (ТаблицаТовары.Ссылка.ВалютаДокумента <> &ВалютаРеглУчета)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаТоваровСведенияПрослеживаемости.РНПТ.Код КАК НомерТовара,
	|	ПередачаТоваровСведенияПрослеживаемости.Количество КАК КоличествоУчетное,
	|	ПередачаТоваровСведенияПрослеживаемости.КоличествоПрослеживаемости КАК Количество,
	|	ЕСТЬNULL(КлассификаторТНВЭД.ЕдиницаИзмерения.Наименование, ""шт"") КАК ЕдиницаИзмеренияПрослеживаемостиНаименование,
	|	ЕСТЬNULL(КлассификаторТНВЭД.ЕдиницаИзмерения.Код, ""796"") КАК ЕдиницаИзмеренияПрослеживаемостиКод,
	|	ТаблицаДокумента.Товар КАК Товар,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТоварКодТНВЭД = ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
	|			ТОГДА ""--""
	|		ИНАЧЕ ТаблицаДокумента.ТоварКодТНВЭД
	|	КОНЕЦ КАК ТоварКодТНВЭД,
	|	ТаблицаДокумента.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаДокумента.НомерГТД КАК НомерГТД,
	|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаВключаетНДС
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаДокумента.Количество = 0
	|						ТОГДА 0
	|					КОГДА ТаблицаДокумента.СуммаНДС = 0
	|						ТОГДА ТаблицаДокумента.Цена
	|					ИНАЧЕ ВЫРАЗИТЬ((ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС) / ТаблицаДокумента.Количество КАК ЧИСЛО(15, 2))
	|				КОНЕЦ
	|		ИНАЧЕ ТаблицаДокумента.Цена
	|	КОНЕЦ КАК Цена,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.КонтрагентСводныйСФ КАК КонтрагентСводныйСФ,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.НомерТабЧасти КАК НомерТабЧасти,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровСведенияПрослеживаемости.Сумма = 0
	|			ТОГДА ПередачаТоваровСведенияПрослеживаемости.Количество * ВЫБОР
	|					КОГДА ТаблицаДокумента.СуммаВключаетНДС
	|						ТОГДА ВЫРАЗИТЬ((ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС) / ТаблицаДокумента.Количество КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ ТаблицаДокумента.Цена
	|				КОНЕЦ
	|		ИНАЧЕ ПередачаТоваровСведенияПрослеживаемости.Сумма
	|	КОНЕЦ КАК СтоимостьБезНалога
	|ИЗ
	|	Документ.ПередачаТоваров.СведенияПрослеживаемости КАК ПередачаТоваровСведенияПрослеживаемости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДокумента КАК ТаблицаДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
	|			ПО ТаблицаДокумента.НоменклатураКодТНВЭД = КлассификаторТНВЭД.Ссылка
	|		ПО (ТаблицаДокумента.ИдентификаторСтроки = ПередачаТоваровСведенияПрослеживаемости.ИдентификаторСтроки)
	|			И ПередачаТоваровСведенияПрослеживаемости.Ссылка = ТаблицаДокумента.Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М15") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "М15", "М-15 (Накладная)",
			ПечатьМ15(МассивОбъектов, ОбъектыПечати, ПараметрыПечати), , "ОбщийМакет.ПФ_MXL_М15");
	КонецЕсли;

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ12") Тогда
		ТаблицаСведенийТОРГ12 = ПолучитьТаблицуСведенийТОРГ12(МассивОбъектов);
		ПараметрыПечати.Вставить("ИмяПараметровПечати", "ПАРАМЕТРЫ_ПЕЧАТИ_ПередачаТоваров_ТОРГ12");
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ТОРГ12", "ТОРГ-12 (Товарная накладная)", 
			ПечатьТорговыхДокументов.ПечатьТОРГ12(ТаблицаСведенийТОРГ12, ОбъектыПечати, ПараметрыПечати),,"ОбщийМакет.ПФ_MXL_ТОРГ12");
		ПараметрыВывода.Вставить("ФормироватьЭД", Истина);
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М11") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "М11", "М11 (Требование-накладная)",
			ПечатьМ11(МассивОбъектов, ОбъектыПечати), , "ОбщийМакет.ПФ_MXL_М11");
	КонецЕсли;		
			
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетФактураКомплект") Тогда
		УчетНДС.ПечатьКомплектаСчетовФактур(
			КоллекцияПечатныхФорм, МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода);
		ПараметрыВывода.Вставить("НеПереопределятьИмяФайла");
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов,
		КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);

КонецПроцедуры

// Возвращаяет массив документов, для которых выписка счетов-фактур не требуется
//
Функция СчетаФактурыНеТребуются(МассивДокументов) Экспорт
	
	ДокументыСчетФактураНеТребуются = Новый Массив;
	
	Если НЕ ЗначениеЗаполнено(МассивДокументов) Тогда
		Возврат ДокументыСчетФактураНеТребуются
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПередачаТоваров.Ссылка КАК Ссылка,
	|	ИСТИНА КАК ЕстьНДС
	|ПОМЕСТИТЬ ВТ_ДокументыСНДС
	|ИЗ
	|	Документ.ПередачаТоваров.Товары КАК ПередачаТоваров
	|ГДЕ
	|	ПередачаТоваров.Ссылка В(&МассивДокументов)
	|	И (ПередачаТоваров.СуммаНДС > 0
	|			ИЛИ ПередачаТоваров.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаТоваров.Ссылка КАК Ссылка,
	|	ПередачаТоваров.Дата КАК Дата,
	|	ПередачаТоваров.Организация КАК Организация,
	|	ЕСТЬNULL(ВТ_ДокументыСНДС.ЕстьНДС, ЛОЖЬ) КАК ЕстьНДС,
	|	ПередачаТоваров.ВидОперации КАК ВидОперации
	|ИЗ
	|	Документ.ПередачаТоваров КАК ПередачаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДокументыСНДС КАК ВТ_ДокументыСНДС
	|		ПО (ВТ_ДокументыСНДС.Ссылка = ПередачаТоваров.Ссылка)
	|ГДЕ
	|	ПередачаТоваров.Ссылка В(&МассивДокументов)";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаПередачи = Результат[1].Выбрать();
	Пока ВыборкаПередачи.Следующий() Цикл
		Если ВыборкаПередачи.ВидОперации = Перечисления.ВидыОперацийПередачаТоваров.БезвозмезднаяПередача Тогда
			Если НЕ ВыборкаПередачи.ЕстьНДС
				И (НЕ УчетнаяПолитика.ПлательщикНДС(ВыборкаПередачи.Организация, ВыборкаПередачи.Дата) 
				ИЛИ УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(ВыборкаПередачи.Дата) >= 3 
				И НЕ УчетнаяПолитика.ПрименяетсяОсвобождениеОтУплатыНДС(
					ВыборкаПередачи.Организация, ВыборкаПередачи.Дата)) Тогда
				ДокументыСчетФактураНеТребуются.Добавить(ВыборкаПередачи.Ссылка);
			КонецЕсли;
		Иначе
			ДокументыСчетФактураНеТребуются.Добавить(ВыборкаПередачи.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДокументыСчетФактураНеТребуются;
	
КонецФункции

// Возвращаяет массив документов с прослеживаемыми товарами.
//
// Параметры:
// МассивДокументов - массив проверяемых документов.
//
// Возвращаемое значение:
// ДокументыСПрослеживаемымиТоварами - массив документов с прослеживаемыми товарами.
//
Функция ДокументыСПрослеживаемымиТоварами(МассивДокументов) Экспорт
	
	ДокументыСПрослеживаемымиТоварами = Новый Массив;
	
	Если НЕ ЗначениеЗаполнено(МассивДокументов) Тогда
		Возврат ДокументыСПрослеживаемымиТоварами
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПередачаТоваровТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПередачаТоваров.Товары КАК ПередачаТоваровТовары
	|ГДЕ
	|	ПередачаТоваровТовары.Ссылка В(&МассивДокументов)
	|	И ПередачаТоваровТовары.ПрослеживаемыйТовар = ИСТИНА";
	
	ДокументыСПрослеживаемымиТоварами = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат ДокументыСПрослеживаемымиТоварами;
	
КонецФункции

#область СчетаУчета

Процедура УстановитьПравилаЗаполненияСчетовУчета(Правила) Экспорт

	// Шапка
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "", "СчетЗатрат", "СчетЗатрат");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "ПодразделениеЗатрат", "ПодразделениеЗатрат");

	// Табличная часть Товары
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары",           "СчетУчета",    "Запасы");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "ТоварыВЦенахПродажи");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары",           "СчетУчета",    "ЗапасыВЦенахПродажи");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ТоварыВЦенахПродажи");
	
	// Данные заполнения
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Дата");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Организация");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Склад");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Подразделение", "ПодразделениеОрганизации");

КонецПроцедуры

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

Функция ПолучитьСоответствиеВидовОперацийФормам() Экспорт

	ФормыДокумента = Новый Соответствие;
	ФормыДокумента.Вставить(Перечисления.ВидыОперацийПередачаТоваров.ВПереработку, "ФормаДокументаОбщая");
	ФормыДокумента.Вставить(Перечисления.ВидыОперацийПередачаТоваров.ИзПереработки, "ФормаДокументаОбщая");
	ФормыДокумента.Вставить(Перечисления.ВидыОперацийПередачаТоваров.ПередачаТоваровКомитенту, "ФормаДокументаОбщая");
	ФормыДокумента.Вставить(Перечисления.ВидыОперацийПередачаТоваров.БезвозмезднаяПередача,
		 "ФормаДокументаБезвозмезднаяПередача");
	
	Возврат ФормыДокумента;

КонецФункции

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Требование-накладная (М-11)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "М11";
	КомандаПечати.Представление = НСтр("ru = 'Требование-накладная (М-11)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСпискаБезвозмезднаяПередача,ФормаДокументаБезвозмезднаяПередача";
	КомандаПечати.Порядок = 10;

	// Накладная на отпуск материалов на сторону (М-15)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "М15";
	КомандаПечати.Представление = НСтр("ru = 'Накладная на отпуск материалов на сторону (М-15)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокументаОбщая";	
	КомандаПечати.Порядок = 20;

	// Транспортная накладная
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьТранспортнойНакладной";
	КомандаПечати.Идентификатор = "ТранспортнаяНакладная";
	КомандаПечати.Представление = НСтр("ru = 'Транспортная накладная'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокументаОбщая,ФормаСпискаБезвозмезднаяПередача,ФормаДокументаБезвозмезднаяПередача";	
	КомандаПечати.Порядок = 30;

	// Товарно-транспортная накладная (1-Т)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьТТН";
	КомандаПечати.Идентификатор = "ТТН";
	КомандаПечати.Представление = НСтр("ru = 'Товарно-транспортная накладная (1-Т)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокументаОбщая,ФормаСпискаБезвозмезднаяПередача,ФормаДокументаБезвозмезднаяПередача";	
	КомандаПечати.Порядок = 40;

	Если ПравоДоступа("Чтение", Метаданные.Документы.СчетФактураВыданный) Тогда
		// Счет-фактура
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "СчетФактура";
		КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
		КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиСчетовФактур";
		КомандаПечати.ФункциональныеОпции = "ИспользуетсяОСНО,ИспользуетсяНДФЛИП";
		КомандаПечати.СписокФорм    = "ФормаСпискаБезвозмезднаяПередача,ФормаДокументаБезвозмезднаяПередача";
		КомандаПечати.ДополнительныеПараметры.Вставить("ИдентификаторВКомплекте","СчетФактураКомплект");
		КомандаПечати.Порядок = 50;
		УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ЭтоУниверсальныйДокумент", Ложь);
	КонецЕсли;

	// Товарная накладная (ТОРГ-12)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТОРГ12";
	КомандаПечати.Представление = НСтр("ru = 'Товарная накладная (ТОРГ-12)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаСпискаБезвозмезднаяПередача,ФормаДокументаОбщая,ФормаДокументаБезвозмезднаяПередача";
	КомандаПечати.Порядок = 60;
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ЭтоУниверсальныйДокумент", Ложь);

	// Универсальный передаточный документ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "УниверсальныйПередаточныйДокумент";
	КомандаПечати.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД)'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиУниверсальныхПередаточныхДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаСпискаБезвозмезднаяПередача,ФормаДокументаОбщая,ФормаДокументаБезвозмезднаяПередача";
	КомандаПечати.Порядок = 70;

	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Передача товаров""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаСпискаБезвозмезднаяПередача";
	КомандаПечати.Порядок       = 60;
	КомандаПечати.Порядок = 80;
	
КонецПроцедуры

Функция ОпределитьВидОперацииПоДокументуОснованию(Основание) Экспорт

	ВидОперации = Перечисления.ВидыОперацийПередачаТоваров.ВПереработку;
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ОтчетКомитентуОПродажах") Тогда
		ВидОперации = Перечисления.ВидыОперацийПередачаТоваров.ПередачаТоваровКомитенту;
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		ВидОперации = Перечисления.ВидыОперацийПередачаТоваров.БезвозмезднаяПередача;
	КонецЕсли;
	
	Возврат ВидОперации;

КонецФункции

// Заполняет счета учета номенклатуры в строке табличной части документа
//
// Параметры:
//  ДанныеОбъекта         - структура данных объекта, используемых при заполнении счетов учета (вид операции,
//                          вид договора контрагента, признак комиссионной торговли и т.п.)
//  СтрокаТабличнойЧасти  - строка табличной части документа
//  ИмяТабличнойЧасти     - имя табличной части документа
//  СведенияОНоменклатуре - структура сведений о номенклатуре, либо стуктура счетов учета
//
Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(
	ДанныеОбъекта, СтрокаТабличнойЧасти, ИмяТабличнойЧасти, СведенияОНоменклатуре) Экспорт

	Если СведенияОНоменклатуре = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СведенияОНоменклатуре.Свойство("СчетаУчета") Тогда
		// СведенияОНоменклатуре - структура сведений номенклатуры
		СчетаУчета = СведенияОНоменклатуре.СчетаУчета;
	ИначеЕсли СведенияОНоменклатуре.Свойство("СчетУчета") Тогда
		// СведенияОНоменклатуре - структура счетов учета номенклатуры
		СчетаУчета = СведенияОНоменклатуре;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ИмяТабличнойЧасти = "Товары" Тогда
		
		Если ДанныеОбъекта.ВидОперации = Перечисления.ВидыОперацийПередачаТоваров.ПередачаТоваровКомитенту
			И НЕ СчетаУчета.СчетУчетаЯвляетсяЗабалансовым Тогда
			
			СтрокаТабличнойЧасти.СчетУчета = ПланыСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение; // 002
			
		Иначе
			
			Если ЗначениеЗаполнено(СчетаУчета.СчетУчета) Тогда
				СтрокаТабличнойЧасти.СчетУчета = СчетаУчета.СчетУчета;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ДанныеОбъекта.ВидОперации = Перечисления.ВидыОперацийПередачаТоваров.ВПереработку Тогда
			
			Если ЗначениеЗаполнено(СчетаУчета.СчетПередачи) Тогда
				СтрокаТабличнойЧасти.СчетПередачи = БухгалтерскийУчет.СчетУчетаМатериалыПереданныеВПереработку(
					СчетаУчета.СчетПередачи);
			КонецЕсли;
			
		ИначеЕсли ДанныеОбъекта.ВидОперации = Перечисления.ВидыОперацийПередачаТоваров.ИзПереработки Тогда
			
			Если ЗначениеЗаполнено(СчетаУчета.СчетУчета) Тогда
				СтрокаТабличнойЧасти.СчетПередачи = СчетаУчета.СчетУчета;
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ИмяТабличнойЧасти = "ВозвратнаяТара" Тогда
		
		Если УчетнаяПолитика.УчитыватьТаруЗаБалансом(ДанныеОбъекта.Организация, ДанныеОбъекта.Дата) Тогда
			СтрокаТабличнойЧасти.СчетУчета = ПланыСчетов.Хозрасчетный.ВозвратнаяТараНаСкладе;
		ИначеЕсли ЗначениеЗаполнено(СчетаУчета.СчетУчета) Тогда
			СтрокаТабличнойЧасти.СчетУчета = СчетаУчета.СчетУчета;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

// ПОДГОТОВКА ПАРАМЕТРОВ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ПередачаТоваровТовары.СуммаНДС) КАК СуммаНДС,
	|	ПередачаТоваровТовары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ПроверкаНаличияНДС
	|ИЗ
	|	Документ.ПередачаТоваров.Товары КАК ПередачаТоваровТовары
	|ГДЕ
	|	ПередачаТоваровТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПередачаТоваровТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.ВидОперации КАК ВидОперации,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.Склад.ТипСклада КАК ТипСклада,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.БезвозмезднаяПередача)
	|			ТОГДА Реквизиты.ВалютаДокумента
	|		ИНАЧЕ Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК ВалютаДокумента,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.БезвозмезднаяПередача)
	|			ТОГДА Реквизиты.ВалютаДокумента
	|		ИНАЧЕ Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.СчетУчетаРасчетовПоТаре КАК СчетУчетаРасчетовПоТаре,
	|	Реквизиты.СчетЗатрат КАК СчетЗатрат,
	|	Реквизиты.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
	|	Реквизиты.Субконто1 КАК СчетЗатратСубконто1,
	|	Реквизиты.Субконто2 КАК СчетЗатратСубконто2,
	|	Реквизиты.Субконто3 КАК СчетЗатратСубконто3,
	|	Реквизиты.СчетУчетаНДС КАК СчетУчетаНДС,
	|	Реквизиты.СубконтоНДС1 КАК СубконтоНДС1,
	|	Реквизиты.СубконтоНДС2 КАК СубконтоНДС2,
	|	Реквизиты.СубконтоНДС3 КАК СубконтоНДС3,
	|	Реквизиты.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Реквизиты.КодРаздел7ДекларацииНДС КАК КодРаздел7ДекларацииНДС
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.ПередачаТоваров КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА ПроверкаНаличияНДС.СуммаНДС > 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьНДС,
	|	Реквизиты.ВидОперации КАК ВидОперации
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПроверкаНаличияНДС КАК ПроверкаНаличияНДС
	|		ПО Реквизиты.Ссылка = ПроверкаНаличияНДС.Ссылка";
	Результат = Запрос.Выполнить();
	
	Реквизиты = ОбщегоНазначенияБПВызовСервера.ПолучитьСтруктуруИзРезультатаЗапроса(Результат);
	Реквизиты.Вставить("ВедетсяУчетПрослеживаемыхТоваров", ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров")
		И ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(Реквизиты.Период));
		
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	Если Реквизиты.ВалютаВзаиморасчетов = ВалютаРеглУчета Тогда
		КоэффициентРуб = 1;
	Иначе
		СтруктураКурсаВзаиморасчетов = РаботаСКурсамиВалют.ПолучитьКурсВалюты(
			Реквизиты.ВалютаВзаиморасчетов, Реквизиты.Период);
		КоэффициентРуб = СтруктураКурсаВзаиморасчетов.Курс / СтруктураКурсаВзаиморасчетов.Кратность;
	КонецЕсли;
	Если Реквизиты.ВалютаВзаиморасчетов = Реквизиты.ВалютаДокумента Тогда
		КоэффициентВзаиморасчетов = 1;
	Иначе
		СтруктураКурсаДокумента = РаботаСКурсамиВалют.ПолучитьКурсВалюты(
			Реквизиты.ВалютаДокумента, Реквизиты.Период);
		КоэффициентВзаиморасчетов = (СтруктураКурсаДокумента.Курс / СтруктураКурсаДокумента.Кратность) / КоэффициентРуб;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("КоэффициентВзаиморасчетов",                     КоэффициентВзаиморасчетов);
	Запрос.УстановитьПараметр("КоэффициентРуб",                                КоэффициентРуб);
	Запрос.УстановитьПараметр("СинонимТовары",                                 НСтр("ru = 'Товары'"));
	Запрос.УстановитьПараметр("СинонимТара",	                               НСтр("ru = 'Возвратная тара'"));
	Запрос.УстановитьПараметр("СодержаниеПроводкиПередачаТоваровВПереработку", НСтр("ru = 'Передача материалов для переработки на сторону'"));
	Запрос.УстановитьПараметр("СодержаниеПроводкиПередачаТоваровКомитенту",    НСтр("ru = 'Передача товаров комитенту'"));
	Запрос.УстановитьПараметр("СодержаниеПроводкиПередачаТары",                НСтр("ru = 'Передача тары'"));
	Запрос.УстановитьПараметр("ИспользуетсяОтложенноеПроведение",
		ПроведениеСервер.ИспользуетсяОтложенноеПроведение(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("СодержаниеПроводкиБезвозмезднаяПередача",                НСтр("ru = 'Безвозмездная передача товаров'"));
	ПрименяетсяОсвобождениеОтУплатыНДС = УчетнаяПолитика.ПрименяетсяОсвобождениеОтУплатыНДС(
		Реквизиты.Организация, Реквизиты.Период);
	Запрос.УстановитьПараметр("ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС",
		Реквизиты.ЕстьНДС И НЕ ПрименяетсяОсвобождениеОтУплатыНДС);
	
	НомераТаблиц = Новый Структура;

	Запрос.Текст = ТекстЗапросаТаблицыДокумента(НомераТаблиц)
		+ ТекстЗапросаСписаниеТоваров(НомераТаблиц)
		+ ТекстЗапросаСписаниеТары(НомераТаблиц)
		+ ТекстЗапросаКорректировкаСтоимостиТары(НомераТаблиц)
		+ ТекстЗапросаНДС(НомераТаблиц)
		+ ТекстЗапросаНДСБезвозмезднаяПередача(НомераТаблиц)
		+ ТекстЗапросаРегистрацияОтложенныхРасчетовСКонтрагентами(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПрослеживаемыеТовары(НомераТаблиц, ПараметрыПроведения, Реквизиты);

	Результат = Запрос.ВыполнитьПакет();
	
	Для Каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Контрагент");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы <> "ФормаДокумента"
		И ВидФормы <> "ФормаОбъекта" Тогда
		Возврат;
	КонецЕсли;

	ЗначенияЗаполнения = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ЗначенияЗаполнения");
	
	ВидОперации = Неопределено; 

	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Ключ, "ВидОперации");
	КонецЕсли;

	// Если документ копируется, то вид операции получаем из копируемого документа.
	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("ЗначениеКопирования")
			И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				Параметры.ЗначениеКопирования, "ВидОперации");
		КонецЕсли;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		ВидОперации = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ЗначенияЗаполнения, "ВидОперации");
	КонецЕсли;
	
	// При вводе на основании счета на оплату и поступления товаров и услуг, 
	// открывается форма, содержащая только ТЧ Товары или только ТЧ Услуги, если
	// у документа-основания заполнена только соответствующая таблица.
	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("Основание")
			И ЗначениеЗаполнено(Параметры.Основание) Тогда
			Если ТипЗнч(Параметры.Основание) = Тип("Структура") Тогда
				Если Параметры.Основание.Свойство("ДокументОснование") Тогда
					ВидОперации = ОпределитьВидОперацииПоДокументуОснованию(Параметры.Основание.ДокументОснование);
				КонецЕсли;
			Иначе
				ВидОперации = ОпределитьВидОперацииПоДокументуОснованию(Параметры.Основание);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВидОперации) Тогда
		ДоговорКонтрагента = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ЗначенияЗаполнения, "ДоговорКонтрагента");
		Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
			ВидОперации = РаботаСДоговорамиКонтрагентовБПВызовСервера.ВидОперацииПоДоговору(
				ДоговорКонтрагента, Тип("ДокументСсылка.ПередачаТоваров"));
		КонецЕсли;
	КонецЕсли;

	СтандартнаяОбработка = Ложь;
	ФормыДокумента = ПолучитьСоответствиеВидовОперацийФормам();
	ВыбраннаяФорма = ФормыДокумента[ВидОперации];
	Если ВыбраннаяФорма = Неопределено Тогда
		ВыбраннаяФорма = "ФормаДокумента";
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоПоступлениюТовары(Объект, Поступление) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Поступление) Тогда
		Возврат;
	КонецЕсли;
	
	ПлательщикНДС = УчетнаяПолитика.ПлательщикНДС(Объект.Организация, Объект.Дата);
	ВедетсяУчетПрослеживаемыхТоваров = ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров")
		И ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(Объект.Дата);
	
	ТабличнаяЧасть = Объект.Товары;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Поступление",                      Поступление);
	Если Поступление.ВалютаДокумента <> Объект.ВалютаДокумента Тогда
		КратностьДокумента = ?(Объект.КратностьВзаиморасчетов = 0, 1, Объект.КратностьВзаиморасчетов);
		Запрос.УстановитьПараметр("КоэффициентПересчета", Поступление.КурсВзаиморасчетов / КратностьДокумента);
	Иначе
		Запрос.УстановитьПараметр("КоэффициентПересчета", 1);
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.НомерСтроки КАК НомерСтроки,
	|	ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Количество КАК Количество,
	|	ПоступлениеТоваровУслугТовары.КоличествоМест КАК КоличествоМест,
	|	ПоступлениеТоваровУслугТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ПоступлениеТоваровУслугТовары.Коэффициент КАК Коэффициент,
	|	ПоступлениеТоваровУслугТовары.Цена * &КоэффициентПересчета КАК Цена,
	|	ПоступлениеТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
	|	ПоступлениеТоваровУслугТовары.НомерГТД КАК НомерГТД,
	|	ПоступлениеТоваровУслугТовары.СтранаПроисхождения КАК СтранаПроисхождения
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка = &Поступление";
	
	ТаблицаТоваров = Запрос.Выполнить().Выгрузить();
	
	ДанныеОбъекта = Новый Структура(
		"Дата, Организация, Склад,Реализация, ТипЦен, СуммаВключаетНДС, ДокументБезНДС");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, Объект);
	ДанныеОбъекта.Реализация = Истина;
	
	Если Не ЗначениеЗаполнено(ДанныеОбъекта.ТипЦен) Тогда
		ДанныеОбъекта.Вставить("СпособЗаполненияЦены", Перечисления.СпособыЗаполненияЦен.ПоПродажнымЦенам);
	КонецЕсли;
	
	СоответствиеСведенийОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОСпискеНоменклатуры(
		ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаТоваров, "Номенклатура", Истина), ДанныеОбъекта, Ложь);
	
	Для Каждого СтрокаТоваров Из ТаблицаТоваров Цикл
		
		СтрокаТабличнойЧасти = ТабличнаяЧасть.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтрокаТоваров);
		
		Если НЕ ПлательщикНДС Тогда
			СтрокаТабличнойЧасти.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		Иначе
			СтрокаТабличнойЧасти.СтавкаНДС = ДоступнаяСтавкаНДС(СтрокаТабличнойЧасти.СтавкаНДС);
		КонецЕсли;
		
		СведенияОНоменклатуре = СоответствиеСведенийОНоменклатуре.Получить(СтрокаТоваров.Номенклатура);
		Если СведенияОНоменклатуре <> Неопределено Тогда
			СтрокаТабличнойЧасти.ПрослеживаемыйТовар    = СведенияОНоменклатуре.ПрослеживаемыйТовар
				Или СведенияОНоменклатуре.ПрослеживаемыйКомплект;
			СтрокаТабличнойЧасти.ПрослеживаемыйКомплект = СведенияОНоменклатуре.ПрослеживаемыйКомплект;
		КонецЕсли;
				
		ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти, 0);
		
		ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, Объект.СуммаВключаетНДС);
		
	КонецЦикла;
	
		
		СчетаУчетаВДокументах.ЗаполнитьСтроки(
			ТабличнаяЧасть, "Товары", Объект, Документы.ПередачаТоваров);
		
	
КонецПроцедуры

Функция ДоступнаяСтавкаНДС(СтавкаНДС) Экспорт

	Если СтавкаНДС = Перечисления.СтавкиНДС.БезНДС 
		ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС10
		ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС18
		ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС20 Тогда
		Возврат СтавкаНДС;
	КонецЕсли;

	Возврат Перечисления.СтавкиНДС.ПустаяСсылка();

КонецФункции

Функция ТекстЗапросаТаблицыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаТовары", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаТара", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ТаблицаТовары.СчетПередачи КАК СчетПередачи,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ПередачаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТара.Ссылка КАК Ссылка,
	|	ТаблицаТара.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТара.Номенклатура КАК Номенклатура,
	|	ТаблицаТара.Количество КАК Количество,
	|	ТаблицаТара.Цена КАК Цена,
	|	ТаблицаТара.Сумма КАК Сумма,
	|	ВЫРАЗИТЬ(ТаблицаТара.Сумма * &КоэффициентВзаиморасчетов КАК ЧИСЛО(15, 2)) КАК СуммаВзаиморасчетов,
	|	ВЫРАЗИТЬ((ВЫРАЗИТЬ(ТаблицаТара.Сумма * &КоэффициентВзаиморасчетов КАК ЧИСЛО(15, 2))) * &КоэффициентРуб КАК ЧИСЛО(15, 2)) КАК СуммаРуб,
	|	ТаблицаТара.СчетУчета КАК СчетУчета
	|ПОМЕСТИТЬ ТаблицаТара
	|ИЗ
	|	Документ.ПередачаТоваров.ВозвратнаяТара КАК ТаблицаТара
	|ГДЕ
	|	ТаблицаТара.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаСписаниеТоваров(НомераТаблиц)
	
	НомераТаблиц.Вставить("СписаниеТоваровРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СписаниеТоваровТаблицаТовары", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.ПередачаТоваровКомитенту)
	|			ТОГДА Реквизиты.Контрагент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Контрагент,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.ПередачаТоваровКомитенту)
	|			ТОГДА &СодержаниеПроводкиПередачаТоваровКомитенту
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.ВПереработку)
	|			ТОГДА &СодержаниеПроводкиПередачаТоваровВПереработку
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.БезвозмезднаяПередача)
	|			ТОГДА &СодержаниеПроводкиБезвозмезднаяПередача
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Содержание,
	|	Реквизиты.ВидОперации КАК ВидОперации
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Товары"" КАК ИмяСписка,
	|	&СинонимТовары КАК СинонимСписка,
	|	Реквизиты.Период КАК Период,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	Реквизиты.Склад КАК Склад,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
	|	0 КАК Себестоимость,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.БезвозмезднаяПередача)
	|			ТОГДА ВЫБОР
	|					КОГДА Реквизиты.ПодразделениеЗатрат = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|						ТОГДА Реквизиты.ПодразделениеОрганизации
	|					ИНАЧЕ Реквизиты.ПодразделениеЗатрат
	|				КОНЕЦ
	|		ИНАЧЕ Реквизиты.ПодразделениеОрганизации
	|	КОНЕЦ КАК КорПодразделение,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.ПередачаТоваровКомитенту)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.БезвозмезднаяПередача)
	|			ТОГДА Реквизиты.СчетЗатрат
	|		ИНАЧЕ ТаблицаТовары.СчетПередачи
	|	КОНЕЦ КАК КорСчетСписания,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.БезвозмезднаяПередача)
	|			ТОГДА Реквизиты.СчетЗатратСубконто1
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК КорСубконто1,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.БезвозмезднаяПередача)
	|			ТОГДА Реквизиты.СчетЗатратСубконто2
	|		ИНАЧЕ Реквизиты.ДоговорКонтрагента
	|	КОНЕЦ КАК КорСубконто2,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.БезвозмезднаяПередача)
	|			ТОГДА Реквизиты.СчетЗатратСубконто3
	|		ИНАЧЕ ТаблицаТовары.Номенклатура
	|	КОНЕЦ КАК КорСубконто3,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.БезвозмезднаяПередача)
	|			ТОГДА 1
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты)
	|	КОНЕЦ КАК ВидКорСубконто1,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.БезвозмезднаяПередача)
	|			ТОГДА 2
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры)
	|	КОНЕЦ КАК ВидКорСубконто2,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.БезвозмезднаяПередача)
	|			ТОГДА 3
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
	|	КОНЕЦ КАК ВидКорСубконто3,
	|	НЕОПРЕДЕЛЕНО КАК Комитент,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКомиссии,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетАвансовСКомитентом,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетРасчетовСКомитентом,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаРасчетовСКомитентом,
	|	0 КАК СуммаРасчетовСКомитентом
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	(Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.ВПереработку)
	|			ИЛИ Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.ПередачаТоваровКомитенту)
	|			ИЛИ Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.БезвозмезднаяПередача))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаСписаниеТары(НомераТаблиц)
	
	НомераТаблиц.Вставить("СписаниеТарыРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СписаниеТарыТаблицаТара", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	&СодержаниеПроводкиПередачаТары КАК Содержание
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ВозвратнаяТара"" КАК ИмяСписка,
	|	&СинонимТара КАК СинонимСписка,
	|	Реквизиты.Период КАК Период,
	|	ТаблицаТара.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТара.СчетУчета КАК СчетУчета,
	|	ТаблицаТара.Номенклатура КАК Номенклатура,
	|	Реквизиты.Склад КАК Склад,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
	|	ВЫБОР
	|		КОГДА &ИспользуетсяОтложенноеПроведение
	|			ТОГДА ТаблицаТара.СуммаРуб
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Себестоимость,
	|	ЛОЖЬ КАК СебестоимостьУказанаВДокументе,
	|	ТаблицаТара.Количество КАК Количество,
	|	ТаблицаТара.СуммаРуб КАК СуммаРуб,
	|	ТаблицаТара.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	Реквизиты.ПодразделениеОрганизации КАК КорПодразделение,
	|	Реквизиты.СчетУчетаРасчетовПоТаре КАК КорСчетСписания,
	|	Реквизиты.Контрагент КАК КорСубконто1,
	|	Реквизиты.ДоговорКонтрагента КАК КорСубконто2,
	|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты) КАК ВидКорСубконто1,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры) КАК ВидКорСубконто2,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконто3,
	|	НЕОПРЕДЕЛЕНО КАК Комитент,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКомиссии,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетАвансовСКомитентом,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетРасчетовСКомитентом,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаРасчетовСКомитентом,
	|	0 КАК СуммаРасчетовСКомитентом,
	|	НЕОПРЕДЕЛЕНО КАК СчетЗатрат,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеЗатрат,
	|	НЕОПРЕДЕЛЕНО КАК Субконто1,
	|	НЕОПРЕДЕЛЕНО КАК Субконто2,
	|	НЕОПРЕДЕЛЕНО КАК Субконто3,
	|	ЛОЖЬ КАК Малоценка
	|ИЗ
	|	ТаблицаТара КАК ТаблицаТара
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	НЕ ТаблицаТара.СчетУчета.Забалансовый
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	""ВозвратнаяТара"" КАК ИмяСписка,
	|	&СинонимТара КАК СинонимСписка,
	|	Реквизиты.Период КАК Период,
	|	ТаблицаТара.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТара.СчетУчета КАК СчетУчета,
	|	ТаблицаТара.Номенклатура КАК Номенклатура,
	|	Реквизиты.Склад КАК Склад,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
	|	ВЫБОР
	|		КОГДА &ИспользуетсяОтложенноеПроведение
	|			ТОГДА ТаблицаТара.СуммаРуб
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Себестоимость,
	|	ЛОЖЬ КАК СебестоимостьУказанаВДокументе,
	|	ТаблицаТара.Количество КАК Количество,
	|	ТаблицаТара.СуммаРуб КАК СуммаРуб,
	|	ТаблицаТара.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	Реквизиты.ПодразделениеОрганизации КАК КорПодразделение,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВозвратнаяТараУПокупателя) КАК КорСчетСписания,
	|	Реквизиты.Контрагент КАК КорСубконто1,
	|	ТаблицаТара.Номенклатура КАК КорСубконто2,
	|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты) КАК ВидКорСубконто1,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура) КАК ВидКорСубконто2,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии) КАК ВидКорСубконто3,
	|	НЕОПРЕДЕЛЕНО КАК Комитент,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКомиссии,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетАвансовСКомитентом,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетРасчетовСКомитентом,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаРасчетовСКомитентом,
	|	0 КАК СуммаРасчетовСКомитентом,
	|	НЕОПРЕДЕЛЕНО КАК СчетЗатрат,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеЗатрат,
	|	НЕОПРЕДЕЛЕНО КАК Субконто1,
	|	НЕОПРЕДЕЛЕНО КАК Субконто2,
	|	НЕОПРЕДЕЛЕНО КАК Субконто3,
	|	ЛОЖЬ КАК Малоценка
	|ИЗ
	|	ТаблицаТара КАК ТаблицаТара
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаТара.СчетУчета.Забалансовый
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаКорректировкаСтоимостиТары(НомераТаблиц)
	
	НомераТаблиц.Вставить("КорректировкаСтоимостиТарыРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("КорректировкаСтоимостиТарыТаблицаТара", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.СчетУчетаРасчетовПоТаре,
	|	&СодержаниеПроводкиПередачаТары КАК Содержание
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ВозвратнаяТара"" КАК ИмяСписка,
	|	ТаблицаТара.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТара.Номенклатура,
	|	ТаблицаТара.Количество,
	|	ТаблицаТара.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТаблицаТара.СуммаРуб КАК СуммаРуб
	|ИЗ
	|	ТаблицаТара КАК ТаблицаТара
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаНДС(НомераТаблиц)

	НомераТаблиц.Вставить("РеквизитыНДС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТоварыНДС",    НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ДействиеНДСВСтоимостиТоваров.НеИзменять) КАК НДСвСтоимостиТоваров,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетСписанияНДС,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоСписанияНДС1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоСписанияНДС2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоСписанияНДС3,
	|	Реквизиты.ТипСклада КАК ТипСкладаОтправителя,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСкладов.ПустаяСсылка) КАК ТипСкладаПолучателя,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеПолучатель,
	|	Реквизиты.Контрагент КАК Контрагент
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Товары"" КАК ИмяСписка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтрокиДокумента,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ТаблицаТовары.СчетПередачи КАК СчетУчетаПолучатель,
	|	Реквизиты.Склад КАК СкладПолучатель,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыУчетаНДС.ПустаяСсылка) КАК НовыйСпособУчетаНДС
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.ВПереработку)";
		
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаНДСБезвозмезднаяПередача(НомераТаблиц)

	НомераТаблиц.Вставить("РеквизитыНДСБезвозмезднаяПередача", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТоварыНДСБезвозмезднаяПередача",    НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.СчетУчетаНДС КАК СчетУчетаНДС,
	|	Реквизиты.СубконтоНДС1 КАК СубконтоНДС1,
	|	Реквизиты.СубконтоНДС2 КАК СубконтоНДС2,
	|	Реквизиты.СубконтоНДС3 КАК СубконтоНДС3,
	|	Реквизиты.КодРаздел7ДекларацииНДС КАК КодОперацииПоСделке,
	|	ВЫБОР
	|		КОГДА Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.БезвозмезднаяПередача)
	|			ТОГДА ВЫБОР
	|					КОГДА Реквизиты.ПодразделениеЗатрат = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|						ТОГДА Реквизиты.ПодразделениеОрганизации
	|					ИНАЧЕ Реквизиты.ПодразделениеЗатрат
	|				КОНЕЦ
	|		ИНАЧЕ Реквизиты.ПодразделениеОрганизации
	|	КОНЕЦ КАК Подразделение,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	""Безвозмездная передача товаров"" КАК Содержание,
	|	""10"" КАК КодВидаОперации
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Товары"" КАК ИмяСписка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтрокиДокумента,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ТаблицаТовары.Сумма КАК СуммаРуб,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДСДокумента,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДСРуб,
	|	СправочникНоменклатура.КодРаздел7ДекларацииНДС КАК КодРаздел7ДекларацииНДС,
	|	ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ОперацияНеПодлежитНалогообложению, ЛОЖЬ) КАК КодСоответствуетСт149НКРФ,
	|	ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ВключаетсяВРеестрПодтверждающихДокументов, ЛОЖЬ) КАК КодВключаетсяВРеестр,
	|	ВЫБОР
	|		КОГДА Реквизиты.СуммаВключаетНДС
	|			ТОГДА ТаблицаТовары.Сумма - ТаблицаТовары.СуммаНДС
	|		ИНАЧЕ ТаблицаТовары.Сумма
	|	КОНЕЦ КАК СуммаБезНДСРуб,
	|	ТаблицаТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.Сумма КАК СуммаВзаиморасчетов,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ТаблицаТовары.Сумма КАК СуммаБУ
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КодыОперацийРаздела7ДекларацииПоНДС КАК КодыОперацийРаздела7ДекларацииПоНДС
	|			ПО СправочникНоменклатура.КодРаздел7ДекларацииНДС = КодыОперацийРаздела7ДекларацииПоНДС.Ссылка
	|				И СправочникНоменклатура.КодРаздел7ДекларацииНДС = КодыОперацийРаздела7ДекларацииПоНДС.Ссылка
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Реквизиты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.БезвозмезднаяПередача)";
		
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПрослеживаемыеТовары(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если Не Реквизиты.ВидОперации = Перечисления.ВидыОперацийПередачаТоваров.БезвозмезднаяПередача
		И Не Реквизиты.ВидОперации = Перечисления.ВидыОперацийПередачаТоваров.ПередачаТоваровКомитенту 
		ИЛИ Не Реквизиты.ВедетсяУчетПрослеживаемыхТоваров Тогда
		ПараметрыПроведения.Вставить("ВТ_Прослеживаемость",    Неопределено);
		ПараметрыПроведения.Вставить("ВТ_СуммыБезНДС",         Неопределено);
		ПараметрыПроведения.Вставить("ПрослеживаемыеОперации", Неопределено);
		ПараметрыПроведения.Вставить("ПрослеживаемыеТовары",   Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ВТ_Прослеживаемость",    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_СуммыБезНДС",         НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПрослеживаемыеОперации", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПрослеживаемыеТовары",   НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПередачаТоваровТовары.Номенклатура КАК Номенклатура,
	|	СУММА(ПередачаТоваровСведенияПрослеживаемости.Количество) КАК Количество,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровТовары.ПрослеживаемыйКомплект
	|				И НЕ ПередачаТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.ПередачаТоваровКомитенту)
	|			ТОГДА ПередачаТоваровСведенияПрослеживаемости.СтранаПроисхождения
	|		ИНАЧЕ ПередачаТоваровТовары.СтранаПроисхождения
	|	КОНЕЦ КАК СтранаПроисхождения,
	|	ПередачаТоваровСведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	СУММА(ПередачаТоваровСведенияПрослеживаемости.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПродаж)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях)
	|	КОНЕЦ КАК ОтражениеВОтчетности,
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПустаяСсылка)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПередачаТоваров.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|					ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.БезвозмезднаяПередачаТовараФизическимЛицам)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.БезвозмезднаяПередача)
	|			КОНЕЦ
	|	КОНЕЦ КАК КодОперации,
	|	ПередачаТоваровТовары.Ссылка КАК ДокументОперации,
	|	НАЧАЛОПЕРИОДА(ПередачаТоваровТовары.Ссылка.Дата, КВАРТАЛ) КАК ПериодОперации,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК НомерДокумента,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДокумента,
	|	ВЫБОР
	|		КОГДА НЕ &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ВЫБОР
	|					КОГДА ПередачаТоваров.ЭтоУниверсальныйДокумент
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.ТипыДокументов.УПД)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТипыДокументов.Накладная)
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ТипДокументаВПрослеживаемости,
	|	ПередачаТоваров.Контрагент КАК Контрагент,
	|	ПередачаТоваров.ВидОперации КАК ВидОперации,
	|	ПередачаТоваровТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ПередачаТоваровСведенияПрослеживаемости.Номенклатура КАК Комплектующие,
	|	ПередачаТоваровСведенияПрослеживаемости.Сумма КАК СуммаБезНДС,
	|	ПередачаТоваровТовары.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект
	|ПОМЕСТИТЬ ВТ_Прослеживаемость
	|ИЗ
	|	Документ.ПередачаТоваров.Товары КАК ПередачаТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаТоваров.СведенияПрослеживаемости КАК ПередачаТоваровСведенияПрослеживаемости
	|		ПО ПередачаТоваровТовары.Ссылка = ПередачаТоваровСведенияПрослеживаемости.Ссылка
	|			И ПередачаТоваровТовары.ИдентификаторСтроки = ПередачаТоваровСведенияПрослеживаемости.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО (НЕ &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС)
	|			И ПередачаТоваровТовары.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И ПередачаТоваровТовары.Ссылка.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваров КАК ПередачаТоваров
	|		ПО ПередачаТоваровТовары.Ссылка = ПередачаТоваров.Ссылка
	|ГДЕ
	|	ПередачаТоваровТовары.ПрослеживаемыйТовар
	|	И ПередачаТоваровТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПередачаТоваровТовары.Номенклатура,
	|	ПередачаТоваровСведенияПрослеживаемости.РНПТ,
	|	ПередачаТоваровТовары.Ссылка,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """"),
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)),
	|	ВЫБОР
	|		КОГДА НЕ &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ВЫБОР
	|					КОГДА ПередачаТоваров.ЭтоУниверсальныйДокумент
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.ТипыДокументов.УПД)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТипыДокументов.Накладная)
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ПередачаТоваров.Контрагент,
	|	ПередачаТоваров.ВидОперации,
	|	ПередачаТоваровТовары.ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПустаяСсылка)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПередачаТоваров.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|					ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.БезвозмезднаяПередачаТовараФизическимЛицам)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.БезвозмезднаяПередача)
	|			КОНЕЦ
	|	КОНЕЦ,
	|	НАЧАЛОПЕРИОДА(ПередачаТоваровТовары.Ссылка.Дата, КВАРТАЛ),
	|	ПередачаТоваровСведенияПрослеживаемости.Номенклатура,
	|	ПередачаТоваровСведенияПрослеживаемости.Сумма,
	|	ПередачаТоваровТовары.ПрослеживаемыйКомплект,
	|	ВЫБОР
	|		КОГДА ПередачаТоваровТовары.ПрослеживаемыйКомплект
	|				И НЕ ПередачаТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.ПередачаТоваровКомитенту)
	|			ТОГДА ПередачаТоваровСведенияПрослеживаемости.СтранаПроисхождения
	|		ИНАЧЕ ПередачаТоваровТовары.СтранаПроисхождения
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаТоваровТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Сумма - ТаблицаТовары.СуммаНДС КАК СуммаБезНДС,
	|	ПередачаТоваровТовары.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ ВТ_СуммыБезНДС
	|ИЗ
	|	Документ.ПередачаТоваров.Товары КАК ПередачаТоваровТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаТовары КАК ТаблицаТовары
	|		ПО ПередачаТоваровТовары.НомерСтроки = ТаблицаТовары.НомерСтроки
	|ГДЕ
	|	ПередачаТоваровТовары.Ссылка = &Ссылка
	|	И ПередачаТоваровТовары.ПрослеживаемыйТовар
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВТ_Прослеживаемость.ПрослеживаемыйКомплект
	|			ТОГДА ВТ_Прослеживаемость.Комплектующие
	|		ИНАЧЕ ВТ_Прослеживаемость.Номенклатура
	|	КОНЕЦ КАК Номенклатура,
	|	ВТ_Прослеживаемость.Количество КАК Количество,
	|	ВТ_Прослеживаемость.РНПТ КАК РНПТ,
	|	ВТ_Прослеживаемость.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	ВТ_Прослеживаемость.ОтражениеВОтчетности КАК ОтражениеВОтчетности,
	|	ВТ_Прослеживаемость.КодОперации КАК КодОперации,
	|	ВТ_Прослеживаемость.ДокументОперации КАК ДокументОперации,
	|	ВТ_Прослеживаемость.ПериодОперации КАК ПериодОперации,
	|	ВТ_Прослеживаемость.НомерДокумента КАК НомерДокумента,
	|	ВТ_Прослеживаемость.ДатаДокумента КАК ДатаДокумента,
	|	ВТ_Прослеживаемость.ТипДокументаВПрослеживаемости КАК ТипДокументаВПрослеживаемости,
	|	ВЫБОР
	|		КОГДА ВТ_Прослеживаемость.ПрослеживаемыйКомплект
	|			ТОГДА ВТ_Прослеживаемость.СуммаБезНДС
	|		ИНАЧЕ ЕСТЬNULL(ВТ_СуммыБезНДС.СуммаБезНДС, 0)
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВТ_Прослеживаемость.Контрагент КАК Контрагент,
	|	ВТ_Прослеживаемость.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ВТ_Прослеживаемость.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект
	|ИЗ
	|	ВТ_Прослеживаемость КАК ВТ_Прослеживаемость
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СуммыБезНДС КАК ВТ_СуммыБезНДС
	|		ПО ВТ_Прослеживаемость.ИдентификаторСтроки = ВТ_СуммыБезНДС.ИдентификаторСтроки
	|ГДЕ
	|	ВТ_Прослеживаемость.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.ПередачаТоваровКомитенту)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Прослеживаемость.Номенклатура КАК Номенклатура,
	|	СУММА(ВТ_Прослеживаемость.Количество) КАК Количество,
	|	ВТ_Прослеживаемость.СтранаПроисхождения КАК СтранаПроисхождения,
	|	СУММА(ВТ_Прослеживаемость.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	ВЫБОР
	|		КОГДА ВТ_Прослеживаемость.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.ПередачаТоваровКомитенту)
	|			ТОГДА ВТ_Прослеживаемость.Контрагент
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ КАК Комитент,
	|	ВЫБОР
	|		КОГДА ВТ_Прослеживаемость.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.ПередачаТоваровКомитенту)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыЗакупленныеДляКомитента)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Комиссионер,
	|	ВТ_Прослеживаемость.РНПТ КАК РНПТ,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаРеализации,
	|	НЕОПРЕДЕЛЕНО КАК ОснованиеДляВозврата,
	|	ВТ_Прослеживаемость.Комплектующие КАК Комплектующие
	|ИЗ
	|	ВТ_Прослеживаемость КАК ВТ_Прослеживаемость
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Прослеживаемость.Номенклатура,
	|	ВТ_Прослеживаемость.СтранаПроисхождения,
	|	ВТ_Прослеживаемость.РНПТ,
	|	ВЫБОР
	|		КОГДА ВТ_Прослеживаемость.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.ПередачаТоваровКомитенту)
	|			ТОГДА ВТ_Прослеживаемость.Контрагент
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВТ_Прослеживаемость.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.ПередачаТоваровКомитенту)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыЗакупленныеДляКомитента)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВТ_Прослеживаемость.Комплектующие";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
		
КонецФункции

// ОТЛОЖЕННОЕ ПРОВЕДЕНИЕ

Функция ТекстЗапросаРегистрацияОтложенныхРасчетовСКонтрагентами(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ ПроведениеСервер.ИспользуетсяОтложенноеПроведение(Реквизиты.Организация, Реквизиты.Период) Тогда
		ПараметрыПроведения.Вставить("РасчетыСКонтрагентамиОтложенноеПроведение", Неопределено);
		Возврат "";
	КонецЕсли;

	НомераТаблиц.Вставить("РасчетыСКонтрагентамиОтложенноеПроведение", НомераТаблиц.Количество());

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.Период КАК Дата
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТара КАК ТаблицаТара
	|		ПО (ТаблицаТара.НомерСтроки = 1)";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Функция формирует табличный документ унифицированной формы М-15
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Табличный документ по форме М-4 (приходный ордер).
//
Функция ПечатьМ15(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб          = Истина;
	ТабДокумент.ПолеСверху           = 10;
	ТабДокумент.ПолеСнизу            = 10;
	ТабДокумент.ПолеСправа           = 0;
	ТабДокумент.ОриентацияСтраницы   = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПередачаТоваров_М15";
	
	СисИнфо = Новый СистемнаяИнформация;
	Если ПустаяСтрока(СисИнфо.ИнформацияПрограммыПросмотра) Тогда 
		ТабДокумент.ПолеСлева = 0;
	Иначе
		ТабДокумент.ПолеСлева = 10;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов",
		 Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПередачаТоваров.Ссылка КАК Ссылка,
	|	ПередачаТоваров.Номенклатура КАК Номенклатура,
	|	ПередачаТоваров.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ПередачаТоваров.Количество КАК КоличествоПринято,
	|	ПередачаТоваров.СчетУчета.Представление КАК СчетУчета,
	|	ПередачаТоваров.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВложенныйЗапрос
	|ИЗ
	|	Документ.ПередачаТоваров.Товары КАК ПередачаТоваров
	|ГДЕ
	|	ПередачаТоваров.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаТоваров.Ссылка КАК Ссылка,
	|	ПередачаТоваров.Номер КАК НомерДокумента,
	|	ПередачаТоваров.Дата КАК ДатаДокумента,
	|	ПередачаТоваров.Дата КАК ДатаНач,
	|	ПередачаТоваров.Дата КАК ДатаКон,
	|	ПередачаТоваров.Дата КАК ДатаСоставления,
	|	ПередачаТоваров.Организация КАК Организация,
	|	ПередачаТоваров.Склад КАК Склад,
	|	ПередачаТоваров.Склад.Наименование КАК СкладНаименование,
	|	ПередачаТоваров.ВалютаДокумента КАК ВалютаДокумента,
	|	ПередачаТоваров.Контрагент.Код КАК КонтрагентКод,
	|	ПередачаТоваров.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ПередачаТоваров.Контрагент КАК Контрагент,
	|	ПередачаТоваров.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ПередачаТоваров.ДоговорКонтрагента.Наименование КАК ДоговорКонтрагентаНаименование,
	|	ПередачаТоваров.ДоговорКонтрагента.Номер КАК ДоговорКонтрагентаНомер,
	|	ПередачаТоваров.ДоговорКонтрагента.Дата КАК ДоговорКонтрагентаДата
	|ИЗ
	|	Документ.ПередачаТоваров КАК ПередачаТоваров
	|ГДЕ
	|	ПередачаТоваров.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПередачаТоваров.Дата,
	|	ПередачаТоваров.Ссылка
	|ИТОГИ
	|	МИНИМУМ(ДатаНач),
	|	МАКСИМУМ(ДатаКон)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.Ссылка.Номер КАК НомерДокумента,
	|	ВложенныйЗапрос.Ссылка.Дата КАК ДатаДокумента,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ВложенныйЗапрос.Номенклатура.Артикул
	|		ИНАЧЕ ВложенныйЗапрос.Номенклатура.Код
	|	КОНЕЦ КАК НоменклатурныйНомер,
	|	ВложенныйЗапрос.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ВложенныйЗапрос.КоличествоПринято КАК Количество,
	|	ВложенныйЗапрос.СчетУчета КАК СчетУчета
	|ИЗ
	|	ВложенныйЗапрос КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ДатаДокумента,
	|	НомерСтроки";

	Результат = Запрос.ВыполнитьПакет();
	ШапкаИтоги= Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВсеСтроки = Результат[2].Выгрузить(ОбходРезультатаЗапроса.Прямой);
	ВсеСтроки.Индексы.Добавить("Ссылка,НомерСтроки");

	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_М15");
	
	СтруктураПоиска = Новый Структура();
	
	Если ШапкаИтоги.Следующий() Тогда
	
		ДатаНач = ?(ЗначениеЗаполнено(ШапкаИтоги.ДатаНач), ШапкаИтоги.ДатаНач, '00010101');
		ДатаКон	= ?(ЗначениеЗаполнено(ШапкаИтоги.ДатаКон), ШапкаИтоги.ДатаКон, '00010101');
	
		ТаблицаСуммСписанияПоДокументам = БухгалтерскийУчетПереопределяемый.ПолучитьСуммуСписанияАктивов(МассивОбъектов,
			 ДатаНач, ДатаКон);
		
		ПервыйДокумент = Истина;

		Шапка = ШапкаИтоги.Выбрать();
		Пока Шапка.Следующий() Цикл

			Если Не ПервыйДокумент Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;

			ПервыйДокумент = Ложь;
			// Запомним номер строки, с которой начали выводить текущий документ.
			НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

			// Выводим общие реквизиты шапки
			СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация,
				 Шапка.ДатаСоставления);

			ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакетаСтрока = Макет.ПолучитьОбласть("Строка");
			ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");

			ОбластьМакетаШапка.Параметры.Заполнить(Шапка);
			ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
				СведенияОбОрганизации);
			ОбластьМакетаШапка.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
			ОбластьМакетаШапка.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(
				Шапка.НомерДокумента, Истина, Ложь);

			СведенияОКонтрагенте     = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Контрагент,
				 Шапка.ДатаСоставления);
			ПредставлениеКонтрагента = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагенте,
				 "НаименованиеДляПечатныхФорм,");
			ОбластьМакетаШапка.Параметры.КонтрагентНаименование = ПредставлениеКонтрагента;
			ОбластьМакетаШапка.Параметры.Получатель             = ПредставлениеКонтрагента;
			ОбластьМакетаШапка.Параметры.Основание              = Шапка.ДоговорКонтрагентаНаименование;

			ТабДокумент.Вывести(ОбластьМакетаШапка);

			Запрос.УстановитьПараметр("ТекущийДокумент", Шапка.Ссылка);
			СтрокиТоваров = ВсеСтроки.НайтиСтроки(Новый Структура("Ссылка", Шапка.Ссылка));

			// Выводим заголовок таблицы
			ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);

			НомерСтраницы   = 1;
			КоличествоСтрок = СтрокиТоваров.Количество();

			// Инициализация итогов в документе
			ИтогоКоличествоПринято = 0;
			ИтогоСуммаБезНДС       = 0;
			ИтогоСуммаНДС          = 0;
			ИтогоВсегоСНДС         = 0;
			НомерСтроки            = 0;

			// Выводим многострочную часть документа
			Для Каждого ТекущаяСтрока Из СтрокиТоваров Цикл
			
				НомерСтроки = НомерСтроки + 1;
				
				СтруктураПоиска.Вставить("Регистратор", 	Шапка.Ссылка);
				СтруктураПоиска.Вставить("Номенклатура", 	ТекущаяСтрока.Номенклатура);
				НайденныеСтроки = ТаблицаСуммСписанияПоДокументам.НайтиСтроки(СтруктураПоиска);
				
				Количество = ТекущаяСтрока.Количество;
				
				Если НайденныеСтроки.Количество() = 0 Тогда
					ВсегоСНДС = 0;
					Цена = 0;
				Иначе
					СтрокаСуммСписания = НайденныеСтроки[0];
					Цена = ?(СтрокаСуммСписания.Количество = 0, 0, СтрокаСуммСписания.Сумма / СтрокаСуммСписания.Количество);
					ВсегоСНДС = Окр(Цена * Количество, 2, 1);
				КонецЕсли;
				
				ОбластьМакетаСтрока.Параметры.Заполнить(ТекущаяСтрока);
				
				ОбластьМакетаСтрока.Параметры.СуммаСНДС           = ВсегоСНДС;
				ОбластьМакетаСтрока.Параметры.СуммаБезНДС         = ВсегоСНДС;
				ОбластьМакетаСтрока.Параметры.СуммаНДС            = 0;
				ОбластьМакетаСтрока.Параметры.Цена                = Цена;
				ОбластьМакетаСтрока.Параметры.ТоварНаименование   = СокрЛП(ТекущаяСтрока.ТоварНаименование);
				ОбластьМакетаСтрока.Параметры.КоррСчет            = СокрЛП(ТекущаяСтрока.СчетУчета);
				
				// Проверим вывод
				СтрокаСПодвалом = Новый Массив;
				Если НомерСтроки = 1 Тогда
					СтрокаСПодвалом.Добавить(ОбластьМакетаЗаголовокТаблицы); // если первая строка, то должен
				КонецЕсли;                                                   // помещаться заголовок
				СтрокаСПодвалом.Добавить(ОбластьМакетаСтрока);
				Если НомерСтроки = КоличествоСтрок Тогда           // если последняя строка, должен
					СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал); // помещаться и подвал документа
				КонецЕсли;

				Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда

					Если КоличествоСтрок > 1 Тогда

						ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

						// Очистим итоги по странице
						ИтогоМестНаСтранице       = 0;
						ИтогоКоличествоНаСтранице = 0;
						ИтогоСуммаНаСтранице      = 0;
						ИтогоНДСНаСтранице        = 0;
						ИтогоСуммаСНДСНаСтранице  = 0;

						// Выведем заголовок таблицы
						НомерСтраницы = НомерСтраницы + 1;
						ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
						ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);

					КонецЕсли;

				КонецЕсли;

				ТабДокумент.Вывести(ОбластьМакетаСтрока);

				ИтогоКоличествоПринято = ИтогоКоличествоПринято + Количество;
				ИтогоСуммаБезНДС       = ИтогоСуммаБезНДС       + ВсегоСНДС;
				ИтогоВсегоСНДС         = ИтогоВсегоСНДС         + ВсегоСНДС;

			КонецЦикла;

			// Выводим итоги по документу
			ОбластьМакетаПодвал.Параметры.Заполнить(Шапка);

			ПодразделениеОтветственныхЛиц = Шапка.ПодразделениеОрганизации;

			Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Организация,
				 Шапка.ДатаДокумента, ПодразделениеОтветственныхЛиц);
			Руководитель  = Руководители.РуководительПредставление;
			Бухгалтер     = Руководители.ГлавныйБухгалтерПредставление;

			ДанныеЗаполнения = Новый Структура;
			
			ДанныеЗаполнения.Вставить("ФИОРуководителя",       Руководитель);
			ДанныеЗаполнения.Вставить("ФИОГлавБухгалтера",     Бухгалтер);
			ДанныеЗаполнения.Вставить("ДолжностьРуководителя", Руководители.РуководительДолжностьПредставление);
			ДанныеЗаполнения.Вставить("ДолжностьГлавБух",      Руководители.ГлавныйБухгалтерДолжностьПредставление);
			
			Если Шапка.Склад <> Справочники.Склады.ПустаяСсылка() Тогда 
				МОЛ = ОтветственныеЛицаБП.ОтветственноеЛицоНаСкладе(Шапка.Склад, Шапка.ДатаДокумента);
				ДанныеФизЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Шапка.Организация, МОЛ, Шапка.ДатаДокумента);
				
				ДанныеЗаполнения.Вставить("ДолжностьКладовщика", ДанныеФизЛица.Должность);
				ДанныеЗаполнения.Вставить("ФИОКладовщика",       ДанныеФизЛица.Представление);
			КонецЕсли;

			ДанныеЗаполнения.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0"));
			ДанныеЗаполнения.Вставить("СуммаПрописью",ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтогоВсегоСНДС, Шапка.ВалютаДокумента));
			ДанныеЗаполнения.Вставить("ИтогНДС", ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(0, Шапка.ВалютаДокумента));
			
			ОбластьМакетаПодвал.Параметры.Заполнить(ДанныеЗаполнения);

			ТабДокумент.Вывести(ОбластьМакетаПодвал);

			// В табличном документе зададим имя области, в которую был
			// выведен объект. Нужно для возможности печати покомплектно.
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
			
			УправлениеПечатьюБП.ДоработатьФаксимильнуюПодписьИПечать(ТабДокумент, ОбъектыПечати,
				Шапка.Организация, Шапка.Ссылка);
			
		КонецЦикла;
	
	КонецЕсли;

	Возврат ТабДокумент;

КонецФункции

Функция М11ТекстЗапросаШапки()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПередачаТоваров.Номер КАК Номер,
	|	ПередачаТоваров.Дата КАК Дата,
	|	ПередачаТоваров.Дата КАК ДатаНач,
	|	ПередачаТоваров.Дата КАК ДатаКон,
	|	ПередачаТоваров.Организация КАК Организация,
	|	ПередачаТоваров.Организация.КодПоОКПО КАК КодПоОКПО,
	|	ПередачаТоваров.Ссылка КАК Ссылка,
	|	ПередачаТоваров.Контрагент КАК Контрагент,
	|	ПередачаТоваров.Контрагент.Представление КАК ФИОПолучателя,
	|	ПередачаТоваров.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА ПередачаТоваров.ПодразделениеОрганизации.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ПередачаТоваров.ПодразделениеОрганизации.Наименование
	|		ИНАЧЕ ПередачаТоваров.ПодразделениеОрганизации.НаименованиеПолное
	|	КОНЕЦ КАК ПредставлениеПодразделения,
	|	ПередачаТоваров.Склад КАК Склад,
	|	ПередачаТоваров.СчетЗатрат КАК СчетЗатрат,
	|	ПередачаТоваров.СчетЗатрат.Код КАК СчетЗатратКод,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеЗатрат,
	|	"""" КАК ПодразделениеЗатратНаименование,
	|	"""" КАК ПодразделениеЗатратНаименованиеПолное,
	|	"""" КАК СчетаУчетаЗатратВТаблице,
	|	ПередачаТоваров.Товары.(
	|		Номенклатура КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|				ТОГДА ПередачаТоваров.Товары.Номенклатура.Артикул
	|			ИНАЧЕ ПередачаТоваров.Товары.Номенклатура.Код
	|		КОНЕЦ КАК Код,
	|		ВЫБОР
	|			КОГДА ПередачаТоваров.Товары.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|				ТОГДА ПередачаТоваров.Товары.Номенклатура.Наименование
	|			ИНАЧЕ ПередачаТоваров.Товары.Номенклатура.НаименованиеПолное
	|		КОНЕЦ КАК Имя,
	|		Номенклатура.ЕдиницаИзмерения КАК ЕдИзм,
	|		Номенклатура.ЕдиницаИзмерения.Код КАК ЕдИзмКод,
	|		СчетУчета КАК Счет,
	|		Номенклатура.ЕдиницаИзмерения КАК ЕдИзмМест,
	|		Количество КАК Количество,
	|		Количество КАК КоличествоМест,
	|		НЕОПРЕДЕЛЕНО КАК Партия,
	|		НЕОПРЕДЕЛЕНО КАК ПодразделениеЗатрат,
	|		"""" КАК ПодразделениеЗатратНаименование,
	|		"""" КАК ПодразделениеЗатратНаименованиеПолное,
	|		СчетУчета.Код КАК СчетЗатратКод
	|	) КАК Товары
	|ИЗ
	|	Документ.ПередачаТоваров КАК ПередачаТоваров
	|ГДЕ
	|	ПередачаТоваров.Ссылка В(&МассивОбъектов)
	|	И ПередачаТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.БезвозмезднаяПередача)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПередачаТоваров.Ссылка
	|ИТОГИ
	|	МИНИМУМ(ДатаНач),
	|	МАКСИМУМ(ДатаКон)
	|ПО
	|	ОБЩИЕ";	
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПечатьМ11(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб          = Истина;
	ТабДокумент.ОриентацияСтраницы   = ОриентацияСтраницы.Портрет;
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПередачаТоваров_М11";
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", 
		Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());
	Запрос.Текст = М11ТекстЗапросаШапки();
	
	ШапкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если ШапкаИтоги.Следующий() Тогда
	
		ДатаНач = ?(ЗначениеЗаполнено(ШапкаИтоги.ДатаНач), ШапкаИтоги.ДатаНач, '00010101');
		ДатаКон = ?(ЗначениеЗаполнено(ШапкаИтоги.ДатаКон), ШапкаИтоги.ДатаКон, '00010101');
		
		// Из общей таблицы сумм списания получим таблицу по документу с учетом партий указанных в табличной части.
		ТаблицаСуммСписанияПоДокументам = БухгалтерскийУчетПереопределяемый.ПолучитьСуммуСписанияАктивовПоПартиям(
			МассивОбъектов, ДатаНач, ДатаКон);
		
		ПервыйДокумент = Истина;
		Шапка = ШапкаИтоги.Выбрать();
		
		Пока Шапка.Следующий() Цикл
			
			Товары = Шапка.Товары.Выгрузить();
			
			ТаблицаСуммСписанияПоДокументу = ТаблицаСуммСписанияПоДокументу(
				ТаблицаСуммСписанияПоДокументам, Шапка.Ссылка, Товары);
			
			Если Не ПервыйДокумент Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
			
			Макет   = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_М11");
			Область = Макет.ПолучитьОбласть("Шапка");
			
			Параметры = Новый Структура;
			
			Параметры.Вставить("Заголовок",  "ТРЕБОВАНИЕ-НАКЛАДНАЯ № " +
				ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер, Истина, Ложь));
			Параметры.Вставить("КодОКПО",    Шапка.КодПоОКПО);
			
			СведенияОбОрганизации    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
			ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
				СведенияОбОрганизации, 
				"НаименованиеДляПечатныхФорм,");
			Параметры.Вставить("ПредставлениеОрганизации", ПредставлениеОрганизации);
			Параметры.Вставить("ДатаСоставления",          Формат(Шапка.Дата, "ДФ=dd.MM.yy"));
			Параметры.Вставить("Склад",                    Шапка.Склад);
			
				Параметры.Вставить("ПредставлениеПодразделения", Шапка.ПодразделениеОрганизации);
				Параметры.Вставить("КоррСчет",Шапка.СчетЗатратКод);
			
			Область.Параметры.Заполнить(Параметры);
			ТабДокумент.Вывести(Область);
			
			Область = Макет.ПолучитьОбласть("Строка");
			
			// Поиск сумм списания активов для заполнения Цены и Суммы
			
			Для Каждого СтрокаТЧ Из Товары Цикл
				
				Параметры = Новый Структура;
				
				Параметры.Вставить("Счет",                         СтрокаТЧ.Счет);
				Параметры.Вставить("МатериалНаименование",         СтрокаТЧ.Имя);
				Параметры.Вставить("НоменклатурныйНомер",          СтрокаТЧ.Код);
				Параметры.Вставить("ЕдиницаИзмеренияНаименование", СтрокаТЧ.ЕдИзм);
				Параметры.Вставить("ЕдиницаИзмеренияКод",          СтрокаТЧ.ЕдИзмКод);
				Параметры.Вставить("Количество",                   СтрокаТЧ.Количество);
				
				Цена = ЦенаСписания(ТаблицаСуммСписанияПоДокументу, СтрокаТЧ.Номенклатура, СтрокаТЧ.Партия);
				
				Параметры.Вставить("Цена",  Цена);
				Параметры.Вставить("Сумма", Цена * СтрокаТЧ.Количество);
				
				Область.Параметры.Заполнить(Параметры);
				ТабДокумент.Вывести(Область);
				
			КонецЦикла;
			
			Область = Макет.ПолучитьОбласть("Подвал");
			
			Если Шапка.Склад <> Справочники.Склады.ПустаяСсылка() Тогда 
				МОЛ = ОтветственныеЛицаБП.ОтветственноеЛицоНаСкладе(Шапка.Склад,Шапка.Дата);
				ДанныеФизЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Шапка.Организация,МОЛ,Шапка.Дата);
				Область.Параметры.МОЛДолжность = ДанныеФизЛица.Должность;
				Область.Параметры.МОЛФИО = ДанныеФизЛица.Представление;
			КонецЕсли;
			
			ТабДокумент.Вывести(Область);
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		КонецЦикла;
	
	КонецЕсли;
	
	Возврат ТабДокумент;
КонецФункции

Функция ЦенаСписания(ТаблицаСуммСписанияПоДокументам, Номенклатура, Партия)
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура",  Номенклатура);
	СтруктураПоиска.Вставить("Партия",        ?(ЗначениеЗаполнено(Партия), Партия, Неопределено));
	
	НайденныеСтроки = ТаблицаСуммСписанияПоДокументам.НайтиСтроки(СтруктураПоиска);
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		Возврат 0;
	Иначе
		СтрокаСуммСписания = НайденныеСтроки[0];
		Если СтрокаСуммСписания.Количество = 0 Тогда
			Возврат 0;
		Иначе
			Возврат СтрокаСуммСписания.Сумма / СтрокаСуммСписания.Количество;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция ТаблицаСуммСписанияПоДокументу(Знач ТаблицаСуммСписанияПоДокументам, Регистратор, ТаблицаМатериалы)

	ТаблицаРезультата = Новый ТаблицаЗначений;
	ТаблицаРезультата.Колонки.Добавить("Номенклатура");
	ТаблицаРезультата.Колонки.Добавить("Партия");
	ТаблицаРезультата.Колонки.Добавить("Количество");
	ТаблицаРезультата.Колонки.Добавить("Сумма");
	
	ТаблицаСуммСписанияПоДокументу = ТаблицаСуммСписанияПоДокументам.Скопировать(
		Новый Структура("Регистратор", Регистратор));
	
	СтруктураПоиска = Новый Структура("Номенклатура, Партия");
	
	// Сначала заполним сумму оценки по строкам с заполненной партией.
	Для каждого СтрокаМатериал Из ТаблицаМатериалы Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаМатериал.Партия) Тогда
			Продолжить;
		КонецЕсли; 
	
		СтруктураПоиска.Вставить("Номенклатура",  СтрокаМатериал.Материал);
		СтруктураПоиска.Вставить("Партия",        СтрокаМатериал.Партия);
		
		НайденныеСтроки = ТаблицаСуммСписанияПоДокументу.НайтиСтроки(СтруктураПоиска);
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			// Если не нашли партии в таблице сумм - очищаем ее в таблице материалов, чтобы оценка прошла "по средней"
			СтрокаМатериал.Партия = Неопределено;
		Иначе
			СтрокаСуммСписания = НайденныеСтроки[0];
			Если СтрокаСуммСписания.Количество < СтрокаМатериал.Количество  Тогда
				СтрокаМатериал.Партия = Неопределено;
			Иначе
				
				КоличествоПоСтроке = Мин(СтрокаСуммСписания.Количество, СтрокаМатериал.Количество);
				СуммаПоСтроке      = Окр(СтрокаСуммСписания.Сумма*КоличествоПоСтроке/СтрокаСуммСписания.Количество, 2);
				
				НоваяСтрока = ТаблицаРезультата.Добавить();
				
				НоваяСтрока.Номенклатура = СтрокаМатериал.Материал;
				НоваяСтрока.Партия       = СтрокаМатериал.Партия;
				НоваяСтрока.Количество   = КоличествоПоСтроке;
				НоваяСтрока.Сумма        = СуммаПоСтроке;
				
				СтрокаСуммСписания.Сумма      = СтрокаСуммСписания.Сумма - НоваяСтрока.Сумма;
				СтрокаСуммСписания.Количество = СтрокаСуммСписания.Количество - НоваяСтрока.Количество;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// По незаполненным партиям рассчитаем среднюю
	Для каждого СтрокаСуммСписания Из ТаблицаСуммСписанияПоДокументу Цикл
		Если СтрокаСуммСписания.Количество <> 0 Тогда 
			НоваяСтрока = ТаблицаРезультата.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСуммСписания, ,"Партия");
		КонецЕсли; 
	КонецЦикла;
	
	ТаблицаРезультата.Свернуть("Номенклатура, Партия", "Количество, Сумма");
	ТаблицаРезультата.Индексы.Добавить("Номенклатура, Партия");
	
	Возврат ТаблицаРезультата;
КонецФункции

// Формирует и возвращает текст запроса для выборки данных,
// необходимых для формирования печатной формы
Функция ПолучитьТекстЗапросаДляФормированияПечатнойФормыТТН()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПередачаТоваров.Ссылка КАК Ссылка,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПередачаТоваров.Номенклатура) КАК Количество
	|ПОМЕСТИТЬ КоличествоТоваров
	|ИЗ
	|	Документ.ПередачаТоваров.Товары КАК ПередачаТоваров
	|ГДЕ
	|	ПередачаТоваров.Ссылка В (&МассивДокументов)
	|СГРУППИРОВАТЬ ПО
	|	ПередачаТоваров.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаТоваров.Ссылка КАК Ссылка,
	|	ПередачаТоваров.Дата КАК Дата,
	|	ПередачаТоваров.Номер КАК Номер,
	|	ПередачаТоваров.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ПередачаТоваров.Грузополучатель = &ПустойКонтрагент
	|			ТОГДА ПередачаТоваров.Контрагент
	|		ИНАЧЕ ПередачаТоваров.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА ПередачаТоваров.Грузоотправитель = &ПустойКонтрагент
	|			ТОГДА ПередачаТоваров.Организация
	|		ИНАЧЕ ПередачаТоваров.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Перевозчик,
	|	ПередачаТоваров.Организация КАК Руководители,
	|	&ПустойСчет КАК БанковскийСчетОрганизации,
	|	ПередачаТоваров.Контрагент КАК Покупатель,
	|	ПередачаТоваров.АдресДоставки КАК АдресДоставки,
	|	ПередачаТоваров.Контрагент КАК Контрагент,
	|	ПередачаТоваров.Склад КАК Склад,
	|	ПередачаТоваров.ДоговорКонтрагента.Представление КАК Основание,
	|	ПередачаТоваров.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	ПередачаТоваров.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ЕСТЬNULL(ПередачаТоваров.ПодразделениеОрганизации.ОбособленноеПодразделение, ЛОЖЬ) КАК ОбособленноеПодразделение,
	|	ВЫРАЗИТЬ(ПередачаТоваров.ПодразделениеОрганизации.НаименованиеПолное КАК СТРОКА(200)) КАК ПредставлениеПодразделения,
	|	ПередачаТоваров.ВалютаДокумента КАК ВалютаДокумента,
	|	1 КАК Курс,
	|	1 КАК Кратность,
	|	ЛОЖЬ КАК ЦенаВключаетНДС,
	|	ЕСТЬNULL(КоличествоТоваров.Количество, 0) КАК КоличествоНаименований,
	|	"""" КАК Руководитель,
	|	"""" КАК ГлавныйБухгалтер,
	|	"""" КАК ЗаРуководителяНаОсновании,
	|	"""" КАК ЗаГлавногоБухгалтераНаОсновании,
	|	"""" КАК ОтпускПроизвел,
	|	"""" КАК ДоверенностьНомер,
	|	"""" КАК ДоверенностьДата,
	|	"""" КАК ДоверенностьВыдана,
	|	"""" КАК ДоверенностьЧерезКого,
	|	ПередачаТоваров.КраткоеНаименованиеГруза КАК КраткоеНаименованиеГруза,
	|	ПередачаТоваров.СопроводительныеДокументы КАК СопроводительныеДокументы,
	|	ПередачаТоваров.Водитель КАК Водитель,
	|	ПередачаТоваров.ВодительскоеУдостоверение КАК ВодительскоеУдостоверение,
	|	ПередачаТоваров.МаркаАвтомобиля КАК МаркаАвтомобиля,
	|	ПередачаТоваров.РегистрационныйЗнакАвтомобиля КАК РегистрационныйЗнакАвтомобиля,
	|	ВЫБОР
	|		КОГДА ПередачаТоваров.ВодительДолжность = """"
	|			ТОГДА ""Водитель""
	|		ИНАЧЕ ПередачаТоваров.ВодительДолжность
	|	КОНЕЦ КАК ВодительДолжность
	|ИЗ
	|	Документ.ПередачаТоваров КАК ПередачаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоТоваров КАК КоличествоТоваров
	|		ПО ПередачаТоваров.Ссылка = КоличествоТоваров.Ссылка
	|ГДЕ
	|	ПередачаТоваров.Ссылка В (&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаТоваров.Ссылка КАК Ссылка,
	|	ПередачаТоваров.НомерСтроки КАК НомерСтроки,
	|	ПередачаТоваров.Номенклатура КАК Номенклатура,
	|	ПередачаТоваров.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ПередачаТоваров.Номенклатура.Код КАК ТоварКод,
	|	ВЫБОР
	|		КОГДА
	|			&ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПередачаТоваров.Номенклатура.Артикул
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Артикул,
	|	ПередачаТоваров.Количество КАК Количество,
	|	ПередачаТоваров.Количество КАК КоличествоМест,
	|	ПередачаТоваров.Номенклатура.ЕдиницаИзмерения КАК БазоваяЕдиницаНаименование,
	|	ПередачаТоваров.Номенклатура.ЕдиницаИзмерения.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ПередачаТоваров.Номенклатура.ЕдиницаИзмерения КАК ВидУпаковки,
	|	1 КАК Коэффициент,
	|	1 КАК КоличествоВОдномМесте,
	|	0 КАК Цена,
	|	0 КАК Сумма,
	|	0 КАК СуммаНДС,
	|	0 КАК СуммаВВалютеДокумента,
	|	0 КАК СуммаНДСВВалютеДокумента,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара,
	|	1 КАК КоэффициентПерерасчета,
	|	ЛОЖЬ КАК Весовой
	|ИЗ
	|	Документ.ПередачаТоваров.Товары КАК ПередачаТоваров
	|ГДЕ
	|	ПередачаТоваров.Ссылка В (&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ
	|ПО
	|	Ссылка";
		
	Возврат ТекстЗапроса;

КонецФункции

// Получить данные объектов для печати ТТН
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//
// Возвращаемое значение:
//  Структура с данными объектов для печати ТТН.
//
Функция ПолучитьДанныеДляПечатнойФормыТТН(МассивОбъектов) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойСчет", Справочники.БанковскиеСчета.ПустаяСсылка());
	
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());
	
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияПечатнойФормыТТН();
	
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[1];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[2];
	
	СтруктураДанныхДляПечати 	= Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти",
		РезультатПоШапке,
		РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Формирует и возвращает текст запроса для выборки данных,
// необходимых для формирования печатной формы транспортной накладной
Функция ПолучитьТекстЗапросаДляФормированияПечатнойФормыТранспортнойНакладной()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПередачаТоваров.Ссылка КАК Ссылка,
	|	ПередачаТоваров.Дата КАК Дата,
	|	ПередачаТоваров.Номер КАК Номер,
	|	ПередачаТоваров.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ПередачаТоваров.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ПередачаТоваров.Контрагент
	|		ИНАЧЕ ПередачаТоваров.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА ПередачаТоваров.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ПередачаТоваров.Организация
	|		ИНАЧЕ ПередачаТоваров.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Перевозчик,
	|	ПередачаТоваров.Организация КАК Руководители,
	|	ПередачаТоваров.Контрагент КАК Покупатель,
	|	ПередачаТоваров.Контрагент КАК Контрагент,
	|	ПередачаТоваров.Контрагент КАК ЗаказчикПеревозок,
	|	ПередачаТоваров.ДоговорКонтрагента.Представление КАК Основание,
	|	ПередачаТоваров.АдресДоставки КАК АдресДоставки,
	|	ПередачаТоваров.КраткоеНаименованиеГруза КАК КраткоеНаименованиеГруза,
	|	ПередачаТоваров.СопроводительныеДокументы КАК СопроводительныеДокументы,
	|	ПередачаТоваров.Водитель КАК Водитель,
	|	ПередачаТоваров.ВодительскоеУдостоверение КАК ВодительскоеУдостоверение,
	|	ПередачаТоваров.МаркаАвтомобиля КАК МаркаАвтомобиля,
	|	ПередачаТоваров.РегистрационныйЗнакАвтомобиля КАК РегистрационныйЗнакАвтомобиля,
	|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ОтпускПроизвел
	|ПОМЕСТИТЬ ВТ_ДанныеТранспортнойНакладной
	|ИЗ
	|	Документ.ПередачаТоваров КАК ПередачаТоваров
	|ГДЕ
	|	ПередачаТоваров.Ссылка В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеТранспортнойНакладной.Ссылка КАК Ссылка,
	|	ВТ_ДанныеТранспортнойНакладной.Дата КАК Дата,
	|	ВТ_ДанныеТранспортнойНакладной.Номер КАК Номер,
	|	ВТ_ДанныеТранспортнойНакладной.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА Контрагенты.ОбособленноеПодразделение
	|			ТОГДА Контрагенты.ГоловнойКонтрагент
	|		ИНАЧЕ ВТ_ДанныеТранспортнойНакладной.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ВТ_ДанныеТранспортнойНакладной.Грузоотправитель КАК Грузоотправитель,
	|	ВТ_ДанныеТранспортнойНакладной.Перевозчик КАК Перевозчик,
	|	ВТ_ДанныеТранспортнойНакладной.Руководители КАК Руководители,
	|	ВТ_ДанныеТранспортнойНакладной.Покупатель КАК Покупатель,
	|	ВТ_ДанныеТранспортнойНакладной.Контрагент КАК Контрагент,
	|	ВТ_ДанныеТранспортнойНакладной.ЗаказчикПеревозок КАК ЗаказчикПеревозок,
	|	ВТ_ДанныеТранспортнойНакладной.Основание КАК Основание,
	|	ВТ_ДанныеТранспортнойНакладной.АдресДоставки КАК АдресДоставки,
	|	ВТ_ДанныеТранспортнойНакладной.КраткоеНаименованиеГруза КАК КраткоеНаименованиеГруза,
	|	ВТ_ДанныеТранспортнойНакладной.СопроводительныеДокументы КАК СопроводительныеДокументы,
	|	ВТ_ДанныеТранспортнойНакладной.Водитель КАК Водитель,
	|	ВТ_ДанныеТранспортнойНакладной.ВодительскоеУдостоверение КАК ВодительскоеУдостоверение,
	|	ВТ_ДанныеТранспортнойНакладной.МаркаАвтомобиля КАК МаркаАвтомобиля,
	|	ВТ_ДанныеТранспортнойНакладной.РегистрационныйЗнакАвтомобиля КАК РегистрационныйЗнакАвтомобиля,
	|	ВТ_ДанныеТранспортнойНакладной.ОтпускПроизвел КАК ОтпускПроизвел
	|ИЗ
	|	ВТ_ДанныеТранспортнойНакладной КАК ВТ_ДанныеТранспортнойНакладной
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО ВТ_ДанныеТранспортнойНакладной.Грузополучатель = Контрагенты.Ссылка";
		
	Возврат ТекстЗапроса;
	
КонецФункции

// Получить данные объектов для печати транспортной накладной
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//
// Возвращаемое значение:
//  Структура с данными объектов для печати транспортной накладной.
//
Функция ПолучитьДанныеДляПечатнойФормыТранспортнаяНакладная(МассивОбъектов) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияПечатнойФормыТранспортнойНакладной();
	
	ТаблицаРезультата = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаРезультата;
	
КонецФункции

Функция ПолучитьТаблицуСведенийТОРГ12(Знач МассивДокументов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаСведений = ПечатьТорговыхДокументов.ПолучитьОписаниеТОРГ12();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());
	
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияТаблицыСведенийТОРГ12();
		
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ВалютаРегУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	РеквизитыВалютыРегУчета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВалютаРегУчета, "Код, Наименование");
	
	Выборка          = РезультатыЗапроса[1].Выбрать();
	СтрокиДокументов = РезультатыЗапроса[3].Выгрузить();
	ПериодВыборки    = РезультатыЗапроса[4].Выбрать();
	
	ТаблицаСуммСписанияПоДокументам = Неопределено;
	Если ПериодВыборки.Следующий() Тогда
		ДатаНачала    = ?(ЗначениеЗаполнено(ПериодВыборки.ДатаНачала), ПериодВыборки.ДатаНачала, '00010101');
		ДатаОкончания = ?(ЗначениеЗаполнено(ПериодВыборки.ДатаОкончания), ПериодВыборки.ДатаОкончания, '00010101');
		ТаблицаСуммСписанияПоДокументам = БухгалтерскийУчетПереопределяемый.ПолучитьСуммуСписанияАктивов(МассивДокументов,
			 ДатаНачала, ДатаОкончания);
	КонецЕсли;
	
	СтрокиДокументов.Индексы.Добавить("Документ");
	
	Пока Выборка.Следующий() Цикл
		
		СведенияОДокументе = ТаблицаСведений.Добавить();
		ЗаполнитьЗначенияСвойств(СведенияОДокументе, Выборка);
		
		СведенияОДокументе.Валюта             = ВалютаРегУчета;
		СведенияОДокументе.ВалютаКод          = РеквизитыВалютыРегУчета.Код;
		СведенияОДокументе.ВалютаНаименование = РеквизитыВалютыРегУчета.Наименование;
		
		ТаблицаДокумента = ПечатьТорговыхДокументов.ПолучитьОписаниеТаблицыТОРГ12();
		
		Отбор = Новый Структура("Документ", Выборка.Документ);
		СтрокиДокумента = СтрокиДокументов.НайтиСтроки(Отбор);
		
		НуженПересчетВРубли = НЕ (Выборка.ВалютаДокумента = ВалютаРегУчета);
		
		Для Каждого Строка Из СтрокиДокумента Цикл
			
			СтрокаТаблицыДокумента = ТаблицаДокумента.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыДокумента, Строка);
			
			Если Не Выборка.БезвозмезднаяПередача
					И ЗначениеЗаполнено(ТаблицаСуммСписанияПоДокументам) Тогда
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("Регистратор",  Выборка.Документ);
				СтруктураПоиска.Вставить("Номенклатура", СтрокаТаблицыДокумента.Товар);
				НайденныеСтроки = ТаблицаСуммСписанияПоДокументам.НайтиСтроки(СтруктураПоиска);
				Если НайденныеСтроки.Количество() > 0 Тогда
					СтрокаСуммСписания = НайденныеСтроки[0];
					СтрокаТаблицыДокумента.СуммаСНДС   = СтрокаСуммСписания.Сумма;
					СтрокаТаблицыДокумента.СуммаБезНДС = СтрокаТаблицыДокумента.СуммаСНДС;
					СтрокаТаблицыДокумента.Цена = ?(СтрокаТаблицыДокумента.Количество = 0, 0,
						СтрокаТаблицыДокумента.СуммаБезНДС / СтрокаТаблицыДокумента.Количество);
				КонецЕсли;
			КонецЕсли;
			
			Если НуженПересчетВРубли Тогда
				Если Строка.СуществуютЗаписиРублевыхСумм Тогда
					СтрокаТаблицыДокумента.СуммаНДС = Строка.НДСВРублях;
					СтрокаТаблицыДокумента.СуммаБезНДС = Строка.ВсегоВРублях - Строка.НДСВРублях;
				Иначе
					Кратность = ?(Выборка.Кратность = 0, 1, Выборка.Кратность);
					СтрокаТаблицыДокумента.СуммаНДС = Строка.СуммаНДС * Выборка.Курс / Кратность;;
					СтрокаТаблицыДокумента.СуммаБезНДС = (Строка.СуммаБезНДС + Строка.СуммаНДС) * Выборка.Курс / Кратность - СтрокаТаблицыДокумента.СуммаНДС;
				КонецЕсли;
			КонецЕсли;
			
			СтрокаТаблицыДокумента.СуммаСНДС = СтрокаТаблицыДокумента.СуммаБезНДС + СтрокаТаблицыДокумента.СуммаНДС;
			
			Если НуженПересчетВРубли 
					ИЛИ (Выборка.СуммаВключаетНДС И СтрокаТаблицыДокумента.СуммаНДС <> 0) Тогда
				СтрокаТаблицыДокумента.Цена = ?(СтрокаТаблицыДокумента.Количество = 0,
					СтрокаТаблицыДокумента.СуммаБезНДС,
					СтрокаТаблицыДокумента.СуммаБезНДС / СтрокаТаблицыДокумента.Количество);
			КонецЕсли;
			
		КонецЦикла;
		
		СведенияОДокументе.ТаблицаДокумента = ТаблицаДокумента;
		
		ПорядокЗаполнения = Новый Структура("ЗаполнятьРуководителя, ЗаполнятьГлавногоБухгалтера, ЗаполнятьКладовщика");
		ПечатьТорговыхДокументов.ЗаполнитьДанныеОтветственныхЛиц(СведенияОДокументе, ПорядокЗаполнения);
		
		Если НЕ ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(СведенияОДокументе.Организация) Тогда
			ИндивидуальныйПредприниматель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СведенияОДокументе.Организация, "ИндивидуальныйПредприниматель");
			Если ИндивидуальныйПредприниматель = СведенияОДокументе.Руководитель Тогда
				СведенияОДокументе.РуководительДолжностьНаименование = "Индивидуальный предприниматель";
			КонецЕсли;
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат ТаблицаСведений;
	
КонецФункции

Функция ПолучитьТекстЗапросаДляФормированияТаблицыСведенийТОРГ12()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПередачаТоваров.Ссылка КАК Ссылка,
	|	ПередачаТоваров.Номенклатура КАК Номенклатура,
	|	ПередачаТоваров.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ПередачаТоваров.Количество) КАК Количество,
	|	МИНИМУМ(ПередачаТоваров.НомерСтроки) КАК НомерСтроки,
	|	ПередачаТоваров.Цена КАК Цена,
	|	СУММА(ПередачаТоваров.Сумма) КАК Сумма,
	|	ПередачаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ПередачаТоваров.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ ВложенныйЗапрос
	|ИЗ
	|	Документ.ПередачаТоваров.Товары КАК ПередачаТоваров
	|ГДЕ
	|	ПередачаТоваров.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПередачаТоваров.Ссылка,
	|	ПередачаТоваров.Номенклатура,
	|	ПередачаТоваров.Номенклатура.ЕдиницаИзмерения,
	|	ПередачаТоваров.Цена,
	|	ПередачаТоваров.СтавкаНДС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаТоваров.Ссылка КАК Документ,
	|	ПередачаТоваров.Дата КАК ДатаДляПолученияСведений,
	|	ДанныеПервичныхДокументов.Номер КАК НомерДокумента,
	|	ДанныеПервичныхДокументов.Дата КАК ДатаДокумента,
	|	ПередачаТоваров.Контрагент КАК Покупатель,
	|	ПередачаТоваров.ДоговорКонтрагента.ГосударственныйКонтракт КАК ГосударственныйКонтрактСсылка,
	|	ЕСТЬNULL(ПередачаТоваров.ДоговорКонтрагента.ГосударственныйКонтракт.Код, """") КАК ГосударственныйКонтракт,
	|	ПередачаТоваров.Организация КАК Поставщик,
	|	ПередачаТоваров.Организация КАК Организация,
	|	ПередачаТоваров.ПодразделениеОрганизации КАК Подразделение,
	|	ПередачаТоваров.ВалютаДокумента КАК ВалютаДокумента,
	|	ПередачаТоваров.КурсВзаиморасчетов КАК Курс,
	|	1 КАК Кратность,
	|	ПередачаТоваров.ВалютаДокумента.Код КАК ВалютаКод,
	|	ПередачаТоваров.ВалютаДокумента.Наименование КАК ВалютаНаименование,
	|	ВЫБОР
	|		КОГДА ПередачаТоваров.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ПередачаТоваров.Организация
	|		ИНАЧЕ ПередачаТоваров.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	ПередачаТоваров.Организация КАК Руководители,
	|	ВЫБОР
	|		КОГДА ПередачаТоваров.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ПередачаТоваров.Контрагент
	|		ИНАЧЕ ПередачаТоваров.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА ПередачаТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПередачаТоваров.БезвозмезднаяПередача)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК БезвозмезднаяПередача,
	|	ПередачаТоваров.Контрагент КАК Плательщик,
	|	ПередачаТоваров.ДоговорКонтрагента КАК Договор,
	|	ПередачаТоваров.ДоговорКонтрагента.Представление КАК Основание,
	|	ПередачаТоваров.ДоговорКонтрагента.Дата КАК ОснованиеДата,
	|	ПередачаТоваров.ДоговорКонтрагента.Номер КАК ОснованиеНомер,
	|	ПередачаТоваров.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ПередачаТоваров.Дата КАК ДатаПодписанияДокумента
	|ИЗ
	|	Документ.ПередачаТоваров КАК ПередачаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ПередачаТоваров.Ссылка = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	ПередачаТоваров.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаТоваров.Ссылка КАК Ссылка,
	|	ПередачаТоваров.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ПередачаТоваров.Дата КАК Дата
	|ПОМЕСТИТЬ ДанныеШапкиДокумента
	|ИЗ
	|	Документ.ПередачаТоваров КАК ПередачаТоваров
	|ГДЕ
	|	ПередачаТоваров.Ссылка В(&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка КАК Документ,
	|	ВложенныйЗапрос.Ссылка.Дата КАК ДатаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары) КАК ТабличнаяЧасть,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.Номенклатура КАК Товар,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ВложенныйЗапрос.Номенклатура.Артикул
	|		ИНАЧЕ ВложенныйЗапрос.Номенклатура.Код
	|	КОНЕЦ КАК ТоварКод,
	|	ВложенныйЗапрос.Количество КАК Количество,
	|	ВложенныйЗапрос.Количество КАК КоличествоМест,
	|	1 КАК КоличествоВОдномМесте,
	|	ВложенныйЗапрос.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ВидУпаковки,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Код КАК ВидУпаковкиКод,
	|	ВложенныйЗапрос.Номенклатура.ЕдиницаИзмерения.Представление КАК ВидУпаковкиНаименование,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	ВЫБОР
	|		КОГДА ДанныеШапкиДокумента.СуммаВключаетНДС
	|			ТОГДА ВложенныйЗапрос.Сумма - ВложенныйЗапрос.СуммаНДС
	|		ИНАЧЕ ВложенныйЗапрос.Сумма
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВложенныйЗапрос.СуммаНДС КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА ДанныеШапкиДокумента.СуммаВключаетНДС
	|			ТОГДА ВложенныйЗапрос.Сумма
	|		ИНАЧЕ ВложенныйЗапрос.Сумма + ВложенныйЗапрос.СуммаНДС
	|	КОНЕЦ КАК СуммаСНДС,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	ВложенныйЗапрос КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеШапкиДокумента КАК ДанныеШапкиДокумента
	|		ПО ВложенныйЗапрос.Ссылка = ДанныеШапкиДокумента.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Документ,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ДанныеШапкиДокумента.Дата) КАК ДатаНачала,
	|	МАКСИМУМ(ДанныеШапкиДокумента.Дата) КАК ДатаОкончания
	|ИЗ
	|	ДанныеШапкиДокумента КАК ДанныеШапкиДокумента";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// ПЕРЕДАЧА ТОВАРОВ ПРОВЕДЕНИЕ
// Формирование движений по передаче товаров безвозмездная передача
//
Процедура СформироватьДвиженияБезвозмезднаяПередача(
	ТаблицаТовары, ТаблицаСписанныеТоварыБухУчет, ТаблицаРеквизиты, СписанныеПартииНДС, Движения, Отказ) Экспорт

	Если Не ЗначениеЗаполнено(ТаблицаТовары)
	 Или Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = ТаблицаРеквизиты[0];
	Параметры = ПодготовитьПараметрыПередачаТоваров(ТаблицаТовары, ТаблицаСписанныеТоварыБухУчет, ТаблицаРеквизиты);
	
	ПлательщикНДС     = УчетнаяПолитика.ПлательщикНДС(Реквизиты.Организация, Реквизиты.Период);
	РаздельныйУчетНДС = УчетнаяПолитика.РаздельныйУчетНДС(Реквизиты.Организация, Реквизиты.Период);
	
	УчетНДС.ЗаполнитьВидыЦенностей(Параметры.Товары, Неопределено, "СчетУчета");
	
	Реквизиты = Параметры.Реквизиты[0];

	УчетНДСПереопределяемый.СформироватьПроводкиСписаниеГТД(Параметры.Товары, Реквизиты, Движения, Отказ);

	Если ПлательщикНДС Тогда
			// Начисление НДС сразу отражается в книге продаж
				СформироватьДвиженияНДСЗаписиКнигиПродажПередачаТоваров(Параметры.Товары, Реквизиты, Движения, Отказ);
				СформироватьПроводкиПередачаТоваров(Параметры.Товары, Реквизиты, Движения, Отказ);

	// Списание товаров
		Если РаздельныйУчетНДС Тогда
			
			СписанныеПартииНДС = УчетНДСПереопределяемый.ПолучитьТаблицуСписанныеПартииНДС(
				Параметры.Товары, Параметры.СписанныеТоварыБухУчет, Реквизиты, Отказ);
				
			УчетНДСПереопределяемый.СформироватьДвиженияВыбытиеТоваров(
				СписанныеПартииНДС, Параметры.СписанныеТоварыБухУчет, Реквизиты, Движения, Отказ);
			УчетНДСПереопределяемый.СформироватьДвиженияРеализацияБезНДС(
				СписанныеПартииНДС, Параметры.Товары, Реквизиты, Движения, Отказ);
		Иначе
			УчетНДС.ЗаполнитьВидыЦенностей(Параметры.Товары, Неопределено, "СчетУчета");
			Параметры.Товары.Индексы.Добавить("ВидЦенности");
			ОсновныеСредства = Параметры.Товары.Скопировать(Новый Структура("ВидЦенности", Перечисления.ВидыЦенностей.ОС));
			СписанныеПартииНДС = УчетНДСПереопределяемый.ПолучитьТаблицуСписанныеПартииНДС(
				ОсновныеСредства, Параметры.СписанныеТоварыБухУчет, Реквизиты, Отказ);
			УчетНДСПереопределяемый.СформироватьДвиженияВыбытиеТоваров(
				СписанныеПартииНДС, Параметры.СписанныеТоварыБухУчет, Реквизиты, Движения, Отказ);
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьПараметрыПередачаТоваров(ТаблицаТовары, ТаблицаСписанныеТоварыБухУчет, ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы шапки документа
	СписокОбязательныхКолонок = ""
	+ "Период,"                         // <Дата>
	+ "Регистратор,"                    // <ДокументСсылка>
	+ "Организация,"                    // <СправочникСсылка.Организации>
	+ "Контрагент,"                     // <СправочникСсылка.Контрагенты>
	+ "КодВидаОперации,"                // <Строка>
	+ "КодОперацииПоСделке,"            // <Строка>
	+ "Содержание,,"                    // <Строка>
	+ "СчетУчетаНДС,"                   // <ПланСчетов.Хозрасчетный>
	+ "СубконтоНДС1,"                   // <Субконто>
	+ "СубконтоНДС2,"                   // <Субконто>
	+ "СубконтоНДС3,"                   // <Субконто>
	+ "Подразделение"                   // <Справочник.ПодразделенияОрганизаций>
	;
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизиты, СписокОбязательныхКолонок));

	// Необходимость включения/исключения НДС Из стоимости при безвозмездной передаче
	// определяется ставкой НДС партии товара и ставкой НДС, указанной в документе
	Параметры.Реквизиты.Колонки.Добавить("НДСВСтоимостиТоваров");
	Параметры.Реквизиты.ЗаполнитьЗначения(Неопределено, "НДСВСтоимостиТоваров");

	// Подготовка таблицы реализованных товаров и услуг:
	СписокОбязательныхКолонок = ""
	+ "ИмяСписка,"
	+ "НомерСтроки,"
	+ "НомерСтрокиДокумента,"
	+ "Номенклатура,"
	+ "Количество,"
	+ "КодВключаетсяВРеестр,"
	+ "КодРаздел7ДекларацииНДС,"
	+ "КодСоответствуетСт149НКРФ,"
	+ "СуммаВзаиморасчетов,"
	+ "СуммаРуб,"
	+ "СуммаБУ,"
	+ "НомерГТД,"             // <СправочникСсылка.НомераГТД>
	+ "СтранаПроисхождения,"  // <СправочникСсылка.СтраныМира>
	+ "СуммаНДСРуб,"
	+ "СуммаБезНДСРуб,"
	+ "СчетУчета,"
	+ "СтавкаНДС,"
	+ "СтавкаНДСДокумента,"
	+ "ВалютаВзаиморасчетов"
	;
	Параметры.Вставить("Товары", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаТовары, СписокОбязательныхКолонок));

	// Подготовка таблицы списанных товаров по данным бух.учета:
	СписокОбязательныхКолонок = ""
	+ "ИмяСписка,"
	+ "СинонимСписка,"
	+ "НомерСтроки,"
	+ "СчетУчета,"
	+ "Номенклатура,"
	+ "Склад,"
	+ "Партия,"
	+ "Количество,"
	+ "КорСчетСписания,"
	+ "ВидКорСубконто1,"
	+ "ВидКорСубконто2,"
	+ "ВидКорСубконто3,"
	+ "КорСубконто1,"
	+ "КорСубконто2,"
	+ "КорСубконто3,"
	+ "КорПодразделение,"
	+ "Подразделение"
	;
	Параметры.Вставить("СписанныеТоварыБухУчет", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаСписанныеТоварыБухУчет, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Процедура СформироватьДвиженияНДСЗаписиКнигиПродажПередачаТоваров(ПереданныеТовары, Реквизиты, Движения, Отказ)

	Если ПереданныеТовары.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	ТаблицаЗаписиКнигиПродаж = ОбщегоНазначенияБПВызовСервера.ПустаяТаблицаРегистраНакопления("НДСЗаписиКнигиПродаж");
	
	Для каждого СтрокаТаблицы Из ПереданныеТовары Цикл
		
		НоваяСтрока = ТаблицаЗаписиКнигиПродаж.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		
		НоваяСтрока.Покупатель  = Реквизиты.Контрагент;
		НоваяСтрока.СуммаБезНДС = СтрокаТаблицы.СуммаБезНДСРуб;
		НоваяСтрока.НДС         = СтрокаТаблицы.СуммаНДСРуб;

	КонецЦикла;
	
	ТаблицаЗаписиКнигиПродаж.ЗаполнитьЗначения(Реквизиты.Организация,     "Организация");
	ТаблицаЗаписиКнигиПродаж.ЗаполнитьЗначения(Реквизиты.Период,          "Период");
	ТаблицаЗаписиКнигиПродаж.ЗаполнитьЗначения(Реквизиты.Период,          "ДатаСобытия");
	ТаблицаЗаписиКнигиПродаж.ЗаполнитьЗначения(Реквизиты.КодВидаОперации, "КодВидаОперации");
	ТаблицаЗаписиКнигиПродаж.ЗаполнитьЗначения(Реквизиты.Регистратор,     "СчетФактура");
	
	ТаблицаЗаписиКнигиПродаж.ЗаполнитьЗначения(Перечисления.СобытияПоНДСПродажи.Реализация, "Событие");
	
	ТаблицаЗаписиКнигиПродаж.ЗаполнитьЗначения(Справочники.ДоговорыКонтрагентов.ПустаяСсылка(), "ДоговорКонтрагента");

	ТаблицаЗаписиКнигиПродаж.Свернуть("Период,Организация,Покупатель,КодВидаОперации,СчетФактура,ВидЦенности,СтавкаНДС,
		|ДатаОплаты,ДокументОплаты,Событие,ДатаСобытия,ДоговорКонтрагента",
		"СуммаБезНДС,НДС");

	Для каждого СтрокаТаблицы Из ТаблицаЗаписиКнигиПродаж Цикл
		Запись = Движения.НДСЗаписиКнигиПродаж.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, СтрокаТаблицы);
	КонецЦикла;

	Движения.НДСЗаписиКнигиПродаж.Записывать = Истина;

КонецПроцедуры

Процедура СформироватьПроводкиПередачаТоваров(ПереданныеТовары, Реквизиты, Движения, Отказ)

	Если ПереданныеТовары.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	//Проводки по начислению НДС от реализации:
	// Дт <СчетУчетаНДС>   Кт 68.02

	ВсегоСуммаНДСРуб = ПереданныеТовары.Итог("СуммаНДСРуб");

	Если ВсегоСуммаНДСРуб = 0 Тогда
		Возврат;
	КонецЕсли;

	Проводка = Движения.Хозрасчетный.Добавить();

	Проводка.Период      = Реквизиты.Период;
	Проводка.Организация = Реквизиты.Организация;
	Проводка.Сумма       = ВсегоСуммаНДСРуб;
	Проводка.Содержание  = Реквизиты.Содержание;

	Проводка.СчетДт = Реквизиты.СчетУчетаНДС;
	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт,
		1, Реквизиты.СубконтоНДС1); 
	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт,
		2, Реквизиты.СубконтоНДС2); 
	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт,
		3, Реквизиты.СубконтоНДС3);     //субконто по реализуемым активам не заполняется.

	СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);
	Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
		Проводка.ПодразделениеДт = Реквизиты.Подразделение;
	КонецЕсли;

	Проводка.СчетКт = ПланыСчетов.Хозрасчетный.НДС;
	Проводка.СубконтоКт.ВидыПлатежейВГосБюджет = Перечисления.ВидыПлатежейВГосБюджет.Налог;

	СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);
	Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
		Проводка.ПодразделениеКт = Реквизиты.Подразделение;
	КонецЕсли;

	Движения.Хозрасчетный.Записывать = Истина;

КонецПроцедуры

#КонецОбласти

#КонецЕсли