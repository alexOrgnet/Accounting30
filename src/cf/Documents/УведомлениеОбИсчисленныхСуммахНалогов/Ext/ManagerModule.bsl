#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 21, 0);
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

Функция ВыгрузитьУведомлениеОбИсчисленныхСуммахНалогов(ДокументСсылка, УникальныйИдентификатор = Неопределено) Экспорт
	
	ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
	УведомлениеОбъект = ДокументОбъект.Уведомление.ПолучитьОбъект();
	Возврат УведомлениеОбъект.ВыгрузитьДокумент(УникальныйИдентификатор)
	
КонецФункции

#КонецОбласти

#Область Свойства

// Получает описание предопределенных наборов свойств.
//
// Параметры:
//  Наборы - ДеревоЗначений - с колонками:
//     * Имя           - Строка - Имя набора свойств. Формируется из полного имени объекта
//                       метаданных заменой символа "." на "_".
//                       Например, "Документ_ЗаказПокупателя".
//     * Идентификатор - УникальныйИдентификатор - Идентификатор ссылки предопределенного элемента.
//     * Используется  - Неопределено, Булево - Признак того, что набор свойств используется.
//                       Например, можно использовать для скрытия набора по функциональным опциям.
//                       Значение по умолчанию - Неопределено, соответствует значению Истина.
//     * ЭтоГруппа     - Булево - Истина, если набор свойств является группой.
//
Процедура ПриПолученииПредопределенныхНаборовСвойств(Наборы) Экспорт
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_УведомлениеОбИсчисленныхСуммахНалогов";
	Набор.Идентификатор = Новый УникальныйИдентификатор("1e8b7f3d-0f34-4796-8454-891951eb6e0c");
	Набор.Используется  = Истина;
	
КонецПроцедуры

#КонецОбласти

Функция СтатусДокумента(ДокументСсылка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДокументСсылка) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	РеквизитУведомление = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылка, "Уведомление");
	
	Возврат ИнтерфейсыВзаимодействияБРО.СостояниеДокумента(РеквизитУведомление);
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ОписаниеТаблицНалогов() Экспорт
	
	ТаблицыНалогов = Новый Структура();
	ТаблицыНалогов.Вставить("ТаблицаНалоги",            ОписаниеТаблицыНалогов());
	ТаблицыНалогов.Вставить("ТаблицаНалоговыйАгентНДС", ОписаниеТаблицыНалоговыйАгентНДС());
	
	Возврат ТаблицыНалогов;
	
КонецФункции

Функция ОписаниеТаблицыНалогов() Экспорт
	
	ТаблицаНалогов = Новый ТаблицаЗначений;
	ТаблицаНалогов.Колонки.Добавить("Налог",                       Новый ОписаниеТипов("СправочникСсылка.ВидыНалоговИПлатежейВБюджет"));
	ТаблицаНалогов.Колонки.Добавить("КодБК",                       Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(20)));
	ТаблицаНалогов.Колонки.Добавить("СчетУчета",                   Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаНалогов.Колонки.Добавить("РегистрацияВНалоговомОргане", Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	ТаблицаНалогов.Колонки.Добавить("КодПоОКТМО",                  Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(11)));
	ТаблицаНалогов.Колонки.Добавить("Сумма",                       Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 0)));
	ТаблицаНалогов.Колонки.Добавить("СрокУплаты",                  Новый ОписаниеТипов("Дата", Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ТаблицаНалогов.Колонки.Добавить("КлючСтроки",                  Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(36)));
	ТаблицаНалогов.Колонки.Добавить("НачалоПериода",               Новый ОписаниеТипов("Дата", Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ТаблицаНалогов.Колонки.Добавить("КонецПериода",                Новый ОписаниеТипов("Дата", Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	
	Возврат ТаблицаНалогов;
	
КонецФункции

Функция ОписаниеТаблицыНалоговыйАгентНДС() Экспорт
	
	ТаблицаНалогов = Новый ТаблицаЗначений;
	ТаблицаНалогов.Колонки.Добавить("КлючСтроки",       Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(36)));
	ТаблицаНалогов.Колонки.Добавить("Контрагент",       Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТаблицаНалогов.Колонки.Добавить("Договор",          Новый ОписаниеТипов("СправочникСсылка.ДоговорыКонтрагентов"));
	ТаблицаНалогов.Колонки.Добавить("ДокументРасчетов", Метаданные.Документы.УведомлениеОбИсчисленныхСуммахНалогов.ТабличныеЧасти.НалоговыйАгентНДС.Реквизиты.ДокументРасчетов.Тип);
	ТаблицаНалогов.Колонки.Добавить("Сумма",            Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	
	Возврат ТаблицаНалогов;
	
КонецФункции

Функция ОписаниеДокумента(ДокументСсылка) Экспорт
	
	ОписаниеДокумента = Новый Структура("Наименование, Сумма");
	
	Если ЗначениеЗаполнено(ДокументСсылка) Тогда
		РеквизитыДокумента    = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка,
			"Номер, Дата, СуммаДокумента, Уведомление");
		
		НаименованиеДокумента = ДокументСсылка.Метаданные().Синоним;
		НомерДокумента        = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыДокумента.Номер, Истина, Истина);
		ДатаДокумента         = Формат(РеквизитыДокумента.Дата,"ДЛФ=D");
		Статус                = ИнтерфейсыВзаимодействияБРО.ПредставлениеСостоянияДокумента(РеквизитыДокумента.Уведомление);
		
		ШаблонПредставления = НСтр("ru = '%1 %2 от %3 на сумму %4 (%5)'");
		
		ОписаниеДокумента.Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПредставления,
			НаименованиеДокумента, НомерДокумента, ДатаДокумента, Формат(РеквизитыДокумента.СуммаДокумента, "ЧДЦ=2; ЧН=0,00"), Статус);
		ОписаниеДокумента.Сумма = РеквизитыДокумента.СуммаДокумента;
	КонецЕсли;
	
	Возврат ОписаниеДокумента;
	
КонецФункции

Функция ДатаНачалаСторнированияДублирующихУведомлений() Экспорт
	
	Возврат Дата(2023, 10, 1);
	
КонецФункции

Функция КлючевыеПоляУведомлений() Экспорт

	Возврат "Налог,КодБК,РегистрацияВНалоговомОргане,КодПоОКТМО,СрокУплаты,НачалоПериода,КонецПериода";

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
// Настройки - Структура - настройки подсистемы.
//
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати – ТаблицаЗначений – состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.УведомлениеОСпецрежимахНалогообложения";
	КомандаПечати.Обработчик     = "ЕдиныйНалоговыйСчетКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор  = "Уведомление";
	КомандаПечати.Представление  = НСтр("ru = 'Уведомление об исчисленных суммах налога'");
	КомандаПечати.Порядок        = 10;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.УведомлениеОСпецрежимахНалогообложения";
	КомандаПечати.Обработчик     = "ЕдиныйНалоговыйСчетКлиент.ВыполнитьКомандуПечатиPDF417";
	КомандаПечати.Идентификатор  = "Уведомление";
	КомандаПечати.Представление  = НСтр("ru = 'Уведомление об исчисленных суммах налога (PDF417)'");
	КомандаПечати.СписокФорм     = "ФормаДокумента";
	КомандаПечати.Порядок        = 20;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "Реестр";
	КомандаПечати.Представление  = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Реестр документов ""Уведомление об исчисленных суммах налогов""'");
	КомандаПечати.Обработчик     = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;
	
КонецПроцедуры

#КонецОбласти

#Область ПроведениеДокумента

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;
	ПараметрыПроведения.Вставить("ДокументСсылка", ДокументСсылка);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",                     ДокументСсылка);
	Запрос.УстановитьПараметр("СписокСчетовАгентскогоНДС",  УчетНДСБП.СписокСчетовАгентскогоНДС());
	Запрос.УстановитьПараметр("ДублирующиеЗаписиДокумента", ДублирующиеЗаписиДокумента(ДокументСсылка.ПолучитьОбъект()).Выгрузить());
	
	ПодготовитьПараметрыРеквизитыДокумента(Запрос, ПараметрыПроведения, Отказ);
	
	Реквизиты = ПараметрыПроведения.ТаблицаРеквизиты[0];
	Если Отказ ИЛИ НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	Для Каждого Колонка Из ПараметрыПроведения.ТаблицаРеквизиты.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц)
		+ ТекстЗапросаУведомлениеОбИсчисленныхСуммахНалогов(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаНалоговыйАгентНДС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаДублирующиеЗаписиДокумента(НомераТаблиц, ПараметрыПроведения, Реквизиты);
	Результат = Запрос.ВыполнитьПакет();

	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;

КонецФункции

Процедура ПодготовитьПараметрыРеквизитыДокумента(Запрос, ПараметрыПроведения, Отказ)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.Номер КАК Номер,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Проведен КАК Проведен,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.СуммаДокумента КАК СуммаДокумента
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.УведомлениеОбИсчисленныхСуммахНалогов КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.Номер КАК Номер,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Проведен КАК Проведен,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.СуммаДокумента КАК СуммаДокумента
	|ИЗ
	|	Реквизиты КАК Реквизиты";
	
	ТаблицаРеквизиты = Запрос.Выполнить().Выгрузить();
	
	ПараметрыПроведения.Вставить("ТаблицаРеквизиты", ТаблицаРеквизиты);
	
КонецПроцедуры

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация
	|ИЗ
	|	Документ.УведомлениеОбИсчисленныхСуммахНалогов КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаУведомлениеОбИсчисленныхСуммахНалогов(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	НомераТаблиц.Вставить("УведомлениеОбИсчисленныхСуммахНалогов", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.Ссылка КАК Ссылка,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.Налог КАК Налог,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.КодБК КАК КодБК,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.СчетУчета КАК СчетУчета,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.ВидПлатежаВГосБюджет КАК ВидПлатежаВГосБюджет,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.УровеньБюджета КАК УровеньБюджета,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.КодПоОКТМО КАК КодПоОКТМО,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.Сумма КАК Сумма,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.СрокУплаты КАК СрокУплаты,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ЛОЖЬ КАК КорректировкаЕНС
	|ИЗ
	|	Документ.УведомлениеОбИсчисленныхСуммахНалогов.Налоги КАК УведомлениеОбИсчисленныхСуммахНалоговНалоги
	|ГДЕ
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.Ссылка = &Ссылка";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаНалоговыйАгентНДС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	НомераТаблиц.Вставить("НалоговыйАгентНДС", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоговыйАгентНДС.Ссылка КАК Ссылка,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоговыйАгентНДС.НомерСтроки КАК НомерСтроки,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоговыйАгентНДС.Контрагент КАК Контрагент,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоговыйАгентНДС.Договор КАК Договор,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоговыйАгентНДС.ДокументРасчетов КАК ДокументРасчетов,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоговыйАгентНДС.Сумма КАК Сумма,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.СчетУчета КАК СчетУчета,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.Налог КАК Налог
	|ИЗ
	|	Документ.УведомлениеОбИсчисленныхСуммахНалогов.НалоговыйАгентНДС КАК УведомлениеОбИсчисленныхСуммахНалоговНалоговыйАгентНДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОбИсчисленныхСуммахНалогов.Налоги КАК УведомлениеОбИсчисленныхСуммахНалоговНалоги
	|		ПО УведомлениеОбИсчисленныхСуммахНалоговНалоговыйАгентНДС.КлючСтроки = УведомлениеОбИсчисленныхСуммахНалоговНалоги.КлючСтроки
	|			И УведомлениеОбИсчисленныхСуммахНалоговНалоговыйАгентНДС.Ссылка = УведомлениеОбИсчисленныхСуммахНалоговНалоги.Ссылка
	|ГДЕ
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоговыйАгентНДС.Ссылка = &Ссылка
	|	И УведомлениеОбИсчисленныхСуммахНалоговНалоги.Ссылка = &Ссылка";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаДублирующиеЗаписиДокумента(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если Реквизиты.Период < ДатаНачалаСторнированияДублирующихУведомлений() Тогда
		ПараметрыПроведения.Вставить("ДублирующиеЗаписиДокумента", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ДублирующиеЗаписиДокумента", НомераТаблиц.Количество() + 1);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДублирующиеЗаписиДокумента.Ссылка КАК Ссылка,
	|	ДублирующиеЗаписиДокумента.Дата КАК Дата,
	|	ДублирующиеЗаписиДокумента.Налог КАК Налог,
	|	ДублирующиеЗаписиДокумента.КодБК КАК КодБК,
	|	ДублирующиеЗаписиДокумента.СчетУчета КАК СчетУчета,
	|	ДублирующиеЗаписиДокумента.ВидПлатежаВГосБюджет КАК ВидПлатежаВГосБюджет,
	|	ДублирующиеЗаписиДокумента.УровеньБюджета КАК УровеньБюджета,
	|	ДублирующиеЗаписиДокумента.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ДублирующиеЗаписиДокумента.КодПоОКТМО КАК КодПоОКТМО,
	|	ДублирующиеЗаписиДокумента.Сумма КАК Сумма,
	|	ДублирующиеЗаписиДокумента.СрокУплаты КАК СрокУплаты,
	|	ДублирующиеЗаписиДокумента.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ_ДублирующиеЗаписиДокумента
	|ИЗ
	|	&ДублирующиеЗаписиДокумента КАК ДублирующиеЗаписиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Ссылка КАК Ссылка,
	|	ВТ_ДублирующиеЗаписиДокумента.Налог КАК Налог,
	|	ВТ_ДублирующиеЗаписиДокумента.КодБК КАК КодБК,
	|	ВТ_ДублирующиеЗаписиДокумента.СчетУчета КАК СчетУчета,
	|	ВТ_ДублирующиеЗаписиДокумента.ВидПлатежаВГосБюджет КАК ВидПлатежаВГосБюджет,
	|	ВТ_ДублирующиеЗаписиДокумента.УровеньБюджета КАК УровеньБюджета,
	|	ВТ_ДублирующиеЗаписиДокумента.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ВТ_ДублирующиеЗаписиДокумента.КодПоОКТМО КАК КодПоОКТМО,
	|	-ВТ_ДублирующиеЗаписиДокумента.Сумма КАК Сумма,
	|	ВТ_ДублирующиеЗаписиДокумента.СрокУплаты КАК СрокУплаты,
	|	0 КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ЛОЖЬ КАК КорректировкаЕНС
	|ИЗ
	|	ВТ_ДублирующиеЗаписиДокумента КАК ВТ_ДублирующиеЗаписиДокумента
	|ГДЕ
	|	ВТ_ДублирующиеЗаписиДокумента.Ссылка В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ВТ_ДублирующиеЗаписиДокумента.Ссылка
	|			ИЗ
	|				ВТ_ДублирующиеЗаписиДокумента КАК ВТ_ДублирующиеЗаписиДокумента
	|			УПОРЯДОЧИТЬ ПО
	|				ВТ_ДублирующиеЗаписиДокумента.Дата УБЫВ)";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ДублирующиеЗаписиДокумента(ДокументОбъект) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ГоловнаяОрганизация = БухгалтерскийУчетПереопределяемый.ГоловнаяОрганизация(ДокументОбъект.Организация);
	Организации         = БухгалтерскийУчетПереопределяемый.ВсяОрганизация(ГоловнаяОрганизация);
	
	ТаблицаНалоги = ДокументОбъект.Налоги.Выгрузить();
	ТаблицаНалоги.Свернуть(КлючевыеПоляУведомлений());
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",        ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ТаблицаНалоги", ТаблицаНалоги);
	Запрос.УстановитьПараметр("Организации",   Организации);
	Запрос.УстановитьПараметр("ДатаДокумента", ДокументОбъект.Дата);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаНалоги.Налог КАК Налог,
	|	ТаблицаНалоги.КодБК КАК КодБК,
	|	ТаблицаНалоги.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ТаблицаНалоги.КодПоОКТМО КАК КодПоОКТМО,
	|	ТаблицаНалоги.СрокУплаты КАК СрокУплаты,
	|	ТаблицаНалоги.НачалоПериода КАК НачалоПериода,
	|	ТаблицаНалоги.КонецПериода КАК КонецПериода
	|ПОМЕСТИТЬ ВТ_ТаблицаНалоги
	|ИЗ
	|	&ТаблицаНалоги КАК ТаблицаНалоги
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаНалоги.Налог,
	|	ТаблицаНалоги.КодБК,
	|	ТаблицаНалоги.РегистрацияВНалоговомОргане,
	|	ТаблицаНалоги.КодПоОКТМО,
	|	ТаблицаНалоги.СрокУплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.Ссылка.Организация КАК Организация,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.Ссылка КАК Ссылка,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.Ссылка.Дата КАК Дата,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.НомерСтроки КАК НомерСтроки,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.Налог КАК Налог,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.КодБК КАК КодБК,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.СчетУчета КАК СчетУчета,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.КодПоОКТМО КАК КодПоОКТМО,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.СрокУплаты КАК СрокУплаты,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.Сумма КАК Сумма,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.ВидПлатежаВГосБюджет КАК ВидПлатежаВГосБюджет,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.УровеньБюджета КАК УровеньБюджета,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.НачалоПериода КАК НачалоПериода,
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.КонецПериода КАК КонецПериода
	|ИЗ
	|	ВТ_ТаблицаНалоги КАК ВТ_ТаблицаНалоги
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УведомлениеОбИсчисленныхСуммахНалогов.Налоги КАК УведомлениеОбИсчисленныхСуммахНалоговНалоги
	|		ПО ВТ_ТаблицаНалоги.Налог = УведомлениеОбИсчисленныхСуммахНалоговНалоги.Налог
	|			И ВТ_ТаблицаНалоги.КодБК = УведомлениеОбИсчисленныхСуммахНалоговНалоги.КодБК
	|			И ВТ_ТаблицаНалоги.РегистрацияВНалоговомОргане = УведомлениеОбИсчисленныхСуммахНалоговНалоги.РегистрацияВНалоговомОргане
	|			И ВТ_ТаблицаНалоги.КодПоОКТМО = УведомлениеОбИсчисленныхСуммахНалоговНалоги.КодПоОКТМО
	|			И ВТ_ТаблицаНалоги.СрокУплаты = УведомлениеОбИсчисленныхСуммахНалоговНалоги.СрокУплаты
	|			И ВТ_ТаблицаНалоги.НачалоПериода = УведомлениеОбИсчисленныхСуммахНалоговНалоги.НачалоПериода
	|			И ВТ_ТаблицаНалоги.КонецПериода = УведомлениеОбИсчисленныхСуммахНалоговНалоги.КонецПериода
	|ГДЕ
	|	УведомлениеОбИсчисленныхСуммахНалоговНалоги.Ссылка <> &Ссылка
	|	И УведомлениеОбИсчисленныхСуммахНалоговНалоги.Ссылка.Организация В(&Организации)
	|	И УведомлениеОбИсчисленныхСуммахНалоговНалоги.Ссылка.Проведен
	|	И УведомлениеОбИсчисленныхСуммахНалоговНалоги.Ссылка.Дата <= &ДатаДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Ссылка,
	|	НомерСтроки";
	
	Возврат Запрос.Выполнить();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли