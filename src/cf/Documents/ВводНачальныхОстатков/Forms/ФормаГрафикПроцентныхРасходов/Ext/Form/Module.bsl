#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДатаДокумента = Параметры.ДатаДокумента;
	МаксимальнаяДата = ДатаДокумента;
	
	Если ЗначениеЗаполнено(Параметры.Даты) Тогда
		Для ИндексПериода = 0 По Параметры.Даты.ВГраница() Цикл
			НоваяСтрока = ГрафикПроцентныхРасходов.Добавить();
			НоваяСтрока.ДатаНачисления = Параметры.Даты[ИндексПериода];
			НоваяСтрока.СуммаПроцентов = Параметры.Суммы[ИндексПериода];
		КонецЦикла;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.Валюта) Тогда
		Элементы.ГрафикПроцентныхРасходовСуммаПроцентов.Заголовок = СтрШаблон(НСтр("ru='Сумма процентов, %1'"), Параметры.Валюта);
	КонецЕсли;
	
	ТолькоПросмотр = Параметры.ТолькоПросмотр;
	
	ВсегоПроцентов = ГрафикПроцентныхРасходов.Итог("СуммаПроцентов");
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	ТекстВопроса = НСтр("ru = 'Перенести изменения в документ?'");
	
	Оповещение = Новый ОписаниеОповещения("ВопросПередЗакрытиемЗавершение", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыГрафикПлатежей

&НаКлиенте
Процедура ГрафикПроцентныхРасходовПриИзменении(Элемент)
	
	ВсегоПроцентов = ГрафикПроцентныхРасходов.Итог("СуммаПроцентов");
	
КонецПроцедуры

&НаКлиенте
Процедура ГрафикПроцентныхРасходовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Не НоваяСтрока Или Копирование Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ГрафикПроцентныхРасходов.ТекущиеДанные;
	ТекущиеДанные.ДатаНачисления = КонецМесяца(КонецДня(МаксимальнаяДата) + 1);
	
КонецПроцедуры

&НаКлиенте
Процедура ГрафикПроцентныхРасходовПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.ГрафикПроцентныхРасходов.ТекущиеДанные;
	Если Не ЗначениеЗаполнено(ТекущиеДанные.ДатаНачисления)
		Или Не ЗначениеЗаполнено(ТекущиеДанные.СуммаПроцентов) Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГрафикПроцентныхРасходовПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если ОтменаРедактирования Тогда
		Возврат;
	КонецЕсли;
	
	ГрафикПроцентныхРасходов.Сортировать("ДатаНачисления");
	МаксимальнаяДата = ГрафикПроцентныхРасходов[ГрафикПроцентныхРасходов.Количество() - 1].ДатаНачисления;
	
КонецПроцедуры

&НаКлиенте
Процедура ГрафикПроцентныхРасходовДатаНачисленияПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ГрафикПроцентныхРасходов.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.ДатаНачисления)
		И ТекущиеДанные.ДатаНачисления <= ДатаДокумента Тогда
		ТекущиеДанные.ДатаНачисления = '00010101';
		ТекстСообщения = СтрШаблон(НСтр("ru='Дата начисления должна быть позднее %1'"),
			Формат(ДатаДокумента, "ДЛФ=D"));
		ПоказатьПредупреждение(, ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	ПеренестиИзменения();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВопросПередЗакрытиемЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ПеренестиИзменения();
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиИзменения()
	
	Результат = Новый Структура;
	Результат.Вставить("ТипДанных", "ГрафикПроцентныхРасходов");
	Результат.Вставить("Даты", Новый Массив);
	Результат.Вставить("Суммы", Новый Массив);
	Для каждого СтрокаТаблицы Из ГрафикПроцентныхРасходов Цикл
		Результат.Даты.Добавить(СтрокаТаблицы.ДатаНачисления);
		Результат.Суммы.Добавить(СтрокаТаблицы.СуммаПроцентов);
	КонецЦикла;
	
	Модифицированность = Ложь;
	ОповеститьОВыборе(Результат);
	
КонецПроцедуры

#КонецОбласти
