#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 15, 0);
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

Функция СоздатьДокументПоОтчетуЯндекса(АдресХранилища, ПараметрыДокумента, Период) Экспорт
	
	ДанныеФайла = ПолучитьИзВременногоХранилища(АдресХранилища);
		
	Если НЕ ТипЗнч(ДанныеФайла) = Тип("Массив") Тогда
	  	Возврат Неопределено;
	КонецЕсли;
	
	ДанныеДокумента = Неопределено;
	Для Каждого СтраницаОтчета Из ДанныеФайла Цикл
		Если СтраницаОтчета.ВидДокумента = "Яндекс_Доставлено" Тогда
			ДанныеДокумента = СтраницаОтчета.ДанныеДокумента;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ДанныеДокумента = Неопределено Тогда
	  	Возврат Неопределено;
	КонецЕсли;
	   
	Если ПараметрыДокумента.Свойство("Ссылка")
		И ЗначениеЗаполнено(ПараметрыДокумента.Ссылка) Тогда
		НовыйДокумент = ПараметрыДокумента.Ссылка.ПолучитьОбъект();
		НовыйДокумент.ПометкаУдаления = Ложь;
		НовыйДокумент.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		НовыйДокумент.Товары.Очистить();
		НовыйДокумент.СуммаДокумента = 0;
		
	Иначе
		НовыйДокумент = Документы.РеализацияОтгруженныхТоваров.СоздатьДокумент();
		НовыйДокумент.ЧастичнаяПродажа = Истина;
		Если ПараметрыДокумента.Свойство("Ссылка") Тогда
			ЗаполнитьЗначенияСвойств(Новыйдокумент, ПараметрыДокумента, , "Ссылка");
		Иначе
			ЗаполнитьЗначенияСвойств(Новыйдокумент, ПараметрыДокумента);
		КонецЕсли;
		НовыйДокумент.Заполнить(Неопределено);
	КонецЕсли;
	
	ДатаОснования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Новыйдокумент.ДокументОтгрузки, "Дата");
	
	НовыйДокумент.Дата = Период;
		
	Если Не ЗначениеЗаполнено(НовыйДокумент.ДоговорКонтрагента)
		И ЗначениеЗаполнено(НовыйДокумент.Организация)
		И ЗначениеЗаполнено(НовыйДокумент.Контрагент) Тогда
		
		МассивВидовДоговоров = Новый Массив;
		МассивВидовДоговоров.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПокупателем"));
		
		РаботаСДоговорамиКонтрагентовБП.УстановитьДоговорКонтрагента(НовыйДокумент.ДоговорКонтрагента,
			НовыйДокумент.Контрагент, НовыйДокумент.Организация, МассивВидовДоговоров);
		
	КонецЕсли;
	
	ЗаполнитьСчетаУчетаРасчетов(НовыйДокумент);
	Если ДанныеДокумента.Свойство("ТаблицаТоваров") Тогда
		
		МассивПоискаНоменклатуры  = Новый Массив;
		СопоставлениеНоменклатуры = Новый Соответствие;
		
		ТаблицаТоваров = ДанныеДокумента.ТаблицаТоваров;
		
		Обработки.ЗагрузкаОтчетаЯндексМаркет.ДобавитьКолонкуИД(ТаблицаТоваров);
		
		Для Каждого СтрокаТовара Из ТаблицаТоваров Цикл
			СтруктураПоискаНоменклатуры = СопоставлениеНоменклатурыКонтрагентовКлиентСервер.НоваяНоменклатураКонтрагента(НовыйДокумент.Контрагент, СтрокаТовара.ИД);
			СтруктураПоискаНоменклатуры.ИсторияИдентификаторов = СтрокаТовара.ИсторияИдентификаторов;
			МассивПоискаНоменклатуры.Добавить(СтруктураПоискаНоменклатуры);
		КонецЦикла;
		
		МассивНайденнойНоменклатуры   = СопоставлениеНоменклатурыКонтрагентов.НайтиСоответствиеНоменклатуры(Новый Структура("НоменклатураКонтрагента", МассивПоискаНоменклатуры), Ложь);
		
		Для Каждого СтрокаНоменклатуры Из МассивНайденнойНоменклатуры Цикл
			Идентификатор = СтрокаНоменклатуры.НоменклатураКонтрагента.Идентификатор;
			Номенклатура  = СтрокаНоменклатуры.НоменклатураИБ.Номенклатура;
			Если ЗначениеЗаполнено(Номенклатура) Тогда
				СопоставлениеНоменклатуры.Вставить(Идентификатор, Номенклатура);
			КонецЕсли;
		КонецЦикла;
		
		Если ТаблицаТоваров.Количество() = 0 Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Для Каждого СтрокаТовара Из ТаблицаТоваров Цикл
			Если НЕ НачалоМесяца(СтрокаТовара.ДатаПередачи) = НачалоМесяца(ДатаОснования) Тогда
				Продолжить;
			Конецесли;

			Номенклатура = СопоставлениеНоменклатуры.Получить(СтрокаТовара.ИД);
			
			СтрокаДокумента = НовыйДокумент.Товары.Добавить();
			СтрокаДокумента.Номенклатура = Номенклатура;
			СтрокаДокумента.Количество   = СтрокаТовара.Количество;
			СтрокаДокумента.Сумма        = СтрокаТовара.Сумма;
			Если СтрокаТовара.СтавкаНДС = 20 Тогда
				СтрокаДокумента.СтавкаНДС =  Перечисления.СтавкиНДС.НДС20;
			ИначеЕсли  СтрокаТовара.СтавкаНДС = 10 Тогда
				СтрокаДокумента.СтавкаНДС =  Перечисления.СтавкиНДС.НДС10;
			КонецЕсли;
			СтрокаДокумента.НомерЗаказа   = СтрокаТовара.НомерЗаказа;
						
		КонецЦикла;
		
		ДанныеОбъекта = Новый Структура("Дата, Организация, Реализация, ДокументБезНДС, ТипЦен, СуммаВключаетНДС, ВедетсяУчетПрослеживаемыхТоваров");
		ЗаполнитьЗначенияСвойств(ДанныеОбъекта, НовыйДокумент);
		ДанныеОбъекта.Реализация = Истина;
		ДанныеОбъекта.ДокументБезНДС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Новыйдокумент.ДокументОтгрузки, "ДокументБезНДС");
		ДанныеОбъекта.СуммаВключаетНДС = Истина;
		ДанныеОбъекта.ВедетсяУчетПрослеживаемыхТоваров = ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров")
			И ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(НовыйДокумент.Дата);		
		
		Если НовыйДокумент.Товары.Количество() > 0 Тогда
			ЗаполнитьСтрокиТЧЗагрузкаИзФайла(НовыйДокумент.Товары, "Товары", ДанныеОбъекта);
			СчетаУчетаВДокументах.ЗаполнитьСтроки(НовыйДокумент.Товары, "Товары", НовыйДокумент, Документы.РеализацияОтгруженныхТоваров);
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнениеДокументов.Заполнить(НовыйДокумент);
	
	Попытка
		НовыйДокумент.Записать();
	Исключение
		ВызватьИсключение ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	Возврат НовыйДокумент.Ссылка;	
	
КонецФункции

Процедура ЗаполнитьСтрокиТЧЗагрузкаИзФайла(ТаблицаТовары, ИмяТаблицы, ДанныеОбъекта)
	
	СоответствиеСведенийОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОСпискеНоменклатуры(
	ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаТовары, "Номенклатура", Истина), ДанныеОбъекта);
	
	Для Каждого СтрокаТовара Из ТаблицаТовары Цикл
		
		СведенияОНоменклатуре = СоответствиеСведенийОНоменклатуре.Получить(СтрокаТовара.Номенклатура);
		Если СведенияОНоменклатуре <> Неопределено Тогда
			Если Не ЗначениеЗаполнено(СтрокаТовара.СтавкаНДС) Тогда
				СтрокаТовара.СтавкаНДС = СведенияОНоменклатуре.СтавкаНДС;
			КонецЕсли;
		Иначе
			СтрокаТовара.СтавкаНДС = Перечисления.СтавкиНДС.НДС20;
		КонецЕсли;
		
		СтрокаТовара.Цена = ?(СтрокаТовара.Количество = 0, СтрокаТовара.Сумма, Окр(СтрокаТовара.Сумма/СтрокаТовара.Количество, 2, 1));
		
		ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТовара, ДанныеОбъекта.СуммаВключаетНДС);
		
	КонецЦикла;
			
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиОбновления

Функция ТекстЗапросаДанныеДетализацииДоУслуг() Экспорт
	
	Возврат
	"ВЫБРАТЬ
	|	Услуги.НомерСтроки КАК НомерСтроки,
	|	Услуги.СчетРасходов КАК СчетРасходов,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(Услуги.Субконто КАК Справочник.НоменклатурныеГруппы), ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)) КАК НоменклатурнаяГруппа,
	|	Услуги.Номенклатура КАК Услуга,
	|	Услуги.Сумма КАК Сумма
	|ИЗ
	|	Документ.РеализацияОтгруженныхТоваров КАК Регистраторы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Услуги КАК Услуги
	|		ПО Регистраторы.ДокументОтгрузки = Услуги.Ссылка
	|ГДЕ
	|	Регистраторы.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ ПО
	|	СчетРасходов,
	|	НоменклатурнаяГруппа";
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

#Область УстаревшиеПроцедурыИФункции

// Устарела: Следует использовать ЗаполнитьПередЗаписью()
//
Процедура ЗаполнитьСчетаУчетаРасчетов(Объект, СчетУчета = Неопределено) Экспорт
	
	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, Объект.Контрагент, Объект.ДоговорКонтрагента);
	
	Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовПокупателя;
	Объект.СчетУчетаРасчетовПоАвансам     = СчетаУчета.СчетАвансовПокупателя;
	
КонецПроцедуры

#КонецОбласти

#Область СчетаУчета

Процедура УстановитьПравилаЗаполненияСчетовУчета(Правила) Экспорт
	
	// Шапка
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "", "СчетУчетаРасчетовСКонтрагентом", "РасчетыСПокупателем");
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "", "СчетУчетаРасчетовПоАвансам", "АвансыПокупателя");
	
	// Табличная часть Товары
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Товары", "ПереданныеСчетУчета", "ЗапасыОтгруженные");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	
	//   Выручка
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СчетДоходов", "Выручка");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СчетЗапасов", "ПереданныеСчетУчета");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеЗапрещено(Правила, "ОперацииСКомиссионером");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеПроверкиЗаполнения(Правила, "СобственныеЗапасы");
	
	СчетаУчетаВДокументах.ДобавитьУровеньПодчиненности(Правила);
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "Субконто", "ВидДеятельности");
	
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СчетУчетаНДСПоРеализации", "ВыручкаНДС");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "СуммаНДС",  "СуммаНДС");
	
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "СчетРасходов",             "Расходы");
	
	// Данные заполнения
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Дата");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Организация");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Контрагент");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "ДоговорКонтрагента");   
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "СпособЗачетаАвансов");
	
КонецПроцедуры

Функция РеквизитыЗаСсылками(ЧастичнаяПродажа) Экспорт
	
	РеквизитыЗаСсылками = Новый Соответствие;
	
	// Прячутся за "ПорядокУчетаРасчетов"
	Для Каждого ОписаниеРеквизита Из УчетВзаиморасчетовФормы.РеквизитыДокументаПорядокУчетаРасчетов() Цикл
		РеквизитыЗаСсылками.Вставить(ОписаниеРеквизита.Ключ, "ПорядокУчетаРасчетов");
	КонецЦикла;
	
	// Прячутся за "АналитикаУчета"
	АналитикаУчета = Новый Массив;
	Если ЧастичнаяПродажа Тогда
		
		АналитикаУчета.Добавить("Товары.ПереданныеСчетУчета");
		АналитикаУчета.Добавить("Товары.СчетДоходов");
		АналитикаУчета.Добавить("Товары.Субконто");
		АналитикаУчета.Добавить("Товары.СчетУчетаНДСПоРеализации");
		АналитикаУчета.Добавить("Товары.СчетРасходов");
		
	КонецЕсли;
	
	Для Каждого ИмяРеквизита Из АналитикаУчета Цикл
		РеквизитыЗаСсылками.Вставить(ИмяРеквизита, "АналитикаУчета");
	КонецЦикла;
	
	Возврат РеквизитыЗаСсылками;
	
КонецФункции

#КонецОбласти
////////////////////////////////////////////////////////////////////////////////
// ФУНКЦИИ ПОДГОТОВКИ ПАРАМЕТРОВ ПРОВЕДЕНИЯ

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ, ДоговорДляОтложенногоПроведения = Неопределено) Экспорт

	ПараметрыПроведения = Новый Структура;
	
	ЭтоОтложенноеПроведение = ЗначениеЗаполнено(ДоговорДляОтложенногоПроведения);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента();
	Результат = Запрос.Выполнить();
	Реквизиты = ОбщегоНазначенияБПВызовСервера.ПолучитьСтруктуруИзРезультатаЗапроса(Результат);
	
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	Реквизиты.Вставить("ОрганизацияПрименяетУСН",
		УчетнаяПолитика.СистемаНалогообложения(Реквизиты.Организация, Реквизиты.Период) = Перечисления.СистемыНалогообложения.Упрощенная);
	Реквизиты.Вставить("ПлательщикЕНВД", УчетнаяПолитика.ПлательщикЕНВД(Реквизиты.Организация, Реквизиты.Период));
	Реквизиты.Вставить("ВалютаРеглУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Реквизиты.Вставить("ЭтоОтложенноеПроведение", ЭтоОтложенноеПроведение);
	
	Если ТипЗнч(Реквизиты.ДокументОтгрузки) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		НачислятьНДСПоОтгрузке = 
			УчетнаяПолитика.НачислятьНДСПоОтгрузке(Реквизиты.Организация, Реквизиты.Период);
		СпособЗачетаАвансов = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Реквизиты.ДокументОтгрузки, "СпособЗачетаАвансов");
		ПриОтгрузкеЗачтенАванс = СпособЗачетаАвансов <> Перечисления.СпособыЗачетаАвансов.НеЗачитывать;
	Иначе
		НачислятьНДСПоОтгрузке = 
			УчетнаяПолитика.НачислятьНДСПриПередачеНедвижимости(Реквизиты.Организация, Реквизиты.Период);
		ПриОтгрузкеЗачтенАванс = Ложь;
	КонецЕсли;
	Реквизиты.Вставить("НачислятьНДСПоОтгрузке", НачислятьНДСПоОтгрузке);
	Запрос.УстановитьПараметр("ПриОтгрузкеЗачтенАванс", ПриОтгрузкеЗачтенАванс);
	
	Если Реквизиты.ВалютаВзаиморасчетов = Реквизиты.ВалютаРеглУчета Тогда
		Реквизиты.Вставить("КурсДокумента",      1);
		Реквизиты.Вставить("КратностьДокумента", 1);
		КоэффициентРуб = 1;
	Иначе
		СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Реквизиты.ВалютаДокумента, Реквизиты.Период);
		Реквизиты.Вставить("КурсДокумента",      СтруктураКурса.Курс);
		Реквизиты.Вставить("КратностьДокумента", СтруктураКурса.Кратность);
		КоэффициентРуб = СтруктураКурса.Курс / СтруктураКурса.Кратность;
	КонецЕсли;
	
	Если Реквизиты.ВалютаВзаиморасчетов = Реквизиты.ВалютаДокумента Тогда
		Реквизиты.Вставить("КурсВзаиморасчетов",      1);
		Реквизиты.Вставить("КратностьВзаиморасчетов", 1);
		КоэффициентВзаиморасчетов = 1;
	Иначе
		СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Реквизиты.ВалютаВзаиморасчетов, Реквизиты.ДатаОтгрузки);
		Реквизиты.Вставить("КурсВзаиморасчетов",      СтруктураКурса.Курс); 
		Реквизиты.Вставить("КратностьВзаиморасчетов", СтруктураКурса.Кратность);
		КоэффициентВзаиморасчетов = (СтруктураКурса.Курс / СтруктураКурса.Кратность) / КоэффициентРуб;
	КонецЕсли;
    		
	Запрос.УстановитьПараметр("ВалютаРеглУчета",              Реквизиты.ВалютаРеглУчета);
	Запрос.УстановитьПараметр("ДеятельностьНаПатенте",        Реквизиты.ДеятельностьНаПатенте);
	Запрос.УстановитьПараметр("ДеятельностьНаТорговомСборе",  Реквизиты.ДеятельностьНаТорговомСборе);
	Запрос.УстановитьПараметр("СинонимТовары",                НСтр("ru = 'Товары'"));
	Запрос.УстановитьПараметр("СинонимТара",                  НСтр("ru = 'Возвратная тара'"));
	Запрос.УстановитьПараметр("Субсчета91",    БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ПрочиеРасходы));
	
	Запрос.УстановитьПараметр("ОрганизацияПрименяетУСН",  Реквизиты.ОрганизацияПрименяетУСН);
	Запрос.УстановитьПараметр("ОрганизацияПрименяетУСНПатент",   УчетнаяПолитика.ПрименяетсяУСНПатент(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("УчитыватьЗадолженностьУСНПатент",
		УчетПСН.УчитыватьЗадолженностьПоДеятельностиНаПатенте(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("НачислятьНДСПоОтгрузке",   Реквизиты.НачислятьНДСПоОтгрузке);
	Запрос.УстановитьПараметр("ДокументОтгрузки",   	  Реквизиты.ДокументОтгрузки);
	Запрос.УстановитьПараметр("ДатаРеализации",   	   	  Реквизиты.Период);
	Запрос.УстановитьПараметр("ЧастичнаяПродажа", 	   	  Реквизиты.ЧастичнаяПродажа);
	Запрос.УстановитьПараметр("ПодразделениеОрганизации", Реквизиты.ПодразделениеОрганизации);
	Запрос.УстановитьПараметр("СчетРасчетов", 			  Реквизиты.СчетУчетаРасчетовСКонтрагентом);
	Запрос.УстановитьПараметр("СчетАвансов", 			  Реквизиты.СчетУчетаРасчетовПоАвансам);
	Запрос.УстановитьПараметр("С2013Года", 		    	  Реквизиты.ДатаОтгрузки >= '20130101');
	Запрос.УстановитьПараметр("СчетВыручка",              ПланыСчетов.Хозрасчетный.Выручка);
	Запрос.УстановитьПараметр("ЗаполнятьДокументРасчетов", 
		РегистрыНакопления.РеализованныеТоварыКомитентов.ЗаполнятьДокументРасчетов(Реквизиты.Период));

	ПодготовитьТаблицыДокументаДляЦелейПриобретенияРеализации(Запрос, Реквизиты, Отказ);
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаТаблицыДокумента(НомераТаблиц)	
		+ ТекстЗапросаСписаниеТоваров(НомераТаблиц, ПараметрыПроведения, Реквизиты)				
		+ ТекстЗапросаЗачетАвансов(НомераТаблиц)				
		+ ТекстЗапросаРеализация(НомераТаблиц, ПараметрыПроведения, Реквизиты)					
		+ ТекстЗапросаЗачетАвансовКомитентов(НомераТаблиц, ПараметрыПроведения, Реквизиты)		
		+ ТекстЗапросаПереоценкаТоваровВРознице(НомераТаблиц, ПараметрыПроведения, Реквизиты)	
		+ ТекстЗапросаРеализацияУслуг(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаСписаниеОстаточнойСтоимостиОС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаТоварыНДС(НомераТаблиц, ПараметрыПроведения, Реквизиты)					
		+ ТекстЗапросаПереоценкаВалютныхОстатков(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаРеквизитыПереносЗадолженностиДебиторскаяЗадолженность(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаРегистрацияОтложенныхРасчетовСКонтрагентами(НомераТаблиц, ПараметрыПроведения, Реквизиты);
		
	Результат = Запрос.ВыполнитьПакет();
	
	Для Каждого КлючИЗначение Из НомераТаблиц Цикл
	
		ПараметрыПроведения.Вставить(КлючИЗначение.Ключ, Результат[КлючИЗначение.Значение].Выгрузить());
	
	КонецЦикла; 
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Процедура ПодготовитьТаблицыДокументаДляЦелейПриобретенияРеализации(Запрос, Реквизиты, Отказ)
	
	ТекстЗапроса = "";
	
	Если Реквизиты.ПлательщикЕНВД Тогда
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	СчетаДоходовИРасходовЕНВД.Счет КАК Счет
		|ПОМЕСТИТЬ СчетаЕНВД
		|ИЗ
		|	РегистрСведений.СчетаДоходовИРасходовЕНВД КАК СчетаДоходовИРасходовЕНВД
		|ГДЕ
		|	СчетаДоходовИРасходовЕНВД.Счет В ИЕРАРХИИ(&СчетВыручка)
		|	И НЕ СчетаДоходовИРасходовЕНВД.Счет.ЗапретитьИспользоватьВПроводках";
	Иначе
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	NULL КАК Счет
		|ПОМЕСТИТЬ СчетаЕНВД
		|ГДЕ
		|	ЛОЖЬ";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ТаблицаСУчетомВозврата.Номенклатура КАК Номенклатура,
	|	СУММА(ТаблицаСУчетомВозврата.Количество) КАК Количество,
	|	ТаблицаСУчетомВозврата.ПереданныеСчетУчета КАК ПереданныеСчетУчета,
	|	ТаблицаСУчетомВозврата.Цена КАК Цена,
	|	МАКСИМУМ(ТаблицаСУчетомВозврата.НомерСтроки) КАК НомерСтроки,
	|	СУММА(ТаблицаСУчетомВозврата.Сумма) КАК Сумма,
	|	СУММА(ТаблицаСУчетомВозврата.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ТаблицаСУчетомВозврата.Себестоимость) КАК Себестоимость
	|ПОМЕСТИТЬ ТаблицаСУчетомВозврата
	|ИЗ
	|	(ВЫБРАТЬ
	|		РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|		РеализацияТоваровУслугТовары.НомерСтроки КАК НомерСтроки,
	|		РеализацияТоваровУслугТовары.ПереданныеСчетУчета КАК ПереданныеСчетУчета,
	|		РеализацияТоваровУслугТовары.Цена КАК Цена,
	|		РеализацияТоваровУслугТовары.Количество КАК Количество,
	|		РеализацияТоваровУслугТовары.Сумма КАК Сумма,
	|		РеализацияТоваровУслугТовары.СуммаНДС КАК СуммаНДС,
	|		РеализацияТоваровУслугТовары.Себестоимость КАК Себестоимость
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|	ГДЕ
	|		РеализацияТоваровУслугТовары.Ссылка = &ДокументОтгрузки
	|		И НЕ &ЧастичнаяПродажа
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВозвратТоваровОтПокупателяТовары.Номенклатура,
	|		0,
	|		ВозвратТоваровОтПокупателяТовары.ПереданныеСчетУчета,
	|		ВозвратТоваровОтПокупателяТовары.Цена,
	|		-ВозвратТоваровОтПокупателяТовары.Количество,
	|		-ВозвратТоваровОтПокупателяТовары.Сумма,
	|		-ВозвратТоваровОтПокупателяТовары.СуммаНДС,
	|		-ВозвратТоваровОтПокупателяТовары.Себестоимость
	|	ИЗ
	|		Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	|	ГДЕ
	|		ВозвратТоваровОтПокупателяТовары.Ссылка.Сделка = &ДокументОтгрузки
	|		И ВозвратТоваровОтПокупателяТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВозвратТоваровОтПокупателя.ОтгруженныеТовары)
	|		И ВозвратТоваровОтПокупателяТовары.Ссылка.Проведен
	|		И НЕ &ЧастичнаяПродажа
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РеализацияОтгруженныхТоваровТовары.Номенклатура,
	|		0,
	|		РеализацияОтгруженныхТоваровТовары.ПереданныеСчетУчета,
	|		РеализацияОтгруженныхТоваровТовары.Цена,
	|		-РеализацияОтгруженныхТоваровТовары.Количество,
	|		-РеализацияОтгруженныхТоваровТовары.Сумма,
	|		-РеализацияОтгруженныхТоваровТовары.СуммаНДС,
	|		-0
	|	ИЗ
	|		Документ.РеализацияОтгруженныхТоваров.Товары КАК РеализацияОтгруженныхТоваровТовары
	|	ГДЕ
	|		РеализацияОтгруженныхТоваровТовары.Ссылка.ДокументОтгрузки = &ДокументОтгрузки
	|		И РеализацияОтгруженныхТоваровТовары.Ссылка <> &Ссылка
	|		И РеализацияОтгруженныхТоваровТовары.Ссылка.Проведен
	|		И НЕ &ЧастичнаяПродажа) КАК ТаблицаСУчетомВозврата
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСУчетомВозврата.Номенклатура,
	|	ТаблицаСУчетомВозврата.ПереданныеСчетУчета,
	|	ТаблицаСУчетомВозврата.Цена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Ссылка КАК Ссылка,
	|	ТаблицаТовары.Ссылка КАК ДокументОтгрузки,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.ПереданныеСчетУчета КАК СчетУчета,
	|	ТаблицаТовары.ПереданныеСчетУчета.Забалансовый КАК ЭтоКомиссия,
	|	ТаблицаТовары.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	ТаблицаТовары.СчетДоходов КАК СчетДоходов,
	|	ВЫБОР
	|		КОГДА СчетаЕНВД.Счет ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ДоходЕНВД,
	|	ТаблицаТовары.СчетРасходов КАК СчетРасходов,
	|	ТаблицаТовары.Субконто КАК Субконто,
	|	ЕСТЬNULL(КлассификаторТНВЭД.СырьевойТовар, ЛОЖЬ) КАК СырьевойТовар,
	|	СправочникНоменклатура.КодРаздел7ДекларацииНДС КАК КодРаздел7ДекларацииНДС,
	|	ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ОперацияНеПодлежитНалогообложению, ЛОЖЬ) КАК КодСоответствуетСт149НКРФ,
	|	ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ВключаетсяВРеестрПодтверждающихДокументов, ЛОЖЬ) КАК КодВключаетсяВРеестр,
	|	ТаблицаСУчетомВозврата.Количество КАК Количество,
	|	ТаблицаСУчетомВозврата.Сумма КАК Сумма,
	|	ТаблицаСУчетомВозврата.СуммаНДС КАК НДС,
	|	ТаблицаСУчетомВозврата.Себестоимость КАК Себестоимость
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаЕНВД КАК СчетаЕНВД
	|		ПО ТаблицаТовары.СчетДоходов = СчетаЕНВД.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
	|			ПО СправочникНоменклатура.КодТНВЭД = КлассификаторТНВЭД.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КодыОперацийРаздела7ДекларацииПоНДС КАК КодыОперацийРаздела7ДекларацииПоНДС
	|			ПО СправочникНоменклатура.КодРаздел7ДекларацииНДС = КодыОперацийРаздела7ДекларацииПоНДС.Ссылка
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСУчетомВозврата КАК ТаблицаСУчетомВозврата
	|		ПО (ТаблицаСУчетомВозврата.Номенклатура = ТаблицаТовары.Номенклатура)
	|			И (ТаблицаСУчетомВозврата.НомерСтроки = ТаблицаТовары.НомерСтроки)
	|			И (ТаблицаСУчетомВозврата.ПереданныеСчетУчета = ТаблицаТовары.ПереданныеСчетУчета)
	|			И (ТаблицаСУчетомВозврата.Цена = ТаблицаТовары.Цена)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОтгрузки
	|	И ТаблицаСУчетомВозврата.Количество > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка,
	|	ТаблицаТовары.Ссылка.ДокументОтгрузки,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.СтавкаНДС,
	|	ТаблицаТовары.ПереданныеСчетУчета,
	|	ТаблицаТовары.ПереданныеСчетУчета.Забалансовый,
	|	ТаблицаТовары.СчетУчетаНДСПоРеализации,
	|	ТаблицаТовары.СчетДоходов,
	|	ВЫБОР
	|		КОГДА СчетаЕНВД.Счет ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ТаблицаТовары.СчетРасходов,
	|	ТаблицаТовары.Субконто,
	|	ЕСТЬNULL(КлассификаторТНВЭД.СырьевойТовар, ЛОЖЬ),
	|	СправочникНоменклатура.КодРаздел7ДекларацииНДС,
	|	ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ОперацияНеПодлежитНалогообложению, ЛОЖЬ),
	|	ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ВключаетсяВРеестрПодтверждающихДокументов, ЛОЖЬ),
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.Сумма,
	|	ТаблицаТовары.СуммаНДС,
	|	0
	|ИЗ
	|	Документ.РеализацияОтгруженныхТоваров.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаЕНВД КАК СчетаЕНВД
	|		ПО ТаблицаТовары.СчетДоходов = СчетаЕНВД.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
	|			ПО СправочникНоменклатура.КодТНВЭД = КлассификаторТНВЭД.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КодыОперацийРаздела7ДекларацииПоНДС КАК КодыОперацийРаздела7ДекларацииПоНДС
	|			ПО СправочникНоменклатура.КодРаздел7ДекларацииНДС = КодыОперацийРаздела7ДекларацииПоНДС.Ссылка
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Количество > 0
	|	И &ЧастичнаяПродажа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Ссылка КАК Ссылка,
	|	ТаблицаУслуги.Ссылка КАК ДокументОтгрузки,
	|	ТаблицаУслуги.НомерСтроки КАК НомерСтроки,
	|	ТаблицаУслуги.Номенклатура КАК Номенклатура,
	|	ТаблицаУслуги.Количество КАК Количество,
	|	ТаблицаУслуги.Сумма КАК Сумма,
	|	ТаблицаУслуги.СуммаНДС КАК НДС,
	|	ТаблицаУслуги.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаУслуги.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	ТаблицаУслуги.СчетДоходов КАК СчетДоходов,
	|	ВЫБОР
	|		КОГДА СчетаЕНВД.Счет ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ДоходЕНВД,
	|	ТаблицаУслуги.СчетРасходов КАК СчетРасходов,
	|	ТаблицаУслуги.Субконто КАК Субконто,
	|	ЛОЖЬ КАК СырьевойТовар,
	|	ЕСТЬNULL(СправочникНоменклатура.КодРаздел7ДекларацииНДС, ЛОЖЬ) КАК КодРаздел7ДекларацииНДС,
	|	ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ОперацияНеПодлежитНалогообложению, ЛОЖЬ) КАК КодСоответствуетСт149НКРФ,
	|	ЕСТЬNULL(КодыОперацийРаздела7ДекларацииПоНДС.ВключаетсяВРеестрПодтверждающихДокументов, ЛОЖЬ) КАК КодВключаетсяВРеестр
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Услуги КАК ТаблицаУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаЕНВД КАК СчетаЕНВД
	|		ПО ТаблицаУслуги.СчетДоходов = СчетаЕНВД.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
	|			ПО СправочникНоменклатура.КодТНВЭД = КлассификаторТНВЭД.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КодыОперацийРаздела7ДекларацииПоНДС КАК КодыОперацийРаздела7ДекларацииПоНДС
	|			ПО СправочникНоменклатура.КодРаздел7ДекларацииНДС = КодыОперацийРаздела7ДекларацииПоНДС.Ссылка
	|		ПО ТаблицаУслуги.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТаблицаУслуги.Ссылка = &ДокументОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Ссылка КАК Ссылка,
	|	ТаблицаОС.Ссылка КАК Регистратор,
	|	ТаблицаОС.Ссылка КАК ДокументОтгрузки,
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.Сумма КАК Сумма,
	|	ТаблицаОС.СуммаНДС КАК НДС,
	|	ТаблицаОС.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаОС.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	ТаблицаОС.СчетДоходов КАК СчетДоходов,
	|	ТаблицаОС.СчетРасходов КАК СчетРасходов,
	|	ТаблицаОС.Субконто КАК Субконто
	|ИЗ
	|	Документ.ПередачаОС.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &ДокументОтгрузки";
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаТовары = РезультатЗапроса[2].Выгрузить();
	ТаблицаУслуги = РезультатЗапроса[3].Выгрузить();
	ТаблицаОС     = РезультатЗапроса[4].Выгрузить();
	
	Если ТаблицаТовары.Количество() = 0 И ТаблицаОС.Количество() = 0 Тогда
		Отказ = Истина;
		ТекстСообщения = СтрШаблон(
			НСтр("ru='По документу отгрузки %1 все отгруженные товары уже реализованы или возвращены.
			|Отражение в учете перехода права собственности не требуется.'"),
			Реквизиты.ДокументОтгрузки);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , "Объект.ДокументОтгрузки");
	КонецЕсли;
	
	УчетВзаиморасчетов.ПодготовкаТаблицыЗначенийДляЦелейПриобретенияИРеализации(ТаблицаТовары, Реквизиты);
	УчетВзаиморасчетов.ПодготовкаТаблицыЗначенийДляЦелейПриобретенияИРеализации(ТаблицаУслуги, Реквизиты);
	УчетВзаиморасчетов.ПодготовкаТаблицыЗначенийДляЦелейПриобретенияИРеализации(ТаблицаОС, Реквизиты);
	
	Запрос.УстановитьПараметр("ТаблицаТовары", ТаблицаТовары);
	Запрос.УстановитьПараметр("ТаблицаУслуги", ТаблицаУслуги);
	Запрос.УстановитьПараметр("ТаблицаОС", ТаблицаОС);
	
КонецПроцедуры

Функция ТекстЗапросаРеквизитыДокумента()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ДокументОтгрузки.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДокументОтгрузки КАК ДокументОтгрузки,
	|	Реквизиты.ДокументОтгрузки.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	Реквизиты.ДокументОтгрузки.Дата КАК ДатаОтгрузки,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетУчетаРасчетовПоАвансам,
	|	Реквизиты.ДокументОтгрузки.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.ЧастичнаяПродажа КАК ЧастичнаяПродажа,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.ДокументОтгрузки.КурсВзаиморасчетов КАК КурсДокументаОтгрузки,
	|	Реквизиты.ДокументОтгрузки.КратностьВзаиморасчетов КАК КратностьДокументаОтгрузки,
	|	ЕСТЬNULL(Реквизиты.ДокументОтгрузки.ДеятельностьНаТорговомСборе, ЛОЖЬ) КАК ДеятельностьНаТорговомСборе,
	|	ЕСТЬNULL(Реквизиты.ДокументОтгрузки.ДеятельностьНаПатенте, ЛОЖЬ) КАК ДеятельностьНаПатенте,
	|	Реквизиты.ДокументОтгрузки.Патент КАК Патент,
	|	Реквизиты.СпособЗачетаАвансов КАК СпособЗачетаАвансов,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.СпособДоставки.ОплатаПриПолучении, ЛОЖЬ) КАК ОплатаПриПолучении
	|ИЗ
	|	Документ.РеализацияОтгруженныхТоваров КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО Реквизиты.ДокументОтгрузки = РеализацияТоваровУслуг.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции 

Функция ТекстЗапросаТаблицыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("ВТ_ТаблицаТовары", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_ТаблицаУслуги", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_ТаблицаОС", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.ДокументОтгрузки КАК ДокументОтгрузки,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.СуммаВал КАК СуммаСНДС,
	|	ТаблицаТовары.НДСВал КАК СуммаНДС,
	|	ТаблицаТовары.СуммаВал КАК СуммаВзаиморасчетов,
	|	ТаблицаТовары.Сумма КАК СуммаРуб,
	|	ТаблицаТовары.НДС КАК СуммаНДСРуб,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ТаблицаТовары.ЭтоКомиссия КАК ЭтоКомиссия,
	|	ТаблицаТовары.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	ТаблицаТовары.СчетДоходов КАК СчетДоходов,
	|	ТаблицаТовары.ДоходЕНВД КАК ДоходЕНВД,
	|	ТаблицаТовары.СчетРасходов КАК СчетРасходов,
	|	ТаблицаТовары.Субконто КАК Субконто,
	|	ТаблицаТовары.Себестоимость КАК Себестоимость,
	|	ТаблицаТовары.СырьевойТовар КАК СырьевойТовар,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ДоходЕНВД
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийРаздела7ДекларацииПоНДС.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаТовары.КодРаздел7ДекларацииНДС
	|	КОНЕЦ КАК КодРаздел7ДекларацииНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ДоходЕНВД
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ТаблицаТовары.КодСоответствуетСт149НКРФ
	|	КОНЕЦ КАК КодСоответствуетСт149НКРФ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ДоходЕНВД
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ТаблицаТовары.КодВключаетсяВРеестр
	|	КОНЕЦ КАК КодВключаетсяВРеестр
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаУслуги.Ссылка КАК Ссылка,
	|	ТаблицаУслуги.ДокументОтгрузки КАК ДокументОтгрузки,
	|	ТаблицаУслуги.НомерСтроки КАК НомерСтроки,
	|	ТаблицаУслуги.Номенклатура КАК Номенклатура,
	|	ТаблицаУслуги.Количество КАК Количество,
	|	ТаблицаУслуги.СуммаВал КАК СуммаСНДС,
	|	ТаблицаУслуги.НДСВал КАК СуммаНДС,
	|	ТаблицаУслуги.СуммаВал КАК СуммаВзаиморасчетов,
	|	ТаблицаУслуги.Сумма КАК СуммаРуб,
	|	ТаблицаУслуги.НДС КАК СуммаНДСРуб,
	|	ТаблицаУслуги.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаУслуги.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	ТаблицаУслуги.СчетДоходов КАК СчетДоходов,
	|	ТаблицаУслуги.ДоходЕНВД КАК ДоходЕНВД,
	|	ТаблицаУслуги.СчетРасходов КАК СчетРасходов,
	|	ТаблицаУслуги.Субконто КАК Субконто,
	|	ТаблицаУслуги.СырьевойТовар КАК СырьевойТовар,
	|	ВЫБОР
	|		КОГДА ТаблицаУслуги.ДоходЕНВД
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийРаздела7ДекларацииПоНДС.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаУслуги.КодРаздел7ДекларацииНДС
	|	КОНЕЦ КАК КодРаздел7ДекларацииНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаУслуги.ДоходЕНВД
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ТаблицаУслуги.КодСоответствуетСт149НКРФ
	|	КОНЕЦ КАК КодСоответствуетСт149НКРФ,
	|	ВЫБОР
	|		КОГДА ТаблицаУслуги.ДоходЕНВД
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ТаблицаУслуги.КодВключаетсяВРеестр
	|	КОНЕЦ КАК КодВключаетсяВРеестр
	|ПОМЕСТИТЬ ТаблицаУслуги
	|ИЗ
	|	&ТаблицаУслуги КАК ТаблицаУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.Ссылка КАК Ссылка,
	|	ТаблицаОС.Ссылка КАК Регистратор,
	|	ТаблицаОС.ДокументОтгрузки КАК ДокументОтгрузки,
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.СуммаВал КАК СуммаСНДС,
	|	ТаблицаОС.НДСВал КАК СуммаНДС,
	|	ТаблицаОС.СуммаВал КАК СуммаВзаиморасчетов,
	|	ТаблицаОС.Сумма КАК СуммаРуб,
	|	ТаблицаОС.НДС КАК СуммаНДСРуб,
	|	ТаблицаОС.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаОС.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	ТаблицаОС.СчетДоходов КАК СчетДоходов,
	|	ТаблицаОС.СчетРасходов КАК СчетРасходов,
	|	ТаблицаОС.Субконто КАК Субконто
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаСписаниеТоваров(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение Тогда
		ПараметрыПроведения.Вставить("СписаниеТоваровШапка", Неопределено);
		ПараметрыПроведения.Вставить("СписаниеТоваровТовары", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("СписаниеТоваровШапка", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СписаниеТоваровТовары", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	&ДатаРеализации КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	&ПодразделениеОрганизации КАК Подразделение,
	|	&ПодразделениеОрганизации КАК КорПодразделение,
	|	""Реализация отгруженных товаров (продукции)"" КАК Содержание
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОтгрузки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка,
	|	&ДатаРеализации,
	|	Реквизиты.Организация,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|	Реквизиты.Контрагент,
	|	&ПодразделениеОрганизации,
	|	&ПодразделениеОрганизации,
	|	""Передача ОС""
	|ИЗ
	|	Документ.ПередачаОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Товары"" КАК ИмяСписка,
	|	&СинонимТовары КАК СинонимСписка,
	|	&ДатаРеализации КАК Период,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	Реквизиты.Склад КАК Склад,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОприходования,
	|	ТаблицаТовары.Себестоимость КАК Себестоимость,
	|	ТаблицаТовары.Количество КАК Количество,
	|	Реквизиты.ПодразделениеОрганизации КАК КорПодразделение,
	|	НЕОПРЕДЕЛЕНО КАК Комитент,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКомиссии,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетАвансовСКомитентом,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетРасчетовСКомитентом,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаРасчетовСКомитентом,
	|	0 КАК СуммаРасчетовСКомитентом,
	|	ТаблицаТовары.СчетРасходов КАК КорСчетСписания,
	|	ТаблицаТовары.Субконто КАК КорСубконто1,
	|	НЕОПРЕДЕЛЕНО КАК КорСубконто2,
	|	НЕОПРЕДЕЛЕНО КАК КорСубконто3,
	|	1 КАК ВидКорСубконто1,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконто2,
	|	НЕОПРЕДЕЛЕНО КАК ВидКорСубконто3
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Реквизиты
	|		ПО ТаблицаТовары.ДокументОтгрузки = Реквизиты.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИмяСписка,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаЗачетАвансов(НомераТаблиц)

	НомераТаблиц.Вставить("ЗачетАвансовШапка", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовТаблицаДокумента", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовАвансы", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРеализацияТоваров.ОтгрузкаБезПереходаПраваСобственности) КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ДокументОтгрузки.ВалютаДокумента КАК ВалютаДокумента,
	|	ВЫБОР
	|		КОГДА &НачислятьНДСПоОтгрузке
	|				И (ДоговорыКонтрагентов.РасчетыВУсловныхЕдиницах
	|					ИЛИ &ПриОтгрузкеЗачтенАванс)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаАвансов.ПоДокументу)
	|		ИНАЧЕ Реквизиты.СпособЗачетаАвансов
	|	КОНЕЦ КАК СпособЗачетаАвансов,
	|	&ОрганизацияПрименяетУСН КАК УчитыватьЗадолженностьУСН,
	|	&УчитыватьЗадолженностьУСНПатент КАК УчитыватьЗадолженностьУСНПатент,
	|	&ДеятельностьНаТорговомСборе КАК ДеятельностьНаТорговомСборе,
	|	&ДеятельностьНаПатенте КАК ДеятельностьНаПатенте,
	|	""Выбытие"" КАК НаправлениеДвижения,
	|	ЛОЖЬ КАК ЭтоВозврат
	|ИЗ
	|	Документ.РеализацияОтгруженныхТоваров КАК Реквизиты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО Реквизиты.ДоговорКонтрагента = ДоговорыКонтрагентов.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.ДокументОтгрузки КАК ДокументРасчетов,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетРасчетов,
	|	ВЫБОР
	|		КОГДА &НачислятьНДСПоОтгрузке
	|				И (ДоговорыКонтрагентов.РасчетыВУсловныхЕдиницах
	|					ИЛИ &ПриОтгрузкеЗачтенАванс)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ДоговорыКонтрагентов.РасчетыВУсловныхЕдиницах, ЛОЖЬ)
	|						ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВСчетОтгрузкиУЕ)
	|					КОГДА ЕСТЬNULL(ДоговорыКонтрагентов.ОплатаВВалюте, ЛОЖЬ)
	|						ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВСчетОтгрузкиВал)
	|					ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВСчетОтгрузкиРуб)
	|				КОНЕЦ
	|		ИНАЧЕ Реквизиты.СчетУчетаРасчетовПоАвансам
	|	КОНЕЦ КАК СчетАвансов,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДоговорыКонтрагентов.ВидДоговора КАК ВидДоговора,
	|	ДоговорыКонтрагентов.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДоговорыКонтрагентов.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	ДоговорыКонтрагентов.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	ВЫБОР
	|		КОГДА ДоговорыКонтрагентов.ВалютаВзаиморасчетов = &ВалютаРеглУчета
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК РасчетыВВалюте,
	|	&ПодразделениеОрганизации КАК Подразделение,
	|	СУММА(ТаблицыДокумента.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	|	СУММА(ТаблицыДокумента.СуммаРуб) КАК СуммаРуб,
	|	СУММА(ТаблицыДокумента.СуммаВзаиморасчетовКомитента) КАК СуммаВзаиморасчетовКомитента,
	|	СУММА(ТаблицыДокумента.СуммаВзаиморасчетовЕНВД) КАК СуммаВзаиморасчетовЕНВД,
	|	СУММА(ТаблицыДокумента.СуммаВзаиморасчетовПатент) КАК СуммаВзаиморасчетовПатент,
	|	СУММА(ТаблицыДокумента.СуммаВзаиморасчетовТорговыйСбор) КАК СуммаВзаиморасчетовТорговыйСбор
	|ИЗ
	|	Документ.РеализацияОтгруженныхТоваров КАК Реквизиты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТаблицаТовары.Ссылка КАК Ссылка,
	|			ТаблицаТовары.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|			ТаблицаТовары.СуммаРуб КАК СуммаРуб,
	|			ВЫБОР
	|				КОГДА ТаблицаТовары.ЭтоКомиссия
	|					ТОГДА ТаблицаТовары.СуммаВзаиморасчетов
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК СуммаВзаиморасчетовКомитента,
	|			ВЫБОР
	|				КОГДА НЕ ТаблицаТовары.ЭтоКомиссия
	|						И НЕ &ДеятельностьНаПатенте
	|						И НЕ &ДеятельностьНаТорговомСборе
	|						И ТаблицаТовары.ДоходЕНВД
	|					ТОГДА ТаблицаТовары.СуммаВзаиморасчетов
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК СуммаВзаиморасчетовЕНВД,
	|			ВЫБОР
	|				КОГДА НЕ ТаблицаТовары.ЭтоКомиссия
	|						И &ДеятельностьНаПатенте
	|						И НЕ &ДеятельностьНаТорговомСборе
	|					ТОГДА ТаблицаТовары.СуммаВзаиморасчетов
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК СуммаВзаиморасчетовПатент,
	|			ВЫБОР
	|				КОГДА НЕ ТаблицаТовары.ЭтоКомиссия
	|						И НЕ &ДеятельностьНаПатенте
	|						И &ДеятельностьНаТорговомСборе
	|					ТОГДА ТаблицаТовары.СуммаВзаиморасчетов
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК СуммаВзаиморасчетовТорговыйСбор
	|		ИЗ
	|			ТаблицаТовары КАК ТаблицаТовары
	|
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ТаблицаУслуги.Ссылка КАК Ссылка,
	|			ТаблицаУслуги.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|			ТаблицаУслуги.СуммаРуб КАК СуммаРуб,
	|			0 КАК СуммаВзаиморасчетовКомитента,
	|			ВЫБОР
	|				КОГДА НЕ &ДеятельностьНаПатенте
	|						И НЕ &ДеятельностьНаТорговомСборе
	|						И ТаблицаУслуги.ДоходЕНВД
	|					ТОГДА ТаблицаУслуги.СуммаВзаиморасчетов
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК СуммаВзаиморасчетовЕНВД,
	|			ВЫБОР
	|				КОГДА &ДеятельностьНаПатенте
	|						И НЕ &ДеятельностьНаТорговомСборе
	|					ТОГДА ТаблицаУслуги.СуммаВзаиморасчетов
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК СуммаВзаиморасчетовПатент,
	|			ВЫБОР
	|				КОГДА НЕ &ДеятельностьНаПатенте
	|						И &ДеятельностьНаТорговомСборе
	|					ТОГДА ТаблицаУслуги.СуммаВзаиморасчетов
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК СуммаВзаиморасчетовТорговыйСбор
	|		ИЗ
	|			ТаблицаУслуги КАК ТаблицаУслуги
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ТаблицаОС.Ссылка,
	|			ТаблицаОС.СуммаВзаиморасчетов,
	|			ТаблицаОС.СуммаРуб,
	|			0,
	|			0,
	|			0,
	|			0
	|		ИЗ
	|			ТаблицаОС КАК ТаблицаОС) КАК ТаблицыДокумента
	|		ПО Реквизиты.Ссылка = ТаблицыДокумента.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО Реквизиты.ДоговорКонтрагента = ДоговорыКонтрагентов.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Реквизиты.Ссылка,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	ДоговорыКонтрагентов.ВидДоговора,
	|	ДоговорыКонтрагентов.ВалютаВзаиморасчетов,
	|	ДоговорыКонтрагентов.РасчетыВУсловныхЕдиницах,
	|	ДоговорыКонтрагентов.УчетАгентскогоНДС,
	|	Реквизиты.ДокументОтгрузки,
	|	ВЫБОР
	|		КОГДА &НачислятьНДСПоОтгрузке
	|				И (ДоговорыКонтрагентов.РасчетыВУсловныхЕдиницах
	|					ИЛИ &ПриОтгрузкеЗачтенАванс)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ДоговорыКонтрагентов.РасчетыВУсловныхЕдиницах, ЛОЖЬ)
	|						ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВСчетОтгрузкиУЕ)
	|					КОГДА ЕСТЬNULL(ДоговорыКонтрагентов.ОплатаВВалюте, ЛОЖЬ)
	|						ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВСчетОтгрузкиВал)
	|					ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВСчетОтгрузкиРуб)
	|				КОНЕЦ
	|		ИНАЧЕ Реквизиты.СчетУчетаРасчетовПоАвансам
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗачетАвансов.НомерСтроки КАК НомерСтроки,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетАвансов,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ТаблицаЗачетАвансов.ДокументАванса КАК ДокументАванса,
	|	ТаблицаЗачетАвансов.СуммаЗачета КАК СуммаЗачета
	|ИЗ
	|	Документ.РеализацияОтгруженныхТоваров.ЗачетАвансов КАК ТаблицаЗачетАвансов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияОтгруженныхТоваров КАК Реквизиты
	|		ПО ТаблицаЗачетАвансов.Ссылка = Реквизиты.Ссылка
	|ГДЕ
	|	ТаблицаЗачетАвансов.Ссылка = &Ссылка
	|	И Реквизиты.СпособЗачетаАвансов = ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаАвансов.ПоДокументу)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВСчетОтгрузкиУЕ)
	|		КОГДА ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.ОплатаВВалюте, ЛОЖЬ)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВСчетОтгрузкиВал)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВСчетОтгрузкиРуб)
	|	КОНЕЦ,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ДокументОтгрузки,
	|	0
	|ИЗ
	|	Документ.РеализацияОтгруженныхТоваров КАК Реквизиты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО Реквизиты.ДоговорКонтрагента = ДоговорыКонтрагентов.Ссылка
	|ГДЕ
	|	&НачислятьНДСПоОтгрузке
	|	И Реквизиты.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаЗачетАвансов.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 


Функция ТекстЗапросаРеализация(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение Тогда
		ПараметрыПроведения.Вставить("РеализацияШапка", Неопределено);
		ПараметрыПроведения.Вставить("РеализацияТаблицаДокумента", Неопределено);
		Возврат "";
	КонецЕсли;

	НомераТаблиц.Вставить("РеализацияШапка", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РеализацияТаблицаДокумента", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	&ДатаРеализации КАК Период,
	|	""Реализация"" КАК ТипСписания,
	|	&Ссылка КАК ДокументРеализации,
	|	""РеализацияОтгруженныхТоваров"" КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	НЕОПРЕДЕЛЕНО КАК ТипСклада,
	|	Реквизиты.ДеятельностьНаПатенте КАК ДеятельностьНаПатенте,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.Ссылка КАК ДокументОтгрузки,
	|	""Реализация товаров"" КАК Содержание,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	&НачислятьНДСПоОтгрузке КАК НДСНачисленПриОтгрузке,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.ДоговорКонтрагента.КодРаздел7ДекларацииНДС КАК КодОперацииПоСделке,
	|	Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДСПокупателем КАК НДСИсчисляетсяНалоговымАгентом
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОтгрузки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка,
	|	&ДатаРеализации,
	|	""Реализация"",
	|	&Ссылка,
	|	""РеализацияОтгруженныхТоваров"",
	|	Реквизиты.Организация,
	|	Реквизиты.ПодразделениеОрганизации,
	|	Реквизиты.ВалютаДокумента,
	|	НЕОПРЕДЕЛЕНО,
	|	ЛОЖЬ,
	|	Реквизиты.Контрагент,
	|	Реквизиты.Ссылка,
	|	""Переход права собственности по гос.регистрации"",
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах,
	|	&НачислятьНДСПоОтгрузке,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ДоговорКонтрагента.КодРаздел7ДекларацииНДС,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.ПередачаОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицыДокумента.ИмяСписка КАК ИмяСписка,
	|	ТаблицыДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицыДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицыДокумента.Количество КАК Количество,
	|	ТаблицыДокумента.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТаблицыДокумента.СуммаВзаиморасчетов КАК СуммаВзаиморасчетовЕНВД,
	|	ТаблицыДокумента.СуммаРуб КАК СуммаРуб,
	|	ТаблицыДокумента.СуммаРуб КАК СуммаРуб_ЕНВД,
	|	ТаблицыДокумента.СуммаНДСРуб КАК СуммаНДСРуб,
	|	ТаблицыДокумента.СуммаРуб КАК СуммаБУ,
	|	ТаблицыДокумента.СуммаРуб КАК СуммаНУ,
	|	ТаблицыДокумента.СчетДоходов КАК СчетДоходов,
	|	ТаблицыДокумента.Субконто КАК Субконто,
	|	ТаблицыДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицыДокумента.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	&СчетРасчетов КАК КорСчет,
	|	Реквизиты.Контрагент КАК КорСубконто1,
	|	Реквизиты.ДоговорКонтрагента КАК КорСубконто2,
	|	ТаблицыДокумента.ДокументОтгрузки КАК КорСубконто3,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.Контрагент КАК Покупатель,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	&ПодразделениеОрганизации КАК Подразделение,
	|	ТаблицыДокумента.СчетУчета КАК СчетУчета,
	|	ТаблицыДокумента.ЭтоКомиссия КАК ЭтоКомиссия,
	|	ТаблицыДокумента.ЭтоУслуга КАК ЭтоУслуга,
	|	ВЫБОР
	|		КОГДА Реквизиты.Дата >= ДАТАВРЕМЯ(2016, 7, 1)
	|				И НЕ ТаблицыДокумента.ЭтоУслуга
	|			ТОГДА ТаблицыДокумента.ЭтоНесырьевойТовар
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоНесырьевойТовар,
	|	ТаблицыДокумента.Комитент КАК Комитент,
	|	ТаблицыДокумента.ДоговорКомиссии КАК ДоговорКомиссии,
	|	Реквизиты.Ссылка КАК ДокументРасчетовСКомитентом,
	|	Реквизиты.Дата КАК ДатаРеализации,
	|	ТаблицыДокумента.СчетРасчетовСКомитентом КАК СчетРасчетовСКомитентом,
	|	ТаблицыДокумента.СчетАвансовСКомитентом КАК СчетАвансовСКомитентом,
	|	ТаблицыДокумента.ВалютаРасчетовСКомитентом КАК ВалютаРасчетовСКомитентом,
	|	0 КАК СуммаВзаиморасчетовКомитента,
	|	0 КАК СуммаРуб_Комитента,
	|	0 КАК СуммаРасчетовСКомитентом,
	|	0 КАК СуммаПоступленияОтКомитента,
	|	ТаблицыДокумента.КодРаздел7ДекларацииНДС КАК КодРаздел7ДекларацииНДС,
	|	ТаблицыДокумента.КодСоответствуетСт149НКРФ КАК КодСоответствуетСт149НКРФ,
	|	ТаблицыДокумента.КодВключаетсяВРеестр КАК КодВключаетсяВРеестр,
	|	ЛОЖЬ КАК УслугиЗаРубежом,
	|	ВЫБОР
	|		КОГДА &ЗаполнятьДокументРасчетов
	|			ТОГДА Реквизиты.Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументРасчетов
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			""Товары"" КАК ИмяСписка,
	|			ТаблицаТовары.ДокументОтгрузки КАК ДокументОтгрузки,
	|			ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|			ТаблицаТовары.Номенклатура КАК Номенклатура,
	|			ТаблицаТовары.Количество КАК Количество,
	|			ТаблицаТовары.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|			ТаблицаТовары.СуммаРуб КАК СуммаРуб,
	|			ТаблицаТовары.СуммаНДСРуб КАК СуммаНДСРуб,
	|			ТаблицаТовары.СчетДоходов КАК СчетДоходов,
	|			ТаблицаТовары.Субконто КАК Субконто,
	|			ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|			ТаблицаТовары.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|			ТаблицаТовары.Ссылка КАК Ссылка,
	|			ТаблицаТовары.СчетУчета КАК СчетУчета,
	|			ТаблицаТовары.СчетУчета.Забалансовый КАК ЭтоКомиссия,
	|			ЛОЖЬ КАК ЭтоУслуга,
	|			НЕ ТаблицаТовары.СырьевойТовар КАК ЭтоНесырьевойТовар,
	|			ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Комитент,
	|			ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК ДоговорКомиссии,
	|			ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетРасчетовСКомитентом,
	|			ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетАвансовСКомитентом,
	|			ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаРасчетовСКомитентом,
	|			ТаблицаТовары.ДоходЕНВД КАК ДоходЕНВД,
	|			ТаблицаТовары.КодСоответствуетСт149НКРФ КАК КодСоответствуетСт149НКРФ,
	|			ТаблицаТовары.КодВключаетсяВРеестр КАК КодВключаетсяВРеестр,
	|			ТаблицаТовары.КодРаздел7ДекларацииНДС КАК КодРаздел7ДекларацииНДС
	|		ИЗ
	|			ТаблицаТовары КАК ТаблицаТовары
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			""Услуги"",
	|			ТаблицаУслуги.ДокументОтгрузки,
	|			ТаблицаУслуги.НомерСтроки,
	|			ТаблицаУслуги.Номенклатура,
	|			ТаблицаУслуги.Количество,
	|			ТаблицаУслуги.СуммаВзаиморасчетов,
	|			ТаблицаУслуги.СуммаРуб,
	|			ТаблицаУслуги.СуммаНДСРуб,
	|			ТаблицаУслуги.СчетДоходов,
	|			ТаблицаУслуги.Субконто,
	|			ТаблицаУслуги.СтавкаНДС,
	|			ТаблицаУслуги.СчетУчетаНДСПоРеализации,
	|			ТаблицаУслуги.Ссылка,
	|			НЕОПРЕДЕЛЕНО,
	|			ЛОЖЬ,
	|			ИСТИНА,
	|			НЕ ТаблицаУслуги.СырьевойТовар,
	|			ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка),
	|			ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
	|			ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка),
	|			ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка),
	|			ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка),
	|			ТаблицаУслуги.ДоходЕНВД,
	|			ТаблицаУслуги.КодСоответствуетСт149НКРФ,
	|			ТаблицаУслуги.КодВключаетсяВРеестр,
	|			ТаблицаУслуги.КодРаздел7ДекларацииНДС
	|		ИЗ
	|			ТаблицаУслуги КАК ТаблицаУслуги) КАК ТаблицыДокумента
	|		ПО Реквизиты.Ссылка = ТаблицыДокумента.ДокументОтгрузки
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОтгрузки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ОС"",
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство,
	|	0,
	|	ТаблицаОС.СуммаВзаиморасчетов,
	|	ТаблицаОС.СуммаВзаиморасчетов,
	|	ТаблицаОС.СуммаРуб,
	|	ТаблицаОС.СуммаРуб,
	|	ТаблицаОС.СуммаНДСРуб,
	|	ТаблицаОС.СуммаРуб,
	|	ВЫБОР
	|		КОГДА &С2013года
	|			ТОГДА ТаблицаОС.СуммаНДСРуб
	|		ИНАЧЕ ТаблицаОС.СуммаРуб
	|	КОНЕЦ,
	|	ТаблицаОС.СчетДоходов,
	|	ТаблицаОС.Субконто,
	|	ТаблицаОС.СтавкаНДС,
	|	ТаблицаОС.СчетУчетаНДСПоРеализации,
	|	ТаблицаОС.Регистратор.СчетУчетаРасчетовСКонтрагентом,
	|	ТаблицаОС.Регистратор.Контрагент,
	|	ТаблицаОС.Регистратор.ДоговорКонтрагента,
	|	ТаблицаОС.ДокументОтгрузки,
	|	ТаблицаОС.Регистратор.Контрагент,
	|	ТаблицаОС.Регистратор.Контрагент,
	|	ТаблицаОС.Регистратор.ДоговорКонтрагента.ВалютаВзаиморасчетов,
	|	&ПодразделениеОрганизации,
	|	НЕОПРЕДЕЛЕНО,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ВЫБОР
	|		КОГДА ТаблицаОС.Регистратор.Дата >= ДАТАВРЕМЯ(2016, 7, 1)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ЗНАЧЕНИЕ(Справочник.КодыОперацийРаздела7ДекларацииПоНДС.ПустаяСсылка),
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	НЕОПРЕДЕЛЕНО
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИмяСписка,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаЗачетАвансовКомитентов(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение Тогда
		ПараметрыПроведения.Вставить("АвансыКомитентов", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("АвансыКомитентов", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	&ДатаРеализации КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	&ПодразделениеОрганизации КАК Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаАвансов.Автоматически) КАК СпособЗачетаАвансов,
	|	ЛОЖЬ КАК УчитыватьЗадолженностьУСН,
	|	ЛОЖЬ КАК УчитыватьЗадолженностьУСНПатент,
	|	""Поступление"" КАК НаправлениеДвижения,
	|	ЛОЖЬ КАК ЭтоВозврат
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОтгрузки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаПереоценкаТоваровВРознице(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение Тогда
		ПараметрыПроведения.Вставить("ПереоценкаВрозницеШапка", Неопределено);
		ПараметрыПроведения.Вставить("ПереоценкаВРозницеТовары", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ПереоценкаВрозницеШапка", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПереоценкаВРозницеТовары", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	&ДатаРеализации КАК Период,
	|	Реквизиты.Организация,
	|	&ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.Склад,
	|	Реквизиты.Склад.ТипСклада КАК ТипСклада
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Товары"" КАК ИмяСписка,
	|	&СинонимТовары КАК СинонимСписка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.СчетУчета,
	|	ТаблицаТовары.Номенклатура,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.Склад.ТипСклада КАК ТипСклада,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.СуммаРуб КАК Сумма,
	|	ТаблицаТовары.СчетРасходов КАК КорСчетСписания,
	|	ТаблицаТовары.Субконто КАК КорСубконтоСписания1
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Реквизиты
	|		ПО ТаблицаТовары.ДокументОтгрузки = Реквизиты.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИмяСписка,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаСписаниеОстаточнойСтоимостиОС(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение Тогда
		ПараметрыПроведения.Вставить("СписаниеОстаточнойСтоимостиОСРеквизиты", Неопределено);
		ПараметрыПроведения.Вставить("СписаниеОстаточнойСтоимостиОСТаблица", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("СписаниеОстаточнойСтоимостиОСРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СписаниеОстаточнойСтоимостиОСТаблица", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	&ДатаРеализации КАК Период,
	|	Реквизиты.Организация,
	|	&ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	""Переход права собственности по гос.регистрации"" КАК Содержание
	|ИЗ
	|	Документ.ПередачаОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОтгрузки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка,
	|	&ДатаРеализации,
	|	Реквизиты.Организация,
	|	&ПодразделениеОрганизации,
	|	Реквизиты.Контрагент,
	|	""Переход права собственности по гос.регистрации""
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство,
	|	ТаблицаОС.СчетРасходов КАК СчетСписания,
	|	ТаблицаОС.Субконто КАК Субконто,
	|	ТаблицаОС.СчетРасходов КАК СчетСписанияНУ,
	|	ТаблицаОС.Субконто КАК СубконтоНУ
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТоварыНДС(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение Тогда
		ПараметрыПроведения.Вставить("НДСТовары", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("НДСТовары", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	""Товары"" КАК ИмяСписка,
	|	&СинонимТовары КАК СинонимСписка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтрокиДокумента,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ТаблицаТовары.Количество КАК Количество
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	НЕ ТаблицаТовары.ЭтоКомиссия
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиДокумента";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПереоценкаВалютныхОстатков(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение Тогда
		ПараметрыПроведения.Вставить("ПереоценкаВалютныхОстатков", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ПереоценкаВалютныхОстатков", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	&ДатаРеализации КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ВалютаДокумента
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОтгрузки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Ссылка,
	|	&ДатаРеализации,
	|	Реквизиты.Организация,
	|	Реквизиты.ВалютаДокумента
	|ИЗ
	|	Документ.ПередачаОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОтгрузки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Процедура ДобавитьКолонкуСодержание(ТаблицаЗначений) Экспорт
	
	Если ТаблицаЗначений = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТаблицаЗначений.Колонки.Найти("Содержание") = Неопределено Тогда
		ТаблицаЗначений.Колонки.Добавить("Содержание", ОбщегоНазначения.ОписаниеТипаСтрока(150));
	КонецЕсли;
	
	Для каждого СтрокаТаблицы Из ТаблицаЗначений Цикл
		
		Если СтрокаТаблицы.ЭтоУслуга Тогда
			СтрокаТаблицы.Содержание = "Реализация услуг";
		Иначе
			СтрокаТаблицы.Содержание = "Реализация товаров";
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция КорректировкаДокументовРасчетаАвансовИП(ТаблицаВзаиморасчетов, Организация) Экспорт

	МассивСчетаАвансов = Новый Массив;
	МассивСчетаАвансов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВСчетОтгрузкиРуб);	//счет 62.ОТ.1
	МассивСчетаАвансов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВСчетОтгрузкиВал);	//счет 62.ОТ.2
	МассивСчетаАвансов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВСчетОтгрузкиУЕ);	//счет 62.ОТ.3
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Параметры.Вставить("ТаблицаВзаиморасчетов", ТаблицаВзаиморасчетов);
	Запрос.Параметры.Вставить("Организация", Организация);
	Запрос.Параметры.Вставить("МассивСчетаАвансов", МассивСчетаАвансов);
	
	Запрос.Текст = "ВЫБРАТЬ
	              |	ТаблицаВзаиморасчетов.СчетАвансов КАК СчетКт,
	              |	ТаблицаВзаиморасчетов.ДокументРасчетов КАК СубконтоКт3
	              |ПОМЕСТИТЬ ТаблицаВзаиморасчетов
	              |ИЗ
	              |	&ТаблицаВзаиморасчетов КАК ТаблицаВзаиморасчетов
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	СчетКт,
	              |	СубконтоКт3
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ТаблицаВзаиморасчетов.СчетКт КАК СчетАвансов,
	              |	ТаблицаВзаиморасчетов.СубконтоКт3 КАК СубконтоКт3,
	              |	ХозрасчетныйДвиженияССубконто.СубконтоКт1 КАК Контрагент,
	              |	ХозрасчетныйДвиженияССубконто.СубконтоДт3 КАК ДокументРасчетов,
	              |	ХозрасчетныйДвиженияССубконто.СубконтоДт3.Дата КАК ДатаДокументаРасчетов,
	              |	ХозрасчетныйДвиженияССубконто.Сумма КАК СуммаРуб
	              |ИЗ
	              |	ТаблицаВзаиморасчетов КАК ТаблицаВзаиморасчетов
	              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто КАК ХозрасчетныйДвиженияССубконто
	              |		ПО ТаблицаВзаиморасчетов.СчетКт = ХозрасчетныйДвиженияССубконто.СчетКт
	              |			И ТаблицаВзаиморасчетов.СубконтоКт3 = ХозрасчетныйДвиженияССубконто.СубконтоКт3
	              |ГДЕ
	              |	ХозрасчетныйДвиженияССубконто.Организация = &Организация
	              |	И ТаблицаВзаиморасчетов.СчетКт В(&МассивСчетаАвансов)
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |УНИЧТОЖИТЬ ТаблицаВзаиморасчетов";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	МассивИндексовДляРазбиениеСтрок = Новый Массив;
	
	i = 0;
	
	ТаблицаВзаиморасчетовКорректировка = ТаблицаВзаиморасчетов.Скопировать();
	
	Пока Выборка.Следующий() Цикл
		
		Пока i < ТаблицаВзаиморасчетовКорректировка.Количество() Цикл
			
			Если ТаблицаВзаиморасчетовКорректировка[i].СчетАвансов = Выборка.СчетАвансов И
				 ТаблицаВзаиморасчетовКорректировка[i].ДокументРасчетов = Выборка.СубконтоКт3 Тогда
				
				Если МассивИндексовДляРазбиениеСтрок.Найти(i) = Неопределено Тогда
					
						МассивИндексовДляРазбиениеСтрок.Добавить(i);
						
				КонецЕсли;
					
			КонецЕсли;
			
			i = i + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Для каждого Индекс Из МассивИндексовДляРазбиениеСтрок Цикл
		
		ТаблицаВзаиморасчетовКорректировка.Удалить(Индекс);
		
	КонецЦикла;
	
	//Для функции УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияЗачетОплатыПокупателя из  таблицы взаиморасчетов нужно только 4 поля
	ТаблицаВзаиморасчетовКорректировка.Свернуть("Контрагент, ДокументРасчетов, ДатаДокументаРасчетов, СуммаРуб");
	
	Выборка.Сбросить();
	
	Пока Выборка.Следующий() Цикл
		
		СтрокаВзаиморасчетов = ТаблицаВзаиморасчетовКорректировка.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаВзаиморасчетов, Выборка);
		
	КонецЦикла;

	Возврат ТаблицаВзаиморасчетовКорректировка;
	
КонецФункции

// ОТЛОЖЕННОЕ ПРОВЕДЕНИЕ

Функция ТекстЗапросаРегистрацияОтложенныхРасчетовСКонтрагентами(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение
		ИЛИ НЕ ПроведениеСервер.ИспользуетсяОтложенноеПроведение(Реквизиты.Организация, Реквизиты.Период) Тогда
		ПараметрыПроведения.Вставить("РасчетыСКонтрагентамиОтложенноеПроведение", Неопределено);
		Возврат "";
	КонецЕсли;

	НомераТаблиц.Вставить("РасчетыСКонтрагентамиОтложенноеПроведение", НомераТаблиц.Количество());

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.Дата КАК Дата
	|ИЗ
	|	Документ.РеализацияОтгруженныхТоваров КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Процедура ОбработкаОтложенногоПроведения(Параметры, Отказ) Экспорт
	
	ПараметрыПроведения = ПодготовитьПараметрыПроведения(
		Параметры.Регистратор,
		Отказ,
		Параметры.ДоговорКонтрагента);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;	

	ТаблицаВзаиморасчетов = УчетВзаиморасчетовОтложенноеПроведение.ПодготовитьТаблицуВзаиморасчетовЗачетАвансов(
		Параметры,
		ПараметрыПроведения.ЗачетАвансовТаблицаДокумента,
		ПараметрыПроведения.ЗачетАвансовАвансы,
		ПараметрыПроведения.ЗачетАвансовШапка,
		Отказ);

	// Структура таблиц для отражения в налоговом учете УСН
	СтруктураТаблицУСН = Новый Структура("ТаблицаРасчетов", ТаблицаВзаиморасчетов);

	УчетВзаиморасчетовОтложенноеПроведение.СформироватьДвиженияЗачетАвансов(
		Параметры,
		ТаблицаВзаиморасчетов,
		ПараметрыПроведения.ЗачетАвансовШапка,
		Отказ);
	
	УчетВзаиморасчетовОтложенноеПроведение.СформироватьДвиженияУСН(
		Параметры,
		СтруктураТаблицУСН);

КонецПроцедуры

// При использовании отложенного проведения регистрирует в последовательности ДокументыОрганизация переданный документ.
//
Процедура ЗарегистрироватьОтложенныеРасчетыВПоследовательности(Объект, Отказ,
		ТаблицаОтложенныеРасчетыСКонтрагентами = Неопределено, ТаблицаТовары = Неопределено) Экспорт

	БезусловноРегистрировать = Ложь;
	Если ЗначениеЗаполнено(Объект.ДокументОтгрузки)
	   И ТипЗнч(Объект.ДокументОтгрузки) = Тип("ДокументСсылка.ПередачаОС")
	   И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ДокументОтгрузки, "ПравоСобственностиПереходитПослеГосРегистрации") Тогда
	   
		БезусловноРегистрировать = Истина;
		
	Иначе
		
		ДатаРегистрации = РаботаСПоследовательностями.ДатаРегистрацииДокументаВПоследовательности(Объект.Ссылка, Объект.Дата, Объект.Организация);
		БезусловноРегистрировать = Не ПроведениеСервер.ИспользуетсяОтложенноеПроведение(Объект.Организация, ДатаРегистрации);
		
	КонецЕсли;
	
	Если БезусловноРегистрировать Тогда
		// Оперативный расчет остатков.
		РаботаСПоследовательностями.ЗарегистрироватьВПоследовательности(Объект, Отказ, Ложь);
	Иначе
		РаботаСПоследовательностями.ЗарегистрироватьОтложенныеРасчетыВПоследовательности(
			Объект, Отказ, ТаблицаОтложенныеРасчетыСКонтрагентами, ТаблицаТовары);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Акт об оказании услуг
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Акт";
	КомандаПечати.Представление = НСтр("ru = 'Акт об оказании услуг'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Порядок = 10;
	
	// Счет-фактура
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиСчетовФактур";
	КомандаПечати.Порядок = 20;
	
	// Универсальный передаточный документ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "УниверсальныйПередаточныйДокумент";
	КомандаПечати.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД)'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиУниверсальныхПередаточныхДокументов";
	КомандаПечати.Порядок = 30;
	
	// Справка-расчет "Рублевые суммы документа в валюте"
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьРублевыхСуммДокументовВВалюте";
	КомандаПечати.Идентификатор = "РублевыеСуммыДокументаВВалюте";
	КомандаПечати.Представление = НСтр("ru = 'Справка-расчет ""Рублевые суммы документа в валюте""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ФункциональныеОпции = "ИспользоватьВалютныйУчет";
	КомандаПечати.Порядок = 40;
			
КонецПроцедуры

Функция ТекстЗапросаДанныеДляПечатиСчетовФактур(НомераТаблиц) Экспорт

	НомераТаблиц.Вставить("Реквизиты",                                НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаДокументаПромежуточная",            НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_РублевыеСуммыДокументовВВалюте",        НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаДокумента",                НомераТаблиц.Количество());
	НомераТаблиц.Вставить("УничтожениеПромежуточнойТаблицыДокумента", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СведенияОПрослеживаемости",                НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РеализацияОтгруженныхТоваров.Дата КАК ДатаОснования,
	|	РеализацияОтгруженныхТоваров.Организация КАК Организация,
	|	РеализацияТоваровУслуг.Склад КАК Склад,
	|	РеализацияТоваровУслуг.ПодразделениеОрганизации КАК Подразделение,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА РеализацияТоваровУслуг.ПодразделениеОрганизации.ЦифровойИндексОбособленногоПодразделения
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РеализацияОтгруженныхТоваров.Организация.ОбособленноеПодразделение
	|					ТОГДА РеализацияОтгруженныхТоваров.Организация.ЦифровойИндексОбособленногоПодразделения
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК ЦифровойИндексОбособленногоПодразделения,
	|	ВЫБОР
	|		КОГДА РеализацияОтгруженныхТоваров.Организация.ОбособленноеПодразделение
	|			ТОГДА РеализацияОтгруженныхТоваров.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ РеализацияОтгруженныхТоваров.Организация
	|	КОНЕЦ КАК Поставщик,
	|	ВЫБОР
	|		КОГДА РеализацияОтгруженныхТоваров.Организация.ОбособленноеПодразделение
	|			ТОГДА РеализацияОтгруженныхТоваров.Организация.ГоловнаяОрганизация.ИНН
	|		ИНАЧЕ РеализацияОтгруженныхТоваров.Организация.ИНН
	|	КОНЕЦ КАК ИННпоставщика,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА РеализацияТоваровУслуг.ПодразделениеОрганизации
	|		ИНАЧЕ РеализацияОтгруженныхТоваров.Организация
	|	КОНЕЦ КАК ОбособленноеПодразделениеПоставщика,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Грузоотправитель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА РеализацияТоваровУслуг.Грузоотправитель
	|		КОГДА РеализацияТоваровУслуг.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА РеализацияТоваровУслуг.ПодразделениеОрганизации
	|		КОГДА РеализацияТоваровУслуг.Организация.ОбособленноеПодразделение
	|			ТОГДА РеализацияТоваровУслуг.Организация
	|		ИНАЧЕ ""он же""
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА РеализацияОтгруженныхТоваров.Контрагент.ОбособленноеПодразделение
	|				И РеализацияОтгруженныхТоваров.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА РеализацияОтгруженныхТоваров.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ РеализацияОтгруженныхТоваров.Контрагент
	|	КОНЕЦ КАК Покупатель,
	|	РеализацияОтгруженныхТоваров.Контрагент.ИНН КАК ИННпокупателя,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Грузополучатель.ОбособленноеПодразделение
	|				И РеализацияТоваровУслуг.Грузополучатель.ГоловнойКонтрагент = РеализацияТоваровУслуг.Контрагент
	|				И РеализацияТоваровУслуг.Грузополучатель.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА РеализацияТоваровУслуг.Грузополучатель
	|		ИНАЧЕ РеализацияТоваровУслуг.Контрагент
	|	КОНЕЦ КАК ОбособленноеПодразделениеПокупателя,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Грузополучатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА РеализацияТоваровУслуг.Грузополучатель
	|		ИНАЧЕ РеализацияТоваровУслуг.Контрагент
	|	КОНЕЦ КАК Грузополучатель,
	|	РеализацияТоваровУслуг.ВалютаДокумента КАК Валюта,
	|	РеализацияОтгруженныхТоваров.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	РеализацияОтгруженныхТоваров.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	РеализацияОтгруженныхТоваров.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	РеализацияОтгруженныхТоваров.ДоговорКонтрагента.Представление КАК Основание,
	|	РеализацияОтгруженныхТоваров.ДоговорКонтрагента.Дата КАК ОснованиеДата,
	|	РеализацияОтгруженныхТоваров.ДоговорКонтрагента.Номер КАК ОснованиеНомер,
	|	РеализацияОтгруженныхТоваров.ДоговорКонтрагента.УчетАгентскогоНДСПокупателем КАК НДСИсчисляетсяНалоговымАгентом,
	|	РеализацияТоваровУслуг.Руководитель КАК Исполнитель,
	|	РеализацияТоваровУслуг.ЗаРуководителяНаОсновании КАК ИсполнительНаОсновании,
	|	РеализацияТоваровУслуг.ОтпускПроизвел КАК ОтпускПроизвел,
	|	РеализацияТоваровУслуг.ДоверенностьНомер КАК ДоверенностьНомер,
	|	РеализацияТоваровУслуг.ДоверенностьДата КАК ДоверенностьДата,
	|	РеализацияТоваровУслуг.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	РеализацияТоваровУслуг.ДоверенностьЧерезКого КАК ДоверенностьЧерезКого,
	|	РеализацияТоваровУслуг.ЗаЗаказчикаНаОсновании КАК ЗаЗаказчикаНаОсновании,
	|	ИСТИНА КАК ЕстьТовары,
	|	РеализацияТоваровУслуг.АдресДоставки КАК АдресДоставки,
	|	РеализацияТоваровУслуг.СведенияОТранспортировкеИГрузе КАК СведенияОТранспортировкеИГрузе,
	|	РеализацияТоваровУслуг.ОтветственныйЗаОформление КАК ОтветственныйЗаОформление,
	|	РеализацияТоваровУслуг.СопроводительныеДокументы КАК СопроводительныеДокументы,
	|	РеализацияТоваровУслуг.Перевозчик КАК Перевозчик,
	|	РеализацияТоваровУслуг.ПеревозкаАвтотранспортом КАК ПеревозкаАвтотранспортом
	|ИЗ
	|	Документ.РеализацияОтгруженныхТоваров КАК РеализацияОтгруженныхТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО РеализацияОтгруженныхТоваров.ДокументОтгрузки = РеализацияТоваровУслуг.Ссылка
	|ГДЕ
	|	РеализацияОтгруженныхТоваров.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияОтгруженныхТоваров.Дата,
	|	РеализацияОтгруженныхТоваров.Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	ПередачаОС.ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА ПередачаОС.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА ПередачаОС.ПодразделениеОрганизации.ЦифровойИндексОбособленногоПодразделения
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПередачаОС.Организация.ОбособленноеПодразделение
	|					ТОГДА ПередачаОС.Организация.ЦифровойИндексОбособленногоПодразделения
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПередачаОС.Организация.ОбособленноеПодразделение
	|			ТОГДА ПередачаОС.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ ПередачаОС.Организация
	|	КОНЕЦ,
	|	ПередачаОС.Организация.ИНН,
	|	ВЫБОР
	|		КОГДА ПередачаОС.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА ПередачаОС.ПодразделениеОрганизации.КПП
	|		ИНАЧЕ ПередачаОС.Организация.КПП
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПередачаОС.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА ПередачаОС.ПодразделениеОрганизации
	|		КОГДА ПередачаОС.Организация.ОбособленноеПодразделение
	|			ТОГДА ПередачаОС.Организация
	|		КОГДА ПередачаОС.Грузоотправитель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ПередачаОС.Грузоотправитель
	|		ИНАЧЕ ""он же""
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПередачаОС.Контрагент.ОбособленноеПодразделение
	|				И ПередачаОС.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ПередачаОС.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ ПередачаОС.Контрагент
	|	КОНЕЦ,
	|	ПередачаОС.Контрагент.ИНН,
	|	ВЫБОР
	|		КОГДА ПередачаОС.Грузополучатель.ОбособленноеПодразделение
	|				И ПередачаОС.Грузополучатель.ГоловнойКонтрагент = ПередачаОС.Контрагент
	|				И ПередачаОС.Грузополучатель.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ПередачаОС.Грузополучатель.КПП
	|		ИНАЧЕ ПередачаОС.Контрагент.КПП
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПередачаОС.Грузополучатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ПередачаОС.Грузополучатель
	|		ИНАЧЕ ПередачаОС.Контрагент
	|	КОНЕЦ,
	|	ПередачаОС.ВалютаДокумента,
	|	ПередачаОС.ДоговорКонтрагента.ВалютаВзаиморасчетов,
	|	ПередачаОС.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах,
	|	ПередачаОС.ДоговорКонтрагента.ВидДоговора,
	|	ПередачаОС.ДоговорКонтрагента.Представление,
	|	ПередачаОС.ДоговорКонтрагента.Дата,
	|	ПередачаОС.ДоговорКонтрагента.Номер,
	|	ЛОЖЬ,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	"""",
	|	"""",
	|	"""",
	|	ИСТИНА,
	|	"""",
	|	"""",
	|	НЕОПРЕДЕЛЕНО,
	|	"""",
	|	НЕОПРЕДЕЛЕНО,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.РеализацияОтгруженныхТоваров КАК РеализацияОтгруженныхТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаОС КАК ПередачаОС
	|		ПО РеализацияОтгруженныхТоваров.ДокументОтгрузки = ПередачаОС.Ссылка
	|ГДЕ
	|	РеализацияОтгруженныхТоваров.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерТабЧасти,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Товар,
	|	ТаблицаТовары.Номенклатура.Код КАК ТоварКод,
	|	ТаблицаТовары.Номенклатура.Артикул КАК ТоварАртикул,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ТаблицаТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаТовары.СтранаПроисхождения.НаименованиеПолное КАК ПредставлениеСтраны,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.НомерГТД.Представление КАК ПредставлениеГТД,
	|	ТаблицаТовары.НомерГТД.РегистрационныйНомер КАК РегистрационныйНомерТД,
	|	ТаблицаТовары.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	ТаблицаТовары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ТаблицаТовары.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
	|	РеализацияОтгруженныхТоваров.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(ТаблицаТовары.СчетУчета.Забалансовый, ЛОЖЬ) КАК ЭтоКомиссия,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары) КАК ТабличнаяЧастьДокумента,
	|	ТаблицаТовары.КодТНВЭД КАК ТоварКодТНВЭД,
	|	ТаблицаТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаТовары.Номенклатура.КодТНВЭД КАК НоменклатураКодТНВЭД,
	|	ТаблицаТовары.Ссылка КАК ОснованиеСсылка,
	|	ТаблицаТовары.НалоговаяБазаНДС КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ ТаблицаДокументаПромежуточная
	|ИЗ
	|	Документ.РеализацияОтгруженныхТоваров КАК РеализацияОтгруженныхТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|		ПО РеализацияОтгруженныхТоваров.ДокументОтгрузки = ТаблицаТовары.Ссылка
	|ГДЕ
	|	РеализацияОтгруженныхТоваров.Ссылка = &ДокументОснование
	|	И НЕ &НачислятьНДСПоОтгрузке
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ТаблицаУслуги.НомерСтроки,
	|	ТаблицаУслуги.Номенклатура,
	|	ТаблицаУслуги.Номенклатура.Код,
	|	ТаблицаУслуги.Номенклатура.Артикул,
	|	ТаблицаУслуги.Номенклатура.НаименованиеПолное,
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	ТаблицаУслуги.Номенклатура.ЕдиницаИзмерения,
	|	ТаблицаУслуги.Количество,
	|	ТаблицаУслуги.Цена,
	|	ТаблицаУслуги.Сумма,
	|	ТаблицаУслуги.СуммаНДС,
	|	ТаблицаУслуги.СтавкаНДС,
	|	ИСТИНА,
	|	ТаблицаУслуги.Ссылка.СуммаВключаетНДС,
	|	ТаблицаУслуги.Ссылка.ВалютаДокумента,
	|	РеализацияОтгруженныхТоваров.Ссылка,
	|	ЛОЖЬ,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги),
	|	"""",
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	0
	|ИЗ
	|	Документ.РеализацияОтгруженныхТоваров КАК РеализацияОтгруженныхТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Услуги КАК ТаблицаУслуги
	|		ПО РеализацияОтгруженныхТоваров.ДокументОтгрузки = ТаблицаУслуги.Ссылка
	|ГДЕ
	|	РеализацияОтгруженныхТоваров.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство,
	|	ТаблицаОС.ОсновноеСредство.Код,
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаОС.ОсновноеСредство.НаименованиеПолное,
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	"""",
	|	ТаблицаОС.ЕдиницаИзмерения,
	|	ТаблицаОС.Количество,
	|	ТаблицаОС.Цена,
	|	ТаблицаОС.Сумма,
	|	ТаблицаОС.СуммаНДС,
	|	ТаблицаОС.СтавкаНДС,
	|	ЛОЖЬ,
	|	ТаблицаОС.Ссылка.СуммаВключаетНДС,
	|	ТаблицаОС.Ссылка.ВалютаДокумента,
	|	ТаблицаОС.Ссылка,
	|	ЛОЖЬ,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ОС),
	|	ТаблицаОС.КодТНВЭД,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	0
	|ИЗ
	|	Документ.РеализацияОтгруженныхТоваров КАК РеализацияОтгруженныхТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаОС.ОС КАК ТаблицаОС
	|		ПО РеализацияОтгруженныхТоваров.ДокументОтгрузки = ТаблицаОС.Ссылка
	|ГДЕ
	|	РеализацияОтгруженныхТоваров.Ссылка = &ДокументОснование
	|	И НЕ &НачислятьНДСПриПередачеНедвижимости
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор = &ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтрокиДокумента,
	|	ТабличнаяЧастьДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументаПромежуточная.НомерТабЧасти КАК НомерТабЧасти,
	|	ТаблицаДокументаПромежуточная.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокументаПромежуточная.Товар КАК Товар,
	|	ТаблицаДокументаПромежуточная.ТоварКод КАК ТоварКод,
	|	ТаблицаДокументаПромежуточная.ТоварАртикул КАК ТоварАртикул,
	|	ТаблицаДокументаПромежуточная.ТоварНаименование КАК ТоварНаименование,
	|	ТаблицаДокументаПромежуточная.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаДокументаПромежуточная.ПредставлениеСтраны КАК ПредставлениеСтраны,
	|	ТаблицаДокументаПромежуточная.НомерГТД КАК НомерГТД,
	|	ТаблицаДокументаПромежуточная.ПредставлениеГТД КАК ПредставлениеГТД,
	|	ТаблицаДокументаПромежуточная.РегистрационныйНомерТД КАК РегистрационныйНомерТД,
	|	ТаблицаДокументаПромежуточная.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокументаПромежуточная.Количество КАК Количество,
	|	ТаблицаДокументаПромежуточная.Цена КАК Цена,
	|	ТаблицаДокументаПромежуточная.Сумма КАК Сумма,
	|	ТаблицаДокументаПромежуточная.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокументаПромежуточная.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокументаПромежуточная.ЭтоУслуга КАК ЭтоУслуга,
	|	ТаблицаДокументаПромежуточная.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ТаблицаДокументаПромежуточная.Ссылка КАК Ссылка,
	|	ТаблицаДокументаПромежуточная.ЭтоКомиссия КАК ЭтоКомиссия,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0) КАК ВсегоРуб,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0) КАК СуммаБезНДСРуб,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0) КАК НДСРуб,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК КонтрагентСводныйСФ,
	|	НЕОПРЕДЕЛЕНО КАК ПериодичностьУслуги,
	|	ТаблицаДокументаПромежуточная.ТоварКодТНВЭД КАК ТоварКодТНВЭД,
	|	ТаблицаДокументаПромежуточная.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаДокументаПромежуточная.НоменклатураКодТНВЭД КАК НоменклатураКодТНВЭД,
	|	ТаблицаДокументаПромежуточная.ОснованиеСсылка КАК ОснованиеСсылка,
	|	ТаблицаДокументаПромежуточная.НалоговаяБазаНДС КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	ТаблицаДокументаПромежуточная КАК ТаблицаДокументаПромежуточная
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ТаблицаДокументаПромежуточная.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ТаблицаДокументаПромежуточная.ТабличнаяЧастьДокумента)
	|			И (ТаблицаДокументаПромежуточная.ВалютаДокумента <> &ВалютаРеглУчета)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторСтроки,
	|	ОснованиеСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаДокументаПромежуточная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслугСведенияПрослеживаемости.РНПТ.Код КАК НомерТовара,
	|	РеализацияТоваровУслугСведенияПрослеживаемости.Количество КАК КоличествоУчетное,
	|	РеализацияТоваровУслугСведенияПрослеживаемости.КоличествоПрослеживаемости КАК Количество,
	|	ЕСТЬNULL(КлассификаторТНВЭД.ЕдиницаИзмерения.Наименование, """") КАК ЕдиницаИзмеренияПрослеживаемостиНаименование,
	|	ЕСТЬNULL(КлассификаторТНВЭД.ЕдиницаИзмерения.Код, """") КАК ЕдиницаИзмеренияПрослеживаемостиКод,
	|	ТаблицаДокумента.Товар КАК Товар,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ТоварКодТНВЭД = ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
	|			ТОГДА ""--""
	|		ИНАЧЕ ТаблицаДокумента.ТоварКодТНВЭД
	|	КОНЕЦ КАК ТоварКодТНВЭД,
	|	ТаблицаДокумента.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаДокумента.НомерГТД КАК НомерГТД,
	|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.СуммаВключаетНДС
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаДокумента.Количество = 0
	|						ТОГДА 0
	|					КОГДА ТаблицаДокумента.СуммаНДС = 0
	|						ТОГДА ТаблицаДокумента.Цена
	|					ИНАЧЕ ВЫРАЗИТЬ((ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС) / ТаблицаДокумента.Количество КАК ЧИСЛО(15, 2))
	|				КОНЕЦ
	|		ИНАЧЕ ТаблицаДокумента.Цена
	|	КОНЕЦ КАК Цена,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.КонтрагентСводныйСФ КАК КонтрагентСводныйСФ,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.НомерТабЧасти КАК НомерТабЧасти,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслугСведенияПрослеживаемости.Сумма = 0
	|			ТОГДА РеализацияТоваровУслугСведенияПрослеживаемости.Количество * ВЫБОР
	|					КОГДА ТаблицаДокумента.СуммаВключаетНДС
	|						ТОГДА ВЫРАЗИТЬ((ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС) / ТаблицаДокумента.Количество КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ ТаблицаДокумента.Цена
	|				КОНЕЦ
	|		ИНАЧЕ РеализацияТоваровУслугСведенияПрослеживаемости.Сумма
	|	КОНЕЦ КАК СтоимостьБезНалога
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.СведенияПрослеживаемости КАК РеализацияТоваровУслугСведенияПрослеживаемости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДокумента КАК ТаблицаДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
	|			ПО ТаблицаДокумента.НоменклатураКодТНВЭД = КлассификаторТНВЭД.Ссылка
	|		ПО (ТаблицаДокумента.ИдентификаторСтроки = РеализацияТоваровУслугСведенияПрослеживаемости.ИдентификаторСтроки)
	|			И РеализацияТоваровУслугСведенияПрослеживаемости.Ссылка = ТаблицаДокумента.ОснованиеСсылка";
		
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ПодготовитьТекстЗапросаДляПечатиСправкиРасчетаРублевыеСуммыДокументовВВалюте(НомераТаблиц) Экспорт
	
	НомераТаблиц.Вставить("ВТ_РеквизитыДокумента",                             НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_СчетаАвансов",                                   НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаРеквизитов",                                 НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_РублевыеСуммыДокумента",                         НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_ЗачтенныеПредоплатыПредварительная",             НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаПредоплат",                                  НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ВТ_ЗачтенныеПредоплатыПредварительная", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ВТ_РеквизитыДокумента",                 НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ВТ_СчетаАвансов",                       НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаСумм",                                       НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_РублевыеСуммыДокумента",                НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Проведен КАК Проведен,
	|	Реквизиты.ДокументОтгрузки.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетУчетаРасчетовПоАвансам,
	|	0 КАК КурсВзаиморасчетов,
	|	0 КАК КратностьВзаиморасчетов,
	|	"""" КАК НомерВходящегоДокумента,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаВходящегоДокумента,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДС, ЛОЖЬ) КАК УчетАгентскогоНДС,
	|	Реквизиты.ДокументОтгрузки.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Реквизиты.ДокументОтгрузки КАК ДокументОтгрузки
	|ПОМЕСТИТЬ РеквизитыДокумента
	|ИЗ
	|	Документ.РеализацияОтгруженныхТоваров КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеквизитыДокумента.СчетУчетаРасчетовПоАвансам КАК СчетУчетаРасчетовПоАвансам
	|ПОМЕСТИТЬ СчетаАвансов
	|ИЗ
	|	РеквизитыДокумента КАК РеквизитыДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеквизитыДокумента.Ссылка КАК Ссылка,
	|	РеквизитыДокумента.Дата КАК Дата,
	|	РеквизитыДокумента.Проведен КАК Проведен,
	|	РеквизитыДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	РеквизитыДокумента.Организация КАК Организация,
	|	РеквизитыДокумента.Контрагент КАК Контрагент,
	|	РеквизитыДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	РеквизитыДокумента.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	РеквизитыДокумента.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	РеквизитыДокумента.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	РеквизитыДокумента.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	|	РеквизитыДокумента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	РеквизитыДокумента.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	РеквизитыДокумента.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	0 КАК ВсегоВал,
	|	0 КАК НДСВал
	|ИЗ
	|	РеквизитыДокумента КАК РеквизитыДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РублевыеСуммы.Регистратор КАК Регистратор,
	|	РеквизитыДокумента.ДокументОтгрузки КАК ДокументОтгрузки,
	|	РублевыеСуммы.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РублевыеСуммы.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РублевыеСуммы.Всего КАК Всего,
	|	РублевыеСуммы.НДС КАК НДС,
	|	РублевыеСуммы.НалоговаяБазаНДС КАК НалоговаяБазаНДС
	|ПОМЕСТИТЬ РублевыеСуммыДокумента
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РеквизитыДокумента КАК РеквизитыДокумента
	|		ПО РублевыеСуммы.Регистратор = РеквизитыДокумента.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РеквизитыДокумента.ДокументОтгрузки,
	|	ТабличнаяЧастьДокумента,
	|	НомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеквизитыДокумента.Ссылка КАК Ссылка,
	|	Хозрасчетный.Сумма КАК СуммаПредоплатыРуб,
	|	Хозрасчетный.ВалютнаяСуммаДт КАК СуммаПредоплатыВал,
	|	ХозрасчетныйСубконтоДт.Значение КАК Документ,
	|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйСубконтоДт.Значение) КАК ДокументПредоплатыПредставление,
	|	РеквизитыДокумента.Организация КАК Организация
	|ПОМЕСТИТЬ ЗачтенныеПредоплатыПредварительная
	|ИЗ
	|	РеквизитыДокумента КАК РеквизитыДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконтоКт
	|		ПО (ХозрасчетныйСубконтоКт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит))
	|			И (ХозрасчетныйСубконтоКт.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами))
	|			И РеквизитыДокумента.ДокументОтгрузки = ХозрасчетныйСубконтоКт.Значение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ПО (Хозрасчетный.Регистратор = ХозрасчетныйСубконтоКт.Регистратор)
	|			И (Хозрасчетный.НомерСтроки = ХозрасчетныйСубконтоКт.НомерСтроки)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконтоДт
	|		ПО (ХозрасчетныйСубконтоДт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|			И (ХозрасчетныйСубконтоДт.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами))
	|			И (Хозрасчетный.Регистратор = ХозрасчетныйСубконтоДт.Регистратор)
	|			И (Хозрасчетный.НомерСтроки = ХозрасчетныйСубконтоДт.НомерСтроки)
	|ГДЕ
	|	Хозрасчетный.СчетДт В
	|			(ВЫБРАТЬ
	|				СчетаАвансов.СчетУчетаРасчетовПоАвансам
	|			ИЗ
	|				СчетаАвансов)
	|	И Хозрасчетный.СчетКт В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВСчетОтгрузкиРуб), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВСчетОтгрузкиВал), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВСчетОтгрузкиУЕ))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗачтенныеПредоплатыПредварительная.Ссылка КАК Ссылка,
	|	ЗачтенныеПредоплатыПредварительная.СуммаПредоплатыРуб КАК СуммаПредоплатыРуб,
	|	ЗачтенныеПредоплатыПредварительная.СуммаПредоплатыВал КАК СуммаПредоплатыВал,
	|	ЗачтенныеПредоплатыПредварительная.Документ КАК Документ,
	|	ЗачтенныеПредоплатыПредварительная.ДокументПредоплатыПредставление КАК ДокументПредоплатыПредставление,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК НомерВходящегоДокумента,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаВходящегоДокумента
	|ИЗ
	|	ЗачтенныеПредоплатыПредварительная КАК ЗачтенныеПредоплатыПредварительная
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ЗачтенныеПредоплатыПредварительная.Организация = ДанныеПервичныхДокументов.Организация
	|			И ЗачтенныеПредоплатыПредварительная.Документ = ДанныеПервичныхДокументов.Документ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗачтенныеПредоплатыПредварительная.Ссылка
	|ИТОГИ
	|	СУММА(СуммаПредоплатыРуб),
	|	СУММА(СуммаПредоплатыВал)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ЗачтенныеПредоплатыПредварительная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РеквизитыДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СчетаАвансов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РублевыеСуммыДокумента.Регистратор КАК Ссылка,
	|	1 КАК ПорядокТабличныхЧастей,
	|	РеализацияТоваровУслуг.НомерСтроки КАК НомерСтроки,
	|	РеализацияТоваровУслуг.Номенклатура КАК Товар,
	|	РеализацияТоваровУслуг.Номенклатура.Наименование КАК ТоварНаименование,
	|	РеализацияТоваровУслуг.Сумма КАК ВсегоВал,
	|	РеализацияТоваровУслуг.СуммаНДС КАК НДСВал,
	|	РеализацияТоваровУслуг.СтавкаНДС КАК СтавкаНДС,
	|	РублевыеСуммыДокумента.Всего КАК ВсегоРуб,
	|	РублевыеСуммыДокумента.НДС КАК НДСРуб,
	|	РублевыеСуммыДокумента.НалоговаяБазаНДС КАК НалоговаяБазаНДСРуб
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслуг
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РублевыеСуммыДокумента КАК РублевыеСуммыДокумента
	|		ПО РеализацияТоваровУслуг.Ссылка = РублевыеСуммыДокумента.ДокументОтгрузки
	|			И РеализацияТоваровУслуг.НомерСтроки = РублевыеСуммыДокумента.НомерСтрокиДокумента
	|			И (РублевыеСуммыДокумента.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
	|ГДЕ
	|	РеализацияТоваровУслуг.Сумма <> 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	РублевыеСуммыДокумента.Регистратор,
	|	1,
	|	ПередачаОС.НомерСтроки,
	|	ПередачаОС.ОсновноеСредство,
	|	ПередачаОС.ОсновноеСредство.Наименование,
	|	ПередачаОС.Сумма,
	|	ПередачаОС.СуммаНДС,
	|	ПередачаОС.СтавкаНДС,
	|	РублевыеСуммыДокумента.Всего,
	|	РублевыеСуммыДокумента.НДС,
	|	РублевыеСуммыДокумента.НалоговаяБазаНДС
	|ИЗ
	|	Документ.ПередачаОС.ОС КАК ПередачаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РублевыеСуммыДокумента КАК РублевыеСуммыДокумента
	|		ПО ПередачаОС.Ссылка = РублевыеСуммыДокумента.ДокументОтгрузки
	|			И ПередачаОС.НомерСтроки = РублевыеСуммыДокумента.НомерСтрокиДокумента
	|			И (РублевыеСуммыДокумента.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ОС))
	|ГДЕ
	|	ПередачаОС.Сумма <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ПорядокТабличныхЧастей,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ВсегоВал),
	|	СУММА(НДСВал),
	|	СУММА(ВсегоРуб),
	|	СУММА(НДСРуб),
	|	СУММА(НалоговаяБазаНДСРуб)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РублевыеСуммыДокумента";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРеквизитыПереносЗадолженностиДебиторскаяЗадолженность(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	Если НЕ Реквизиты.ОплатаПриПолучении Тогда
		
		ПараметрыПроведения.Вставить("РеквизитыПереносЗадолженностиДебиторскаяЗадолженность", Неопределено);
		
		Возврат "";
	КонецЕсли; 

	НомераТаблиц.Вставить("РеквизитыПереносЗадолженностиДебиторскаяЗадолженность", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Ссылка КАК Регистратор,
	|	ДокументРеализацияТоваровУслуг.Ссылка КАК ДокументРасчетов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКорректировкаДолга.ПереносЗадолженности) КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	ДокументРеализацияТоваровУслуг.Перевозчик КАК Контрагент,
	|	ЕСТЬNULL(ДокументРеализацияТоваровУслуг.СпособДоставки.ДоговорКонтрагента, НЕОПРЕДЕЛЕНО) КАК ДоговорКонтрагент,
	|	ЕСТЬNULL(ДокументРеализацияТоваровУслуг.СпособДоставки.СчетУчетаРасчетов, НЕОПРЕДЕЛЕНО) КАК СчетРасчетов,
	|	ДокументРеализацияТоваровУслуг.ВалютаДокумента КАК ВалютаДокумента,
	|	&ОрганизацияПрименяетУСН КАК УчитыватьЗадолженностьУСН,
	|	&УчитыватьЗадолженностьУСНПатент КАК УчитыватьЗадолженностьУСНПатент,
	|	""Поступление"" КАК НаправлениеДвижения,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	ИСТИНА КАК РасчетыПоРеализации
	|ИЗ
	|	Документ.РеализацияОтгруженныхТоваров КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК ДокументРеализацияТоваровУслуг
	|		ПО Реквизиты.ДокументОтгрузки = ДокументРеализацияТоваровУслуг.Ссылка
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаРеализацияУслуг(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	НомераТаблиц.Вставить("ТаблицаРеализацияУслуг", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	""Услуги"" КАК ИмяСписка,
	|	ТаблицаУслуги.НомерСтроки КАК НомерСтроки,
	|	ТаблицаУслуги.Номенклатура КАК Услуга,
	|	ТаблицаУслуги.СчетРасходов КАК СчетРасходов,
	|	ТаблицаУслуги.Субконто КАК НоменклатурнаяГруппа,
	|	ТаблицаУслуги.СуммаРуб - ТаблицаУслуги.СуммаНДСРуб КАК Сумма
	|ИЗ
	|	ТаблицаУслуги КАК ТаблицаУслуги
	|ГДЕ
	|	НЕ ТаблицаУслуги.СчетРасходов В (&Субсчета91)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИмяСписка,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции	

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Акт") Тогда
		ТаблицаСведенийАктаОбОказанииУслуг = ПолучитьТаблицуСведенийАктаОбОказанииУслуг(МассивОбъектов);
		ПараметрыПечати.Вставить("ВидДокументаПечати",  "РеализацияОтгруженныхТоваров");
		ПараметрыПечати.Вставить("ИмяПараметровПечати", "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияОтгруженныхТоваров_Акт");
		ПараметрыПечати.Вставить("ИмяМакетаПечати",     "Документ.РеализацияОтгруженныхТоваров.ПФ_MXL_Акт");
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Акт", "Акт об оказании услуг", 
			ПечатьТорговыхДокументов.ПечатьАктаОбОказанииУслуг(ТаблицаСведенийАктаОбОказанииУслуг, ОбъектыПечати, ПараметрыПечати),, 
					"Документ.РеализацияОтгруженныхТоваров.ПФ_MXL_Акт");
		ПараметрыВывода.Вставить("ФормироватьЭД", Истина);
	КонецЕсли;
		
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов,
		КоллекцияПечатныхФорм,
		ОбъектыПечати,
		ПараметрыВывода);
	
КонецПроцедуры

Функция ТекстЗапросаДляФормированияТаблицыСведенийАктаОбОказанииУслуг()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтрокиДокумента,
	|	ТабличнаяЧастьДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Отгрузка.Ссылка КАК Ссылка,
	|	Реализация.Ссылка КАК Реализация,
	|	Отгрузка.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Реализация.Дата КАК ДатаДокумента,
	|	Реализация.Номер КАК НомерДокумента
	|
	|ПОМЕСТИТЬ ДокументыДляПечати
	|ИЗ
	|	Документ.РеализацияОтгруженныхТоваров КАК Реализация
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Отгрузка
	|		ПО Отгрузка.Ссылка = Реализация.ДокументОтгрузки
	|ГДЕ
	|	Реализация.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Документ,
	|	ДокументыДляПечати.ДатаДокумента КАК ДатаДляПолученияСведений,
	|	ДанныеПервичныхДокументов.Номер КАК НомерДокумента,
	|	ДанныеПервичныхДокументов.Дата КАК ДатаДокумента,
	|	РеализацияТоваровУслуг.Контрагент КАК Получатель,
	|	РеализацияТоваровУслуг.ДоговорКонтрагента.ГосударственныйКонтракт КАК ГосударственныйКонтрактСсылка,
	|	РеализацияТоваровУслуг.ДоговорКонтрагента.ГосударственныйКонтракт.Код КАК ГосударственныйКонтракт,
	|	ПРЕДСТАВЛЕНИЕ(РеализацияТоваровУслуг.ДоговорКонтрагента) КАК ПредставлениеДоговора,
	|	РеализацияТоваровУслуг.Организация КАК Поставщик,
	|	РеализацияТоваровУслуг.Организация КАК Организация,
	|	РеализацияТоваровУслуг.ПодразделениеОрганизации КАК Подразделение,
	|	РеализацияТоваровУслуг.БанковскийСчетОрганизации КАК БанковскийСчетПродавца,
	|	РеализацияТоваровУслуг.ВалютаДокумента КАК Валюта,
	|	РеализацияТоваровУслуг.КурсВзаиморасчетов КАК Курс,
	|	РеализацияТоваровУслуг.КратностьВзаиморасчетов КАК Кратность,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.ВалютаДокумента.Код, """") КАК ВалютаКод,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.ВалютаДокумента.Наименование, """") КАК ВалютаНаименование,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	РеализацияТоваровУслуг.СчетНаОплатуПокупателю КАК ДокументОснование,
	|	РеализацияТоваровУслуг.СуммаВключаетНДС,
	|	РеализацияТоваровУслуг.Руководитель,
	|	РеализацияТоваровУслуг.ЗаРуководителяНаОсновании,
	|	РеализацияТоваровУслуг.ДоверенностьЧерезКого КАК ПредставительЗаказчика,
	|	РеализацияТоваровУслуг.ЗаЗаказчикаНаОсновании
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыДляПечати КАК ДокументыДляПечати
	|		ПО РеализацияТоваровУслуг.Ссылка = ДокументыДляПечати.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|			ПО ДокументыДляПечати.Реализация = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В
	|			(ВЫБРАТЬ
	|				ДокументыДляПечати.Ссылка
	|			ИЗ
	|				ДокументыДляПечати)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Документ,
	|	ДокументыДляПечати.ДатаДокумента КАК ДатаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги) КАК ТабличнаяЧасть,
	|	1 КАК ПорядокТабличнойЧасти,
	|	РеализацияТоваровУслуг.НомерСтроки КАК НомерСтроки,
	|	РеализацияТоваровУслуг.Номенклатура,
	|	ВЫБОР
	|		КОГДА НЕ РеализацияТоваровУслуг.Содержание ПОДОБНО """"
	|			ТОГДА РеализацияТоваровУслуг.Содержание
	|		КОГДА НЕ РеализацияТоваровУслуг.Номенклатура.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА РеализацияТоваровУслуг.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ РеализацияТоваровУслуг.Номенклатура.Наименование
	|	КОНЕЦ КАК НоменклатураНаименование,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА РеализацияТоваровУслуг.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА РеализацияТоваровУслуг.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ КАК НоменклатураКод,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.Номенклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)) КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код, """") КАК ЕдиницаИзмеренияКод,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование, """") КАК ЕдиницаИзмеренияНаименование,
	|	РеализацияТоваровУслуг.Количество,
	|	РеализацияТоваровУслуг.Цена КАК Цена,
	|	РеализацияТоваровУслуг.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ДокументыДляПечати.СуммаВключаетНДС
	|			ТОГДА РеализацияТоваровУслуг.Сумма - РеализацияТоваровУслуг.СуммаНДС
	|		ИНАЧЕ РеализацияТоваровУслуг.Сумма
	|	КОНЕЦ КАК СуммаБезНДС,
	|	РеализацияТоваровУслуг.СуммаНДС КАК СуммаНДС,
	|	РеализацияТоваровУслуг.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0) КАК ВсегоВРублях,
	|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0) КАК НДСВРублях,
	|	ВЫБОР
	|		КОГДА РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СуществуютЗаписиРублевыхСумм
	|ИЗ
	|	ДокументыДляПечати КАК ДокументыДляПечати
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслуг
	|		ПО ДокументыДляПечати.Ссылка = РеализацияТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (РеализацияТоваровУслуг.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (РеализацияТоваровУслуг.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Документ,
	|	ПорядокТабличнойЧасти,
	|	НомерСтроки";
		
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьТаблицуСведенийАктаОбОказанииУслуг(Знач МассивОбъектов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаСведений = ПечатьТорговыхДокументов.ПолучитьОписаниеАктаОбОказанииУслуг();
	
	Запрос = Новый Запрос();
	Запрос.Текст = ТекстЗапросаДляФормированияТаблицыСведенийАктаОбОказанииУслуг();
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());

	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка = РезультатыЗапроса[2].Выбрать();
	СтрокиДокументов = РезультатыЗапроса[3].Выгрузить();
	СтрокиДокументов.Индексы.Добавить("Документ");
	
	ВалютаРегУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	РеквизитыВалютыРегУчета = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВалютаРегУчета, "Код, Наименование");
	
	Пока Выборка.Следующий() Цикл
		
		СведенияОДокументе = ТаблицаСведений.Добавить();
		ЗаполнитьЗначенияСвойств(СведенияОДокументе, Выборка);
		
		Если Выборка.РасчетыВУсловныхЕдиницах Тогда
			СведенияОДокументе.Валюта             = ВалютаРегУчета;
			СведенияОДокументе.ВалютаКод          = РеквизитыВалютыРегУчета.Код;
			СведенияОДокументе.ВалютаНаименование = РеквизитыВалютыРегУчета.Наименование;
		КонецЕсли;
		
		ТаблицаДокумента = ПечатьТорговыхДокументов.ПолучитьОписаниеТаблицыАктаОбОказанииУслуг();
		
		Отбор = Новый Структура("Документ", Выборка.Документ);
		СтрокиДокумента = СтрокиДокументов.НайтиСтроки(Отбор);
		
		НуженПересчетВРубли = Ложь;
		Если Выборка.Валюта <> ВалютаРегУчета
			И Выборка.РасчетыВУсловныхЕдиницах Тогда
			НуженПересчетВРубли = Истина;
		КонецЕсли;
		
		Для Каждого Строка Из СтрокиДокумента Цикл
			
			СтрокаТаблицыДокумента = ТаблицаДокумента.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыДокумента, Строка);
			
			Если НуженПересчетВРубли Тогда
				Если Строка.СуществуютЗаписиРублевыхСумм Тогда
					СтрокаТаблицыДокумента.СуммаНДС = Строка.НДСВРублях;
					СтрокаТаблицыДокумента.СуммаБезНДС = Строка.ВсегоВРублях - Строка.НДСВРублях;
				Иначе
					Кратность = ?(Выборка.Кратность = 0, 1, Выборка.Кратность);
					СтрокаТаблицыДокумента.СуммаНДС = Строка.СуммаНДС * Выборка.Курс / Кратность;;
					СтрокаТаблицыДокумента.СуммаБезНДС = (Строка.СуммаБезНДС + Строка.СуммаНДС) * Выборка.Курс / Кратность - СтрокаТаблицыДокумента.СуммаНДС;
				КонецЕсли;
				СтрокаТаблицыДокумента.Сумма = СтрокаТаблицыДокумента.СуммаБезНДС + ?(Выборка.СуммаВключаетНДС, СтрокаТаблицыДокумента.СуммаНДС, 0);
				СтрокаТаблицыДокумента.Цена  = ?(СтрокаТаблицыДокумента.Количество=0, СтрокаТаблицыДокумента.Сумма, СтрокаТаблицыДокумента.Сумма / СтрокаТаблицыДокумента.Количество);
			КонецЕсли;
			СтрокаТаблицыДокумента.СуммаСНДС = СтрокаТаблицыДокумента.СуммаБезНДС + СтрокаТаблицыДокумента.СуммаНДС;
			
		КонецЦикла;
		
		СведенияОДокументе.ТаблицаДокумента = ТаблицаДокумента;
		
		ПечатьТорговыхДокументов.ЗаполнитьДанныеОтветственныхЛиц(СведенияОДокументе, Новый Структура("ЗаполнятьРуководителя"));
		
	КонецЦикла;
	
	Возврат ТаблицаСведений;
	
КонецФункции

// Возвращает текст запроса для отбора документов к печати УПД по релевантной форме.
// Добавлена во все документы, для которых доступна печать УПД.
// Параметры:
// ВерсияПостановленияНДС1137 - см.УчетНДСПереопределяемый.ВерсияПостановленияНДС1137()
// ЕстьПрослеживаемыеТовары - Булево - признак того, что в документе есть прослеживаемый товар.
//
// Возвращаемое значение: 
// ТекстЗапроса - строка с необходимым текстом запроса.
//
Функция ТекстЗапросаПечатьУниверсальныхПередаточныхДокументов(ВерсияПостановленияНДС1137 = Неопределено, ЕстьПрослеживаемыеТовары = Ложь) Экспорт
	
	ОтбиратьВсеСФ1137 = Ложь;
	Если ВерсияПостановленияНДС1137 = Неопределено Тогда
		ОтбиратьВсеСФ1137 = Истина;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Документ.СчетФактураВыданный.ПустаяСсылка) КАК СчетФактура,
	|	РеализацияОтгруженныхТоваров.Дата КАК Дата,
	|	РеализацияОтгруженныхТоваров.Номер КАК Номер,
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаФактуры,
	|	РеализацияТоваровУслуг.Руководитель КАК Руководитель,
	|	РеализацияТоваровУслуг.ГлавныйБухгалтер КАК ГлавныйБухгалтер,
	|	ИСТИНА КАК СчетФактураБезНДС,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ИСТИНА КАК УдалитьПрефиксыИзНомера,
	|	ИСТИНА КАК ЭтоСчетФактураВыданный,
	|	ИСТИНА КАК ВыводитьСуммуБезНДС,
	|	РеализацияТоваровУслуг.Ссылка КАК ДокументОснование,
	|	1 КАК НомерСтроки,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ГосКонтракты.Код, """") КАК ИдентификаторГосКонтракта,
	|	"""" КАК КППСчетаФактуры,
	|	"""" КАК КПППродавца,
	|	РеализацияОтгруженныхТоваров.Дата КАК ДатаСведений
	|ИЗ
	|	Документ.РеализацияОтгруженныхТоваров КАК РеализацияОтгруженныхТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО РеализацияОтгруженныхТоваров.ДокументОтгрузки = РеализацияТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА КАК ЕстьПрослеживаемыеТовары,
	|			РеализацияОтгруженныхТоваров.ДокументОтгрузки КАК ДокументОтгрузки
	|		ИЗ
	|			Документ.РеализацияОтгруженныхТоваров КАК РеализацияОтгруженныхТоваров
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.СведенияПрослеживаемости КАК РеализацияТоваровУслугСведенияПрослеживаемости
	|				ПО РеализацияОтгруженныхТоваров.ДокументОтгрузки = РеализацияТоваровУслугСведенияПрослеживаемости.Ссылка) КАК ПрослеживаемыеТовары
	|		ПО РеализацияОтгруженныхТоваров.Ссылка = ПрослеживаемыеТовары.ДокументОтгрузки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГосКонтракты КАК ГосКонтракты
	|			ПО ДоговорыКонтрагентов.ГосударственныйКонтракт = ГосКонтракты.Ссылка
	|		ПО РеализацияОтгруженныхТоваров.ДоговорКонтрагента = ДоговорыКонтрагентов.Ссылка
	|ГДЕ
	|	РеализацияОтгруженныхТоваров.Ссылка В(&МассивОбъектов)
	|	И РеализацияОтгруженныхТоваров.Дата > &УсловиеПоДате
	|	И &ЕстьПрослеживаемыеТовары";
	
	Если ОтбиратьВсеСФ1137 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			">= &НачалоПримененияПостановления1137");
	ИначеЕсли ВерсияПостановленияНДС1137 = 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			"< &НачалоПримененияПостановления1137");
	ИначеЕсли ВерсияПостановленияНДС1137 >= 1 И ВерсияПостановленияНДС1137 <= 3 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			"МЕЖДУ &НачалоПримененияПостановления1137 И ДАТАВРЕМЯ(2017,09,30,23,59,59)");
	ИначеЕсли ВерсияПостановленияНДС1137 = 4 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			"МЕЖДУ ДАТАВРЕМЯ(2017,10,1) И ДАТАВРЕМЯ(2021,06,30,23,59,59)");
	ИначеЕсли ВерсияПостановленияНДС1137 = 5 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			"МЕЖДУ ДАТАВРЕМЯ(2021,7,1) И ДАТАВРЕМЯ(2023,09,30,23,59,59)");
	ИначеЕсли ВерсияПостановленияНДС1137 = 6 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			">= ДАТАВРЕМЯ(2023,10,1)");
	КонецЕсли;
	
	Если ОтбиратьВсеСФ1137 Тогда
		// Не накладываем отбор.
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЕстьПрослеживаемыеТовары", "ИСТИНА");
	ИначеЕсли ЕстьПрослеживаемыеТовары Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЕстьПрослеживаемыеТовары", "ЕСТЬNULL(ПрослеживаемыеТовары.ЕстьПрослеживаемыеТовары, ЛОЖЬ) = ИСТИНА");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЕстьПрослеживаемыеТовары", "ЕСТЬNULL(ПрослеживаемыеТовары.ЕстьПрослеживаемыеТовары, ЛОЖЬ) = ЛОЖЬ");
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

// Возвращаяет массив документов, для которых выписка счетов-фактур не требуется
//
Функция СчетаФактурыНеТребуются(МассивДокументов) Экспорт
	
	ДокументыСчетФактураНеТребуются = Новый Массив;
	
	Если НЕ ЗначениеЗаполнено(МассивДокументов) Тогда
		Возврат ДокументыСчетФактураНеТребуются;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеализацияОтгруженныхТоваров.Ссылка КАК Ссылка,
	|	СУММА(РеализацияТоваровУслугТовары.СуммаНДС) КАК НДСТовары,
	|	СУММА(РеализацияТоваровУслугУслуги.СуммаНДС) КАК НДСУслуги
	|ПОМЕСТИТЬ ВТ_ДокументыСНДС
	|ИЗ
	|	Документ.РеализацияОтгруженныхТоваров КАК РеализацияОтгруженныхТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|			ПО РеализацияОтгруженныхТоваров.ДокументОтгрузки = РеализацияТоваровУслугТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Услуги КАК РеализацияТоваровУслугУслуги
	|			ПО РеализацияОтгруженныхТоваров.ДокументОтгрузки = РеализацияТоваровУслугУслуги.Ссылка
	|ГДЕ
	|	РеализацияОтгруженныхТоваров.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияОтгруженныхТоваров.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияОтгруженныхТоваров.Ссылка,
	|	РеализацияОтгруженныхТоваров.Дата,
	|	РеализацияОтгруженныхТоваров.Организация,
	|	ЕСТЬNULL(ВТ_ДокументыСНДС.НДСТовары, 0) КАК НДСТовары,
	|	ЕСТЬNULL(ВТ_ДокументыСНДС.НДСУслуги, 0) КАК НДСУслуги
	|ИЗ
	|	Документ.РеализацияОтгруженныхТоваров КАК РеализацияОтгруженныхТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДокументыСНДС КАК ВТ_ДокументыСНДС
	|		ПО (ВТ_ДокументыСНДС.Ссылка = РеализацияОтгруженныхТоваров.Ссылка)
	|ГДЕ
	|	РеализацияОтгруженныхТоваров.Ссылка В(&МассивДокументов)";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаРеализация = Результат[1].Выбрать();
	Пока ВыборкаРеализация.Следующий() Цикл
		
		Если ВыборкаРеализация.НДСУслуги > 0 Тогда
			ДокументыСчетФактураНеТребуются.Добавить(ВыборкаРеализация.Ссылка);
			
		ИначеЕсли НЕ УчетнаяПолитика.НачислятьНДСПоОтгрузке(ВыборкаРеализация.Организация, ВыборкаРеализация.Дата) 
			И ВыборкаРеализация.НДСТовары > 0 Тогда
			ДокументыСчетФактураНеТребуются.Добавить(ВыборкаРеализация.Ссылка);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДокументыСчетФактураНеТребуются;
	
КонецФункции

// Возвращаяет массив документов с прослеживаемыми товарами.
//
// Параметры:
// МассивДокументов - массив проверяемых документов.
//
// Возвращаемое значение:
// ДокументыСПрослеживаемымиТоварами - массив документов с прослеживаемыми товарами.
//
Функция ДокументыСПрослеживаемымиТоварами(МассивДокументов) Экспорт
	
	ДокументыСПрослеживаемымиТоварами = Новый Массив;
	
	Если НЕ ЗначениеЗаполнено(МассивДокументов) Тогда
		Возврат ДокументыСПрослеживаемымиТоварами
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеализацияОтгруженныхТоваров.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РеализацияОтгруженныхТоваров КАК РеализацияОтгруженныхТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|		ПО РеализацияОтгруженныхТоваров.ДокументОтгрузки = РеализацияТоваровУслугТовары.Ссылка
	|ГДЕ
	|	РеализацияОтгруженныхТоваров.Ссылка В(&МассивДокументов)
	|	И РеализацияТоваровУслугТовары.ПрослеживаемыйТовар = ИСТИНА";

	ДокументыСПрослеживаемымиТоварами = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат ДокументыСПрослеживаемымиТоварами;
	
КонецФункции

Функция ОстатокОтгруженныхТоваров(ДокументОтгрузки, ТекущийДокумент) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОтгрузки", ДокументОтгрузки);
	Запрос.УстановитьПараметр("Ссылка",           ТекущийДокумент);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	РеализацияТоваровУслугТовары.Количество КАК Количество,
	|	РеализацияТоваровУслугТовары.Цена КАК Цена,
	|	РеализацияТоваровУслугТовары.Сумма КАК Сумма,
	|	РеализацияТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
	|	РеализацияТоваровУслугТовары.СуммаНДС КАК СуммаНДС,
	|	РеализацияТоваровУслугТовары.ПереданныеСчетУчета КАК ПереданныеСчетУчета,
	|	РеализацияТоваровУслугТовары.СчетДоходов КАК СчетДоходов,
	|	РеализацияТоваровУслугТовары.СчетРасходов КАК СчетРасходов,
	|	РеализацияТоваровУслугТовары.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	РеализацияТоваровУслугТовары.Субконто КАК Субконто,
	|	РеализацияТоваровУслугТовары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка = &ДокументОтгрузки
	|	И РеализацияТоваровУслугТовары.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателяТовары.Номенклатура,
	|	-ВозвратТоваровОтПокупателяТовары.Количество,
	|	ВозвратТоваровОтПокупателяТовары.Цена,
	|	-ВозвратТоваровОтПокупателяТовары.Сумма,
	|	ВозвратТоваровОтПокупателяТовары.СтавкаНДС,
	|	-ВозвратТоваровОтПокупателяТовары.СуммаНДС,
	|	ВозвратТоваровОтПокупателяТовары.ПереданныеСчетУчета,
	|	ВозвратТоваровОтПокупателяТовары.СчетДоходов,
	|	ВозвратТоваровОтПокупателяТовары.СчетРасходов,
	|	ВозвратТоваровОтПокупателяТовары.СчетУчетаНДСПоРеализации,
	|	ВозвратТоваровОтПокупателяТовары.Субконто,
	|	0
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	|ГДЕ
	|	ВозвратТоваровОтПокупателяТовары.Ссылка.Сделка = &ДокументОтгрузки
	|	И ВозвратТоваровОтПокупателяТовары.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияОтгруженныхТоваровТовары.Номенклатура,
	|	-РеализацияОтгруженныхТоваровТовары.Количество,
	|	РеализацияОтгруженныхТоваровТовары.Цена,
	|	-РеализацияОтгруженныхТоваровТовары.Сумма,
	|	РеализацияОтгруженныхТоваровТовары.СтавкаНДС,
	|	-РеализацияОтгруженныхТоваровТовары.СуммаНДС,
	|	РеализацияОтгруженныхТоваровТовары.ПереданныеСчетУчета,
	|	РеализацияОтгруженныхТоваровТовары.СчетДоходов,
	|	РеализацияОтгруженныхТоваровТовары.СчетРасходов,
	|	РеализацияОтгруженныхТоваровТовары.СчетУчетаНДСПоРеализации,
	|	РеализацияОтгруженныхТоваровТовары.Субконто,
	|	0
	|ИЗ
	|	Документ.РеализацияОтгруженныхТоваров.Товары КАК РеализацияОтгруженныхТоваровТовары
	|ГДЕ
	|	РеализацияОтгруженныхТоваровТовары.Ссылка.ДокументОтгрузки = &ДокументОтгрузки
	|	И РеализацияОтгруженныхТоваровТовары.Ссылка <> &Ссылка
	|	И РеализацияОтгруженныхТоваровТовары.Ссылка.ЧастичнаяПродажа
	|	И РеализацияОтгруженныхТоваровТовары.Ссылка.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	СУММА(ТаблицаТоваров.Количество) КАК Количество,
	|	СУММА(ТаблицаТоваров.Количество) КАК КоличествоВсего,
	|	ТаблицаТоваров.Цена КАК Цена,
	|	СУММА(ТаблицаТоваров.Сумма) КАК Сумма,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ТаблицаТоваров.СуммаНДС) КАК СуммаНДС,
	|	ТаблицаТоваров.ПереданныеСчетУчета КАК ПереданныеСчетУчета,
	|	ТаблицаТоваров.СчетДоходов КАК СчетДоходов,
	|	ТаблицаТоваров.СчетРасходов КАК СчетРасходов,
	|	ТаблицаТоваров.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	ТаблицаТоваров.Субконто КАК Субконто,
	|	СУММА(ТаблицаТоваров.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Цена,
	|	ТаблицаТоваров.СтавкаНДС,
	|	ТаблицаТоваров.ПереданныеСчетУчета,
	|	ТаблицаТоваров.СчетДоходов,
	|	ТаблицаТоваров.СчетРасходов,
	|	ТаблицаТоваров.СчетУчетаНДСПоРеализации,
	|	ТаблицаТоваров.Субконто
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТоваров.Количество) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ОпределитьПодписантов(СписокДокументов) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылки", СписокДокументов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияОтгруженныхТоваров.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.Руководитель, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК Руководитель,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.ОтветственныйЗаОформление, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК ОтветственныйЗаОформление,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.ОтпускПроизвел, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК Кладовщик,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) КАК Склад,
	|	РеализацияОтгруженныхТоваров.Дата КАК Дата
	|ИЗ
	|	Документ.РеализацияОтгруженныхТоваров КАК РеализацияОтгруженныхТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО (РеализацияТоваровУслуг.Ссылка = РеализацияОтгруженныхТоваров.ДокументОтгрузки)
	|ГДЕ
	|	РеализацияОтгруженныхТоваров.Ссылка В(&Ссылки)";
	
	ПодписантыДокументов = Новый Соответствие;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ПодписиДокумента = Новый Структура;
		
		Если ЗначениеЗаполнено(Выборка.Руководитель) Тогда
			ПодписиДокумента.Вставить("Руководитель", Выборка.Руководитель);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.Кладовщик) Тогда
			ПодписиДокумента.Вставить("Кладовщик", Выборка.Кладовщик);
		ИначеЕсли ЗначениеЗаполнено(Выборка.Склад) Тогда
			ОтветственноеЛицоСклада = ОтветственныеЛицаБП.ОтветственноеЛицоНаСкладе(Выборка.Склад, Выборка.Дата);
			Если ЗначениеЗаполнено(ОтветственноеЛицоСклада) Тогда
				ПодписиДокумента.Вставить("Кладовщик", ОтветственноеЛицоСклада);
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.ОтветственныйЗаОформление) Тогда
			ПодписиДокумента.Вставить("ОтветственныйЗаОформление", Выборка.ОтветственныйЗаОформление);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПодписиДокумента) Тогда
			ПодписантыДокументов.Вставить(Выборка.Ссылка, ПодписиДокумента);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ПодписантыДокументов;
	
КонецФункции

#КонецОбласти

#КонецЕсли