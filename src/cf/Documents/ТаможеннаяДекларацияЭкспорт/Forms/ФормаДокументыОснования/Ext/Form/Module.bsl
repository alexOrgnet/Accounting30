
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.ДанныеЗаполнения.Свойство("СписокДокументовОснований") Тогда
		
		Основания = Параметры.ДанныеЗаполнения.СписокДокументовОснований;
		
		Для Каждого Основание Из Основания Цикл
			СтрокаДокументОснование = ДокументыОснования.Добавить();
			СтрокаДокументОснование.ДокументОснование = Основание.Значение;
		КонецЦикла;
		
	КонецЕсли;
	
	Если Параметры.Свойство("Организация") Тогда
		Организация = Параметры.Организация;
	КонецЕсли;
	
	ТолькоПросмотр = Параметры.ТолькоПросмотр;
	
	СписокТипов = Новый СписокЗначений;
	
	СписокТипов.Добавить(Тип("ДокументСсылка.РеализацияТоваровУслуг"));
	СписокТипов.Добавить(Тип("ДокументСсылка.ПередачаОС"));
	СписокТипов.Добавить(Тип("ДокументСсылка.РеализацияУслугПоПереработке"));
	СписокТипов.Добавить(Тип("ДокументСсылка.СчетФактураВыданный"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?'");
		Оповещение = Новый ОписаниеОповещения("ВопросСохранитьИзмененияЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыОснованияДокументОснованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	// Выбор типа данных будет осуществляться с помощью метода списка значений
	// Для обработки выбора типа используется описание оповещения
	Оповещение = Новый ОписаниеОповещения("ОбработкаВыбораТипаДанных", ЭтотОбъект);
	
	СписокТипов.ПоказатьВыборЭлемента(Оповещение, "Выбор типа данных");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОК(Команда)
	
	ПеренестиДанные();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВопросСохранитьИзмененияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПеренестиДанные();
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиДанные()
	
	Отказ = Ложь;
	
	ОчиститьСообщения();
	
	СписокДокументовОснований = Новый СписокЗначений;
	
	Для Индекс = 0 По ДокументыОснования.Количество() - 1 Цикл
		
		СтрокаТаблицы = ДокументыОснования[Индекс];
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДокументОснование) Тогда
			Текст = СтрШаблон(НСтр("ru = 'В строке %1 не выбран документ.'"), Индекс + 1);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				,
				"ДокументыОснования["+Индекс+"].ДокументОснование",
				,
				Отказ);
		КонецЕсли;
		
		Если СписокДокументовОснований.НайтиПоЗначению(СтрокаТаблицы.ДокументОснование) <> Неопределено
			И ЗначениеЗаполнено(СтрокаТаблицы.ДокументОснование) Тогда
			Текст = СтрШаблон(НСтр("ru = 'В строке %1 повторно указан документ %2.'"),
				Индекс + 1,
				СтрокаТаблицы.ДокументОснование);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				,
				"ДокументыОснования["+Индекс+"].ДокументОснование",
				,
				Отказ);
		КонецЕсли;
		
		СписокДокументовОснований.Добавить(СтрокаТаблицы.ДокументОснование);
		
	КонецЦикла;
	
	Если НЕ Отказ Тогда
		Модифицированность = Ложь;
		ОповеститьОВыборе(СписокДокументовОснований);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораТипаДанных(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		
		ИмяОткрываемойФормы = "";
		ПараметрыФормы = Новый Структура("МножественныйВыбор", Истина);
		ПараметрыФормы.Вставить("ТолькоПросмотр", ТолькоПросмотр);
		Если ВыбранныйЭлемент.Значение = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			ИмяОткрываемойФормы = "Документ.РеализацияТоваровУслуг.ФормаВыбора";
			Если ЗначениеЗаполнено(Организация) Тогда
				ПараметрыФормы.Вставить("Отбор", Новый Структура("Организация", Организация));
			КонецЕсли;
		ИначеЕсли ВыбранныйЭлемент.Значение = Тип("ДокументСсылка.РеализацияУслугПоПереработке") Тогда
			ИмяОткрываемойФормы = "Документ.РеализацияУслугПоПереработке.ФормаВыбора";
			Если ЗначениеЗаполнено(Организация) Тогда
				ПараметрыФормы.Вставить("Отбор", Новый Структура("Организация", Организация));
			КонецЕсли;
		ИначеЕсли ВыбранныйЭлемент.Значение = Тип("ДокументСсылка.ПередачаОС") Тогда
			ИмяОткрываемойФормы = "Документ.ПередачаОС.ФормаВыбора";
			Если ЗначениеЗаполнено(Организация) Тогда
				ПараметрыФормы.Вставить("Отбор", Новый Структура("Организация", Организация));
			КонецЕсли;
		ИначеЕсли ВыбранныйЭлемент.Значение = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
			ИмяОткрываемойФормы = "Документ.СчетФактураВыданный.ФормаВыбора";
			ПараметрыФормы.Вставить("Отбор", ПараметрыОтбораСчетовФактурВыданных(Организация));
		КонецЕсли;
		
		Оповещение = Новый ОписаниеОповещения("ВвестиДокументОснованиеЗавершение", ЭтотОбъект);
		
		ОткрытьФорму(ИмяОткрываемойФормы, ПараметрыФормы, ЭтотОбъект,,,, Оповещение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПараметрыОтбораСчетовФактурВыданных(Организация)
	
	ЗначениеОтбора = Новый Структура();
	
	Если ЗначениеЗаполнено(Организация) Тогда
		ЗначениеОтбора.Вставить("Организация", Организация);
	КонецЕсли;
	
	ЗначениеОтбора.Вставить("ВидСчетаФактуры", Перечисления.ВидСчетаФактурыВыставленного.НаРеализацию);
	ЗначениеОтбора.Вставить("ТипДокументаОснования", Тип("ДокументСсылка.ОтчетКомиссионераОПродажах"));
	
	Возврат ЗначениеОтбора;
	
КонецФункции

&НаКлиенте
Процедура ВвестиДокументОснованиеЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ВвестиДокументОснованиеЗавершениеНаСервере(РезультатВыбора)
	
КонецПроцедуры

&НаСервере
Процедура ВвестиДокументОснованиеЗавершениеНаСервере(РезультатВыбора)
	
	ТекДанные = ДокументыОснования.НайтиПоИдентификатору(Элементы.ДокументыОснования.ТекущаяСтрока);
	
	Если ТекДанные <> Неопределено Тогда
		
		Индекс = ДокументыОснования.Индекс(ТекДанные);
		КоличествоСтрок = РезультатВыбора.Количество();
		ТекДанные.ДокументОснование = РезультатВыбора[КоличествоСтрок - 1];
		
		Если КоличествоСтрок - 2 >= 0 Тогда
			Для Итератор = 0 По КоличествоСтрок - 2 Цикл
				СтрокаДокументыОснования = ДокументыОснования.Вставить(Индекс);
				СтрокаДокументыОснования.ДокументОснование = РезультатВыбора[Итератор];
			КонецЦикла;
		КонецЕсли;
	
	КонецЕсли;

КонецПроцедуры

#КонецОбласти