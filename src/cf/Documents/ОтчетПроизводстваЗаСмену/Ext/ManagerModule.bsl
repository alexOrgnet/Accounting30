#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 13, 0);
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

Функция ТекстЗапросаДанныеДляОбновленияЦенДокументов() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтчетПроизводстваЗаСменуПродукция.Номенклатура КАК Номенклатура,
	|	ОтчетПроизводстваЗаСменуПродукция.ПлановаяСтоимость КАК Цена,
	|	&Валюта КАК Валюта,
	|	&СпособЗаполненияЦены,
	|	&ЦенаВключаетНДС
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	Документ.ОтчетПроизводстваЗаСмену.Продукция КАК ОтчетПроизводстваЗаСменуПродукция
	|ГДЕ
	|	ОтчетПроизводстваЗаСменуПродукция.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтчетПроизводстваЗаСменуУслуги.Номенклатура,
	|	ОтчетПроизводстваЗаСменуУслуги.ПлановаяСтоимость,
	|	&Валюта,
	|	&СпособЗаполненияЦены,
	|	&ЦенаВключаетНДС
	|ИЗ
	|	Документ.ОтчетПроизводстваЗаСмену.Услуги КАК ОтчетПроизводстваЗаСменуУслуги
	|ГДЕ
	|	ОтчетПроизводстваЗаСменуУслуги.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтчетПроизводстваЗаСменуВозвратныеОтходы.Номенклатура,
	|	ОтчетПроизводстваЗаСменуВозвратныеОтходы.Цена,
	|	&Валюта,
	|	&СпособЗаполненияЦены,
	|	&ЦенаВключаетНДС
	|ИЗ
	|	Документ.ОтчетПроизводстваЗаСмену.ВозвратныеОтходы КАК ОтчетПроизводстваЗаСменуВозвратныеОтходы
	|ГДЕ
	|	ОтчетПроизводстваЗаСменуВозвратныеОтходы.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Валюта";
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы <> "ФормаДокумента"
		И ВидФормы <> "ФормаОбъекта" Тогда
		Возврат;
	КонецЕсли;
	
	ВидОперации = Неопределено;
	
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Ключ, "ВидОперации");
		Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
			ВидОперации = Перечисления.ВидыОперацийОтчетПроизводстваЗаСмену.ОтчетПроизводстваЗаСмену;
		КонецЕсли;
	ИначеЕсли Параметры.Свойство("Основание") И ЗначениеЗаполнено(Параметры.Основание) 
		И ТипЗнч(Параметры.Основание) = Тип("ДокументСсылка.РеализацияУслугПоПереработке") Тогда
		ВидОперации = Перечисления.ВидыОперацийОтчетПроизводстваЗаСмену.ОтчетПроизводстваЗаСмену;
	КонецЕсли;
	
	// Если документ копируется, то вид операции получаем из копируемого документа.
	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("ЗначениеКопирования")
			И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			ВидОперации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				Параметры.ЗначениеКопирования, "ВидОперации");
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВидОперации) Тогда
		Если Параметры.Свойство("ЗначенияЗаполнения") 
			И ТипЗнч(Параметры.ЗначенияЗаполнения) = Тип("Структура") Тогда
			Если Параметры.ЗначенияЗаполнения.Свойство("ВидОперации") Тогда
				ВидОперации = Параметры.ЗначенияЗаполнения.ВидОперации;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ФормыРеализацииТоваровУслуг = ПолучитьСоответствиеВидовОперацийФормам();
	ВыбраннаяФорма = ФормыРеализацииТоваровУслуг[ВидОперации];
	Если ВыбраннаяФорма = Неопределено Тогда
		ВыбраннаяФорма = "ФормаДокумента";
		Параметры.Вставить("ИзменитьВидОперации");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СчетаУчета

Функция УстановитьПравилаЗаполненияСчетовУчета(Правила) Экспорт
	
	// Шапка
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "", "СчетЗатрат", "ЗатратыНаПроизводство");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "ПодразделениеЗатрат", "ПодразделениеЗатрат");
	
	// Табличная часть Продукция
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Продукция", "Счет", "ЗапасыКромеЗабалансовых");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхЗаполнения(Правила, "Склад", "Склад");
	
		// Табличная часть Материалы
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Материалы", "Счет", "ЗапасыКромеЗабалансовых");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхЗаполнения(Правила, "Склад", "Склад");
	
	// Табличная часть ВозвратныеОтходы
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "ВозвратныеОтходы", "Счет", "ЗапасыКромеЗабалансовых");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхЗаполнения(Правила, "Склад", "Склад");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ВедетсяПроизводственнаяДеятельность");
	
	// Табличная часть Услуги
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Услуги", "Счет", "Затраты");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоУсловиеРазрешено(Правила, "ВедетсяПроизводственнаяДеятельность");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "Субконто1",           "СубконтоЗатрат1");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "Субконто2",           "СубконтоЗатрат2");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "Субконто3",           "СубконтоЗатрат3");
	СчетаУчетаВДокументах.ДобавитьПодчиненноеПравилоЗаполнения(Правила, "ПодразделениеЗатрат", "ПодразделениеЗатрат");
	
	// Данные заполнения
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Дата");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Организация");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Склад");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеДополнительныхДанных(Правила, "ВедетсяПроизводственнаяДеятельность", "ВидОперации");
	
	Возврат Правила;
	
КонецФункции

Процедура ДополнитьДанныеЗаполненияСчетовУчета(ДанныеЗаполнения) Экспорт
	
	Если ДанныеЗаполнения.Свойство("ВедетсяПроизводственнаяДеятельность") Тогда
		
		ДанныеЗаполнения.ВедетсяПроизводственнаяДеятельность = 
			(ДанныеЗаполнения.ВидОперации = Перечисления.ВидыОперацийОтчетПроизводстваЗаСмену.ОтчетПроизводстваЗаСмену);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция РеквизитыЗаСсылками(ВидОперации) Экспорт
	
	РеквизитыЗаСсылками = Новый Соответствие;
	
	// Прячутся за "СписокМатериалов"
	СписокМатериалов = Новый Массив;
	Если ВидОперации = Перечисления.ВидыОперацийОтчетПроизводстваЗаСмену.ВыпускПродукции Тогда
		
		СписокМатериалов.Добавить("Материалы.Номенклатура");
		СписокМатериалов.Добавить("Материалы.Счет");
		СписокМатериалов.Добавить("Материалы.Количество");
		СписокМатериалов.Добавить("Материалы.НоменклатурнаяГруппа");
		СписокМатериалов.Добавить("Материалы.СпособУчетаНДС");
		
	КонецЕсли;
	
	Для Каждого ИмяРеквизита Из СписокМатериалов Цикл
		РеквизитыЗаСсылками.Вставить(ИмяРеквизита, "СписокМатериалов");
	КонецЦикла;
	
	Возврат РеквизитыЗаСсылками;
	
КонецФункции

// Заполняет табличную часть Материалы на основании данных табличных частей Продукция и Услуги.
// Процедура добавляет строки, не очищая табличную часть перед заполнением.
// Счета учета и СпособУчетаНДС не заполняются. При необходимости, об этом должен позаботиться вызывающий код.
//
// Параметры:
//  Материалы - ДокументТабличнаяЧасть.ОтчетПроизводстваЗаСмену.Материалы - заполняемая табличная часть.
//              Допускается передавать соответствующие данные формы 
//              или таблицу значений со совпадающей структурой.
//  Продукция - ТаблицаЗначений - структура таблицы совпадает со структурой одноименной табличной части
//  Услуги    - ТаблицаЗначений - структура таблицы совпадает со структурой одноименной табличной части
//  ПрямыеРасходыУчитываютсяПоПродукции - Булево - Истина, если ведется учет затрат по продукции.
//  ВедетсяУчетПрослеживаемыхТоваров    - Булево - признак применения Федерального Закона от 09.11.2020 № 371-ФЗ,
//                                        который вводит понятие прослеживаемости для определенных групп товаров.
//
Процедура ЗаполнитьМатериалыПоПродукцииУслугам(Материалы, Продукция, Услуги = Неопределено,
												ПрямыеРасходыУчитываютсяПоПродукции,
												ВедетсяУчетПрослеживаемыхТоваров, Дата) Экспорт
	
	Выпуск = Новый ТаблицаЗначений();
	Выпуск.Колонки.Добавить("НомерСписка",           Новый ОписаниеТипов("Число"));
	Выпуск.Колонки.Добавить("НомерСтроки",           Новый ОписаниеТипов("Число"));
	Выпуск.Колонки.Добавить("НоменклатураПродукции", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Выпуск.Колонки.Добавить("НоменклатурнаяГруппа",  Новый ОписаниеТипов("СправочникСсылка.НоменклатурныеГруппы"));
	Выпуск.Колонки.Добавить("Спецификация",          Новый ОписаниеТипов("СправочникСсылка.СпецификацииНоменклатуры"));
	Выпуск.Колонки.Добавить("Количество",            Новый ОписаниеТипов("Число"));
	
	// Исходные данные
	Для Каждого СтрокаПродукции Из Продукция Цикл
		НоваяСтрокаВыпуск = Выпуск.Добавить();
		НоваяСтрокаВыпуск.НомерСписка           = 0;
		НоваяСтрокаВыпуск.НоменклатураПродукции = СтрокаПродукции.Номенклатура;
		ЗаполнитьЗначенияСвойств(НоваяСтрокаВыпуск, СтрокаПродукции);
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Услуги) Тогда
		Для Каждого СтрокаУслуги Из Услуги Цикл
			НоваяСтрокаВыпуск = Выпуск.Добавить();
			НоваяСтрокаВыпуск.НомерСписка = 1;
			ЗаполнитьЗначенияСвойств(НоваяСтрокаВыпуск, СтрокаУслуги);
		КонецЦикла;
	КонецЕсли;
	
	
	// Получим данные о сырье для заполнения табличной части
	ЭлементыТекстаЗапроса = Новый Массив;
	// Исходные данные
	ЭлементыТекстаЗапроса.Добавить(
		"ВЫБРАТЬ
		|	Выпуск.НомерСписка КАК НомерСписка,
		|	Выпуск.НомерСтроки КАК НомерСтрокиВыпуск,
		|	Выпуск.НоменклатураПродукции КАК НоменклатураПродукции,
		|	Выпуск.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	Выпуск.Спецификация КАК Спецификация,
		|	Выпуск.Количество КАК КоличествоПродукции
		|ПОМЕСТИТЬ Выпуск
		|ИЗ
		|	&Выпуск КАК Выпуск");
	
	// Данные о расходе сырья
	ЭлементыТекстаЗапроса.Добавить(УправлениеПроизводством.ТекстЗапросаВременнаяТаблицаЗатратыСырья());
	
	// Преобразуем в формат получателя
	ЭлементыТекстаЗапроса.Добавить(
		"ВЫБРАТЬ
		|	МАКСИМУМ(ЗатратыСырья.НомерСтрокиСпецификации) КАК НомерСтрокиСпецификации,
		|	МИНИМУМ(ЗатратыСырья.НомерСписка) КАК НомерСписка,
		|	МИНИМУМ(ВЫБОР
		|			КОГДА &ПрямыеРасходыУчитываютсяПоПродукции
		|				ТОГДА ЗатратыСырья.НомерСтрокиВыпуск
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК НомерСтрокиВыпуск,
		|	ВЫБОР
		|		КОГДА &ПрямыеРасходыУчитываютсяПоПродукции
		|			ТОГДА ЗатратыСырья.НоменклатураПродукции
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|	КОНЕЦ КАК Продукция,
		|	ЗатратыСырья.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	ЗатратыСырья.НоменклатурнаяГруппа.СпособУчетаНДС КАК СпособУчетаНДС,
		|	ЗатратыСырья.Номенклатура КАК Номенклатура,
		|	ЗатратыСырья.Номенклатура.Наименование КАК НоменклатураПредставление,
		|	СУММА(ЗатратыСырья.Количество) КАК Количество,
		|	ЗатратыСырья.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	1 КАК Коэффициент,
		|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.Принимаются) КАК ОтражениеВУСН,
		|	ЗатратыСырья.СтатьяЗатрат КАК СтатьяЗатрат,
		|	ВЫБОР
		|		КОГДА &ВедетсяУчетПрослеживаемыхТоваров
		|			ТОГДА ЗатратыСырья.Номенклатура.ПрослеживаемыйТовар
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПрослеживаемыйТовар,
		|	ЗатратыСырья.Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения
		|ИЗ
		|	ЗатратыСырья КАК ЗатратыСырья
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗатратыСырья.Номенклатура,
		|	ЗатратыСырья.Номенклатура.Наименование,
		|	ЗатратыСырья.НоменклатурнаяГруппа,
		|	ЗатратыСырья.НоменклатурнаяГруппа.СпособУчетаНДС,
		|	ЗатратыСырья.ЕдиницаИзмерения,
		|	ЗатратыСырья.СтатьяЗатрат,
		|	ВЫБОР
		|		КОГДА &ПрямыеРасходыУчитываютсяПоПродукции
		|			ТОГДА ЗатратыСырья.НоменклатураПродукции
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|	КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСписка,
		|	НомерСтрокиВыпуск,
		|	НомерСтрокиСпецификации,
		|	НоменклатураПредставление,
		|	ЗатратыСырья.Номенклатура.СтранаПроисхождения,
		|	ВЫБОР
		|		КОГДА &ВедетсяУчетПрослеживаемыхТоваров
		|			ТОГДА ЗатратыСырья.Номенклатура.ПрослеживаемыйТовар
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ");
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Выпуск", Выпуск);
	Запрос.Параметры.Вставить("ПрямыеРасходыУчитываютсяПоПродукции", ПрямыеРасходыУчитываютсяПоПродукции);
	Запрос.Параметры.Вставить("ВедетсяУчетПрослеживаемыхТоваров", ВедетсяУчетПрослеживаемыхТоваров);
	
	Запрос.Текст = СтрСоединить(ЭлементыТекстаЗапроса, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Материалы.Добавить(), Выборка);
	КонецЦикла;
	
	Если ВедетсяУчетПрослеживаемыхТоваров Тогда
		МассивНоменклатуры = ОбщегоНазначения.ВыгрузитьКолонку(Материалы, "Номенклатура", Истина);
		СведенияПрослеживаемостиИзИстории = Справочники.Номенклатура.ПризнакПрослеживаемостиНаДатуИзИстории(МассивНоменклатуры, Дата);
		Для Каждого Строка Из Материалы Цикл
			СтрокаСведений = СведенияПрослеживаемостиИзИстории.получить(Строка.Номенклатура);
			Если НЕ СтрокаСведений = Неопределено Тогда
				Строка.ПрослеживаемыйТовар = СтрокаСведений.ПрослеживаемыйТовар;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСоответствиеВидовОперацийФормам() Экспорт

	ФормыРеализацияТоваровУслуг = Новый Соответствие;
	ФормыРеализацияТоваровУслуг.Вставить(Перечисления.ВидыОперацийОтчетПроизводстваЗаСмену.ОтчетПроизводстваЗаСмену, "ФормаДокументаОтчетПроизводстваЗаСмену");
	ФормыРеализацияТоваровУслуг.Вставить(Перечисления.ВидыОперацийОтчетПроизводстваЗаСмену.ВыпускПродукции, "ФормаВыпускПродукции");
	
	Возврат ФормыРеализацияТоваровУслуг;

КонецФункции

// Перечень табличных частей, данные которых не используются 
// в контексте документа, скрыты от пользователя
Функция НеИспользуемыеТабличныеЧасти(ВидОперации) Экспорт
	
	ТабличныеЧасти = Новый Массив;
	
	Если ВидОперации = Перечисления.ВидыОперацийОтчетПроизводстваЗаСмену.ВыпускПродукции Тогда
		
		// Все, кроме Продукции и Материалов
		ТабличныеЧасти.Добавить("Услуги");
		ТабличныеЧасти.Добавить("ВозвратныеОтходы");
		
	КонецЕсли;
	
	Возврат ТабличныеЧасти;
	
КонецФункции

Процедура УдалитьНесвязанныеМатериалыСПродукцией(Материалы, Продукция) Экспорт
	
	СтрокиНаУдаление = Новый Массив;
	
	КлючиСтрокПродукции = Новый Соответствие; 
	Для каждого Строка Из Продукция Цикл 
		КлючиСтрокПродукции.Вставить(Строка.КлючСтроки, Истина);
	КОнецЦикла;
	
	Для Каждого СтрокаМатериалы Из Материалы Цикл
		Если КлючиСтрокПродукции.Получить(СтрокаМатериалы.КлючСтроки) = Неопределено Тогда
			СтрокиНаУдаление.Добавить(СтрокаМатериалы);
		КонецЕсли;
	КонецЦикла;
	
	Пока СтрокиНаУдаление.Количество() > 0 Цикл
		
		// Удаляем строки с конца
		СтрокаНаУдаление = СтрокиНаУдаление[СтрокиНаУдаление.Количество() - 1];
		
		//СтрокаНаУдаление = Материалы.Получить(ИндексПоследнийСтрокиНаУдаление);
		Материалы.Удалить(СтрокаНаУдаление);
		
		// Удалим НомерСтрокНаУдаление, который уже удалили
		СтрокиНаУдаление.Удалить(СтрокиНаУдаление.Количество() - 1);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ПодготовкаПараметровПроведенияДокумента

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);

	НомераТаблиц = Новый Структура;

	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц);
	Результат    = Запрос.ВыполнитьПакет();
	ТаблицаРеквизиты = Результат[НомераТаблиц["Реквизиты"]].Выгрузить();
	ПараметрыПроведения.Вставить("Реквизиты", ТаблицаРеквизиты);
	
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	ВедетсяУчетПрослеживаемыхТоваров  = ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров")
		И ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(Реквизиты.Период);
	Реквизиты.Вставить("ВедетсяУчетПрослеживаемыхТоваров", ВедетсяУчетПрослеживаемыхТоваров);
	
	ИспользоватьПлановуюСебестоимость = Справочники.НастройкиУчетаЗатрат.ПлановаяСебестоимость(
		Реквизиты.Период,
		Реквизиты.Организация);
	
	ИспользоватьСчет40 = УчетПроизводства.ИспользоватьСчетВыпускПродукции(Реквизиты.Период, Реквизиты.Организация);
	
	СпособОценкиМПЗ = УчетнаяПолитика.СпособОценкиМПЗ(Реквизиты.Организация, Реквизиты.Период);
	ВедетсяУчетПоПартиям = СпособОценкиМПЗ <> Перечисления.СпособыОценки.ПоСредней;
	ИспользуетсяОтложенноеПроведение = ПроведениеСервер.ИспользуетсяОтложенноеПроведение(Реквизиты.Организация, Реквизиты.Период);
	УчетПоПродукции = Справочники.НастройкиУчетаЗатрат.ВедетсяУчетЗатратПоПродукции(
		Реквизиты.Период, Реквизиты.СчетЗатрат, Реквизиты.Организация);
	
	Реквизиты.Вставить("ПрименяетсяУСН",
		УчетнаяПолитика.ПрименяетсяУСН(Реквизиты.Организация, Реквизиты.Период));
	Реквизиты.Вставить("ПлательщикНДС",
		УчетнаяПолитика.ПлательщикНДС(Реквизиты.Организация, Реквизиты.Период));
	Реквизиты.Вставить("ПрименяетсяУСНДоходыМинусРасходы",
		УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Реквизиты.Организация, Реквизиты.Период));
	Реквизиты.Вставить("ИспользуетсяОтложенноеПроведение", ИспользуетсяОтложенноеПроведение);
	
	Запрос.УстановитьПараметр("СинонимПродукция",			НСтр("ru = 'Продукция'"));
	Запрос.УстановитьПараметр("СинонимУслуги",				НСтр("ru = 'Услуги'"));
	Запрос.УстановитьПараметр("СинонимВозвратныеОтходы",	НСтр("ru = 'Возвратные отходы'"));
	Запрос.УстановитьПараметр("СинонимМатериалы",			НСтр("ru = 'Материалы'"));
	
	Запрос.УстановитьПараметр("ИспользоватьПлановуюСебестоимость", 
															ИспользоватьПлановуюСебестоимость);
	Запрос.УстановитьПараметр("ИспользоватьСчет40",			ИспользоватьСчет40);
	Запрос.УстановитьПараметр("ВедетсяУчетПоПартиям",		ВедетсяУчетПоПартиям);
	Запрос.УстановитьПараметр("УчетПоПродукции",            УчетПоПродукции);
	
	Запрос.УстановитьПараметр("СодержаниеПроводкиВыпускОтходов",		"Оприходование возвратных отходов");
	Запрос.УстановитьПараметр("СодержаниеПроводкиСписаниеМатериалов",	УчетПроизводства.ТекстСодержанияПроводкиСписанияМатериалов());
	
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",	ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	Запрос.УстановитьПараметр("ПустоеПодразделение",			БухгалтерскийУчетПереопределяемый.ПустоеПодразделение());
	
	Запрос.УстановитьПараметр("Субсчета10", БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.Материалы));
	Запрос.УстановитьПараметр("ИспользуетсяОтложенноеПроведение", ИспользуетсяОтложенноеПроведение);
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПлановаяСтоимостьПродукции(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПлановаяСтоимостьУслуг(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаВыпускПродукции(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаВыпускУслуг(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаВыпускОтходов(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаСписаниеМатериалов(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаНДС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПоступлениеРасходовУСН(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаРегистрацияОтложенныхРасчетовВПоследовательности(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПрослеживаемыеТоварыСписание(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПрослеживаемыеТоварыВозврат(НомераТаблиц, ПараметрыПроведения, Реквизиты);

	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда
		Результат = Запрос.ВыполнитьПакет();
		Для каждого НомерТаблицы Из НомераТаблиц Цикл
			ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
		КонецЦикла;
	КонецЕсли;

	Возврат ПараметрыПроведения;

КонецФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц)
	
	НомераТаблиц.Вставить("ВременнаяТаблицаСоставДокумента", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МАКСИМУМ(СоставДокумента.ЕстьПродукция) КАК ЕстьПродукция,
	|	МАКСИМУМ(СоставДокумента.ЕстьУслуги) КАК ЕстьУслуги,
	|	МАКСИМУМ(СоставДокумента.ЕстьВозвратныеОтходы) КАК ЕстьВозвратныеОтходы,
	|	МАКСИМУМ(СоставДокумента.ЕстьМатериалы) КАК ЕстьМатериалы
	|ПОМЕСТИТЬ СоставДокумента
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		ИСТИНА КАК ЕстьПродукция,
	|		ЛОЖЬ КАК ЕстьУслуги,
	|		ЛОЖЬ КАК ЕстьВозвратныеОтходы,
	|		ЛОЖЬ КАК ЕстьМатериалы
	|	ИЗ
	|		Документ.ОтчетПроизводстваЗаСмену.Продукция КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ЛОЖЬ,
	|		ЛОЖЬ
	|	ИЗ
	|		Документ.ОтчетПроизводстваЗаСмену.Услуги КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ЛОЖЬ
	|	ИЗ
	|		Документ.ОтчетПроизводстваЗаСмену.ВозвратныеОтходы КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ИСТИНА
	|	ИЗ
	|		Документ.ОтчетПроизводстваЗаСмену.Материалы КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка = &Ссылка) КАК СоставДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	Реквизиты.СчетЗатрат КАК СчетЗатрат,
	|	Реквизиты.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
	|	Реквизиты.НДСвСтоимостиТоваров КАК НДСвСтоимостиТоваров,
	|	Реквизиты.ДляСписанияНДСиспользоватьСчетИАналитикуУчетаЗатрат КАК ДляСписанияНДСиспользоватьСчетИАналитикуУчетаЗатрат,
	|	Реквизиты.СчетСписанияНДС КАК СчетСписанияНДС,
	|	Реквизиты.СубконтоСписанияНДС1 КАК СубконтоСписанияНДС1,
	|	Реквизиты.СубконтоСписанияНДС2 КАК СубконтоСписанияНДС2,
	|	Реквизиты.СубконтоСписанияНДС3 КАК СубконтоСписанияНДС3,
	|	Реквизиты.ВидОперации КАК ВидОперации
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.ОтчетПроизводстваЗаСмену КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	Реквизиты.СчетЗатрат КАК СчетЗатрат,
	|	Реквизиты.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
	|	Реквизиты.НДСвСтоимостиТоваров КАК НДСвСтоимостиТоваров,
	|	Реквизиты.ДляСписанияНДСиспользоватьСчетИАналитикуУчетаЗатрат КАК ДляСписанияНДСиспользоватьСчетИАналитикуУчетаЗатрат,
	|	Реквизиты.СчетСписанияНДС КАК СчетСписанияНДС,
	|	Реквизиты.СубконтоСписанияНДС1 КАК СубконтоСписанияНДС1,
	|	Реквизиты.СубконтоСписанияНДС2 КАК СубконтоСписанияНДС2,
	|	Реквизиты.СубконтоСписанияНДС3 КАК СубконтоСписанияНДС3,
	|	ЕСТЬNULL(СоставДокумента.ЕстьПродукция, ЛОЖЬ) КАК ЕстьПродукция,
	|	ЕСТЬNULL(СоставДокумента.ЕстьУслуги, ЛОЖЬ) КАК ЕстьУслуги,
	|	ЕСТЬNULL(СоставДокумента.ЕстьВозвратныеОтходы, ЛОЖЬ) КАК ЕстьВозвратныеОтходы,
	|	ЕСТЬNULL(СоставДокумента.ЕстьМатериалы, ЛОЖЬ) КАК ЕстьМатериалы,
	|	Реквизиты.ВидОперации КАК ВидОперации
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ СоставДокумента КАК СоставДокумента
	|		ПО (ИСТИНА)";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	ТекстЗапроса = "";
	Если Реквизиты.ЕстьПродукция Тогда
		НомераТаблиц.Вставить("ВременнаяТаблицаПродукция",	НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ТаблицаПродукция.Ссылка,
		|	ТаблицаПродукция.НомерСтроки,
		|	ТаблицаПродукция.Номенклатура,
		|	ТаблицаПродукция.НоменклатурнаяГруппа,
		|	ТаблицаПродукция.Счет КАК СчетУчета,
		|	ТаблицаПродукция.Количество,
		|	ТаблицаПродукция.СуммаПлановая
		|ПОМЕСТИТЬ ТаблицаПродукция
		|ИЗ
		|	Документ.ОтчетПроизводстваЗаСмену.Продукция КАК ТаблицаПродукция
		|ГДЕ
		|	ТаблицаПродукция.Ссылка = &Ссылка"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;

	Если Реквизиты.ЕстьУслуги Тогда
		НомераТаблиц.Вставить("ВременнаяТаблицаУслуги",		НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ТаблицаУслуги.Ссылка,
		|	ТаблицаУслуги.НомерСтроки,
		|	ТаблицаУслуги.Номенклатура,
		|	ТаблицаУслуги.НоменклатурнаяГруппа,
		|	ТаблицаУслуги.Счет КАК СчетЗатрат,
		|	ТаблицаУслуги.ПодразделениеЗатрат,
		|	ТаблицаУслуги.Субконто1,
		|	ТаблицаУслуги.Субконто2,
		|	ТаблицаУслуги.Субконто3,
		|	ТаблицаУслуги.Количество,
		|	ТаблицаУслуги.СуммаПлановая,
		|	ВЫБОР
		|		КОГДА ТаблицаУслуги.Номенклатура.НаименованиеПолное ПОДОБНО """"
		|			ТОГДА ТаблицаУслуги.Номенклатура.Наименование
		|		ИНАЧЕ ТаблицаУслуги.Номенклатура.НаименованиеПолное
		|	КОНЕЦ КАК Содержание
		|ПОМЕСТИТЬ ТаблицаУслуги
		|ИЗ
		|	Документ.ОтчетПроизводстваЗаСмену.Услуги КАК ТаблицаУслуги
		|ГДЕ
		|	ТаблицаУслуги.Ссылка = &Ссылка"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если Реквизиты.ЕстьВозвратныеОтходы Тогда
		НомераТаблиц.Вставить("ВременнаяТаблицаОтходы",		НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ТаблицаОтходы.Ссылка,
		|	ТаблицаОтходы.НомерСтроки,
		|	ТаблицаОтходы.Номенклатура,
		|	ТаблицаОтходы.НоменклатурнаяГруппа,
		|	ТаблицаОтходы.Продукция,
		|	ТаблицаОтходы.Счет КАК СчетУчета,
		|	ТаблицаОтходы.СтатьяЗатрат,
		|	ТаблицаОтходы.Количество,
		|	ТаблицаОтходы.Сумма,
		|	ТаблицаОтходы.ОтражениеВУСН
		|ПОМЕСТИТЬ ТаблицаОтходы
		|ИЗ
		|	Документ.ОтчетПроизводстваЗаСмену.ВозвратныеОтходы КАК ТаблицаОтходы
		|ГДЕ
		|	ТаблицаОтходы.Ссылка = &Ссылка"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;

	Если Реквизиты.ЕстьМатериалы Тогда
		НомераТаблиц.Вставить("ВременнаяТаблицаМатериалы",	НомераТаблиц.Количество());
		Если Реквизиты.ВидОперации = Перечисления.ВидыОперацийОтчетПроизводстваЗаСмену.ВыпускПродукции Тогда
			ТекстЗапроса = ТекстЗапроса + 
			"ВЫБРАТЬ
			|	ТаблицаМатериалы.Ссылка КАК Ссылка,
			|	ТаблицаМатериалы.НомерСтроки КАК НомерСтроки,
			|	ТаблицаМатериалы.Номенклатура КАК Номенклатура,
			|	ТаблицаМатериалы.Счет КАК Счет,
			|	ТаблицаМатериалы.Количество КАК Количество,
			|	ТаблицаМатериалы.ДокументОприходования КАК ДокументОприходования,
			|	ТаблицаМатериалы.Себестоимость КАК Себестоимость,
			|	ТаблицаМатериалы.СтатьяЗатрат КАК СтатьяЗатрат,
			|	ТаблицаМатериалы.СпособУчетаНДС КАК СпособУчетаНДС,
			|	ОтчетПроизводстваЗаСменуПродукция.Номенклатура КАК Продукция,
			|	ОтчетПроизводстваЗаСменуПродукция.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
			|	ТаблицаМатериалы.ИдентификаторСтроки КАК ИдентификаторСтроки
			|ПОМЕСТИТЬ ТаблицаМатериалы
			|ИЗ
			|	Документ.ОтчетПроизводстваЗаСмену.Материалы КАК ТаблицаМатериалы
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПроизводстваЗаСмену.Продукция КАК ОтчетПроизводстваЗаСменуПродукция
			|		ПО ТаблицаМатериалы.Ссылка = ОтчетПроизводстваЗаСменуПродукция.Ссылка
			|			И ТаблицаМатериалы.КлючСтроки = ОтчетПроизводстваЗаСменуПродукция.КлючСтроки
			|ГДЕ
			|	ТаблицаМатериалы.Ссылка = &Ссылка"
			+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
		Иначе
			ТекстЗапроса = ТекстЗапроса + 
			"ВЫБРАТЬ
			|	ТаблицаМатериалы.Ссылка КАК Ссылка,
			|	ТаблицаМатериалы.НомерСтроки КАК НомерСтроки,
			|	ТаблицаМатериалы.Номенклатура КАК Номенклатура,
			|	ТаблицаМатериалы.Счет КАК Счет,
			|	ТаблицаМатериалы.Количество КАК Количество,
			|	ТаблицаМатериалы.ДокументОприходования КАК ДокументОприходования,
			|	ТаблицаМатериалы.Себестоимость КАК Себестоимость,
			|	ТаблицаМатериалы.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
			|	ТаблицаМатериалы.СтатьяЗатрат КАК СтатьяЗатрат,
			|	ТаблицаМатериалы.СпособУчетаНДС КАК СпособУчетаНДС,
			|	ВЫБОР
			|		КОГДА &УчетПоПродукции
			|			ТОГДА ТаблицаМатериалы.Продукция
			|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.Пустаяссылка)
			|	КОНЕЦ КАК Продукция,
			|	ТаблицаМатериалы.ИдентификаторСтроки КАК ИдентификаторСтроки
			|ПОМЕСТИТЬ ТаблицаМатериалы
			|ИЗ
			|	Документ.ОтчетПроизводстваЗаСмену.Материалы КАК ТаблицаМатериалы
			|ГДЕ
			|	ТаблицаМатериалы.Ссылка = &Ссылка"
			+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
		КонецЕсли;
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПлановаяСтоимостьПродукции(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ЕстьПродукция Тогда
		ПараметрыПроведения.Вставить("ПлановаяСтоимостьПродукцииРеквизиты",	Неопределено);
		ПараметрыПроведения.Вставить("ПлановаяСтоимостьПродукцииТаблица",	Неопределено);
		Возврат "";
	КонецЕсли;

	НомераТаблиц.Вставить("ПлановаяСтоимостьПродукцииРеквизиты",	НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПлановаяСтоимостьПродукцииТаблица",		НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	&ИспользоватьСчет40 КАК ИспользоватьСчет40
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Продукция"" КАК ИмяСписка,
	|	&СинонимПродукция КАК СинонимСписка,
	|	ТаблицаПродукция.НомерСтроки КАК НомерСтроки,
	|	ТаблицаПродукция.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСчет40
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыпускПродукции)
	|		ИНАЧЕ Реквизиты.СчетЗатрат
	|	КОНЕЦ КАК СчетЗатрат,
	|	Реквизиты.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
	|	ТаблицаПродукция.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаЗатрат,
	|	ТаблицаПродукция.СчетУчета КАК СчетУчета,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.Склад КАК Склад,
	|	ТаблицаПродукция.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПлановуюСебестоимость 
	|			ТОГДА ТаблицаПродукция.СуммаПлановая
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаПлановая,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПлановуюСебестоимость 
	|			ТОГДА ТаблицаПродукция.СуммаПлановая
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаПлановаяНУ
	|ИЗ
	|	ТаблицаПродукция КАК ТаблицаПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаПродукция.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаПлановаяСтоимостьУслуг(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ЕстьУслуги Тогда
		ПараметрыПроведения.Вставить("ПлановаяСтоимостьУслугРеквизиты", Неопределено);
		ПараметрыПроведения.Вставить("ПлановаяСтоимостьУслугТаблица", 	Неопределено);
		Возврат "";
	КонецЕсли;

	НомераТаблиц.Вставить("ПлановаяСтоимостьУслугРеквизиты",	НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПлановаяСтоимостьУслугТаблица",		НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	&ИспользоватьСчет40 КАК ИспользоватьСчет40
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Услуги"" КАК ИмяСписка,
	|	&СинонимУслуги КАК СинонимСписка,
	|	ТаблицаУслуги.НомерСтроки КАК НомерСтроки,
	|	ТаблицаУслуги.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСчет40
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыпускПродукции)
	|		ИНАЧЕ Реквизиты.СчетЗатрат
	|	КОНЕЦ КАК СчетЗатрат,
	|	Реквизиты.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
	|	ТаблицаУслуги.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаЗатрат,
	|	ТаблицаУслуги.СчетЗатрат КАК СчетСписания,
	|	ТаблицаУслуги.ПодразделениеЗатрат КАК ПодразделениеСписания,
	|	ТаблицаУслуги.Субконто1 КАК СубконтоСписания1,
	|	ТаблицаУслуги.Субконто2 КАК СубконтоСписания2,
	|	ТаблицаУслуги.Субконто3 КАК СубконтоСписания3,
	|	1 КАК ВидСубконтоСписания1,
	|	2 КАК ВидСубконтоСписания2,
	|	3 КАК ВидСубконтоСписания3,
	|	ТаблицаУслуги.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПлановуюСебестоимость 
	|			ТОГДА ТаблицаУслуги.СуммаПлановая
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаПлановая,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПлановуюСебестоимость 
	|			ТОГДА ТаблицаУслуги.СуммаПлановая
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаПлановаяНУ,
	|	ТаблицаУслуги.Содержание КАК Содержание
	|ИЗ
	|	ТаблицаУслуги КАК ТаблицаУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаУслуги.СуммаПлановая <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаУслуги.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаВыпускПродукции(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ЕстьПродукция Тогда
		ПараметрыПроведения.Вставить("ВыпускПродукцииРеквизиты",	Неопределено);
		ПараметрыПроведения.Вставить("ВыпускПродукцииТаблица", 		Неопределено);
		Возврат "";
	КонецЕсли;

	НомераТаблиц.Вставить("ВыпускПродукцииРеквизиты",	НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВыпускПродукцииТаблица",		НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Продукция"" КАК ИмяСписка,
	|	&СинонимПродукция КАК СинонимСписка,
	|	ТаблицаПродукция.НомерСтроки КАК НомерСтроки,
	|	ТаблицаПродукция.Номенклатура КАК Номенклатура,
	|	Реквизиты.СчетЗатрат КАК СчетЗатрат,
	|	Реквизиты.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
	|	ТаблицаПродукция.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаЗатрат,
	|	ТаблицаПродукция.СчетУчета КАК СчетСписания,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Хозрасчетный.УчетПоПодразделениям, ЛОЖЬ)
	|			ТОГДА Реквизиты.ПодразделениеОрганизации
	|		ИНАЧЕ &ПустоеПодразделение
	|	КОНЕЦ КАК ПодразделениеСписания,
	|	ВЫБОР
	|		КОГДА ВидыСубконто1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
	|			ТОГДА ТаблицаПродукция.Номенклатура
	|		КОГДА ВидыСубконто1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады)
	|			ТОГДА Реквизиты.Склад
	|		КОГДА ВидыСубконто1.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии)
	|				И &ВедетсяУчетПоПартиям
	|			ТОГДА Реквизиты.Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СубконтоСписания1,
	|	ВЫБОР
	|		КОГДА ВидыСубконто2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
	|			ТОГДА ТаблицаПродукция.Номенклатура
	|		КОГДА ВидыСубконто2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады)
	|			ТОГДА Реквизиты.Склад
	|		КОГДА ВидыСубконто2.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии)
	|				И &ВедетсяУчетПоПартиям
	|			ТОГДА Реквизиты.Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СубконтоСписания2,
	|	ВЫБОР
	|		КОГДА ВидыСубконто3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
	|			ТОГДА ТаблицаПродукция.Номенклатура
	|		КОГДА ВидыСубконто3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады)
	|			ТОГДА Реквизиты.Склад
	|		КОГДА ВидыСубконто3.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии)
	|				И &ВедетсяУчетПоПартиям
	|			ТОГДА Реквизиты.Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СубконтоСписания3,
	|	ТаблицаПродукция.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПлановуюСебестоимость 
	|			ТОГДА ТаблицаПродукция.СуммаПлановая
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК ПлановаяСтоимость,
	|	ЛОЖЬ КАК ПрямыеРасходыРаспределятьПоКоличеству
	|ИЗ
	|	ТаблицаПродукция КАК ТаблицаПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконто1
	|		ПО ТаблицаПродукция.СчетУчета = ВидыСубконто1.Ссылка
	|			И (ВидыСубконто1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконто2
	|		ПО ТаблицаПродукция.СчетУчета = ВидыСубконто2.Ссылка
	|			И (ВидыСубконто2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконто3
	|		ПО ТаблицаПродукция.СчетУчета = ВидыСубконто3.Ссылка
	|			И (ВидыСубконто3.НомерСтроки = 3)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|		ПО ТаблицаПродукция.СчетУчета = Хозрасчетный.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаПродукция.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаВыпускУслуг(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ЕстьУслуги Тогда
		ПараметрыПроведения.Вставить("ВыпускУслугРеквизиты",	Неопределено);
		ПараметрыПроведения.Вставить("ВыпускУслугТаблица",		Неопределено);
		Возврат "";
	КонецЕсли;

	НомераТаблиц.Вставить("ВыпускУслугРеквизиты",	НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВыпускУслугТаблица",		НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Услуги"" КАК ИмяСписка,
	|	&СинонимУслуги КАК СинонимСписка,
	|	ТаблицаУслуги.НомерСтроки КАК НомерСтроки,
	|	ТаблицаУслуги.Номенклатура КАК Номенклатура,
	|	Реквизиты.СчетЗатрат КАК СчетЗатрат,
	|	Реквизиты.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
	|	ТаблицаУслуги.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаЗатрат,
	|	ТаблицаУслуги.СчетЗатрат КАК СчетСписания,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Хозрасчетный.УчетПоПодразделениям, ЛОЖЬ)
	|			ТОГДА ТаблицаУслуги.ПодразделениеЗатрат
	|		ИНАЧЕ &ПустоеПодразделение
	|	КОНЕЦ КАК ПодразделениеСписания,
	|	ТаблицаУслуги.Субконто1 КАК СубконтоСписания1,
	|	ТаблицаУслуги.Субконто2 КАК СубконтоСписания2,
	|	ТаблицаУслуги.Субконто3 КАК СубконтоСписания3,
	|	ВЫБОР
	|		КОГДА ТаблицаУслуги.Количество <> 0
	|			ТОГДА ТаблицаУслуги.Количество
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА &ИспользоватьПлановуюСебестоимость 
	|			ТОГДА ТаблицаУслуги.СуммаПлановая
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК ПлановаяСтоимость,
	|	ТаблицаУслуги.СуммаПлановая = 0 
	|		ИЛИ НЕ &ИспользоватьПлановуюСебестоимость КАК ПрямыеРасходыРаспределятьПоКоличеству
	|ИЗ
	|	ТаблицаУслуги КАК ТаблицаУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|		ПО ТаблицаУслуги.СчетЗатрат = Хозрасчетный.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаУслуги.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаВыпускОтходов(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ЕстьВозвратныеОтходы Тогда
		ПараметрыПроведения.Вставить("ВыпускОтходовРеквизиты",	Неопределено);
		ПараметрыПроведения.Вставить("ВыпускОтходовТаблица",	Неопределено);
		Возврат "";
	КонецЕсли;

	НомераТаблиц.Вставить("ВыпускОтходовРеквизиты",	НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВыпускОтходовТаблица",	НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	&СодержаниеПроводкиВыпускОтходов КАК Содержание
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ВозвратныеОтходы"" КАК ИмяСписка,
	|	&СинонимВозвратныеОтходы КАК СинонимСписка,
	|	ТаблицаОтходы.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОтходы.Номенклатура КАК Номенклатура,
	|	Реквизиты.СчетЗатрат КАК СчетЗатрат,
	|	Реквизиты.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
	|	ТаблицаОтходы.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаЗатрат,
	|	ТаблицаОтходы.Продукция КАК Продукция,
	|	ТаблицаОтходы.СтатьяЗатрат КАК СтатьяЗатрат,
	|	ТаблицаОтходы.СчетУчета КАК СчетУчета,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.Склад КАК Склад,
	|	ТаблицаОтходы.Количество КАК Количество,
	|	ТаблицаОтходы.Сумма КАК Сумма
	|ИЗ
	|	ТаблицаОтходы КАК ТаблицаОтходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОтходы.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаСписаниеМатериалов(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если НЕ Реквизиты.ЕстьМатериалы Тогда
		ПараметрыПроведения.Вставить("СписаниеМатериаловРеквизиты", Неопределено);
		ПараметрыПроведения.Вставить("СписаниеМатериаловТаблица",	Неопределено);
		Возврат "";
	КонецЕсли;

	НомераТаблиц.Вставить("СписаниеМатериаловРеквизиты",	НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СписаниеМатериаловТаблица",		НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	""Списание"" КАК ТипСписания,
	|	Реквизиты.Ссылка КАК ДокументРеализации,
	|	""ОтчетПроизводстваЗаСмену"" КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Склад.ТипСклада КАК ТипСклада,
	|	ЛОЖЬ КАК ДеятельностьНаПатенте,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	&СодержаниеПроводкиСписаниеМатериалов КАК Содержание
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""Материалы"" КАК ИмяСписка,
	|	&СинонимМатериалы КАК СинонимСписка,
	|	Реквизиты.Дата КАК Период,
	|	ТаблицаМатериалы.НомерСтроки КАК НомерСтроки,
	|	ТаблицаМатериалы.Счет КАК СчетУчета,
	|	ТаблицаМатериалы.Номенклатура,
	|	Реквизиты.Склад КАК Склад,
	|	ТаблицаМатериалы.ДокументОприходования,
	|	ТаблицаМатериалы.Себестоимость,
	|	ТаблицаМатериалы.Количество,
	|	Реквизиты.ПодразделениеЗатрат КАК КорПодразделение,
	|	Реквизиты.СчетЗатрат КАК КорСчетСписания,
	|	ТаблицаМатериалы.НоменклатурнаяГруппа КАК КорСубконто1,
	|	ТаблицаМатериалы.СтатьяЗатрат КАК КорСубконто2,
	|	ТаблицаМатериалы.Продукция КАК КорСубконто3,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы) КАК ВидКорСубконто1,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат) КАК ВидКорСубконто2,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Продукция) КАК ВидКорСубконто3,
	|	НЕОПРЕДЕЛЕНО КАК Комитент,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКомиссии,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетАвансовСКомитентом,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетРасчетовСКомитентом,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаРасчетовСКомитентом,
	|	0 КАК СуммаРасчетовСКомитентом,
	|	ТаблицаМатериалы.ИдентификаторСтроки
	|ИЗ
	|	ТаблицаМатериалы КАК ТаблицаМатериалы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции	

Функция ТекстЗапросаНДС(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ПлательщикНДС Тогда
		ПараметрыПроведения.Вставить("РеквизитыНДС",	Неопределено);
		ПараметрыПроведения.Вставить("ПродукцияНДС",	Неопределено);
		ПараметрыПроведения.Вставить("МатериалыНДС",	Неопределено);
		ПараметрыПроведения.Вставить("ОтходыНДС",		Неопределено);
		Возврат "";
	КонецЕсли;

	НомераТаблиц.Вставить("РеквизитыНДС",	НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.НДСвСтоимостиТоваров КАК НДСвСтоимостиТоваров,
	|	Реквизиты.СчетСписанияНДС КАК СчетСписанияНДС,
	|	Реквизиты.СубконтоСписанияНДС1 КАК СубконтоСписанияНДС1,
	|	Реквизиты.СубконтоСписанияНДС2 КАК СубконтоСписанияНДС2,
	|	Реквизиты.СубконтоСписанияНДС3 КАК СубконтоСписанияНДС3,
	|	Реквизиты.ДляСписанияНДСиспользоватьСчетИАналитикуУчетаЗатрат КАК СписыватьНДСнаКорСчетИАналитикуТовара,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент
	|ИЗ
	|	Реквизиты КАК Реквизиты"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Если НЕ Реквизиты.ЕстьПродукция Тогда
		ПараметрыПроведения.Вставить("ПродукцияНДС", Неопределено);
	Иначе
		НомераТаблиц.Вставить("ПродукцияНДС",	НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ТаблицаПродукция.НомерСтроки КАК НомерСтроки,
		|	ТаблицаПродукция.Номенклатура КАК Номенклатура,
		|	ТаблицаПродукция.СчетУчета КАК СчетУчета,
		|	ТаблицаПродукция.Количество КАК Количество
		|ИЗ
		|	ТаблицаПродукция КАК ТаблицаПродукция
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если НЕ Реквизиты.ЕстьМатериалы Тогда
	    ПараметрыПроведения.Вставить("МатериалыНДС", Неопределено);	
	Иначе
		// Таблица МетарилыНДС должна иметь такую же структуру, что и УчетНДСБП.НовыйТаблицаТоварыДляСписанияНаРасходы()
		НомераТаблиц.Вставить("МатериалыНДС",	НомераТаблиц.Количество());	
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	""Материалы"" КАК ИмяСписка,
		|	&СинонимМатериалы КАК СинонимСписка,
		|	ТаблицаМатериалы.НомерСтроки КАК НомерСтрокиДокумента,
		|	ТаблицаМатериалы.Номенклатура КАК Номенклатура,
		|	ТаблицаМатериалы.Счет КАК СчетУчета,
		|	ТаблицаМатериалы.Количество КАК Количество,
		|	ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка) КАК СтранаПроисхождения,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
		|	ТаблицаМатериалы.СпособУчетаНДС КАК НовыйСпособУчетаНДС
		|ИЗ
		|	ТаблицаМатериалы КАК ТаблицаМатериалы
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтрокиДокумента"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;
	
	Если НЕ Реквизиты.ЕстьВозвратныеОтходы Тогда
		ПараметрыПроведения.Вставить("ОтходыНДС", Неопределено);
	Иначе
		НомераТаблиц.Вставить("ОтходыНДС",		НомераТаблиц.Количество());
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ТаблицаОтходы.НомерСтроки КАК НомерСтроки,
		|	ТаблицаОтходы.Номенклатура КАК Номенклатура,
		|	ТаблицаОтходы.СчетУчета КАК СчетУчета,
		|	ТаблицаОтходы.Количество КАК Количество
		|ИЗ
		|	ТаблицаОтходы КАК ТаблицаОтходы
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки"
		+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	КонецЕсли;

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоступлениеРасходовУСН(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ПрименяетсяУСНДоходыМинусРасходы
		ИЛИ НЕ Реквизиты.ЕстьВозвратныеОтходы Тогда
		ПараметрыПроведения.Вставить("ПоступлениеРасходовУСНРеквизиты",			Неопределено);
		ПараметрыПроведения.Вставить("ПоступлениеРасходовУСНТаблицаРасходов",	Неопределено);
		Возврат "";
	КонецЕсли;

	НомераТаблиц.Вставить("ПоступлениеРасходовУСНРеквизиты",		НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПоступлениеРасходовУСНТаблицаРасходов",	НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКонтрагента,
	|	&ВалютаРегламентированногоУчета КАК Валюта,
	|	ЛОЖЬ КАК УчетАгентскогоНДС,
	|	ИСТИНА КАК ЭтоВозврат,
	|	ЛОЖЬ КАК РасходыПредпринимателя
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОтходы.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура) КАК ВидРасхода,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыПартийУСН.Купленные) КАК СтатусыПартийУСН,
	|	ТаблицаОтходы.Номенклатура КАК ЭлементРасхода,
	|	ВЫБОР
	|		КОГДА ТаблицаОтходы.СчетУчета В (&Субсчета10)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоТовар,
	|	ВЫБОР
	|		КОГДА ТаблицаОтходы.СчетУчета В (&Субсчета10)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоМатериал,
	|	ТаблицаОтходы.СчетУчета КАК СчетУчета,
	|	ТаблицаОтходы.Ссылка КАК Партия,
	|	ТаблицаОтходы.Количество КАК Количество,
	|	ТаблицаОтходы.Сумма КАК Сумма,
	|	0 КАК НДС,
	|	ТаблицаОтходы.ОтражениеВУСН КАК ОтражениеВУСН
	|ИЗ
	|	ТаблицаОтходы КАК ТаблицаОтходы
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Процедура ПодобратьРНПТВозврат(ДокументОбъект, Отказ) Экспорт
	
	ТаблицаВозвратныеОтходы = ДокументОбъект.ВозвратныеОтходы.Выгрузить();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",             ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ТаблицаВозвратныеОтходы", ТаблицаВозвратныеОтходы);
	Запрос.УстановитьПараметр("ДатаДокумента",           ДокументОбъект.Дата);
	Запрос.УстановитьПараметр("КодОперации",             Справочники.КодыОперацийПрослеживаемости.ПередачаВПроизводство);

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаВозвратныеОтходы.Номенклатура КАК Номенклатура,
	|	ТаблицаВозвратныеОтходы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаВозвратныеОтходы.Количество КАК Количество
	|ПОМЕСТИТЬ ВозвращаемыеМатериалы
	|ИЗ
	|	&ТаблицаВозвратныеОтходы КАК ТаблицаВозвратныеОтходы
	|ГДЕ
	|	ТаблицаВозвратныеОтходы.ПрослеживаемыйТовар = ИСТИНА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	СтранаПроисхождения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрослеживаемыеТоварыОбороты.Номенклатура КАК Номенклатура,
	|	ПрослеживаемыеТоварыОбороты.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПрослеживаемыеТоварыОбороты.РНПТ КАК РНПТ,
	|	ПрослеживаемыеТоварыОбороты.КоличествоРасход КАК КоличествоРасход,
	|	ПрослеживаемыеТоварыОбороты.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ПрослеживаемыеТоварыОбороты
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТовары.Обороты(
	|			,
	|			&ДатаДокумента,
	|			Регистратор,
	|			Организация = &Организация
	|				И (Номенклатура, СтранаПроисхождения) В
	|					(ВЫБРАТЬ
	|						ВозвращаемыеМатериалы.Номенклатура,
	|						ВозвращаемыеМатериалы.СтранаПроисхождения
	|					ИЗ
	|						ВозвращаемыеМатериалы КАК ВозвращаемыеМатериалы)) КАК ПрослеживаемыеТоварыОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	СтранаПроисхождения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвращаемыеМатериалы.Номенклатура КАК Номенклатура,
	|	ВозвращаемыеМатериалы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	СУММА(ОперацииСПрослеживаемымиТоварами.Количество) КАК Количество,
	|	СУММА(ОперацииСПрослеживаемымиТоварами.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	ОперацииСПрослеживаемымиТоварами.РНПТ КАК РНПТ,
	|	ОперацииСПрослеживаемымиТоварами.Период КАК Период
	|ИЗ
	|	ВозвращаемыеМатериалы КАК ВозвращаемыеМатериалы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПрослеживаемыеТоварыОбороты КАК ПрослеживаемыеТоварыОбороты
	|		ПО ВозвращаемыеМатериалы.Номенклатура = ПрослеживаемыеТоварыОбороты.Номенклатура
	|			И ВозвращаемыеМатериалы.СтранаПроисхождения = ПрослеживаемыеТоварыОбороты.СтранаПроисхождения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОперацииСПрослеживаемымиТоварами КАК ОперацииСПрослеживаемымиТоварами
	|		ПО (ОперацииСПрослеживаемымиТоварами.Организация = &Организация)
	|			И (ПрослеживаемыеТоварыОбороты.Номенклатура = ОперацииСПрослеживаемымиТоварами.Номенклатура)
	|			И (ОперацииСПрослеживаемымиТоварами.Период < &ДатаДокумента)
	|			И (ПрослеживаемыеТоварыОбороты.Регистратор = ОперацииСПрослеживаемымиТоварами.Регистратор)
	|			И (ПрослеживаемыеТоварыОбороты.РНПТ = ОперацииСПрослеживаемымиТоварами.РНПТ)
	|ГДЕ
	|	ОперацииСПрослеживаемымиТоварами.КодОперации = &КодОперации
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвращаемыеМатериалы.Номенклатура,
	|	ВозвращаемыеМатериалы.СтранаПроисхождения,
	|	ОперацииСПрослеживаемымиТоварами.Период,
	|	ОперацииСПрослеживаемымиТоварами.РНПТ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ";
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	ТаблицаРезультат.Индексы.Добавить("Номенклатура");
	ТаблицаРезультат.Индексы.Добавить("СтранаПроисхождения");
		
	Для Каждого СтрокаТабличнойЧасти ИЗ ДокументОбъект.ВозвратныеОтходы Цикл
		
		Если Не СтрокаТабличнойЧасти.ПрослеживаемыйТовар Тогда
			Продолжить;
		КонецЕсли;
		
		ОсталосьПодобрать = СтрокаТабличнойЧасти.Количество;
		
		СтрокиСРНПТ = ДокументОбъект.СведенияПрослеживаемости.НайтиСтроки(Новый Структура("ИдентификаторСтроки", СтрокаТабличнойЧасти.ИдентификаторСтроки));
		КоличествоРНПТ = СтрокиСРНПТ.Количество();
		
		Если КоличествоРНПТ = 0 Тогда
			
			// Добавляем РНПТ из остатков
			Отбор = Новый Структура("Номенклатура, СтранаПроисхождения",
				СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.СтранаПроисхождения);
			ОстаткиРНПТ = ТаблицаРезультат.НайтиСтроки(Отбор);
			Для Каждого ПодобранныйРНПТ Из ОстаткиРНПТ Цикл
				Если ОсталосьПодобрать = 0 Тогда
					Прервать;
				КонецЕсли;
				
				Если ПодобранныйРНПТ.Количество = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				Если ОсталосьПодобрать >= ПодобранныйРНПТ.Количество Тогда
					// Добавляем все количество из подобранного РНПТ
					НоваяСтрока = ДокументОбъект.СведенияПрослеживаемости.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ПодобранныйРНПТ);
					НоваяСтрока.ИдентификаторСтроки = СтрокаТабличнойЧасти.ИдентификаторСтроки;
					ОсталосьПодобрать = ОсталосьПодобрать - ПодобранныйРНПТ.Количество;
					ТаблицаРезультат.Удалить(ПодобранныйРНПТ);
				Иначе
					НоваяСтрока = ДокументОбъект.СведенияПрослеживаемости.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ПодобранныйРНПТ);
					НоваяСтрока.ИдентификаторСтроки = СтрокаТабличнойЧасти.ИдентификаторСтроки;
					НоваяСтрока.Количество = ОсталосьПодобрать;
					
					МассивКоэффициентов = Новый Массив;
					МассивКоэффициентов.Добавить(ПодобранныйРНПТ.Количество - ОсталосьПодобрать);
					МассивКоэффициентов.Добавить(ОсталосьПодобрать);
					МассивСумм = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
						ПодобранныйРНПТ.КоличествоПрослеживаемости, МассивКоэффициентов, 11);
						
					НоваяСтрока.КоличествоПрослеживаемости = МассивСумм[1];
					
					ПодобранныйРНПТ.Количество = ПодобранныйРНПТ.Количество - ОсталосьПодобрать;
					ПодобранныйРНПТ.КоличествоПрослеживаемости = ПодобранныйРНПТ.КоличествоПрослеживаемости - МассивСумм[1];
					
					ОсталосьПодобрать = 0;
				КонецЕсли;
				
			КонецЦикла;
			
			Если ОсталосьПодобрать <> 0 Тогда
				
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Для целей учета прослеживаемости не подобрано %1 РНПТ для товара %2 (%3) на вкладке ""Возвратные отходы""'"),
					Формат(ОсталосьПодобрать, "ЧЦ=15; ЧДЦ=3"),
					СтрокаТабличнойЧасти.Номенклатура,
					СтрокаТабличнойЧасти.СтранаПроисхождения);
				
				Поле = "ВозвратныеОтходы["+ Формат(СтрокаТабличнойЧасти.НомерСтроки - 1, "ЧГ=") + "].РНПТ";
				ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
				
			КонецЕсли;
			
				
		КонецЕсли;
		
	КонецЦикла;
	
	ДокументОбъект.СведенияПрослеживаемости.Свернуть("ИдентификаторСтроки, РНПТ", "Количество, КоличествоПрослеживаемости");
	
КонецПроцедуры

Функция ТекстЗапросаПрослеживаемыеТоварыВозврат(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если Не Реквизиты.ВедетсяУчетПрослеживаемыхТоваров Тогда
		ПараметрыПроведения.Вставить("РеквизитыПрослеживаемостиВозврат",          Неопределено);
		ПараметрыПроведения.Вставить("ПрослеживаемыеОперацииВозврат",             Неопределено);
		ПараметрыПроведения.Вставить("ПрослеживаемыеТоварыВозврат",               Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("РеквизитыПрослеживаемостиВозврат",   НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_ПрослеживаемостьВозврат",         НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_СуммыБезНДС",                     НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПрослеживаемыеОперацииВозврат",             НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПрослеживаемыеТоварыВозврат",               НомераТаблиц.Количество());
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Реквизиты.Ссылка КАК Регистратор,
		|	Реквизиты.Дата КАК Период,
		|	Реквизиты.Организация КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент
		|ИЗ
		|	Реквизиты КАК Реквизиты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтчетПроизводстваЗаСменуВозвратныеОтходы.Номенклатура КАК Номенклатура,
		|	СУММА(ОтчетПроизводстваЗаСменуСведенияПрослеживаемости.Количество) КАК Количество,
		|	ОтчетПроизводстваЗаСменуВозвратныеОтходы.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ОтчетПроизводстваЗаСменуСведенияПрослеживаемости.РНПТ КАК РНПТ,
		|	СУММА(ОтчетПроизводстваЗаСменуСведенияПрослеживаемости.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
		|	ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях) КАК ОтражениеВОтчетности,
		|	ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ВозвратИзПроизводства) КАК КодОперации,
		|	ОтчетПроизводстваЗаСменуВозвратныеОтходы.Ссылка КАК ДокументОперации,
		|	НАЧАЛОПЕРИОДА(ОтчетПроизводстваЗаСменуВозвратныеОтходы.Ссылка.Дата, КВАРТАЛ) КАК ПериодОперации,
		|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК НомерДокумента,
		|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДокумента,
		|	ЗНАЧЕНИЕ(Справочник.ТипыДокументов.Акт) КАК ТипДокументаВПрослеживаемости,
		|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
		|	ОтчетПроизводстваЗаСменуВозвратныеОтходы.ИдентификаторСтроки КАК ИдентификаторСтроки
		|ПОМЕСТИТЬ ВТ_ПрослеживаемостьВозврат
		|ИЗ
		|	Документ.ОтчетПроизводстваЗаСмену.ВозвратныеОтходы КАК ОтчетПроизводстваЗаСменуВозвратныеОтходы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПроизводстваЗаСмену.СведенияПрослеживаемости КАК ОтчетПроизводстваЗаСменуСведенияПрослеживаемости
		|		ПО ОтчетПроизводстваЗаСменуВозвратныеОтходы.Ссылка = ОтчетПроизводстваЗаСменуСведенияПрослеживаемости.Ссылка
		|			И ОтчетПроизводстваЗаСменуВозвратныеОтходы.ИдентификаторСтроки = ОтчетПроизводстваЗаСменуСведенияПрослеживаемости.ИдентификаторСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|		ПО ОтчетПроизводстваЗаСменуВозвратныеОтходы.Ссылка = ДанныеПервичныхДокументов.Документ
		|			И ОтчетПроизводстваЗаСменуВозвратныеОтходы.Ссылка.Организация = ДанныеПервичныхДокументов.Организация
		|ГДЕ
		|	ОтчетПроизводстваЗаСменуВозвратныеОтходы.ПрослеживаемыйТовар
		|	И ОтчетПроизводстваЗаСменуВозвратныеОтходы.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ОтчетПроизводстваЗаСменуВозвратныеОтходы.Номенклатура,
		|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """"),
		|	ОтчетПроизводстваЗаСменуВозвратныеОтходы.Ссылка,
		|	ОтчетПроизводстваЗаСменуВозвратныеОтходы.СтранаПроисхождения,
		|	ОтчетПроизводстваЗаСменуСведенияПрослеживаемости.РНПТ,
		|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)),
		|	НАЧАЛОПЕРИОДА(ОтчетПроизводстваЗаСменуВозвратныеОтходы.Ссылка.Дата, КВАРТАЛ),
		|	ОтчетПроизводстваЗаСменуВозвратныеОтходы.ИдентификаторСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтчетПроизводстваЗаСменуВозвратныеОтходы.Номенклатура КАК Номенклатура,
		|	СУММА(ОтчетПроизводстваЗаСменуВозвратныеОтходы.Сумма) КАК СуммаБезНДС,
		|	ОтчетПроизводстваЗаСменуВозвратныеОтходы.ИдентификаторСтроки КАК ИдентификаторСтроки
		|ПОМЕСТИТЬ ВТ_СуммыБезНДС
		|ИЗ
		|	Документ.ОтчетПроизводстваЗаСмену.ВозвратныеОтходы КАК ОтчетПроизводстваЗаСменуВозвратныеОтходы
		|ГДЕ
		|	ОтчетПроизводстваЗаСменуВозвратныеОтходы.Ссылка = &Ссылка
		|	И ОтчетПроизводстваЗаСменуВозвратныеОтходы.ПрослеживаемыйТовар
		|
		|СГРУППИРОВАТЬ ПО
		|	ОтчетПроизводстваЗаСменуВозвратныеОтходы.Номенклатура,
		|	ОтчетПроизводстваЗаСменуВозвратныеОтходы.ИдентификаторСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПрослеживаемостьВозврат.Номенклатура КАК Номенклатура,
		|	СУММА(ВТ_ПрослеживаемостьВозврат.Количество) КАК Количество,
		|	ВТ_ПрослеживаемостьВозврат.РНПТ КАК РНПТ,
		|	СУММА(ВТ_ПрослеживаемостьВозврат.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
		|	ВТ_ПрослеживаемостьВозврат.ОтражениеВОтчетности КАК ОтражениеВОтчетности,
		|	ВТ_ПрослеживаемостьВозврат.КодОперации КАК КодОперации,
		|	ВТ_ПрослеживаемостьВозврат.ДокументОперации КАК ДокументОперации,
		|	ВТ_ПрослеживаемостьВозврат.Контрагент КАК Контрагент,
		|	ВТ_ПрослеживаемостьВозврат.ПериодОперации КАК ПериодОперации,
		|	ВТ_ПрослеживаемостьВозврат.НомерДокумента КАК НомерДокумента,
		|	ВТ_ПрослеживаемостьВозврат.ДатаДокумента КАК ДатаДокумента,
		|	ВТ_ПрослеживаемостьВозврат.ТипДокументаВПрослеживаемости КАК ТипДокументаВПрослеживаемости,
		|	СУММА(ЕСТЬNULL(ВТ_СуммыБезНДС.СуммаБезНДС, 0)) КАК СуммаБезНДС,
		|	ВТ_ПрослеживаемостьВозврат.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ЛОЖЬ КАК ПрослеживаемыйКомплект
		|ИЗ
		|	ВТ_ПрослеживаемостьВозврат КАК ВТ_ПрослеживаемостьВозврат
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СуммыБезНДС КАК ВТ_СуммыБезНДС
		|		ПО ВТ_ПрослеживаемостьВозврат.ИдентификаторСтроки = ВТ_СуммыБезНДС.ИдентификаторСтроки
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ПрослеживаемостьВозврат.ОтражениеВОтчетности,
		|	ВТ_ПрослеживаемостьВозврат.Номенклатура,
		|	ВТ_ПрослеживаемостьВозврат.ТипДокументаВПрослеживаемости,
		|	ВТ_ПрослеживаемостьВозврат.ДатаДокумента,
		|	ВТ_ПрослеживаемостьВозврат.ДокументОперации,
		|	ВТ_ПрослеживаемостьВозврат.Контрагент,
		|	ВТ_ПрослеживаемостьВозврат.РНПТ,
		|	ВТ_ПрослеживаемостьВозврат.НомерДокумента,
		|	ВТ_ПрослеживаемостьВозврат.КодОперации,
		|	ВТ_ПрослеживаемостьВозврат.ПериодОперации,
		|	ВТ_ПрослеживаемостьВозврат.ИдентификаторСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПрослеживаемостьВозврат.Номенклатура КАК Номенклатура,
		|	СУММА(ВТ_ПрослеживаемостьВозврат.Количество) КАК Количество,
		|	ВТ_ПрослеживаемостьВозврат.СтранаПроисхождения КАК СтранаПроисхождения,
		|	СУММА(ВТ_ПрослеживаемостьВозврат.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
		|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Комитент,
		|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|	ВТ_ПрослеживаемостьВозврат.РНПТ КАК РНПТ,
		|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Комиссионер,
		|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ОснованиеДляВозврата,
		|	НЕОПРЕДЕЛЕНО КАК Комплектующие
		|ИЗ
		|	ВТ_ПрослеживаемостьВозврат КАК ВТ_ПрослеживаемостьВозврат
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ПрослеживаемостьВозврат.Номенклатура,
		|	ВТ_ПрослеживаемостьВозврат.СтранаПроисхождения,
		|	ВТ_ПрослеживаемостьВозврат.РНПТ";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПрослеживаемыеТоварыСписание(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если НЕ Реквизиты.ВедетсяУчетПрослеживаемыхТоваров Тогда
		ПараметрыПроведения.Вставить("РеквизитыПрослеживаемости",                Неопределено);
		ПараметрыПроведения.Вставить("ПрослеживаемыеОперацииСписание",           Неопределено);
		ПараметрыПроведения.Вставить("ПрослеживаемыеТоварыСписание",             Неопределено);
		ПараметрыПроведения.Вставить("ПрослеживаемыеТоварыПоступлениеКомплекта", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("РеквизитыПрослеживаемости",                  НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_Прослеживаемость",                        НомераТаблиц.Количество());
	НомераТаблиц.Вставить("МатериалыВключенныеВСоставКомплекта",        НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РНПТДляОтраженияВОтчетности",                НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РНПТДляОтраженияВОтчетностиСводно",          НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПрослеживаемыеТоварыСписание",               НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПрослеживаемыеОперацииСписание",             НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПрослеживаемыеТоварыПоступлениеКомплекта",   НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетПроизводстваЗаСменуМатериалы.Номенклатура КАК Номенклатура,
	|	СУММА(ОтчетПроизводстваЗаСменуСведенияПрослеживаемости.Количество) КАК Количество,
	|	ОтчетПроизводстваЗаСменуМатериалы.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ОтчетПроизводстваЗаСменуСведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	СУММА(ОтчетПроизводстваЗаСменуСведенияПрослеживаемости.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	ОтчетПроизводстваЗаСменуМатериалы.Ссылка КАК ДокументОперации,
	|	НАЧАЛОПЕРИОДА(ОтчетПроизводстваЗаСменуМатериалы.Ссылка.Дата, КВАРТАЛ) КАК ПериодОперации,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК НомерДокумента,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях) КАК ОтражениеВОтчетности,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПередачаВПроизводство) КАК КодОперации,
	|	ЗНАЧЕНИЕ(Справочник.ТипыДокументов.Акт) КАК ТипДокументаВПрослеживаемости,
	|	ОтчетПроизводстваЗаСменуМатериалы.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ОтчетПроизводстваЗаСменуМатериалы.КлючСтроки КАК КлючСтроки,
	|	ОтчетПроизводстваЗаСменуМатериалы.Продукция КАК Продукция,
	|	ОтчетПроизводстваЗаСмену.ВидОперации КАК ВидОперации
	|ПОМЕСТИТЬ ВТ_Прослеживаемость
	|ИЗ
	|	Документ.ОтчетПроизводстваЗаСмену.Материалы КАК ОтчетПроизводстваЗаСменуМатериалы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПроизводстваЗаСмену.СведенияПрослеживаемости КАК ОтчетПроизводстваЗаСменуСведенияПрослеживаемости
	|		ПО ОтчетПроизводстваЗаСменуМатериалы.Ссылка = ОтчетПроизводстваЗаСменуСведенияПрослеживаемости.Ссылка
	|			И ОтчетПроизводстваЗаСменуМатериалы.ИдентификаторСтроки = ОтчетПроизводстваЗаСменуСведенияПрослеживаемости.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ОтчетПроизводстваЗаСменуМатериалы.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И ОтчетПроизводстваЗаСменуМатериалы.Ссылка.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетПроизводстваЗаСмену КАК ОтчетПроизводстваЗаСмену
	|		ПО ОтчетПроизводстваЗаСменуМатериалы.Ссылка = ОтчетПроизводстваЗаСмену.Ссылка
	|ГДЕ
	|	ОтчетПроизводстваЗаСменуМатериалы.ПрослеживаемыйТовар
	|	И ОтчетПроизводстваЗаСменуМатериалы.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетПроизводстваЗаСменуМатериалы.СтранаПроисхождения,
	|	ОтчетПроизводстваЗаСменуСведенияПрослеживаемости.РНПТ,
	|	ОтчетПроизводстваЗаСменуМатериалы.Номенклатура,
	|	ОтчетПроизводстваЗаСменуМатериалы.Ссылка,
	|	НАЧАЛОПЕРИОДА(ОтчетПроизводстваЗаСменуМатериалы.Ссылка.Дата, КВАРТАЛ),
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """"),
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)),
	|	ОтчетПроизводстваЗаСменуМатериалы.ИдентификаторСтроки,
	|	ОтчетПроизводстваЗаСменуМатериалы.КлючСтроки,
	|	ОтчетПроизводстваЗаСменуМатериалы.Продукция,
	|	ОтчетПроизводстваЗаСмену.ВидОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Прослеживаемость.Номенклатура КАК Номенклатура,
	|	ВТ_Прослеживаемость.Количество КАК Количество,
	|	ВТ_Прослеживаемость.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВТ_Прослеживаемость.РНПТ КАК РНПТ,
	|	ВТ_Прослеживаемость.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	ОтчетПроизводстваЗаСменуПродукция.Номенклатура КАК Продукция,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаРеализации,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК ОснованиеДляВозврата,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Комитент,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Комиссионер,
	|	ВТ_Прослеживаемость.ДокументОперации КАК ДокументОперации,
	|	ВТ_Прослеживаемость.ПериодОперации КАК ПериодОперации,
	|	ВТ_Прослеживаемость.НомерДокумента КАК НомерДокумента,
	|	ВТ_Прослеживаемость.ДатаДокумента КАК ДатаДокумента,
	|	ВТ_Прослеживаемость.ОтражениеВОтчетности КАК ОтражениеВОтчетности,
	|	ВТ_Прослеживаемость.Контрагент КАК Контрагент,
	|	ВТ_Прослеживаемость.КодОперации КАК КодОперации,
	|	ВТ_Прослеживаемость.ТипДокументаВПрослеживаемости КАК ТипДокументаВПрослеживаемости,
	|	ВТ_Прослеживаемость.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ МатериалыВключенныеВСоставКомплекта
	|ИЗ
	|	Документ.ОтчетПроизводстваЗаСмену.Продукция КАК ОтчетПроизводстваЗаСменуПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Прослеживаемость КАК ВТ_Прослеживаемость
	|		ПО (ВЫБОР
	|				КОГДА ВТ_Прослеживаемость.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтчетПроизводстваЗаСмену.ОтчетПроизводстваЗаСмену)
	|					ТОГДА ОтчетПроизводстваЗаСменуПродукция.Номенклатура = ВТ_Прослеживаемость.Продукция
	|				ИНАЧЕ ОтчетПроизводстваЗаСменуПродукция.КлючСтроки = ВТ_Прослеживаемость.КлючСтроки
	|			КОНЕЦ)
	|ГДЕ
	|	ОтчетПроизводстваЗаСменуПродукция.Ссылка = &Ссылка
	|	И ОтчетПроизводстваЗаСменуПродукция.ПрослеживаемыйКомплект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Прослеживаемость.Номенклатура КАК Номенклатура,
	|	СУММА(ВТ_Прослеживаемость.Количество) КАК Количество,
	|	ВТ_Прослеживаемость.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВТ_Прослеживаемость.РНПТ КАК РНПТ,
	|	СУММА(ВТ_Прослеживаемость.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	ВТ_Прослеживаемость.ДокументОперации КАК ДокументОперации,
	|	ВТ_Прослеживаемость.ПериодОперации КАК ПериодОперации,
	|	ВТ_Прослеживаемость.НомерДокумента КАК НомерДокумента,
	|	ВТ_Прослеживаемость.ДатаДокумента КАК ДатаДокумента,
	|	ВТ_Прослеживаемость.ОтражениеВОтчетности КАК ОтражениеВОтчетности,
	|	ВТ_Прослеживаемость.Контрагент КАК Контрагент,
	|	ВТ_Прослеживаемость.КодОперации КАК КодОперации,
	|	ВТ_Прослеживаемость.ТипДокументаВПрослеживаемости КАК ТипДокументаВПрослеживаемости,
	|	ВТ_Прослеживаемость.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ РНПТДляОтраженияВОтчетности
	|ИЗ
	|	ВТ_Прослеживаемость КАК ВТ_Прослеживаемость
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Прослеживаемость.ПериодОперации,
	|	ВТ_Прослеживаемость.ДокументОперации,
	|	ВТ_Прослеживаемость.ТипДокументаВПрослеживаемости,
	|	ВТ_Прослеживаемость.РНПТ,
	|	ВТ_Прослеживаемость.ИдентификаторСтроки,
	|	ВТ_Прослеживаемость.Номенклатура,
	|	ВТ_Прослеживаемость.КодОперации,
	|	ВТ_Прослеживаемость.СтранаПроисхождения,
	|	ВТ_Прослеживаемость.ДатаДокумента,
	|	ВТ_Прослеживаемость.НомерДокумента,
	|	ВТ_Прослеживаемость.Контрагент,
	|	ВТ_Прослеживаемость.ОтражениеВОтчетности
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МатериалыВключенныеВСоставКомплекта.Номенклатура,
	|	-МатериалыВключенныеВСоставКомплекта.Количество,
	|	МатериалыВключенныеВСоставКомплекта.СтранаПроисхождения,
	|	МатериалыВключенныеВСоставКомплекта.РНПТ,
	|	-МатериалыВключенныеВСоставКомплекта.КоличествоПрослеживаемости,
	|	МатериалыВключенныеВСоставКомплекта.ДокументОперации,
	|	МатериалыВключенныеВСоставКомплекта.ПериодОперации,
	|	МатериалыВключенныеВСоставКомплекта.НомерДокумента,
	|	МатериалыВключенныеВСоставКомплекта.ДатаДокумента,
	|	МатериалыВключенныеВСоставКомплекта.ОтражениеВОтчетности,
	|	МатериалыВключенныеВСоставКомплекта.Контрагент,
	|	МатериалыВключенныеВСоставКомплекта.КодОперации,
	|	МатериалыВключенныеВСоставКомплекта.ТипДокументаВПрослеживаемости,
	|	МатериалыВключенныеВСоставКомплекта.ИдентификаторСтроки
	|ИЗ
	|	МатериалыВключенныеВСоставКомплекта КАК МатериалыВключенныеВСоставКомплекта
	|
	|СГРУППИРОВАТЬ ПО
	|	МатериалыВключенныеВСоставКомплекта.Контрагент,
	|	МатериалыВключенныеВСоставКомплекта.КодОперации,
	|	МатериалыВключенныеВСоставКомплекта.ТипДокументаВПрослеживаемости,
	|	МатериалыВключенныеВСоставКомплекта.ИдентификаторСтроки,
	|	МатериалыВключенныеВСоставКомплекта.НомерДокумента,
	|	МатериалыВключенныеВСоставКомплекта.ОтражениеВОтчетности,
	|	МатериалыВключенныеВСоставКомплекта.ДатаДокумента,
	|	МатериалыВключенныеВСоставКомплекта.Номенклатура,
	|	МатериалыВключенныеВСоставКомплекта.РНПТ,
	|	МатериалыВключенныеВСоставКомплекта.ДокументОперации,
	|	МатериалыВключенныеВСоставКомплекта.ПериодОперации,
	|	МатериалыВключенныеВСоставКомплекта.СтранаПроисхождения,
	|	-МатериалыВключенныеВСоставКомплекта.Количество,
	|	-МатериалыВключенныеВСоставКомплекта.КоличествоПрослеживаемости
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РНПТДляОтраженияВОтчетности.Номенклатура КАК Номенклатура,
	|	СУММА(РНПТДляОтраженияВОтчетности.Количество) КАК Количество,
	|	РНПТДляОтраженияВОтчетности.СтранаПроисхождения КАК СтранаПроисхождения,
	|	РНПТДляОтраженияВОтчетности.РНПТ КАК РНПТ,
	|	СУММА(РНПТДляОтраженияВОтчетности.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	РНПТДляОтраженияВОтчетности.ДокументОперации КАК ДокументОперации,
	|	РНПТДляОтраженияВОтчетности.ПериодОперации КАК ПериодОперации,
	|	РНПТДляОтраженияВОтчетности.НомерДокумента КАК НомерДокумента,
	|	РНПТДляОтраженияВОтчетности.ДатаДокумента КАК ДатаДокумента,
	|	РНПТДляОтраженияВОтчетности.ОтражениеВОтчетности КАК ОтражениеВОтчетности,
	|	РНПТДляОтраженияВОтчетности.Контрагент КАК Контрагент,
	|	РНПТДляОтраженияВОтчетности.КодОперации КАК КодОперации,
	|	РНПТДляОтраженияВОтчетности.ТипДокументаВПрослеживаемости КАК ТипДокументаВПрослеживаемости,
	|	РНПТДляОтраженияВОтчетности.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ПОМЕСТИТЬ РНПТДляОтраженияВОтчетностиСводно
	|ИЗ
	|	РНПТДляОтраженияВОтчетности КАК РНПТДляОтраженияВОтчетности
	|
	|СГРУППИРОВАТЬ ПО
	|	РНПТДляОтраженияВОтчетности.Контрагент,
	|	РНПТДляОтраженияВОтчетности.ДатаДокумента,
	|	РНПТДляОтраженияВОтчетности.РНПТ,
	|	РНПТДляОтраженияВОтчетности.ОтражениеВОтчетности,
	|	РНПТДляОтраженияВОтчетности.КодОперации,
	|	РНПТДляОтраженияВОтчетности.ТипДокументаВПрослеживаемости,
	|	РНПТДляОтраженияВОтчетности.Номенклатура,
	|	РНПТДляОтраженияВОтчетности.СтранаПроисхождения,
	|	РНПТДляОтраженияВОтчетности.ИдентификаторСтроки,
	|	РНПТДляОтраженияВОтчетности.ПериодОперации,
	|	РНПТДляОтраженияВОтчетности.НомерДокумента,
	|	РНПТДляОтраженияВОтчетности.ДокументОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Прослеживаемость.Номенклатура КАК Номенклатура,
	|	СУММА(ВТ_Прослеживаемость.Количество) КАК Количество,
	|	ВТ_Прослеживаемость.СтранаПроисхождения КАК СтранаПроисхождения,
	|	СУММА(ВТ_Прослеживаемость.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Комитент,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
	|	ВТ_Прослеживаемость.РНПТ КАК РНПТ,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Комиссионер,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаРеализации,
	|	НЕОПРЕДЕЛЕНО КАК ОснованиеДляВозврата,
	|	НЕОПРЕДЕЛЕНО КАК Комплектующие
	|ИЗ
	|	ВТ_Прослеживаемость КАК ВТ_Прослеживаемость
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Прослеживаемость.Номенклатура,
	|	ВТ_Прослеживаемость.СтранаПроисхождения,
	|	ВТ_Прослеживаемость.РНПТ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РНПТДляОтраженияВОтчетностиСводно.Номенклатура КАК Номенклатура,
	|	РНПТДляОтраженияВОтчетностиСводно.Количество КАК Количество,
	|	РНПТДляОтраженияВОтчетностиСводно.СтранаПроисхождения КАК СтранаПроисхождения,
	|	РНПТДляОтраженияВОтчетностиСводно.РНПТ КАК РНПТ,
	|	РНПТДляОтраженияВОтчетностиСводно.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	РНПТДляОтраженияВОтчетностиСводно.ДокументОперации КАК ДокументОперации,
	|	РНПТДляОтраженияВОтчетностиСводно.ПериодОперации КАК ПериодОперации,
	|	РНПТДляОтраженияВОтчетностиСводно.НомерДокумента КАК НомерДокумента,
	|	РНПТДляОтраженияВОтчетностиСводно.ДатаДокумента КАК ДатаДокумента,
	|	РНПТДляОтраженияВОтчетностиСводно.ОтражениеВОтчетности КАК ОтражениеВОтчетности,
	|	РНПТДляОтраженияВОтчетностиСводно.Контрагент КАК Контрагент,
	|	РНПТДляОтраженияВОтчетностиСводно.КодОперации КАК КодОперации,
	|	РНПТДляОтраженияВОтчетностиСводно.ТипДокументаВПрослеживаемости КАК ТипДокументаВПрослеживаемости,
	|	РНПТДляОтраженияВОтчетностиСводно.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ЛОЖЬ КАК ПрослеживаемыйКомплект,
	|	0 КАК СуммаБезНДС
	|ИЗ
	|	РНПТДляОтраженияВОтчетностиСводно КАК РНПТДляОтраженияВОтчетностиСводно
	|ГДЕ
	|	РНПТДляОтраженияВОтчетностиСводно.Количество > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МатериалыВключенныеВСоставКомплекта.Номенклатура КАК Комплектующие,
	|	СУММА(МатериалыВключенныеВСоставКомплекта.Количество) КАК Количество,
	|	МатериалыВключенныеВСоставКомплекта.СтранаПроисхождения КАК СтранаПроисхождения,
	|	МатериалыВключенныеВСоставКомплекта.РНПТ КАК РНПТ,
	|	СУММА(МатериалыВключенныеВСоставКомплекта.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	МатериалыВключенныеВСоставКомплекта.Продукция КАК Номенклатура,
	|	МатериалыВключенныеВСоставКомплекта.ДатаРеализации КАК ДатаРеализации,
	|	МатериалыВключенныеВСоставКомплекта.ВидЗапасов КАК ВидЗапасов,
	|	МатериалыВключенныеВСоставКомплекта.ОснованиеДляВозврата КАК ОснованиеДляВозврата,
	|	МатериалыВключенныеВСоставКомплекта.Комитент КАК Комитент,
	|	МатериалыВключенныеВСоставКомплекта.Комиссионер КАК Комиссионер
	|ИЗ
	|	МатериалыВключенныеВСоставКомплекта КАК МатериалыВключенныеВСоставКомплекта
	|
	|СГРУППИРОВАТЬ ПО
	|	МатериалыВключенныеВСоставКомплекта.ВидЗапасов,
	|	МатериалыВключенныеВСоставКомплекта.РНПТ,
	|	МатериалыВключенныеВСоставКомплекта.Комитент,
	|	МатериалыВключенныеВСоставКомплекта.ОснованиеДляВозврата,
	|	МатериалыВключенныеВСоставКомплекта.СтранаПроисхождения,
	|	МатериалыВключенныеВСоставКомплекта.ДатаРеализации,
	|	МатериалыВключенныеВСоставКомплекта.Номенклатура,
	|	МатериалыВключенныеВСоставКомплекта.Комиссионер,
	|	МатериалыВключенныеВСоставКомплекта.Продукция";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Процедура ДобавитьКолонкуСодержание(ТаблицаЗначений) Экспорт
	
	Если ТаблицаЗначений = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ТаблицаЗначений.Колонки.Найти("Содержание") = Неопределено Тогда
		ТаблицаЗначений.Колонки.Добавить("Содержание", ОбщегоНазначения.ОписаниеТипаСтрока(150));
	КонецЕсли;
	
	Для каждого СтрокаТаблицы Из ТаблицаЗначений Цикл
		СтрокаТаблицы.Содержание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Выпуск %1", 
			БухгалтерскийУчетПовтИсп.НазваниеОбъектаПоСчетуУчета(СтрокаТаблицы.СчетУчета));
	КонецЦикла;
	
КонецПроцедуры

Функция ПодготовитьТаблицыМатериаловПродукцииИП(ТаблицаСписанныеМПЗ, ВыпускПродукцииТаблица, ВыпускУслугТаблица, ВыпускОтходовТаблица, ТаблицаРеквизиты) Экспорт
	Перем СтруктураТаблиц;
	
	СтруктураТаблиц	= Новый Структура("ТаблицаМатериалов, ПолученоПродукции");
	
	Реквизиты	= ТаблицаРеквизиты[0];
	
	Если НЕ УчетнаяПолитика.ПлательщикНДФЛ(Реквизиты.Организация, Реквизиты.Период) Тогда
		Возврат СтруктураТаблиц;
	КонецЕсли;
	
	ИспользоватьПлановуюСебестоимость = Справочники.НастройкиУчетаЗатрат.ПлановаяСебестоимость(
		Реквизиты.Период,
		Реквизиты.Организация);
	
	ВремТаблицаСписанныеМПЗ	= ТаблицаСписанныеМПЗ.Скопировать();
	ВремТаблицаСписанныеМПЗ.Колонки.Добавить("СчетЗатрат",				Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ВремТаблицаСписанныеМПЗ.Колонки.Добавить("НоменклатурнаяГруппа",	Новый ОписаниеТипов("СправочникСсылка.НоменклатурныеГруппы"));
	ВремТаблицаСписанныеМПЗ.Колонки.Добавить("СтатьяЗатрат",			УчетДоходовИРасходовПредпринимателя.ОписаниеТиповЗатрат());
	
	ВремТаблицаСписанныеМПЗ.ЗагрузитьКолонку(ВремТаблицаСписанныеМПЗ.ВыгрузитьКолонку("КорСчетСписания"),	"СчетЗатрат");
	ВремТаблицаСписанныеМПЗ.ЗагрузитьКолонку(ВремТаблицаСписанныеМПЗ.ВыгрузитьКолонку("КорСубконто1"),		"НоменклатурнаяГруппа");
	ВремТаблицаСписанныеМПЗ.ЗагрузитьКолонку(ВремТаблицаСписанныеМПЗ.ВыгрузитьКолонку("КорСубконто2"),		"СтатьяЗатрат");
	
	// Подготовка таблиц для распределения материалов и услуг на готовую продукцию.
	ТаблицаМатериалов = УчетДоходовИРасходовПредпринимателя.НовыйТаблицаМатериаловДляВыпускаПродукции();
	
	ПолученоПродукции =Новый ТаблицаЗначений;
	ПолученоПродукции.Колонки.Добавить("СчетЗатрат",			Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ПолученоПродукции.Колонки.Добавить("НоменклатурнаяГруппа",	Новый ОписаниеТипов("СправочникСсылка.НоменклатурныеГруппы"));
	ПолученоПродукции.Колонки.Добавить("Продукция",				Справочники.ТипВсеСсылки());
	ПолученоПродукции.Колонки.Добавить("СчетУчетаПродукции",	Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ПолученоПродукции.Колонки.Добавить("КоличествоПродукции",	ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	ПолученоПродукции.Колонки.Добавить("БазаРаспределения",		ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	
	КолонкаБазаРаспределения  = ?(ИспользоватьПлановуюСебестоимость, "ПлановаяСтоимость", "Количество");
	
	// Заполняем таблицу "ПолученоПродукции"
	Если ВыпускПродукцииТаблица <> Неопределено Тогда
		Для Каждого Продукция Из ВыпускПродукцииТаблица Цикл
							
			Если Продукция[КолонкаБазаРаспределения] = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока	= ПолученоПродукции.Добавить();
			НоваяСтрока.СчетЗатрат				= Продукция.СчетЗатрат;
			НоваяСтрока.НоменклатурнаяГруппа	= Продукция.НоменклатурнаяГруппаЗатрат;
			НоваяСтрока.Продукция				= Продукция.Номенклатура;
			НоваяСтрока.СчетУчетаПродукции		= Продукция.СчетСписания;
			НоваяСтрока.КоличествоПродукции		= Продукция.Количество;
			НоваяСтрока.БазаРаспределения 		= Продукция[КолонкаБазаРаспределения];
			
		КонецЦикла;
	КонецЕсли;
	
	ТипНоменклатурнойГруппы	= Тип("СправочникСсылка.НоменклатурныеГруппы");
	
	// Добавляем услуги в таблицу "ПолученоПродукции"
	Если ВыпускУслугТаблица <> Неопределено Тогда
		Для Каждого Услуга Из ВыпускУслугТаблица Цикл
			
			Если НЕ Услуга.ПрямыеРасходыРаспределятьПоКоличеству И Услуга.ПлановаяСтоимость = 0 Тогда
				Продолжить;
			КонецЕсли;
				
			НоваяСтрока = ПолученоПродукции.Добавить();
			НоваяСтрока.СчетУчетаПродукции		= Услуга.СчетСписания;
			НоваяСтрока.НоменклатурнаяГруппа	= Услуга.НоменклатурнаяГруппаЗатрат;
			НоваяСтрока.БазаРаспределения		= ?(Услуга.ПрямыеРасходыРаспределятьПоКоличеству, 
				Услуга.Количество, Услуга.ПлановаяСтоимость);
			
			ТипСубконто1 = ТипЗнч(Услуга.СубконтоСписания1);
			ТипСубконто2 = ТипЗнч(Услуга.СубконтоСписания2);
			ТипСубконто3 = ТипЗнч(Услуга.СубконтоСписания3);
			
			Если ТипСубконто1 = ТипНоменклатурнойГруппы Тогда
				НоваяСтрока.НоменклатурнаяГруппа = Услуга.СубконтоСписания1;
			ИначеЕсли ТипСубконто2 = ТипНоменклатурнойГруппы Тогда
				НоваяСтрока.НоменклатурнаяГруппа = Услуга.СубконтоСписания2;
			ИначеЕсли ТипСубконто3 = ТипНоменклатурнойГруппы Тогда
				НоваяСтрока.НоменклатурнаяГруппа = Услуга.СубконтоСписания3;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;

	КолонкаБазаРаспределения  = ?(ИспользоватьПлановуюСебестоимость, "Сумма", "Количество");
	
	// Добавляем отходы в таблицу "ПолученоПродукции"
	Если ВыпускОтходовТаблица <> Неопределено Тогда
		Для Каждого Отход Из ВыпускОтходовТаблица Цикл
			
			Если Отход[КолонкаБазаРаспределения] = 0 Тогда
				Продолжить;
			КонецЕсли;
						
			НоваяСтрока	= ПолученоПродукции.Добавить();
			НоваяСтрока.СчетУчетаПродукции		= Отход.СчетУчета;
			НоваяСтрока.Продукция				= Отход.Номенклатура;
			НоваяСтрока.НоменклатурнаяГруппа	= Отход.НоменклатурнаяГруппаЗатрат;
			НоваяСтрока.БазаРаспределения		= Отход[КолонкаБазаРаспределения];
			НоваяСтрока.КоличествоПродукции		= Отход.Количество;
			
		КонецЦикла;
	КонецЕсли;
	
	ПолученоПродукции.Свернуть("СчетЗатрат, НоменклатурнаяГруппа, Продукция, СчетУчетаПродукции", "КоличествоПродукции, БазаРаспределения");
	
	ПолныйОтборПродукции	  = Новый Структура("НоменклатурнаяГруппа, Продукция");
	СокращенныйОтборПродукции = Новый Структура("НоменклатурнаяГруппа");
	
	ПолученоПродукции.Индексы.Добавить("НоменклатурнаяГруппа, Продукция");
	ПолученоПродукции.Индексы.Добавить("НоменклатурнаяГруппа");
	
	МассивКоэффициентов	= Новый Массив;
	
	Для Каждого Материал Из ВремТаблицаСписанныеМПЗ Цикл
		
		Если Материал.Количество = 0 Тогда
			// Распределение невозможно
			Продолжить;
		КонецЕсли;
		
		МассивКоэффициентов.Очистить();
		
		СтрокиПродукции	= Неопределено;
		Если ЗначениеЗаполнено(Материал.НоменклатурнаяГруппа) Тогда
			
			СтрокиПродукции = Новый Массив;
			
			ПолныйОтборПродукции.НоменклатурнаяГруппа = УчетТоваров.ЗначениеКорСубконто(
				Материал,
				ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
				
			ПолныйОтборПродукции.Продукция            = УчетТоваров.ЗначениеКорСубконто(
				Материал,
				ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Продукция);
					
			
			// Ищем по полному отбору - с учетом конкретной продукции
			Если ЗначениеЗаполнено(ПолныйОтборПродукции.Продукция) Тогда
				СтрокиПродукции = ПолученоПродукции.НайтиСтроки(ПолныйОтборПродукции);
			КонецЕсли;
			
			// Если не удалось найти по полному, ищем по сокращенному
			Если Не ЗначениеЗаполнено(СтрокиПродукции) Тогда
				ЗаполнитьЗначенияСвойств(СокращенныйОтборПродукции, ПолныйОтборПродукции);
				СтрокиПродукции = ПолученоПродукции.НайтиСтроки(СокращенныйОтборПродукции);
			КонецЕсли;
			
			// Сохраним результат поиска
			Для каждого Продукция Из СтрокиПродукции Цикл
				МассивКоэффициентов.Добавить(Продукция.БазаРаспределения);
			КонецЦикла;
			
		КонецЕсли;
		
		Если МассивКоэффициентов.Количество() > 0 Тогда
			
			МассивКоличество	= ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(Материал.Количество, МассивКоэффициентов, 3);
			
			Для Индекс = 0 По МассивКоэффициентов.ВГраница() Цикл
				
				Если МассивКоличество[Индекс] = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				МатериалПоПродукции = ТаблицаМатериалов.Добавить();
				ЗаполнитьЗначенияСвойств(МатериалПоПродукции, Материал);
				ЗаполнитьЗначенияСвойств(МатериалПоПродукции, СтрокиПродукции[Индекс]);
				
				МатериалПоПродукции.СчетЗатрат	= СтрокиПродукции[Индекс].СчетУчетаПродукции;
				МатериалПоПродукции.Количество	= МассивКоличество[Индекс];
				
			КонецЦикла;
			
		Иначе
			
			МатериалПоПродукции	= ТаблицаМатериалов.Добавить();
			ЗаполнитьЗначенияСвойств(МатериалПоПродукции, Материал);
			МатериалПоПродукции.Продукция = Материал.СтатьяЗатрат;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаМатериалов = УчетДоходовИРасходовПредпринимателя.ДополнитьТаблицуСписанияМатериалов(ТаблицаМатериалов, ТаблицаРеквизиты);
	
	СтруктураТаблиц.ТаблицаМатериалов	= ТаблицаМатериалов;
	СтруктураТаблиц.ПолученоПродукции	= ПолученоПродукции;
	
	Возврат СтруктураТаблиц;
	
КонецФункции

#КонецОбласти

#Область ОтложенноеПроведение

Функция ТекстЗапросаРегистрацияОтложенныхРасчетовВПоследовательности(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ Реквизиты.ИспользуетсяОтложенноеПроведение
		ИЛИ НЕ (Реквизиты.ЕстьПродукция ИЛИ Реквизиты.ЕстьВозвратныеОтходы) Тогда
		ПараметрыПроведения.Вставить("МПЗРегистрацияВПоследовательности", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("МПЗРегистрацияВПоследовательности", НомераТаблиц.Количество());

	ТекстЗапроса = 
	?(Реквизиты.ЕстьПродукция, "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаПродукция.СчетУчета КАК СчетУчета,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК КорСчетСписания
	|ИЗ
	|	ТаблицаПродукция КАК ТаблицаПродукция", "")
	+ ?(Реквизиты.ЕстьПродукция И Реквизиты.ЕстьВозвратныеОтходы, "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|", "")
	+ ?(Реквизиты.ЕстьВозвратныеОтходы, "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОтходы.СчетУчета КАК СчетУчета,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК КорСчетСписания
	|ИЗ
	|	ТаблицаОтходы КАК ТаблицаОтходы", "");
	
	// Счета табличной части Материалы будут получены из ТаблицаСписанныеМатериалы в модуле объекта.
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

#КонецОбласти

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Накладная на передачу готовой продукции (МХ-18)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "МХ18";
	КомандаПечати.Представление = НСтр("ru = 'Накладная на передачу готовой продукции (МХ-18)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Требование-накладная (М-11)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "М11";
	КомандаПечати.Представление = НСтр("ru = 'Требование-накладная (М-11)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Услуги собственным подразделениям
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Услуги";
	КомандаПечати.Представление = НСтр("ru = 'Услуги собственным подразделениям'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаВыбора,ФормаДокументаОтчетПроизводстваЗаСмену";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Выпуск продукции (Отчеты производства)""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

// Функция формирует табличный документ с печатной формой накладной на передачу
// готовой продукции в места хранения (ф. МХ-18).
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной.
//
Функция ПечатьМХ18(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб				= Истина;
	ТабДокумент.РазмерКолонтитулаСверху	= 0;
	ТабДокумент.РазмерКолонтитулаСнизу	= 0;
	ТабДокумент.ОриентацияСтраницы		= ОриентацияСтраницы.Ландшафт;
	ТабДокумент.КлючПараметровПечати		= "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетПроизводстваЗаСмену_МХ18";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_МХ18");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);

	// Запрос к документам
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтчетПроизводстваЗаСмену.Номер КАК Номер,
	|	ОтчетПроизводстваЗаСмену.Дата КАК ДатаДокумента,
	|	ОтчетПроизводстваЗаСмену.Ссылка КАК Ссылка,
	|	ОтчетПроизводстваЗаСмену.Организация КАК Организация,
	|	ОтчетПроизводстваЗаСмену.СчетЗатрат КАК СчетЗатрат,
	|	ПРЕДСТАВЛЕНИЕ(ОтчетПроизводстваЗаСмену.СчетЗатрат) КАК ПредставлениеСчетаЗатрат,
	|	ОтчетПроизводстваЗаСмену.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
	|	ОтчетПроизводстваЗаСмену.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ПРЕДСТАВЛЕНИЕ(ОтчетПроизводстваЗаСмену.ПодразделениеЗатрат) КАК ПредставлениеПодразделениеЗатрат,
	|	ПРЕДСТАВЛЕНИЕ(ОтчетПроизводстваЗаСмену.ПодразделениеОрганизации) КАК ПредставлениеПодразделенияОрганизации,
	|	ОтчетПроизводстваЗаСмену.Склад КАК Склад,
	|	ПРЕДСТАВЛЕНИЕ(ОтчетПроизводстваЗаСмену.Склад) КАК ПредставлениеПолучателя
	|ИЗ
	|	Документ.ОтчетПроизводстваЗаСмену КАК ОтчетПроизводстваЗаСмену
	|ГДЕ
	|	ОтчетПроизводстваЗаСмену.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОтчетПроизводстваЗаСмену.Дата,
	|	ОтчетПроизводстваЗаСмену.Ссылка";

	ШапкаДокумента = Запрос.Выполнить().Выбрать();

	// Запросы к табличным частям с данными о переданной на склад продукции и возвратным отходам
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить());

	Запрос.Текст =
	"ВЫБРАТЬ
	|	0 КАК Раздел,
	|	ОтчетПроизводстваЗаСмену.Ссылка.Дата КАК Дата,
	|	ОтчетПроизводстваЗаСмену.Ссылка КАК Ссылка,
	|	ОтчетПроизводстваЗаСмену.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ОтчетПроизводстваЗаСмену.Номенклатура.Артикул
	|		ИНАЧЕ ОтчетПроизводстваЗаСмену.Номенклатура.Код
	|	КОНЕЦ КАК КодНоменклатуры,
	|	ОтчетПроизводстваЗаСмену.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|	ОтчетПроизводстваЗаСмену.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ОтчетПроизводстваЗаСмену.ЕдиницаИзмерения.Наименование КАК ВидУпаковки,
	|	ОтчетПроизводстваЗаСмену.Коэффициент КАК КоличествоВОдномМесте,
	|	СУММА(ОтчетПроизводстваЗаСмену.Количество) КАК Количество,
	|	СУММА(ОтчетПроизводстваЗаСмену.СуммаПлановая) КАК СуммаПлановая,
	|	СУММА(ОтчетПроизводстваЗаСмену.КоличествоМест) КАК КоличествоМест,
	|	МИНИМУМ(ОтчетПроизводстваЗаСмену.НомерСтроки) КАК НомерСтроки,
	|	ОтчетПроизводстваЗаСмену.Номенклатура.НаименованиеПолное КАК НоменклатураНаименованиеПолное,
	|	ОтчетПроизводстваЗаСмену.Номенклатура.Наименование КАК НоменклатураНаименование
	|ИЗ
	|	Документ.ОтчетПроизводстваЗаСмену.Продукция КАК ОтчетПроизводстваЗаСмену
	|ГДЕ
	|	ОтчетПроизводстваЗаСмену.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетПроизводстваЗаСмену.Ссылка.Дата,
	|	ОтчетПроизводстваЗаСмену.Ссылка,
	|	ОтчетПроизводстваЗаСмену.Номенклатура,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ОтчетПроизводстваЗаСмену.Номенклатура.Артикул
	|		ИНАЧЕ ОтчетПроизводстваЗаСмену.Номенклатура.Код
	|	КОНЕЦ,
	|	ОтчетПроизводстваЗаСмену.ЕдиницаИзмерения,
	|	ОтчетПроизводстваЗаСмену.Коэффициент,
	|	ОтчетПроизводстваЗаСмену.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	ОтчетПроизводстваЗаСмену.Номенклатура.ЕдиницаИзмерения.Код,
	|	ОтчетПроизводстваЗаСмену.ЕдиницаИзмерения.Наименование,
	|	ОтчетПроизводстваЗаСмену.Номенклатура.НаименованиеПолное,
	|	ОтчетПроизводстваЗаСмену.Номенклатура.Наименование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	ОтчетПроизводстваЗаСмену.Ссылка.Дата,
	|	ОтчетПроизводстваЗаСмену.Ссылка,
	|	ОтчетПроизводстваЗаСмену.Номенклатура,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ОтчетПроизводстваЗаСмену.Номенклатура.Артикул
	|		ИНАЧЕ ОтчетПроизводстваЗаСмену.Номенклатура.Код
	|	КОНЕЦ,
	|	ОтчетПроизводстваЗаСмену.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	ОтчетПроизводстваЗаСмену.Номенклатура.ЕдиницаИзмерения.Код,
	|	ОтчетПроизводстваЗаСмену.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	1,
	|	СУММА(ОтчетПроизводстваЗаСмену.Количество),
	|	СУММА(ОтчетПроизводстваЗаСмену.Сумма),
	|	СУММА(ОтчетПроизводстваЗаСмену.Количество),
	|	МИНИМУМ(ОтчетПроизводстваЗаСмену.НомерСтроки),
	|	ОтчетПроизводстваЗаСмену.Номенклатура.НаименованиеПолное,
	|	ОтчетПроизводстваЗаСмену.Номенклатура.Наименование
	|ИЗ
	|	Документ.ОтчетПроизводстваЗаСмену.ВозвратныеОтходы КАК ОтчетПроизводстваЗаСмену
	|ГДЕ
	|	ОтчетПроизводстваЗаСмену.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетПроизводстваЗаСмену.Ссылка.Дата,
	|	ОтчетПроизводстваЗаСмену.Ссылка,
	|	ОтчетПроизводстваЗаСмену.Номенклатура,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ОтчетПроизводстваЗаСмену.Номенклатура.Артикул
	|		ИНАЧЕ ОтчетПроизводстваЗаСмену.Номенклатура.Код
	|	КОНЕЦ,
	|	ОтчетПроизводстваЗаСмену.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	ОтчетПроизводстваЗаСмену.Номенклатура.ЕдиницаИзмерения.Код,
	|	ОтчетПроизводстваЗаСмену.Номенклатура.НаименованиеПолное,
	|	ОтчетПроизводстваЗаСмену.Номенклатура.Наименование,
	|	ОтчетПроизводстваЗаСмену.Номенклатура.ЕдиницаИзмерения.Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка,
	|	Раздел,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка,
	|	Раздел";
	Таблицы = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ВалютаРегламентированногоУчета  = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	ПервыйДокумент = Истина;
	
	Пока ШапкаДокумента.Следующий() Цикл

		Ссылка = ШапкаДокумента.Ссылка;
		
		// Найдем данные для вывода (данные табличных частей)
		Отбор = Новый Структура();
		Отбор.Вставить("Ссылка", Ссылка);
		Если Не Таблицы.НайтиСледующий(Отбор) Тогда
			// Выборку таблиц упорядочиваем так же, как и выборку документов, чтобы искать по выборке с текущей записи.
			// Но на случай рассинхронизации попробуем поискать с начала выборки.
			Таблицы.Сбросить();
			Если Не Таблицы.НайтиСледующий(Отбор) Тогда
				// Документ без таблиц не выводим
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ПервыйДокумент = Ложь;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

		Шапка                        = Макет.ПолучитьОбласть("Шапка");
		Подвал                       = Макет.ПолучитьОбласть("Подвал");

		// Каждый раздел выводим отдельно со своей шапкой и подвалом.
		// Но у разделов одного и того же документа шапка почти одинаковая - отличаются только полем КодАналитики, идентифицирующим раздел.
		// В подвале тоже есть одинаковая часть - данные о складе-получателе и его МОЛе.
		Шапка.Параметры.Заполнить(ШапкаДокумента);
		Шапка.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ШапкаДокумента.Номер, Истина, Ложь);
		Шапка.Параметры.ДатаДокумента  = ШапкаДокумента.ДатаДокумента;

		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ШапкаДокумента.Организация, ШапкаДокумента.ДатаДокумента);

		Шапка.Параметры.ОрганизацияПоОКПО          = СведенияОбОрганизации.КодПоОКПО;
		Шапка.Параметры.ПредставлениеОрганизации   = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			СведенияОбОрганизации,
			"НаименованиеДляПечатныхФорм,ИНН,ЮридическийАдрес,Телефоны,Факс");
		Шапка.Параметры.ПредставлениеПодразделения = ?(ЗначениеЗаполнено(ШапкаДокумента.ПодразделениеОрганизации), // Аналогично БП2
			ШапкаДокумента.ПредставлениеПодразделенияОрганизации,
			ШапкаДокумента.ПредставлениеПодразделениеЗатрат);
		Шапка.Параметры.Корсчет                    = ШапкаДокумента.ПредставлениеСчетаЗатрат;
		
		Если ЗначениеЗаполнено(ШапкаДокумента.Склад) Тогда 
			МОЛ = ОтветственныеЛицаБП.ОтветственноеЛицоНаСкладе(ШапкаДокумента.Склад, ШапкаДокумента.ДатаДокумента);
			ДанныеФизЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(ШапкаДокумента.Организация, МОЛ, ШапкаДокумента.ДатаДокумента);
			Подвал.Параметры.КладовщикДолжность = ДанныеФизЛица.Должность;
			Подвал.Параметры.КладовщикФИО       = ДанныеФизЛица.Представление;
		КонецЕсли;
		
		ИспользоватьПлановуюСебестоимость = Справочники.НастройкиУчетаЗатрат.ПлановаяСебестоимость(
			ШапкаДокумента.ДатаДокумента,
			ШапкаДокумента.Организация);
			
		// Выводим разделы
		ПервыйРаздел   = Истина;
		ВыборкаРазделы = Таблицы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаРазделы.Следующий() Цикл
			
			// Для каждого раздела инициализируем макеты заново, чтобы исключить влияние данных предыдущих разделов
			ЗаголовокТаблицы             = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			Строка                       = Макет.ПолучитьОбласть("Строка");
			Итого                        = Макет.ПолучитьОбласть("Итого");
			ИтогоПоНакладнойОднаСтраница = Макет.ПолучитьОбласть("ИтогоПоНакладнойОднаСтраница");
			ИтогоПоНакладнойМногоСтраниц = Макет.ПолучитьОбласть("ИтогоПоНакладнойМногоСтраниц");
			ПодвалТаблицы                = Макет.ПолучитьОбласть("ПодвалТаблицы");
			
			Если Не ПервыйРаздел Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ПервыйРаздел = Ложь;
			
			Если ВыборкаРазделы.Раздел = 1 Тогда
				Шапка.Параметры.КодАналитики = "Возвратные отходы";
			Иначе
				Шапка.Параметры.КодАналитики = "";
			КонецЕсли;
			
			ТабДокумент.Вывести(Шапка);
			ТабДокумент.Вывести(ЗаголовокТаблицы);

			// Инициализация счетчика страниц
			НомерСтраницы = 1;

			// Инициализация итогов по странице
			ИтогоМассаБруттоНаСтранице = 0;
			ИтогоМестНаСтранице        = 0;
			ИтогоКоличествоНаСтранице  = 0;
			ИтогоСуммаНаСтранице       = 0;

			// Инициализация итогов по документу
			ИтогоМассаБрутто = 0;
			ИтогоМест        = 0;
			ИтогоКоличество  = 0;
			ИтогСумма        = 0;

			// Выводим многострочную часть документа
			ВыборкаСтроки   = ВыборкаРазделы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			КоличествоСтрок = ВыборкаСтроки.Количество();
			НомерСтроки     = 0;
			
			Пока ВыборкаСтроки.Следующий() Цикл
				
				НомерСтроки = НомерСтроки + 1;
				
				// Проверим, помещается ли строка с итогами на страницу, если нет, будем
				// выводить итоги по странице, а строку перенесем на следующую страницу
				СтрокаСИтогами = Новый Массив;
				СтрокаСИтогами.Добавить(Строка);

				Если НомерСтроки < КоличествоСтрок Тогда
					// не последняя строка, достаточно проверить, поместятся ли итоги по странице
					СтрокаСИтогами.Добавить(Итого);
					СтрокаСИтогами.Добавить(ПодвалТаблицы);
				Иначе 
					// Cтрока - последняя в таблице, проверим, поместятся ли
					// итоги по накладной и подвал.
					Если НомерСтраницы > 1 Тогда
						СтрокаСИтогами.Добавить(Итого);
						СтрокаСИтогами.Добавить(ИтогоПоНакладнойМногоСтраниц);
					Иначе
						СтрокаСИтогами.Добавить(ИтогоПоНакладнойОднаСтраница);
					КонецЕсли;
					СтрокаСИтогами.Добавить(ПодвалТаблицы);
					СтрокаСИтогами.Добавить(Подвал);
				КонецЕсли;
				
				Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСИтогами) Тогда
					
					// Выводим итоги по странице
					Итого.Параметры.ИтогМассаБруттоНаСтранице = ИтогоМассаБруттоНаСтранице;
					Итого.Параметры.ИтогМестНаСтранице        = ИтогоМестНаСтранице;
					Итого.Параметры.ИтогКоличествоНаСтранице  = ИтогоКоличествоНаСтранице;
					Итого.Параметры.ИтогСуммаНаСтранице       = ИтогоСуммаНаСтранице;
					
					ТабДокумент.Вывести(Итого);

					// Выводим подвал таблицы
					ТабДокумент.Вывести(ПодвалТаблицы);

					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

					// Очистим итоги по странице
					ИтогоМассаБруттоНаСтранице = 0;
					ИтогоМестНаСтранице        = 0;
					ИтогоКоличествоНаСтранице  = 0;
					ИтогоСуммаНаСтранице       = 0;

					// Установим новый номер
					НомерСтраницы = НомерСтраницы + 1;
					ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;

					ТабДокумент.Вывести(ЗаголовокТаблицы);

				КонецЕсли;
				
				СуммаПлановая = ?(ИспользоватьПлановуюСебестоимость, ВыборкаСтроки.СуммаПлановая, 0);
				
				// Выводим строку
				Строка.Параметры.Заполнить(ВыборкаСтроки);
				Строка.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтроки.НоменклатураНаименованиеПолное);
				Строка.Параметры.ТоварКод          = ВыборкаСтроки.КодНоменклатуры;
				Строка.Параметры.Цена              = ?(ВыборкаСтроки.Количество = 0, 0, СуммаПлановая / ВыборкаСтроки.Количество);
				Строка.Параметры.Сумма             = СуммаПлановая;

				ТабДокумент.Вывести(Строка);

				// Увеличим итоги по странице
				ИтогоМассаБруттоНаСтранице = 0;
				ИтогоМестНаСтранице        = ИтогоМестНаСтранице       + ВыборкаСтроки.КоличествоМест;
				ИтогоКоличествоНаСтранице  = ИтогоКоличествоНаСтранице + ВыборкаСтроки.Количество;
				ИтогоСуммаНаСтранице       = ИтогоСуммаНаСтранице      + СуммаПлановая;

				// Увеличим итоги по документу
				ИтогоМассаБрутто = 0;
				ИтогоМест        = ИтогоМест       + ВыборкаСтроки.КоличествоМест;
				ИтогоКоличество  = ИтогоКоличество + ВыборкаСтроки.Количество;
				ИтогСумма        = ИтогСумма       + СуммаПлановая;

			КонецЦикла;

			// Если страниц много, выводим промежуточные итоги по последней странице
			// перед итогами по накладной
			Если НомерСтраницы > 1 Тогда

				// Выводим итоги по странице
				Итого.Параметры.ИтогМассаБруттоНаСтранице = ИтогоМассаБруттоНаСтранице;
				Итого.Параметры.ИтогМестНаСтранице        = ИтогоМестНаСтранице;
				Итого.Параметры.ИтогКоличествоНаСтранице  = ИтогоКоличествоНаСтранице;
				Итого.Параметры.ИтогСуммаНаСтранице       = ИтогоСуммаНаСтранице;

				ТабДокумент.Вывести(Итого);

				// Выводим итоги по накладной
				ИтогоПоНакладнойМногоСтраниц.Параметры.ИтогМассаБрутто = ИтогоМассаБрутто;
				ИтогоПоНакладнойМногоСтраниц.Параметры.ИтогМест        = ИтогоМест;
				ИтогоПоНакладнойМногоСтраниц.Параметры.ИтогКоличество  = ИтогоКоличество;
				ИтогоПоНакладнойМногоСтраниц.Параметры.ИтогСумма       = ИтогСумма;

				ТабДокумент.Вывести(ИтогоПоНакладнойМногоСтраниц);

			Иначе // только итоги по накладной

				ИтогоПоНакладнойОднаСтраница.Параметры.ИтогМассаБрутто = ИтогоМассаБрутто;
				ИтогоПоНакладнойОднаСтраница.Параметры.ИтогМест        = ИтогоМест;
				ИтогоПоНакладнойОднаСтраница.Параметры.ИтогКоличество  = ИтогоКоличество;
				ИтогоПоНакладнойОднаСтраница.Параметры.ИтогСумма       = ИтогСумма;

				ТабДокумент.Вывести(ИтогоПоНакладнойОднаСтраница);

			КонецЕсли;
			
			// Выводим подвал таблицы
			ТабДокумент.Вывести(ПодвалТаблицы);
			
			// Выводим подвал документа
			// Часть параметров установлены вне цикла по разделам
			Подвал.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, , ",,,,,,,,0");
			Подвал.Параметры.ИтогСуммаПрописью = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтогСумма, ВалютаРегламентированногоУчета);
			ТабДокумент.Вывести(Подвал);
			
			// В табличном документе зададим имя области, в которую был
			// выведен объект. Нужно для возможности печати покомплектно.
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
				ТабДокумент,
				НомерСтрокиНачало, 
				ОбъектыПечати, 
				ШапкаДокумента.Ссылка);
				
		КонецЦикла; // По ВыборкаРазделы

	КонецЦикла; // Цикл по документам

	Возврат ТабДокумент;

КонецФункции

Функция ПечатьМ11(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб			= Истина;
	ТабДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ТребованиеНакладная_М11";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивРегистраторов", МассивОбъектов);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	МИНИМУМ(Дата) КАК ДатаНач,
	|	МАКСИМУМ(Дата) КАК ДатаКон
	|ИЗ
	|	Документ.ОтчетПроизводстваЗаСмену
	|ГДЕ
	|	Ссылка В (&МассивРегистраторов)
	|";
	Выборка = Запрос.Выполнить().Выбрать();
	ДатаНач = '00010101';
	ДатаКон = '00010101';
	Если Выборка.Следующий() Тогда
		ДатаНач = Выборка.ДатаНач;
		ДатаКон = Выборка.ДатаКон;
	КонецЕсли;
	
	ТаблицаСуммСписанияПоДокументам = БухгалтерскийУчетПереопределяемый.ПолучитьСуммуСписанияАктивов(МассивОбъектов, ДатаНач, ДатаКон);
	СтруктураПоиска = Новый Структура("Регистратор, Номенклатура");
	
	ПервыйДокумент = Истина;
	
	Для Каждого Объект ИЗ МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_М11");
		
		Область = Макет.ПолучитьОбласть("Шапка");
		Область.Параметры.Заголовок                = "ТРЕБОВАНИЕ-НАКЛАДНАЯ № " + ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Объект.Номер, Истина, Ложь);
		Область.Параметры.КодОКПО                  = Объект.Организация.КодПоОКПО;
		СведенияОбОрганизации    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Объект.Организация, Объект.Дата);
		ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,");
		Область.Параметры.ПредставлениеОрганизации = ПредставлениеОрганизации;
		Область.Параметры.ДатаСоставления          = Формат( Объект.Дата, "ДФ=dd.MM.yy");
		Область.Параметры.Склад                    = Объект.Склад;
		Область.Параметры.КоррСчет                 = Объект.СчетЗатрат.Код;
		Область.Параметры.ПредставлениеПодразделения = Объект.ПодразделениеЗатрат.Наименование;
		Если ЗначениеЗаполнено(Объект.ПодразделениеЗатрат.НаименованиеПолное) Тогда
			Область.Параметры.ПредставлениеПодразделения = Объект.ПодразделениеЗатрат.НаименованиеПолное;
		КонецЕсли;
		ТабДокумент.Вывести(Область);

		СтруктураПолей = Новый Структура;
		СтруктураПолей.Вставить("Счет",                         "Счет");
		СтруктураПолей.Вставить("Материал",                     "Номенклатура");
		СтруктураПолей.Вставить("МатериалНаименование",         "Номенклатура.НаименованиеПолное");
		Если Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить() = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
			СтруктураПолей.Вставить("НоменклатурныйНомер",          "Номенклатура.Артикул");	
		Иначе
			СтруктураПолей.Вставить("НоменклатурныйНомер",          "Номенклатура.Код");	
		КонецЕсли;
		СтруктураПолей.Вставить("ЕдиницаИзмеренияНаименование", "Номенклатура.ЕдиницаИзмерения");
		СтруктураПолей.Вставить("ЕдиницаИзмеренияКод",          "Номенклатура.ЕдиницаИзмерения.Код");
		СтруктураПолей.Вставить("Количество",                   "Количество");

		Область = Макет.ПолучитьОбласть("Строка");

		ТаблицаМатериалов = УчетОС.СформироватьЗапросПоТабличнойЧасти(Объект, "Материалы", СтруктураПолей).Выгрузить();
		ТаблицаМатериалов.Свернуть("Материал, МатериалНаименование, Счет, НоменклатурныйНомер,ЕдиницаИзмеренияКод,ЕдиницаИзмеренияНаименование", "Количество");

		// Поиск сумм списания активов для заполнения Цены и Суммы

		Для Каждого СтрокаТЧ Из ТаблицаМатериалов Цикл
			
			Область.Параметры.Заполнить(СтрокаТЧ);
			
			СтруктураПоиска.Регистратор 	= Объект;
			СтруктураПоиска.Номенклатура  	= СтрокаТЧ.Материал;
			
			НайденныеСтроки = ТаблицаСуммСписанияПоДокументам.НайтиСтроки(СтруктураПоиска);
			
			Если НайденныеСтроки.Количество() = 0 Тогда
				Область.Параметры.Цена = 0;
				Область.Параметры.Сумма = 0;
			Иначе
				СтрокаСуммСписания 	= НайденныеСтроки[0]; 
				Цена = ?(СтрокаСуммСписания.Количество = 0, 0, СтрокаСуммСписания.Сумма / СтрокаСуммСписания.Количество);
				Область.Параметры.Цена  = Цена;
				Область.Параметры.Сумма = Цена * СтрокаТЧ.Количество;
			КонецЕсли;
			ТабДокумент.Вывести(Область);
			
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("Подвал");
		Если ЗначениеЗаполнено(Объект.Склад) Тогда 
			МОЛ = ОтветственныеЛицаБП.ОтветственноеЛицоНаСкладе(Объект.Склад, Объект.Дата);
			ДанныеФизЛица = ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Объект.Организация, МОЛ, Объект.Дата);
			Область.Параметры.МОЛДолжность = ДанныеФизЛица.Должность;
			Область.Параметры.МОЛФИО = ДанныеФизЛица.Представление;
		КонецЕсли;
		ТабДокумент.Вывести(Область);
		
		// В табличном документе зададим имя области, в которую был
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент,
			НомерСтрокиНачало, ОбъектыПечати, Объект.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;

КонецФункции

// Скрывает колонку в области табличного документа, увеличивая на ширину скрытой колонки другую колонку.
//
// Параметры
//  Макет 				- табличный документ
//  ИмяОбластиСтроки 	- имя горизонтальной области табличного документа (модифицируемой)
//	ИмяОбластиОпциональнойКолонки - имя вертикальной области, соответствующей опциональной колонке
//  ИмяОбластиИзменяемойКолонки - имя вертикальной области, соответствующей колонке, ширина которой будет увеличена
//	ПризнакВывода		- булево, выводить (оставлять) опциональную область или нет
//
// Возвращаемое значение
//	Модифицированная область табличного документа, соответствующая области ИмяОбластиСтроки
//
Функция ПолучитьОбластьСОпциональнойКолонкой(Макет, ИмяОбластиСтроки, ИмяОбластиОпциональнойКолонки, ИмяОбластиИзменяемойКолонки, ПризнакВывода)
	
	Если ПризнакВывода Тогда
		//отдаем как есть
	Иначе
		//надо спрятать область
		ОбластьДляУдаления 	= Макет.Область(ИмяОбластиСтроки+"|"+ИмяОбластиОпциональнойКолонки);
		ОбластьДляИзменения = Макет.Область(ИмяОбластиСтроки+"|"+ИмяОбластиИзменяемойКолонки);
		ОбластьДляИзменения.ШиринаКолонки 	= ОбластьДляИзменения.ШиринаКолонки + ОбластьДляУдаления.ШиринаКолонки;
		ОбластьДляУдаления.ШиринаКолонки 	= 0;
	КонецЕсли;
	
	Возврат Макет.ПолучитьОбласть(ИмяОбластиСтроки);
	
КонецФункции

Функция ПечатьУслугиСобственнымПодразделениям(МассивОбъектов, ОбъектыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	// Вывод артикула
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ВыводитьКолонкуАртикул 	   = Истина;
		ИспользоватьКодДляАртикула = Ложь;
		ЗаголовокКолонкиАртикул	   = "Артикул";
	ИначеЕсли ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
		ВыводитьКолонкуАртикул 	   = Истина;
		ИспользоватьКодДляАртикула = Истина;
		ЗаголовокКолонкиАртикул	   = "Код";
	Иначе
		ВыводитьКолонкуАртикул 	   = Ложь;
		ИспользоватьКодДляАртикула = Ложь;
		ЗаголовокКолонкиАртикул	   = "";
	КонецЕсли;
	
	// Подготовим макеты
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОтчетПроизводстваЗаСмену.ПФ_MXL_УслугиСобственнымПодразделениям");
	МакетЗаголовок       = Макет.ПолучитьОбласть("Заголовок");
	МакетЗаголовокУслуги = ПолучитьОбластьСОпциональнойКолонкой(Макет, "ЗаголовокУслуги", "Артикул", "Номенклатура", ВыводитьКолонкуАртикул);
	МакетЗаголовокУслуги.Параметры.ЗаголовокКолонкиАртикул = ЗаголовокКолонкиАртикул;
	МакетСтрокаУслуги    = ПолучитьОбластьСОпциональнойКолонкой(Макет, "СтрокаУслуги",    "Артикул", "Номенклатура", ВыводитьКолонкуАртикул);
	МакетИтогиУслуги     = ПолучитьОбластьСОпциональнойКолонкой(Макет, "ИтогиУслуги",     "Артикул", "Номенклатура", ВыводитьКолонкуАртикул);
	МакетПодвал          = Макет.ПолучитьОбласть("Подвал");
	
	// Выборка данных
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов",                 МассивОбъектов);
	Запрос.УстановитьПараметр("ИспользоватьКодДляАртикула",     ИспользоватьКодДляАртикула);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДокументТаблицаДокумента.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ТаблицаДокумента.НомерСтроки) КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА &ИспользоватьКодДляАртикула
	|			ТОГДА ТаблицаДокумента.Номенклатура.Код
	|		ИНАЧЕ ТаблицаДокумента.Номенклатура.Артикул
	|	КОНЕЦ КАК Артикул,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.ПодразделениеЗатрат КАК Подразделение,
	|	СУММА(ТаблицаДокумента.Количество) КАК Количество,
	|	СУММА(ТаблицаДокумента.СуммаПлановая) КАК Сумма,
	|	СУММА(ТаблицаДокумента.ПлановаяСтоимость) КАК Цена,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.Номенклатура.ПериодичностьУслуги КАК ПериодичностьУслуги
	|ПОМЕСТИТЬ ДанныеДокументов
	|ИЗ
	|	Документ.ОтчетПроизводстваЗаСмену КАК ДокументТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетПроизводстваЗаСмену.Услуги КАК ТаблицаДокумента
	|		ПО (ТаблицаДокумента.Ссылка = ДокументТаблицаДокумента.Ссылка)
	|ГДЕ
	|	ДокументТаблицаДокумента.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументТаблицаДокумента.Ссылка,
	|	ВЫБОР
	|		КОГДА &ИспользоватьКодДляАртикула
	|			ТОГДА ТаблицаДокумента.Номенклатура.Код
	|		ИНАЧЕ ТаблицаДокумента.Номенклатура.Артикул
	|	КОНЕЦ,
	|	ТаблицаДокумента.ПодразделениеЗатрат,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения,
	|	ТаблицаДокумента.Номенклатура,
	|	ТаблицаДокумента.Номенклатура.ПериодичностьУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка.Номер КАК Номер,
	|	ДанныеДокументов.Ссылка.Дата КАК Дата,
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Ссылка.Организация КАК Организация,
	|	ДанныеДокументов.Ссылка.ПодразделениеЗатрат КАК Исполнитель,
	|	ДанныеДокументов.Ссылка.ПодразделениеЗатрат.Представление КАК ИсполнительПредставление,
	|	ДанныеДокументов.Ссылка.Ответственный.Представление КАК ОтветственныйПредставление,
	|	ДанныеДокументов.Ссылка.Ответственный КАК Ответственный,
	|	ДанныеДокументов.НомерСтроки КАК НомерСтроки,
	|	ДанныеДокументов.Артикул КАК Артикул,
	|	ДанныеДокументов.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ДанныеДокументов.Номенклатура.НаименованиеПолное <> """"
	|			ТОГДА ДанныеДокументов.Номенклатура.НаименованиеПолное
	|		ИНАЧЕ ДанныеДокументов.Номенклатура.Представление
	|	КОНЕЦ КАК НоменклатураПредставление,
	|	ДанныеДокументов.Количество КАК Количество,
	|	ДанныеДокументов.Цена КАК Цена,
	|	ДанныеДокументов.Сумма КАК Сумма,
	|	ДанныеДокументов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ДанныеДокументов.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияПредставление,
	|	ДанныеДокументов.Подразделение КАК Подразделение,
	|	ДанныеДокументов.Подразделение.Представление КАК ПодразделениеПредставление,
	|	ДанныеДокументов.ПериодичностьУслуги
	|ИЗ
	|	ДанныеДокументов КАК ДанныеДокументов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Номер,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(Сумма)
	|ПО
	|	Ссылка";
	
    // Подготовка табличного документа
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетПроизводстваЗаСмену_УслугиСобственнымПодразделениям";
	ПервыйДокумент = Истина;
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Выборка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Шапка
		ТекстЗаголовка           = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Выборка, "Услуги собственным подразделениям");
		СведенияОбОрганизации    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата);
		ОрганизацияПредставление = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");
		
		МакетЗаголовок.Параметры.Заполнить(Выборка);
		МакетЗаголовок.Параметры.ТекстЗаголовка           = ТекстЗаголовка;
		МакетЗаголовок.Параметры.ОрганизацияПредставление = ОрганизацияПредставление;
		
		ТабДокумент.Вывести(МакетЗаголовок);
		
		// Шапка табличной части
		ТабДокумент.Вывести(МакетЗаголовокУслуги);
		
		// Строки табличной части
		НомерСтроки = 0;
		ОдинаковыеЕдиницыИзмерения = Истина;
		ЕдиницаИзмерения           = Неопределено;
		
		ВыборкаСтроки = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСтроки.Следующий() Цикл
			// Вывод
			МакетСтрокаУслуги.Параметры.Заполнить(ВыборкаСтроки);
			НомерСтроки = НомерСтроки + 1;
			МакетСтрокаУслуги.Параметры.НомерСтроки = НомерСтроки;
			МакетСтрокаУслуги.Параметры.Цена        = Формат(ВыборкаСтроки.Цена, "ЧДЦ=2; ЧГ=3,0");
			МакетСтрокаУслуги.Параметры.Сумма       = Формат(ВыборкаСтроки.Сумма, "ЧДЦ=2; ЧГ=3,0");
			МакетСтрокаУслуги.Параметры.Количество  = Формат(ВыборкаСтроки.Количество, "");
			МакетСтрокаУслуги.Параметры.НоменклатураПредставление = РаботаСНоменклатуройКлиентСерверБП.СодержаниеУслуги(
				ВыборкаСтроки.НоменклатураПредставление, ВыборкаСтроки.ПериодичностьУслуги, Выборка.Дата);
			ТабДокумент.Вывести(МакетСтрокаУслуги);
			// Подсчет итогов
			Если ЕдиницаИзмерения = Неопределено Тогда
				ЕдиницаИзмерения = ВыборкаСтроки.ЕдиницаИзмерения;
			ИначеЕсли ЕдиницаИзмерения <> ВыборкаСтроки.ЕдиницаИзмерения Тогда
				ОдинаковыеЕдиницыИзмерения = Ложь;
			КонецЕсли;
		КонецЦикла;

		// Итоги табличной части
		МакетИтогиУслуги.Параметры.Сумма       = Формат(Выборка.Сумма, "ЧДЦ=2; ЧГ=3,0");
		Если ОдинаковыеЕдиницыИзмерения Тогда
			МакетИтогиУслуги.Параметры.Количество  = Формат(Выборка.Количество, "");
			МакетИтогиУслуги.Параметры.ЕдиницаИзмерения = ЕдиницаИзмерения;
		КонецЕсли;
		ТабДокумент.Вывести(МакетИтогиУслуги);
		
		// Подвал документа
		МакетПодвал.Параметры.Заполнить(Выборка);
		ТабДокумент.Вывести(МакетПодвал);
		
		// В табличном документе зададим имя области, в которую был
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент,
			НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
			
	КонецЦикла;
	
	Возврат ТабДокумент;

КонецФункции

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МХ18") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "МХ18", "МХ-18 (Накладная на передачу готовой продукции)", 
			ПечатьМХ18(МассивОбъектов, ОбъектыПечати), , "ОбщийМакет.ПФ_MXL_МХ18");
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Услуги") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Услуги", "Услуги собственным подразделениям", 
			ПечатьУслугиСобственнымПодразделениям(МассивОбъектов, ОбъектыПечати), , "Документ.ОтчетПроизводстваЗаСмену.ПФ_MXL_УслугиСобственнымПодразделениям");
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М11") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "М11", "М-11 (Требование-накладная)", 
			ПечатьМ11(МассивОбъектов, ОбъектыПечати), , "ОбщийМакет.ПФ_MXL_М11");
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	

КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Склад");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиОбновления

// Процедура - обработчик обновления
//
// Параметры:
//  Параметры - Структура - параметры обработчика обновления.
//
Процедура ЗаполнитьВидОперацииПоУмолчанию(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1000
	|	ОтчетПроизводстваЗаСмену.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ОтчетПроизводстваЗаСмену КАК ОтчетПроизводстваЗаСмену
	|ГДЕ
	|	ОтчетПроизводстваЗаСмену.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтчетПроизводстваЗаСмену.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОтчетПроизводстваЗаСмену.Дата УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Ложь;
	ОбъектовОбработано = 0;
	ПроблемныхОбъектов = 0;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ОбъектовОбработано = ОбъектовОбработано + 1;
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		// Если объект ранее был удален или обработан другими сеансами, пропускаем его.
		Если ДокументОбъект = Неопределено ИЛИ ЗначениеЗаполнено(ДокументОбъект.ВидОперации) Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийОтчетПроизводстваЗаСмену.ОтчетПроизводстваЗаСмену;
		
		Попытка
			// Запись обработанного объекта (без перепроведения).
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		Исключение
			// Если не удалось обработать какой-либо документ, повторяем попытку снова.
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Процедуре Документы.ОтчетПроизводстваЗаСмену.ЗаполнитьВидОперацииПоУмолчанию() не удалось обработать Выпуск продукции (Отчет производства) по причине:
					|%1'"),
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Документы.ОтчетПроизводстваЗаСмену, Выборка.Ссылка, ТекстСообщения);
				
		КонецПопытки; 
		
	КонецЦикла;
	
	Если ПроблемныхОбъектов > 0 Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Процедуре Документы.ОтчетПроизводстваЗаСмену.ЗаполнитьВидОперацииПоУмолчанию() не удалось обработать документ ""Выпуск продукции (Отчеты производства)"": в %1 из %2 возникли ошибки'"),
				ПроблемныхОбъектов,
				ОбъектовОбработано);
		ВызватьИсключение ТекстСообщения;
	Иначе
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Информация,
			Метаданные.Документы.ОтчетПроизводстваЗаСмену,,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Процедура Документы.ОтчетПроизводстваЗаСмену.ЗаполнитьВидОперацииПоУмолчанию() обработала очередную порцию документов ""Выпуск продукции (Отчеты производства)"": %1 документов'"), ОбъектовОбработано));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли