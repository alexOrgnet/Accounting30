#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 14, 0);
	
КонецФункции

Процедура ЗаполнитьСчетаУчетаРасчетов(Объект, СчетаУчета = Неопределено) Экспорт
	
	Если СчетаУчета = Неопределено Тогда
		СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(
			Объект.Организация, Объект.Контрагент, Объект.ДоговорКонтрагента);
	КонецЕсли;
	
	Объект.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовПокупателя;
	
	Если Объект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически
		ИЛИ Объект.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.ПоДокументу Тогда
		Объект.СчетУчетаРасчетовПоАвансам = СчетаУчета.СчетАвансовПокупателя;
	Иначе
		Объект.СчетУчетаРасчетовПоАвансам = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	МассивРеквизитов = Новый Массив();
	МассивРеквизитов.Добавить("УдалитьУчитыватьНДС");
	
	Возврат МассивРеквизитов;
	
КонецФункции

// Возвращает текст запроса для отбора документов к печати УПД по релевантной форме.
// Добавлена во все документы, для которых доступна печать УПД.
// Параметры:
// ВерсияПостановленияНДС1137 - см.УчетНДСПереопределяемый.ВерсияПостановленияНДС1137()
// ЕстьПрослеживаемыеТовары - Булево - признак того, что в документе есть прослеживаемый товар. Для текущего документа
// параметр не используется, оставлен для совместимости.
//
// Возвращаемое значение: 
// ТекстЗапроса - строка с необходимым текстом запроса.
//
Функция ТекстЗапросаПечатьУниверсальныхПередаточныхДокументов(ВерсияПостановленияНДС1137 = Неопределено, ЕстьПрослеживаемыеТовары = Ложь) Экспорт
	
	ОтбиратьВсеСФ1137 = Ложь;
	Если ВерсияПостановленияНДС1137 = Неопределено Тогда
		ОтбиратьВсеСФ1137 = Истина;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Документ.СчетФактураВыданный.ПустаяСсылка) КАК СчетФактура,
	|	ПередачаОС.Дата КАК Дата,
	|	ПередачаОС.Номер КАК Номер,
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК Руководитель,
	|	НЕОПРЕДЕЛЕНО КАК ГлавныйБухгалтер,
	|	ИСТИНА КАК СчетФактураБезНДС,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ИСТИНА КАК УдалитьПрефиксыИзНомера,
	|	ИСТИНА КАК ЭтоСчетФактураВыданный,
	|	ИСТИНА КАК ВыводитьСуммуБезНДС,
	|	ПередачаОС.Ссылка КАК ДокументОснование,
	|	1 КАК НомерСтроки,
	|	ПередачаОС.Контрагент КАК Контрагент,
	|	ПередачаОС.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ГосКонтракты.Код, """") КАК ИдентификаторГосКонтракта,
	|	"""" КАК КППСчетаФактуры,
	|	"""" КАК КПППродавца,
	|	ПередачаОС.Дата КАК ДатаСведений
	|ИЗ
	|	Документ.ПередачаОС КАК ПередачаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ ПЕРВЫЕ 1
	|			ПередачаОССведенияПрослеживаемости.Ссылка КАК Ссылка,
	|			ИСТИНА КАК ЕстьПрослеживаемыеТовары
	|		ИЗ
	|			Документ.ПередачаОС.СведенияПрослеживаемости КАК ПередачаОССведенияПрослеживаемости
	|		ГДЕ
	|			ПередачаОССведенияПрослеживаемости.Ссылка В(&МассивОбъектов)) КАК ПрослеживаемыеОС
	|		ПО ПередачаОС.Ссылка = ПрослеживаемыеОС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГосКонтракты КАК ГосКонтракты
	|			ПО ДоговорыКонтрагентов.ГосударственныйКонтракт = ГосКонтракты.Ссылка
	|		ПО ПередачаОС.ДоговорКонтрагента = ДоговорыКонтрагентов.Ссылка
	|ГДЕ
	|	ПередачаОС.Ссылка В(&МассивОбъектов)
	|	И ПередачаОС.Дата > &УсловиеПоДате
	|	И &ЕстьПрослеживаемыеТовары";
	
	Если ОтбиратьВсеСФ1137 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
				">= &НачалоПримененияПостановления1137");
	ИначеЕсли ВерсияПостановленияНДС1137 = 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			"< &НачалоПримененияПостановления1137");
	ИначеЕсли ВерсияПостановленияНДС1137 >= 1 И ВерсияПостановленияНДС1137 <= 3 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			"МЕЖДУ &НачалоПримененияПостановления1137 И ДАТАВРЕМЯ(2017,09,30,23,59,59)");
	ИначеЕсли ВерсияПостановленияНДС1137 = 4 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			"МЕЖДУ ДАТАВРЕМЯ(2017,10,1) И ДАТАВРЕМЯ(2021,06,30,23,59,59)");
	ИначеЕсли ВерсияПостановленияНДС1137 = 5 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			"МЕЖДУ ДАТАВРЕМЯ(2021,7,1) И ДАТАВРЕМЯ(2023,09,30,23,59,59)");
	ИначеЕсли ВерсияПостановленияНДС1137 = 6 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "> &УсловиеПоДате",
			">= ДАТАВРЕМЯ(2023,10,1)");
	КонецЕсли;
	
	Если ОтбиратьВсеСФ1137 Тогда
		// Не накладываем отбор.
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЕстьПрослеживаемыеТовары", "ИСТИНА");
	ИначеЕсли ЕстьПрослеживаемыеТовары Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЕстьПрослеживаемыеТовары", "ЕСТЬNULL(ПрослеживаемыеОС.ЕстьПрослеживаемыеТовары, ЛОЖЬ) = ИСТИНА");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЕстьПрослеживаемыеТовары", "ЕСТЬNULL(ПрослеживаемыеОС.ЕстьПрослеживаемыеТовары, ЛОЖЬ) = ЛОЖЬ");
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

// Возвращаяет массив документов, для которых выписка счетов-фактур не требуется
//
Функция СчетаФактурыНеТребуются(МассивДокументов) Экспорт
	
	ДокументыСчетФактураНеТребуются = Новый Массив;
	
	Если НЕ ЗначениеЗаполнено(МассивДокументов) Тогда
		Возврат ДокументыСчетФактураНеТребуются
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПередачаОС.Ссылка КАК Ссылка,
	|	ИСТИНА КАК ЕстьНДС
	|ПОМЕСТИТЬ ВТ_ДокументыСНДС
	|ИЗ
	|	Документ.ПередачаОС.ОС КАК ПередачаОС
	|ГДЕ
	|	ПередачаОС.Ссылка В(&МассивДокументов)
	|	И (ПередачаОС.СуммаНДС > 0
	|			ИЛИ ПередачаОС.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаОС.Ссылка КАК Ссылка,
	|	ПередачаОС.Дата КАК Дата,
	|	ПередачаОС.Организация КАК Организация,
	|	ПередачаОС.ПравоСобственностиПереходитПослеГосРегистрации КАК ПравоСобственностиПереходитПослеГосРегистрации,
	|	ЕСТЬNULL(ВТ_ДокументыСНДС.ЕстьНДС, ЛОЖЬ) КАК ЕстьНДС
	|ИЗ
	|	Документ.ПередачаОС КАК ПередачаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДокументыСНДС КАК ВТ_ДокументыСНДС
	|		ПО (ВТ_ДокументыСНДС.Ссылка = ПередачаОС.Ссылка)
	|ГДЕ
	|	ПередачаОС.Ссылка В(&МассивДокументов)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если НЕ Выборка.ЕстьНДС
			И (НЕ УчетнаяПолитика.ПлательщикНДС(Выборка.Организация, Выборка.Дата) 
			ИЛИ УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(Выборка.Дата) >= 3 
			И НЕ УчетнаяПолитика.ПрименяетсяОсвобождениеОтУплатыНДС(Выборка.Организация, Выборка.Дата)) Тогда
			
			ДокументыСчетФактураНеТребуются.Добавить(Выборка.Ссылка);
			
		ИначеЕсли Выборка.Дата >= Дата('20110101')
			И Выборка.ПравоСобственностиПереходитПослеГосРегистрации
			И НЕ УчетнаяПолитика.НачислятьНДСПриПередачеНедвижимости(Выборка.Организация, Выборка.Дата) Тогда
			
			ДокументыСчетФактураНеТребуются.Добавить(Выборка.Ссылка);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДокументыСчетФактураНеТребуются;
	
КонецФункции

// Возвращаяет массив документов с прослеживаемыми товарами.
//
// Параметры:
// МассивДокументов - массив проверяемых документов.
//
// Возвращаемое значение:
// ДокументыСПрослеживаемымиТоварами - массив документов с прослеживаемыми товарами.
//
Функция ДокументыСПрослеживаемымиТоварами(МассивДокументов) Экспорт
	
	ДокументыСПрослеживаемымиТоварами = Новый Массив;
	
	Если НЕ ЗначениеЗаполнено(МассивДокументов) Тогда
		Возврат ДокументыСПрослеживаемымиТоварами
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПередачаОСОС.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПередачаОС.ОС КАК ПередачаОСОС
	|ГДЕ
	|	ПередачаОСОС.Ссылка В(&МассивДокументов)
	|	И ПередачаОСОС.ПрослеживаемыйТовар = ИСТИНА";
	
	ДокументыСПрослеживаемымиТоварами = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат ДокументыСПрослеживаемымиТоварами;
	
КонецФункции

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ, ДоговорДляОтложенногоПроведения = Неопределено) Экспорт

	ПараметрыПроведения = Новый Структура;

	ЭтоОтложенноеПроведение = ЗначениеЗаполнено(ДоговорДляОтложенногоПроведения);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Номер КАК Номер,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.СобытиеОС КАК СобытиеОС,
	|	Реквизиты.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетУчетаРасчетовПоАвансам,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	Реквизиты.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	Реквизиты.СпособЗачетаАвансов КАК СпособЗачетаАвансов,
	|	Реквизиты.ПравоСобственностиПереходитПослеГосРегистрации КАК ПравоСобственностиПереходитПослеГосРегистрации,
	|	Реквизиты.ВосстановитьАмортизационнуюПремию КАК ВосстановитьАмортизационнуюПремию,
	|	Реквизиты.СтатьяДляВосстановленияАмортизационнойПремии КАК СтатьяДляВосстановленияАмортизационнойПремии,
	|	Реквизиты.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.ПередачаОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаОСОС.Ссылка КАК Ссылка,
	|	ИСТИНА КАК ЕстьНДС
	|ПОМЕСТИТЬ ВТ_ЕстьНДС
	|ИЗ
	|	Документ.ПередачаОС.ОС КАК ПередачаОСОС
	|ГДЕ
	|	ПередачаОСОС.Ссылка = &Ссылка
	|	И (ПередачаОСОС.СуммаНДС > 0
	|			ИЛИ ПередачаОСОС.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаОСОС.Ссылка КАК Ссылка,
	|	ИСТИНА КАК ЕстьПрослеживаемыеОС
	|ПОМЕСТИТЬ ВТ_ЕстьПрослеживаемыеОС
	|ИЗ
	|	Документ.ПередачаОС.ОС КАК ПередачаОСОС
	|ГДЕ
	|	ПередачаОСОС.Ссылка = &Ссылка
	|	И ПередачаОСОС.ПрослеживаемыйТовар = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	Реквизиты.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Реквизиты.ПравоСобственностиПереходитПослеГосРегистрации КАК ПравоСобственностиПереходитПослеГосРегистрации,
	|	Реквизиты.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(ВТ_ЕстьНДС.ЕстьНДС, ЛОЖЬ) КАК ЕстьНДС,
	|	ЕСТЬNULL(ВТ_ЕстьПрослеживаемыеОС.ЕстьПрослеживаемыеОС, ЛОЖЬ) КАК ЕстьПрослеживаемыеОС,
	|	Реквизиты.ДокументОснование КАК ДокументОснование
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЕстьНДС КАК ВТ_ЕстьНДС
	|		ПО Реквизиты.Ссылка = ВТ_ЕстьНДС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЕстьПрослеживаемыеОС КАК ВТ_ЕстьПрослеживаемыеОС
	|		ПО Реквизиты.Ссылка = ВТ_ЕстьПрослеживаемыеОС.Ссылка";

	// Заменим обращение к реквизитам договора через переопределяемый функции
	Запрос.Текст = СтрЗаменить(Запрос.Текст, 
								"Реквизиты.ДоговорКонтрагента.ВидДоговора",
								БухгалтерскийУчетПереопределяемый.ТекстЗапросаВидДоговора("Реквизиты.ДоговорКонтрагента"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
								"Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах",
								БухгалтерскийУчетПереопределяемый.ТекстЗапросаРасчетыВУЕ("Реквизиты.ДоговорКонтрагента"));

	Реквизиты = ОбщегоНазначенияБПВызовСервера.ПолучитьСтруктуруИзРезультатаЗапроса(Запрос.Выполнить());

	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;

	// Коэффициенты пересчета сумм
	// - из валюты документа в валюту взаиморасчетов
	// - из валюты взаиморасчетов в рубли
	Реквизиты.Вставить("ОрганизацияПрименяетУСН", УчетнаяПолитика.ПрименяетсяУСН(Реквизиты.Организация, Реквизиты.Период));
	Реквизиты.Вставить("НачислятьНДСПоОтгрузке",  УчетнаяПолитика.НачислятьНДСПоОтгрузке(Реквизиты.Организация, Реквизиты.Период));
	Реквизиты.Вставить("ВалютаРеглУчета",         ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	Реквизиты.Вставить("ЭтоОтложенноеПроведение", ЭтоОтложенноеПроведение);
	ВедетсяУчетПрослеживаемыхТоваров = ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров")
		И ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(Реквизиты.Период);
	Реквизиты.Вставить("ВедетсяУчетПрослеживаемыхТоваров", ВедетсяУчетПрослеживаемыхТоваров И Реквизиты.ЕстьПрослеживаемыеОС);
	
	Если Реквизиты.ВалютаВзаиморасчетов = Реквизиты.ВалютаРеглУчета Тогда
		Реквизиты.Вставить("КурсДокумента", 1);
		Реквизиты.Вставить("КратностьДокумента", 1);
		КоэффициентРуб = 1;
	Иначе
		Реквизиты.Вставить("КурсДокумента", Реквизиты.КурсВзаиморасчетов);
		Реквизиты.Вставить("КратностьДокумента", Реквизиты.КратностьВзаиморасчетов);
		КоэффициентРуб = Реквизиты.КурсВзаиморасчетов / Реквизиты.КратностьВзаиморасчетов;
	КонецЕсли;
	
	Если Реквизиты.ВалютаВзаиморасчетов = Реквизиты.ВалютаДокумента Тогда
		Реквизиты.Вставить("КурсВзаиморасчетов", 1);
		Реквизиты.Вставить("КратностьВзаиморасчетов", 1);
		КоэффициентВзаиморасчетов = 1;
	Иначе
		КоэффициентВзаиморасчетов = (Реквизиты.КурсВзаиморасчетов / Реквизиты.КратностьВзаиморасчетов) / КоэффициентРуб;
	КонецЕсли;

	Запрос.УстановитьПараметр("СинонимОС",                     НСтр("ru='Основные средства'"));
	Запрос.УстановитьПараметр("КоэффициентВзаиморасчетов",     КоэффициентВзаиморасчетов);
	Запрос.УстановитьПараметр("КоэффициентРуб",                КоэффициентРуб);
	Запрос.УстановитьПараметр("ВалютаРеглУчета",               Реквизиты.ВалютаРеглУчета);
	Запрос.УстановитьПараметр("ОрганизацияПрименяетУСН",       Реквизиты.ОрганизацияПрименяетУСН);
	Запрос.УстановитьПараметр("ОрганизацияПрименяетУСНПатент", УчетнаяПолитика.ПрименяетсяУСНПатент(Реквизиты.Организация, Реквизиты.Период));
	
	Запрос.УстановитьПараметр("ВестиУчетПоВидамДеятельностиИП",	УчетнаяПолитика.ВестиУчетПоВидамДеятельностиИП(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("ОсновнаяНоменклатурнаяГруппа",	УчетнаяПолитика.ОсновнаяНоменклатурнаяГруппа(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("C2013Года",	                    Реквизиты.Период >= Дата('20130101'));
	Запрос.УстановитьПараметр("ОтражатьВНалоговомУчете",        УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("ЭтоОтложенноеПроведение",        ЭтоОтложенноеПроведение);
	Запрос.УстановитьПараметр("МоментСписания",                 Новый МоментВремени(Реквизиты.Период, ДокументСсылка));
	Запрос.УстановитьПараметр("Организация",                    Реквизиты.Организация);
	
	Запрос.УстановитьПараметр("СодержаниеПроводокГрупповыеОС", 
		НСтр("ru='Передача ОС'", ОбщегоНазначения.КодОсновногоЯзыка()));
		
		ПрименяетсяОсвобождениеОтУплатыНДС = УчетнаяПолитика.ПрименяетсяОсвобождениеОтУплатыНДС(
		Реквизиты.Организация, Реквизиты.Период);
	// В декларацию НДС попадают операции с прослеживаемым товаром с НДС, 
	// а также документы без НДС, в случае освобождения от уплаты НДС.
	Запрос.УстановитьПараметр("ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС",
		Реквизиты.ЕстьНДС ИЛИ ПрименяетсяОсвобождениеОтУплатыНДС);

	
	ПодготовитьТаблицыДокументаДляЦелейПриобретенияРеализации(Запрос, Реквизиты);

	НомераТаблиц = Новый Структура;

	Запрос.Текст = ТекстЗапросаТаблицаОС(НомераТаблиц)
		+ ТекстЗапросаЗачетАвансов(НомераТаблиц)
		+ ТекстЗапросаРеализация(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаРеализацияНДС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаВыбытиеОС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаСобытияОС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаСостоянияОС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаСписаниеОстаточнойСтоимости(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаВосстановлениеАмортизационнойПремии(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПереоценкаВалютныхОстатков(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПроверкиПоОС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаСписаниеОСиНМАИП(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаРублевыеСуммыДокументовВВалюте(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаРегистрацияОтложенныхРасчетовСКонтрагентами(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПрослеживаемыеТовары(НомераТаблиц, ПараметрыПроведения, Реквизиты)
		+ ТекстЗапросаПередачаГрупповыхОС(НомераТаблиц)
		+ ТекстЗапросаЗатратыНаРемонтОС(НомераТаблиц);

	Результат = Запрос.ВыполнитьПакет();

	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;

КонецФункции

Процедура ДобавитьКолонкуСодержание(ТаблицаЗначений) Экспорт
	
	Если ТаблицаЗначений = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТаблицаЗначений.Колонки.Найти("Содержание") = Неопределено Тогда
		ТаблицаЗначений.Колонки.Добавить("Содержание", ОбщегоНазначения.ОписаниеТипаСтрока(150));
	КонецЕсли;
	
	ТаблицаЗначений.ЗаполнитьЗначения("Реализация основных средств", "Содержание");
	
КонецПроцедуры

Процедура ПодготовитьТаблицуСобственныеТоварыИУслугиДляУчетаДоходов(Реквизиты, ТаблицаСобственныеТоварыИУслуги) Экспорт
	
	Если Реквизиты <> Неопределено И ТаблицаСобственныеТоварыИуслуги <> Неопределено Тогда
		
		Если Реквизиты[0].ПравоСобственностиПереходитПослеГосРегистрации Тогда
			ТаблицаСобственныеТоварыИУслуги.ЗаполнитьЗначения(0, "СуммаБУ, СуммаНДСРуб");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Акт о приеме-передаче ОС (ОС-1)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ОС1";
	КомандаПечати.Представление = НСтр("ru = 'Акт о приеме-передаче ОС (ОС-1)'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Счет-фактура
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиСчетовФактур";
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(КомандаПечати, "ЭтоУниверсальныйДокумент", Ложь);
	
	// Справка-расчет "Рублевые суммы документа в валюте"
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьРублевыхСуммДокументовВВалюте";
	КомандаПечати.Идентификатор = "РублевыеСуммыДокументаВВалюте";
	КомандаПечати.Представление = НСтр("ru = 'Справка-расчет ""Рублевые суммы документа в валюте""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.ФункциональныеОпции = "ИспользоватьВалютныйУчет";
	
	// Универсальный передаточный документ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "УниверсальныйПередаточныйДокумент";
	КомандаПечати.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД)'");
	КомандаПечати.Обработчик    = "УчетНДСКлиент.ВыполнитьКомандуПечатиУниверсальныхПередаточныхДокументов";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Передача ОС""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	// Проверяем, нужно ли для макета СчетЗаказа формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОС1") Тогда

		ИмяМакета = "";
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ОС1", НСтр("ru = 'ОС-1 (Акт о приеме-передаче ОС)'"),
			ПечатьОС1(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ИмяМакета), , ИмяМакета);

	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	

КонецПроцедуры

Функция ТекстЗапросаДанныеДляПечатиСчетовФактур(НомераТаблиц, ЕстьПрослеживаемыеОС = Ложь) Экспорт

	НомераТаблиц.Вставить("Реквизиты",                         НомераТаблиц.Количество());
	Если ЕстьПрослеживаемыеОС Тогда
		НомераТаблиц.Вставить("ТаблицаОС",                         НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВременнаяТаблицаДокумента",         НомераТаблиц.Количество());
		НомераТаблиц.Вставить("СведенияОПрослеживаемости",         НомераТаблиц.Количество());
	Иначе
		НомераТаблиц.Вставить("ВТ_РублевыеСуммыДокументовВВалюте", НомераТаблиц.Количество());
		НомераТаблиц.Вставить("ВременнаяТаблицаДокумента",         НомераТаблиц.Количество());
	КонецЕсли;

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК ДатаОснования,
	|	Реквизиты.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Склад,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации.ЦифровойИндексОбособленногоПодразделения
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|					ТОГДА Реквизиты.Организация.ЦифровойИндексОбособленногоПодразделения
	|				ИНАЧЕ """"
	|			КОНЕЦ
	|	КОНЕЦ КАК ЦифровойИндексОбособленногоПодразделения,
	|	ВЫБОР
	|		КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК Поставщик,
	|	ВЫБОР
	|		КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Организация.ГоловнаяОрганизация.ИНН
	|		ИНАЧЕ Реквизиты.Организация.ИНН
	|	КОНЕЦ КАК ИННпоставщика,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации
	|		ИНАЧЕ Реквизиты.Организация
	|	КОНЕЦ КАК ОбособленноеПодразделениеПоставщика,
	|	ВЫБОР
	|		КОГДА Реквизиты.Грузоотправитель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Реквизиты.Грузоотправитель
	|		КОГДА Реквизиты.ПодразделениеОрганизации.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.ПодразделениеОрганизации
	|		КОГДА Реквизиты.Организация.ОбособленноеПодразделение
	|			ТОГДА Реквизиты.Организация
	|		ИНАЧЕ ""он же""
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВЫБОР
	|		КОГДА Реквизиты.Контрагент.ОбособленноеПодразделение
	|				И Реквизиты.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Покупатель,
	|	Реквизиты.Контрагент.ИНН КАК ИННпокупателя,
	|	ВЫБОР
	|		КОГДА Реквизиты.Грузополучатель.ОбособленноеПодразделение
	|				И Реквизиты.Грузополучатель.ГоловнойКонтрагент = Реквизиты.Контрагент
	|				И Реквизиты.Грузополучатель.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА Реквизиты.Грузополучатель
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК ОбособленноеПодразделениеПокупателя,
	|	ВЫБОР
	|		КОГДА Реквизиты.Грузополучатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Реквизиты.Грузополучатель
	|		ИНАЧЕ Реквизиты.Контрагент
	|	КОНЕЦ КАК Грузополучатель,
	|	Реквизиты.ВалютаДокумента КАК Валюта,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.ДоговорКонтрагента.Представление КАК Основание,
	|	Реквизиты.ДоговорКонтрагента.Дата КАК ОснованиеДата,
	|	Реквизиты.ДоговорКонтрагента.Номер КАК ОснованиеНомер,
	|	НЕОПРЕДЕЛЕНО КАК Исполнитель,
	|	НЕОПРЕДЕЛЕНО КАК ИсполнительНаОсновании,
	|	НЕОПРЕДЕЛЕНО КАК ОтпускПроизвел,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьНомер,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьДата,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьВыдана,
	|	НЕОПРЕДЕЛЕНО КАК ДоверенностьЧерезКого,
	|	НЕОПРЕДЕЛЕНО КАК ЗаЗаказчикаНаОсновании,
	|	ИСТИНА КАК ЕстьТовары,
	|	"""" КАК АдресДоставки,
	|	"""" КАК СведенияОТранспортировкеИГрузе,
	|	НЕОПРЕДЕЛЕНО КАК ОтветственныйЗаОформление,
	|	"""" КАК СопроводительныеДокументы,
	|	НЕОПРЕДЕЛЕНО КАК Перевозчик,
	|	ЛОЖЬ КАК ПеревозкаАвтотранспортом
	|ИЗ
	|	Документ.ПередачаОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &ДокументОснование" + ОбщегоНазначения.РазделительПакетаЗапросов();

	Если Не ЕстьПрослеживаемыеОС Тогда
		ТекстЗапроса = ТекстЗапроса + "ВЫБРАТЬ
		|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
		|	РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
		|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК Всего,
		|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДС,
		|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДС
		|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
		|ИЗ
		|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
		|ГДЕ
		|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор = &ДокументОснование
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтрокиДокумента,
		|	ТабличнаяЧастьДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	1 КАК НомерТабЧасти,
		|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
		|	ТаблицаОС.ОсновноеСредство КАК Товар,
		|	ТаблицаОС.ОсновноеСредство.Код КАК ТоварКод,
		|	НЕОПРЕДЕЛЕНО КАК ТоварАртикул,
		|	ТаблицаОС.ОсновноеСредство.НаименованиеПолное КАК ТоварНаименование,
		|	"""" КАК СтранаПроисхождения,
		|	"""" КАК ПредставлениеСтраны,
		|	"""" КАК НомерГТД,
		|	"""" КАК ПредставлениеГТД,
		|	"""" КАК РегистрационныйНомерТД,
		|	ТаблицаОС.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаОС.Количество КАК Количество,
		|	ТаблицаОС.Цена КАК Цена,
		|	ТаблицаОС.Сумма КАК Сумма,
		|	ТаблицаОС.СуммаНДС КАК СуммаНДС,
		|	ТаблицаОС.СтавкаНДС КАК СтавкаНДС,
		|	ЛОЖЬ КАК ЭтоУслуга,
		|	ТаблицаОС.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
		|	ТаблицаОС.Ссылка КАК Ссылка,
		|	ЛОЖЬ КАК ЭтоКомиссия,
		|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0) КАК ВсегоРуб,
		|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0) КАК СуммаБезНДСРуб,
		|	ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0) КАК НДСРуб,
		|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК КонтрагентСводныйСФ,
		|	НЕОПРЕДЕЛЕНО КАК ПериодичностьУслуги,
		|	ВЫБОР
		|		КОГДА ТаблицаОС.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
		|			ТОГДА ТаблицаОС.КодТНВЭД
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
		|	КОНЕЦ КАК ТоварКодТНВЭД,
		|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
		|	0 КАК НалоговаяБазаНДС
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	Документ.ПередачаОС.ОС КАК ТаблицаОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
		|		ПО ТаблицаОС.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
		|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.ОС))
		|			И (ТаблицаОС.Ссылка.ВалютаДокумента <> &ВалютаРеглУчета)
		|ГДЕ
		|	ТаблицаОС.Ссылка = &ДокументОснование";

	Иначе
		ТекстЗапроса = ТекстЗапроса + "ВЫБРАТЬ
		|	Таблица.НомерСтроки КАК НомерСтроки,
		|	Таблица.Товар КАК Товар,
		|	Таблица.ТоварКод КАК ТоварКод,
		|	Таблица.ТоварНаименование КАК ТоварНаименование,
		|	Таблица.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	Таблица.Количество КАК Количество,
		|	Таблица.Цена КАК Цена,
		|	Таблица.Сумма КАК Сумма,
		|	Таблица.СуммаНДС КАК СуммаНДС,
		|	Таблица.СтавкаНДС КАК СтавкаНДС,
		|	Таблица.СуммаВключаетНДС КАК СуммаВключаетНДС,
		|	&ДокументОснование КАК Ссылка,
		|	Таблица.ТоварКодТНВЭД КАК ТоварКодТНВЭД,
		|	Таблица.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	Таблица.ОсновноеСредствоКодТНВЭД КАК ОсновноеСредствоКодТНВЭД,
		|	Таблица.СтранаПроисхождения КАК СтранаПроисхождения,
		|	Таблица.СтранаПроисхождения КАК СтранаПроисхожденияПредставление,
		|	Таблица.РНПТ КАК РНПТ,
		|	Таблица.СоставноеОС КАК СоставноеОС,
		|	Таблица.ВсегоРуб КАК ВсегоРуб,
		|	Таблица.НДСРуб КАК НДСРуб,
		|	Таблица.СуммаБезНДСРуб КАК СуммаБезНДСРуб
		|ПОМЕСТИТЬ ТаблицаОС
		|ИЗ
		|	&ТаблицаДокумента КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	1 КАК НомерТабЧасти,
		|	НЕОПРЕДЕЛЕНО КАК ТоварАртикул,
		|	"""" КАК НомерГТД,
		|	"""" КАК ПредставлениеГТД,
		|	"""" КАК РегистрационныйНомерТД,
		|	ТаблицаОС.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаОС.Количество КАК Количество,
		|	ТаблицаОС.Цена КАК Цена,
		|	ТаблицаОС.Сумма КАК Сумма,
		|	ТаблицаОС.СуммаНДС КАК СуммаНДС,
		|	ТаблицаОС.СтавкаНДС КАК СтавкаНДС,
		|	ЛОЖЬ КАК ЭтоУслуга,
		|	ЛОЖЬ КАК ЭтоКомиссия,
		|	ТаблицаОС.ВсегоРуб КАК ВсегоРуб,
		|	ТаблицаОС.СуммаБезНДСРуб КАК СуммаБезНДСРуб,
		|	ТаблицаОС.НДСРуб КАК НДСРуб,
		|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК КонтрагентСводныйСФ,
		|	НЕОПРЕДЕЛЕНО КАК ПериодичностьУслуги,
		|	ТаблицаОС.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ТаблицаОС.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ТаблицаОС.СтранаПроисхожденияПредставление КАК СтранаПроисхожденияПредставление,
		|	ТаблицаОС.Товар КАК Товар,
		|	ТаблицаОС.ТоварКод КАК ТоварКод,
		|	ТаблицаОС.ТоварНаименование КАК ТоварНаименование,
		|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
		|	ТаблицаОС.Ссылка КАК Ссылка,
		|	ТаблицаОС.ТоварКодТНВЭД КАК ТоварКодТНВЭД,
		|	ТаблицаОС.СоставноеОС КАК СоставноеОС,
		|	ТаблицаОС.РНПТ КАК РНПТ,
		|	ТаблицаОС.ОсновноеСредствоКодТНВЭД КАК ОсновноеСредствоКодТНВЭД,
		|	ТаблицаОС.СуммаВключаетНДС КАК СуммаВключаетНДС,
		|	0 КАК НалоговаяБазаНДС
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	ТаблицаОС КАК ТаблицаОС
		|{УПОРЯДОЧИТЬ ПО
		|	НомерСтроки}
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПередачаОССведенияПрослеживаемости.РНПТ.Код КАК НомерТовара,
		|	ПередачаОССведенияПрослеживаемости.Количество КАК КоличествоУчетное,
		|	ПередачаОССведенияПрослеживаемости.КоличествоПрослеживаемости КАК Количество,
		|	ЕСТЬNULL(КлассификаторТНВЭД.ЕдиницаИзмерения.Наименование, """") КАК ЕдиницаИзмеренияПрослеживаемостиНаименование,
		|	ЕСТЬNULL(КлассификаторТНВЭД.ЕдиницаИзмерения.Код, """") КАК ЕдиницаИзмеренияПрослеживаемостиКод,
		|	ТаблицаДокумента.НомерГТД КАК НомерГТД,
		|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
		|	ТаблицаДокумента.КонтрагентСводныйСФ КАК КонтрагентСводныйСФ,
		|	ТаблицаДокумента.НомерТабЧасти КАК НомерТабЧасти,
		|	ТаблицаДокумента.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ТаблицаДокумента.Ссылка КАК Ссылка,
		|	ТаблицаДокумента.ТоварКодТНВЭД КАК ТоварКодТНВЭД,
		|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
		|	ТаблицаДокумента.Товар КАК Товар,
		|	ТаблицаДокумента.Цена КАК Цена,
		|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ТаблицаДокумента.Сумма КАК СтоимостьБезНалога
		|ИЗ
		|	Документ.ПередачаОС.СведенияПрослеживаемости КАК ПередачаОССведенияПрослеживаемости
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДокумента КАК ТаблицаДокумента
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
		|			ПО ТаблицаДокумента.ОсновноеСредствоКодТНВЭД = КлассификаторТНВЭД.Ссылка
		|		ПО (ТаблицаДокумента.ИдентификаторСтроки = ПередачаОССведенияПрослеживаемости.ИдентификаторСтроки)
		|			И ПередачаОССведенияПрослеживаемости.Ссылка = ТаблицаДокумента.Ссылка
		|			И (ВЫБОР
		|				КОГДА ТаблицаДокумента.СоставноеОС
		|					ТОГДА ПередачаОССведенияПрослеживаемости.Номенклатура = ТаблицаДокумента.Товар
		|							И ТаблицаДокумента.СтранаПроисхождения = ПередачаОССведенияПрослеживаемости.СтранаПроисхождения
		|							И ТаблицаДокумента.РНПТ = ПередачаОССведенияПрослеживаемости.РНПТ
		|				ИНАЧЕ ИСТИНА
		|			КОНЕЦ)";
		
	КонецЕсли;
	// Заменим обращение к реквизитам договора через переопределяемые функции.
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах",
								БухгалтерскийУчетПереопределяемый.ТекстЗапросаРасчетыВУЕ("Реквизиты.ДоговорКонтрагента"));
								
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ПодготовитьТекстЗапросаДляПечатиСправкиРасчетаРублевыеСуммыДокументовВВалюте(НомераТаблиц) Экспорт
	
	НомераТаблиц.Вставить("ВТ_ТаблицаПоШапкеДокумента",                                НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаРеквизитов",                                         НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РегистрСведенийРублевыеСуммыДокументовВВалюте",             НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВТ_ПоДокументамЗачетнныхАвансов",                           НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаПредоплат",                                          НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ВТ_ПоДокументамЗачетнныхАвансов",               НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_ВТ_ТаблицаПоШапкеДокумента",                    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаСумм",                                               НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Уничтожение_РегистрСведенийРублевыеСуммыДокументовВВалюте", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеОбрабатываемогоДокумента.Ссылка КАК Ссылка,
	|	ДанныеОбрабатываемогоДокумента.Дата КАК Дата,
	|	ДанныеОбрабатываемогоДокумента.Проведен КАК Проведен,
	|	ДанныеОбрабатываемогоДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ДанныеОбрабатываемогоДокумента.Организация КАК Организация,
	|	ДанныеОбрабатываемогоДокумента.Контрагент КАК Контрагент,
	|	ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДанныеОбрабатываемогоДокумента.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	ДанныеОбрабатываемогоДокумента.СчетУчетаРасчетовПоАвансам КАК СчетУчетаРасчетовПоАвансам,
	|	ДанныеОбрабатываемогоДокумента.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	ДанныеОбрабатываемогоДокумента.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	"""" КАК НомерВходящегоДокумента,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаВходящегоДокумента,
	|	ЕСТЬNULL(ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	ЕСТЬNULL(ДанныеОбрабатываемогоДокумента.ДоговорКонтрагента.УчетАгентскогоНДС, ЛОЖЬ) КАК УчетАгентскогоНДС,
	|	ДанныеОбрабатываемогоДокумента.СуммаВключаетНДС КАК СуммаВключаетНДС
	|ПОМЕСТИТЬ ВТ_ТаблицаПоШапкеДокумента
	|ИЗ
	|	Документ.ПередачаОС КАК ДанныеОбрабатываемогоДокумента
	|ГДЕ
	|	ДанныеОбрабатываемогоДокумента.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаПоШапкеДокумента.Ссылка КАК Ссылка,
	|	ВТ_ТаблицаПоШапкеДокумента.Дата КАК Дата,
	|	ВТ_ТаблицаПоШапкеДокумента.Проведен КАК Проведен,
	|	ВТ_ТаблицаПоШапкеДокумента.ВалютаДокумента КАК ВалютаДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.Организация,
	|	ВТ_ТаблицаПоШапкеДокумента.Контрагент,
	|	ВТ_ТаблицаПоШапкеДокумента.ДоговорКонтрагента,
	|	ВТ_ТаблицаПоШапкеДокумента.КурсВзаиморасчетов,
	|	ВТ_ТаблицаПоШапкеДокумента.КратностьВзаиморасчетов,
	|	ВТ_ТаблицаПоШапкеДокумента.НомерВходящегоДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.ДатаВходящегоДокумента,
	|	ВТ_ТаблицаПоШапкеДокумента.РасчетыВУсловныхЕдиницах,
	|	ВТ_ТаблицаПоШапкеДокумента.УчетАгентскогоНДС,
	|	ВТ_ТаблицаПоШапкеДокумента.СуммаВключаетНДС,
	|	0 КАК ВсегоВал,
	|	0 КАК НДСВал
	|ИЗ
	|	ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	РублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РублевыеСуммыДокументовВВалюте.Всего,
	|	РублевыеСуммыДокументовВВалюте.НДС,
	|	РублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РублевыеСуммыДокументовВВалюте
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|		ПО РублевыеСуммыДокументовВВалюте.Регистратор = ВТ_ТаблицаПоШапкеДокумента.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтрокиДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Регистратор КАК Ссылка,
	|	Хозрасчетный.Сумма КАК СуммаПредоплатыРуб,
	|	Хозрасчетный.ВалютнаяСуммаДт КАК СуммаПредоплатыВал,
	|	ХозрасчетныйСубконто.Значение КАК Документ,
	|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйСубконто.Значение) КАК ДокументПредоплатыПредставление,
	|	ВТ_ТаблицаПоШапкеДокумента.Организация КАК Организация
	|ПОМЕСТИТЬ ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаПоШапкеДокумента КАК ВТ_ТаблицаПоШапкеДокумента
	|		ПО Хозрасчетный.Регистратор = ВТ_ТаблицаПоШапкеДокумента.Ссылка
	|			И Хозрасчетный.СчетДт = ВТ_ТаблицаПоШапкеДокумента.СчетУчетаРасчетовПоАвансам
	|			И Хозрасчетный.СчетКт = ВТ_ТаблицаПоШапкеДокумента.СчетУчетаРасчетовСКонтрагентом
	|			И (ВТ_ТаблицаПоШапкеДокумента.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Ссылка КАК Ссылка,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.СуммаПредоплатыРуб КАК СуммаПредоплатыРуб,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.СуммаПредоплатыВал КАК СуммаПредоплатыВал,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Документ,
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.ДокументПредоплатыПредставление,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК НомерВходящегоДокумента,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаВходящегоДокумента
	|ИЗ
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента КАК ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Организация = ДанныеПервичныхДокументов.Организация
	|			И ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Документ = ДанныеПервичныхДокументов.Документ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента.Ссылка
	|ИТОГИ
	|	СУММА(СуммаПредоплатыРуб),
	|	СУММА(СуммаПредоплатыВал)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПоДокументамЗачетнныхАвансовДоПолученияНомераИДатыВходящегоДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ТаблицаПоШапкеДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаОСОС.Ссылка КАК Ссылка,
	|	ПередачаОСОС.НомерСтроки КАК НомерСтроки,
	|	ПередачаОСОС.ОсновноеСредство КАК Товар,
	|	ПередачаОСОС.ОсновноеСредство.Наименование КАК ТоварНаименование,
	|	ПередачаОСОС.Сумма КАК ВсегоВал,
	|	ПередачаОСОС.СуммаНДС КАК НДСВал,
	|	ПередачаОСОС.СтавкаНДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего КАК ВсегоРуб,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС КАК НДСРуб,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС КАК НалоговаяБазаНДСРуб
	|ИЗ
	|	Документ.ПередачаОС.ОС КАК ПередачаОСОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО ПередачаОСОС.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор
	|			И ПередачаОСОС.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента
	|ГДЕ
	|	ПередачаОСОС.Сумма <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ВсегоВал),
	|	СУММА(НДСВал),
	|	СУММА(ВсегоРуб),
	|	СУММА(НДСРуб),
	|	СУММА(НалоговаяБазаНДСРуб)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте";
	
	Возврат ТекстЗапроса;
	
КонецФункции	

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Контрагент");
	
	Возврат Результат;
	
КонецФункции

// Обработчик обновления 3.0.27.1
//
// Процедура заполняет реквизиты табличной части документа "ОС": Количество, Цена, ЕдиницаИзмерения
// в тех документах, в которых они не заполнены 
//
Процедура ЗаполнитьДобавленныеРеквизиты() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПередачаОСОС.Ссылка КАК Документ,
	|	ПередачаОСОС.НомерСтроки КАК НомерСтроки,
	|	ПередачаОСОС.ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ПередачаОСОС.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УстанавливатьЕдиницуИзмерения,
	|	ВЫБОР
	|		КОГДА ПередачаОСОС.Количество = 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УстанавливатьКоличество,
	|	ВЫБОР
	|		КОГДА ПередачаОСОС.Цена = 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УстанавливатьЦену
	|ИЗ
	|	Документ.ПередачаОС.ОС КАК ПередачаОСОС
	|ГДЕ
	|	(ПередачаОСОС.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка)
	|			ИЛИ ПередачаОСОС.Количество = 0
	|			ИЛИ ПередачаОСОС.Цена = 0)
	|	И ПередачаОСОС.Ссылка.ПометкаУдаления = ЛОЖЬ
	|ИТОГИ
	|	КОЛИЧЕСТВО(НомерСтроки)
	|ПО
	|	Документ";
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		
		ВыборкаДокументы = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ЕдиницаИзмеренияПоУмолчанию = Справочники.КлассификаторЕдиницИзмерения.ПолучитьЕдиницуИзмеренияПоУмолчанию();
		Пока ВыборкаДокументы.Следующий() Цикл
			
			ОбрабатываемыйДокумент = ВыборкаДокументы.Документ;
			
			ДокументОбъект = ОбрабатываемыйДокумент.ПолучитьОбъект();
			
			ВыборкаСтроки = ВыборкаДокументы.Выбрать();
			
			Пока ВыборкаСтроки.Следующий() Цикл
				
				СтрокаТабличнойЧасти = ДокументОбъект.ОС[ВыборкаСтроки.НомерСтроки - 1];
				
				Если ВыборкаСтроки.УстанавливатьЕдиницуИзмерения Тогда
					 СтрокаТабличнойЧасти.ЕдиницаИзмерения = ЕдиницаИзмеренияПоУмолчанию;
				КонецЕсли;
				
				Если ВыборкаСтроки.УстанавливатьКоличество Тогда
					СтрокаТабличнойЧасти.Количество = 1;
				КонецЕсли;
				
				Если ВыборкаСтроки.УстанавливатьЦену Тогда
					СтрокаТабличнойЧасти.Цена = СтрокаТабличнойЧасти.Сумма/СтрокаТабличнойЧасти.Количество;
				КонецЕсли;
				
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект, Истина);
			
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

Процедура ЗаполнитьСведенияПрослеживаемостиПриПереходеС20() Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПередачаОСОС.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПередачаОС.ОС КАК ПередачаОСОС
	|ГДЕ
	|	ПередачаОСОС.Ссылка.Дата >= &ДатаНачалаУчетаПрослеживаемости
	|	И ПередачаОСОС.УдалитьРНПТ <> ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("ДатаНачалаУчетаПрослеживаемости", ПрослеживаемостьБРУ.ДатаНачалаУчетаПрослеживаемыхТоваров());
	
	РезультатЗапроса = Запрос.Выполнить();;
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	// Если есть документы с РНПТ, то установим константу "ВестиУчетПрослеживаемыхТоваров".
	Если НЕ Константы.ВестиУчетПрослеживаемыхТоваров.Получить() Тогда
		Константы.ВестиУчетПрослеживаемыхТоваров.Установить(Истина);
	КонецЕсли;
	
	ВыборкаПоДокументам = РезультатЗапроса.Выбрать();
	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		ДокументОбъект = ВыборкаПоДокументам.Ссылка.ПолучитьОбъект();
		
		Если ДокументОбъект = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого СтрокаДокумента Из ДокументОбъект.ОС Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаДокумента.ИдентификаторСтроки) Тогда
				СтрокаДокумента.ИдентификаторСтроки = Новый УникальныйИдентификатор;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаДокумента.УдалитьРНПТ) Тогда
				СтрокаДокумента.ПрослеживаемыйТовар = Истина;
				СтрокаСведенийПрослеживаемости       = ДокументОбъект.СведенияПрослеживаемости.Добавить();
				СтрокаСведенийПрослеживаемости.ИдентификаторСтроки        = СтрокаДокумента.ИдентификаторСтроки;
				СтрокаСведенийПрослеживаемости.РНПТ                       = СтрокаДокумента.УдалитьРНПТ;
				СтрокаСведенийПрослеживаемости.СтранаПроисхождения        = СтрокаДокумента.УдалитьСтранаПроисхождения;
				СтрокаСведенийПрослеживаемости.Количество                 = СтрокаДокумента.Количество;
				СтрокаСведенийПрослеживаемости.КоличествоПрослеживаемости = СтрокаДокумента.Количество;
				СтрокаДокумента.УдалитьРНПТ = Неопределено;
				СтрокаДокумента.УдалитьСтранаПроисхождения = Неопределено;
			КонецЕсли;
		КонецЦикла;
				
		Попытка
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		Исключение
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось обработать документ: %1 по причине:
					|%2'"),
					ВыборкаПоДокументам.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Документы.РеализацияТоваровУслуг, ВыборкаПоДокументам.Ссылка, ТекстСообщения);
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПодготовитьТаблицыДокументаДляЦелейПриобретенияРеализации(Запрос, Реквизиты)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОсновныеСредства.Ссылка КАК Ссылка,
	|	ОсновныеСредства.НомерСтроки КАК НомерСтроки,
	|	ОсновныеСредства.ОсновноеСредство КАК ОсновноеСредство,
	|	ОсновныеСредства.ОсновноеСредство.ЕдиницаУчета КАК ЕдиницаУчета,
	|	ОсновныеСредства.Количество КАК Количество,
	|	ОсновныеСредства.Сумма КАК Сумма,
	|	ОсновныеСредства.СтавкаНДС КАК СтавкаНДС,
	|	ОсновныеСредства.СуммаНДС КАК НДС,
	|	ОсновныеСредства.СчетДоходов КАК СчетДоходов,
	|	ОсновныеСредства.СчетРасходов КАК СчетРасходов,
	|	ОсновныеСредства.Субконто КАК Субконто,
	|	ОсновныеСредства.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	ОсновныеСредства.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.ПередачаОС.ОС КАК ОсновныеСредства
	|ГДЕ
	|	ОсновныеСредства.Ссылка = &Ссылка";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ОсновныеСредства = РезультатЗапроса[0].Выгрузить();
	УчетВзаиморасчетов.ПодготовкаТаблицыЗначенийДляЦелейПриобретенияИРеализации(ОсновныеСредства, Реквизиты);
	Запрос.УстановитьПараметр("ОсновныеСредства",ОсновныеСредства);

КонецПроцедуры

Функция ТекстЗапросаТаблицаОС(НомераТаблиц)

	НомераТаблиц.Вставить("ОсновныеСредстваВременная", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаОС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ОсновныеСредства", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ГрупповыеОС", НомераТаблиц.Количество());
	
	ТекстЗапроса = "ВЫБРАТЬ
		|	ОсновныеСредства.Ссылка,
		|	ОсновныеСредства.ОсновноеСредство,
		|	ОсновныеСредства.ЕдиницаУчета,
		|	ОсновныеСредства.НомерСтроки,
		|	ОсновныеСредства.Количество КАК Количество,
		|	ОсновныеСредства.Сумма КАК СуммаРуб,
		|	ОсновныеСредства.НДС КАК СуммаНДСРуб,
		|	ОсновныеСредства.СуммаВал КАК СуммаВзаиморасчетов,
		|	ОсновныеСредства.НДСВал КАК СуммаНДСВзаиморасчетов,
		|	ОсновныеСредства.СчетДоходов,
		|	ОсновныеСредства.СчетРасходов,
		|	ОсновныеСредства.СчетУчетаНДСПоРеализации,
		|	ОсновныеСредства.Субконто,
		|	ОсновныеСредства.СтавкаНДС,
		|	ОсновныеСредства.ИдентификаторСтроки
		|ПОМЕСТИТЬ
		|	ОсновныеСредстваВременная
		|ИЗ
		|	&ОсновныеСредства КАК ОсновныеСредства
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеСредства.Ссылка КАК Регистратор,
		|	ОсновныеСредства.Ссылка.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|	""ОсновныеСредства"" КАК ИмяСписка,
		|	ОсновныеСредства.ОсновноеСредство КАК ОсновноеСредство,
		|	ОсновныеСредства.ЕдиницаУчета КАК ЕдиницаУчета,
		|	ОсновныеСредства.НомерСтроки КАК НомерСтроки,
		|	ОсновныеСредства.Количество КАК Количество,
		|	ОсновныеСредства.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
		|	ОсновныеСредства.СуммаНДСВзаиморасчетов КАК СуммаНДСВзаиморасчетов,
		|	ОсновныеСредства.СуммаРуб КАК СуммаРуб,
		|	ОсновныеСредства.СуммаРуб КАК СуммаБУ,
		|	ОсновныеСредства.СуммаРуб КАК СуммаНУ,
		|	ОсновныеСредства.СуммаНДСРуб КАК СуммаНДСРуб,
		|	ОсновныеСредства.СчетДоходов КАК СчетДоходов,
		|	ОсновныеСредства.СчетРасходов КАК СчетРасходов,
		|	ВЫБОР
		|		КОГДА ОсновныеСредства.СчетДоходов = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыручкаЕНВД)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ДоходЕНВД,
		|	ОсновныеСредства.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
		|	ОсновныеСредства.Субконто КАК Субконто,
		|	ОсновныеСредства.СтавкаНДС КАК СтавкаНДС,
		|	ОсновныеСредства.ИдентификаторСтроки
		|ПОМЕСТИТЬ
		|	ТаблицаОС
		|ИЗ
		|	ОсновныеСредстваВременная  КАК ОсновныеСредства 
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОС.Регистратор      КАК Регистратор,
		|	ТаблицаОС.НомерСтроки      КАК НомерСтроки,
		|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаОС.ЕдиницаУчета     КАК ЕдиницаУчета
		|ИЗ
		|	ТаблицаОС
		|ГДЕ
		|	ТаблицаОС.ЕдиницаУчета <> ЗНАЧЕНИЕ(Перечисление.ЕдиницыУчетаОС.ГрупповойОбъект)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОС.Регистратор КАК Регистратор,
		|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
		|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
		|	ТаблицаОС.СчетРасходов КАК СчетСписания,
		|	ТаблицаОС.Субконто КАК СубконтоСписания1,
		|	ТаблицаОС.Количество КАК Количество
		|ИЗ
		|	ТаблицаОС
		|ГДЕ
		|	ТаблицаОС.ЕдиницаУчета = ЗНАЧЕНИЕ(Перечисление.ЕдиницыУчетаОС.ГрупповойОбъект)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаВыбытиеОС(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если Реквизиты.ЭтоОтложенноеПроведение Тогда
		ПараметрыПроведения.Вставить("ВыбытиеОС", Неопределено);
		ПараметрыПроведения.Вставить("ВыбытиеОСТаблица", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ВыбытиеОС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВыбытиеОСТаблица", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Номер КАК Номер,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ДокументОснование КАК ДокументОснование,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	""ОС"" КАК ИмяСписка,
	|	Реквизиты.СобытиеОС КАК СобытиеОС,
	|	""Передача ОС"" КАК Содержание,
	|	ЛОЖЬ КАК СписыватьТолькоЛинейныйНУ
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.Регистратор КАК Регистратор,
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.ЕдиницаУчета КАК ЕдиницаУчета
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Регистратор.ДокПодготовкаКПередачеОС = ЗНАЧЕНИЕ(Документ.ПодготовкаКПередачеОС.ПустаяСсылка)
	|	И ТаблицаОС.ЕдиницаУчета <> ЗНАЧЕНИЕ(Перечисление.ЕдиницыУчетаОС.ГрупповойОбъект)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаСостоянияОС(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение Тогда
		ПараметрыПроведения.Вставить("СостоянияОС", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("СостоянияОС", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Номер,
	|	Реквизиты.Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета) КАК СостояниеОС,
	|	""ОС"" КАК ИмяСписка
	|ИЗ
	|	Реквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаЗачетАвансов(НомераТаблиц)

	НомераТаблиц.Вставить("ЗачетАвансов", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовТаблицаДокумента", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗачетАвансовТаблицаАвансов", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	НЕОПРЕДЕЛЕНО КАК ВидОперации,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.СпособЗачетаАвансов КАК СпособЗачетаАвансов,
	|	&ОрганизацияПрименяетУСН КАК УчитыватьЗадолженностьУСН,
	|	&ОрганизацияПрименяетУСНПатент КАК УчитыватьЗадолженностьУСНПатент,
	|	ЛОЖЬ КАК ДеятельностьНаТорговомСборе,
	|	ЛОЖЬ КАК ДеятельностьНаПатенте,
	|	""Выбытие"" КАК НаправлениеДвижения,
	|	ЛОЖЬ КАК ЭтоВозврат
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК ДокументРасчетов,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК СчетРасчетов,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам КАК СчетАвансов,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.ВидДоговора КАК ВидДоговора,
	|	ТаблицаОС.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.УчетАгентскогоНДС КАК УчетАгентскогоНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаОС.ВалютаВзаиморасчетов = &ВалютаРеглУчета
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК РасчетыВВалюте,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	СУММА(ТаблицаОС.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	|	СУММА(ТаблицаОС.СуммаРуб) КАК СуммаРуб,
	|	0 КАК СуммаВзаиморасчетовКомитента,
	|	0 КАК СуммаВзаиморасчетовЕНВД,
	|	0 КАК СуммаВзаиморасчетовПатент,
	|	0 КАК СуммаВзаиморасчетовТорговыйСбор
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Реквизиты.ПравоСобственностиПереходитПослеГосРегистрации = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	Реквизиты.Ссылка,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.СчетУчетаРасчетовПоАвансам,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВидДоговора,
	|	ТаблицаОС.ВалютаВзаиморасчетов,
	|	Реквизиты.РасчетыВУсловныхЕдиницах,
	|	Реквизиты.УчетАгентскогоНДС,
	|	Реквизиты.ПодразделениеОрганизации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаЗачетАвансов.НомерСтроки,
	|	ТаблицаЗачетАвансов.Ссылка.СчетУчетаРасчетовПоАвансам КАК СчетАвансов,
	|	ТаблицаЗачетАвансов.Ссылка.Контрагент,
	|	ТаблицаЗачетАвансов.Ссылка.ДоговорКонтрагента,
	|	ТаблицаЗачетАвансов.ДокументАванса,
	|	ТаблицаЗачетАвансов.СуммаЗачета
	|ИЗ
	|	Документ.ПередачаОС.ЗачетАвансов КАК ТаблицаЗачетАвансов
	|ГДЕ
	|	ТаблицаЗачетАвансов.Ссылка = &Ссылка
	|	И ТаблицаЗачетАвансов.Ссылка.СпособЗачетаАвансов = ЗНАЧЕНИЕ(Перечисление.СпособыЗачетаАвансов.ПоДокументу)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаЗачетАвансов.НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаСписаниеОстаточнойСтоимости(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение Тогда
		ПараметрыПроведения.Вставить("СписаниеОстаточнойСтоимости", Неопределено);
		ПараметрыПроведения.Вставить("СписаниеОстаточнойСтоимостиТаблица", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("СписаниеОстаточнойСтоимости", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СписаниеОстаточнойСтоимостиТаблица", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Номер КАК Номер,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	""ОС"" КАК ИмяСписка,
	|	Реквизиты.СобытиеОС КАК СобытиеОС,
	|	""Передача ОС"" КАК Содержание,
	|	ЛОЖЬ КАК СписыватьТолькоЛинейныйНУ
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.Регистратор КАК Регистратор,
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПравоСобственностиПереходитПослеГосРегистрации
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПереданныеОбъектыНедвижимости)
	|		ИНАЧЕ ТаблицаОС.СчетРасходов
	|	КОНЕЦ КАК СчетСписания,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПравоСобственностиПереходитПослеГосРегистрации
	|			ТОГДА Реквизиты.Контрагент
	|		ИНАЧЕ ТаблицаОС.Субконто
	|	КОНЕЦ КАК Субконто,
	|	ВЫБОР
	|		КОГДА НЕ Реквизиты.ПравоСобственностиПереходитПослеГосРегистрации
	|				ИЛИ &C2013Года
	|			ТОГДА ТаблицаОС.СчетРасходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПереданныеОбъектыНедвижимости)
	|	КОНЕЦ КАК СчетСписанияНУ,
	|	ВЫБОР
	|		КОГДА НЕ Реквизиты.ПравоСобственностиПереходитПослеГосРегистрации
	|				ИЛИ &C2013года
	|			ТОГДА ТаблицаОС.Субконто
	|		ИНАЧЕ ТаблицаОС.Регистратор.Контрагент
	|	КОНЕЦ КАК СубконтоНУ
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТаблицаОС.ЕдиницаУчета <> ЗНАЧЕНИЕ(Перечисление.ЕдиницыУчетаОС.ГрупповойОбъект)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаРеализация(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение Тогда
		ПараметрыПроведения.Вставить("Реализация", Неопределено);
		ПараметрыПроведения.Вставить("РеализацияТаблица", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("Реализация", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("РеализацияТаблица", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	""Передача ОС"" КАК Содержание,
	|	Реквизиты.ПравоСобственностиПереходитПослеГосРегистрации КАК ПравоСобственностиПереходитПослеГосРегистрации
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ОС"" КАК ИмяСписка,
	|	ТаблицаОС.Регистратор КАК Регистратор,
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК Номенклатура,
	|	0 КАК Количество,
	|	ТаблицаОС.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТаблицаОС.СуммаРуб КАК СуммаРуб,
	|	ТаблицаОС.СуммаНДСРуб КАК СуммаНДСРуб,
	|	ТаблицаОС.СуммаРуб КАК СуммаБУ,
	|	ВЫБОР
	|		КОГДА Реквизиты.ПравоСобственностиПереходитПослеГосРегистрации
	|				И &C2013года
	|				И &ОтражатьВНалоговомУчете
	|			ТОГДА ТаблицаОС.СуммаРуб - ТаблицаОС.СуммаНДСРуб
	|		ИНАЧЕ ТаблицаОС.СуммаРуб
	|	КОНЕЦ КАК СуммаНУ,
	|	НЕОПРЕДЕЛЕНО КАК СчетУчета,
	|	ТаблицаОС.СчетДоходов КАК СчетДоходов,
	|	ТаблицаОС.Субконто КАК Субконто,
	|	ТаблицаОС.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаОС.СчетУчетаНДСПоРеализации КАК СчетУчетаНДСПоРеализации,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом КАК КорСчет,
	|	Реквизиты.Контрагент КАК КорСубконто1,
	|	Реквизиты.ДоговорКонтрагента КАК КорСубконто2,
	|	Реквизиты.Ссылка КАК КорСубконто3,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты) КАК ВидКорСубконто1,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры) КАК ВидКорСубконто2,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами) КАК ВидКорСубконто3,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.Контрагент КАК Покупатель,
	|	ТаблицаОС.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ЛОЖЬ КАК ЭтоКомиссия,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	ВЫБОР
	|		КОГДА Реквизиты.Период >= ДАТАВРЕМЯ(2016, 7, 1)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоНесырьевойТовар,
	|	НЕОПРЕДЕЛЕНО КАК Комитент,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКомиссии,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРасчетовСКомитентом,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК ДатаРеализации,
	|	НЕОПРЕДЕЛЕНО КАК СчетРасчетовСКомитентом,
	|	НЕОПРЕДЕЛЕНО КАК СчетАвансовСКомитентом,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаРасчетовСКомитентом,
	|	0 КАК СуммаРасчетовСКомитентом,
	|	0 КАК СуммаПоступленияОтКомитента,
	|	ЗНАЧЕНИЕ(Справочник.КодыОперацийРаздела7ДекларацииПоНДС.ПустаяСсылка) КАК КодРаздел7ДекларацииНДС,
	|	ЛОЖЬ КАК КодСоответствуетСт149НКРФ,
	|	ЛОЖЬ КАК КодВключаетсяВРеестр,
	|	ЛОЖЬ КАК УслугиЗаРубежом,
	|	ТаблицаОС.ИдентификаторСтроки КАК ИдентификаторСтроки
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	(НЕ Реквизиты.ПравоСобственностиПереходитПослеГосРегистрации
	|			ИЛИ &C2013года
	|				И &ОтражатьВНалоговомУчете)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	// Заменим обращение к реквизитам договора через переопределяемые функции.
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах",
								БухгалтерскийУчетПереопределяемый.ТекстЗапросаРасчетыВУЕ("Реквизиты.ДоговорКонтрагента"));

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаРеализацияНДС(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение Тогда
		ПараметрыПроведения.Вставить("РеализацияНДС", Неопределено);
		ПараметрыПроведения.Вставить("НДСТоварыОтгрузка", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("РеализацияНДС", НомераТаблиц.Количество());
	// Передача недвижимости без перехода права собственности
	НомераТаблиц.Вставить("НДСТоварыОтгрузка", НомераТаблиц.Количество());
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	ЛОЖЬ КАК ДеятельностьНаПатенте,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	""Передача ОС"" КАК Содержание,
	|	Реквизиты.ПравоСобственностиПереходитПослеГосРегистрации КАК ПравоСобственностиПереходитПослеГосРегистрации,
	|	Реквизиты.ДоговорКонтрагента.КодРаздел7ДекларацииНДС КАК КодОперацииПоСделке,
	|	ЛОЖЬ КАК НДСИсчисляетсяНалоговымАгентом,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ОС"" КАК ИмяСписка,
	|	&СинонимОС КАК СинонимСписка,
	|	""Передача ОС"" КАК Содержание,
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОС.НомерСтроки КАК НомерСтрокиДокумента,
	|	ТаблицаОС.ОсновноеСредство КАК Номенклатура,
	|	ТаблицаОС.СтавкаНДС КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетУчета,
	|	"""" КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка) КАК СтранаПроисхождения,
	|	0 КАК Количество,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	ВЫБОР
	|		КОГДА Реквизиты.Период >= ДАТАВРЕМЯ(2016, 7, 1)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоНесырьевойТовар,
	|	ТаблицаОС.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТаблицаОС.СуммаРуб КАК СуммаБУ,
	|	ТаблицаОС.СуммаРуб КАК СуммаРуб,
	|	ТаблицаОС.СуммаРуб - ТаблицаОС.СуммаНДСРуб КАК СуммаБезНДСРуб,
	|	ТаблицаОС.СуммаНДСРуб КАК СуммаНДСРуб,
	|	НЕОПРЕДЕЛЕНО КАК СчетДоходов,
	|	НЕОПРЕДЕЛЕНО КАК Субконто,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСНачисленныйПоОтгрузке) КАК СчетУчетаНДСПоРеализации,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	ТаблицаОС.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.КодыОперацийРаздела7ДекларацииПоНДС.ПустаяСсылка) КАК КодРаздел7ДекларацииНДС,
	|	ЛОЖЬ КАК КодСоответствуетСт149НКРФ,
	|	ЛОЖЬ КАК КодВключаетсяВРеестр,
	|	ЛОЖЬ КАК УслугиЗаРубежом
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Реквизиты.ПравоСобственностиПереходитПослеГосРегистрации = ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиДокумента";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаСобытияОС(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение Тогда
		ПараметрыПроведения.Вставить("СобытияОС", Неопределено);
		ПараметрыПроведения.Вставить("СобытияОСТаблица", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("СобытияОС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СобытияОСТаблица", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Номер,
	|	Реквизиты.Организация,
	|	Реквизиты.СобытиеОС КАК СобытиеОС
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.Регистратор КАК Регистратор,
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	0 КАК СуммаЗатратБУ,
	|	0 КАК СуммаЗатратНУ,
	|	0 КАК СуммаЗатратУСН
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Регистратор.ДокПодготовкаКПередачеОС <> ЗНАЧЕНИЕ(Документ.ПодготовкаКПередачеОС.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаВосстановлениеАмортизационнойПремии(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение Тогда
		ПараметрыПроведения.Вставить("ВосстановлениеАмортизационнойПремии", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ВосстановлениеАмортизационнойПремии", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.СчетУчетаРасчетовСКонтрагентом,
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.СтатьяДляВосстановленияАмортизационнойПремии,
	|	Реквизиты.ВосстановитьАмортизационнуюПремию
	|ИЗ
	|	Реквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаПереоценкаВалютныхОстатков(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение Тогда
		ПараметрыПроведения.Вставить("ПереоценкаВалютныхОстатков", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ПереоценкаВалютныхОстатков", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ВалютаДокумента
	|ИЗ
	|	Реквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаПроверкиПоОС(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение Тогда
		ПараметрыПроведения.Вставить("ПроверкиПоОС", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ПроверкиПоОС", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ПодразделениеОрганизации,
	|	""ОС"" КАК ИмяСписка,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК МОЛ
	|ИЗ
	|	Реквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаРублевыеСуммыДокументовВВалюте(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение Тогда
		ПараметрыПроведения.Вставить("РублевыеСуммыДокументовВВалюте", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("РублевыеСуммыДокументовВВалюте", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	""ОС"" КАК ИмяСписка,
	|	ТаблицаОС.Регистратор КАК Регистратор,
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОС.СуммаРуб КАК СуммаБУ,
	|	ТаблицаОС.СуммаНДСРуб,
	|	ТаблицаОС.СуммаРуб - ТаблицаОС.СуммаНДСРуб КАК СуммаБезНДСРуб
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции	

Функция ТекстЗапросаСписаниеОСиНМАИП(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ЭтоОтложенноеПроведение Тогда
		ПараметрыПроведения.Вставить("СписаниеОСиНМАИПРеквизиты", Неопределено);
		ПараметрыПроведения.Вставить("СписаниеОСиНМАИПТаблица", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("СписаниеОСиНМАИПРеквизиты",	НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СписаниеОСиНМАИПТаблица",	НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация,
	|	""ПередачаОС"" КАК ВидОперации
	|ИЗ
	|	Реквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	""ОС"" КАК ИмяСписка,
	|	&СинонимОС КАК СинонимСписка,
	|	ТаблицаОС.НомерСтроки,
	|	ВЫБОР
	|		КОГДА НЕ &ВестиУчетПоВидамДеятельностиИП
	|			ТОГДА &ОсновнаяНоменклатурнаяГруппа
	|		КОГДА ТаблицаОС.Субконто ССЫЛКА Справочник.НоменклатурныеГруппы
	|			ТОГДА ТаблицаОС.Субконто
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НоменклатурнаяГруппа,
	|	ТаблицаОС.ОсновноеСредство КАК Номенклатура,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОсновныеСредства) КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА ТаблицаОС.Субконто ССЫЛКА Справочник.СтатьиЗатрат
	|				ИЛИ ТаблицаОС.Субконто ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|				ИЛИ ТаблицаОС.Субконто ССЫЛКА Справочник.РасходыБудущихПериодов
	|			ТОГДА ТаблицаОС.Субконто
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА ТаблицаОС.Субконто ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаОС.Субконто КАК Справочник.СтатьиЗатрат).ВидРасходовНУ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидРасходовНУ,
	|	ВЫБОР
	|		КОГДА ТаблицаОС.Субконто ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаОС.Субконто КАК Справочник.ПрочиеДоходыИРасходы).ПринятиеКналоговомуУчету
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПринятиеКналоговомуУчету,
	|	ВЫБОР
	|		КОГДА ТаблицаОС.Субконто ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаОС.Субконто КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат
	|		КОГДА ТаблицаОС.Субконто ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаОС.Субконто КАК Справочник.ПрочиеДоходыИРасходы).ВидДеятельностиДляНалоговогоУчетаЗатрат
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидДеятельностиДляНалоговогоУчетаЗатрат,
	|	ТаблицаОС.СчетДоходов КАК СчетДоходов,
	|	ТаблицаОС.СуммаРуб КАК Выручка,
	|	ТаблицаОС.СуммаНДСРуб КАК НДСНачисленный
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаПрослеживаемыеТовары(НомераТаблиц, ПараметрыПроведения, Реквизиты)
	
	Если НЕ Реквизиты.ВедетсяУчетПрослеживаемыхТоваров Тогда
		ПараметрыПроведения.Вставить("ПрослеживаемыеОперации", Неопределено);
		ПараметрыПроведения.Вставить("ПрослеживаемыеТовары", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ВТ_Прослеживаемость",    НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПрослеживаемыеОперации", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ПрослеживаемыеТовары",   НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство КАК ОС,
	|	ПередачаОССведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	СУММА(ПередачаОССведенияПрослеживаемости.Количество) КАК Количество,
	|	СУММА(ПередачаОССведенияПрослеживаемости.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	ПередачаОССведенияПрослеживаемости.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПередачаОССведенияПрослеживаемости.Номенклатура КАК Комплектующие,
	|	ВЫБОР
	|		КОГДА ПередачаОССведенияПрослеживаемости.Сумма = 0
	|			ТОГДА ВЫБОР
	|					КОГДА ПередачаОС.СуммаВключаетНДС
	|						ТОГДА ТаблицаОС.Сумма - ТаблицаОС.СуммаНДС
	|					ИНАЧЕ ТаблицаОС.Сумма
	|				КОНЕЦ
	|		ИНАЧЕ ПередачаОССведенияПрослеживаемости.Сумма
	|	КОНЕЦ КАК СуммаБезНДС,
	|	НАЧАЛОПЕРИОДА(ПередачаОС.Дата, КВАРТАЛ) КАК ПериодОперации,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК НомерДокумента,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДокумента,
	|	ПередачаОС.Ссылка КАК ДокументОперации,
	|	ПередачаОС.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА НЕ &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ВЫБОР
	|					КОГДА ПередачаОС.ЭтоУниверсальныйДокумент
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.ТипыДокументов.УПД)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТипыДокументов.Накладная)
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ТипДокументаВПрослеживаемости,
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.ПустаяСсылка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КодыОперацийПрослеживаемости.Реализация)
	|	КОНЕЦ КАК КодОперации,
	|	ВЫБОР
	|		КОГДА &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.КнигаПродаж)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях)
	|	КОНЕЦ КАК ОтражениеВОтчетности,
	|	ТаблицаОС.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА ОсновныеСредства.ЕдиницаУчета = ЗНАЧЕНИЕ(Перечисление.ЕдиницыУчетаОС.ГрупповойОбъект)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ГрупповойОбъект,
	|	ЛОЖЬ КАК ПрослеживаемыйКомплект
	|ПОМЕСТИТЬ ВТ_Прослеживаемость
	|ИЗ
	|	Документ.ПередачаОС.ОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаОС.СведенияПрослеживаемости КАК ПередачаОССведенияПрослеживаемости
	|		ПО ТаблицаОС.ИдентификаторСтроки = ПередачаОССведенияПрослеживаемости.ИдентификаторСтроки
	|			И ТаблицаОС.Ссылка = ПередачаОССведенияПрослеживаемости.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаОС КАК ПередачаОС
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|			ПО (НЕ &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС)
	|				И (ДанныеПервичныхДокументов.Организация = ПередачаОС.Организация)
	|				И (ДанныеПервичныхДокументов.Документ = ПередачаОС.Ссылка)
	|		ПО ТаблицаОС.Ссылка = ПередачаОС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОсновныеСредства
	|		ПО ТаблицаОС.ОсновноеСредство = ОсновныеСредства.Ссылка
	|ГДЕ
	|	ТаблицаОС.ПрослеживаемыйТовар = ИСТИНА
	|	И ТаблицаОС.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПередачаОССведенияПрослеживаемости.СтранаПроисхождения,
	|	ПередачаОССведенияПрослеживаемости.Номенклатура,
	|	ТаблицаОС.ОсновноеСредство,
	|	ПередачаОССведенияПрослеживаемости.РНПТ,
	|	ПередачаОС.Ссылка,
	|	ПередачаОС.Контрагент,
	|	ВЫБОР
	|		КОГДА ПередачаОССведенияПрослеживаемости.Сумма = 0
	|			ТОГДА ВЫБОР
	|					КОГДА ПередачаОС.СуммаВключаетНДС
	|						ТОГДА ТаблицаОС.Сумма - ТаблицаОС.СуммаНДС
	|					ИНАЧЕ ТаблицаОС.Сумма
	|				КОНЕЦ
	|		ИНАЧЕ ПередачаОССведенияПрослеживаемости.Сумма
	|	КОНЕЦ,
	|	НАЧАЛОПЕРИОДА(ПередачаОС.Дата, КВАРТАЛ),
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """"),
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)),
	|	ВЫБОР
	|		КОГДА НЕ &ПрослеживаемыеОперацииОтображаютсяВДекларацииНДС
	|			ТОГДА ВЫБОР
	|					КОГДА ПередачаОС.ЭтоУниверсальныйДокумент
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.ТипыДокументов.УПД)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ТипыДокументов.Накладная)
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаОС.ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА ОсновныеСредства.ЕдиницаУчета = ЗНАЧЕНИЕ(Перечисление.ЕдиницыУчетаОС.ГрупповойОбъект)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВТ_Прослеживаемость.Комплектующие = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ВТ_Прослеживаемость.ОС
	|		ИНАЧЕ ВТ_Прослеживаемость.Комплектующие
	|	КОНЕЦ КАК Номенклатура,
	|	СУММА(ВТ_Прослеживаемость.Количество) КАК Количество,
	|	СУММА(ВТ_Прослеживаемость.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	ВТ_Прослеживаемость.РНПТ КАК РНПТ,
	|	ВТ_Прослеживаемость.ПериодОперации КАК ПериодОперации,
	|	ВТ_Прослеживаемость.НомерДокумента КАК НомерДокумента,
	|	ВТ_Прослеживаемость.ДатаДокумента КАК ДатаДокумента,
	|	ВТ_Прослеживаемость.ДокументОперации КАК ДокументОперации,
	|	ВТ_Прослеживаемость.Контрагент КАК Контрагент,
	|	ВТ_Прослеживаемость.ТипДокументаВПрослеживаемости КАК ТипДокументаВПрослеживаемости,
	|	ВТ_Прослеживаемость.КодОперации КАК КодОперации,
	|	ВТ_Прослеживаемость.ОтражениеВОтчетности КАК ОтражениеВОтчетности,
	|	СУММА(ВТ_Прослеживаемость.СуммаБезНДС) КАК СуммаБезНДС,
	|	ВТ_Прослеживаемость.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ВТ_Прослеживаемость.ГрупповойОбъект КАК ГрупповойОбъект,
	|	ВТ_Прослеживаемость.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект
	|ИЗ
	|	ВТ_Прослеживаемость КАК ВТ_Прослеживаемость
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Прослеживаемость.РНПТ,
	|	ВТ_Прослеживаемость.ТипДокументаВПрослеживаемости,
	|	ВЫБОР
	|		КОГДА ВТ_Прослеживаемость.Комплектующие = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ВТ_Прослеживаемость.ОС
	|		ИНАЧЕ ВТ_Прослеживаемость.Комплектующие
	|	КОНЕЦ,
	|	ВТ_Прослеживаемость.НомерДокумента,
	|	ВТ_Прослеживаемость.ДокументОперации,
	|	ВТ_Прослеживаемость.ОтражениеВОтчетности,
	|	ВТ_Прослеживаемость.КодОперации,
	|	ВТ_Прослеживаемость.ПериодОперации,
	|	ВТ_Прослеживаемость.ДатаДокумента,
	|	ВТ_Прослеживаемость.Контрагент,
	|	ВТ_Прослеживаемость.ИдентификаторСтроки,
	|	ВТ_Прослеживаемость.ГрупповойОбъект,
	|	ВТ_Прослеживаемость.ПрослеживаемыйКомплект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Прослеживаемость.ОС КАК ОсновноеСредство,
	|	ВТ_Прослеживаемость.РНПТ КАК РНПТ,
	|	ВТ_Прослеживаемость.Количество КАК Количество,
	|	ВТ_Прослеживаемость.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	ВТ_Прослеживаемость.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВТ_Прослеживаемость.Комплектующие КАК Комплектующие
	|ИЗ
	|	ВТ_Прослеживаемость КАК ВТ_Прослеживаемость";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	
КонецФункции

Функция ТекстЗапросаПередачаГрупповыхОС(НомераТаблиц)
	
	НомераТаблиц.Вставить("ПередачаГрупповыхОС", НомераТаблиц.Количество());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	&СодержаниеПроводокГрупповыеОС КАК СодержаниеПроводок,
	|	ЛОЖЬ КАК ЭтоПеремещение,
	|	""ОС"" КАК ИмяСписка
	|ИЗ
	|	Документ.ПередачаОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

#Область ОтложенноеПроведение

Функция ТекстЗапросаРегистрацияОтложенныхРасчетовСКонтрагентами(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если Реквизиты.ПравоСобственностиПереходитПослеГосРегистрации
		ИЛИ Реквизиты.ЭтоОтложенноеПроведение
		ИЛИ НЕ ПроведениеСервер.ИспользуетсяОтложенноеПроведение(Реквизиты.Организация, Реквизиты.Период) Тогда
		ПараметрыПроведения.Вставить("РасчетыСКонтрагентамиОтложенноеПроведение", Неопределено);
		Возврат "";
	КонецЕсли;

	НомераТаблиц.Вставить("РасчетыСКонтрагентамиОтложенноеПроведение", НомераТаблиц.Количество());

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Реквизиты.Контрагент,
	|	Реквизиты.ДоговорКонтрагента,
	|	Реквизиты.ВалютаВзаиморасчетов,
	|	Реквизиты.ВидДоговора,
	|	Реквизиты.Период КАК Дата
	|ИЗ
	|	Реквизиты КАК Реквизиты";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Процедура ОбработкаОтложенногоПроведения(Параметры, Отказ) Экспорт
	
	ПараметрыПроведения = ПодготовитьПараметрыПроведения(
		Параметры.Регистратор,
		Отказ,
		Параметры.ДоговорКонтрагента);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;	

	ТаблицаВзаиморасчетов = УчетВзаиморасчетовОтложенноеПроведение.ПодготовитьТаблицуВзаиморасчетовЗачетАвансов(
		Параметры,
		ПараметрыПроведения.ЗачетАвансовТаблицаДокумента,
		ПараметрыПроведения.ЗачетАвансовТаблицаАвансов,
		ПараметрыПроведения.ЗачетАвансов,
		Отказ);

	// Структура таблиц для отражения в налоговом учете УСН
	СтруктураТаблицУСН = Новый Структура("ТаблицаРасчетов",	ТаблицаВзаиморасчетов);

	УчетВзаиморасчетовОтложенноеПроведение.СформироватьДвиженияЗачетАвансов(
		Параметры,
		ТаблицаВзаиморасчетов,
		ПараметрыПроведения.ЗачетАвансов,
		Отказ);
	
	УчетВзаиморасчетовОтложенноеПроведение.СформироватьДвиженияУСН(
		Параметры,
		СтруктураТаблицУСН);

КонецПроцедуры


#Область ПечатьЧека

Функция ТекстЗапросаПараметрыПечатиЧека(ДокументСсылка, НомераТаблиц, СообщениеОбОшибке) Экспорт
	
	ТекстЗапроса = ТекстЗапросаРеквизитыПечатиЧека(НомераТаблиц) 
		+ ТекстЗапросаДанныеДляПечатиЧека(НомераТаблиц)		;
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаРеквизитыПечатиЧека(ИменаТаблиц)
	
	ИменаТаблиц.Добавить("ВТ_Реквизиты");
	ИменаТаблиц.Добавить("ВТ_РасшифровкаПлатежа");
	ИменаТаблиц.Добавить("РеквизитыПечатиЧека");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПередачаОС.Ссылка КАК Ссылка,
	|	ПередачаОС.Организация КАК Организация,
	|	ПередачаОС.Ссылка КАК ДокументОснование,
	|	ПередачаОС.СуммаДокумента КАК СуммаДокумента,
	|	ПередачаОС.Контрагент КАК Контрагент,
	|	ПередачаОС.Дата КАК Дата,
	|	ПередачаОС.Номер КАК Номер,
	|	НЕОПРЕДЕЛЕНО КАК ВидОперации,
	|	НЕОПРЕДЕЛЕНО КАК Патент,
	|	ПередачаОС.ВалютаДокумента КАК ВалютаДокумента,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорПлатежногоАгента,
	|	НЕОПРЕДЕЛЕНО КАК ПлатежныйАгент,
	|	ЛОЖЬ КАК НесколькоДоговоровПлатежногоАгента,
	|	НЕОПРЕДЕЛЕНО КАК Склад
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.ПередачаОС КАК ПередачаОС
	|ГДЕ
	|	ПередачаОС.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаОСТовары.Ссылка КАК Ссылка,
	|	ПередачаОСТовары.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ПередачаОСТовары.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ПередачаОСТовары.СуммаНДС) КАК СуммаНДС,
	|	ПередачаОСТовары.Ссылка КАК Сделка,
	|	0 КАК СуммаПлатежа,
	|	0 КАК СуммаВзаиморасчетов
	|ПОМЕСТИТЬ ВТ_РасшифровкаПлатежа
	|ИЗ
	|	Документ.ПередачаОС.ОС КАК ПередачаОСТовары
	|ГДЕ
	|	ПередачаОСТовары.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПередачаОСТовары.Ссылка,
	|	ПередачаОСТовары.Ссылка.ДоговорКонтрагента,
	|	ПередачаОСТовары.СтавкаНДС,
	|	ПередачаОСТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.Организация КАК Организация,
	|	0 КАК СуммаДокумента,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.Дата КАК Дата,
	|	Реквизиты.Номер КАК Номер,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыОплатыККТ.Наличные) КАК ТипОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетаДенежнымиСредствами.ПриходДенежныхСредств) КАК ТипРасчета,
	|	Реквизиты.Патент КАК Патент,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.ДоговорПлатежногоАгента КАК ДоговорПлатежногоАгента,
	|	Реквизиты.НесколькоДоговоровПлатежногоАгента КАК НесколькоДоговоровПлатежногоАгента,
	|	Реквизиты.ПлатежныйАгент КАК ПлатежныйАгент
	|ИЗ
	|	Реквизиты КАК Реквизиты";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
КонецФункции

// Для корректной работы в запросе уже должна быть таблица РасшифровкаПлатежа которая содержит данные по всем оплачиваемым документам
// Исходя из данных этой таблицы подбираем документы и номенклатуру этих документов.
Функция ТекстЗапросаДанныеДляПечатиЧека(ИменаТаблиц) Экспорт
	
	// Таблица сделок из реквизитов платежа. В таблице могут быть как счета так и накладные (если печатаем из денежных документов)
	ИменаТаблиц.Добавить("Сделки");
	// Сводная таблица товаров из ТЧ Товары, Услуги и АгентскиеУслуги. Используется для формирования таблицы оплачиваемой номенклатуры
	ИменаТаблиц.Добавить("Товары");
	
	// Таблицы содержат информацию по номенклатуре из всех документов из таблицы Сделки
	ИменаТаблиц.Добавить("ОплачиваемаяНоменклатураРеализация");
	
	// Реквизиты документов по которым принимается оплата. Это может быть как текущий документ (если печать идет из накладной), так и все документы нужного вида из РеквизитыПлатежа 
	// Используем как самостоятельно, так и для определения суммовых показателей таблицы ОплачиваемаяНоменклатура (валюта, флаг включения НДС в стоимость).
	ИменаТаблиц.Добавить("ОплачиваемыеДокументыРеализация"); 
	
	ИменаТаблиц.Добавить("ДокументыРеализации");
	ИменаТаблиц.Добавить("Субконто");
	
	ИменаТаблиц.Добавить("ЗачетАвансов");
	
	ИменаТаблиц.Добавить("ОплачиваемаяНоменклатура");
	ИменаТаблиц.Добавить("ОплачиваемыеДокументы");
	
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РасшифровкаПлатежа.Сделка КАК Сделка,
	|	РасшифровкаПлатежа.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(РасшифровкаПлатежа.СуммаПлатежа) КАК СуммаПлатежа,
	|	СУММА(РасшифровкаПлатежа.СуммаНДС) КАК СуммаНДС,
	|	СУММА(РасшифровкаПлатежа.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов
	|ПОМЕСТИТЬ Сделки
	|ИЗ
	|	ВТ_РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|ГДЕ
	|	РасшифровкаПлатежа.Сделка ССЫЛКА Документ.ПередачаОС
	|	И РасшифровкаПлатежа.Сделка <> ЗНАЧЕНИЕ(Документ.ПередачаОС.ПустаяССылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасшифровкаПлатежа.Сделка,
	|	РасшифровкаПлатежа.СтавкаНДС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сделка,
	|	СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаОСТовары.Ссылка КАК Документ,
	|	ПередачаОСТовары.ОсновноеСредство КАК Номенклатура,
	|	"""" КАК Содержание,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	ПередачаОСТовары.Количество КАК Количество,
	|	ПередачаОСТовары.Цена КАК Цена,
	|	ПередачаОСТовары.Сумма КАК Сумма,
	|	ПередачаОСТовары.СтавкаНДС КАК СтавкаНДС,
	|	ПередачаОСТовары.СуммаНДС КАК СуммаНДС,
	|	ПередачаОСТовары.НомерСтроки КАК НомерСтроки,
	|	0 КАК НомерТабличнойЧасти,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорПлатежногоАгента,
	|	НЕОПРЕДЕЛЕНО КАК ПлатежныйАгент,
	|	НЕОПРЕДЕЛЕНО КАК КодСтраныПроисхожденияТовара,
	|	НЕОПРЕДЕЛЕНО КАК НомерТаможеннойДекларации
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Сделки КАК Сделки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаОС.ОС КАК ПередачаОСТовары
	|		ПО Сделки.Сделка = ПередачаОСТовары.Ссылка
	|			И (Сделки.СтавкаНДС = ПередачаОСТовары.СтавкаНДС
	|				ИЛИ Сделки.СтавкаНДС = НЕОПРЕДЕЛЕНО)
	|ГДЕ
	|	НЕ ПередачаОСТовары.Ссылка ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Сделки.Сделка КАК Документ,
	|	ДокументРеализация.Дата КАК ДатаДокумента,
	|	ДокументРеализация.Организация КАК Организация,
	|	ДокументРеализация.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ДокументРеализация.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ДокументРеализация.ВалютаДокумента КАК ВалютаДокумента,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.НомерТабличнойЧасти КАК НомерТабличнойЧасти,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Номенклатура.Наименование КАК Наименование,
	|	Товары.ЭтоУслуга КАК ЭтоУслуга,
	|	Товары.ДоговорПлатежногоАгента КАК ДоговорПлатежногоАгента,
	|	Товары.ПлатежныйАгент КАК ПлатежныйАгент,
	|	СУММА(ВЫБОР
	|			КОГДА Товары.Количество = 0
	|				ТОГДА 1
	|			ИНАЧЕ Товары.Количество
	|		КОНЕЦ) КАК Количество,
	|	СУММА(ВЫБОР
	|			КОГДА Товары.Количество = 0
	|				ТОГДА 1
	|			ИНАЧЕ Товары.Количество
	|		КОНЕЦ) КАК КоличествоОтгружено,
	|	СУММА(ВЫРАЗИТЬ(ВЫБОР
	|				КОГДА ДокументРеализация.СуммаВключаетНДС
	|					ТОГДА Товары.Цена
	|				КОГДА Товары.Количество = 0
	|					ТОГДА Товары.Сумма + Товары.СуммаНДС
	|				ИНАЧЕ (Товары.Сумма + Товары.СуммаНДС) / Товары.Количество
	|			КОНЕЦ КАК ЧИСЛО(15, 2))) КАК Цена,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(Товары.СуммаНДС) КАК СуммаНДС,
	|	0 КАК СуммаСкидок,
	|	СУММА(ВЫБОР
	|			КОГДА ДокументРеализация.СуммаВключаетНДС
	|				ТОГДА Товары.Сумма
	|			ИНАЧЕ Товары.Сумма + Товары.СуммаНДС
	|		КОНЕЦ) КАК Сумма,
	|	Товары.КодСтраныПроисхожденияТовара КАК КодСтраныПроисхожденияТовара,
	|	Товары.НомерТаможеннойДекларации КАК НомерТаможеннойДекларации
	|ПОМЕСТИТЬ ОплачиваемаяНоменклатураРеализация
	|ИЗ
	|	Сделки КАК Сделки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Товары КАК Товары
	|		ПО Сделки.Сделка = Товары.Документ
	|			И (Сделки.СтавкаНДС = Товары.СтавкаНДС
	|				ИЛИ Сделки.СтавкаНДС = НЕОПРЕДЕЛЕНО)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаОС КАК ДокументРеализация
	|		ПО Сделки.Сделка = ДокументРеализация.Ссылка
	|ГДЕ
	|	НЕ Товары.Документ ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	Сделки.Сделка,
	|	ДокументРеализация.Дата,
	|	ДокументРеализация.Организация,
	|	ДокументРеализация.ДоговорКонтрагента,
	|	ДокументРеализация.СуммаВключаетНДС,
	|	ДокументРеализация.ВалютаДокумента,
	|	Товары.НомерСтроки,
	|	Товары.НомерТабличнойЧасти,
	|	Товары.Номенклатура,
	|	Товары.ЭтоУслуга,
	|	Товары.ДоговорПлатежногоАгента,
	|	Товары.СтавкаНДС,
	|	Товары.ПлатежныйАгент,
	|	Товары.КодСтраныПроисхожденияТовара,
	|	Товары.НомерТаможеннойДекларации,
	|	Товары.Номенклатура.Наименование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОплачиваемаяНоменклатура.Документ КАК Документ,
	|	ОплачиваемаяНоменклатура.Организация КАК Организация,
	|	ОплачиваемаяНоменклатура.ДатаДокумента КАК Дата,
	|	ОплачиваемаяНоменклатура.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	0 КАК СуммаСкидкиПоДокументу,
	|	ЕСТЬNULL(ДоговорыКонтрагентов.Ссылка, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ДоговорыКонтрагентов.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	ОплачиваемаяНоменклатура.ВалютаДокумента КАК ВалютаДокумента,
	|	ОплачиваемаяНоменклатура.ВалютаДокумента КАК ВалютаПлатежа,
	|	Сделки.СуммаПлатежа КАК СуммаОплаты,
	|	Сделки.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ОплачиваемаяНоменклатура.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ОплачиваемаяНоменклатура.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ОплачиваемаяНоменклатура.Сумма) КАК Сумма,
	|	ЛОЖЬ КАК ЭтоВозврат
	|ПОМЕСТИТЬ ОплачиваемыеДокументыРеализация
	|ИЗ
	|	Сделки КАК Сделки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОплачиваемаяНоменклатураРеализация КАК ОплачиваемаяНоменклатура
	|		ПО Сделки.Сделка = ОплачиваемаяНоменклатура.Документ
	|			И (Сделки.СтавкаНДС = ОплачиваемаяНоменклатура.СтавкаНДС
	|				ИЛИ Сделки.СтавкаНДС = НЕОПРЕДЕЛЕНО)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО (ОплачиваемаяНоменклатура.ДоговорКонтрагента = ДоговорыКонтрагентов.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОплачиваемаяНоменклатура.Документ,
	|	ОплачиваемаяНоменклатура.Организация,
	|	ОплачиваемаяНоменклатура.ДатаДокумента,
	|	ОплачиваемаяНоменклатура.СуммаВключаетНДС,
	|	ЕСТЬNULL(ДоговорыКонтрагентов.Ссылка, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)),
	|	Сделки.СуммаПлатежа,
	|	Сделки.СуммаВзаиморасчетов,
	|	ОплачиваемаяНоменклатура.СтавкаНДС,
	|	ОплачиваемаяНоменклатура.ВалютаДокумента,
	|	ЕСТЬNULL(ДоговорыКонтрагентов.РасчетыВУсловныхЕдиницах, ЛОЖЬ),
	|	ОплачиваемаяНоменклатура.ВалютаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сделки.Сделка КАК Сделка
	|ПОМЕСТИТЬ ДокументыРеализации
	|ИЗ
	|	Сделки КАК Сделки
	|ГДЕ
	|	Сделки.Сделка ССЫЛКА Документ.ПередачаОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаОС.Ссылка КАК Сделка,
	|	ПередачаОС.Организация КАК Организация,
	|	ПередачаОС.СчетУчетаРасчетовСКонтрагентом КАК СчетРасчетов,
	|	ХозрасчетныйСубконто.Регистратор КАК Регистратор,
	|	ХозрасчетныйСубконто.НомерСтроки КАК НомерСтроки,
	|	ХозрасчетныйСубконто.ВидДвижения КАК ВидДвижения,
	|	ХозрасчетныйСубконто.Период КАК Период
	|ПОМЕСТИТЬ Субконто
	|ИЗ
	|	ДокументыРеализации КАК ДокументРеализации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаОС КАК ПередачаОС
	|		ПО ДокументРеализации.Сделка = ПередачаОС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО (ПередачаОС.Ссылка = ХозрасчетныйСубконто.Значение)
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами))
	|			И (ХозрасчетныйСубконто.Период >= ПередачаОС.Дата)
	|			И (ХозрасчетныйСубконто.Период <= &ДатаРасчета)
	|ГДЕ
	|	НЕ ХозрасчетныйСубконто.Регистратор ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Субконто.Сделка КАК ОплачиваемыйДокумент,
	|	СУММА(ВЫБОР
	|			КОГДА Субконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет)
	|					И Хозрасчетный.СчетДт = Субконто.СчетРасчетов
	|				ТОГДА ЕСТЬNULL(Хозрасчетный.Сумма, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДокумента,
	|	СУММА(ВЫБОР
	|			КОГДА Субконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит)
	|					И Хозрасчетный.СчетКт = Субконто.СчетРасчетов
	|				ТОГДА ЕСТЬNULL(Хозрасчетный.Сумма, 0)
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаОплаты
	|ПОМЕСТИТЬ ЗачетАвансов
	|ИЗ
	|	Субконто КАК Субконто
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ПО Субконто.Регистратор = Хозрасчетный.Регистратор
	|			И Субконто.НомерСтроки = Хозрасчетный.НомерСтроки
	|			И Субконто.Период = Хозрасчетный.Период
	|			И Субконто.Организация = Хозрасчетный.Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	Субконто.Сделка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОплачиваемаяНоменклатура.Документ КАК Документ,
	|	ОплачиваемаяНоменклатура.ДатаДокумента КАК ДатаДокумента,
	|	ОплачиваемаяНоменклатура.Номенклатура КАК Номенклатура,
	|	НЕОПРЕДЕЛЕНО КАК КодВидаНоменклатурнойКлассификации,
	|	НЕОПРЕДЕЛЕНО КАК КодВидаТРУ,
	|	НЕОПРЕДЕЛЕНО КАК Артикул,
	|	НЕОПРЕДЕЛЕНО КАК КодЕдиницыИзмерения,
	|	НЕОПРЕДЕЛЕНО КАК Штрихкод,
	|	ЛОЖЬ КАК МаркируемаяПродукция,
	|	ОплачиваемаяНоменклатура.Наименование КАК Наименование,
	|	ОплачиваемаяНоменклатура.ДоговорПлатежногоАгента КАК ДоговорПлатежногоАгента,
	|	ОплачиваемаяНоменклатура.ПлатежныйАгент КАК ПлатежныйАгент,
	|	ОплачиваемаяНоменклатура.ЭтоУслуга КАК ЭтоУслуга,
	|	СУММА(ОплачиваемаяНоменклатура.Количество) КАК Количество,
	|	СУММА(ОплачиваемаяНоменклатура.КоличествоОтгружено) КАК КоличествоОтгружено,
	|	ОплачиваемаяНоменклатура.Цена КАК Цена,
	|	ОплачиваемаяНоменклатура.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ОплачиваемаяНоменклатура.СуммаСкидок) КАК СуммаСкидок,
	|	СУММА(ОплачиваемаяНоменклатура.Сумма) КАК Сумма,
	|	МИНИМУМ(ОплачиваемаяНоменклатура.НомерСтроки) КАК НомерСтроки,
	|	МИНИМУМ(ОплачиваемаяНоменклатура.НомерТабличнойЧасти) КАК НомерТабличнойЧасти,
	|	СУММА(ОплачиваемаяНоменклатура.СуммаНДС) КАК СуммаНДС,
	|	ОплачиваемаяНоменклатура.КодСтраныПроисхожденияТовара КАК КодСтраныПроисхожденияТовара,
	|	ОплачиваемаяНоменклатура.НомерТаможеннойДекларации КАК НомерТаможеннойДекларации
	|ИЗ
	|	ОплачиваемаяНоменклатураРеализация КАК ОплачиваемаяНоменклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ОплачиваемаяНоменклатура.Номенклатура,
	|	ОплачиваемаяНоменклатура.ЭтоУслуга,
	|	ОплачиваемаяНоменклатура.СтавкаНДС,
	|	ОплачиваемаяНоменклатура.Наименование,
	|	ОплачиваемаяНоменклатура.ДатаДокумента,
	|	ОплачиваемаяНоменклатура.ДоговорПлатежногоАгента,
	|	ОплачиваемаяНоменклатура.Документ,
	|	ОплачиваемаяНоменклатура.Цена,
	|	ОплачиваемаяНоменклатура.ПлатежныйАгент,
	|	ОплачиваемаяНоменклатура.КодСтраныПроисхожденияТовара,
	|	ОплачиваемаяНоменклатура.НомерТаможеннойДекларации,
	|	ОплачиваемаяНоменклатура.НомерТабличнойЧасти,
	|	ОплачиваемаяНоменклатура.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОплачиваемаяНоменклатура.НомерТабличнойЧасти,
	|	ОплачиваемаяНоменклатура.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОплачиваемыеДокументыРеализация.Документ КАК Документ,
	|	ОплачиваемыеДокументыРеализация.Организация КАК Организация,
	|	ОплачиваемыеДокументыРеализация.Дата КАК Дата,
	|	ОплачиваемыеДокументыРеализация.СуммаСкидкиПоДокументу КАК СуммаСкидкиПоДокументу,
	|	ОплачиваемыеДокументыРеализация.РасчетыВУсловныхЕдиницах
	|		И ОплачиваемыеДокументыРеализация.ВалютаДокумента <> ОплачиваемыеДокументыРеализация.ВалютаПлатежа КАК РасчетыВУсловныхЕдиницах,
	|	ОплачиваемыеДокументыРеализация.СтавкаНДС КАК СтавкаНДС,
	|	ОплачиваемыеДокументыРеализация.СуммаОплаты КАК СуммаОплаты,
	|	ОплачиваемыеДокументыРеализация.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ЕСТЬNULL(ЗачетАвансов.СуммаДокумента, 0) = 0
	|				ТОГДА 0
	|			КОГДА ЗачетАвансов.СуммаОплаты >= ЗачетАвансов.СуммаДокумента
	|				ТОГДА 1
	|			ИНАЧЕ ЗачетАвансов.СуммаОплаты / ЗачетАвансов.СуммаДокумента
	|		КОНЕЦ * ОплачиваемыеДокументыРеализация.Сумма КАК ЧИСЛО(15, 2)) КАК СуммаОплатыВсего
	|ИЗ
	|	ОплачиваемыеДокументыРеализация КАК ОплачиваемыеДокументыРеализация
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗачетАвансов КАК ЗачетАвансов
	|		ПО ОплачиваемыеДокументыРеализация.Документ = ЗачетАвансов.ОплачиваемыйДокумент";
	
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаРеализацииПоСчету(ИменаТаблиц) Экспорт
	// Таблица содержит данные по реализации номенклатуры по счету, для случая если чек печатается по счету
	ИменаТаблиц.Добавить("ВТ_РеализованнаяНоменклатура");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВТ_РеализацииПоСчету.СчетНаОплату КАК СчетНаОплату,
	|	ЛОЖЬ КАК ЭтоУслуга,
	|	РеализованныеОсновныеСредства.ОсновноеСредство КАК Номенклатура,
	|	"""" КАК Содержание,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорПлатежногоАгента,
	|	СУММА(РеализованныеОсновныеСредства.Количество) КАК Количество,
	|	РеализованныеОсновныеСредства.СтавкаНДС КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО КАК ПлатежныйАгент
	|ИЗ
	|	ВТ_РеализацииПоСчету КАК ВТ_РеализацииПоСчету
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаОС.ОС КАК РеализованныеОсновныеСредства
	|		ПО ВТ_РеализацииПоСчету.РеализацияТоваров = РеализованныеОсновныеСредства.Ссылка
	|ГДЕ
	|	НЕ РеализованныеОсновныеСредства.Ссылка ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализованныеОсновныеСредства.ОсновноеСредство,
	|	РеализованныеОсновныеСредства.СтавкаНДС,
	|	ВТ_РеализацииПоСчету.СчетНаОплату
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетНаОплату,
	|	Номенклатура,
	|	Содержание";
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
	Возврат ТекстЗапроса;
КонецФункции

Функция НаименованиеВСтрокеЧека(СтруктураШапки) Экспорт
	
	Возврат "";
	
КонецФункции

#КонецОбласти

#КонецОбласти

Функция ПечатьОС1(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ИмяМакета)

	УстановитьПривилегированныйРежим(Истина);
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПринятиеКУчетуОС_ОС1";

	КоличествоОС1 = 0;
	КоличествоОС1а = 0;
	КоличествоОС1б = 0;
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ОС1");
	МакетОС1а = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ОС1а");
	МакетОС1б = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ОС1б");

	// Области
	ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакетаЗаголовок_а = МакетОС1а.ПолучитьОбласть("Заголовок");

	Шапка1ОС1б     = МакетОС1б.ПолучитьОбласть("Шапка1");
	Шапка2ОС1б     = МакетОС1б.ПолучитьОбласть("Шапка2");
	Строка2ОС1б    = МакетОС1б.ПолучитьОбласть("Строка2");
	Строка2ПОС1б   = МакетОС1б.ПолучитьОбласть("Строка2П");
	Подвал2        = МакетОС1б.ПолучитьОбласть("Подвал2");
	Шапка3ОС1б     = МакетОС1б.ПолучитьОбласть("Шапка3");
	Строка3ОС1б    = МакетОС1б.ПолучитьОбласть("Строка3");
	Строка3ПОС1б   = МакетОС1б.ПолучитьОбласть("Строка3П");
	Подвал3        = МакетОС1б.ПолучитьОбласть("Подвал3");
	Шапка4ОС1б     = МакетОС1б.ПолучитьОбласть("Шапка4");

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПередачаОС.Ссылка КАК Ссылка,
	|	ПередачаОС.Дата КАК Дата,
	|	ПередачаОС.Номер КАК НомерАкта,
	|	ПередачаОС.Ответственный,
	|	ПередачаОС.ПодразделениеОрганизации КАК ПодрСдатчика,
	|	ПередачаОС.Контрагент.НаименованиеПолное КАК ОрганизацияПолучатель,
	|	ПередачаОС.Дата КАК ДатаПередачи,
	|	ПередачаОС.Контрагент КАК Получатель,
	|	ПередачаОС.Организация КАК Сдатчик,
	|	ПередачаОС.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ПРЕДСТАВЛЕНИЕ(ПередачаОС.ДоговорКонтрагента) КАК ДоговорПередачи,
	|	ПередачаОС.ДоговорКонтрагента.Дата КАК ДатаДоговора,
	|	ПередачаОС.ДоговорКонтрагента.Номер КАК НомерДоговора,
	|	ПередачаОС.ДокПодготовкаКПередачеОС КАК ДокПодготовкаКПередачеОС,
	|	ПередачаОС.Организация КАК Организация,
	|	ПередачаОС.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	ПередачаОС.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	ПередачаОС.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	ПередачаОС.МоментВремени КАК СсылкаМоментВремени,
	|	ПередачаОС.ДокПодготовкаКПередачеОС.МоментВремени КАК ДокПодготовкаКПередачеОСМоментВремени
	|ИЗ
	|	Документ.ПередачаОС КАК ПередачаОС
	|ГДЕ
	|	ПередачаОС.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка
	|АВТОУПОРЯДОЧИВАНИЕ";

	Шапка = Запрос.Выполнить().Выбрать();

	Запрос = Новый Запрос();

	СписокВидовМодернизации = Новый Массив;
	СписокВидовМодернизации.Добавить(Перечисления.ВидыСобытийОС.Модернизация);
	СписокВидовМодернизации.Добавить(Перечисления.ВидыСобытийОС.Достройка);
	СписокВидовМодернизации.Добавить(Перечисления.ВидыСобытийОС.Реконструкция);

	Запрос.УстановитьПараметр("СписокВидовМодернизации", СписокВидовМодернизации);

	Запрос.УстановитьПараметр("КапитальныйРемонт", Перечисления.ВидыСобытийОС.КапитальныйРемонт);
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ВалютаРегламентированногоУчета);
	
	СчетаВыбытия = Новый Массив;
	СчетаВыбытия.Добавить(ПланыСчетов.Хозрасчетный.ВыбытиеОС);
	СчетаВыбытия.Добавить(ПланыСчетов.Хозрасчетный.ВыбытиеМЦ);
	Запрос.УстановитьПараметр("СчетаВыбытия", СчетаВыбытия);

	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПередачаОСОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ВТ_ОС
	|ИЗ
	|	Документ.ПередачаОС.ОС КАК ПередачаОСОС
	|ГДЕ
	|	ПередачаОСОС.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК СубконтоКт1,
	|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК СуммаОборот
	|ПОМЕСТИТЬ СтоимостьОС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ПериодОборотов, &ПериодОборотов, , СчетДт В (&СчетаВыбытия), , , ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства), Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОборотыДтКт.СчетКт,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СубконтоКт1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
	|	ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК СубконтоДт1,
	|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК СуммаОборот
	|ПОМЕСТИТЬ АмортизацияОС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ПериодОборотов, &ПериодОборотов, , , ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства), СчетКт В (&СчетаВыбытия), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОборотыДтКт.СчетДт,
	|	ХозрасчетныйОборотыДтКт.СубконтоДт1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СубконтоДт1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета КАК СчетУчета,
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации
	|ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаОССрезПоследних
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
	|			&КонДата,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ВТ_ОС.ОсновноеСредство
	|					ИЗ
	|						ВТ_ОС)) КАК СчетаБухгалтерскогоУчетаОССрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК СубконтоКт1,
	|	СУММА(ХозрасчетныйОборотыДтКт.Сумма) КАК СуммаОборот
	|ПОМЕСТИТЬ ИзносОС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|			&ПериодОборотов,
	|			&ПериодОборотов,
	|			Организация = &Организация
	|				И СубконтоКт1 В
	|					(ВЫБРАТЬ
	|						ВТ_ОС.ОсновноеСредство
	|					ИЗ
	|						ВТ_ОС)
	|				И СчетКт В
	|					(ВЫБРАТЬ
	|						СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации
	|					ИЗ
	|						СчетаБухгалтерскогоУчетаОССрезПоследних)
	|				И Регистратор = &ДокументОборотов,
	|			,
	|			) КАК ХозрасчетныйОборотыДтКт
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОборотыДтКт.СчетКт,
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СубконтоКт1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Хозрасчетный.СубконтоКт1 ССЫЛКА Справочник.ОсновныеСредства
	|			ТОГДА Хозрасчетный.СубконтоКт1
	|		КОГДА Хозрасчетный.СубконтоКт2 ССЫЛКА Справочник.ОсновныеСредства
	|			ТОГДА Хозрасчетный.СубконтоКт2
	|		КОГДА Хозрасчетный.СубконтоКт3 ССЫЛКА Справочник.ОсновныеСредства
	|			ТОГДА Хозрасчетный.СубконтоКт3
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ОсновноеСредство,
	|	СУММА(Хозрасчетный.Сумма) КАК СуммаВзаиморасчетов
	|ПОМЕСТИТЬ ВТ_Взаиморасчеты
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|			&КонДата,
	|			&КонДата,
	|			Регистратор = &Ссылка
	|				И СчетДт = &СчетУчетаРасчетовСКонтрагентом,
	|			,
	|			) КАК Хозрасчетный
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА Хозрасчетный.СубконтоКт1 ССЫЛКА Справочник.ОсновныеСредства
	|			ТОГДА Хозрасчетный.СубконтоКт1
	|		КОГДА Хозрасчетный.СубконтоКт2 ССЫЛКА Справочник.ОсновныеСредства
	|			ТОГДА Хозрасчетный.СубконтоКт2
	|		КОГДА Хозрасчетный.СубконтоКт3 ССЫЛКА Справочник.ОсновныеСредства
	|			ТОГДА Хозрасчетный.СубконтоКт3
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.Местонахождение КАК Местонахождение
	|ПОМЕСТИТЬ ВТ_МестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
	|			&КонДата,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ВТ_ОС.ОсновноеСредство
	|					ИЗ
	|						ВТ_ОС)) КАК МестонахождениеОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МестонахождениеОС.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыАмортизации.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизации.СрокПолезногоИспользования КАК СрокПолезногоИспользования
	|ПОМЕСТИТЬ ВТ_ПараметрыАмортизации
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|			&КонДата,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ВТ_ОС.ОсновноеСредство
	|					ИЗ
	|						ВТ_ОС)) КАК ПараметрыАмортизации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПараметрыАмортизации.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведенияОбОсновныхСредствахСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОбОсновныхСредствахСрезПоследних.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости,
	|	ПервоначальныеСведенияОбОсновныхСредствахСрезПоследних.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ПервоначальныеСведенияОбОсновныхСредствахСрезПоследних.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	ПервоначальныеСведенияОбОсновныхСредствахСрезПоследних.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации
	|ПОМЕСТИТЬ ВТ_ПервоначальныеСведенияОбОсновныхСредствахСрезПоследних
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&КонДата,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ВТ_ОС.ОсновноеСредство
	|					ИЗ
	|						ВТ_ОС)) КАК ПервоначальныеСведенияОбОсновныхСредствахСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПервоначальныеСведенияОбОсновныхСредствахСрезПоследних.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоследнийКапитальныйРемонт.ОсновноеСредство КАК ОсновноеСредство,
	|	ПоследнийКапитальныйРемонт.Период КАК Период
	|ПОМЕСТИТЬ ВТ_ПоследнийКапитальныйРемонт
	|ИЗ
	|	РегистрСведений.СобытияОСОрганизаций.СрезПоследних(
	|			&КонДата,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ВТ_ОС.ОсновноеСредство
	|					ИЗ
	|						ВТ_ОС)
	|				И Событие.ВидСобытияОС = &КапитальныйРемонт) КАК ПоследнийКапитальныйРемонт
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПоследнийКапитальныйРемонт.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоследняяМодернизация.ОсновноеСредство КАК ОсновноеСредство,
	|	ПоследняяМодернизация.Период КАК Период
	|ПОМЕСТИТЬ ВТ_ПоследняяМодернизация
	|ИЗ
	|	РегистрСведений.СобытияОСОрганизаций.СрезПоследних(
	|			&КонДата,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ВТ_ОС.ОсновноеСредство
	|					ИЗ
	|						ВТ_ОС)
	|				И Событие.ВидСобытияОС В (&СписокВидовМодернизации)) КАК ПоследняяМодернизация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПоследняяМодернизация.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПередачаОСОС.НомерСтроки КАК НомерСтроки,
	|	ПередачаОСОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(СтоимостьОС.СуммаОборот, 0) - ВЫБОР
	|		КОГДА ПервоначальныеСведенияОбОсновныхСредствахСрезПоследних.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)
	|				ИЛИ ПервоначальныеСведенияОбОсновныхСредствахСрезПоследних.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса)
	|			ТОГДА ЕСТЬNULL(ИзносОС.СуммаОборот, 0)
	|		ИНАЧЕ ЕСТЬNULL(АмортизацияОС.СуммаОборот, 0)
	|	КОНЕЦ КАК ОстСтоимость,
	|	ВЫБОР
	|		КОГДА ПервоначальныеСведенияОбОсновныхСредствахСрезПоследних.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)
	|				ИЛИ ПервоначальныеСведенияОбОсновныхСредствахСрезПоследних.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса)
	|			ТОГДА ЕСТЬNULL(ИзносОС.СуммаОборот, 0)
	|		ИНАЧЕ ЕСТЬNULL(АмортизацияОС.СуммаОборот, 0)
	|	КОНЕЦ КАК НачАмортизация,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_Взаиморасчеты.СуммаВзаиморасчетов, 0) <> 0
	|				И ПередачаОСОС.Ссылка.ДоговорКонтрагента.ВалютаВзаиморасчетов <> &ВалютаРеглУчета
	|			ТОГДА ЕСТЬNULL(ВТ_Взаиморасчеты.СуммаВзаиморасчетов, 0)
	|		КОГДА ПередачаОСОС.Ссылка.СуммаВключаетНДС
	|			ТОГДА ПередачаОСОС.Сумма * &Курс / &Кратность
	|		ИНАЧЕ (ПередачаОСОС.Сумма + ПередачаОСОС.СуммаНДС) * &Курс / &Кратность
	|	КОНЕЦ КАК ЦенаПродажи,
	|	ПередачаОСОС.СтавкаНДС КАК СтавкаНДС,
	|	ПередачаОСОС.СуммаНДС * &Курс / &Кратность КАК СуммаНДС,
	|	ПередачаОСОС.Количество КАК Количество,
	|	ПередачаОСОС.ОсновноеСредство.ГруппаОС КАК ГруппаОС,
	|	ПередачаОСОС.ОсновноеСредство.ЕдиницаУчета КАК ЕдиницаУчета,
	|	ПередачаОСОС.ОсновноеСредство.НаименованиеПолное КАК НаименованиеОс,
	|	ПередачаОСОС.ОсновноеСредство.АмортизационнаяГруппа.Порядок + 1 КАК НомерГруппы,
	|	ПередачаОСОС.ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер,
	|	ПередачаОСОС.ОсновноеСредство.ДатаВыпуска КАК ГодВыпуска,
	|	ПередачаОСОС.ОсновноеСредство.Изготовитель КАК Изготовитель,
	|	ПередачаОСОС.ОсновноеСредство.КодПоОКОФ.Код КАК КодОКОФ,
	|	МестонахождениеОС.Местонахождение КАК Местонахождение,
	|	ПараметрыАмортизации.СрокПолезногоИспользования КАК СрокПолезнИспПриПеред,
	|	ВЫБОР
	|		КОГДА ПередачаОСОС.ОсновноеСредство.ЕдиницаУчета = ЗНАЧЕНИЕ(Перечисление.ЕдиницыУчетаОС.ГрупповойОбъект)
	|			ТОГДА ""-""
	|		ИНАЧЕ ПервоначальныеСведенияОбОсновныхСредствахСрезПоследних.ИнвентарныйНомер
	|	КОНЕЦ КАК ИнвНомер,
	|	ПоследнийКапитальныйРемонт.Период КАК ДатаПоследнегоКапитальногоРемонта,
	|	ПоследняяМодернизация.Период КАК ДатаПоследнейМодернизации
	|ИЗ
	|	Документ.ПередачаОС.ОС КАК ПередачаОСОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестонахождениеОС КАК МестонахождениеОС
	|		ПО ПередачаОСОС.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПараметрыАмортизации КАК ПараметрыАмортизации
	|		ПО ПередачаОСОС.ОсновноеСредство = ПараметрыАмортизации.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПервоначальныеСведенияОбОсновныхСредствахСрезПоследних КАК ПервоначальныеСведенияОбОсновныхСредствахСрезПоследних
	|		ПО ПередачаОСОС.ОсновноеСредство = ПервоначальныеСведенияОбОсновныхСредствахСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоследнийКапитальныйРемонт КАК ПоследнийКапитальныйРемонт
	|		ПО ПередачаОСОС.ОсновноеСредство = ПоследнийКапитальныйРемонт.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоследняяМодернизация КАК ПоследняяМодернизация
	|		ПО ПередачаОСОС.ОсновноеСредство = ПоследняяМодернизация.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаБухгалтерскогоУчетаОССрезПоследних КАК СчетаБухгалтерскогоУчетаОССрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьОС КАК СтоимостьОС
	|			ПО СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = СтоимостьОС.СубконтоКт1
	|				И СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета = СтоимостьОС.СчетКт
	|			ЛЕВОЕ СОЕДИНЕНИЕ АмортизацияОС КАК АмортизацияОС
	|			ПО СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = АмортизацияОС.СубконтоДт1
	|				И СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации = АмортизацияОС.СчетДт
	|			ЛЕВОЕ СОЕДИНЕНИЕ ИзносОС КАК ИзносОС
	|			ПО СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = ИзносОС.СубконтоКт1
	|				И СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации = ИзносОС.СчетКт
	|		ПО ПередачаОСОС.ОсновноеСредство = СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Взаиморасчеты КАК ВТ_Взаиморасчеты
	|		ПО ПередачаОСОС.ОсновноеСредство = ВТ_Взаиморасчеты.ОсновноеСредство
	|ГДЕ
	|	ПередачаОСОС.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	ПервыйДокумент = Истина;

	ИспользоваласьОС1б = Ложь;
	Пока Шапка.Следующий() Цикл

		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;

		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		Запрос.УстановитьПараметр("Ссылка",            Шапка.Ссылка);
		Запрос.УстановитьПараметр("ДокументОборотов",  ?(ЗначениеЗаполнено(Шапка.ДокПодготовкаКПередачеОС), Шапка.ДокПодготовкаКПередачеОС, Шапка.Ссылка));
		Запрос.УстановитьПараметр("Организация",       Шапка.Организация);
		Запрос.УстановитьПараметр("КонДата",           Шапка.Дата);
		Запрос.УстановитьПараметр("Курс",              ?(НЕ ЗначениеЗаполнено(Шапка.КурсВзаиморасчетов), 1, Шапка.КурсВзаиморасчетов));
		Запрос.УстановитьПараметр("Кратность",         ?(НЕ ЗначениеЗаполнено(Шапка.КратностьВзаиморасчетов), 1, Шапка.КратностьВзаиморасчетов));
		Запрос.УстановитьПараметр("ПериодОборотов",    ?(ЗначениеЗаполнено(Шапка.ДокПодготовкаКПередачеОС), Шапка.ДокПодготовкаКПередачеОСМоментВремени, Шапка.СсылкаМоментВремени));
		Запрос.УстановитьПараметр("СчетУчетаРасчетовСКонтрагентом",  Шапка.СчетУчетаРасчетовСКонтрагентом);

		ВыборкаПоОС = Запрос.Выполнить().Выбрать();

		ДокВвода  = Неопределено;
		ДатаВвода = '00000000';

		Если ВыборкаПоОС.Количество() <= 1 Тогда

			ВыборкаПоОС.Следующий();

			Если НЕ(ВыборкаПоОС.ГруппаОС = Перечисления.ГруппыОС.Здания ИЛИ
				ВыборкаПоОС.ГруппаОС = Перечисления.ГруппыОС.Сооружения) Тогда

				ОбластьМакетаЗаголовок.Параметры.Заполнить(Шапка);
				ОбластьМакетаЗаголовок.Параметры.НомерАкта = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерАкта, Истина, Ложь);
				ОбластьМакетаЗаголовок.Параметры.Заполнить(ВыборкаПоОС);
				КоличествоОС1 = КоличествоОС1 + 1;

				УчетОС.ПолучитьДокументБухСостоянияОС(ВыборкаПоОС.ОсновноеСредство, Шапка.Сдатчик,
					Перечисления.СостоянияОС.ПринятоКУчету, ДокВвода, ДатаВвода);

				Если ЗначениеЗаполнено(ДатаВвода) Тогда
					СрокЭкспл = УправлениеВнеоборотнымиАктивами.ОпределитьФактическийСрокИспользования(ДатаВвода, Шапка.Дата);
				Иначе
					СрокЭкспл = 0;
				КонецЕсли;

				ОбластьМакетаЗаголовок.Параметры.ГодВыпуска = ВыборкаПоОС.ГодВыпуска;
				ОбластьМакетаЗаголовок.Параметры.ДатаВвода  = ДатаВвода;
				ОбластьМакетаЗаголовок.Параметры.ДатаВводаПриПередаче  = ДатаВвода;
				ОбластьМакетаЗаголовок.Параметры.СрокЭкспл  = ?(НЕ ЗначениеЗаполнено(СрокЭкспл), "-",
					УправлениеВнеоборотнымиАктивами.РасшифровкаСрокаПолезногоИспользования(СрокЭкспл));

				НаименованиеОС = ?(ПустаяСтрока(ВыборкаПоОС.НаименованиеОС),
					СокрЛП(ВыборкаПоОС.ОсновноеСредство), ВыборкаПоОС.НаименованиеОС);
				
				ОбластьМакетаЗаголовок.Параметры.НаименованиеОС = НаименованиеОС;

				Если ВыборкаПоОС.ЕдиницаУчета = Перечисления.ЕдиницыУчетаОС.ГрупповойОбъект Тогда
					ОбластьМакетаЗаголовок.Параметры.НаименованиеОС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = '%1, %2 шт.'", ОбщегоНазначения.КодОсновногоЯзыка()),
						НаименованиеОС,
						ВыборкаПоОС.Количество);
				КонецЕсли;

				ОбластьМакетаЗаголовок.Параметры.ПодрСдатчика = Строка(Шапка.ПодразделениеОрганизации);

				ЗаполнитьДанныеОрганизацииПолучателя(Шапка, ОбластьМакетаЗаголовок);
				ЗаполнитьДанныеОрганизацииСдатчика(Шапка, ОбластьМакетаЗаголовок);

				ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовок);

			Иначе

				ОбластьМакетаЗаголовок_а.Параметры.Заполнить(Шапка);
				ОбластьМакетаЗаголовок_а.Параметры.НомерАкта = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерАкта, Истина, Ложь);
				ОбластьМакетаЗаголовок_а.Параметры.Заполнить(ВыборкаПоОС);
				КоличествоОС1а = КоличествоОС1а + 1;

				УчетОС.ПолучитьДокументБухСостоянияОС(ВыборкаПоОС.ОсновноеСредство, Шапка.Организация,
					Перечисления.СостоянияОС.ПринятоКУчету, ДокВвода, ДатаВвода);

				СрокЭкспл = УправлениеВнеоборотнымиАктивами.ОпределитьФактическийСрокИспользования(ДатаВвода, Шапка.Дата);

				ОбластьМакетаЗаголовок_а.Параметры.ГодВыпуска = ВыборкаПоОС.ГодВыпуска;
				ОбластьМакетаЗаголовок_а.Параметры.ДатаВвода  = ДатаВвода;
				ОбластьМакетаЗаголовок_а.Параметры.ДатаВводаПриПередаче  = ДатаВвода;
				ОбластьМакетаЗаголовок_а.Параметры.СрокЭкспл  = ?(НЕ ЗначениеЗаполнено(СрокЭкспл), "-",
					УправлениеВнеоборотнымиАктивами.РасшифровкаСрокаПолезногоИспользования(СрокЭкспл));

				Если ПустаяСтрока(ВыборкаПоОС.НаименованиеОС) Тогда
					ОбластьМакетаЗаголовок_а.Параметры.НаименованиеОС = СокрЛП(ВыборкаПоОС.ОсновноеСредство);
				КонецЕсли;

				ОбластьМакетаЗаголовок_а.Параметры.ПодрСдатчика = Строка(Шапка.ПодразделениеОрганизации);
				ЗаполнитьДанныеОрганизацииПолучателя(Шапка, ОбластьМакетаЗаголовок_а);
				ЗаполнитьДанныеОрганизацииСдатчика(Шапка, ОбластьМакетаЗаголовок_а);

				ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовок_а);

			КонецЕсли;

		Иначе // Объектов много - групповая печать.

			ИспользоваласьОС1б = Истина;
			КоличествоОС1б = КоличествоОС1б + 1;

			ОС1б_Страница1 = Новый ТабличныйДокумент();
			ОС1б_Страница2 = Новый ТабличныйДокумент();
			ОС1б_Страница3 = Новый ТабличныйДокумент();
			ОС1б_Страница4 = Новый ТабличныйДокумент();

			Шапка1ОС1б.Параметры.Заполнить(Шапка);
			Шапка1ОС1б.Параметры.НомерАкта = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.НомерАкта, Истина, Ложь);
			Шапка1ОС1б.Параметры.Заполнить(ВыборкаПоОС);
			ЗаполнитьДанныеОрганизацииПолучателя(Шапка, Шапка1ОС1б);
			ЗаполнитьДанныеОрганизацииСдатчика(Шапка, Шапка1ОС1б);
			ОС1б_Страница1.Вывести(Шапка1ОС1б);

			Шапка2ОС1б.Параметры.Заполнить(Шапка);
			Шапка2ОС1б.Параметры.Заполнить(ВыборкаПоОС);
			ОС1б_Страница2.Вывести(Шапка2ОС1б);

			Шапка3ОС1б.Параметры.Заполнить(Шапка);
			Шапка3ОС1б.Параметры.Заполнить(ВыборкаПоОС);
			ОС1б_Страница3.Вывести(Шапка3ОС1б);

			Шапка4ОС1б.Параметры.Заполнить(Шапка);
			Шапка4ОС1б.Параметры.Заполнить(ВыборкаПоОС);
			ОС1б_Страница4.Вывести(Шапка4ОС1б);

			НомПП = 0;
			ИтогЦенаПродажи = 0;

			Пока ВыборкаПоОС.Следующий() Цикл

				ИтогЦенаПродажи = ИтогЦенаПродажи + ВыборкаПоОС.ЦенаПродажи;

				УчетОС.ПолучитьДокументБухСостоянияОС(ВыборкаПоОС.ОсновноеСредство, Шапка.Сдатчик,
					Перечисления.СостоянияОС.ПринятоКУчету, ДокВвода, ДатаВвода);

				СрокЭкспл = УправлениеВнеоборотнымиАктивами.ОпределитьФактическийСрокИспользования(ДатаВвода, Шапка.Дата);

				НомПП = НомПП + 1;
				Строка2ОС1б.Параметры.Нс = НомПП;

				Строка2ОС1б.Параметры.Заполнить(Шапка);
				Строка2ОС1б.Параметры.Заполнить(ВыборкаПоОС);
				
				НаименованиеОС = ?(ПустаяСтрока(ВыборкаПоОС.НаименованиеОС),
					СокрЛП(ВыборкаПоОС.ОсновноеСредство), ВыборкаПоОС.НаименованиеОС);
				
				Строка2ОС1б.Параметры.НаименованиеОС = НаименованиеОС;

				Если ВыборкаПоОС.ЕдиницаУчета = Перечисления.ЕдиницыУчетаОС.ГрупповойОбъект Тогда
					Строка2ОС1б.Параметры.НаименованиеОС = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = '%1, %2 шт.'", ОбщегоНазначения.КодОсновногоЯзыка()),
						НаименованиеОС,
						ВыборкаПоОС.Количество);
					КонецЕсли;
					
				Строка2ОС1б.Параметры.ДатаВвода = ДатаВвода;
				ОС1б_Страница2.Вывести(Строка2ОС1б);

				Строка3ОС1б.Параметры.Заполнить(Шапка);
				Строка3ОС1б.Параметры.Заполнить(ВыборкаПоОС);
				Строка3ОС1б.Параметры.СрокЭкспл = ?(НЕ ЗначениеЗаполнено(СрокЭкспл), "-",
					УправлениеВнеоборотнымиАктивами.РасшифровкаСрокаПолезногоИспользования(СрокЭкспл));
				ОС1б_Страница3.Вывести(Строка3ОС1б);

			КонецЦикла;

			Строка2ПОС1б.Параметры.Заполнить(Шапка);
			Строка2ПОС1б.Параметры.Заполнить(ВыборкаПоОС);
			ОС1б_Страница2.Вывести(Строка2ПОС1б);

			Подвал2.Параметры.Заполнить(Шапка);
			Подвал2.Параметры.Заполнить(ВыборкаПоОС);
			ОС1б_Страница2.Вывести(Подвал2);

			Строка3ПОС1б.Параметры.Заполнить(Шапка);
			Строка3ПОС1б.Параметры.Заполнить(ВыборкаПоОС);
			ОС1б_Страница3.Вывести(Строка3ПОС1б);

			Подвал3.Параметры.Заполнить(Шапка);
			Подвал3.Параметры.Заполнить(ВыборкаПоОС);
			Подвал3.Параметры.ИтогЦенаПродажи = ИтогЦенаПродажи;
			ЗаполнитьДанныеОрганизацииСдатчика(Шапка, Подвал3);
			ОС1б_Страница3.Вывести(Подвал3);

			ТабличныйДокумент.Вывести(ОС1б_Страница1);
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабличныйДокумент.Вывести(ОС1б_Страница2);
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабличныйДокумент.Вывести(ОС1б_Страница3);
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабличныйДокумент.Вывести(ОС1б_Страница4);
		КонецЕсли;

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;
	
	Если КоличествоОС1 = 0 И КоличествоОС1а = 0 Тогда 
		ИмяМакета = "ОбщийМакет.ПФ_MXL_ОС1б";
	ИначеЕсли КоличествоОС1 = 0 И КоличествоОС1б = 0 Тогда 
		ИмяМакета = "ОбщийМакет.ПФ_MXL_ОС1а";
	ИначеЕсли КоличествоОС1а = 0 И КоличествоОС1б = 0 Тогда 
		ИмяМакета = "ОбщийМакет.ПФ_MXL_ОС1";
	КонецЕсли;

	СтатистикаПоПоказателямКлиентСервер.ДобавитьСобытие("ПередачаОС.Печать.ОС1");
	
	Возврат ТабличныйДокумент;

КонецФункции

Процедура ЗаполнитьДанныеОрганизацииПолучателя(ПараметрыДокумента, ОбластьМакета)

	СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ПараметрыДокумента.Получатель, ПараметрыДокумента.Дата);

	ПараметрыОрганизации = Новый Структура("ОрганизацияПолучатель, АдресПолучателя, РеквПолучателя, ДолжРукПолуч, РукПолучателя, КодПоОКПОПолучателя");

	ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,");
	ПараметрыОрганизации.ОрганизацияПолучатель = ПредставлениеОрганизации;
	ПараметрыОрганизации.АдресПолучателя = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "ЮридическийАдрес,Телефоны,");
	ПараметрыОрганизации.РеквПолучателя = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НомерСчета,Банк,БИК,КоррСчет,");
	ПараметрыОрганизации.КодПоОКПОПолучателя = СведенияОбОрганизации.КодПоОКПО;

	ОтветственныеЛицаОрганизации = ОтветственныеЛицаБП.ОтветственныеЛица(ПараметрыДокумента.Получатель, ПараметрыДокумента.Дата);
	ПараметрыОрганизации.РукПолучателя = ОтветственныеЛицаОрганизации.РуководительПредставление;
	ПараметрыОрганизации.ДолжРукПолуч = ОтветственныеЛицаОрганизации.РуководительДолжностьПредставление;

	ОбластьМакета.Параметры.Заполнить(ПараметрыОрганизации);

КонецПроцедуры

// Процедура заполняет параметры организации-сдатчика формы ОС1
//
Процедура ЗаполнитьДанныеОрганизацииСдатчика(ПараметрыДокумента, ОбластьМакета)

	СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ПараметрыДокумента.Сдатчик, ПараметрыДокумента.Дата);
	ОтветственныеЛицаОрганизации = ОтветственныеЛицаБП.ОтветственныеЛица(ПараметрыДокумента.Сдатчик, ПараметрыДокумента.Дата,
		ПараметрыДокумента.ПодразделениеОрганизации);

	ПараметрыОрганизации = Новый Структура("НаимСдатчика, АдресСдатчика, РеквСдатчика, ДолжРукСдатчика, РукСдатчика, "
		+ "КодПоОКПОСдатчика, ГлавБухСдатчика");

	ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,");
	ПараметрыОрганизации.НаимСдатчика = ПредставлениеОрганизации;
	ПараметрыОрганизации.АдресСдатчика = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "ЮридическийАдрес,Телефоны,");
	ПараметрыОрганизации.РеквСдатчика = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НомерСчета,Банк,БИК,КоррСчет,");
	ПараметрыОрганизации.КодПоОКПОСдатчика = СведенияОбОрганизации.КодПоОКПО;

	ПараметрыОрганизации.РукСдатчика = ОтветственныеЛицаОрганизации.РуководительПредставление;
	ПараметрыОрганизации.ДолжРукСдатчика = ОтветственныеЛицаОрганизации.РуководительДолжностьПредставление;
	ПараметрыОрганизации.ГлавБухСдатчика = ОтветственныеЛицаОрганизации.ГлавныйБухгалтерПредставление;

	ОбластьМакета.Параметры.Заполнить(ПараметрыОрганизации);

КонецПроцедуры

#Область ОбновлениеИнформационнойБазы

Функция ИспользуемаяСтатьяПрочихДоходовРасходов() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
	|	ПрочиеДоходыИРасходы.Ссылка КАК СтатьяДоходов,
	|	ПрочиеДоходыИРасходы.Код КАК Код
	|ИЗ
	|	Документ.ПередачаОС.ОС КАК ОсновныеСредства
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПрочиеДоходыИРасходы КАК ПрочиеДоходыИРасходы
	|		ПО ОсновныеСредства.Субконто = ПрочиеДоходыИРасходы.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() <> 1 Или Не Выборка.Следующий() Тогда
		Возврат Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка();
	КонецЕсли;
	
	Возврат Выборка.СтатьяДоходов;
	
КонецФункции

#КонецОбласти

Функция ТекстЗапросаЗатратыНаРемонтОС(НомераТаблиц)
	
	НомераТаблиц.Вставить("ЗатратыНаРемонтОС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ЗатратыНаРемонтОСТаблица", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка                   КАК Регистратор,
	|	Реквизиты.Дата                     КАК Период,
	|	Реквизиты.Номер                    КАК Номер,
	|	Реквизиты.Организация              КАК Организация,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	""ОС""                             КАК ИмяСписка,
	|	Реквизиты.СобытиеОС                КАК СобытиеОС,
	|	""Списание затрат на ремонт при передаче ОС"" КАК Содержание
	|ИЗ
	|	Документ.ПередачаОС КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|ВЫБРАТЬ
	|	ТаблицаОС.Ссылка КАК Регистратор,
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.СчетРасходов КАК СчетВыбытия,
	|	ТаблицаОС.Субконто КАК Субконто1
	|ИЗ
	|	Документ.ПередачаОС.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка
	|	И ТаблицаОС.ОсновноеСредство.ЕдиницаУчета <> ЗНАЧЕНИЕ(Перечисление.ЕдиницыУчетаОС.ГрупповойОбъект)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

#КонецОбласти

#КонецЕсли