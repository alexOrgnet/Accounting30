#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает список значений, доступных по функциональным опциям.
//
// Параметры:
//   Отбор - Массив значений ПеречислениеСсылка.ВидыОперацийПоступлениеТоваровУслуг
//         или самое значение - дополнительный отбор
//
// Возвращаемое значение:
//   СписокЗначений - доступные значения
Функция СписокДоступныхЗначений(Отбор = Неопределено) Экспорт
	
	ДоступныеЗначения = ПолучитьДоступныеЗначения(Отбор, Неопределено);
	
	СписокДоступныхЗначений = Новый СписокЗначений;
	
	ОтсортированныйСписок = ОтсортированныйСписокВидовОпераций();
	
	Для Каждого ВидОперации Из ОтсортированныйСписок Цикл
		Если ДоступныеЗначения.НайтиПоЗначению(ВидОперации.Значение) <> Неопределено Тогда
			ДоступноеЗначение = СписокДоступныхЗначений.Добавить();
			ЗаполнитьЗначенияСвойств(ДоступноеЗначение, ВидОперации);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокДоступныхЗначений;

КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ПолучитьДоступныеЗначения(Параметры.Отбор, Параметры.СтрокаПоиска);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьДоступныеЗначения(Отбор, СтрокаПоиска)
	
	// Некоторые виды операций могут быть недоступны как по функциональным опциям, так и вследствие ограничений прав.
	// Права проверяем на основании доступности связанных объектов функциональности.
	Исключения = Новый Массив;
	Если Не ПолучитьФункциональнуюОпцию("ВедетсяПроизводственнаяДеятельность") Тогда
		Исключения.Добавить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку);
	КонецЕсли;
	Если Не ПолучитьФункциональнуюОпцию("ВедетсяУчетОсновныхСредств")
		 Или Не ПравоДоступа("Чтение", Метаданные.Справочники.ОсновныеСредства) Тогда
		Исключения.Добавить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Оборудование);
		Исключения.Добавить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ОбъектыСтроительства);
		Исключения.Добавить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПриобретениеЗемельныхУчастков);
		Исключения.Добавить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ОсновныеСредства);
	КонецЕсли;
	Если Не ПолучитьФункциональнуюОпцию("ВедетсяУчетЛизинговогоИмущества")
		 Или Не ПравоДоступа("Чтение", Метаданные.Документы.ПоступлениеВАренду) Тогда
		Исключения.Добавить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.УслугиЛизинга);
	КонецЕсли;
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьФакторинг") 
		 Или Не ПравоДоступа("Чтение", Метаданные.Документы.ПередачаЗадолженностиНаФакторинг) Тогда
		Исключения.Добавить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.УслугиФакторинга);
	КонецЕсли;
	Если Не ПолучитьФункциональнуюОпцию("ВедетсяУчетПоПутевымЛистам")
		 Или Не ПравоДоступа("Чтение", Метаданные.Справочники.ТранспортныеСредства) Тогда
		Исключения.Добавить(Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Топливо);
	КонецЕсли;
	
	ДоступныеЗначения = Новый СписокЗначений;
	
	// Если включен RLS, значения могут быть запрещены для выбора профилем полномочий пользователя
	РазрешенныеЗначения = УправлениеДоступом.РазрешенныеЗначенияДляДинамическогоСписка(
		"Документ.ПоступлениеТоваровУслуг",
		Тип("ПеречислениеСсылка.ВидыОперацийПоступлениеТоваровУслуг"));
	
	Для каждого ЗначениеПеречисления Из Метаданные.Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ЗначенияПеречисления Цикл
		
		Если ТипЗнч(СтрокаПоиска) = Тип("Строка")
			И НЕ ПустаяСтрока(СтрокаПоиска)
			И СтрНайти(НРег(ЗначениеПеречисления.Синоним), НРег(СтрокаПоиска)) <> 1 Тогда
			Продолжить;
		КонецЕсли;
		Ссылка = Перечисления.ВидыОперацийПоступлениеТоваровУслуг[ЗначениеПеречисления.Имя];
		Если ТипЗнч(Отбор) = Тип("ПеречислениеСсылка.ВидыОперацийПоступлениеТоваровУслуг")
			И Отбор <> Ссылка Тогда
			Продолжить;
		ИначеЕсли (ТипЗнч(Отбор) = Тип("ФиксированныйМассив") Или ТипЗнч(Отбор) = Тип("Массив"))
			И Отбор.Найти(Ссылка) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		// Если виды операций ограничены профилем полномочий пользователя, то исключаем недоступные значения
		Если РазрешенныеЗначения <> Неопределено И РазрешенныеЗначения.Найти(Ссылка) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если Исключения.Найти(Ссылка) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ДоступныеЗначения.Добавить(Ссылка, ЗначениеПеречисления.Синоним);
		
	КонецЦикла;
	
	Возврат ДоступныеЗначения;
	
КонецФункции

Функция ОтсортированныйСписокВидовОпераций()
	
	СписокВидовОпераций = Новый СписокЗначений;
	
	ВсеВидыОпераций = Перечисления.ВидыОперацийПоступлениеТоваровУслуг;
	
	СписокВидовОпераций.Добавить(ВсеВидыОпераций.Товары, НСтр("ru = 'Товары (накладная, УПД)'"));
	СписокВидовОпераций.Добавить(ВсеВидыОпераций.Услуги, НСтр("ru = 'Услуги (акт, УПД)'"));
	СписокВидовОпераций.Добавить(ВсеВидыОпераций.ПокупкаКомиссия, Строка(ВсеВидыОпераций.ПокупкаКомиссия));
	СписокВидовОпераций.Добавить(ВсеВидыОпераций.ОсновныеСредства, Строка(ВсеВидыОпераций.ОсновныеСредства));
	СписокВидовОпераций.Добавить(ВсеВидыОпераций.ВПереработку, Строка(ВсеВидыОпераций.ВПереработку));
	СписокВидовОпераций.Добавить(ВсеВидыОпераций.УслугиАренды, Строка(ВсеВидыОпераций.УслугиАренды));
	СписокВидовОпераций.Добавить(ВсеВидыОпераций.УслугиЛизинга, Строка(ВсеВидыОпераций.УслугиЛизинга));
	СписокВидовОпераций.Добавить(ВсеВидыОпераций.УслугиФакторинга, Строка(ВсеВидыОпераций.УслугиФакторинга));
	СписокВидовОпераций.Добавить(ВсеВидыОпераций.Оборудование, Строка(ВсеВидыОпераций.Оборудование));
	СписокВидовОпераций.Добавить(ВсеВидыОпераций.ОбъектыСтроительства, Строка(ВсеВидыОпераций.ОбъектыСтроительства));
	СписокВидовОпераций.Добавить(ВсеВидыОпераций.ПриобретениеЗемельныхУчастков, Строка(ВсеВидыОпераций.ПриобретениеЗемельныхУчастков));
	СписокВидовОпераций.Добавить(ВсеВидыОпераций.Топливо, Строка(ВсеВидыОпераций.Топливо));
	
	Возврат СписокВидовОпераций;
	
КонецФункции

#КонецОбласти

#КонецЕсли