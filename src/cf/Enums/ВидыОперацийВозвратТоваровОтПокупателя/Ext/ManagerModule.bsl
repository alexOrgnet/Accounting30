
#Область ПрограммныйИнтерфейс

// Возвращает список значений, доступных по функциональным опциям.
//
// Параметры:
//   Отбор - Массив значений ПеречислениеСсылка.ВидыОперацийВозвратТоваровОтПокупателя
//         или самое значение - дополнительный отбор
//
// Возвращаемое значение:
//   СписокЗначений - доступные значения
Функция СписокДоступныхЗначений(Отбор = Неопределено) Экспорт
	
	ДоступныеЗначения = ПолучитьДоступныеЗначения(Отбор, Неопределено);
	
	СписокДоступныхЗначений = Новый СписокЗначений;
	
	ОтсортированныйСписок = ОтсортированныйСписокВидовОпераций();
	
	Для Каждого ВидОперации Из ОтсортированныйСписок Цикл
		Если ДоступныеЗначения.НайтиПоЗначению(ВидОперации.Значение) <> Неопределено Тогда
			ДоступноеЗначение = СписокДоступныхЗначений.Добавить();
			ЗаполнитьЗначенияСвойств(ДоступноеЗначение, ВидОперации);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокДоступныхЗначений;

КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора         = ПолучитьДоступныеЗначения(Параметры.Отбор, Параметры.СтрокаПоиска);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьДоступныеЗначения(Отбор, СтрокаПоиска)
	
	Исключения = Новый Массив;
	Если НЕ ПолучитьФункциональнуюОпцию("ВедетсяОтгрузкаБезПереходаПраваСобственности") Тогда
		Исключения.Добавить(Перечисления.ВидыОперацийВозвратТоваровОтПокупателя.ОтгруженныеТовары);
	КонецЕсли;
	Если НЕ ПолучитьФункциональнуюОпцию("ВедетсяУчетОсновныхСредств") Тогда
		Исключения.Добавить(Перечисления.ВидыОперацийВозвратТоваровОтПокупателя.Оборудование);
	КонецЕсли;
	Если (НЕ ПолучитьФункциональнуюОпцию("ИспользоватьПродажиЧерезМаркетплейс"))
		И (НЕ ПолучитьФункциональнуюОпцию("ОсуществляетсяРеализацияТоваровУслугЧерезКомиссионеров")) Тогда
		Исключения.Добавить(Перечисления.ВидыОперацийВозвратТоваровОтПокупателя.ПереданныеТовары);
		Исключения.Добавить(Перечисления.ВидыОперацийВозвратТоваровОтПокупателя.ВыкупленныеКомиссионеромТовары);
	КонецЕсли;
	
 	ДоступныеЗначения = Новый СписокЗначений;
	
	Для каждого ЗначениеПеречисления Из Метаданные.Перечисления.ВидыОперацийВозвратТоваровОтПокупателя.ЗначенияПеречисления Цикл
		
		Если ТипЗнч(СтрокаПоиска) = Тип("Строка")
			И НЕ ПустаяСтрока(СтрокаПоиска)
			И СтрНайти(НРег(ЗначениеПеречисления.Синоним), НРег(СтрокаПоиска)) <> 1 Тогда
			Продолжить;
		КонецЕсли;
		Ссылка = Перечисления.ВидыОперацийВозвратТоваровОтПокупателя[ЗначениеПеречисления.Имя];
		Если ТипЗнч(Отбор) = Тип("ПеречислениеСсылка.ВидыОперацийВозвратТоваровОтПокупателя")
			И Отбор <> Ссылка Тогда
			Продолжить;
		ИначеЕсли (ТипЗнч(Отбор) = Тип("ФиксированныйМассив") Или ТипЗнч(Отбор) = Тип("Массив"))
			И Отбор.Найти(Ссылка) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Если Исключения.Найти(Ссылка) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ДоступныеЗначения.Добавить(Ссылка, ЗначениеПеречисления.Синоним);
		
	КонецЦикла;
	
	Возврат ДоступныеЗначения;
	
КонецФункции

Функция ОтсортированныйСписокВидовОпераций()
	
	СписокВидовОпераций = Новый СписокЗначений;
	
	ВсеВидыОпераций = Перечисления.ВидыОперацийВозвратТоваровОтПокупателя;
	
	СписокВидовОпераций.Добавить(ВсеВидыОпераций.Товары, Строка(ВсеВидыОпераций.Товары));
	СписокВидовОпераций.Добавить(ВсеВидыОпераций.ОтгруженныеТовары, Строка(ВсеВидыОпераций.ОтгруженныеТовары));
	СписокВидовОпераций.Добавить(ВсеВидыОпераций.ПереданныеТовары, Строка(ВсеВидыОпераций.ПереданныеТовары));
	СписокВидовОпераций.Добавить(ВсеВидыОпераций.ВыкупленныеКомиссионеромТовары, Строка(ВсеВидыОпераций.ВыкупленныеКомиссионеромТовары));
	СписокВидовОпераций.Добавить(ВсеВидыОпераций.Оборудование, Строка(ВсеВидыОпераций.Оборудование));
	
	Возврат СписокВидовОпераций;
	
КонецФункции

#КонецОбласти
