#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает сумму расходов, уменьшающих налог по ЕНВД.
//
// Параметры:
//   Организация - СправочникСсылка.Организации - головная организация.
//   Период - Дата - период расчета ЕНВД.
//   РегистрацияВНалоговомОргане - Массив - массив с регистрациями по которым необходимо получить расходы.
//                               - СправочникСсылка.РегистрацияВНалоговомОргане - регистрация по которой необходимо получить расходы.
//
// Возвращаемое значение:
//   Структура - см. НовыйРасходыУменьшающиеЕНВД
//
Функция РасходыЕНВДЗаКвартал(Организация, Период, РегистрацияВНалоговомОргане = Неопределено) Экспорт
	
	СтруктураРасходов = НовыйРасходыУменьшающиеЕНВД();
	
	НачалоПериода = НачалоКвартала(Период);
	КонецПериода  = КонецКвартала(Период);
	
	Если Не УчетнаяПолитика.ПлательщикЕНВДЗаПериод(Организация, НачалоПериода, КонецПериода) Тогда
		Возврат СтруктураРасходов;
	КонецЕсли;
	
	Запрос = Новый Запрос;

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РасходыУменьшающиеНалогПоОтдельнымРежимамОбороты.СчетУчета,
	|	РасходыУменьшающиеНалогПоОтдельнымРежимамОбороты.СуммаРасходаЕНВДОборот КАК СуммаРасходаЕНВД
	|ИЗ
	|	РегистрНакопления.РасходыУменьшающиеНалогПоОтдельнымРежимам.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Организация = &Организация
	|				И &УсловиеПоРегистрацииВНалоговомОргане) КАК РасходыУменьшающиеНалогПоОтдельнымРежимамОбороты";
		
	
	Если ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда
	
		Если ТипЗнч(РегистрацияВНалоговомОргане) = Тип("Массив") Тогда
			РегистрацииВНалоговыхОрганах = РегистрацияВНалоговомОргане;
		Иначе
			РегистрацииВНалоговыхОрганах = Новый Массив;
			РегистрацииВНалоговыхОрганах.Добавить(РегистрацияВНалоговомОргане);
		КонецЕсли;
	
		Запрос.УстановитьПараметр("РегистрацииВНалоговыхОрганах", РегистрацииВНалоговыхОрганах);
		
		УсловиеПоРегистрацииВНалоговомОргане = "РегистрацияВНалоговомОргане В(&РегистрацииВНалоговыхОрганах)";
		
	Иначе
		
		УсловиеПоРегистрацииВНалоговомОргане = "ИСТИНА";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоРегистрацииВНалоговомОргане", УсловиеПоРегистрацииВНалоговомОргане);

	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат СтруктураРасходов;
	КонецЕсли;
	
	ТаблицаСчетов = УчетРасходовУменьшающихОтдельныеНалоги.СчетаРасходовУменьшающихНалог();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокиТаблицыСчетов = ТаблицаСчетов.НайтиСтроки(Новый Структура("СчетУчета", Выборка.СчетУчета));
		Если СтрокиТаблицыСчетов.Количество() <> 0 Тогда
			ВидРасхода = СтрокиТаблицыСчетов[0].ВидРасходов;
			Если СтруктураРасходов.Свойство(ВидРасхода) Тогда
				СтруктураРасходов[ВидРасхода]= СтруктураРасходов[ВидРасхода] + Выборка.СуммаРасходаЕНВД;
			КонецЕсли;
		Иначе
			СтруктураРасходов["ДобровольноеСтрахование"]= СтруктураРасходов["ДобровольноеСтрахование"] + Выборка.СуммаРасходаЕНВД;
		КонецЕсли;
		
	КонецЦикла;
		
	Возврат СтруктураРасходов;
	
КонецФункции

// Возвращает сумму расходов, уменьшающих налог за последний налоговый период действия ЕНВД
// с учетом расходов, оплаченных после прекращения действия ЕНВД.
//
// Параметры:
//   Организация - СправочникСсылка.Организации - головная организация.
//   Период - Дата - период расчета ЕНВД.
//   РегистрацияВНалоговомОргане - Массив - массив с регистрациями по которым необходимо получить расходы.
//                               - СправочникСсылка.РегистрацияВНалоговомОргане - регистрация по которой необходимо получить расходы.
//
// Возвращаемое значение:
//   Структура - см. НовыйРасходыУменьшающиеЕНВД
//
Функция РасходыУменьшающиеЕНВДПослеОтмены(Организация, Период, РегистрацияВНалоговомОргане) Экспорт
	
	Результат = НовыйРасходыУменьшающиеЕНВД();
	
	Если Не УчетЕНВДКлиентСервер.ЭтоПоследнийНалоговыйПериод(Период) Тогда
		Возврат Результат;
	КонецЕсли;
	
	НачалоПериода = НачалоКвартала(Период);
	КонецПериода  = КонецКвартала(Период);
	
	Если Не УчетнаяПолитика.ПлательщикЕНВДЗаПериод(Организация, НачалоПериода, КонецПериода) Тогда
		Возврат Результат;
	КонецЕсли;
	
	// Определим суммы уменьшающих расходов.
	
	Запрос = Новый Запрос;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РасходыУменьшающиеНалогПоОтдельнымРежимамОбороты.СчетУчета КАК СчетУчета,
	|	РасходыУменьшающиеНалогПоОтдельнымРежимамОбороты.СуммаРасходаЕНВДОборот КАК СуммаРасходаЕНВД
	|ИЗ
	|	РегистрНакопления.РасходыУменьшающиеНалогПоОтдельнымРежимам.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Организация = &Организация
	|				И РегистрацияВНалоговомОргане В (&РегистрацииВНалоговыхОрганах)) КАК РасходыУменьшающиеНалогПоОтдельнымРежимамОбороты";
	
	Если ТипЗнч(РегистрацияВНалоговомОргане) = Тип("Массив") Тогда
		РегистрацииВНалоговыхОрганах = РегистрацияВНалоговомОргане;
	Иначе
		РегистрацииВНалоговыхОрганах = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(РегистрацияВНалоговомОргане);
	КонецЕсли;
	
	ПериодУменьшенияЕНВДПослеОтмены = УчетЕНВД.ПериодУменьшенияЕНВДПослеОтмены(Организация);
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("РегистрацииВНалоговыхОрганах", РегистрацииВНалоговыхОрганах);
	Запрос.УстановитьПараметр("НачалоПериода", ПериодУменьшенияЕНВДПослеОтмены.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", ПериодУменьшенияЕНВДПослеОтмены.КонецПериода);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаСчетов = УчетРасходовУменьшающихОтдельныеНалоги.СчетаРасходовУменьшающихНалог();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокиТаблицыСчетов = ТаблицаСчетов.НайтиСтроки(Новый Структура("СчетУчета", Выборка.СчетУчета));
		Если СтрокиТаблицыСчетов.Количество() <> 0 Тогда
			ВидРасхода = СтрокиТаблицыСчетов[0].ВидРасходов;
			Если Результат.Свойство(ВидРасхода) Тогда
				Результат[ВидРасхода]= Результат[ВидРасхода] + Выборка.СуммаРасходаЕНВД;
			КонецЕсли;
		Иначе
			Результат["ДобровольноеСтрахование"]= Результат["ДобровольноеСтрахование"] + Выборка.СуммаРасходаЕНВД;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Возвращает расходы, уменьшающие сумму платежей по патентам, за заданный период
//
// Параметры:
//  Организация - СправочникСсылка.Организации
//  НачалоПериода - Дата
//  ОкончаниеПериода - Дата
//
Функция РасходыПСНЗаПериод(Организация, Знач НачалоПериода, Знач ОкончаниеПериода) Экспорт
	
	НачалоПериода = НачалоГода(НачалоПериода);
	ОкончаниеПериода = КонецДня(ОкончаниеПериода);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(РасходыУменьшающиеНалогПоОтдельнымРежимамОбороты.СуммаРасходаПСНОборот, 0) КАК Сумма
		|ИЗ
		|	РегистрНакопления.РасходыУменьшающиеНалогПоОтдельнымРежимам.Обороты(&ДатаНачала, &ДатаОкончания, , Организация = &Организация) КАК РасходыУменьшающиеНалогПоОтдельнымРежимамОбороты";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоПериода);
	Запрос.УстановитьПараметр("ДатаОкончания", ОкончаниеПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Цел(Выборка.Сумма);
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

// При необходимости приводит к текущей дате дату на которую проверяются расходы
//
// Параметры:
//  Период - дата
//
Функция ДатаПроверкиРасходовПоПатентам(Период) Экспорт
	
	ТекущаяДата = ОбщегоНазначения.ТекущаяДатаПользователя();
	Если Год(ТекущаяДата) > Год(Период) Тогда
		ДатаПроверкиРасходов = КонецГода(Период);
	ИначеЕсли Год(ТекущаяДата) < Год(Период) Тогда
		ДатаПроверкиРасходов = НачалоГода(Период);
	Иначе
		ДатаПроверкиРасходов = ТекущаяДата;
	КонецЕсли;
	
	Возврат ДатаПроверкиРасходов;
	
КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НовыйРасходыУменьшающиеЕНВД()
	
	СтруктураРасходов = Новый Структура;
	СтруктураРасходов.Вставить("СтраховыеВзносы", 0);
	СтруктураРасходов.Вставить("ФиксированныеВзносыИП", 0);
	СтруктураРасходов.Вставить("Больничные", 0);
	СтруктураРасходов.Вставить("ДобровольноеСтрахование", 0);
	
	Возврат СтруктураРасходов;
	
КонецФункции

#КонецОбласти

#Область УстаревшиеПроцедурыИФункции

// Устарела. Следует использовать 
Функция РасходыПСНЗаГод(Организация, Период) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(РасходыУменьшающиеНалогПоОтдельнымРежимамОбороты.СуммаРасходаПСНОборот, 0) КАК Сумма
		|ИЗ
		|	РегистрНакопления.РасходыУменьшающиеНалогПоОтдельнымРежимам.Обороты(&ДатаНачала, &ДатаОкончания, , Организация = &Организация) КАК РасходыУменьшающиеНалогПоОтдельнымРежимамОбороты";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоГода(Период));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецГода(Период));
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Сумма;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецЕсли