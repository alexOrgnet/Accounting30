
#Область СлужебныйПрограммныйИнтерфейс

Процедура ОбработкаВыбораРНПТН(Форма, ИдентификаторСтроки, ВыбранноеЗначение) Экспорт
	
	Объект = Форма.Объект;
	
	Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.КорректировкаПоступления")
		ИЛИ ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		СтруктураОтбора = Новый Структура("ИдентификаторСтроки, ЭтоСтрокаСИсходнымиРНПТ",
			ИдентификаторСтроки, ВыбранноеЗначение.ЭтоИсходныеРНПТ);
	Иначе
		СтруктураОтбора = Новый Структура("ИдентификаторСтроки", ИдентификаторСтроки);
	КонецЕсли;
	СтрокиСРНПТ = Объект.СведенияПрослеживаемости.НайтиСтроки(СтруктураОтбора);
	
	Для Каждого СтрокаСРНПТ Из СтрокиСРНПТ Цикл
		Объект.СведенияПрослеживаемости.Удалить(СтрокаСРНПТ);
	КонецЦикла;
		
	ПодобранныеРНПТ = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресТаблицыРНПТВХранилище);
	Для Каждого НовыйРНПТ Из ПодобранныеРНПТ Цикл
		НоваяСтрока = Объект.СведенияПрослеживаемости.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, НовыйРНПТ);
		НоваяСтрока.ИдентификаторСтроки = ИдентификаторСтроки;
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьПредставлениеНадписиУведомлениеОВвозе(Форма) Экспорт
	
	СписокУведомлений = СписокУведомленийОВвозе(Форма);
	
	Форма.СписокУведомлений        = СписокУведомлений;
	Форма.НадписьУведомлениеОВвозе = ПредставлениеУведомлений(СписокУведомлений);

КонецПроцедуры

Процедура УстановитьПредставлениеНадписиУведомлениеОбОстатках(Форма) Экспорт
	
	СписокУведомлений = СписокУведомленийОбОстатках(Форма);
	
	Форма.СписокУведомлений        = СписокУведомлений;
	Форма.НадписьУведомлениеОбОстатках = ПредставлениеУведомлений(СписокУведомлений, Истина);

КонецПроцедуры

Процедура УстановитьПредставлениеНадписиУведомлениеОбОстаткахВВозвратеОтПокупателя(Форма) Экспорт
	
	РеализацияВЕАЭС = Форма.РеализацияВЕАЭС;
	
	Если РеализацияВЕАЭС Тогда
		
		СписокУведомлений = СписокКорректировочныхУведомленийОПеремещении(Форма);
		
	Иначе
		
		СписокУведомлений = СписокУведомленийОбОстатках(Форма);
		
	КонецЕсли;	
	
	Форма.СписокУведомлений        = СписокУведомлений;
	Форма.НадписьУведомлениеОбОстатках = ПредставлениеУведомлений(
															СписокУведомлений,
															,
															НЕ Форма.РеализацияВЕАЭС,
															Форма.РеализацияВЕАЭС);

КонецПроцедуры

Процедура УстановитьПредставлениеНадписиУведомлениеОПеремещении(Форма) Экспорт
	
	НайденноеУведомление = НайтиУведомлениеОПеремещении(Форма);
		
	Если ЗначениеЗаполнено(НайденноеУведомление) Тогда
		
		ПредставлениеДокумента = ПрослеживаемостьПереопределяемый.ПредставлениеДокумента(НайденноеУведомление);
		
		НадписьУведомлениеОПеремещении = Новый ФорматированнаяСтрока(ПредставлениеДокумента, , , , "ссылка");
		
	Иначе
		
		НадписьУведомлениеОПеремещении = Новый ФорматированнаяСтрока(
			НСтр("ru = 'Создать уведомление о перемещении прослеживаемых товаров'"),,ЦветаСтиля.ЦветОсобогоТекста,,"ссылка");
	
	КонецЕсли;
	
	Форма.УведомлениеОПеремещении  = НайденноеУведомление;
	Форма.НадписьУведомлениеОПеремещении = НадписьУведомлениеОПеремещении;

КонецПроцедуры

Процедура УстановитьПредставлениеНадписиКорректировочныхУведомленийОВвозе(Форма) Экспорт
	
	СписокУведомлений = НайтиКорректировочныеУведомленияОВвозе(Форма);
	
	Если СписокУведомлений = Неопределено Тогда
		Форма.НадписьКорректировочноеУведомлениеОВвозе = Новый ФорматированнаяСтрока(НСтр("ru = 'Просмотр не доступен'"));
		Возврат;
	КонецЕсли;
	
	Форма.СписокУведомлений = СписокУведомлений;
	Форма.НадписьКорректировочноеУведомлениеОВвозе = ПредставлениеУведомлений(СписокУведомлений, Истина);

КонецПроцедуры

Процедура ПересчитатьСуммыВВалютеПоКомплектам(Форма) Экспорт
	
	Объект = Форма.Объект;
	ЭтоПродажаОС = ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ПередачаОС");
	ВалютаДоИзменения    = Объект.ВалютаДокумента;
	КурсДоИзменения      = Объект.КурсВзаиморасчетов;
	КратностьДоИзменения = Объект.КратностьВзаиморасчетов;

	РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		Объект.ДоговорКонтрагента,
		"ВалютаВзаиморасчетов, РасчетыВУсловныхЕдиницах");
	ВалютаВзаиморасчетов  = РеквизитыДоговора.ВалютаВзаиморасчетов;
	Если ВалютаДоИзменения <> ВалютаВзаиморасчетов Тогда
		СтруктураКурсаДокумента        = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаВзаиморасчетов, Объект.Дата);
		КурсВзаиморасчетов      = СтруктураКурсаДокумента.Курс;
		КратностьВзаиморасчетов = СтруктураКурсаДокумента.Кратность;
		
		Если КурсДоИзменения <> 0 И КратностьДоИзменения <> 0 Тогда
			СтруктураКурса = Новый Структура("Курс, Кратность", КурсДоИзменения, КратностьДоИзменения);
		Иначе
			СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаДоИзменения, Объект.Дата);
		КонецЕсли;

		Для Каждого Строка Из Объект.СведенияПрослеживаемости Цикл
			Если Строка.Сумма <> 0 Тогда
				Строка.Сумма = РаботаСКурсамиВалютБПКлиентСервер.ПересчитатьИзВалютыВВалюту(
					Строка.Сумма, ВалютаДоИзменения, ВалютаВзаиморасчетов, СтруктураКурса.Курс,
					КурсВзаиморасчетов, СтруктураКурса.Кратность, КратностьВзаиморасчетов);
				КонецЕсли;
				Если ЭтоПродажаОС И Строка.СуммаНДС <> 0 Тогда
					Строка.СуммаНДС = РаботаСКурсамиВалютБПКлиентСервер.ПересчитатьИзВалютыВВалюту(
						Строка.СуммаНДС, ВалютаДоИзменения, ВалютаВзаиморасчетов, СтруктураКурса.Курс,
						КурсВзаиморасчетов, СтруктураКурса.Кратность, КратностьВзаиморасчетов);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область УведомленияОПеремещении

// Проверяет наличие  Уведомление о перемещении прослеживаемых товаров введенных на основании указанного документа
//
// Параметры:
//  Документ - ДокументСсылка, Документ основание, по которому проверяется  существование Уведомлений о перемещении
//
// Возвращаемые параметры:
// - Булево - Истина, если на основании документа введены уведомления о перемещении
//
Функция НайтиУведомлениеОПеремещении(Форма)
	
	Если Не ПравоДоступа("Чтение", Метаданные.Документы.УведомлениеОПеремещенииПрослеживаемыхТоваров) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Документ", Форма.Объект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.Товары КАК УведомлениеОПеремещенииПрослеживаемыхТоваровТовары
	|ГДЕ
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.СопроводительныйДокумент = &Документ
	|	И УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.Ссылка.Проведен";
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Результат.Ссылка;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция НайтиКорректировочныеУведомленияОВвозе(Форма)
	
	СписокУведомлений = Новый СписокЗначений;
	
	Если Не ПравоДоступа("Чтение", Метаданные.Документы.УведомлениеОВвозеПрослеживаемыхТоваров) Тогда
		Возврат Неопределено;
	КонецЕсли;
		
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Документ", Форма.Объект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Ссылка КАК КорректировочноеУведомлениеОВвозе,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Номер КАК Номер,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Дата КАК Дата
	|ИЗ
	|	Документ.УведомлениеОВвозеПрослеживаемыхТоваров КАК УведомлениеОВвозеПрослеживаемыхТоваров
	|ГДЕ
	|	УведомлениеОВвозеПрослеживаемыхТоваров.ОснованиеКорректировки = &Документ
	|	И УведомлениеОВвозеПрослеживаемыхТоваров.Проведен
	|	И УведомлениеОВвозеПрослеживаемыхТоваров.НомерКорректировки > 0
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Уведомления = Запрос.Выполнить().Выгрузить();
	ШаблонПредставления = НСтр("ru = '%1 №%2 от %3'");
	Для Каждого Уведомление Из Уведомления Цикл
		
		Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонПредставления,
			НСтр("ru = 'Корректировочное уведомление о ввозе прослеживаемых товаров'"),
			ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Уведомление.Номер, Истина, Ложь),
			Формат(Уведомление.Дата, "ДЛФ=Д"));
		
		СписокУведомлений.Добавить(Уведомление.КорректировочноеУведомлениеОВвозе, Представление);
		
	КонецЦикла;
	
	Возврат СписокУведомлений;
	
КонецФункции

#КонецОбласти

Функция СписокУведомленийОВвозе(Форма)
	
	СписокУведомлений = Новый СписокЗначений;
	
	Если Не ПравоДоступа("Чтение", Метаданные.Документы.УведомлениеОВвозеПрослеживаемыхТоваров) Тогда
		Возврат СписокУведомлений;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Форма.Объект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Ссылка КАК УведомлениеОВвозе,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Номер КАК Номер,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Дата КАК Дата,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.НомерКорректировки КАК НомерКорректировки
	|ИЗ
	|	Документ.УведомлениеОВвозеПрослеживаемыхТоваров КАК УведомлениеОВвозеПрослеживаемыхТоваров
	|ГДЕ
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Проведен
	|	И УведомлениеОВвозеПрослеживаемыхТоваров.ПервичныйДокумент = &Ссылка
	|	И УведомлениеОВвозеПрослеживаемыхТоваров.НомерКорректировки = 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Ссылка,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Номер,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Дата,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.НомерКорректировки
	|ИЗ
	|	Документ.УведомлениеОВвозеПрослеживаемыхТоваров КАК УведомлениеОВвозеПрослеживаемыхТоваров
	|ГДЕ
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Проведен
	|	И УведомлениеОВвозеПрослеживаемыхТоваров.ПервичныйДокумент = &Ссылка
	|	И УведомлениеОВвозеПрослеживаемыхТоваров.НомерКорректировки > 0
	|	И УведомлениеОВвозеПрослеживаемыхТоваров.ПервичныйДокумент = УведомлениеОВвозеПрослеживаемыхТоваров.ОснованиеКорректировки
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Уведомления = Запрос.Выполнить().Выгрузить();
	ШаблонПредставления = НСтр("ru = '%1 №%2 от %3'");
	Для Каждого Уведомление Из Уведомления Цикл
		
		Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонПредставления,
			Уведомление.УведомлениеОВвозе.Метаданные().Представление(),
			ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Уведомление.Номер, Истина, Ложь),
			Формат(Уведомление.Дата, "ДЛФ=Д"));
			
		Если Уведомление.НомерКорректировки > 0 Тогда
			Представление = НазваниеУведомленияПоПредставлению(Представление);
		КонецЕсли;
			
		СписокУведомлений.Добавить(Уведомление.УведомлениеОВвозе, Представление);
		
	КонецЦикла;
	
	Возврат СписокУведомлений;
	
КонецФункции

Функция СписокУведомленийОбОстатках(Форма)
	
	СписокУведомлений = Новый СписокЗначений;
	
	Если Не ПравоДоступа("Чтение", Метаданные.Документы.УведомлениеОбОстаткахПрослеживаемыхТоваров) Тогда
		Возврат СписокУведомлений;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Форма.Объект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Ссылка КАК УведомлениеОВвозе,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Номер КАК Номер,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Дата КАК Дата,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки КАК НомерКорректировки
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров КАК УведомлениеОбОстаткахПрослеживаемыхТоваров
	|ГДЕ
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Проведен
	|	И УведомлениеОбОстаткахПрослеживаемыхТоваров.ПервичныйДокумент = &Ссылка
	|	И УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки = 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Ссылка,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Номер,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Дата,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров КАК УведомлениеОбОстаткахПрослеживаемыхТоваров
	|ГДЕ
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Проведен
	|	И УведомлениеОбОстаткахПрослеживаемыхТоваров.ПервичныйДокумент = &Ссылка
	|	И УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки > 0
	|	И УведомлениеОбОстаткахПрослеживаемыхТоваров.ПервичныйДокумент = УведомлениеОбОстаткахПрослеживаемыхТоваров.ОснованиеКорректировки
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Уведомления = Запрос.Выполнить().Выгрузить();
	ШаблонПредставления = НСтр("ru = '%1 №%2 от %3'");
	Для Каждого Уведомление Из Уведомления Цикл
		
		Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонПредставления,
			Уведомление.УведомлениеОВвозе.Метаданные().Представление(),
			ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Уведомление.Номер, Истина, Ложь),
			Формат(Уведомление.Дата, "ДЛФ=Д"));
			
		Если Уведомление.НомерКорректировки > 0 Тогда
			Представление = НазваниеУведомленияПоПредставлению(Представление);
		КонецЕсли;
			
		СписокУведомлений.Добавить(Уведомление.УведомлениеОВвозе, Представление);
		
	КонецЦикла;
	
	Возврат СписокУведомлений;
	
КонецФункции

Функция НазваниеУведомленияПоПредставлению(Представление)
	
	Возврат СтрЗаменить(
						Представление, 
						НСтр("ru='Уведомление'"), 
						НСтр("ru='Корректировочное уведомление'")
						);

КонецФункции
							
Функция ПредставлениеУведомлений(СписокУведомлений, ЭтоКорректировочноеУведомлениеОВвозе = Ложь,
			ЭтоУведомлениеОбОСтатках = Ложь, ЭтоКорректировочноеУведомлениеОПеремещении = Ложь)
			
	Если СписокУведомлений.Количество() = 0 Тогда
				
		Если Не ЭтоУведомлениеОбОСтатках И НЕ ЭтоКорректировочноеУведомлениеОПеремещении Тогда
		
			Если ЭтоКорректировочноеУведомлениеОВвозе Тогда
			
				ПредставлениеУведомлений = Новый ФорматированнаяСтрока(
					НСтр("ru = 'Создать корректировочное уведомление о ввозе прослеживаемых товаров'")
					,,ЦветаСтиля.ЦветОсобогоТекста,,"ссылка");
			Иначе
			
				ПредставлениеУведомлений = Новый ФорматированнаяСтрока(
					НСтр("ru = 'Создать уведомление о ввозе прослеживаемых товаров'"),,ЦветаСтиля.ЦветОсобогоТекста,,"ссылка");
			КонецЕсли;
		
		ИначеЕсли ЭтоКорректировочноеУведомлениеОПеремещении Тогда
		
			ПредставлениеУведомлений = Новый ФорматированнаяСтрока(
				НСтр("ru = 'Создать корректировочное уведомление о перемещении прослеживаемых товаров'"),,ЦветаСтиля.ЦветОсобогоТекста,,"ссылка");
				
		ИначеЕсли НЕ ЭтоКорректировочноеУведомлениеОВвозе Тогда
		
			ПредставлениеУведомлений = Новый ФорматированнаяСтрока(
					НСтр("ru = 'Создать уведомление об остатках прослеживаемых товаров'"),,ЦветаСтиля.ЦветОсобогоТекста,,"ссылка");
				
		КонецЕсли;			
				
	ИначеЕсли СписокУведомлений.Количество() = 1 Тогда
		
		ПредставлениеДокумента = СписокУведомлений[0].Представление;
		ПредставлениеДокумента = СтрЗаменить(ПредставлениеДокумента, " № ", " ");
		
		Если ЭтоКорректировочноеУведомлениеОВвозе Тогда
			
			ПредставлениеДокумента = НазваниеУведомленияПоПредставлению(ПредставлениеДокумента);
			
		КонецЕсли;
		
		ПредставлениеУведомлений = Новый ФорматированнаяСтрока(ПредставлениеДокумента, , , , "ссылка");
		
	Иначе
		
		ПредставлениеДокумента = Лев(СписокУведомлений[0].Представление,
			СтрНайти(СписокУведомлений[0].Представление, "№")-2);
		
		Если ЭтоКорректировочноеУведомлениеОВвозе Тогда
			
			ПредставлениеДокумента = НазваниеУведомленияПоПредставлению(ПредставлениеДокумента);
			
		КонецЕсли;
		
		ПредставлениеКоличества = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '(%1 %2)'"),
				СписокУведомлений.Количество(),
				СтрокаСЧислом("; документ; ; документа; документов; документа",
					СписокУведомлений.Количество(),
					ВидЧисловогоЗначения.Количественное,
					"L=ru_RU"));
					
		ПредставлениеДокументов  = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '%1 %2'"),
			ПредставлениеДокумента,
			ПредставлениеКоличества);
			
		ПредставлениеУведомлений = Новый ФорматированнаяСтрока(ПредставлениеДокументов,, , , "ссылка");
		
	КонецЕсли;
	
	Возврат ПредставлениеУведомлений;
	
КонецФункции

Функция СписокКорректировочныхУведомленийОПеремещении(Форма)
	
	СписокУведомлений = Новый СписокЗначений;
	
	Если Не ПравоДоступа("Чтение", Метаданные.Документы.УведомлениеОПеремещенииПрослеживаемыхТоваров) Тогда
		Возврат СписокУведомлений;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Форма.Объект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УведомлениеОПеремещенииПрослеживаемыхТоваров.Ссылка КАК УведомлениеОВвозе,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваров.Номер КАК Номер,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваров.Дата КАК Дата,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваров.НомерКорректировки КАК НомерКорректировки
	|ИЗ
	|	Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.КорректировочныеДокументы КАК УведомлениеОПеремещенииПрослеживаемыхТоваровКорректировочныеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров КАК УведомлениеОПеремещенииПрослеживаемыхТоваров
	|		ПО УведомлениеОПеремещенииПрослеживаемыхТоваровКорректировочныеДокументы.Ссылка = УведомлениеОПеремещенииПрослеживаемыхТоваров.Ссылка
	|ГДЕ
	|	НЕ УведомлениеОПеремещенииПрослеживаемыхТоваров.ПометкаУдаления
	|	И УведомлениеОПеремещенииПрослеживаемыхТоваровКорректировочныеДокументы.Документ = &Ссылка
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Уведомления = Запрос.Выполнить().Выгрузить();
	ШаблонПредставления = НСтр("ru = '%1 №%2 от %3'");
	Для Каждого Уведомление Из Уведомления Цикл
		
		Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонПредставления,
			Уведомление.УведомлениеОВвозе.Метаданные().Представление(),
			ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Уведомление.Номер, Истина, Ложь),
			Формат(Уведомление.Дата, "ДЛФ=Д"));
			
		Если Уведомление.НомерКорректировки > 0 Тогда
			Представление = НазваниеУведомленияПоПредставлению(Представление);
		КонецЕсли;
			
		СписокУведомлений.Добавить(Уведомление.УведомлениеОВвозе, Представление);
		
	КонецЦикла;
	
	Возврат СписокУведомлений;
	
КонецФункции

#КонецОбласти
