
//Получает значение реквизитов
//Параметры: 
//			-Номенклатура Тип("СправочникСсылка.Номенклатура")
//			-СписокРеквизитов Тип("Строка")
//
//Возвращаемое значение: ЗначениеРеквизитовНоменклатуры Тип("Структура")
//
Функция РеквизитыНоменклатуры(Знач Номенклатура, СписокРеквизитов) Экспорт
	
	Если Не ЗначениеЗаполнено(Номенклатура) Тогда
		Возврат Новый Структура(СписокРеквизитов);
	Иначе
		ЗначенияРеквизитовНоменклатуры = Новый Структура;
	КонецЕсли;
		
	ТекстЗапроса = "ВЫБРАТЬ
	|	&РеквизитыНоменклатуры КАК РеквизитыНоменклатуры,
	|	Номенклатура.Ссылка КАК Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка = &Номенклатура";
	ТекстРеквизиты = Новый Массив;
	РеквизитыНоменклатуры = СтрРазделить(СписокРеквизитов, ",");
	Для каждого РеквизитНоменклатуры Из РеквизитыНоменклатуры Цикл
		ТекстРеквизиты.Добавить(СтрШаблон("	Номенклатура.%1 КАК %1,", РеквизитНоменклатуры));
	КонецЦикла;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
		"	&РеквизитыНоменклатуры КАК РеквизитыНоменклатуры,", СтрСоединить(ТекстРеквизиты, Символы.ПС));
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		ЗначенияРеквизитовНоменклатуры.Вставить(Колонка.Имя, Результат[0][Колонка.Имя]);			
	КонецЦикла;
	
	Возврат ЗначенияРеквизитовНоменклатуры
	
КонецФункции

//Функция получает значение реквизита объекта
//Параметры:
//			-Объект Тип("Произвольный")
//			-Имяреквизита Тип("Строка")
//
//Возвращаемое значение: ЗначениеРеквизитаОбъекта Тип("Произвольный")
//
Функция ЗначениеРеквизитаОбъекта(Объект, ИмяРеквизита) Экспорт
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект, ИмяРеквизита);
	
КонецФункции

Функция ВалютаРегламентированногоУчета() Экспорт
	
	Возврат Константы.ВалютаРегламентированногоУчета.Получить();
	
КонецФункции

Функция ПолучитьРеквизитыДокументаОснования(ДокументСсылка, СписокРеквизитов) Экспорт
	
	Реквизиты = Новый Структура(СписокРеквизитов);
	
	Если ЗначениеЗаполнено(ДокументСсылка) Тогда
		СписокРеквизитов = СтрРазделить(СписокРеквизитов,",");
		Для Каждого ИмяРеквизита Из СписокРеквизитов Цикл 
			Если ОбщегоНазначения.ЕстьРеквизитОбъекта(ИмяРеквизита, ДокументСсылка.Метаданные()) Тогда
				Реквизиты[ИмяРеквизита] = ДокументСсылка[ИмяРеквизита];
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Реквизиты;
	
КонецФункции

Функция ОпределитьТипОснования(Знач ДанныеЗаполнения)
	
	ОснованиеЗаполнения = ДанныеЗаполнения;
	Если ТипЗнч(ОснованиеЗаполнения) = Тип("Структура") И ОснованиеЗаполнения.Свойство("Основание") Тогда
		ОснованиеЗаполнения = ОснованиеЗаполнения.Основание;
	КонецЕсли;
	Возврат ТипЗнч(ОснованиеЗаполнения);
	
КонецФункции

Функция ОсобенностьУчетаПоВидуПродукции(ОсобенностьУчетаИлиВидПродукции) Экспорт
	
	Возврат ОсобенностьУчетаИлиВидПродукции;
	
КонецФункции

Процедура ОбработкаЗаполненияДокумента(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОформлениеСДИЗЗЕРНО") Тогда
		ОбработкаЗаполненияДокументаОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВнесениеСведенийОСобранномУрожаеЗЕРНО") Тогда
		ОбработкаЗаполненияДокументаВнесениеСведенийОСобранномУрожаеЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ФормированиеПартийПриПроизводствеЗЕРНО") Тогда
		ОбработкаЗаполненияДокументаФормированиеПартийПриПроизводствеЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ФормированиеПартийЗЕРНО") Тогда
		ОбработкаЗаполненияДокументаФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.СписаниеПартийЗЕРНО") Тогда
		ОбработкаЗаполненияДокументаСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПогашениеСДИЗЗЕРНО") Тогда
		ОбработкаЗаполненияДокументаПогашениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

#Область ЗЕРНО

Процедура ЗаполнитьТабличнуюЧастьДокументаЗЕРНО(ТабличнаяЧасть, РезультатЗапроса, ДанныеЗаполнения, ВозможноПустая = Ложь)
	
	Если ТипЗнч(РезультатЗапроса) = Тип("РезультатЗапроса") Тогда
		Выборка = РезультатЗапроса.Выбрать();
	Иначе
		Выборка = РезультатЗапроса;
	КонецЕсли;
	
	Если Выборка.Количество() = 0 И Не ВозможноПустая Тогда
		
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'В %1 отсутствует продукция для заполнения.'"),
			ДанныеЗаполнения);
		
	КонецЕсли;
	
	КолонкиТабличнойЧасти   = ТабличнаяЧасть.Выгрузить(Новый Структура("НомерСтроки",Ложь));
	ЕстьИдентификаторСтроки = КолонкиТабличнойЧасти.Колонки.Найти("Идентификатор") <> Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТабличнаяЧасть.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Если ЕстьИдентификаторСтроки Тогда
			НоваяСтрока.Идентификатор = Новый УникальныйИдентификатор;
		КонецЕсли;
		
	КонецЦикла;
	
	ДанныеДляПересчета = КоэффициентыЕдиницИзмеренияЗЕРНО(ТабличнаяЧасть);
	
	Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		
		ДанныеЕдиницыИзмерения = ДанныеДляПересчета.Получить(СтрокаТабличнойЧасти.Номенклатура);
		Если ДанныеЕдиницыИзмерения.КодОшибки = 0 Тогда
			СтрокаТабличнойЧасти.КоличествоЗЕРНО = СтрокаТабличнойЧасти.Количество / ДанныеЕдиницыИзмерения.Коэффициент;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция МестоХраненияСтрокой(МестоХранения)
	Возврат "";
КонецФункции

// Возвращает сведения для пересчета единиц измерения ВЕТИС.
//
// Параметры:
//   ДанныеСтрокЗЕРНО - Массив Из Структура - элементы массива должны содержать свойства Номенклатура.
//
// Возвращаемое значение:
//  Соответствие Из Справочникссылка.Номенклатура - ключ ссылка на номенклатуру, значение структура:
//   * КодОшибки - Число  - Код ошибки получения коэффициента:
//        0 - Нет ошибок;
//        1 - Не заполнена единица измерения в справочнике 'ЕдиницыИзмеренияВЕТИС';
//        2 - В справочнике 'Номенклатура' выключена возможность пересчета количества в соответствующую мерную единицу измерения;
//        3 - Не удалось сопоставить единицу хранения справочника 'Номенклатура' с единицей измерения  "Килограмм".
//   * Коэффициент                   - Число  - Коэффициент пересчета единицы измерения из "Килограмм".
Функция КоэффициентыЕдиницИзмеренияЗЕРНО(ДанныеСтрокЗЕРНО) Экспорт
	
	Если ДанныеСтрокЗЕРНО.Количество() = 0 Тогда
		Возврат Новый Соответствие;
	КонецЕсли;
	
	ШаблонРезультата = Новый Структура;
	ШаблонРезультата.Вставить("КодОшибки",                     0);
	ШаблонРезультата.Вставить("Коэффициент",                   1);
	
	Номенклатура = Новый Массив;
	Для каждого СтрокаИсточника Из ДанныеСтрокЗЕРНО Цикл
		Номенклатура.Добавить(СтрокаИсточника.Номенклатура);
	КонецЦикла;
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	ЕдиницаИзмеренияКилограммИС.Значение КАК Упаковка
	|ПОМЕСТИТЬ ДанныеУпаковок
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура,
	|	Константа.ЕдиницаИзмеренияКилограммИС КАК ЕдиницаИзмеренияКилограммИС
	|		ГДЕ Номенклатура.Ссылка В (&Номенклатура)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеУпаковок.Номенклатура КАК Номенклатура,
	|	ДанныеУпаковок.Упаковка КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ДанныеУпаковок.Упаковка = Номенклатура.ЕдиницаИзмерения
	|			ТОГДА 1
	|		ИНАЧЕ 1 
	|	КОНЕЦ КАК Коэффициент
	|ИЗ
	|	ДанныеУпаковок КАК ДанныеУпаковок
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторЕдиницИзмерения КАК ЕдиницыХранения
	|		ПО Номенклатура.ЕдиницаИзмерения = ЕдиницыХранения.Ссылка";

	ИсточникНоменклатуры = "Номенклатура";
	ИсточникУпаковки     = "Упаковка";

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	КоэффициентыУпаковокНоменклатуры = Новый Соответствие;
	
	Пока Выборка.Следующий() Цикл
		
		Результат = ОбщегоНазначения.СкопироватьРекурсивно(ШаблонРезультата);
		
		Если Выборка.Коэффициент = 0 Тогда
			Результат.Коэффициент = 1;
			Результат.КодОшибки = 3;
		Иначе
			Результат.Коэффициент = Выборка.Коэффициент;
		КонецЕсли;
		
		КоэффициентыУпаковокНоменклатуры.Вставить(Выборка.Номенклатура, Результат);
		
	КонецЦикла;
	
	Возврат КоэффициентыУпаковокНоменклатуры;
	
КонецФункции

#Область ОформлениеСДИЗЗЕРНО

Процедура ЗаполнитьШапкуОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ДокументОснование = ДанныеЗаполнения.Основание;
	Иначе
		ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			ДокументОбъект.ПунктОтправления 					= ДокументОснование.Склад;
			ДокументОбъект.Грузоотправитель						= ДокументОснование.Организация;
			ДокументОбъект.Грузополучатель						= ДокументОснование.Контрагент;
			ДокументОбъект.Покупатель 							= ДокументОснование.Контрагент;
			ДокументОбъект.ПунктНазначенияСопоставленныйОбъект 	= ДокументОснование.Контрагент;
			ДанныеКонтрагента 									= БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ДокументОснование.Контрагент);
			ДокументОбъект.ПунктНазначенияСтрокой				= ДанныеКонтрагента.ЮридическийАдрес;
		ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			ДокументОбъект.Грузоотправитель 					= ДокументОснование.Организация;
			ДокументОбъект.Грузополучатель 						= ДокументОснование.Организация;
			ДокументОбъект.Подразделение						= ДокументОснование.ПодразделениеОтправитель;
		ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
			ДокументОбъект.Грузоотправитель 					= ДокументОснование.Организация;
			ДокументОбъект.ПодразделениеГрузоотправителя		= ДокументОснование.ПодразделениеОрганизации;
			ДокументОбъект.Грузополучатель 						= ДокументОснование.Контрагент;
			ДокументОбъект.ПунктНазначенияСопоставленныйОбъект 	= ДокументОснование.Контрагент;
			ДанныеКонтрагента 									= БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ДокументОснование.Контрагент);
			ДокументОбъект.ПунктНазначенияСтрокой				= ДанныеКонтрагента.ЮридическийАдрес;
		ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПередачаТоваров") Тогда
			ДокументОбъект.Грузоотправитель 					= ДокументОснование.Организация;
			ДокументОбъект.ПодразделениеГрузоотправителя		= ДокументОснование.ПодразделениеОрганизации;
			ДокументОбъект.Грузополучатель 						= ДокументОснование.Контрагент;
			ДокументОбъект.ПунктНазначенияСопоставленныйОбъект 	= ДокументОснование.Контрагент;
			ДанныеКонтрагента 									= БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ДокументОснование.Контрагент);
			ДокументОбъект.ПунктНазначенияСтрокой				= ДанныеКонтрагента.ЮридическийАдрес;
		ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПоступлениеИзПереработки") Тогда
			ДокументОбъект.Грузоотправитель 					= ДокументОснование.Контрагент;
			ДокументОбъект.Грузополучатель 						= ДокументОснование.Организация;
			ДокументОбъект.ПодразделениеГрузополучателя			= ДокументОснование.ПодразделениеОрганизации;
			ДокументОбъект.ПунктОтправления						= ДокументОснование.Контрагент;
			ДокументОбъект.ПунктНазначенияСопоставленныйОбъект 	= ДокументОснование.Склад;
		ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
			ДокументОбъект.Грузополучатель 						= ДокументОснование.Организация;
			ДокументОбъект.ПодразделениеГрузополучателя			= ДокументОснование.ПодразделениеОрганизации;
			ДокументОбъект.ПунктНазначенияСопоставленныйОбъект 	= ДокументОснование.Склад;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ИмяДокумента, ЕстьСерии)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть") Тогда
		Возврат;
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	Если ТипЗНЧ(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеИзПереработки") Тогда
		ИмяТабличнойЧасти = "Продукция";
	Иначе
		ИмяТабличнойЧасти = "Товары";
	КонецЕсли;
	
	ОсобенностьУчета = УчитываемыеВидыПродукцииЗЕРНО();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.ИмяФильтра = "ЗаполнениеСВидомПродукции" Тогда
			ФильтрВидПродукции = ДанныеЗаполнения.ЗначениеФильтра;
			ОсобенностьУчета   = ОсобенностьУчетаПоВидуПродукции(ФильтрВидПродукции);
		КонецЕсли;
		Основание = ДанныеЗаполнения.Основание;
	Иначе
		Основание = ДанныеЗаполнения;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполненияОформлениеСДИЗИзПрикладногоДокумента(ИмяДокумента, ЕстьСерии, ИмяТабличнойЧасти);
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", Основание);
	Запрос.УстановитьПараметр("ОсобенностьУчета",  ОсобенностьУчета);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ОформлениеСДИЗЗЕРНО.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",       Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип.ПривестиЗначение());
	
	ЗаполнитьТабличнуюЧастьДокументаЗЕРНО(ДокументОбъект.Товары, Запрос.Выполнить(), ДанныеЗаполнения);
	
	Если ТипЗнч(ОсобенностьУчета) <> Тип("ПеречислениеСсылка.ВидыПродукцииИС") Тогда
		ЗаполнитьВидПродукцииПоТабличнойЧастиОснования(ДокументОбъект, Основание);
	Иначе
		ДокументОбъект.ВидПродукции = ФильтрВидПродукции;
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаЗаполненияОформлениеСДИЗИзПрикладногоДокумента(ИмяДокумента, ЕстьСерии, ИмяТабличнойЧасти = "Товары")
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ОформлениеСДИЗЗЕРНО КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыОбъектовСинхронизацииЗЕРНО КАК СтатусыДокументовЗЕРНО
	|		ПО СтатусыДокументовЗЕРНО.ОбъектСинхронизации = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЗЕРНО.Статус НЕ В(&КонечныеСтатусы)
	|;
	|"
	+ ?(ЕстьСерии = Ложь,
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	""""                                               КАК Характеристика,
	|	""""                                       		   КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента."+ИмяТабличнойЧасти+" КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.Зерно 
	|	ИЛИ СправочникНоменклатура.ПродуктыПереработкиЗерна
	|	ИЛИ СправочникНоменклатура.ЗерноВЕТИС
	|	ИЛИ СправочникНоменклатура.ПродуктыПереработкиЗернаВЕТИС)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура
	|;
	|"
	,
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.Зерно ИЛИ 
	|	ИЛИ СправочникНоменклатура.ПродуктыПереработкиЗерна
	|	ИЛИ СправочникНоменклатура.ЗерноВЕТИС
	|	ИЛИ СправочникНоменклатура.ПродуктыПереработкиЗернаВЕТИС)
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура                                КАК Номенклатура,
	|	Серии.Характеристика                              КАК Характеристика,
	|	Серии.Серия                                       КАК Серия,
	|	СУММА(Серии.Количество)                           КАК Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Серии КАК Серии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Серии.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Серии.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ОсобенностьУчета В(&ОсобенностьУчета)
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия,Товары.Серия)                 КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)      КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Серии КАК Серии
	|			ПО Серии.Номенклатура = Товары.Номенклатура
	|			И Серии.Характеристика = Товары.Характеристика
	|;
	|"
	)
	+
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура          КАК Номенклатура,
	|	ТоварыСерии.Характеристика        КАК Характеристика,
	|	ТоварыСерии.Серия                 КАК Серия,
	|	ТоварыСерии.Количество            КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ОформлениеСДИЗЗЕРНО.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура           КАК Номенклатура,
	|	ТоварыКОформлению.Номенклатура.КодОКПД2  КАК ОКПД2,
	|	ТоварыКОформлению.Номенклатура.КодТНВЭД  КАК КодТНВЭД,
	|	ТоварыКОформлению.Характеристика         КАК Характеристика,
	|	ТоварыКОформлению.Серия                  КАК Серия,
	|	СУММА(ТоварыКОформлению.Количество)      КАК Количество
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	ТоварыКОформлению.Номенклатура.КодОКПД2,
	|	ТоварыКОформлению.Номенклатура.КодТНВЭД
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ИмяПрикладногоДокумента",ИмяДокумента);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОбработкаЗаполненияДокументаОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипОснования = ОпределитьТипОснования(ДанныеЗаполнения);
	
	Если ТипОснования = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииРеализацииТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииПеремещенияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииВозвратаТоваровПоставщику(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПередачаТоваров") Тогда
		ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииПередачиТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли  ТипОснования = Тип("ДокументСсылка.ПоступлениеИзПереработки") Тогда
		ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииПоступленияИзПереработки(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииВозвратаОтПокупателя(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииРеализацииТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Шапка.Ссылка      											КАК ДокументОснование,
	|	Шапка.Номер       											КАК НомерТТН,
	|	Шапка.Дата        											КАК ДатаТТН,
	|	НЕ Шапка.Проведен 											КАК ЕстьОшибкиПроведен,
	|	Шапка.Организация 											КАК Организация,
	|	Шапка.Склад       											КАК СкладКонтрагент,
	|	Истина            											КАК Реализация,
	|	Истина														КАК Перевозка,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗРФ) 	КАК Операция,
	|	Шапка.Контрагент  											КАК Покупатель,
	|	Шапка.ПодразделениеОрганизации                              КАК Подразделение
	|ИЗ
	|	Документ.РеализацияТоваровУслуг 							КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, "РеализацияТоваровУслуг", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииПеремещенияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Шапка.Ссылка      											КАК ДокументОснование,
	|	Шапка.Номер      	 										КАК НомерТТН,
	|	Шапка.Дата        											КАК ДатаТТН,
	|	НЕ Шапка.Проведен 											КАК ЕстьОшибкиПроведен,
	|	Шапка.Организация 											КАК Организация,
	|	Шапка.СкладОтправитель 										КАК ПунктОтправления,
	|	Истина            											КАК Перевозка,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗРФ) 	КАК Операция,
	|	Шапка.СкладПолучатель 										КАК ПунктНазначенияСопоставленныйОбъект,
	|	Шапка.ПодразделениеОтправитель                              КАК ПодразделениеГрузоОтправителя,
	|	Шапка.ПодразделениеПолучатель								КАК ПодразделениеГрузополучателя
	|ИЗ
	|	Документ.ПеремещениеТоваров 								КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, "ПеремещениеТоваров", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииВозвратаТоваровПоставщику(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Шапка.Ссылка      											КАК ДокументОснование,
	|	Шапка.Номер      	 										КАК НомерТТН,
	|	Шапка.Дата        											КАК ДатаТТН,
	|	НЕ Шапка.Проведен 											КАК ЕстьОшибкиПроведен,
	|	Шапка.Организация 											КАК Организация,
	|	Шапка.Склад 												КАК ПунктОтправления,
	|	Истина            											КАК Перевозка,
	|	Истина														КАК Реализация,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗРФ) 	КАК Операция,
	|	Шапка.Контрагент 											КАК Покупатель,
	|	Шапка.ПодразделениеОрганизации								КАК Подразделение
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику 							КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, "ВозвратТоваровПоставщику", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииПередачиТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Шапка.Ссылка      											КАК ДокументОснование,
	|	Шапка.Номер      	 										КАК НомерТТН,
	|	Шапка.Дата        											КАК ДатаТТН,
	|	НЕ Шапка.Проведен 											КАК ЕстьОшибкиПроведен,
	|	Шапка.Организация 											КАК Организация,
	|	Шапка.ПодразделениеОрганизации								КАК Подразделение,
	|	Шапка.Склад 												КАК ПунктОтправления,
	|	Истина            											КАК Перевозка,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗРФ) 	КАК Операция,
	|	Шапка.Контрагент 											КАК Покупатель
	|ИЗ
	|	Документ.ПередачаТоваров 									КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, "ПередачаТоваров", Ложь);	
КонецПроцедуры

Процедура ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииПоступленияИзПереработки(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Шапка.Ссылка      											КАК ДокументОснование,
	|	Шапка.Номер      	 										КАК НомерТТН,
	|	Шапка.Дата        											КАК ДатаТТН,
	|	НЕ Шапка.Проведен 											КАК ЕстьОшибкиПроведен,
	|	Шапка.Организация 											КАК Организация,
	|	Шапка.ПодразделениеОрганизации                              КАК Подразделение,
	|	Истина            											КАК Перевозка,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗРФ) 	КАК Операция,
	|	Шапка.Контрагент 											КАК Отправитель
	|ИЗ
	|	Документ.ПоступлениеИзПереработки 							КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, "ПоступлениеИзПереработки", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОформлениеСДИЗЗЕРНОНаОснованииВозвратаОтПокупателя(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Шапка.Ссылка      											КАК ДокументОснование,
	|	Шапка.Номер      	 										КАК НомерТТН,
	|	Шапка.Дата        											КАК ДатаТТН,
	|	НЕ Шапка.Проведен 											КАК ЕстьОшибкиПроведен,
	|	Шапка.Организация 											КАК Организация,
	|	Шапка.ПодразделениеОрганизации								КАК Подразделение,
	|	Шапка.Склад 												КАК ПунктОтправления,
	|	Истина            											КАК Приемка,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗЕРНО.ОформлениеСДИЗРФ) 	КАК Операция,
	|	Шапка.Контрагент 											КАК Отправитель
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя 						КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьОформлениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, "ВозвратТоваровОтПокупателя", Ложь);	
	
КонецПроцедуры

#КонецОбласти

#Область ВнесениеСведенийОСобранномУрожаеЗЕРНО

Процедура ЗаполнитьШапкуВнесениеСведенийОСобранномУрожаеЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ДокументОснование = ДанныеЗаполнения.Основание;
	Иначе
		ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		ДокументОбъект.МестоХраненияСтрокой = МестоХраненияСтрокой(ДокументОбъект.МестоХранения);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьВнесениеСведенийОСобранномУрожаеЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ИмяДокумента, ЕстьСерии)
	
	ДокументОбъект.Товары.Очистить();
	
	Запрос = Новый Запрос;
	Если ТипЗнч(ДанныеЗаполнения)=Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену") Тогда
		ИмяТабличнойЧасти = "Продукция";
	Иначе
		ИмяТабличнойЧатси = "Товары"
	КонецЕсли;
	Запрос.Текст = ТекстЗапросаЗаполненияВнесениеСведенийОСобранномУрожаеИзПрикладногоДокумента(ИмяДокумента, ЕстьСерии, ИмяТабличнойЧасти);
	
	Запрос.УстановитьПараметр("ЭтаСсылка",             ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование",     ДокументОбъект.ДокументОснование);
	Запрос.УстановитьПараметр("КонечныеСтатусы",       Документы.ВнесениеСведенийОСобранномУрожаеЗЕРНО.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",           Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип.ПривестиЗначение());
	
	ЗаполнитьТабличнуюЧастьДокументаЗЕРНО(ДокументОбъект.Товары, Запрос.Выполнить(), ДанныеЗаполнения);
	
КонецПроцедуры

Функция ТекстЗапросаЗаполненияВнесениеСведенийОСобранномУрожаеИзПрикладногоДокумента(ИмяДокумента, ЕстьСерии, ИмяТабличнойЧасти = "Товары")
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ВнесениеСведенийОСобранномУрожаеЗЕРНО КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыОбъектовСинхронизацииЗЕРНО КАК СтатусыДокументовЗЕРНО
	|		ПО СтатусыДокументовЗЕРНО.ОбъектСинхронизации = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЗЕРНО.Статус НЕ В(&КонечныеСтатусы)
	|;
	|"
	+ ?(ЕстьСерии = Ложь,
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                	КАК Номенклатура,
	|	""""                              				   	КАК Характеристика,
	|	""""                                       			КАК Серия,
	|	СУММА(Товары.Количество)                           	КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента."+ИмяТабличнойЧасти+" КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.Зерно 
	|	ИЛИ СправочникНоменклатура.ПродуктыПереработкиЗерна
	|	ИЛИ СправочникНоменклатура.ЗерноВЕТИС
	|	ИЛИ СправочникНоменклатура.ПродуктыПереработкиЗернаВЕТИС)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура
	|;
	|"
	,
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Зерно)
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура                                КАК Номенклатура,
	|	Серии.Характеристика                              КАК Характеристика,
	|	Серии.Серия                                       КАК Серия,
	|	СУММА(Серии.Количество)                           КАК Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Серии КАК Серии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Серии.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Серии.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ВидыПродукцииИС.Зерно)
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия,Товары.Серия)                 КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)      КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Серии КАК Серии
	|			ПО Серии.Номенклатура = Товары.Номенклатура
	|			И Серии.Характеристика = Товары.Характеристика
	|;
	|"
	)
	+
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура          КАК Номенклатура,
	|	ТоварыСерии.Характеристика        КАК Характеристика,
	|	ТоварыСерии.Серия                 КАК Серия,
	|	ТоварыСерии.Количество            КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ВнесениеСведенийОСобранномУрожаеЗЕРНО.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура      		КАК Номенклатура,
	|	ТоварыКОформлению.Номенклатура.КодОКПД2  	КАК ОКПД2,
	|	ТоварыКОформлению.Характеристика    		КАК Характеристика,
	|	ТоварыКОформлению.Серия             		КАК Серия,
	|	СУММА(ТоварыКОформлению.Количество) 		КАК Количество
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	ТоварыКОформлению.Номенклатура.КодОКПД2
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ИмяПрикладногоДокумента",ИмяДокумента);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОбработкаЗаполненияДокументаВнесениеСведенийОСобранномУрожаеЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипОснования = ТипЗнч(ДанныеЗаполнения);
	Если ТипОснования = Тип("Структура") Тогда
		Если Не ДанныеЗаполнения.Свойство("Основание") Тогда
			Возврат;
		Иначе
			ТипОснования = ТипЗнч(ДанныеЗаполнения.Основание);
		КонецЕсли;
	КонецЕсли;
	
	Если ТипОснования = Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену")Тогда
		ЗаполнитьВнесениеСведенийОСобранномУрожаеЗЕРНОНаОснованииПроизводстваТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьВнесениеСведенийОСобранномУрожаеЗЕРНОНаОснованииПроизводстваТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Шапка.Ссылка                		КАК ДокументОснование,
	|	Шапка.Номер                 		КАК НомерТТН,
	|	Шапка.Дата                  		КАК ДатаТТН,
	|	НЕ Шапка.Проведен           		КАК ЕстьОшибкиПроведен,
	|	Шапка.Организация           		КАК Организация,
	|	Шапка.ПодразделениеОрганизации		КАК Подразделение,
	|	Шапка.Склад                 		КАК СкладКонтрагент
	|ИЗ
	|	Документ.ОтчетПроизводстваЗаСмену КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуВнесениеСведенийОСобранномУрожаеЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьВнесениеСведенийОСобранномУрожаеЗЕРНО(ДокументОбъект, ДанныеЗаполнения, "ОтчетПроизводстваЗаСмену", Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ФормированиеПартийПриПроизводствеЗЕРНО

Процедура ЗаполнитьШапкуФормированиеПартийПриПроизводствеЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ДокументОснование = ДанныеЗаполнения.Основание;
	Иначе
		ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ДокументОбъект.Товаропроизводитель = ДокументОснование.Организация;
		ДокументОбъект.ПодразделениеТоваропроизводителя = ДокументОснование.ПодразделениеОрганизации;
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТабличныеЧастиФормированиеПартийПриПроизводствеЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ИмяДокумента, ЕстьСерии)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть") Тогда
		Возврат;
	КонецЕсли;
	
	ДокументОбъект.Сырье.Очистить();
	
	Если ТипЗнч(ДанныеЗаполнения)= Тип("ДокументСсылка.ПоступлениеИзПереработки") Тогда
		ИмяТабличнойЧастиСырье = "ИспользованныеМатериалы";
	Иначе
		ИмяТабличнойЧастиСырье = "Материалы";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполненияФормированиеПартииПриПроизводствеИзПрикладногоДокумента(ИмяДокумента, ЕстьСерии, ИмяТабличнойЧастиСырье);
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ФормированиеПартийПриПроизводствеЗЕРНО.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",       Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип.ПривестиЗначение());
	
	Пакет = Запрос.ВыполнитьПакет();
	ЗаполнитьТабличнуюЧастьДокументаЗЕРНО(ДокументОбъект.Сырье, Пакет[Пакет.ВГраница()].Выбрать(), ДанныеЗаполнения);
	
	Продукция = Пакет[Пакет.ВГраница()-1].Выгрузить();
	ЗаполнитьЗначенияСвойств(ДокументОбъект, Продукция[0]);
	
	ДанныеДляПересчета = КоэффициентыЕдиницИзмеренияЗЕРНО(Продукция);
	ДанныеЕдиницыИзмерения = ДанныеДляПересчета.Получить(ДокументОбъект.Номенклатура);
	Если ДанныеЕдиницыИзмерения.КодОшибки = 0 Тогда
		ДокументОбъект.КоличествоЗЕРНО = ДокументОбъект.Количество / ДанныеЕдиницыИзмерения.Коэффициент;
	КонецЕсли;
	
	ПотребительскиеСвойстваПоОКПД = ИнтеграцияЗЕРНО.ПотребительскиеСвойстваПродукцииПоДаннымОКПД2(ДокументОбъект.ОКПД2, ДокументОбъект.НазначениеПартии);
	Для Каждого ЭлементДанных Из ПотребительскиеСвойстваПоОКПД Цикл
		СтрокаТЧ = ДокументОбъект.ПотребительскиеСвойства.Добавить();
		СтрокаТЧ.ПотребительскоеСвойство = ЭлементДанных.ПотребительскоеСвойство;
	КонецЦикла;
	
КонецПроцедуры

//последний запрос пакета - сырье, предпоследний - неоформленная продукция
Функция ТекстЗапросаЗаполненияФормированиеПартииПриПроизводствеИзПрикладногоДокумента(ИмяДокумента, ЕстьСерии, ИмяТабличнойЧастиСырье = "Материалы")
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ФормированиеПартийПриПроизводствеЗЕРНО КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыОбъектовСинхронизацииЗЕРНО КАК СтатусыДокументовЗЕРНО
	|		ПО СтатусыДокументовЗЕРНО.ОбъектСинхронизации = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЗЕРНО.Статус НЕ В(&КонечныеСтатусы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура      КАК Номенклатура,
	|	""""    				 КАК Характеристика,
	|	""""             		 КАК Серия,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Продукция КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.Зерно 
	|	ИЛИ СправочникНоменклатура.ПродуктыПереработкиЗерна
	|	ИЛИ СправочникНоменклатура.ЗерноВЕТИС
	|	ИЛИ СправочникНоменклатура.ПродуктыПереработкиЗернаВЕТИС)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Сырье.Номенклатура      КАК Номенклатура,
	|	""""    				КАК Характеристика,
	|	""""             		КАК Серия,
	|	СУММА(Сырье.Количество) КАК Количество
	|ПОМЕСТИТЬ Сырье
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента."+ИмяТабличнойЧастиСырье+" КАК Сырье
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Сырье.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Сырье.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.Зерно 
	|	ИЛИ СправочникНоменклатура.ПродуктыПереработкиЗерна
	|	ИЛИ СправочникНоменклатура.ЗерноВЕТИС
	|	ИЛИ СправочникНоменклатура.ПродуктыПереработкиЗернаВЕТИС)
	|СГРУППИРОВАТЬ ПО
	|	Сырье.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Сырье.Номенклатура          КАК Номенклатура,
	|	Сырье.Характеристика        КАК Характеристика,
	|	Сырье.Серия                 КАК Серия,
	|	Сырье.Количество            КАК Количество
	|ПОМЕСТИТЬ СырьеКОформлению
	|ИЗ
	|	Сырье КАК Сырье
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ФормированиеПартийПриПроизводствеЗЕРНО.Сырье КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура          КАК Номенклатура,
	|	ТоварыСерии.Характеристика        КАК Характеристика,
	|	ТоварыСерии.Серия                 КАК Серия,
	|	ТоварыСерии.Количество            КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ФормированиеПартийПриПроизводствеЗЕРНО КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТоварыКОформлению.Номенклатура           КАК Номенклатура,
	|	ТоварыКОформлению.Номенклатура.КодОКПД2  КАК ОКПД2,
	|	ТоварыКОформлению.Номенклатура.КодТНВЭД  КАК КодТНВЭД,
	|	ТоварыКОформлению.Характеристика         КАК Характеристика,
	|	ТоварыКОформлению.Серия                  КАК Серия,
	|	СУММА(ТоварыКОформлению.Количество)      КАК Количество
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	ТоварыКОформлению.Номенклатура.КодОКПД2,
	|	ТоварыКОформлению.Номенклатура.КодТНВЭД
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СырьеКОформлению.Номенклатура           КАК Номенклатура,
	|	СырьеКОформлению.Номенклатура.КодОКПД2  КАК ОКПД2,
	|	СырьеКОформлению.Номенклатура.КодТНВЭД  КАК КодТНВЭД,
	|	СырьеКОформлению.Характеристика         КАК Характеристика,
	|	СырьеКОформлению.Серия                  КАК Серия,
	|	СУММА(СырьеКОформлению.Количество)      КАК Количество
	|ИЗ
	|	СырьеКОформлению КАК СырьеКОформлению
	|СГРУППИРОВАТЬ ПО
	|	СырьеКОформлению.Номенклатура,
	|	СырьеКОформлению.Характеристика,
	|	СырьеКОформлению.Серия,
	|	СырьеКОформлению.Номенклатура.КодОКПД2,
	|	СырьеКОформлению.Номенклатура.КодТНВЭД
	|ИМЕЮЩИЕ
	|	СУММА(СырьеКОформлению.Количество) > 0
	|";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ИмяПрикладногоДокумента",ИмяДокумента);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОбработкаЗаполненияДокументаФормированиеПартийПриПроизводствеЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипОснования = ОпределитьТипОснования(ДанныеЗаполнения);
	
	Если ТипОснования = Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену") Тогда
		ЗаполнитьФормированиеПартийПриПроизводствеЗЕРНОНаОснованииПроизводстваТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПоступлениеИзПереработки") Тогда
		ЗаполнитьФормированиеПартийПриПроизводствеЗЕРНОНаОснованииПоступленияИзПереработки(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьФормированиеПартийПриПроизводствеЗЕРНОНаОснованииПроизводстваТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Шапка.Ссылка                		КАК ДокументОснование,
	|	Шапка.Номер                 		КАК НомерТТН,
	|	Шапка.Дата                  		КАК ДатаТТН,
	|	НЕ Шапка.Проведен           		КАК ЕстьОшибкиПроведен,
	|	Шапка.Организация           		КАК Организация,
	|	Шапка.ПодразделениеОрганизации  	КАК Подразделение,
	|	Шапка.Склад                 		КАК СкладКонтрагент
	|ИЗ
	|	Документ.ОтчетПроизводстваЗаСмену 	КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуФормированиеПартийПриПроизводствеЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличныеЧастиФормированиеПартийПриПроизводствеЗЕРНО(ДокументОбъект, ДанныеЗаполнения, "ОтчетПроизводстваЗаСмену", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьФормированиеПартийПриПроизводствеЗЕРНОНаОснованииПоступленияИзПереработки(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Шапка.Ссылка                		КАК ДокументОснование,
	|	Шапка.Номер                 		КАК НомерТТН,
	|	Шапка.Дата                  		КАК ДатаТТН,
	|	НЕ Шапка.Проведен           		КАК ЕстьОшибкиПроведен,
	|	Шапка.Организация           		КАК Организация,
	|	Шапка.ПодразделениеОрганизации      КАК Подразделение,
	|	Шапка.Склад                 		КАК СкладКонтрагент
	|ИЗ
	|	Документ.ПоступлениеИзПереработки 	КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуФормированиеПартийПриПроизводствеЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличныеЧастиФормированиеПартийПриПроизводствеЗЕРНО(ДокументОбъект, ДанныеЗаполнения, "ПоступлениеИзПереработки", Ложь);		
КонецПроцедуры

#КонецОбласти

#Область ФормированиеПартийЗЕРНО

Процедура ЗаполнитьШапкуФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ДокументОснование = ДанныеЗаполнения.Основание;
	Иначе
		ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		ДокументОбъект.ВладелецПартии = ДокументОснование.Организация;
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ИмяДокумента, ЕстьСерии = Ложь)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть") Тогда
		Возврат;
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	ОсобенностьУчета = УчитываемыеВидыПродукцииЗЕРНО();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.ИмяФильтра = "ЗаполнениеСВидомПродукции" Тогда
			ФильтрВидПродукции = ДанныеЗаполнения.ЗначениеФильтра;
			ОсобенностьУчета   = ОсобенностьУчетаПоВидуПродукции(ФильтрВидПродукции);
		КонецЕсли;
		Основание = ДанныеЗаполнения.Основание;
	Иначе
		Основание = ДанныеЗаполнения;
	КонецЕсли;
	
	Если ИмяДокумента = "ОтчетПроизводстваЗаСмену" Тогда
		ИмяТабличнойчасти = "Продукция";
	Иначе
		ИмяТабличнойЧасти = "Товары";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполненияФормированиеПартийИзПрикладногоДокумента(ИмяДокумента, ЕстьСерии, ИмяТабличнойчасти);
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", Основание);
	Запрос.УстановитьПараметр("ОсобенностьУчета",  ОсобенностьУчета);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ФормированиеПартийЗЕРНО.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",       Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип.ПривестиЗначение());
	
	ЗаполнитьТабличнуюЧастьДокументаЗЕРНО(ДокументОбъект.Товары, Запрос.Выполнить(), ДанныеЗаполнения);
	
	ОКПД2 = Новый Массив;
	Для Каждого СтрокаТЧТовары Из ДокументОбъект.Товары Цикл
		Если ОКПД2.Найти(СтрокаТЧТовары.ОКПД2) = Неопределено Тогда
			ОКПД2.Добавить(СтрокаТЧТовары.ОКПД2);
		КонецЕсли;
	КонецЦикла;
	
	Если ОКПД2.Количество() Тогда
		ПотребительскиеСвойстваПоОКПД = ИнтеграцияЗЕРНО.ПотребительскиеСвойстваПродукцииПоДаннымОКПД2(ОКПД2, ДокументОбъект.НазначениеПартии);
		Для Каждого СтрокаТЧТовары Из ДокументОбъект.Товары Цикл
			ПараметрыОтбора = Новый Структура("ОКПД2", СтрокаТЧТовары.ОКПД2);
			НайденныеПотребительскиеСвойства = ПотребительскиеСвойстваПоОКПД.НайтиСтроки(ПараметрыОтбора);
			Для Каждого ЭлементДанных Из НайденныеПотребительскиеСвойства Цикл
				СтрокаТЧ = ДокументОбъект.ПотребительскиеСвойства.Добавить();
				СтрокаТЧ.ПотребительскоеСвойство = ЭлементДанных.ПотребительскоеСвойство;
				СтрокаТЧ.ИдентификаторСтрокиТоваров = СтрокаТЧТовары.Идентификатор;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Если ТипЗнч(ОсобенностьУчета) <> Тип("ПеречислениеСсылка.ВидыПродукцииИС") Тогда
		ЗаполнитьВидПродукцииПоТабличнойЧастиОснования(ДокументОбъект, Основание)
	Иначе
		ДокументОбъект.ВидПродукции = ФильтрВидПродукции;
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаЗаполненияФормированиеПартийИзПрикладногоДокумента(ИмяДокумента, ЕстьСерии, ИмяТабличнойЧасти = "Товары")
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ФормированиеПартийЗЕРНО КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыОбъектовСинхронизацииЗЕРНО КАК СтатусыДокументовЗЕРНО
	|		ПО СтатусыДокументовЗЕРНО.ОбъектСинхронизации = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЗЕРНО.Статус НЕ В(&КонечныеСтатусы)
	|;
	|"
	+ ?(ЕстьСерии = Ложь,
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	""""                              				   КАК Характеристика,
	|	""""                                               КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента."+ИмяТабличнойЧасти+" КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.Зерно 
	|	ИЛИ СправочникНоменклатура.ПродуктыПереработкиЗерна
	|	ИЛИ СправочникНоменклатура.ЗерноВЕТИС
	|	ИЛИ СправочникНоменклатура.ПродуктыПереработкиЗернаВЕТИС)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура
	|;
	|"
	,
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента."+ИмяТабличнойЧасти+" КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ОсобенностьУчета В(&ОсобенностьУчета)
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура                                КАК Номенклатура,
	|	Серии.Характеристика                              КАК Характеристика,
	|	Серии.Серия                                       КАК Серия,
	|	СУММА(Серии.Количество)                           КАК Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Серии КАК Серии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Серии.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Серии.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ОсобенностьУчета В(&ОсобенностьУчета)
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия,Товары.Серия)                 КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)      КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Серии КАК Серии
	|			ПО Серии.Номенклатура = Товары.Номенклатура
	|			И Серии.Характеристика = Товары.Характеристика
	|;
	|"
	)
	+
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура          КАК Номенклатура,
	|	ТоварыСерии.Характеристика        КАК Характеристика,
	|	ТоварыСерии.Серия                 КАК Серия,
	|	ТоварыСерии.Количество            КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ФормированиеПартийЗЕРНО.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура           КАК Номенклатура,
	|	ТоварыКОформлению.Номенклатура.КодОКПД2  КАК ОКПД2,
	|	ТоварыКОформлению.Номенклатура.КодТНВЭД  КАК КодТНВЭД,
	|	ТоварыКОформлению.Характеристика         КАК Характеристика,
	|	ТоварыКОформлению.Серия                  КАК Серия,
	|	СУММА(ТоварыКОформлению.Количество)      КАК Количество
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	ТоварыКОформлению.Номенклатура.КодОКПД2,
	|	ТоварыКОформлению.Номенклатура.КодТНВЭД
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ИмяПрикладногоДокумента",ИмяДокумента);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОбработкаЗаполненияДокументаФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипОснования = ОпределитьТипОснования(ДанныеЗаполнения);
	
	Если ТипОснования = Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену") Тогда
		ЗаполнитьФормированиеПартийЗЕРНОНаОснованииПроизводстваТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
		ЗаполнитьФормированиеПартийЗЕРНОНаОснованииОприходованияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьФормированиеПартийЗЕРНОНаОснованииПроизводстваТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Шапка.Ссылка                КАК ДокументОснование,
	|	Шапка.Номер                 КАК НомерТТН,
	|	Шапка.Дата                  КАК ДатаТТН,
	|	НЕ Шапка.Проведен           КАК ЕстьОшибкиПроведен,
	|	Шапка.Организация           КАК Организация,
	|	Шапка.Склад                 КАК СкладКонтрагент
	|ИЗ
	|	Документ.ОтчетПроизводстваЗаСмену КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, "ОтчетПроизводстваЗаСмену", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьФормированиеПартийЗЕРНОНаОснованииОприходованияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Шапка.Ссылка                	КАК ДокументОснование,
	|	Шапка.Номер                 	КАК НомерТТН,
	|	Шапка.Дата                  	КАК ДатаТТН,
	|	НЕ Шапка.Проведен           	КАК ЕстьОшибкиПроведен,
	|	Шапка.Организация           	КАК Организация,
	|	Шапка.ПодразделениеОрганизации 	КАК Подразделение,
	|	Шапка.Склад                 	КАК СкладКонтрагент
	|ИЗ
	|	Документ.ОприходованиеТоваров 	КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьФормированиеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, "ОприходованиеТоваров", Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СписаниеПартийЗЕРНО

Процедура ЗаполнитьШапкуСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ДокументОснование = ДанныеЗаполнения.Основание;
	Иначе
		ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		ДокументОбъект.ДокументОснование = ДокументОснование;
		ДокументОбъект.ВладелецПартии = ДокументОснование.Организация;
		ДокументОбъект.ПодразделениеВладельцаПартии = ДокументОснование.ПодразделениеОрганизации;
		Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ТребованиеНакладная") ИЛИ ТипЗНЧ(ДокументОснование) = Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену") Тогда
			ДокументОбъект.ПричинаСписания = Справочники.КлассификаторНСИЗЕРНО.НайтиПоРеквизиту("Идентификатор","18");
		ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			ДокументОбъект.ПричинаСписания = Справочники.КлассификаторНСИЗЕРНО.НайтиПоРеквизиту("Идентификатор","16");
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ИмяДокумента, ЕстьСерии)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть") Тогда
		Возврат;
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	ОсобенностьУчета = УчитываемыеВидыПродукцииЗЕРНО();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.ИмяФильтра = "ЗаполнениеСВидомПродукции" Тогда
			ФильтрВидПродукции = ДанныеЗаполнения.ЗначениеФильтра;
			ОсобенностьУчета   = ОсобенностьУчетаПоВидуПродукции(ФильтрВидПродукции);
		КонецЕсли;
		Основание = ДанныеЗаполнения.Основание;
	Иначе
		Основание = ДанныеЗаполнения;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполненияСписаниеПартийИзПрикладногоДокумента(ИмяДокумента, ЕстьСерии);
	
	Если ИмяДокумента = "ОтчетПроизводстваЗаСмену" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Товары", "Материалы");
	ИначеЕсли ИмяДокумента = "ТребованиеНакладная" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Товары", "Материалы");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Товары", "Товары");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", Основание);
	Запрос.УстановитьПараметр("ОсобенностьУчета",  ОсобенностьУчета);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.СписаниеПартийЗЕРНО.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",       Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип.ПривестиЗначение());
	
	ЗаполнитьТабличнуюЧастьДокументаЗЕРНО(ДокументОбъект.Товары, Запрос.Выполнить(), ДанныеЗаполнения);
	
	Если ТипЗнч(ОсобенностьУчета) <> Тип("ПеречислениеСсылка.ВидыПродукцииИС") Тогда
		ЗаполнитьВидПродукцииПоТабличнойЧастиОснования(ДокументОбъект, Основание);
	Иначе
		ДокументОбъект.ВидПродукции = ФильтрВидПродукции;
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаЗаполненияСписаниеПартийИзПрикладногоДокумента(ИмяДокумента, ЕстьСерии)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.СписаниеПартийЗЕРНО КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыОбъектовСинхронизацииЗЕРНО КАК СтатусыДокументовЗЕРНО
	|		ПО СтатусыДокументовЗЕРНО.ОбъектСинхронизации = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовЗЕРНО.Статус НЕ В(&КонечныеСтатусы)
	|;
	|"
	+ ?(ЕстьСерии = Ложь,
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	""""                              					КАК Характеристика,
	|	""""                                       			КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.&Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.Зерно 
	|	ИЛИ СправочникНоменклатура.ПродуктыПереработкиЗерна
	|	ИЛИ СправочникНоменклатура.ЗерноВЕТИС
	|	ИЛИ СправочникНоменклатура.ПродуктыПереработкиЗернаВЕТИС)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура
	|;
	|"
	,
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.&Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ОсобенностьУчета В(&ОсобенностьУчета)
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура                                КАК Номенклатура,
	|	Серии.Характеристика                              КАК Характеристика,
	|	Серии.Серия                                       КАК Серия,
	|	СУММА(Серии.Количество)                           КАК Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Серии КАК Серии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Серии.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Серии.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.Зерно ИЛИ 
	|	ИЛИ СправочникНоменклатура.ПродуктыПереработкиЗерна
	|	ИЛИ СправочникНоменклатура.ЗерноВЕТИС
	|	ИЛИ СправочникНоменклатура.ПродуктыПереработкиЗернаВЕТИС)
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия,Товары.Серия)                 КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)      КАК Количество
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Серии КАК Серии
	|			ПО Серии.Номенклатура = Товары.Номенклатура
	|			И Серии.Характеристика = Товары.Характеристика
	|;
	|"
	)
	+
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура          КАК Номенклатура,
	|	ТоварыСерии.Характеристика        КАК Характеристика,
	|	ТоварыСерии.Серия                 КАК Серия,
	|	ТоварыСерии.Количество            КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.СписаниеПартийЗЕРНО.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура           КАК Номенклатура,
	|	ТоварыКОформлению.Номенклатура.КодОКПД2  КАК ОКПД2,
	|	ТоварыКОформлению.Номенклатура.КодТНВЭД  КАК КодТНВЭД,
	|	ТоварыКОформлению.Характеристика         КАК Характеристика,
	|	ТоварыКОформлению.Серия                  КАК Серия,
	|	СУММА(ТоварыКОформлению.Количество)      КАК Количество
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	ТоварыКОформлению.Номенклатура.КодОКПД2,
	|	ТоварыКОформлению.Номенклатура.КодТНВЭД
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ИмяПрикладногоДокумента",ИмяДокумента);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОбработкаЗаполненияДокументаСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипОснования = ОпределитьТипОснования(ДанныеЗаполнения);
	
	Если ТипОснования = Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену") 		Тогда
		ЗаполнитьСписаниеПартийЗЕРНОНаОснованииПроизводстваТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.СписаниеТоваров") 			Тогда
		ЗаполнитьСписаниеПартийЗЕРНОНаОснованииСписанияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ТребованиеНакладная") 		Тогда
		ЗаполнитьСписаниеПартийЗЕРНОНаОснованииТребованияНакладная(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.РеализацияТоваровУслуг")	Тогда
		ЗаполнитьСписаниеПартийЗЕРНОНаОснованииРеализацииТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьСписаниеПартийЗЕРНОНаОснованииПроизводстваТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Шапка.Ссылка      					КАК ДокументОснование,
	|	Шапка.Номер       					КАК НомерТТН,
	|	Шапка.Дата        					КАК ДатаТТН,
	|	НЕ Шапка.Проведен 					КАК ЕстьОшибкиПроведен,
	|	Шапка.Организация 					КАК Организация,
	|	Шапка.ПодразделениеОРганизации      КАК Подразделение,
	|	Шапка.Склад       					КАК СкладКонтрагент
	|ИЗ
	|	Документ.ОтчетПроизводстваЗаСмену 	КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, "ОтчетПроизводстваЗаСмену", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьСписаниеПартийЗЕРНОНаОснованииСписанияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Шапка.Ссылка      				КАК ДокументОснование,
	|	Шапка.Номер       				КАК НомерТТН,
	|	Шапка.Дата        				КАК ДатаТТН,
	|	НЕ Шапка.Проведен 				КАК ЕстьОшибкиПроведен,
	|	Шапка.Организация 				КАК Организация,
	|	Шапка.ПодразделениеОрганизации 	КАК Подразделение,
	|	Шапка.Склад       				КАК Склад
	|ИЗ
	|	Документ.СписаниеТоваров КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, "СписаниеТоваров", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьСписаниеПартийЗЕРНОНаОснованииРеализацииТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Шапка.Ссылка      				КАК ДокументОснование,
	|	Шапка.Номер       				КАК НомерТТН,
	|	Шапка.Дата        				КАК ДатаТТН,
	|	НЕ Шапка.Проведен 				КАК ЕстьОшибкиПроведен,
	|	Шапка.Организация 				КАК Организация,
	|	Шапка.ПодразделениеОрганизации 	КАК Подразделение,
	|	Шапка.Склад       				КАК СкладКонтрагент
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, "РеализацияТоваровУслуг", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьСписаниеПартийЗЕРНОНаОснованииТребованияНакладная(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Шапка.Ссылка      				КАК ДокументОснование,
	|	Шапка.Номер       				КАК НомерТТН,
	|	Шапка.Дата        				КАК ДатаТТН,
	|	НЕ Шапка.Проведен 				КАК ЕстьОшибкиПроведен,
	|	Шапка.Организация 				КАК Организация,
	|	Шапка.ПодразделениеОрганизации 	КАК Подразделение,
	|	Шапка.Склад       				КАК Склад
	|ИЗ
	|	Документ.ТребованиеНакладная 	КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьСписаниеПартийЗЕРНО(ДокументОбъект, ДанныеЗаполнения, "ТребованиеНакладная", Ложь);	
КонецПроцедуры

#КонецОбласти

#Область ПогашениеСДИЗЗЕРНО

Процедура ОбработкаЗаполненияДокументаПогашениеСДИЗЗЕРНО(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипОснования = ОпределитьТипОснования(ДанныеЗаполнения);
	Если ТипОснования = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("Организация") Тогда
			ДокументОбъект.Организация = ДанныеЗаполнения.Организация;
		Иначе
			ДокументОбъект.Организация = Справочники.Организации.ОрганизацияПоУмолчанию(ПользователиИнформационнойБазы.ТекущийПользователь());
		КонецЕсли;
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПоступлениеИзПереработки") Тогда
		
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПередачаТоваров") Тогда
		
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

Процедура СкрытьХарактеристикуИСериюВДокументахЗЕРНО(Форма) Экспорт
	
	ИмяФормы = Форма.ИмяФормы;
	
	Если ИмяФормы 		= "Документ.ФормированиеПартийЗЕРНО.Форма.ФормаДокумента" 
		ИЛИ ИмяФормы 	= "Документ.ОформлениеСДИЗЗЕРНО.Форма.ФормаДокумента" 
		ИЛИ ИмяФормы 	= "Документ.СписаниеПартийЗЕРНО.Форма.ФормаДокумента" 
		ИЛИ ИмяФормы 	= "Документ.ФормированиеПартийПриПроизводствеЗЕРНО.Форма.ФормаДокумента" 
		ИЛИ ИмяФормы 	= "Документ.ВнесениеСведенийОСобранномУрожаеЗЕРНО.Форма.ФормаДокумента" 
		ИЛИ ИмяФормы 	= "Документ.ПогашениеСДИЗЗЕРНО.Форма.ФормаДокумента" 
		ИЛИ ИмяФормы 	= "Документ.ЗапросОстатковПартийЗЕРНО.Форма.ФормаДокумента" Тогда
		ИменаПолейХарактеристикаСерия = "ТоварыБезРазбиенияХарактеристика,ТоварыБезРазбиенияСерия,ТоварыХарактеристика,ТоварыСерия," +
										"СырьеХарактеристика,СырьеСерия,ОстаткиПоДаннымЗЕРНОХарактеристика,ОстаткиПоДаннымЗЕРНОСерия";
		МассивПолей = СтрРазделить(ИменаПолейХарактеристикаСерия, "," ,Ложь);
		Для Каждого ИмяПоля Из МассивПолей Цикл
			ЭлементФормы = Форма.Элементы.Найти(ИмяПоля);
			Если ЭлементФормы <> Неопределено Тогда
				Форма.Элементы[ИмяПоля].Видимость = Ложь;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
		
КонецПроцедуры

Процедура ЗаполнитьВидПродукцииПоТабличнойЧастиОснования(ДокументОбъект, ДокументОснование) Экспорт
	
	ИмяДокумента = ДокументОснование.Метаданные().Имя;
	
	Если ИмяДокумента 		= "ОтчетПроизводстваЗаСмену" 
		Или ИмяДокумента 	= "ПоступлениеИзПереработки" Тогда
		ИмяТабличнойЧасти 	= "Продукция";
	ИначеЕсли ИмяДокумента 	= "ТребованиеНакладная" Тогда
		ИмяТабличнойЧасти 	= "Материалы";
	Иначе
		ИмяТабличнойЧасти 	= "Товары";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТабличнаяЧастьДокумента.Номенклатура КАК Номенклатура,
	|	ВЫБОР 
	|		КОГДА ТабличнаяЧастьДокумента.Номенклатура.Зерно
	|			ТОГДА ИСТИНА
	|		КОГДА ТабличнаяЧастьДокумента.Номенклатура.ЗерноВЕТИС
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Зерно
	|ИЗ
	|	Документ.%1.%2 КАК ТабличнаяЧастьДокумента
	|ГДЕ
	|	ТабличнаяЧастьДокумента.Ссылка = &ОснованиеСсылка
	|	И (ТабличнаяЧастьДокумента.Номенклатура.Зерно
	|	ИЛИ ТабличнаяЧастьДокумента.Номенклатура.ПродуктыПереработкиЗерна
	|	ИЛИ ТабличнаяЧастьДокумента.Номенклатура.ЗерноВЕТИС
	|	ИЛИ ТабличнаяЧастьДокумента.Номенклатура.ПродуктыПереработкиЗернаВЕТИС)";
	
	ТекстЗапроса = СтрШаблон(ТекстЗапроса, ИмяДокумента, ИмяТабличнойчасти);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ОснованиеСсылка", ДокументОснование);
	ТаблицаТоваров = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаТоваров.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОтборЗерно = Новый Структура("Зерно", Истина);
	Зерно = ТаблицаТоваров.НайтиСтроки(ОтборЗерно);
	Если Зерно.Количество() = ТаблицаТоваров.Количество() Тогда
		ВидПродукции = Перечисления.ВидыПродукцииИС.Зерно;
	ИначеЕсли Зерно.Количество() = 0 Тогда
		ВидПродукции = Перечисления.ВидыПродукцииИС.ПродуктыПереработкиЗерна;
	Иначе
		ВидПродукции = Неопределено;
	КонецЕсли;
	
	Если Не ВидПродукции = Неопределено Тогда
		ДокументОбъект.ВидПродукции = ВидПродукции;
	КонецЕсли;
		
КонецПроцедуры

Функция УчитываемыеВидыПродукцииЗЕРНО() Экспорт
	
	ВидыПродукции = Новый Массив;
	
	ВидыПродукции.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Зерно"));
	ВидыПродукции.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.ПродуктыПереработкиЗерна"));
	ВидыПродукции.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.ЗерноВЕТИС"));
	ВидыПродукции.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.ПродуктыПереработкиЗернаВЕТИС"));
	
	Возврат ВидыПродукции
	
КонецФункции

#КонецОбласти