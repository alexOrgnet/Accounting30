#Область ПрограммныйИнтерфейс

// Возращает счет учета банковского счета по его номеру
//
// Параметры:
//  НомерСчета - Строка - номер счета банковского счета
//  Валютный   - Булево - признак валютного счета, по умолчанию Истина,
//                        т.к. этот параметр используется только для "не российских" банковских счетов
//
// Возвращаемое значение:
//  ПланыСчетовСсылка.Хозрасчетный - счет учета банковского счета.
//
Функция СчетУчетаПоНомеру(НомерСчета, Валютный = Истина, ЦифровойСчет = Ложь) Экспорт
	
	ЭтоIBAN          = БанковскиеПравила.СтрокаСоответствуетФорматуIBAN(НомерСчета);
	ЭтоРублевыйСчет  = БанковскиеПравила.ЭтоРублевыйСчет(НомерСчета);
	СчетПоФорматуРФ  = БанковскиеПравила.СтрокаСоответствуетФорматуБанковскогоСчета(НомерСчета);
	
	Если ЭтоIBAN Или Не СчетПоФорматуРФ Тогда
		// Для не российских счетов нельзя получить валюту счета из номера счета,
		// поэтому используем передаваемый признак.
		ЭтоРублевыйСчет = Не Валютный;
	КонецЕсли;
	
	НазначениеСчета = НазначениеСчета(НомерСчета);
	
	Если Не ЭтоРублевыйСчет Тогда
		НазначениеСчета = НазначениеСчета + "ВВалюте";
	КонецЕсли;
	
	Если ЦифровойСчет Тогда
		НазначениеСчета = "БезналичныеДеньгиЦифровые";
	КонецЕсли;
	
	СчетУчета = СчетБанковскогоСчетаПоНазначению(НазначениеСчета);
	
	Возврат СчетУчета;
	
КонецФункции

// Возращает назначение банковского счета по его номеру
//
// Параметры:
//  НомерСчета - Строка - номер счета банковского счета
//
// Возвращаемое значение:
//  Строка - назначение банковского счета.
//
Функция НазначениеСчета(НомерСчета) Экспорт
	
	НазначениеСчета = "";
	
	БалансовыйСчет   = БанковскиеПравила.БалансовыйСчет(НомерСчета);
	БалансСчетГруппа = Лев(БалансовыйСчет, 3);
	
	СоответствиеСчетов = СоответствиеСпецСчетовБанка();
	Если СоответствиеСчетов[БалансовыйСчет] <> Неопределено Тогда
		НазначениеСчета = СоответствиеСчетов[БалансовыйСчет];
	ИначеЕсли СоответствиеСчетов[БалансСчетГруппа] <> Неопределено Тогда
		// Если не нашли по детальному счету, ищем назначение для группы счета.
		НазначениеСчета = СоответствиеСчетов[БалансСчетГруппа];
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НазначениеСчета) Тогда
		НазначениеСчета = "БезналичныеДеньги"
	КонецЕсли;
	
	Возврат НазначениеСчета;
	
КонецФункции

// Возращает счет учета банковского счета по его назначению
//
// Параметры:
//  НазначениеСчета - Строка - описание назначения счета счета
//
// Возвращаемое значение:
//  ПланыСчетовСсылка.Хозрасчетный - счет учета банковского счета.
//
Функция СчетБанковскогоСчетаПоНазначению(НазначениеСчета) Экспорт
	
	СчетБанка = Неопределено;
	
	Если НазначениеСчета = "БезналичныеДеньги" Тогда
		
		СчетБанка = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.РасчетныеСчета");
		
	ИначеЕсли НазначениеСчета = "БезналичныеДеньгиВВалюте" Тогда
		
		СчетБанка = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ВалютныеСчета");
		
	ИначеЕсли НазначениеСчета = "БезналичныеДеньгиЦифровые" Тогда
		
		СчетБанка = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ЦифровойРубль");
		
	ИначеЕсли НазначениеСчета = "Депозиты" Тогда
		
		СчетБанка = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ДепозитныеСчета");
		
	ИначеЕсли НазначениеСчета = "ДепозитыВВалюте" Тогда
		
		СчетБанка = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ДепозитныеСчетаВал");
		
	ИначеЕсли НазначениеСчета = "СчетКорпоративныхРасчетов"
		Или НазначениеСчета = "ПрочиеСчета" Тогда
		
		СчетБанка = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ПрочиеСпециальныеСчета");
		
	ИначеЕсли НазначениеСчета = "СчетКорпоративныхРасчетовВВалюте"
		Или НазначениеСчета = "ПрочиеСчетаВВалюте" Тогда
		
		СчетБанка = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ПрочиеСпециальныеСчетаВал");
		
	ИначеЕсли НазначениеСчета = "Аккредитивы" Тогда
		
		СчетБанка = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.Аккредитивы");
		
	ИначеЕсли НазначениеСчета = "АккредитивыВВалюте" Тогда
		
		СчетБанка = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.АккредитивыВал");
		
	ИначеЕсли НазначениеСчета = "ЧековыеКнижки" Тогда
		
		СчетБанка = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ЧековыеКнижки");
		
	Иначе
		
		// Значение "по умолчанию"
		СчетБанка = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.РасчетныеСчета");
		
	КонецЕсли;
	
	Возврат СчетБанка;
	
КонецФункции

// Возращает сооветствие балансовых счетов их назначению. Указаны соответствия только для специальных счетов банка (55)
//
// Возвращаемое значение:
//  Соответствие - Ключ - балансовый счет или балансовый счет-группа, Значение - Назначние счета
//
Функция СоответствиеСпецСчетовБанка() Экспорт
	
	// Балансовые счета из Положения Банка России от 24.11.2022 № 809-П
	// "О Плане счетов бухгалтерского учета для кредитных организаций и порядке его применения"
	
	СоответствиеСчетов = Новый Соответствие;
	
	// Обязательства по аккредитивам
	СоответствиеСчетов.Вставить("40901", "Аккредитивы");
	// Обязательства по аккредитивам с нерезидентами
	СоответствиеСчетов.Вставить("40902", "Аккредитивы");
	
	// Средства для расчетов чеками и осуществления переводов (возврата остатков) электронных денежных средств
	СоответствиеСчетов.Вставить("40903", "ЧековыеКнижки");
	
	// Депозиты Федерального казначейства
	СоответствиеСчетов.Вставить("410", "Депозиты");
	// Депозиты финансовых органов субъектов Российской Федерации и органов местного самоуправления
	СоответствиеСчетов.Вставить("411", "Депозиты");
	// Депозиты государственных внебюджетных фондов Российской Федерации
	СоответствиеСчетов.Вставить("412", "Депозиты");
	// Депозиты внебюджетных фондов субъектов Российской Федерации и органов местного самоуправления
	СоответствиеСчетов.Вставить("413", "Депозиты");
	// Депозиты финансовых организаций, находящихся в федеральной собственности
	СоответствиеСчетов.Вставить("414", "Депозиты");
	// Депозиты коммерческих организаций, находящихся в федеральной собственности
	СоответствиеСчетов.Вставить("415", "Депозиты");
	// Депозиты некоммерческих организаций, находящихся в федеральной собственности
	СоответствиеСчетов.Вставить("416", "Депозиты");
	// Депозиты финансовых организаций, находящихся в государственной (кроме федеральной) собственности
	СоответствиеСчетов.Вставить("417", "Депозиты");
	// Депозиты коммерческих организаций, находящихся в государственной (кроме федеральной) собственности
	СоответствиеСчетов.Вставить("418", "Депозиты");
	// Депозиты некоммерческих организаций, находящихся в государственной (кроме федеральной) собственности
	СоответствиеСчетов.Вставить("419", "Депозиты");
	// Депозиты негосударственных финансовых организаций
	СоответствиеСчетов.Вставить("420", "Депозиты");
	// Депозиты негосударственных коммерческих организаций и индивидуальных предпринимателей
	// (основной счет вкладов/депозитов для хозрасчетных организаций)
	СоответствиеСчетов.Вставить("421", "Депозиты");
	// Депозиты негосударственных некоммерческих организаций
	// (основной счет вкладов/депозитов для НКО)
	СоответствиеСчетов.Вставить("422", "Депозиты");
	// Депозиты и прочие привлеченные средства физических лиц
	// (основной счет вкладов/депозитов для физ.лиц)
	СоответствиеСчетов.Вставить("423", "Депозиты");
	// Депозиты юридических лиц - нерезидентов
	СоответствиеСчетов.Вставить("425", "Депозиты");
	// Депозиты и прочие привлеченные средства физических лиц - нерезидентов
	СоответствиеСчетов.Вставить("426", "Депозиты");
	
	// Внутрибанковские обязательства по переводам клиентов
	// (применется в расчетах по депозитам)
	СоответствиеСчетов.Вставить("30301", "Депозиты");
	
	// Средства клиентов по брокерским операциям с финансовыми и другими активами
	СоответствиеСчетов.Вставить("30601", "ПрочиеСчета");
	
	// Специальный банковский счет товариществ собственников жилья, жилищных кооперативов
	// и иных специализированных потребительских кооперативов, управляющих организаций
	СоответствиеСчетов.Вставить("40705", "ПрочиеСчета");
	
	Возврат СоответствиеСчетов;
	
КонецФункции

#КонецОбласти
