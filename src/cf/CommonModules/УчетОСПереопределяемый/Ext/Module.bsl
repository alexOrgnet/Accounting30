
#Область ПрограммныйИнтерфейс

Функция ТекстЗапросаДанныеСтоимостиОС() Экспорт
	
	Возврат "ВЫБРАТЬ
	|	ПервоначальныеСведенияОСБухгалтерскийУчет.ОсновноеСредство КАК Ссылка
	|ПОМЕСТИТЬ НеАмортизируемыеОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&ДатаОкончания, Организация = &Организация) КАК ПервоначальныеСведенияОСБухгалтерскийУчет
	|	
	|ГДЕ
	|	ПервоначальныеСведенияОСБухгалтерскийУчет.ГруппаОС = ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки)
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокДт, 0) КАК СуммаОС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаОкончания,
	|			Счет В (&СчетОС),
	|			&СубконтоОС,
	|			Организация = &Организация
	|				И НЕ Субконто1 В
	|						(ВЫБРАТЬ
	|							НеАмортизируемыеОС.Ссылка
	|						ИЗ
	|							НеАмортизируемыеОС КАК НеАмортизируемыеОС)) КАК ХозрасчетныйОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0) КАК СуммаАмортизации
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаОкончания, Счет В (&СчетаАмортизации), , Организация = &Организация) КАК ХозрасчетныйОстатки";
	
КонецФункции

// Возвращает структуру аналогичную структуре номенклатуре из БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОСпискеНоменклатуры
Функция СведенияОСпискеОсновныхСредств(СписокОсновныхСредств) Экспорт
	
	СведенияОСпискеОсновныхСредств = Новый Соответствие();
	
	СписокОСБезПустыхЗначений = ОбщегоНазначенияКлиентСервер.СкопироватьМассив(СписокОсновныхСредств);
	ОбщегоНазначенияБПКлиентСервер.УдалитьНеЗаполненныеЭлементыМассива(СписокОСБезПустыхЗначений);
	
	СоответствиеСведенийОС = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(СписокОСБезПустыхЗначений,
		"Код, Наименование, НаименованиеПолное, КодТНВЭД, ПрослеживаемыйТовар, ЕдиницаУчета");
	
	Для Каждого ОсновноеСредство Из СписокОСБезПустыхЗначений Цикл
		
		СведенияОбОсновномСредстве = НовыйСведенияОбОсновномСредстве();
		
		ЗаполнитьЗначенияСвойств(СведенияОбОсновномСредстве,
			СоответствиеСведенийОС.Получить(ОсновноеСредство));
		
		СведенияОбОсновномСредстве.АлкогольнаяПродукция        = Ложь;
		СведенияОбОсновномСредстве.Комиссионный                = Ложь;
		СведенияОбОсновномСредстве.ПродукцияМаркируемаяДляГИСМ = Ложь;
		СведенияОбОсновномСредстве.Услуга                      = Ложь;
		СведенияОбОсновномСредстве.Цена                        = 0;
		
		СведенияОСпискеОсновныхСредств.Вставить(ОсновноеСредство, СведенияОбОсновномСредстве);
		
	КонецЦикла;
	
	Возврат СведенияОСпискеОсновныхСредств;
	
КонецФункции

// Возвращает сведения о основном средстве аналогично  БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОСпискеНоменклатуры
Функция СведенияОбОсновномСредстве(ОсновноеСредство) Экспорт

	Если ТипЗнч(ОсновноеСредство) <> Тип("СправочникСсылка.ОсновныеСредства") ИЛИ НЕ ЗначениеЗаполнено(ОсновноеСредство) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СведенияОбОсновномСредстве = СведенияОСпискеОсновныхСредств(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ОсновноеСредство));
	
	Возврат СведенияОбОсновномСредстве.Получить(ОсновноеСредство);

КонецФункции

// Определяет, включен ли учет ОС в ИБ
// 
// Возвращаемое значение:
// Булево - Истина, если включен учет ОС
//
Функция ВедетсяУчетОсновныхСредств() Экспорт 
	Возврат ПолучитьФункциональнуюОпцию("ВедетсяУчетОсновныхСредств");
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НовыйСведенияОбОсновномСредстве()
	
	ИменаРеквизитов =
	"Код, Наименование, НаименованиеПолное, Артикул, ЕдиницаУчета,
	|ЕдиницаИзмерения, КодТНВЭД, ВидСтавкиНДС, Цена, СтавкаНДС,
	|Услуга, НоменклатурнаяГруппа, ПрослеживаемыйКомплект, ПризнакПредметаРасчета,
	|СтранаПроисхождения, НомерГТД, ВидПродукцииИС, Комиссионный,
	|СтатьяЗатрат, ОсновнаяСпецификацияНоменклатуры, ПрослеживаемыйТовар,
	|ПродукцияМаркируемаяДляГИСМ, ПериодичностьУслуги, АлкогольнаяПродукция";
	
	Возврат Новый Структура(ИменаРеквизитов);
	
КонецФункции

#КонецОбласти