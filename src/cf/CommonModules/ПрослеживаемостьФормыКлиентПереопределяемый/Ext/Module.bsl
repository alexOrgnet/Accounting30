
#Область СлужебныйПрограммныйИнтерфейс

#Область Номенклатура

// Процедура открывает форму выбора номенклатуры.
// 
// Параметры:
//  ФормаВладелец - УправляемаяФорма - форма владелец.
//  Реквизиты     - Структура - параметры формы создания номенклатуры.
//
Процедура ОткрытьФормуВыбораНоменклатуры(ФормаВладелец, Знач Реквизиты) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
	ПараметрыФормы.Вставить("Услуга", Ложь);
	ПараметрыФормы.Вставить("СписокНоменклатуры", Реквизиты.СписокНоменклатуры);
	
	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", ПараметрыФормы, ФормаВладелец);
	
КонецПроцедуры

#КонецОбласти

// Процедура открывает форму выбора ТНВЭД
// 
// Параметры:
//  ФормаВладелец - ФормаКлиентскогоПриложения - форма владелец
//  СписокТНВЭД - СписокЗначений - устанавливает отбор по списку ТНВЭД
//
Процедура ОткрытьФормуВыбораТНВЭД(ФормаВладелец, СписокТНВЭД) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СписокТНВЭД", СписокТНВЭД);
	
	ОткрытьФорму("Справочник.КлассификаторТНВЭД.ФормаВыбора", ПараметрыФормы, ФормаВладелец);
	
КонецПроцедуры 

// Обработаывает оповещения от системы
//
// Параметры
//  ИмяСобытия - Строка - Имя события может быть использовано для идентификации сообщений принимающими их формами.
//  Параметр   - Параметр сообщения. Могут быть переданы любые необходимые данные.
//  Источник   - Источник события. Например, в качестве источника может быть указана другая форма.
//  Список      - ДинамическийСписок - ссылка на динамический список на форме.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник, Список) Экспорт
	
	Если ИмяСобытия = "ИзменениеОсновнойОрганизации" Тогда
		ОбщегоНазначенияБПКлиент.ИзменитьОтборПоОсновнойОрганизации(Список, ,Параметр);
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает значения периода.
//
// Параметры:
//  Элемент      - ПолеФормы - элемент формы, с которым связано событие.
//  ВыбранноеЗначение - Дата - начало выбранного периода.
//  СтандартнаяОбработка - Булево - признак стандартной (системной) обработки события.
//  ВидПериода   - ПеречислениеСсылка.ДоступныеПериодыОтчета - кратность периода.
//  Период       - Строка - см. ВыборПериодаКлиентСервер.ПолучитьПредставлениеПериодаОтчета().
//  НачалоПериода - Дата - нижняя граница периода.
//  КонецПериода - Дата - верхняя граница периода.
// 
Процедура ПериодОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка, ВидПериода, Период, НачалоПериода, КонецПериода) Экспорт

	ВыборПериодаКлиент.ПериодОбработкаВыбора(
		Элемент,
		ВыбранноеЗначение,
		СтандартнаяОбработка,
		ВидПериода,
		Период,
		НачалоПериода,
		КонецПериода);
	
КонецПроцедуры 

// Выбор периода в помощнике получения РНПТ
// 
// Параметры:
// Форма - ФормаКлиентскогоПриложения - форма помощника
//
Процедура ПредставлениеПериодаНачалоВыбораВПомощникеРНПТ(Форма) Экспорт
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ПараметрыВыбора = Новый Структура;
	ПараметрыВыбора.Вставить("НачалоПериода", НачалоМесяца(Объект.Период));
	ПараметрыВыбора.Вставить("КонецПериода",  КонецМесяца(Объект.Период));
	ПараметрыВыбора.Вставить("ВидПериода",    ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Месяц"));
	ПараметрыВыбора.Вставить("ОграничениеСнизу", Форма.ДатаНачалаУчетаПрослеживаемыхТоваров);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПериодЗавершениеВыбора", Форма);
	
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериодаМесяц", 
		ПараметрыВыбора, Элементы.Представлениепериода, , , , ОписаниеОповещения);
	
КонецПроцедуры

// Проверяет соответствие реквизитов шапки с реквизитами табличной части
//
// Параметры: 
// ФормаВладелец - ФормаКлиентскогоПриложения - форма владелец
// Отказ - булево - признак отказа
// ПараметрыЗаписи - РежимЗаписиДокумента - режимы записи документа
//
Процедура ПроверитьСоответствиеРеквизитовВШапкеИТабличнойЧасти(Форма, Отказ, ПараметрыЗаписи) Экспорт
	
	Если ПараметрыЗаписи.РежимЗаписи <> РежимЗаписиДокумента.Проведение Тогда
		Возврат;
	КонецЕсли;
	
	Объект = Форма.Объект;
	НомерКорректировки = Объект.НомерКорректировки;
	
	ЭтоКомплектующиеОС = Объект.ВидОперации = 
		ПредопределенноеЗначение("Перечисление.ВидыОперацийУведомленияОбОстаткахПрослеживаемыхОбъектов.КомплектующиеОС");
	
	ТекущийКодТНВЭД = ?(НомерКорректировки = 0, Объект.КодТНВЭД, Объект.КодТНВЭДПослеИзменения);
	ТекущаяЕдиницаИзмерения = ?(НомерКорректировки = 0, Объект.ЕдиницаИзмерения, Объект.ЕдиницаИзмеренияПослеИзменения);
	
	Для каждого ТекущаяСтрокаТовары Из Объект.Товары Цикл
		
		ЕстьНоменклатура = Ложь;
		ЕстьОС = Ложь;
		
		Если ЗначениеЗаполнено(ТекущаяСтрокаТовары.Номенклатура) Тогда
			ЕстьНоменклатура = Истина;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекущаяСтрокаТовары.ОсновноеСредство) Тогда
			ЕстьОС = Истина;
		КонецЕсли;
		
		
		Если НомерКорректировки > 0 
			И ТекущаяСтрокаТовары.КоличествоПослеИзменения = 0
			И ТекущаяСтрокаТовары.КоличествоПрослеживаемостиПослеИзменения = 0
			И ТекущаяСтрокаТовары.СуммаПослеИзменения = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЕстьНоменклатура Тогда 
			
			ПараметрыНоменклатуры = ПрослеживаемостьФормыВызовСервера.ПараметрыНоменклатуры(ТекущаяСтрокаТовары.Номенклатура);
		
			Если ПараметрыНоменклатуры.КодТНВЭД <> ТекущийКодТНВЭД Тогда
				
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
					"Поле", "Корректность", ?(ЕстьОС, НСтр("ru = 'Комплектующее'"), НСтр("ru = 'Номенклатура'")),,,
					НСтр("ru = 'В номенклатуре %1 ТН ВЭД %2 не совпадает со значением ТН ВЭД %3 в шапке документа'"));
				
				Если ЕстьОС Тогда
					ТекстСообщения = СтрЗаменить(ТекстСообщения, НСтр("ru = 'номенклатуре'"), НСтр("ru = 'комплектующем'"));
				КонецЕсли;
				
				ТекстСообщения = СтрШаблон(
					ТекстСообщения, 
					ТекущаяСтрокаТовары.Номенклатура,
					ПараметрыНоменклатуры.КодТНВЭД,
					ТекущийКодТНВЭД);
				
				ПутьКДанным = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
				"Объект.Товары", ТекущаяСтрокаТовары.НомерСтроки, "Номенклатура");
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, ПутьКДанным,, Отказ);
				
			ИначеЕсли ПараметрыНоменклатуры.ЕдиницаИзмерения <> ТекущаяЕдиницаИзмерения Тогда
				
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
				"Поле", "Корректность", НСтр("ru = 'Номенклатура'"),,,
				НСтр("ru = 'В номенклатуре %1 единица измерения %2 не совпадает со значением единицы измерения %3 в шапке документа'"));
				
				Если ЕстьОС Тогда
					ТекстСообщения = СтрЗаменить(ТекстСообщения, НСтр("ru = 'номенклатуре'"), НСтр("ru = 'комплектующем'"));
				КонецЕсли;
				
				ТекстСообщения = СтрШаблон(
				ТекстСообщения,
				ТекущаяСтрокаТовары.Номенклатура,
				ПараметрыНоменклатуры.ЕдиницаИзмерения,
				ТекущаяЕдиницаИзмерения);
				
				ПутьКДанным = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
				"Объект.Товары", ТекущаяСтрокаТовары.НомерСтроки, "Номенклатура");
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, ПутьКДанным,, Отказ);
				
			КонецЕсли;
			
		ИначеЕсли ЕстьОС И НЕ ЭтоКомплектующиеОС Тогда
			
			ПараметрыОС = ПрослеживаемостьФормыВызовСервера.ПараметрыОС(ТекущаяСтрокаТовары.ОсновноеСредство);
		
			Если ПараметрыОС.КодТНВЭД <> ТекущийКодТНВЭД Тогда
				
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
				"Поле", "Корректность", НСтр("ru = 'ОсновноеСредство'"),,,
				НСтр("ru = 'В основном средстве %1 ТН ВЭД %2 не совпадает со значением ТН ВЭД %3 в шапке документа'"));
				
				ТекстСообщения = СтрШаблон(
				ТекстСообщения, 
				ТекущаяСтрокаТовары.ОсновноеСредство,
				ПараметрыОС.КодТНВЭД,
				ТекущийКодТНВЭД);
				
				ПутьКДанным = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
				"Объект.Товары", ТекущаяСтрокаТовары.НомерСтроки, "ОсновноеСредство");
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, ПутьКДанным,, Отказ);
				
			ИначеЕсли ПараметрыОС.ЕдиницаИзмерения <> ТекущаяЕдиницаИзмерения Тогда
				
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
				"Поле", "Корректность", НСтр("ru = 'Основное средство'"),,,
				НСтр("ru = 'В основном средстве %1 единица измерения %2 не совпадает со значением единицы измерения %3 в шапке документа'"));
				
				ТекстСообщения = СтрШаблон(
				ТекстСообщения,
				ТекущаяСтрокаТовары.ОсновноеСредство,
				ПараметрыОС.ЕдиницаИзмерения,
				ТекущаяЕдиницаИзмерения);
				
				ПутьКДанным = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
				"Объект.Товары", ТекущаяСтрокаТовары.НомерСтроки, "ОсновноеСредство");
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, ПутьКДанным,, Отказ);
				
			КонецЕсли;
			
		КонецЕсли;
			
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ФормаВыбораНоменклатуры() Экспорт
	
	Возврат "Справочник.Номенклатура.Форма.ФормаВыбора";
	
КонецФункции

Функция ФормаВыбораСопроводительногоДокументаВУведомленииОПеремещении() Экспорт
	
	Возврат "Документ.РеализацияТоваровУслуг.Форма.ФормаВыбора";
	
КонецФункции

Функция ФормаВыбораТНВЭД() Экспорт
	
	Возврат "Справочник.КлассификаторТНВЭД.Форма.ФормаВыбора";
	
КонецФункции

#КонецОбласти
