////////////////////////////////////////////////////////////////////////////////
// ЗАПОЛНЕНИЕ БУХГАЛТЕРСКОЙ ОТЧЕТНОСТИ.
// Модуль предназначен для заполнения регламентированного отчета
// "Бухгалтерская отчетность организаций" и финансовой отчетности в банки.
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

Функция Счет(УсловныйКодСчета) Экспорт
	
	ПС = ПланыСчетов.Хозрасчетный;
	
	Результат = ПС.ПустаяСсылка();
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ЗаполнитьСчетПоУсловномуКоду(УсловныйКодСчета, Результат);
	
	Если ЗначениеЗаполнено(Результат) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если УсловныйКодСчета = "01" Тогда
		Результат = ПС.ОсновныеСредства;
	ИначеЕсли УсловныйКодСчета = "01.01" Тогда
		Результат = ПС.ОСвОрганизации;
	ИначеЕсли УсловныйКодСчета = "01.03" Тогда
		Результат = ПС.АрендованноеИмущество;
	ИначеЕсли УсловныйКодСчета = "01.05" Тогда
		Результат = ПС.ЗатратыНаРемонтОС;
	ИначеЕсли УсловныйКодСчета = "01.08" Тогда
		Результат = ПС.ОСБезГосРегистрации;
	ИначеЕсли УсловныйКодСчета = "01.09" Тогда
		Результат = ПС.ВыбытиеОС;
	ИначеЕсли УсловныйКодСчета = "01.11" Тогда
		Результат = ПС.ГрупповыеОбъектыОС;
	ИначеЕсли УсловныйКодСчета = "02" Тогда
		Результат = ПС.АмортизацияОсновныхСредств;
	ИначеЕсли УсловныйКодСчета = "02.01" Тогда
		Результат = ПС.АмортизацияОС_01;
	ИначеЕсли УсловныйКодСчета = "02.02" Тогда
		Результат = ПС.АмортизацияОС_03;
	ИначеЕсли УсловныйКодСчета = "02.03" Тогда
		Результат = ПС.АмортизацияАрендованногоИмущества;
	ИначеЕсли УсловныйКодСчета = "02.04" Тогда
		Результат = ПС.ОбесценениеОС_01;
	ИначеЕсли УсловныйКодСчета = "02.05" Тогда
		Результат = ПС.АмортизацияЗатратНаРемонтОС;
	ИначеЕсли УсловныйКодСчета = "02.11" Тогда
		Результат = ПС.АмортизацияГрупповыхОбъектовОС;
	ИначеЕсли УсловныйКодСчета = "03" Тогда
		Результат = ПС.ДоходныеВложенияВ_МЦ;
	ИначеЕсли УсловныйКодСчета = "03.01" Тогда
		Результат = ПС.МЦвОрганизации;
	ИначеЕсли УсловныйКодСчета = "03.02" Тогда
		Результат = ПС.МЦ_ПредоставленныеВоВременноеВладение;
	ИначеЕсли УсловныйКодСчета = "03.03" Тогда
		Результат = ПС.МЦ_ПредоставленныеВоВременноеПользование;
	ИначеЕсли УсловныйКодСчета = "03.04" Тогда
		Результат = ПС.ПрочиеДоходныеВложения;
	ИначеЕсли УсловныйКодСчета = "03.09" Тогда
		Результат = ПС.ВыбытиеМЦ;
	ИначеЕсли УсловныйКодСчета = "04" Тогда
		Результат = ПС.НематериальныеАктивы;
	ИначеЕсли УсловныйКодСчета = "04.01" Тогда
		Результат = ПС.НематериальныеАктивыОрганизации;
	ИначеЕсли УсловныйКодСчета = "04.02" Тогда
		Результат = ПС.РасходыНаНИОКР;
	ИначеЕсли УсловныйКодСчета = "05" Тогда
		Результат = ПС.АмортизацияНематериальныхАктивов;
	ИначеЕсли УсловныйКодСчета = "07" Тогда
		Результат = ПС.ОборудованиеКУстановке;
	ИначеЕсли УсловныйКодСчета = "08" Тогда
		Результат = ПС.ВложенияВоВнеоборотныеАктивы;
	ИначеЕсли УсловныйКодСчета = "08.01" Тогда
		Результат = ПС.ПриобретениеЗемельныхУчастков;
	ИначеЕсли УсловныйКодСчета = "08.01.2" Тогда
		Результат = ПС.ПриобретениеЗемельныхУчастковБезДопРасходов;
	ИначеЕсли УсловныйКодСчета = "08.02" Тогда
		Результат = ПС.ПриобретениеОбъектовПриродопользования;
	ИначеЕсли УсловныйКодСчета = "08.03" Тогда
		Результат = ПС.СтроительствоОбъектовОсновныхСредств;
	ИначеЕсли УсловныйКодСчета = "08.04" Тогда
		Результат = ПС.ПриобретениеОбъектовОсновныхСредств;
	ИначеЕсли УсловныйКодСчета = "08.04.2" Тогда
		Результат = ПС.ПриобретениеОсновныхСредств;
	ИначеЕсли УсловныйКодСчета = "08.04.5" Тогда
		Результат = ПС.ВложенияВРемонтыОсновныхСредств;
	ИначеЕсли УсловныйКодСчета = "08.05" Тогда
		Результат = ПС.ПриобретениеНематериальныхАктивов;
	ИначеЕсли УсловныйКодСчета = "08.06" Тогда
		Результат = ПС.ПереводМолоднякаЖивотныхВОсновноеСтадо;
	ИначеЕсли УсловныйКодСчета = "08.07" Тогда
		Результат = ПС.ПриобретениеВзрослыхЖивотных;
	ИначеЕсли УсловныйКодСчета = "08.08" Тогда
		Результат = ПС.ВыполнениеНИОКР;
	ИначеЕсли УсловныйКодСчета = "08.11" Тогда
		Результат = ПС.НематериальныеПоисковыеАктивы;
	ИначеЕсли УсловныйКодСчета = "08.12" Тогда
		Результат = ПС.МатериальныеПоисковыеАктивы;
	ИначеЕсли УсловныйКодСчета = "09" Тогда
		Результат = ПС.ОтложенныеНалоговыеАктивы;
	ИначеЕсли УсловныйКодСчета = "10" Тогда
		Результат = ПС.Материалы;
	ИначеЕсли УсловныйКодСчета = "11" Тогда
		Результат = ПС.ЖивотныеНаВыращиванииИОткорме;
	ИначеЕсли УсловныйКодСчета = "14" Тогда
		Результат = ПС.РезервыПодСнижениеСтоимостиМЦ;
	ИначеЕсли УсловныйКодСчета = "14.01" Тогда
		Результат = ПС.РезервыПодСнижениеСтоимостиМатериалов;
	ИначеЕсли УсловныйКодСчета = "14.02" Тогда
		Результат = ПС.РезервыПодСнижениеСтоимостиТоваров;
	ИначеЕсли УсловныйКодСчета = "14.03" Тогда
		Результат = ПС.РезервыПодСнижениеСтоимостиГотовойПродукции;
	ИначеЕсли УсловныйКодСчета = "14.04" Тогда
		Результат = ПС.РезервыПодСнижениеСтоимостиНезавершенногоПроизводства;
	ИначеЕсли УсловныйКодСчета = "15" Тогда
		Результат = ПС.ЗаготовлениеИПриобретениеМЦ;
	ИначеЕсли УсловныйКодСчета = "15.01" Тогда
		Результат = ПС.ЗаготовлениеИПриобретениеМатериалов;
	ИначеЕсли УсловныйКодСчета = "15.02" Тогда
		Результат = ПС.ПриобретениеТоваров;
	ИначеЕсли УсловныйКодСчета = "16" Тогда
		Результат = ПС.ОтклонениеВСтоимостиМЦ;
	ИначеЕсли УсловныйКодСчета = "16.01" Тогда
		Результат = ПС.ОтклонениеВСтоимостиМатериалов;
	ИначеЕсли УсловныйКодСчета = "16.02" Тогда
		Результат = ПС.ОтклонениеВСтоимостиТоваров;
	ИначеЕсли УсловныйКодСчета = "19" Тогда
		Результат = ПС.НДСпоПриобретеннымЦенностям;
	ИначеЕсли УсловныйКодСчета = "19.01" Тогда
		Результат = ПС.НДСприПриобретенииОсновныхСредств;
	ИначеЕсли УсловныйКодСчета = "19.02" Тогда
		Результат = ПС.НДСпоПриобретеннымНематериальнымАктивам;
	ИначеЕсли УсловныйКодСчета = "19.03" Тогда
		Результат = ПС.НДСпоПриобретеннымМПЗ;
	ИначеЕсли УсловныйКодСчета = "19.04" Тогда
		Результат = ПС.НДСпоПриобретеннымУслугам;
	ИначеЕсли УсловныйКодСчета = "19.05" Тогда
		Результат = ПС.НДСуплачиваемыйТаможеннымОрганам;
	ИначеЕсли УсловныйКодСчета = "19.06" Тогда
		Результат = ПС.АкцизыПоОплаченнымМатериальнымЦенностям;
	ИначеЕсли УсловныйКодСчета = "19.07" Тогда
		Результат = ПС.НДСПоТоварамРеализованнымПоСтавке0;
	ИначеЕсли УсловныйКодСчета = "19.08" Тогда
		Результат = ПС.НДСприСтроительствеОсновныхСредств;
	ИначеЕсли УсловныйКодСчета = "19.10" Тогда
		Результат = ПС.НДСУплачиваемыйПриИмпортеИзТаможенногоСоюза;
	ИначеЕсли УсловныйКодСчета = "20" Тогда
		Результат = ПС.ОсновноеПроизводство_;
	ИначеЕсли УсловныйКодСчета = "20.01" Тогда
		Результат = ПС.ОсновноеПроизводство;
	ИначеЕсли УсловныйКодСчета = "20.02" Тогда
		Результат = ПС.ПроизводствоИзДавальческогоСырья;
	ИначеЕсли УсловныйКодСчета = "21" Тогда
		Результат = ПС.Полуфабрикаты;
	ИначеЕсли УсловныйКодСчета = "23" Тогда
		Результат = ПС.ВспомогательныеПроизводства_;
	ИначеЕсли УсловныйКодСчета = "23.05" Тогда
		Результат = ПС.ВыполнениеРемонтовОС;
	ИначеЕсли УсловныйКодСчета = "25" Тогда
		Результат = ПС.ОбщепроизводственныеРасходы;
	ИначеЕсли УсловныйКодСчета = "26" Тогда
		Результат = ПС.ОбщехозяйственныеРасходы;
	ИначеЕсли УсловныйКодСчета = "28" Тогда
		Результат = ПС.БракВПроизводстве;
	ИначеЕсли УсловныйКодСчета = "29" Тогда
		Результат = ПС.ОбслуживающиеПроизводства;
	ИначеЕсли УсловныйКодСчета = "40" Тогда
		Результат = ПС.ВыпускПродукции;
	ИначеЕсли УсловныйКодСчета = "41" Тогда
		Результат = ПС.Товары;
	ИначеЕсли УсловныйКодСчета = "41.01" Тогда
		Результат = ПС.ТоварыНаСкладах;
	ИначеЕсли УсловныйКодСчета = "41.02" Тогда
		Результат = ПС.ТоварыВРозничнойТорговле;
	ИначеЕсли УсловныйКодСчета = "41.03" Тогда
		Результат = ПС.ТараПодТоваромИПорожняя;
	ИначеЕсли УсловныйКодСчета = "41.04" Тогда
		Результат = ПС.ПокупныеИзделия;
	ИначеЕсли УсловныйКодСчета = "41.11" Тогда
		Результат = ПС.ТоварыВРозничнойТорговлеВПродажныхЦенахАТТ;
	ИначеЕсли УсловныйКодСчета = "41.12" Тогда
		Результат = ПС.ТоварыВРозничнойТорговлеВПродажныхЦенахНТТ;
	ИначеЕсли УсловныйКодСчета = "42" Тогда
		Результат = ПС.ТорговаяНаценка;
	ИначеЕсли УсловныйКодСчета = "43" Тогда
		Результат = ПС.ГотоваяПродукция;
	ИначеЕсли УсловныйКодСчета = "44" Тогда
		Результат = ПС.РасходыНаПродажу;
	ИначеЕсли УсловныйКодСчета = "45" Тогда
		Результат = ПС.ТоварыОтгруженные;
	ИначеЕсли УсловныйКодСчета = "45.01" Тогда
		Результат = ПС.ПокупныеТоварыОтгруженные;
	ИначеЕсли УсловныйКодСчета = "45.02" Тогда
		Результат = ПС.ГотоваяПродукцияОтгруженная;
	ИначеЕсли УсловныйКодСчета = "45.03" Тогда
		Результат = ПС.ПрочиеТоварыОтгруженные;
	ИначеЕсли УсловныйКодСчета = "46" Тогда
		Результат = ПС.ВыполненныеЭтапыПоНезавершеннымРаботам;
	ИначеЕсли УсловныйКодСчета = "50" Тогда
		Результат = ПС.Касса;
	ИначеЕсли УсловныйКодСчета = "50.01" Тогда
		Результат = ПС.КассаОрганизации;
	ИначеЕсли УсловныйКодСчета = "50.02" Тогда
		Результат = ПС.ОперационнаяКасса;
	ИначеЕсли УсловныйКодСчета = "50.03" Тогда
		Результат = ПС.ДенежныеДокументы;
	ИначеЕсли УсловныйКодСчета = "50.04" Тогда
		Результат = ПС.КассаПлатежногоАгента;
	ИначеЕсли УсловныйКодСчета = "50.21" Тогда
		Результат = ПС.КассаОрганизацииВал;
	ИначеЕсли УсловныйКодСчета = "50.23" Тогда
		Результат = ПС.ДенежныеДокументыВал;
	ИначеЕсли УсловныйКодСчета = "51" Тогда
		Результат = ПС.РасчетныеСчета;
	ИначеЕсли УсловныйКодСчета = "52" Тогда
		Результат = ПС.ВалютныеСчета;
	ИначеЕсли УсловныйКодСчета = "53" Тогда
		Результат = ПС.ЦифровойРубль;
	ИначеЕсли УсловныйКодСчета = "55" Тогда
		Результат = ПС.СпециальныеСчета;
	ИначеЕсли УсловныйКодСчета = "55.01" Тогда
		Результат = ПС.Аккредитивы;
	ИначеЕсли УсловныйКодСчета = "55.02" Тогда
		Результат = ПС.ЧековыеКнижки;
	ИначеЕсли УсловныйКодСчета = "55.03" Тогда
		Результат = ПС.ДепозитныеСчета;
	ИначеЕсли УсловныйКодСчета = "55.04" Тогда
		Результат = ПС.ПрочиеСпециальныеСчета;
	ИначеЕсли УсловныйКодСчета = "55.21" Тогда
		Результат = ПС.АккредитивыВал;
	ИначеЕсли УсловныйКодСчета = "55.23" Тогда
		Результат = ПС.ДепозитныеСчетаВал;
	ИначеЕсли УсловныйКодСчета = "55.24" Тогда
		Результат = ПС.ПрочиеСпециальныеСчетаВал;
	ИначеЕсли УсловныйКодСчета = "57" Тогда
		Результат = ПС.ПереводыВПути_;
	ИначеЕсли УсловныйКодСчета = "57.01" Тогда
		Результат = ПС.ПереводыВПути;
	ИначеЕсли УсловныйКодСчета = "57.21" Тогда
		Результат = ПС.ПереводыВПутиВал;
	ИначеЕсли УсловныйКодСчета = "57.02" Тогда
		Результат = ПС.ПриобретениеИностраннойВалюты;
	ИначеЕсли УсловныйКодСчета = "57.22" Тогда
		Результат = ПС.РеализацияИностраннойВалюты;
	ИначеЕсли УсловныйКодСчета = "57.03" Тогда
		Результат = ПС.ПродажиПоПлатежнымКартам;
	ИначеЕсли УсловныйКодСчета = "58" Тогда
		Результат = ПС.ФинансовыеВложения;
	ИначеЕсли УсловныйКодСчета = "58.01.1" Тогда
		Результат = ПС.Паи;
	ИначеЕсли УсловныйКодСчета = "58.01.2" Тогда
		Результат = ПС.Акции;
	ИначеЕсли УсловныйКодСчета = "58.02" Тогда
		Результат = ПС.ДолговыеЦенныеБумаги;
	ИначеЕсли УсловныйКодСчета = "58.03" Тогда
		Результат = ПС.ПредоставленныеЗаймы;
	ИначеЕсли УсловныйКодСчета = "58.04" Тогда
		Результат = ПС.ВкладыПоДоговоруПростогоТоварищества;
	ИначеЕсли УсловныйКодСчета = "58.05" Тогда
		Результат = ПС.ПриобретенныеПрава;
	ИначеЕсли УсловныйКодСчета = "59" Тогда
		Результат = ПС.РезервыПодОбесценениеФинансовыхВложений;
	ИначеЕсли УсловныйКодСчета = "60" Тогда
		Результат = ПС.РасчетыСПоставщикамиИПодрядчиками;
	ИначеЕсли УсловныйКодСчета = "60.01" Тогда
		Результат = ПС.РасчетыСПоставщиками;
	ИначеЕсли УсловныйКодСчета = "60.02" Тогда
		Результат = ПС.РасчетыПоАвансамВыданным;
	ИначеЕсли УсловныйКодСчета = "60.03" Тогда
		Результат = ПС.ВекселяВыданные;
	ИначеЕсли УсловныйКодСчета = "60.21" Тогда
		Результат = ПС.РасчетыСПоставщикамиВал;
	ИначеЕсли УсловныйКодСчета = "60.22" Тогда
		Результат = ПС.РасчетыПоАвансамВыданнымВал;
	ИначеЕсли УсловныйКодСчета = "60.31" Тогда
		Результат = ПС.РасчетыСПоставщикамиУЕ;
	ИначеЕсли УсловныйКодСчета = "60.32" Тогда
		Результат = ПС.РасчетыПоАвансамВыданнымУЕ;
	ИначеЕсли УсловныйКодСчета = "62" Тогда
		Результат = ПС.РасчетыСПокупателямиИЗаказчиками;
	ИначеЕсли УсловныйКодСчета = "62.01" Тогда
		Результат = ПС.РасчетыСПокупателями;
	ИначеЕсли УсловныйКодСчета = "62.02" Тогда
		Результат = ПС.РасчетыПоАвансамПолученным;
	ИначеЕсли УсловныйКодСчета = "62.03" Тогда
		Результат = ПС.ВекселяПолученные;
	ИначеЕсли УсловныйКодСчета = "62.21" Тогда
		Результат = ПС.РасчетыСПокупателямиВал;
	ИначеЕсли УсловныйКодСчета = "62.22" Тогда
		Результат = ПС.РасчетыПоАвансамПолученнымВал;
	ИначеЕсли УсловныйКодСчета = "62.31" Тогда
		Результат = ПС.РасчетыСПокупателямиУЕ;
	ИначеЕсли УсловныйКодСчета = "62.32" Тогда
		Результат = ПС.РасчетыПоАвансамПолученнымУЕ;
	ИначеЕсли УсловныйКодСчета = "62.ОТ" Тогда
		Результат = ПС.РасчетыПоАвансамПолученнымВСчетОтгрузки;
	ИначеЕсли УсловныйКодСчета = "62.ОТ.1" Тогда
		Результат = ПС.РасчетыПоАвансамПолученнымВСчетОтгрузкиРуб;
	ИначеЕсли УсловныйКодСчета = "62.ОТ.2" Тогда
		Результат = ПС.РасчетыПоАвансамПолученнымВСчетОтгрузкиВал;
	ИначеЕсли УсловныйКодСчета = "62.ОТ.3" Тогда
		Результат = ПС.РасчетыПоАвансамПолученнымВСчетОтгрузкиУЕ;
	ИначеЕсли УсловныйКодСчета = "63" Тогда
		Результат = ПС.РезервыПоСомнительнымДолгам;
	ИначеЕсли УсловныйКодСчета = "66" Тогда
		Результат = ПС.РасчетыПоКраткосрочнымКредитамИЗаймам;
	ИначеЕсли УсловныйКодСчета = "66.01" Тогда
		Результат = ПС.КраткосрочныеКредиты;
	ИначеЕсли УсловныйКодСчета = "66.02" Тогда
		Результат = ПС.ПроцентыПоКраткосрочнымКредитам;
	ИначеЕсли УсловныйКодСчета = "66.03" Тогда
		Результат = ПС.КраткосрочныеЗаймы;
	ИначеЕсли УсловныйКодСчета = "66.04" Тогда
		Результат = ПС.ПроцентыПоКраткосрочнымЗаймам;
	ИначеЕсли УсловныйКодСчета = "66.05" Тогда
		Результат = ПС.КраткосрочныеДолговыеЦенныеБумаги;
	ИначеЕсли УсловныйКодСчета = "66.06" Тогда
		Результат = ПС.ПроцентыПоКраткосрочнымДолговымЦеннымБумагам;
	ИначеЕсли УсловныйКодСчета = "66.21" Тогда
		Результат = ПС.КраткосрочныеКредитыВал;
	ИначеЕсли УсловныйКодСчета = "66.22" Тогда
		Результат = ПС.ПроцентыПоКраткосрочнымКредитамВал;
	ИначеЕсли УсловныйКодСчета = "66.23" Тогда
		Результат = ПС.КраткосрочныеЗаймыВал;
	ИначеЕсли УсловныйКодСчета = "66.24" Тогда
		Результат = ПС.ПроцентыПоКраткосрочнымЗаймамВал;
	ИначеЕсли УсловныйКодСчета = "66.25" Тогда
		Результат = ПС.КраткосрочныеДолговыеЦенныеБумагиВал;
	ИначеЕсли УсловныйКодСчета = "66.26" Тогда
		Результат = ПС.ПроцентыПоКраткосрочнымДолговымЦеннымБумагамВал;
	ИначеЕсли УсловныйКодСчета = "67" Тогда
		Результат = ПС.РасчетыПоДолгосрочнымКредитамИЗаймам;
	ИначеЕсли УсловныйКодСчета = "67.01" Тогда
		Результат = ПС.ДолгосрочныеКредиты;
	ИначеЕсли УсловныйКодСчета = "67.02" Тогда
		Результат = ПС.ПроцентыПоДолгосрочнымКредитам;
	ИначеЕсли УсловныйКодСчета = "67.03" Тогда
		Результат = ПС.ДолгосрочныеЗаймы;
	ИначеЕсли УсловныйКодСчета = "67.04" Тогда
		Результат = ПС.ПроцентыПоДолгосрочнымЗаймам;
	ИначеЕсли УсловныйКодСчета = "67.05" Тогда
		Результат = ПС.ДолгосрочныеДолговыеЦенныеБумаги;
	ИначеЕсли УсловныйКодСчета = "67.06" Тогда
		Результат = ПС.ПроцентыПроцентыПоДолгосрочнымДолговымЦеннымБумагам;
	ИначеЕсли УсловныйКодСчета = "67.21" Тогда
		Результат = ПС.ДолгосрочныеКредитыВал;
	ИначеЕсли УсловныйКодСчета = "67.22" Тогда
		Результат = ПС.ПроцентыПоДолгосрочнымКредитамВал;
	ИначеЕсли УсловныйКодСчета = "67.23" Тогда
		Результат = ПС.ДолгосрочныеЗаймыВал;
	ИначеЕсли УсловныйКодСчета = "67.24" Тогда
		Результат = ПС.ПроцентыПоДолгосрочнымЗаймамВал;
	ИначеЕсли УсловныйКодСчета = "67.25" Тогда
		Результат = ПС.ДолгосрочныеДолговыеЦенныеБумагиВал;
	ИначеЕсли УсловныйКодСчета = "67.26" Тогда
		Результат = ПС.ПроцентыПоДолгосрочнымДолговымЦеннымБумагамВал;
	ИначеЕсли УсловныйКодСчета = "68" Тогда
		Результат = ПС.РасчетыПоНалогам;
	ИначеЕсли УсловныйКодСчета = "68.01" Тогда
		Результат = ПС.НДФЛ_НалоговогоАгента;
	ИначеЕсли УсловныйКодСчета = "68.01.1" Тогда
		Результат = ПС.НДФЛ;
	ИначеЕсли УсловныйКодСчета = "68.01.2" Тогда
		Результат = ПС.НДФЛ_ДоходыСвышеПредельнойВеличины;
	ИначеЕсли УсловныйКодСчета = "68.02" Тогда
		Результат = ПС.НДС;
	ИначеЕсли УсловныйКодСчета = "68.03" Тогда
		Результат = ПС.Акцизы;
	ИначеЕсли УсловныйКодСчета = "68.04" Тогда
		Результат = ПС.НалогНаПрибыль;
	ИначеЕсли УсловныйКодСчета = "68.04.1" Тогда
		Результат = ПС.РасчетыСБюджетом;
	ИначеЕсли УсловныйКодСчета = "68.04.2" Тогда
		Результат = ПС.РасчетНалогаНаПрибыль;
	ИначеЕсли УсловныйКодСчета = "68.06" Тогда
		Результат = ПС.ЗемельныйНалог;
	ИначеЕсли УсловныйКодСчета = "68.07" Тогда
		Результат = ПС.ТранспортныйНалог;
	ИначеЕсли УсловныйКодСчета = "68.08" Тогда
		Результат = ПС.НалогНаИмущество;
	ИначеЕсли УсловныйКодСчета = "68.09" Тогда
		Результат = ПС.НалогНаРекламу;
	ИначеЕсли УсловныйКодСчета = "68.10" Тогда
		Результат = ПС.ПрочиеНалогиИСборы;
	ИначеЕсли УсловныйКодСчета = "68.11" Тогда
		Результат = ПС.ЕНВД;
	ИначеЕсли УсловныйКодСчета = "68.12" Тогда
		Результат = ПС.ЕНприУСН;
	ИначеЕсли УсловныйКодСчета = "68.13" Тогда
		Результат = ПС.ТорговыйСбор;
	ИначеЕсли УсловныйКодСчета = "68.14" Тогда
		Результат = ПС.НалогПриПСН;
	ИначеЕсли УсловныйКодСчета = "68.15" Тогда
		Результат = ПС.НалогПриАУСН;
	ИначеЕсли УсловныйКодСчета = "68.16" Тогда
		Результат = ПС.НалогНаПрофессиональныйДоход;
	ИначеЕсли УсловныйКодСчета = "68.21" Тогда
		Результат = ПС.НДФЛПредпринимателя;
	ИначеЕсли УсловныйКодСчета = "68.21.1" Тогда
		Результат = ПС.НДФЛ_ИП;
	ИначеЕсли УсловныйКодСчета = "68.21.2" Тогда
		Результат = ПС.НДФЛ_ИП_НалоговаяБазаСвышеПредельнойВеличины;
	ИначеЕсли УсловныйКодСчета = "68.22" Тогда
		Результат = ПС.НДСпоЭкспортуКВозмещению;
	ИначеЕсли УсловныйКодСчета = "68.32" Тогда
		Результат = ПС.НДСНалоговогоАгента;
	ИначеЕсли УсловныйКодСчета = "68.34" Тогда
		Результат = ПС.НалогНаПрибыльНалоговогоАгента;
	ИначеЕсли УсловныйКодСчета = "68.42" Тогда
		Результат = ПС.НДСТаможенныйСоюзКУплате;
	ИначеЕсли УсловныйКодСчета = "68.52" Тогда
		Результат = ПС.НДСНалоговогоАгентаПоОтдельнымВидамТоваров;
	ИначеЕсли УсловныйКодСчета = "68.90" Тогда
		Результат = ПС.ЕдиныйНалоговыйСчет;
	ИначеЕсли УсловныйКодСчета = "69" Тогда
		Результат = ПС.РасчетыПоСоциальномуСтрахованию;
	ИначеЕсли УсловныйКодСчета = "69.01" Тогда
		Результат = ПС.ФСС;
	ИначеЕсли УсловныйКодСчета = "69.02" Тогда
		Результат = ПС.ПФР;
	ИначеЕсли УсловныйКодСчета = "69.02.1" Тогда
		Результат = ПС.ПФР_страх;
	ИначеЕсли УсловныйКодСчета = "69.02.2" Тогда
		Результат = ПС.ПФР_нак;
	ИначеЕсли УсловныйКодСчета = "69.02.3" Тогда
		Результат = ПС.ПФР_доп;
	ИначеЕсли УсловныйКодСчета = "69.02.4" Тогда
		Результат = ПС.ПФР_доп_шахтеры;
	ИначеЕсли УсловныйКодСчета = "69.02.5" Тогда
		Результат = ПС.ПФР_доп_ВредныеУсловияТруда;
	ИначеЕсли УсловныйКодСчета = "69.02.6" Тогда
		Результат = ПС.ПФР_доп_ТяжелыеУсловияТруда;
	ИначеЕсли УсловныйКодСчета = "69.02.7" Тогда
		Результат = ПС.ПФР_ОПС;
	ИначеЕсли УсловныйКодСчета = "69.03" Тогда
		Результат = ПС.ФОМС;
	ИначеЕсли УсловныйКодСчета = "69.03.1" Тогда
		Результат = ПС.ФФОМС;
	ИначеЕсли УсловныйКодСчета = "69.03.2" Тогда
		Результат = ПС.ТФОМС;
	ИначеЕсли УсловныйКодСчета = "69.04" Тогда
		Результат = ПС.ЕСН_ФБ;
	ИначеЕсли УсловныйКодСчета = "69.05" Тогда
		Результат = ПС.ПФР_ДОБР;
	ИначеЕсли УсловныйКодСчета = "69.05.1" Тогда
		Результат = ПС.ПФР_ДОБР_орг;
	ИначеЕсли УсловныйКодСчета = "69.05.2" Тогда
		Результат = ПС.ПФР_ДОБР_сотр;
	ИначеЕсли УсловныйКодСчета = "69.06.1" Тогда
		Результат = ПС.ПФР_Страх_СтраховойГод;
	ИначеЕсли УсловныйКодСчета = "69.06.2" Тогда
		Результат = ПС.ПФР_Нак_СтраховойГод;
	ИначеЕсли УсловныйКодСчета = "69.06.3" Тогда
		Результат = ПС.ФОМС_СтраховойГод;
	ИначеЕсли УсловныйКодСчета = "69.06.4" Тогда
		Результат = ПС.ФСС_СтраховойГод;
	ИначеЕсли УсловныйКодСчета = "69.06.5" Тогда
		Результат = ПС.ПФР_ОПС_ИП;
	ИначеЕсли УсловныйКодСчета = "69.06.6" Тогда
		Результат = ПС.СтраховыеВзносыЕдиныйТариф_ИП;
	ИначеЕсли УсловныйКодСчета = "69.09" Тогда
		Результат = ПС.СтраховыеВзносыЕдиныйТариф;
	ИначеЕсли УсловныйКодСчета = "69.11" Тогда
		Результат = ПС.ФСС_НСиПЗ;
	ИначеЕсли УсловныйКодСчета = "69.12" Тогда
		Результат = ПС.ФСС_ДобровольныеВзносы;
	ИначеЕсли УсловныйКодСчета = "69.13" Тогда
		Результат = ПС.ФСС_СПЕЦ;
	ИначеЕсли УсловныйКодСчета = "69.13.1" Тогда
		Результат = ПС.ФСС_СПЕЦ_ЕНВД;
	ИначеЕсли УсловныйКодСчета = "69.13.2" Тогда
		Результат = ПС.ФСС_СПЕЦ_УСН;
	ИначеЕсли УсловныйКодСчета = "70" Тогда
		Результат = ПС.РасчетыСПерсоналомПоОплатеТруда;
	ИначеЕсли УсловныйКодСчета = "71" Тогда
		Результат = ПС.РасчетыСПодотчетнымиЛицами_;
	ИначеЕсли УсловныйКодСчета = "71.01" Тогда
		Результат = ПС.РасчетыСПодотчетнымиЛицами;
	ИначеЕсли УсловныйКодСчета = "71.21" Тогда
		Результат = ПС.РасчетыСПодотчетнымиЛицамиВал;
	ИначеЕсли УсловныйКодСчета = "73" Тогда
		Результат = ПС.РасчетыСПерсоналомПоПрочимОперациям;
	ИначеЕсли УсловныйКодСчета = "73.01" Тогда
		Результат = ПС.РасчетыПоПредоставленнымЗаймам;
	ИначеЕсли УсловныйКодСчета = "73.02" Тогда
		Результат = ПС.РасчетыПоВозмещениюМатериальногоУщерба;
	ИначеЕсли УсловныйКодСчета = "73.03" Тогда
		Результат = ПС.РасчетыПоПрочимОперациям;
	ИначеЕсли УсловныйКодСчета = "75" Тогда
		Результат = ПС.РасчетыСУчредителями;
	ИначеЕсли УсловныйКодСчета = "75.01" Тогда
		Результат = ПС.РасчетыПоВкладамВУставныйКапитал;
	ИначеЕсли УсловныйКодСчета = "75.02" Тогда
		Результат = ПС.РасчетыПоВыплатеДоходов;
	ИначеЕсли УсловныйКодСчета = "76" Тогда
		Результат = ПС.РасчетыСРазнымиДебиторамиИКредиторами;
	ИначеЕсли УсловныйКодСчета = "76.01" Тогда
		Результат = ПС.РасчетыПоИмущественномуЛичномуИДобровольномуСтрахованию;
	ИначеЕсли УсловныйКодСчета = "76.01.1" Тогда
		Результат = ПС.РасчетыПоИмущественномуИЛичномуСтрахованию;
	ИначеЕсли УсловныйКодСчета = "76.01.2" Тогда
		Результат = ПС.ПлатежиПоДобровольномуСтрахованиюРаботников;
	ИначеЕсли УсловныйКодСчета = "76.01.9" Тогда
		Результат = ПС.ПлатежиПоПрочимВидамСтрахования;
	ИначеЕсли УсловныйКодСчета = "76.02" Тогда
		Результат = ПС.РасчетыПоПретензиям;
	ИначеЕсли УсловныйКодСчета = "76.03" Тогда
		Результат = ПС.РасчетыПоПричитающимсяДивидендам;
	ИначеЕсли УсловныйКодСчета = "76.04" Тогда
		Результат = ПС.РасчетыПоДепонированнымСуммам;
	ИначеЕсли УсловныйКодСчета = "76.05" Тогда
		Результат = ПС.РасчетыСПрочимиПоставщикамиИПодрядчиками;
	ИначеЕсли УсловныйКодСчета = "76.06" Тогда
		Результат = ПС.РасчетыСПрочимиПокупателямиИЗаказчиками;
	ИначеЕсли УсловныйКодСчета = "76.07.1" Тогда
		Результат = ПС.АрендныеОбязательства;
	ИначеЕсли УсловныйКодСчета = "76.07.2" Тогда
		Результат = ПС.АрендныеПлатежи;
	ИначеЕсли УсловныйКодСчета = "76.07.5" Тогда
		Результат = ПС.ПроцентыПоАренде;
	ИначеЕсли УсловныйКодСчета = "76.07.9" Тогда
		Результат = ПС.НДСпоАренднымОбязательствам;
	ИначеЕсли УсловныйКодСчета = "76.08" Тогда
		Результат = ПС.ПроцентыПоРассрочке;
	ИначеЕсли УсловныйКодСчета = "76.27.1" Тогда
		Результат = ПС.АрендныеОбязательстваВал;
	ИначеЕсли УсловныйКодСчета = "76.27.2" Тогда
		Результат = ПС.АрендныеПлатежиВал;
	ИначеЕсли УсловныйКодСчета = "76.27.5" Тогда
		Результат = ПС.ПроцентыПоАрендеВал;
	ИначеЕсли УсловныйКодСчета = "76.27.9" Тогда
		Результат = ПС.НДСпоАренднымОбязательствамВал;
	ИначеЕсли УсловныйКодСчета = "76.28" Тогда
		Результат = ПС.ПроцентыПоРассрочкеВал;
	ИначеЕсли УсловныйКодСчета = "76.37.1" Тогда
		Результат = ПС.АрендныеОбязательстваУЕ;
	ИначеЕсли УсловныйКодСчета = "76.37.2" Тогда
		Результат = ПС.АрендныеПлатежиУЕ;
	ИначеЕсли УсловныйКодСчета = "76.37.5" Тогда
		Результат = ПС.ПроцентыПоАрендеУЕ;
	ИначеЕсли УсловныйКодСчета = "76.37.9" Тогда
		Результат = ПС.НДСпоАренднымОбязательствамУЕ;
	ИначеЕсли УсловныйКодСчета = "76.38" Тогда
		Результат = ПС.ПроцентыПоРассрочкеУЕ;
	ИначеЕсли УсловныйКодСчета = "76.09" Тогда
		Результат = ПС.ПрочиеРасчетыСРазнымиДебиторамиИКредиторами;
	ИначеЕсли УсловныйКодСчета = "76.10" Тогда
		Результат = ПС.ПрочиеРасчетыСФизическимиЛицами;
	ИначеЕсли УсловныйКодСчета = "76.13" Тогда
		Результат = ПС.РасчетыСФакторинговымиКомпаниями;
	ИначеЕсли УсловныйКодСчета = "76.14" Тогда
		Результат = ПС.Билеты;
	ИначеЕсли УсловныйКодСчета = "76.16" Тогда
		Результат = ПС.РасчетыССамозанятыми;
	ИначеЕсли УсловныйКодСчета = "76.17" Тогда
		Результат = ПС.РасчетыПоНалогамСТретьимиЛицами;
	ИначеЕсли УсловныйКодСчета = "76.21" Тогда
		Результат = ПС.РасчетыПоИмущественномуИЛичномуСтрахованиюВал;
	ИначеЕсли УсловныйКодСчета = "76.22" Тогда
		Результат = ПС.РасчетыПоПретензиямВал;
	ИначеЕсли УсловныйКодСчета = "76.25" Тогда
		Результат = ПС.РасчетыСПрочимиПоставщикамиИПодрядчикамиВал;
	ИначеЕсли УсловныйКодСчета = "76.26" Тогда
		Результат = ПС.РасчетыСПрочимиПокупателямиИЗаказчикамиВал;
	ИначеЕсли УсловныйКодСчета = "76.29" Тогда
		Результат = ПС.ПрочиеРасчетыСРазнымиДебиторамиИКредиторамиВал;
	ИначеЕсли УсловныйКодСчета = "76.32" Тогда
		Результат = ПС.РасчетыПоПретензиямУЕ;
	ИначеЕсли УсловныйКодСчета = "76.35" Тогда
		Результат = ПС.РасчетыСПрочимиПоставщикамиИПодрядчикамиУЕ;
	ИначеЕсли УсловныйКодСчета = "76.36" Тогда
		Результат = ПС.РасчетыСПрочимиПокупателямиИЗаказчикамиУЕ;
	ИначеЕсли УсловныйКодСчета = "76.39" Тогда
		Результат = ПС.ПрочиеРасчетыСРазнымиДебиторамиИКредиторамиУЕ;
	ИначеЕсли УсловныйКодСчета = "76.41" Тогда
		Результат = ПС.РасчетыПоИсполнительнымДокументамРаботников;
	ИначеЕсли УсловныйКодСчета = "76.49" Тогда
		Результат = ПС.РасчетыПоПрочимУдержаниямРаботников;
	ИначеЕсли УсловныйКодСчета = "76.ВА" Тогда
		Результат = ПС.НДСпоАвансамИПредоплатамВыданным;
	ИначеЕсли УсловныйКодСчета = "76.АВ" Тогда
		Результат = ПС.НДСпоАвансамИПредоплатам;
	ИначеЕсли УсловныйКодСчета = "76.К" Тогда
		Результат = ПС.КорректировкаРасчетовПрошлогоПериода;
	ИначеЕсли УсловныйКодСчета = "76.Н" Тогда
		Результат = ПС.РасчетыПоНДСотложенномуДляУплатыВБюджет;
	ИначеЕсли УсловныйКодСчета = "76.НА" Тогда
		Результат = ПС.РасчетыНДСНалоговогоАгента;
	ИначеЕсли УсловныйКодСчета = "76.ОТ" Тогда
		Результат = ПС.НДСНачисленныйПоОтгрузке;
	ИначеЕсли УсловныйКодСчета = "77" Тогда
		Результат = ПС.ОтложенныеНалоговыеОбязательства;
	ИначеЕсли УсловныйКодСчета = "79" Тогда
		Результат = ПС.ВнутрихозяйственныеРасчеты;
	ИначеЕсли УсловныйКодСчета = "80" Тогда
		Результат = ПС.УставныйКапитал;
	ИначеЕсли УсловныйКодСчета = "81" Тогда
		Результат = ПС.СобственныеАкции;
	ИначеЕсли УсловныйКодСчета = "82" Тогда
		Результат = ПС.РезервныйКапитал;
	ИначеЕсли УсловныйКодСчета = "82.01" Тогда
		Результат = ПС.РезервыОбразованныеВСоответствииСЗаконодательством;
	ИначеЕсли УсловныйКодСчета = "82.02" Тогда
		Результат = ПС.РезервыОбразованныеВСоответствииСУчредительнымиДокументами;
	ИначеЕсли УсловныйКодСчета = "83" Тогда
		Результат = ПС.ДобавочныйКапитал;
	ИначеЕсли УсловныйКодСчета = "83.01" Тогда
		Результат = ПС.ПриростСтоимостиПоПереоценке;
	ИначеЕсли УсловныйКодСчета = "83.01.1" Тогда
		Результат = ПС.ПриростСтоимостиИмуществаПоПереоценке;
	ИначеЕсли УсловныйКодСчета = "83.01.2" Тогда
		Результат = ПС.ПриростСтоимостиНМАПоПереоценке;
	ИначеЕсли УсловныйКодСчета = "83.01.3" Тогда
		Результат = ПС.ПриростСтоимостиПрочихВнеоборотныхАктивоПоПереоценке;
	ИначеЕсли УсловныйКодСчета = "84" Тогда
		Результат = ПС.НераспределеннаяПрибыль;
	ИначеЕсли УсловныйКодСчета = "84.01" Тогда
		Результат = ПС.ПрибыльПодлежащаяРаспределению;
	ИначеЕсли УсловныйКодСчета = "84.02" Тогда
		Результат = ПС.УбытокПодлежащийПокрытию;
	ИначеЕсли УсловныйКодСчета = "86" Тогда
		Результат = ПС.ЦелевоеФинансирование;
	ИначеЕсли УсловныйКодСчета = "90"Тогда
		Результат = ПС.Продажи;
	ИначеЕсли УсловныйКодСчета = "90.01" Тогда
		Результат = ПС.Выручка;
	ИначеЕсли УсловныйКодСчета = "90.02" Тогда
		Результат = ПС.СебестоимостьПродаж;
	ИначеЕсли УсловныйКодСчета = "90.03" Тогда
		Результат = ПС.Продажи_НДС;
	ИначеЕсли УсловныйКодСчета = "90.04" Тогда
		Результат = ПС.Продажи_Акцизы;
	ИначеЕсли УсловныйКодСчета = "90.05" Тогда
		Результат = ПС.Продажи_ЭкспортныеПошлины;
	ИначеЕсли УсловныйКодСчета = "90.08" Тогда
		Результат = ПС.Продажи_УправленческиеРасходы;
	ИначеЕсли УсловныйКодСчета = "90.07" Тогда
		Результат = ПС.Продажи_РасходыНаПродажу;
	ИначеЕсли УсловныйКодСчета = "90.01.1" Тогда
		Результат = ПС.ВыручкаНеЕНВД;
	ИначеЕсли УсловныйКодСчета = "90.01.2" Тогда
		Результат = ПС.ВыручкаЕНВД;
	ИначеЕсли УсловныйКодСчета = "90.02.1" Тогда
		Результат = ПС.СебестоимостьПродажНеЕНВД;
	ИначеЕсли УсловныйКодСчета = "90.02.2" Тогда
		Результат = ПС.СебестоимостьПродажЕНВД;
	ИначеЕсли УсловныйКодСчета = "90.07.1" Тогда
		Результат = ПС.Продажи_РасходыНаПродажуНеЕНВД;
	ИначеЕсли УсловныйКодСчета = "90.07.2" Тогда
		Результат = ПС.Продажи_РасходыНаПродажуЕНВД;
	ИначеЕсли УсловныйКодСчета = "90.08.1" Тогда
		Результат = ПС.Продажи_УправленческиеРасходыНеЕНВД;
	ИначеЕсли УсловныйКодСчета = "90.08.2" Тогда
		Результат = ПС.Продажи_УправленческиеРасходыЕНВД;
	ИначеЕсли УсловныйКодСчета = "91" Тогда
		Результат = ПС.ПрочиеДоходыИРасходы;
	ИначеЕсли УсловныйКодСчета = "91.01" Тогда
		Результат = ПС.ПрочиеДоходы;
	ИначеЕсли УсловныйКодСчета = "91.02" Тогда
		Результат = ПС.ПрочиеРасходы;
	ИначеЕсли УсловныйКодСчета = "99" Тогда
		Результат = ПС.ПрибылиИУбытки;
	ИначеЕсли УсловныйКодСчета = "99.01" Тогда
		Результат = ПС.ПрибылиИУбыткиБезНалогаНаПрибыль;
	ИначеЕсли УсловныйКодСчета = "99.02" Тогда
		Результат = ПС.ПрибылиИУбытки_НалогНаПрибыль;
	ИначеЕсли УсловныйКодСчета = "99.02.1" Тогда
		Результат = ПС.УсловныйРасходПоНалогуНаПрибыль;
	ИначеЕсли УсловныйКодСчета = "99.02.2" Тогда
		Результат = ПС.УсловныйДоходПоНалогуНаПрибыль;
	ИначеЕсли УсловныйКодСчета = "99.02.3" Тогда
		Результат = ПС.ПостоянноеНалоговоеОбязательство;
	ИначеЕсли УсловныйКодСчета = "99.02.4" Тогда
		Результат = ПС.ПрибылиИУбыткиОтПересчетаОНА_ОНО;
	ИначеЕсли УсловныйКодСчета = "99.02.Т" Тогда
		Результат = ПС.ТекущийНалогНаПрибыль;
	ИначеЕсли УсловныйКодСчета = "99.02.О" Тогда
		Результат = ПС.ОтложенныйНалогНаПрибыль;
	ИначеЕсли УсловныйКодСчета = "99.01.1" Тогда
		Результат = ПС.ПрибылиИУбыткиНеЕНВД;
	ИначеЕсли УсловныйКодСчета = "99.01.2" Тогда
		Результат = ПС.ПрибылиИУбыткиЕНВД;
	ИначеЕсли УсловныйКодСчета = "99.09" Тогда
		Результат = ПС.ПрочиеПрибылиИУбытки;
	ИначеЕсли УсловныйКодСчета = "94" Тогда
		Результат = ПС.НедостачиИПотериОтПорчиЦенностей;
	ИначеЕсли УсловныйКодСчета = "96" Тогда
		Результат = ПС.РезервыПредстоящихРасходов;
	ИначеЕсли УсловныйКодСчета = "96.01" Тогда
		Результат = ПС.ОценочныеОбязательстваПоВознаграждениямРаботникам;
	ИначеЕсли УсловныйКодСчета = "96.01.1" Тогда
		Результат = ПС.ОценочныеОбязательстваПоВознаграждениям;
	ИначеЕсли УсловныйКодСчета = "96.01.2" Тогда
		Результат = ПС.ОценочныеОбязательстваПостраховымВзносам;
	ИначеЕсли УсловныйКодСчета = "96.09" Тогда
		Результат = ПС.РезервыПредстоящихРасходовПрочие;
	ИначеЕсли УсловныйКодСчета = "97" Тогда
		Результат = ПС.РасходыБудущихПериодов;
	ИначеЕсли УсловныйКодСчета = "97.01" Тогда
		Результат = ПС.РасходыНаОплатуТрудаБудущихПериодов;
	ИначеЕсли УсловныйКодСчета = "97.02" Тогда
		Результат = ПС.РасходыБудущихПериодовНаДобровольноеСтрахованиеРаботников;
	ИначеЕсли УсловныйКодСчета = "97.21" Тогда
		Результат = ПС.ПрочиеРасходыБудущихПериодов;
	ИначеЕсли УсловныйКодСчета = "98" Тогда
		Результат = ПС.ДоходыБудущихПериодов;
	ИначеЕсли УсловныйКодСчета = "98.01" Тогда
		Результат = ПС.ДоходыПолученныеВСчетБудущихПериодов;
	ИначеЕсли УсловныйКодСчета = "98.02" Тогда
		Результат = ПС.БезвозмездныеПоступления;
	ИначеЕсли УсловныйКодСчета = "98.03" Тогда
		Результат = ПС.ПредстоящиеПоступленияПоНедостачамВыявленнымЗаПрошлыеГоды;
	ИначеЕсли УсловныйКодСчета = "98.04" Тогда
		Результат = ПС.РазницаМеждуСуммойПодлежащейВзысканиюСВиновныхЛицИБалансовойСтоимостьюПоНедостачамЦенностей;
	ИначеЕсли УсловныйКодСчета = "001" Тогда
		Результат = ПС.АрендованныеОсновныеСредства;
	ИначеЕсли УсловныйКодСчета = "002" Тогда
		Результат = ПС.ТМЦпринятыеНаОтветственноеХранение;
	ИначеЕсли УсловныйКодСчета = "003" Тогда
		Результат = ПС.МатериалыПринятыеВПереработку_;
	ИначеЕсли УсловныйКодСчета = "004" Тогда
		Результат = ПС.ТоварыПринятыеНаКомиссию;
	ИначеЕсли УсловныйКодСчета = "005" Тогда
		Результат = ПС.ОборудованиеПринятоеДляМонтажа;
	ИначеЕсли УсловныйКодСчета = "007" Тогда
		Результат = ПС.СписаннаяВУбытокЗадолженностьДебиторов;
	ИначеЕсли УсловныйКодСчета = "008" Тогда
		Результат = ПС.ОбеспеченияОбязательствИПлатежейПолученные;
	ИначеЕсли УсловныйКодСчета = "009" Тогда
		Результат = ПС.ОбеспеченияОбязательствИПлатежейВыданные;
	ИначеЕсли УсловныйКодСчета = "010" Тогда
		Результат = ПС.ИзносОсновныхСредств;
	ИначеЕсли УсловныйКодСчета = "011" Тогда
		Результат = ПС.ОсновныеСредстваСданныеВАренду;
	ИначеЕсли УсловныйКодСчета = "012" Тогда
		Результат = ПС.ВозвратнаяТара;
	Иначе
		ИмяФункции = "ЗаполнениеБухгалтерскойОтчетностиИтоги.Счет";
		ВызватьИсключение СтрШаблон(НСтр("ru = 'Функция %1:
			|Не определен счет с условным кодом %2 в соответствии счетов'"), ИмяФункции, УсловныйКодСчета);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Возвращает сведения предопределенных счетов по их условным кодам
//
// Возвращаемое значение: 
//   ТаблицаЗначений:
//     * УсловныйКод - Строка
//     * Ссылка - ПланСчетовСсылка.Хозрасчетный
//     * Код - Строка
//     * Наименование - Строка
//
Функция СчетаСРеквизитами() Экспорт
	
	Матрикс = Новый ТаблицаЗначений;
	Матрикс.Колонки.Добавить("Счет", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	Матрикс.Колонки.Добавить("УсловныйКод", Новый ОписаниеТипов("Строка"));
	
	ДобавитьПредопределенныйСчет(Матрикс, "01", "ОсновныеСредства");
	ДобавитьПредопределенныйСчет(Матрикс, "01.01", "ОСвОрганизации");
	ДобавитьПредопределенныйСчет(Матрикс, "01.03", "АрендованноеИмущество");
	ДобавитьПредопределенныйСчет(Матрикс, "01.05", "ЗатратыНаРемонтОС");
	ДобавитьПредопределенныйСчет(Матрикс, "01.08", "ОСБезГосРегистрации");
	ДобавитьПредопределенныйСчет(Матрикс, "01.09", "ВыбытиеОС");
	ДобавитьПредопределенныйСчет(Матрикс, "01.11", "ГрупповыеОбъектыОС");
	
	ДобавитьПредопределенныйСчет(Матрикс, "02", "АмортизацияОсновныхСредств");
	ДобавитьПредопределенныйСчет(Матрикс, "02.01", "АмортизацияОС_01");
	ДобавитьПредопределенныйСчет(Матрикс, "02.02", "АмортизацияОС_03");
	ДобавитьПредопределенныйСчет(Матрикс, "02.03", "АмортизацияАрендованногоИмущества");
	ДобавитьПредопределенныйСчет(Матрикс, "02.04", "ОбесценениеОС_01");
	ДобавитьПредопределенныйСчет(Матрикс, "02.05", "АмортизацияЗатратНаРемонтОС");
	ДобавитьПредопределенныйСчет(Матрикс, "02.11", "АмортизацияГрупповыхОбъектовОС");
	
	ДобавитьПредопределенныйСчет(Матрикс, "03", "ДоходныеВложенияВ_МЦ");
	ДобавитьПредопределенныйСчет(Матрикс, "03.01", "МЦвОрганизации");
	ДобавитьПредопределенныйСчет(Матрикс, "03.02", "МЦ_ПредоставленныеВоВременноеВладение");
	ДобавитьПредопределенныйСчет(Матрикс, "03.03", "МЦ_ПредоставленныеВоВременноеПользование");
	ДобавитьПредопределенныйСчет(Матрикс, "03.04", "ПрочиеДоходныеВложения");
	ДобавитьПредопределенныйСчет(Матрикс, "03.09", "ВыбытиеМЦ");
	
	ДобавитьПредопределенныйСчет(Матрикс, "04", "НематериальныеАктивы");
	ДобавитьПредопределенныйСчет(Матрикс, "04.01", "НематериальныеАктивыОрганизации");
	ДобавитьПредопределенныйСчет(Матрикс, "04.02", "РасходыНаНИОКР");
	
	ДобавитьПредопределенныйСчет(Матрикс, "05", "АмортизацияНематериальныхАктивов");
	ДобавитьПредопределенныйСчет(Матрикс, "07", "ОборудованиеКУстановке");
	
	ДобавитьПредопределенныйСчет(Матрикс, "08", "ВложенияВоВнеоборотныеАктивы");
	ДобавитьПредопределенныйСчет(Матрикс, "08.01", "ПриобретениеЗемельныхУчастков");
	ДобавитьПредопределенныйСчет(Матрикс, "08.01.2", "ПриобретениеЗемельныхУчастковБезДопРасходов");
	ДобавитьПредопределенныйСчет(Матрикс, "08.02", "ПриобретениеОбъектовПриродопользования");
	ДобавитьПредопределенныйСчет(Матрикс, "08.03", "СтроительствоОбъектовОсновныхСредств");
	ДобавитьПредопределенныйСчет(Матрикс, "08.04", "ПриобретениеОбъектовОсновныхСредств");
	ДобавитьПредопределенныйСчет(Матрикс, "08.04.2", "ПриобретениеОсновныхСредств");
	ДобавитьПредопределенныйСчет(Матрикс, "08.04.5", "ВложенияВРемонтыОсновныхСредств");
	ДобавитьПредопределенныйСчет(Матрикс, "08.05", "ПриобретениеНематериальныхАктивов");
	ДобавитьПредопределенныйСчет(Матрикс, "08.06", "ПереводМолоднякаЖивотныхВОсновноеСтадо");
	ДобавитьПредопределенныйСчет(Матрикс, "08.07", "ПриобретениеВзрослыхЖивотных");
	ДобавитьПредопределенныйСчет(Матрикс, "08.08", "ВыполнениеНИОКР");
	ДобавитьПредопределенныйСчет(Матрикс, "08.11", "НематериальныеПоисковыеАктивы");
	ДобавитьПредопределенныйСчет(Матрикс, "08.12", "МатериальныеПоисковыеАктивы");
	
	ДобавитьПредопределенныйСчет(Матрикс, "09", "ОтложенныеНалоговыеАктивы");
	ДобавитьПредопределенныйСчет(Матрикс, "10", "Материалы");
	ДобавитьПредопределенныйСчет(Матрикс, "11", "ЖивотныеНаВыращиванииИОткорме");
	
	ДобавитьПредопределенныйСчет(Матрикс, "14", "РезервыПодСнижениеСтоимостиМЦ");
	ДобавитьПредопределенныйСчет(Матрикс, "14.01", "РезервыПодСнижениеСтоимостиМатериалов");
	ДобавитьПредопределенныйСчет(Матрикс, "14.02", "РезервыПодСнижениеСтоимостиТоваров");
	ДобавитьПредопределенныйСчет(Матрикс, "14.03", "РезервыПодСнижениеСтоимостиГотовойПродукции");
	ДобавитьПредопределенныйСчет(Матрикс, "14.04", "РезервыПодСнижениеСтоимостиНезавершенногоПроизводства");
	
	ДобавитьПредопределенныйСчет(Матрикс, "15", "ЗаготовлениеИПриобретениеМЦ");
	ДобавитьПредопределенныйСчет(Матрикс, "15.01", "ЗаготовлениеИПриобретениеМатериалов");
	ДобавитьПредопределенныйСчет(Матрикс, "15.02", "ПриобретениеТоваров");
	
	ДобавитьПредопределенныйСчет(Матрикс, "16", "ОтклонениеВСтоимостиМЦ");
	ДобавитьПредопределенныйСчет(Матрикс, "16.01", "ОтклонениеВСтоимостиМатериалов");
	ДобавитьПредопределенныйСчет(Матрикс, "16.02", "ОтклонениеВСтоимостиТоваров");
	
	ДобавитьПредопределенныйСчет(Матрикс, "19", "НДСпоПриобретеннымЦенностям");
	ДобавитьПредопределенныйСчет(Матрикс, "19.01", "НДСприПриобретенииОсновныхСредств");
	ДобавитьПредопределенныйСчет(Матрикс, "19.02", "НДСпоПриобретеннымНематериальнымАктивам");
	ДобавитьПредопределенныйСчет(Матрикс, "19.03", "НДСпоПриобретеннымМПЗ");
	ДобавитьПредопределенныйСчет(Матрикс, "19.04", "НДСпоПриобретеннымУслугам");
	ДобавитьПредопределенныйСчет(Матрикс, "19.05", "НДСуплачиваемыйТаможеннымОрганам");
	ДобавитьПредопределенныйСчет(Матрикс, "19.06", "АкцизыПоОплаченнымМатериальнымЦенностям");
	ДобавитьПредопределенныйСчет(Матрикс, "19.07", "НДСПоТоварамРеализованнымПоСтавке0");
	ДобавитьПредопределенныйСчет(Матрикс, "19.08", "НДСприСтроительствеОсновныхСредств");
	ДобавитьПредопределенныйСчет(Матрикс, "19.10", "НДСУплачиваемыйПриИмпортеИзТаможенногоСоюза");
	
	ДобавитьПредопределенныйСчет(Матрикс, "20", "ОсновноеПроизводство_");
	ДобавитьПредопределенныйСчет(Матрикс, "20.01", "ОсновноеПроизводство");
	ДобавитьПредопределенныйСчет(Матрикс, "20.02", "ПроизводствоИзДавальческогоСырья");
	
	ДобавитьПредопределенныйСчет(Матрикс, "21", "Полуфабрикаты");
	
	ДобавитьПредопределенныйСчет(Матрикс, "23", "ВспомогательныеПроизводства_");
	ДобавитьПредопределенныйСчет(Матрикс, "23.05", "ВыполнениеРемонтовОС");
	
	ДобавитьПредопределенныйСчет(Матрикс, "25", "ОбщепроизводственныеРасходы");
	ДобавитьПредопределенныйСчет(Матрикс, "26", "ОбщехозяйственныеРасходы");
	ДобавитьПредопределенныйСчет(Матрикс, "28", "БракВПроизводстве");
	ДобавитьПредопределенныйСчет(Матрикс, "29", "ОбслуживающиеПроизводства");
	ДобавитьПредопределенныйСчет(Матрикс, "40", "ВыпускПродукции");
	
	ДобавитьПредопределенныйСчет(Матрикс, "41", "Товары");
	ДобавитьПредопределенныйСчет(Матрикс, "41.01", "ТоварыНаСкладах");
	ДобавитьПредопределенныйСчет(Матрикс, "41.02", "ТоварыВРозничнойТорговле");
	ДобавитьПредопределенныйСчет(Матрикс, "41.03", "ТараПодТоваромИПорожняя");
	ДобавитьПредопределенныйСчет(Матрикс, "41.04", "ПокупныеИзделия");
	ДобавитьПредопределенныйСчет(Матрикс, "41.11", "ТоварыВРозничнойТорговлеВПродажныхЦенахАТТ");
	ДобавитьПредопределенныйСчет(Матрикс, "41.12", "ТоварыВРозничнойТорговлеВПродажныхЦенахНТТ");
	
	ДобавитьПредопределенныйСчет(Матрикс, "42", "ТорговаяНаценка");
	ДобавитьПредопределенныйСчет(Матрикс, "43", "ГотоваяПродукция");
	ДобавитьПредопределенныйСчет(Матрикс, "44", "РасходыНаПродажу");
	
	ДобавитьПредопределенныйСчет(Матрикс, "45", "ТоварыОтгруженные");
	ДобавитьПредопределенныйСчет(Матрикс, "45.01", "ПокупныеТоварыОтгруженные");
	ДобавитьПредопределенныйСчет(Матрикс, "45.02", "ГотоваяПродукцияОтгруженная");
	ДобавитьПредопределенныйСчет(Матрикс, "45.03", "ПрочиеТоварыОтгруженные");
	
	ДобавитьПредопределенныйСчет(Матрикс, "46", "ВыполненныеЭтапыПоНезавершеннымРаботам");
	
	ДобавитьПредопределенныйСчет(Матрикс, "50", "Касса");
	ДобавитьПредопределенныйСчет(Матрикс, "50.01", "КассаОрганизации");
	ДобавитьПредопределенныйСчет(Матрикс, "50.02", "ОперационнаяКасса");
	ДобавитьПредопределенныйСчет(Матрикс, "50.03", "ДенежныеДокументы");
	ДобавитьПредопределенныйСчет(Матрикс, "50.04", "КассаПлатежногоАгента");
	ДобавитьПредопределенныйСчет(Матрикс, "50.21", "КассаОрганизацииВал");
	ДобавитьПредопределенныйСчет(Матрикс, "50.23", "ДенежныеДокументыВал");
	
	ДобавитьПредопределенныйСчет(Матрикс, "51", "РасчетныеСчета");
	ДобавитьПредопределенныйСчет(Матрикс, "52", "ВалютныеСчета");
	ДобавитьПредопределенныйСчет(Матрикс, "53", "ЦифровойРубль");
	
	ДобавитьПредопределенныйСчет(Матрикс, "55", "СпециальныеСчета");
	ДобавитьПредопределенныйСчет(Матрикс, "55.01", "Аккредитивы");
	ДобавитьПредопределенныйСчет(Матрикс, "55.02", "ЧековыеКнижки");
	ДобавитьПредопределенныйСчет(Матрикс, "55.03", "ДепозитныеСчета");
	ДобавитьПредопределенныйСчет(Матрикс, "55.04", "ПрочиеСпециальныеСчета");
	ДобавитьПредопределенныйСчет(Матрикс, "55.21", "АккредитивыВал");
	ДобавитьПредопределенныйСчет(Матрикс, "55.23", "ДепозитныеСчетаВал");
	ДобавитьПредопределенныйСчет(Матрикс, "55.24", "ПрочиеСпециальныеСчетаВал");
	
	ДобавитьПредопределенныйСчет(Матрикс, "57", "ПереводыВПути_");
	ДобавитьПредопределенныйСчет(Матрикс, "57.01", "ПереводыВПути");
	ДобавитьПредопределенныйСчет(Матрикс, "57.21", "ПереводыВПутиВал");
	ДобавитьПредопределенныйСчет(Матрикс, "57.02", "ПриобретениеИностраннойВалюты");
	ДобавитьПредопределенныйСчет(Матрикс, "57.22", "РеализацияИностраннойВалюты");
	ДобавитьПредопределенныйСчет(Матрикс, "57.03", "ПродажиПоПлатежнымКартам");
	
	ДобавитьПредопределенныйСчет(Матрикс, "58", "ФинансовыеВложения");
	ДобавитьПредопределенныйСчет(Матрикс, "58.01.1", "Паи");
	ДобавитьПредопределенныйСчет(Матрикс, "58.01.2", "Акции");
	ДобавитьПредопределенныйСчет(Матрикс, "58.02", "ДолговыеЦенныеБумаги");
	ДобавитьПредопределенныйСчет(Матрикс, "58.03", "ПредоставленныеЗаймы");
	ДобавитьПредопределенныйСчет(Матрикс, "58.04", "ВкладыПоДоговоруПростогоТоварищества");
	ДобавитьПредопределенныйСчет(Матрикс, "58.05", "ПриобретенныеПрава");
	
	ДобавитьПредопределенныйСчет(Матрикс, "59", "РезервыПодОбесценениеФинансовыхВложений");
	
	ДобавитьПредопределенныйСчет(Матрикс, "60", "РасчетыСПоставщикамиИПодрядчиками");
	ДобавитьПредопределенныйСчет(Матрикс, "60.01", "РасчетыСПоставщиками");
	ДобавитьПредопределенныйСчет(Матрикс, "60.02", "РасчетыПоАвансамВыданным");
	ДобавитьПредопределенныйСчет(Матрикс, "60.03", "ВекселяВыданные");
	ДобавитьПредопределенныйСчет(Матрикс, "60.21", "РасчетыСПоставщикамиВал");
	ДобавитьПредопределенныйСчет(Матрикс, "60.22", "РасчетыПоАвансамВыданнымВал");
	ДобавитьПредопределенныйСчет(Матрикс, "60.31", "РасчетыСПоставщикамиУЕ");
	ДобавитьПредопределенныйСчет(Матрикс, "60.32", "РасчетыПоАвансамВыданнымУЕ");
	
	ДобавитьПредопределенныйСчет(Матрикс, "62", "РасчетыСПокупателямиИЗаказчиками");
	ДобавитьПредопределенныйСчет(Матрикс, "62.01", "РасчетыСПокупателями");
	ДобавитьПредопределенныйСчет(Матрикс, "62.02", "РасчетыПоАвансамПолученным");
	ДобавитьПредопределенныйСчет(Матрикс, "62.03", "ВекселяПолученные");
	ДобавитьПредопределенныйСчет(Матрикс, "62.21", "РасчетыСПокупателямиВал");
	ДобавитьПредопределенныйСчет(Матрикс, "62.22", "РасчетыПоАвансамПолученнымВал");
	ДобавитьПредопределенныйСчет(Матрикс, "62.31", "РасчетыСПокупателямиУЕ");
	ДобавитьПредопределенныйСчет(Матрикс, "62.32", "РасчетыПоАвансамПолученнымУЕ");
	ДобавитьПредопределенныйСчет(Матрикс, "62.ОТ", "РасчетыПоАвансамПолученнымВСчетОтгрузки");
	ДобавитьПредопределенныйСчет(Матрикс, "62.ОТ.1", "РасчетыПоАвансамПолученнымВСчетОтгрузкиРуб");
	ДобавитьПредопределенныйСчет(Матрикс, "62.ОТ.2", "РасчетыПоАвансамПолученнымВСчетОтгрузкиВал");
	ДобавитьПредопределенныйСчет(Матрикс, "62.ОТ.3", "РасчетыПоАвансамПолученнымВСчетОтгрузкиУЕ");
	
	ДобавитьПредопределенныйСчет(Матрикс, "63", "РезервыПоСомнительнымДолгам");
	
	ДобавитьПредопределенныйСчет(Матрикс, "66", "РасчетыПоКраткосрочнымКредитамИЗаймам");
	ДобавитьПредопределенныйСчет(Матрикс, "66.01", "КраткосрочныеКредиты");
	ДобавитьПредопределенныйСчет(Матрикс, "66.02", "ПроцентыПоКраткосрочнымКредитам");
	ДобавитьПредопределенныйСчет(Матрикс, "66.03", "КраткосрочныеЗаймы");
	ДобавитьПредопределенныйСчет(Матрикс, "66.04", "ПроцентыПоКраткосрочнымЗаймам");
	ДобавитьПредопределенныйСчет(Матрикс, "66.05", "КраткосрочныеДолговыеЦенныеБумаги");
	ДобавитьПредопределенныйСчет(Матрикс, "66.06", "ПроцентыПоКраткосрочнымДолговымЦеннымБумагам");
	ДобавитьПредопределенныйСчет(Матрикс, "66.21", "КраткосрочныеКредитыВал");
	ДобавитьПредопределенныйСчет(Матрикс, "66.22", "ПроцентыПоКраткосрочнымКредитамВал");
	ДобавитьПредопределенныйСчет(Матрикс, "66.23", "КраткосрочныеЗаймыВал");
	ДобавитьПредопределенныйСчет(Матрикс, "66.24", "ПроцентыПоКраткосрочнымЗаймамВал");
	ДобавитьПредопределенныйСчет(Матрикс, "66.25", "КраткосрочныеДолговыеЦенныеБумагиВал");
	ДобавитьПредопределенныйСчет(Матрикс, "66.26", "ПроцентыПоКраткосрочнымДолговымЦеннымБумагамВал");
	
	ДобавитьПредопределенныйСчет(Матрикс, "67", "РасчетыПоДолгосрочнымКредитамИЗаймам");
	ДобавитьПредопределенныйСчет(Матрикс, "67.01", "ДолгосрочныеКредиты");
	ДобавитьПредопределенныйСчет(Матрикс, "67.02", "ПроцентыПоДолгосрочнымКредитам");
	ДобавитьПредопределенныйСчет(Матрикс, "67.03", "ДолгосрочныеЗаймы");
	ДобавитьПредопределенныйСчет(Матрикс, "67.04", "ПроцентыПоДолгосрочнымЗаймам");
	ДобавитьПредопределенныйСчет(Матрикс, "67.05", "ДолгосрочныеДолговыеЦенныеБумаги");
	ДобавитьПредопределенныйСчет(Матрикс, "67.06", "ПроцентыПроцентыПоДолгосрочнымДолговымЦеннымБумагам");
	ДобавитьПредопределенныйСчет(Матрикс, "67.21", "ДолгосрочныеКредитыВал");
	ДобавитьПредопределенныйСчет(Матрикс, "67.22", "ПроцентыПоДолгосрочнымКредитамВал");
	ДобавитьПредопределенныйСчет(Матрикс, "67.23", "ДолгосрочныеЗаймыВал");
	ДобавитьПредопределенныйСчет(Матрикс, "67.24", "ПроцентыПоДолгосрочнымЗаймамВал");
	ДобавитьПредопределенныйСчет(Матрикс, "67.25", "ДолгосрочныеДолговыеЦенныеБумагиВал");
	ДобавитьПредопределенныйСчет(Матрикс, "67.26", "ПроцентыПоДолгосрочнымДолговымЦеннымБумагамВал");
	
	ДобавитьПредопределенныйСчет(Матрикс, "68", "РасчетыПоНалогам");
	ДобавитьПредопределенныйСчет(Матрикс, "68.01", "НДФЛ_НалоговогоАгента");
	ДобавитьПредопределенныйСчет(Матрикс, "68.01.1", "НДФЛ");
	ДобавитьПредопределенныйСчет(Матрикс, "68.01.2", "НДФЛ_ДоходыСвышеПредельнойВеличины");
	ДобавитьПредопределенныйСчет(Матрикс, "68.02", "НДС");
	ДобавитьПредопределенныйСчет(Матрикс, "68.03", "Акцизы");
	ДобавитьПредопределенныйСчет(Матрикс, "68.04", "НалогНаПрибыль");
	ДобавитьПредопределенныйСчет(Матрикс, "68.04.1", "РасчетыСБюджетом");
	ДобавитьПредопределенныйСчет(Матрикс, "68.04.2", "РасчетНалогаНаПрибыль");
	ДобавитьПредопределенныйСчет(Матрикс, "68.06", "ЗемельныйНалог");
	ДобавитьПредопределенныйСчет(Матрикс, "68.07", "ТранспортныйНалог");
	ДобавитьПредопределенныйСчет(Матрикс, "68.08", "НалогНаИмущество");
	ДобавитьПредопределенныйСчет(Матрикс, "68.09", "НалогНаРекламу");
	ДобавитьПредопределенныйСчет(Матрикс, "68.10", "ПрочиеНалогиИСборы");
	ДобавитьПредопределенныйСчет(Матрикс, "68.11", "ЕНВД");
	ДобавитьПредопределенныйСчет(Матрикс, "68.12", "ЕНприУСН");
	ДобавитьПредопределенныйСчет(Матрикс, "68.13", "ТорговыйСбор");
	ДобавитьПредопределенныйСчет(Матрикс, "68.14", "НалогПриПСН");
	ДобавитьПредопределенныйСчет(Матрикс, "68.15", "НалогПриАУСН");
	ДобавитьПредопределенныйСчет(Матрикс, "68.16", "НалогНаПрофессиональныйДоход");
	ДобавитьПредопределенныйСчет(Матрикс, "68.21", "НДФЛПредпринимателя");
	ДобавитьПредопределенныйСчет(Матрикс, "68.21.1", "НДФЛ_ИП");
	ДобавитьПредопределенныйСчет(Матрикс, "68.21.2", "НДФЛ_ИП_НалоговаяБазаСвышеПредельнойВеличины");
	ДобавитьПредопределенныйСчет(Матрикс, "68.22", "НДСпоЭкспортуКВозмещению");
	ДобавитьПредопределенныйСчет(Матрикс, "68.32", "НДСНалоговогоАгента");
	ДобавитьПредопределенныйСчет(Матрикс, "68.34", "НалогНаПрибыльНалоговогоАгента");
	ДобавитьПредопределенныйСчет(Матрикс, "68.42", "НДСТаможенныйСоюзКУплате");
	ДобавитьПредопределенныйСчет(Матрикс, "68.52", "НДСНалоговогоАгентаПоОтдельнымВидамТоваров");
	ДобавитьПредопределенныйСчет(Матрикс, "68.90", "ЕдиныйНалоговыйСчет");
	
	ДобавитьПредопределенныйСчет(Матрикс, "69", "РасчетыПоСоциальномуСтрахованию");
	ДобавитьПредопределенныйСчет(Матрикс, "69.01", "ФСС");
	ДобавитьПредопределенныйСчет(Матрикс, "69.02", "ПФР");
	ДобавитьПредопределенныйСчет(Матрикс, "69.02.1", "ПФР_страх");
	ДобавитьПредопределенныйСчет(Матрикс, "69.02.2", "ПФР_нак");
	ДобавитьПредопределенныйСчет(Матрикс, "69.02.3", "ПФР_доп");
	ДобавитьПредопределенныйСчет(Матрикс, "69.02.4", "ПФР_доп_шахтеры");
	ДобавитьПредопределенныйСчет(Матрикс, "69.02.5", "ПФР_доп_ВредныеУсловияТруда");
	ДобавитьПредопределенныйСчет(Матрикс, "69.02.6", "ПФР_доп_ТяжелыеУсловияТруда");
	ДобавитьПредопределенныйСчет(Матрикс, "69.02.7", "ПФР_ОПС");
	ДобавитьПредопределенныйСчет(Матрикс, "69.03", "ФОМС");
	ДобавитьПредопределенныйСчет(Матрикс, "69.03.1", "ФФОМС");
	ДобавитьПредопределенныйСчет(Матрикс, "69.03.2", "ТФОМС");
	ДобавитьПредопределенныйСчет(Матрикс, "69.04", "ЕСН_ФБ");
	ДобавитьПредопределенныйСчет(Матрикс, "69.05", "ПФР_ДОБР");
	ДобавитьПредопределенныйСчет(Матрикс, "69.05.1", "ПФР_ДОБР_орг");
	ДобавитьПредопределенныйСчет(Матрикс, "69.05.2", "ПФР_ДОБР_сотр");
	ДобавитьПредопределенныйСчет(Матрикс, "69.06.1", "ПФР_Страх_СтраховойГод");
	ДобавитьПредопределенныйСчет(Матрикс, "69.06.2", "ПФР_Нак_СтраховойГод");
	ДобавитьПредопределенныйСчет(Матрикс, "69.06.3", "ФОМС_СтраховойГод");
	ДобавитьПредопределенныйСчет(Матрикс, "69.06.4", "ФСС_СтраховойГод");
	ДобавитьПредопределенныйСчет(Матрикс, "69.06.5", "ПФР_ОПС_ИП");
	ДобавитьПредопределенныйСчет(Матрикс, "69.06.6", "СтраховыеВзносыЕдиныйТариф_ИП");
	ДобавитьПредопределенныйСчет(Матрикс, "69.09", "СтраховыеВзносыЕдиныйТариф");
	ДобавитьПредопределенныйСчет(Матрикс, "69.11", "ФСС_НСиПЗ");
	ДобавитьПредопределенныйСчет(Матрикс, "69.12", "ФСС_ДобровольныеВзносы");
	ДобавитьПредопределенныйСчет(Матрикс, "69.13", "ФСС_СПЕЦ");
	ДобавитьПредопределенныйСчет(Матрикс, "69.13.1", "ФСС_СПЕЦ_ЕНВД");
	ДобавитьПредопределенныйСчет(Матрикс, "69.13.2", "ФСС_СПЕЦ_УСН");
	
	ДобавитьПредопределенныйСчет(Матрикс, "70", "РасчетыСПерсоналомПоОплатеТруда");
	
	ДобавитьПредопределенныйСчет(Матрикс, "71", "РасчетыСПодотчетнымиЛицами_");
	ДобавитьПредопределенныйСчет(Матрикс, "71.01", "РасчетыСПодотчетнымиЛицами");
	ДобавитьПредопределенныйСчет(Матрикс, "71.21", "РасчетыСПодотчетнымиЛицамиВал");
	
	ДобавитьПредопределенныйСчет(Матрикс, "73", "РасчетыСПерсоналомПоПрочимОперациям");
	ДобавитьПредопределенныйСчет(Матрикс, "73.01", "РасчетыПоПредоставленнымЗаймам");
	ДобавитьПредопределенныйСчет(Матрикс, "73.02", "РасчетыПоВозмещениюМатериальногоУщерба");
	ДобавитьПредопределенныйСчет(Матрикс, "73.03", "РасчетыПоПрочимОперациям");
	
	ДобавитьПредопределенныйСчет(Матрикс, "75", "РасчетыСУчредителями");
	ДобавитьПредопределенныйСчет(Матрикс, "75.01", "РасчетыПоВкладамВУставныйКапитал");
	ДобавитьПредопределенныйСчет(Матрикс, "75.02", "РасчетыПоВыплатеДоходов");
	
	ДобавитьПредопределенныйСчет(Матрикс, "76", "РасчетыСРазнымиДебиторамиИКредиторами");
	ДобавитьПредопределенныйСчет(Матрикс, "76.01", "РасчетыПоИмущественномуЛичномуИДобровольномуСтрахованию");
	ДобавитьПредопределенныйСчет(Матрикс, "76.01.1", "РасчетыПоИмущественномуИЛичномуСтрахованию");
	ДобавитьПредопределенныйСчет(Матрикс, "76.01.2", "ПлатежиПоДобровольномуСтрахованиюРаботников");
	ДобавитьПредопределенныйСчет(Матрикс, "76.01.9", "ПлатежиПоПрочимВидамСтрахования");
	ДобавитьПредопределенныйСчет(Матрикс, "76.02", "РасчетыПоПретензиям");
	ДобавитьПредопределенныйСчет(Матрикс, "76.03", "РасчетыПоПричитающимсяДивидендам");
	ДобавитьПредопределенныйСчет(Матрикс, "76.04", "РасчетыПоДепонированнымСуммам");
	ДобавитьПредопределенныйСчет(Матрикс, "76.05", "РасчетыСПрочимиПоставщикамиИПодрядчиками");
	ДобавитьПредопределенныйСчет(Матрикс, "76.06", "РасчетыСПрочимиПокупателямиИЗаказчиками");
	ДобавитьПредопределенныйСчет(Матрикс, "76.07.1", "АрендныеОбязательства");
	ДобавитьПредопределенныйСчет(Матрикс, "76.07.2", "АрендныеПлатежи");
	ДобавитьПредопределенныйСчет(Матрикс, "76.07.5", "ПроцентыПоАренде");
	ДобавитьПредопределенныйСчет(Матрикс, "76.07.9", "НДСпоАренднымОбязательствам");
	ДобавитьПредопределенныйСчет(Матрикс, "76.08", "ПроцентыПоРассрочке");
	ДобавитьПредопределенныйСчет(Матрикс, "76.27.1", "АрендныеОбязательстваВал");
	ДобавитьПредопределенныйСчет(Матрикс, "76.27.2", "АрендныеПлатежиВал");
	ДобавитьПредопределенныйСчет(Матрикс, "76.27.5", "ПроцентыПоАрендеВал");
	ДобавитьПредопределенныйСчет(Матрикс, "76.27.9", "НДСпоАренднымОбязательствамВал");
	ДобавитьПредопределенныйСчет(Матрикс, "76.28", "ПроцентыПоРассрочкеВал");
	ДобавитьПредопределенныйСчет(Матрикс, "76.37.1", "АрендныеОбязательстваУЕ");
	ДобавитьПредопределенныйСчет(Матрикс, "76.37.2", "АрендныеПлатежиУЕ");
	ДобавитьПредопределенныйСчет(Матрикс, "76.37.5", "ПроцентыПоАрендеУЕ");
	ДобавитьПредопределенныйСчет(Матрикс, "76.37.9", "НДСпоАренднымОбязательствамУЕ");
	ДобавитьПредопределенныйСчет(Матрикс, "76.38", "ПроцентыПоРассрочкеУЕ");
	ДобавитьПредопределенныйСчет(Матрикс, "76.09", "ПрочиеРасчетыСРазнымиДебиторамиИКредиторами");
	ДобавитьПредопределенныйСчет(Матрикс, "76.10", "ПрочиеРасчетыСФизическимиЛицами");
	ДобавитьПредопределенныйСчет(Матрикс, "76.13", "РасчетыСФакторинговымиКомпаниями");
	ДобавитьПредопределенныйСчет(Матрикс, "76.14", "Билеты");
	ДобавитьПредопределенныйСчет(Матрикс, "76.16", "РасчетыССамозанятыми");
	ДобавитьПредопределенныйСчет(Матрикс, "76.17", "РасчетыПоНалогамСТретьимиЛицами");
	ДобавитьПредопределенныйСчет(Матрикс, "76.21", "РасчетыПоИмущественномуИЛичномуСтрахованиюВал");
	ДобавитьПредопределенныйСчет(Матрикс, "76.22", "РасчетыПоПретензиямВал");
	ДобавитьПредопределенныйСчет(Матрикс, "76.25", "РасчетыСПрочимиПоставщикамиИПодрядчикамиВал");
	ДобавитьПредопределенныйСчет(Матрикс, "76.26", "РасчетыСПрочимиПокупателямиИЗаказчикамиВал");
	ДобавитьПредопределенныйСчет(Матрикс, "76.29", "ПрочиеРасчетыСРазнымиДебиторамиИКредиторамиВал");
	ДобавитьПредопределенныйСчет(Матрикс, "76.32", "РасчетыПоПретензиямУЕ");
	ДобавитьПредопределенныйСчет(Матрикс, "76.35", "РасчетыСПрочимиПоставщикамиИПодрядчикамиУЕ");
	ДобавитьПредопределенныйСчет(Матрикс, "76.36", "РасчетыСПрочимиПокупателямиИЗаказчикамиУЕ");
	ДобавитьПредопределенныйСчет(Матрикс, "76.39", "ПрочиеРасчетыСРазнымиДебиторамиИКредиторамиУЕ");
	ДобавитьПредопределенныйСчет(Матрикс, "76.41", "РасчетыПоИсполнительнымДокументамРаботников");
	ДобавитьПредопределенныйСчет(Матрикс, "76.49", "РасчетыПоПрочимУдержаниямРаботников");
	ДобавитьПредопределенныйСчет(Матрикс, "76.ВА", "НДСпоАвансамИПредоплатамВыданным");
	ДобавитьПредопределенныйСчет(Матрикс, "76.АВ", "НДСпоАвансамИПредоплатам");
	ДобавитьПредопределенныйСчет(Матрикс, "76.К", "КорректировкаРасчетовПрошлогоПериода");
	ДобавитьПредопределенныйСчет(Матрикс, "76.Н", "РасчетыПоНДСотложенномуДляУплатыВБюджет");
	ДобавитьПредопределенныйСчет(Матрикс, "76.НА", "РасчетыНДСНалоговогоАгента");
	ДобавитьПредопределенныйСчет(Матрикс, "76.ОТ", "НДСНачисленныйПоОтгрузке");
	
	ДобавитьПредопределенныйСчет(Матрикс, "77", "ОтложенныеНалоговыеОбязательства");
	ДобавитьПредопределенныйСчет(Матрикс, "79", "ВнутрихозяйственныеРасчеты");
	ДобавитьПредопределенныйСчет(Матрикс, "80", "УставныйКапитал");
	ДобавитьПредопределенныйСчет(Матрикс, "81", "СобственныеАкции");
	
	ДобавитьПредопределенныйСчет(Матрикс, "82", "РезервныйКапитал");
	ДобавитьПредопределенныйСчет(Матрикс, "82.01", "РезервыОбразованныеВСоответствииСЗаконодательством");
	ДобавитьПредопределенныйСчет(Матрикс, "82.02", "РезервыОбразованныеВСоответствииСУчредительнымиДокументами");
	
	ДобавитьПредопределенныйСчет(Матрикс, "83", "ДобавочныйКапитал");
	ДобавитьПредопределенныйСчет(Матрикс, "83.01", "ПриростСтоимостиПоПереоценке");
	ДобавитьПредопределенныйСчет(Матрикс, "83.01.1", "ПриростСтоимостиИмуществаПоПереоценке");
	ДобавитьПредопределенныйСчет(Матрикс, "83.01.2", "ПриростСтоимостиНМАПоПереоценке");
	ДобавитьПредопределенныйСчет(Матрикс, "83.01.3", "ПриростСтоимостиПрочихВнеоборотныхАктивоПоПереоценке");
	
	ДобавитьПредопределенныйСчет(Матрикс, "84", "НераспределеннаяПрибыль");
	ДобавитьПредопределенныйСчет(Матрикс, "84.01", "ПрибыльПодлежащаяРаспределению");
	ДобавитьПредопределенныйСчет(Матрикс, "84.02", "УбытокПодлежащийПокрытию");
	
	ДобавитьПредопределенныйСчет(Матрикс, "86", "ЦелевоеФинансирование");
	
	ДобавитьПредопределенныйСчет(Матрикс, "90", "Продажи");
	ДобавитьПредопределенныйСчет(Матрикс, "90.01", "Выручка");
	ДобавитьПредопределенныйСчет(Матрикс, "90.02", "СебестоимостьПродаж");
	ДобавитьПредопределенныйСчет(Матрикс, "90.03", "Продажи_НДС");
	ДобавитьПредопределенныйСчет(Матрикс, "90.04", "Продажи_Акцизы");
	ДобавитьПредопределенныйСчет(Матрикс, "90.05", "Продажи_ЭкспортныеПошлины");
	ДобавитьПредопределенныйСчет(Матрикс, "90.08", "Продажи_УправленческиеРасходы");
	ДобавитьПредопределенныйСчет(Матрикс, "90.07", "Продажи_РасходыНаПродажу");
	ДобавитьПредопределенныйСчет(Матрикс, "90.01.1", "ВыручкаНеЕНВД");
	ДобавитьПредопределенныйСчет(Матрикс, "90.01.2", "ВыручкаЕНВД");
	ДобавитьПредопределенныйСчет(Матрикс, "90.02.1", "СебестоимостьПродажНеЕНВД");
	ДобавитьПредопределенныйСчет(Матрикс, "90.02.2", "СебестоимостьПродажЕНВД");
	ДобавитьПредопределенныйСчет(Матрикс, "90.07.1", "Продажи_РасходыНаПродажуНеЕНВД");
	ДобавитьПредопределенныйСчет(Матрикс, "90.07.2", "Продажи_РасходыНаПродажуЕНВД");
	ДобавитьПредопределенныйСчет(Матрикс, "90.08.1", "Продажи_УправленческиеРасходыНеЕНВД");
	ДобавитьПредопределенныйСчет(Матрикс, "90.08.2", "Продажи_УправленческиеРасходыЕНВД");
	
	ДобавитьПредопределенныйСчет(Матрикс, "91", "ПрочиеДоходыИРасходы");
	ДобавитьПредопределенныйСчет(Матрикс, "91.01", "ПрочиеДоходы");
	ДобавитьПредопределенныйСчет(Матрикс, "91.02", "ПрочиеРасходы");
	
	ДобавитьПредопределенныйСчет(Матрикс, "99", "ПрибылиИУбытки");
	ДобавитьПредопределенныйСчет(Матрикс, "99.01", "ПрибылиИУбыткиБезНалогаНаПрибыль");
	ДобавитьПредопределенныйСчет(Матрикс, "99.02", "ПрибылиИУбытки_НалогНаПрибыль");
	ДобавитьПредопределенныйСчет(Матрикс, "99.02.1", "УсловныйРасходПоНалогуНаПрибыль");
	ДобавитьПредопределенныйСчет(Матрикс, "99.02.2", "УсловныйДоходПоНалогуНаПрибыль");
	ДобавитьПредопределенныйСчет(Матрикс, "99.02.3", "ПостоянноеНалоговоеОбязательство");
	ДобавитьПредопределенныйСчет(Матрикс, "99.02.4", "ПрибылиИУбыткиОтПересчетаОНА_ОНО");
	ДобавитьПредопределенныйСчет(Матрикс, "99.02.Т", "ТекущийНалогНаПрибыль");
	ДобавитьПредопределенныйСчет(Матрикс, "99.02.О", "ОтложенныйНалогНаПрибыль");
	ДобавитьПредопределенныйСчет(Матрикс, "99.01.1", "ПрибылиИУбыткиНеЕНВД");
	ДобавитьПредопределенныйСчет(Матрикс, "99.01.2", "ПрибылиИУбыткиЕНВД");
	ДобавитьПредопределенныйСчет(Матрикс, "99.09", "ПрочиеПрибылиИУбытки");
	
	ДобавитьПредопределенныйСчет(Матрикс, "94", "НедостачиИПотериОтПорчиЦенностей");
	
	ДобавитьПредопределенныйСчет(Матрикс, "96", "РезервыПредстоящихРасходов");
	ДобавитьПредопределенныйСчет(Матрикс, "96.01", "ОценочныеОбязательстваПоВознаграждениямРаботникам");
	ДобавитьПредопределенныйСчет(Матрикс, "96.01.1", "ОценочныеОбязательстваПоВознаграждениям");
	ДобавитьПредопределенныйСчет(Матрикс, "96.01.2", "ОценочныеОбязательстваПостраховымВзносам");
	ДобавитьПредопределенныйСчет(Матрикс, "96.09", "РезервыПредстоящихРасходовПрочие");
	
	ДобавитьПредопределенныйСчет(Матрикс, "97", "РасходыБудущихПериодов");
	ДобавитьПредопределенныйСчет(Матрикс, "97.01", "РасходыНаОплатуТрудаБудущихПериодов");
	ДобавитьПредопределенныйСчет(Матрикс, "97.02", "РасходыБудущихПериодовНаДобровольноеСтрахованиеРаботников");
	ДобавитьПредопределенныйСчет(Матрикс, "97.21", "ПрочиеРасходыБудущихПериодов");
	
	ДобавитьПредопределенныйСчет(Матрикс, "98", "ДоходыБудущихПериодов");
	ДобавитьПредопределенныйСчет(Матрикс, "98.01", "ДоходыПолученныеВСчетБудущихПериодов");
	ДобавитьПредопределенныйСчет(Матрикс, "98.02", "БезвозмездныеПоступления");
	ДобавитьПредопределенныйСчет(Матрикс, "98.03", "ПредстоящиеПоступленияПоНедостачамВыявленнымЗаПрошлыеГоды");
	ДобавитьПредопределенныйСчет(Матрикс, "98.04", "РазницаМеждуСуммойПодлежащейВзысканиюСВиновныхЛицИБалансовойСтоимостьюПоНедостачамЦенностей");
	
	ДобавитьПредопределенныйСчет(Матрикс, "001", "АрендованныеОсновныеСредства");
	ДобавитьПредопределенныйСчет(Матрикс, "002", "ТМЦпринятыеНаОтветственноеХранение");
	ДобавитьПредопределенныйСчет(Матрикс, "003", "МатериалыПринятыеВПереработку_");
	ДобавитьПредопределенныйСчет(Матрикс, "004", "ТоварыПринятыеНаКомиссию");
	ДобавитьПредопределенныйСчет(Матрикс, "005", "ОборудованиеПринятоеДляМонтажа");
	ДобавитьПредопределенныйСчет(Матрикс, "007", "СписаннаяВУбытокЗадолженностьДебиторов");
	ДобавитьПредопределенныйСчет(Матрикс, "008", "ОбеспеченияОбязательствИПлатежейПолученные");
	ДобавитьПредопределенныйСчет(Матрикс, "009", "ОбеспеченияОбязательствИПлатежейВыданные");
	ДобавитьПредопределенныйСчет(Матрикс, "010", "ИзносОсновныхСредств");
	ДобавитьПредопределенныйСчет(Матрикс, "011", "ОсновныеСредстваСданныеВАренду");
	ДобавитьПредопределенныйСчет(Матрикс, "012", "ВозвратнаяТара");
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьПредопределенныеСчета(Матрикс);
	
	ЗапросПоРеквизитам = Новый Запрос;
	ЗапросПоРеквизитам.Текст =
		"ВЫБРАТЬ
		|	Матрикс.Счет КАК Счет,
		|	Матрикс.УсловныйКод КАК УсловныйКод
		|ПОМЕСТИТЬ ВТ_Матрикс
		|ИЗ
		|	&Матрикс КАК Матрикс
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Матрикс.УсловныйКод КАК УсловныйКод,
		|	Хозрасчетный.Ссылка КАК Ссылка,
		|	Хозрасчетный.Код КАК Код,
		|	Хозрасчетный.Наименование КАК Наименование
		|ИЗ
		|	ВТ_Матрикс КАК ВТ_Матрикс
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|		ПО ВТ_Матрикс.Счет = Хозрасчетный.Ссылка";
	
	ЗапросПоРеквизитам.УстановитьПараметр("Матрикс", Матрикс);
	
	Результат = ЗапросПоРеквизитам.Выполнить().Выгрузить();
	Результат.Индексы.Добавить("УсловныйКод");
	
	Возврат Результат;
	
КонецФункции

Функция СчетСРеквизитами(УсловныйКод, СчетаСРеквизитами) Экспорт
	
	СведенияСчета = СчетаСРеквизитами.Найти(УсловныйКод, "УсловныйКод");
	
	Если СведенияСчета = Неопределено Тогда
		ИмяФункции = "ЗаполнениеБухгалтерскойОтчетностиИтоги.СчетСРеквизитами";
		ВызватьИсключение СтрШаблон(НСтр("ru = 'Функция %1:
			|Не найден счет с условным кодом %2 в таблице сведений счетов'"), ИмяФункции, УсловныйКод);
	КонецЕсли;
	
	Возврат СведенияСчета;
	
КонецФункции

Процедура ДобавитьПредопределенныйСчет(Счета, УсловныйКодСчета, ИмяСчета)
	
	НовыйСчет = Счета.Добавить();
	
	НовыйСчет.УсловныйКод = УсловныйКодСчета;
	НовыйСчет.Счет = ПланыСчетов.Хозрасчетный[ИмяСчета];
	
КонецПроцедуры

Функция СальдоИОборотыПоСчетам(ПараметрыИтогов) Экспорт
	
	Организация   = ПараметрыИтогов.Организация;
	НачалоПериода = ПараметрыИтогов.НачалоПериода;
	КонецПериода  = ПараметрыИтогов.КонецПериода;
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
	               |	ХозрасчетныйОстаткиИОбороты.Счет.Вид КАК ВидСчета,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СуммаНачальныйОстатокДт,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт КАК СуммаНачальныйОстатокКт,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокДт КАК СуммаНачальныйРазвернутыйОстатокДт,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокКт КАК СуммаНачальныйРазвернутыйОстатокКт,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК СуммаОборотДт,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК СуммаОборотКт,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СуммаКонечныйОстатокКт,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокДт КАК СуммаКонечныйРазвернутыйОстатокДт,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокКт КАК СуммаКонечныйРазвернутыйОстатокКт
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, ПЕРИОД, , , , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |ИТОГИ
	               |	СУММА(СуммаНачальныйОстатокДт),
	               |	СУММА(СуммаНачальныйОстатокКт),
	               |	СУММА(СуммаНачальныйРазвернутыйОстатокДт),
	               |	СУММА(СуммаНачальныйРазвернутыйОстатокКт),
	               |	СУММА(СуммаОборотДт),
	               |	СУММА(СуммаОборотКт),
	               |	СУММА(СуммаКонечныйОстатокДт),
	               |	СУММА(СуммаКонечныйОстатокКт),
	               |	СУММА(СуммаКонечныйРазвернутыйОстатокДт),
	               |	СУММА(СуммаКонечныйРазвернутыйОстатокКт)
	               |ПО
	               |	Счет ТОЛЬКО ИЕРАРХИЯ";
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
	
	Запрос.Текст = ТекстЗапроса;
	
	ИтоговаяТаблица = Запрос.Выполнить().Выгрузить();
	ИтоговаяТаблица.Индексы.Добавить("Счет");
	
	Возврат ИтоговаяТаблица;
	
КонецФункции

Функция СальдоИОборотыПоСчетамИСубконто(ПараметрыИтогов) Экспорт
	
	Организация   = ПараметрыИтогов.Организация;
	НачалоПериода = ПараметрыИтогов.НачалоПериода;
	КонецПериода  = ПараметрыИтогов.КонецПериода;
	
	Если ТипЗнч(ПараметрыИтогов.Счета) <> Тип("Массив") Тогда
		Счета = Новый Массив;
		Счета.Добавить(ПараметрыИтогов.Счета);
	Иначе
		Счета = ПараметрыИтогов.Счета;
	КонецЕсли;
	
	Если ТипЗнч(ПараметрыИтогов.ВидыСубконто) <> Тип("Массив") Тогда
		ВидыСубконто = Новый Массив;
		ВидыСубконто.Добавить(ПараметрыИтогов.ВидыСубконто);
	Иначе
		ВидыСубконто = ПараметрыИтогов.ВидыСубконто;
	КонецЕсли;
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
	               |	ХозрасчетныйОстаткиИОбороты.Счет.Вид КАК ВидСчета,
	               |	&ТекстВставки1 КАК ТекстВставки1,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт) КАК СуммаНачальныйОстатокДт,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт) КАК СуммаНачальныйОстатокКт,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокДт) КАК СуммаНачальныйРазвернутыйОстатокДт,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокКт) КАК СуммаНачальныйРазвернутыйОстатокКт,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт) КАК СуммаКонечныйОстатокДт,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт) КАК СуммаКонечныйОстатокКт,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокДт) КАК СуммаКонечныйРазвернутыйОстатокДт,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокКт) КАК СуммаКонечныйРазвернутыйОстатокКт,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотДт) КАК СуммаОборотДт,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотКт) КАК СуммаОборотКт
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, ПЕРИОД, , Счет В (&Счета), &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ХозрасчетныйОстаткиИОбороты.Счет,
	               |	ХозрасчетныйОстаткиИОбороты.Счет.Вид
	               |ИТОГИ
	               |	СУММА(СуммаНачальныйОстатокДт),
	               |	СУММА(СуммаНачальныйОстатокКт),
	               |	СУММА(СуммаНачальныйРазвернутыйОстатокДт),
	               |	СУММА(СуммаНачальныйРазвернутыйОстатокКт),
	               |	СУММА(СуммаКонечныйОстатокДт),
	               |	СУММА(СуммаКонечныйОстатокКт),
	               |	СУММА(СуммаКонечныйРазвернутыйОстатокДт),
	               |	СУММА(СуммаКонечныйРазвернутыйОстатокКт),
	               |	СУММА(СуммаОборотДт),
	               |	СУММА(СуммаОборотКт)
	               |ПО
	               |	Счет ТОЛЬКО ИЕРАРХИЯ";
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
	
	Запрос.УстановитьПараметр("Счета", Счета);
	Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	
	СтрокаЗамены1 = "";
	
	Для Инд = 1 По ВидыСубконто.Количество() Цикл
		СтрокаЗамены1 = СтрокаЗамены1
		              + ?(Инд <> 1, Символы.ПС + Символы.Таб, "")
		              + "КОЛИЧЕСТВО(ХозрасчетныйОстаткиИОбороты.Субконто" + Инд + ") КАК Субконто" + Инд + ",";
	КонецЦикла;
	
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&ТекстВставки1 КАК ТекстВставки1,", СтрокаЗамены1);
	
	ИтоговаяТаблица = Запрос.Выполнить().Выгрузить();
	ИтоговаяТаблица.Индексы.Добавить("Счет");
	
	Возврат ИтоговаяТаблица;
	
КонецФункции

Функция ОборотыМеждуСчетами(ПараметрыИтогов) Экспорт
	
	Организация   = ПараметрыИтогов.Организация;
	НачалоПериода = ПараметрыИтогов.НачалоПериода;
	КонецПериода  = ПараметрыИтогов.КонецПериода;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Хозрасчетный.Ссылка КАК Счет,
	               |	Хозрасчетный.Ссылка КАК Счет2,
	               |	ВЫБОР
	               |		КОГДА НЕ Хозрасчетный.Родитель.Родитель.Ссылка ЕСТЬ NULL 
	               |			ТОГДА Хозрасчетный.Родитель.Ссылка
	               |		ИНАЧЕ Хозрасчетный.Ссылка
	               |	КОНЕЦ КАК Счет1,
	               |	ВЫБОР
	               |		КОГДА Хозрасчетный.Родитель.Ссылка ЕСТЬ NULL 
	               |			ТОГДА Хозрасчетный.Ссылка
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА Хозрасчетный.Родитель.Родитель.Ссылка ЕСТЬ NULL 
	               |					ТОГДА Хозрасчетный.Родитель.Ссылка
	               |				ИНАЧЕ Хозрасчетный.Родитель.Родитель.Ссылка
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Счет0
	               |ПОМЕСТИТЬ ВТ_ИерархияСчетов
	               |ИЗ
	               |	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СчетДт КАК Счет,
	               |	ХозрасчетныйОборотыДтКт.СчетДт.Вид КАК ВидСчета,
	               |	ВТ_ИерархияСчетовДт.Счет2 КАК Счет2,
	               |	ВТ_ИерархияСчетовДт.Счет1 КАК Счет1,
	               |	ВТ_ИерархияСчетовДт.Счет0 КАК Счет0,
	               |	ХозрасчетныйОборотыДтКт.СчетКт КАК КорСчет,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаКорОборотДт,
	               |	ВТ_ИерархияСчетовКт.Счет2 КАК КорСчет2,
	               |	ВТ_ИерархияСчетовКт.Счет1 КАК КорСчет1,
	               |	ВТ_ИерархияСчетовКт.Счет0 КАК КорСчет0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, ПЕРИОД, , , , , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИерархияСчетов КАК ВТ_ИерархияСчетовДт
	               |		ПО ХозрасчетныйОборотыДтКт.СчетДт = ВТ_ИерархияСчетовДт.Счет
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИерархияСчетов КАК ВТ_ИерархияСчетовКт
	               |		ПО ХозрасчетныйОборотыДтКт.СчетКт = ВТ_ИерархияСчетовКт.Счет";
	
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
	
	ИтоговаяТаблица = Запрос.Выполнить().Выгрузить();
	
	ИтоговаяТаблица.Индексы.Добавить("Счет0, КорСчет0");
	ИтоговаяТаблица.Индексы.Добавить("Счет0, КорСчет1");
	ИтоговаяТаблица.Индексы.Добавить("Счет0, КорСчет2");
	
	ИтоговаяТаблица.Индексы.Добавить("Счет1, КорСчет0");
	ИтоговаяТаблица.Индексы.Добавить("Счет1, КорСчет1");
	ИтоговаяТаблица.Индексы.Добавить("Счет1, КорСчет2");
	
	ИтоговаяТаблица.Индексы.Добавить("Счет2, КорСчет0");
	ИтоговаяТаблица.Индексы.Добавить("Счет2, КорСчет1");
	ИтоговаяТаблица.Индексы.Добавить("Счет2, КорСчет2");
	
	Возврат ИтоговаяТаблица;
	
КонецФункции

Функция ОборотыМеждуСчетамиПоАналитике(ПараметрыИтогов) Экспорт
	
	Организация   = ПараметрыИтогов.Организация;
	НачалоПериода = ПараметрыИтогов.НачалоПериода;
	КонецПериода  = ПараметрыИтогов.КонецПериода;
	
	Счет = ПараметрыИтогов.Счет;
	Если ТипЗнч(Счет) = Тип("Строка") Тогда
		Счет = Счет(Счет); // приведение к ссылочному типу
	КонецЕсли;
	
	КорСчет = ПараметрыИтогов.КорСчет;
	Если ТипЗнч(КорСчет) = Тип("Строка") Тогда
		КорСчет = Счет(КорСчет); // приведение к ссылочному типу
	КонецЕсли;
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	Хозрасчетный.Ссылка КАК Счет,
	               |	ВЫБОР
	               |		КОГДА Хозрасчетный.Родитель.Ссылка ЕСТЬ NULL 
	               |			ТОГДА Хозрасчетный.Ссылка
	               |		ИНАЧЕ Хозрасчетный.Родитель.Ссылка
	               |	КОНЕЦ КАК СчетР,
	               |	ВЫБОР
	               |		КОГДА Хозрасчетный.Родитель.Родитель.Ссылка ЕСТЬ NULL 
	               |				И Хозрасчетный.Родитель.Ссылка ЕСТЬ NULL 
	               |			ТОГДА Хозрасчетный.Ссылка
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА Хозрасчетный.Родитель.Родитель.Ссылка ЕСТЬ NULL 
	               |					ТОГДА Хозрасчетный.Родитель.Ссылка
	               |				ИНАЧЕ Хозрасчетный.Родитель.Родитель.Ссылка
	               |			КОНЕЦ
	               |	КОНЕЦ КАК СчетРР
	               |ПОМЕСТИТЬ ВТ_ИерархияСчетов
	               |ИЗ
	               |	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОбороты.Счет КАК СчетДт,
	               |	ВТ_ИерархияСчетовДт.СчетР КАК СчетДтР,
	               |	ВТ_ИерархияСчетовДт.СчетРР КАК СчетДтРР,
	               |	ХозрасчетныйОбороты.КорСчет КАК СчетКт,
	               |	ВТ_ИерархияСчетовКт.СчетР КАК СчетКтР,
	               |	ВТ_ИерархияСчетовКт.СчетРР КАК СчетКтРР,
	               |	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаКорОборотДт
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, ПЕРИОД, Счет В (&Счет), &СтрокаЗамены1, Организация = &Организация, КорСчет В (&КорСчет), &СтрокаЗамены2) КАК ХозрасчетныйОбороты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИерархияСчетов КАК ВТ_ИерархияСчетовДт
	               |		ПО ХозрасчетныйОбороты.Счет = ВТ_ИерархияСчетовДт.Счет
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИерархияСчетов КАК ВТ_ИерархияСчетовКт
	               |		ПО ХозрасчетныйОбороты.КорСчет = ВТ_ИерархияСчетовКт.Счет
	               |ГДЕ
	               |	&СтрокаЗамены3
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ХозрасчетныйОбороты.Счет,
	               |	ХозрасчетныйОбороты.КорСчет,
	               |	ВТ_ИерархияСчетовДт.СчетР,
	               |	ВТ_ИерархияСчетовДт.СчетРР,
	               |	ВТ_ИерархияСчетовКт.СчетР,
	               |	ВТ_ИерархияСчетовКт.СчетРР";
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
	
	Запрос.УстановитьПараметр("Счет",    Счет);
	Запрос.УстановитьПараметр("КорСчет", КорСчет);
	
	СтрокаЗамены3 = ""; // условие запроса
	
	СтрокаЗамены1 = ""; // виды субконто
	Если ПараметрыИтогов.Свойство("Субконто") Тогда
		ВидыСубконто = Новый Массив;
		Для Инд = 1 По ПараметрыИтогов.Субконто.Количество() Цикл
			ОписаниеСубконто = ПараметрыИтогов.Субконто[Инд - 1];
			ВидыСубконто.Добавить(ОписаниеСубконто.ВидСубконто);
			
			Если ЗначениеЗаполнено(ОписаниеСубконто.Отбор) Тогда
				ВидОтбораСтрокой = ?(ТипЗнч(ОписаниеСубконто.Отбор) = Тип("Массив"), " В ", " = ");
				СтрокаЗамены3 = Символы.Таб + ?(ЗначениеЗаполнено(СтрокаЗамены3), "И ", "")
				              + "ХозрасчетныйОбороты.Субконто" + Инд + ВидОтбораСтрокой + "(&Субконто" + Инд + ")";
				Запрос.УстановитьПараметр("Субконто" + Инд, ОписаниеСубконто.Отбор);
			КонецЕсли;
		КонецЦикла;
		
		СтрокаЗамены1 = "&ВидыСубконто";
		Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	КонецЕсли;
	
	СтрокаЗамены2 = ""; // виды корреспондирующих субконто
	Если ПараметрыИтогов.Свойство("КорСубконто") Тогда
		ВидыКорСубконто = Новый Массив;
		Для Инд = 1 По ПараметрыИтогов.КорСубконто.Количество() Цикл
			ОписаниеСубконто = ПараметрыИтогов.КорСубконто[Инд -1];
			ВидыКорСубконто.Добавить(ОписаниеСубконто.ВидСубконто);
			
			Если ЗначениеЗаполнено(ОписаниеСубконто.Отбор) Тогда
				ВидОтбораСтрокой = ?(ТипЗнч(ОписаниеСубконто.Отбор) = Тип("Массив"), " В ", " = ");
				СтрокаЗамены3 = Символы.Таб + ?(ЗначениеЗаполнено(СтрокаЗамены3), "И ", "")
				              + "ХозрасчетныйОбороты.КорСубконто" + Инд + ВидОтбораСтрокой + "(&КорСубконто" + Инд + ")";
				Запрос.УстановитьПараметр("КорСубконто" + Инд, ОписаниеСубконто.Отбор);
			КонецЕсли;
		КонецЦикла;
		
		СтрокаЗамены2 = "&ВидыКорСубконто";
		Запрос.УстановитьПараметр("ВидыКорСубконто", ВидыКорСубконто);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтрокаЗамены3) Тогда
		СтрокаЗамены3 = "ИСТИНА";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СтрокаЗамены1", СтрокаЗамены1);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СтрокаЗамены2", СтрокаЗамены2);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СтрокаЗамены3", СтрокаЗамены3);
	
	Запрос.Текст = ТекстЗапроса;
	ИтоговаяТаблица = Запрос.Выполнить().Выгрузить();
	
	Возврат ИтоговаяТаблица.Итог("СуммаКорОборотДт");
	
КонецФункции

Функция СНД(Счет, СальдоИОбороты) Экспорт
	
	Возврат СальдоПоСчету(Счет, "СуммаНачальныйОстатокДт", СальдоИОбороты);
	
КонецФункции

Функция СНДР(Счет, СальдоИОбороты) Экспорт
	
	Возврат СальдоПоСчету(Счет, "СуммаНачальныйРазвернутыйОстатокДт", СальдоИОбороты);
	
КонецФункции

Функция СНК(Счет, СальдоИОбороты) Экспорт
	
	Возврат СальдоПоСчету(Счет, "СуммаНачальныйОстатокКт", СальдоИОбороты);
	
КонецФункции

Функция СНКР(Счет, СальдоИОбороты) Экспорт
	
	Возврат СальдоПоСчету(Счет, "СуммаНачальныйРазвернутыйОстатокКт", СальдоИОбороты);
	
КонецФункции

Функция ОБ(Знач СчетДт, Знач СчетКт, ОборотыМеждуСчетами) Экспорт
	
	Если ТипЗнч(СчетДт) = Тип("Строка") Тогда
		СчетДт = Счет(СчетДт);
	КонецЕсли;
	
	Если ТипЗнч(СчетКт) = Тип("Строка") Тогда
		СчетКт = Счет(СчетКт);
	КонецЕсли;
	
	Если ТипЗнч(СчетДт) = Тип("Массив") ИЛИ ТипЗнч(СчетКт) = Тип("Массив") Тогда
		Если ТипЗнч(СчетДт) <> Тип("Массив") Тогда
			СчетДт = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(СчетДт);
		КонецЕсли;
		
		Если ТипЗнч(СчетКт) <> Тип("Массив") Тогда
			СчетКт = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(СчетКт);
		КонецЕсли;
		
		Оборот = 0;
		
		Для Каждого СтрокаОборотов Из ОборотыМеждуСчетами Цикл
			СчетДтОбнаружен = СчетДт.Найти(СтрокаОборотов.Счет2) <> Неопределено
			              ИЛИ СчетДт.Найти(СтрокаОборотов.Счет1) <> Неопределено
			              ИЛИ СчетДт.Найти(СтрокаОборотов.Счет0) <> Неопределено;
			
			СчетКтОбнаружен = СчетКт.Найти(СтрокаОборотов.КорСчет2) <> Неопределено
			              ИЛИ СчетКт.Найти(СтрокаОборотов.КорСчет1) <> Неопределено
			              ИЛИ СчетКт.Найти(СтрокаОборотов.КорСчет0) <> Неопределено;
			
			Если СчетДтОбнаружен И СчетКтОбнаружен Тогда
				Оборот = Оборот + СтрокаОборотов.СуммаКорОборотДт;
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		УровеньСчетаДт = СтрЧислоВхождений(БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(СчетДт).Код, ".");
		УровеньСчетаКт = СтрЧислоВхождений(БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(СчетКт).Код, ".");
		
		КолонкиПоиска = "Счет" + УровеньСчетаДт + ", " + "КорСчет" + УровеньСчетаКт;
		
		Оборот = 0;
		
		СтрокиПоСчетам = ОборотыМеждуСчетами.НайтиСтроки(Новый Структура(КолонкиПоиска, СчетДт, СчетКт));
		Для Каждого СтрокаПоСчетам Из СтрокиПоСчетам Цикл
			Оборот = Оборот + СтрокаПоСчетам.СуммаКорОборотДт;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Оборот;
	
КонецФункции

Функция ДО(Счет, СальдоИОбороты) Экспорт
	
	Возврат ОборотПоСчету(Счет, "СуммаОборотДт", СальдоИОбороты);
	
КонецФункции

Функция КО(Счет, СальдоИОбороты) Экспорт
	
	Возврат ОборотПоСчету(Счет, "СуммаОборотКт", СальдоИОбороты);
	
КонецФункции

Функция СКД(Счет, СальдоИОбороты) Экспорт
	
	Возврат СальдоПоСчету(Счет, "СуммаКонечныйОстатокДт", СальдоИОбороты);
	
КонецФункции

Функция СКДР(Счет, СальдоИОбороты) Экспорт
	
	Возврат СальдоПоСчету(Счет, "СуммаКонечныйРазвернутыйОстатокДт", СальдоИОбороты);
	
КонецФункции

Функция СКК(Счет, СальдоИОбороты) Экспорт
	
	Возврат СальдоПоСчету(Счет, "СуммаКонечныйОстатокКт", СальдоИОбороты);
	
КонецФункции

Функция СККР(Счет, СальдоИОбороты) Экспорт
	
	Возврат СальдоПоСчету(Счет, "СуммаКонечныйРазвернутыйОстатокКт", СальдоИОбороты);
	
КонецФункции

Функция РазделенноеСальдоСчета_02_01(КонецПериода, Организация) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОстатки.Субконто1 КАК ОС,
	               |	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаКонечныйОстатокДт
	               |ПОМЕСТИТЬ ВТ_Сальдо_01_01
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонПериода, Счет В(&Счета01_01), &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстатки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстатки.Субконто1 КАК ОС,
	               |	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаКонечныйОстатокДт
	               |ПОМЕСТИТЬ ВТ_Сальдо_01_08
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонПериода, Счет В (&Счета01_08), &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстатки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстатки.Субконто1 КАК ОС,
	               |	ХозрасчетныйОстатки.СуммаОстатокКт КАК СуммаКонечныйОстатокКт
	               |ПОМЕСТИТЬ ВТ_Амортизация
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонПериода, Счет В(&Счета02_01), &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстатки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА ВТ_Сальдо_01_01.СуммаКонечныйОстатокДт ЕСТЬ NULL
	               |			ТОГДА 0
	               |		ИНАЧЕ ВТ_Амортизация.СуммаКонечныйОстатокКт
	               |	КОНЕЦ КАК СКК_02_01__01_01,
	               |	ВЫБОР
	               |		КОГДА ВТ_Сальдо_01_01.СуммаКонечныйОстатокДт ЕСТЬ NULL
	               |				И НЕ ВТ_Сальдо_01_08.СуммаКонечныйОстатокДт ЕСТЬ NULL
	               |			ТОГДА ВТ_Амортизация.СуммаКонечныйОстатокКт
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК СКК_02_01__01_08
	               |ИЗ
	               |	ВТ_Амортизация КАК ВТ_Амортизация
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сальдо_01_01 КАК ВТ_Сальдо_01_01
	               |		ПО ВТ_Амортизация.ОС = ВТ_Сальдо_01_01.ОС
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сальдо_01_08 КАК ВТ_Сальдо_01_08
	               |		ПО ВТ_Амортизация.ОС = ВТ_Сальдо_01_08.ОС
	               |ИТОГИ
	               |	СУММА(СКК_02_01__01_01),
	               |	СУММА(СКК_02_01__01_08)
	               |ПО
	               |	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("КонПериода", Новый Граница(КонецПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ВидыСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Счета01_01", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("01.01")));
	Запрос.УстановитьПараметр("Счета01_08", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("01.08")));
	Запрос.УстановитьПараметр("Счета02_01", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("02.01")));
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("СКК_02_01__01_01", 0);
	ВозвращаемоеЗначение.Вставить("СКК_02_01__01_08", 0);
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ВозвращаемоеЗначение, Выборка);
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция РазделенноеСальдоСчета_02_02(КонецПериода, Организация) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОстатки.Субконто1 КАК ОС,
	               |	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаКонечныйОстатокДт
	               |ПОМЕСТИТЬ ВТ_Сальдо_03_01
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонПериода, Счет В (&Счета03_01), &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстатки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстатки.Субконто1 КАК ОС,
	               |	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаКонечныйОстатокДт
	               |ПОМЕСТИТЬ ВТ_Сальдо_03_02
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонПериода, Счет В (&Счета03_02), &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстатки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстатки.Субконто1 КАК ОС,
	               |	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаКонечныйОстатокДт
	               |ПОМЕСТИТЬ ВТ_Сальдо_03_03
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонПериода, Счет В (&Счета03_03), &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстатки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстатки.Субконто1 КАК ОС,
	               |	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаКонечныйОстатокДт
	               |ПОМЕСТИТЬ ВТ_Сальдо_03_04
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонПериода, Счет В (&Счета03_04), &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстатки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстатки.Субконто1 КАК ОС,
	               |	ХозрасчетныйОстатки.СуммаОстатокКт КАК СуммаКонечныйОстатокКт
	               |ПОМЕСТИТЬ ВТ_Амортизация
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонПериода, Счет В (&Счета02_02), &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстатки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА ВТ_Сальдо_03_01.СуммаКонечныйОстатокДт ЕСТЬ NULL
	               |			ТОГДА 0
	               |		ИНАЧЕ ВТ_Амортизация.СуммаКонечныйОстатокКт
	               |	КОНЕЦ КАК СКК_02_02__03_01,
	               |	ВЫБОР
	               |		КОГДА ВТ_Сальдо_03_01.СуммаКонечныйОстатокДт ЕСТЬ NULL
	               |				И НЕ ВТ_Сальдо_03_02.СуммаКонечныйОстатокДт ЕСТЬ NULL
	               |			ТОГДА ВТ_Амортизация.СуммаКонечныйОстатокКт
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК СКК_02_02__03_02,
	               |	ВЫБОР
	               |		КОГДА ВТ_Сальдо_03_01.СуммаКонечныйОстатокДт ЕСТЬ NULL
	               |				И ВТ_Сальдо_03_02.СуммаКонечныйОстатокДт ЕСТЬ NULL
	               |				И НЕ ВТ_Сальдо_03_03.СуммаКонечныйОстатокДт ЕСТЬ NULL
	               |			ТОГДА ВТ_Амортизация.СуммаКонечныйОстатокКт
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК СКК_02_02__03_03,
	               |	ВЫБОР
	               |		КОГДА ВТ_Сальдо_03_01.СуммаКонечныйОстатокДт ЕСТЬ NULL
	               |				И ВТ_Сальдо_03_02.СуммаКонечныйОстатокДт ЕСТЬ NULL
	               |				И ВТ_Сальдо_03_03.СуммаКонечныйОстатокДт ЕСТЬ NULL
	               |				И НЕ ВТ_Сальдо_03_04.СуммаКонечныйОстатокДт ЕСТЬ NULL
	               |			ТОГДА ВТ_Амортизация.СуммаКонечныйОстатокКт
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК СКК_02_02__03_04
	               |ИЗ
	               |	ВТ_Амортизация КАК ВТ_Амортизация
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сальдо_03_01 КАК ВТ_Сальдо_03_01
	               |		ПО ВТ_Амортизация.ОС = ВТ_Сальдо_03_01.ОС
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сальдо_03_02 КАК ВТ_Сальдо_03_02
	               |		ПО ВТ_Амортизация.ОС = ВТ_Сальдо_03_02.ОС
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сальдо_03_03 КАК ВТ_Сальдо_03_03
	               |		ПО ВТ_Амортизация.ОС = ВТ_Сальдо_03_03.ОС
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сальдо_03_04 КАК ВТ_Сальдо_03_04
	               |		ПО ВТ_Амортизация.ОС = ВТ_Сальдо_03_04.ОС
	               |ИТОГИ
	               |	СУММА(СКК_02_02__03_01),
	               |	СУММА(СКК_02_02__03_02),
	               |	СУММА(СКК_02_02__03_03),
	               |	СУММА(СКК_02_02__03_04)
	               |ПО
	               |	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("КонПериода", Новый Граница(КонецПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ВидыСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Счета03_01", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("03.01")));
	Запрос.УстановитьПараметр("Счета03_02", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("03.02")));
	Запрос.УстановитьПараметр("Счета03_03", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("03.03")));
	Запрос.УстановитьПараметр("Счета03_04", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("03.04")));
	Запрос.УстановитьПараметр("Счета02_02", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("02.02")));
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("СКК_02_02__03_01", 0);
	ВозвращаемоеЗначение.Вставить("СКК_02_02__03_02", 0);
	ВозвращаемоеЗначение.Вставить("СКК_02_02__03_03", 0);
	ВозвращаемоеЗначение.Вставить("СКК_02_02__03_04", 0);
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ВозвращаемоеЗначение, Выборка);
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция РазделенноеСальдоСчета_02_04(КонецПериода, Организация) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОстатки.Субконто1 КАК ОС,
	               |	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаКонечныйОстатокДт
	               |ПОМЕСТИТЬ ВТ_Сальдо_01_01
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонПериода, Счет В(&Счета01_01), &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстатки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстатки.Субконто1 КАК ОС,
	               |	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаКонечныйОстатокДт
	               |ПОМЕСТИТЬ ВТ_Сальдо_01_08
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонПериода, Счет В (&Счета01_08), &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстатки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстатки.Субконто1 КАК ОС,
	               |	ХозрасчетныйОстатки.СуммаОстатокКт КАК СуммаКонечныйОстатокКт
	               |ПОМЕСТИТЬ ВТ_Амортизация
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонПериода, Счет В(&Счета02_04), &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстатки
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА ВТ_Сальдо_01_01.СуммаКонечныйОстатокДт ЕСТЬ NULL
	               |			ТОГДА 0
	               |		ИНАЧЕ ВТ_Амортизация.СуммаКонечныйОстатокКт
	               |	КОНЕЦ КАК СКК_02_04__01_01,
	               |	ВЫБОР
	               |		КОГДА ВТ_Сальдо_01_01.СуммаКонечныйОстатокДт ЕСТЬ NULL
	               |				И НЕ ВТ_Сальдо_01_08.СуммаКонечныйОстатокДт ЕСТЬ NULL
	               |			ТОГДА ВТ_Амортизация.СуммаКонечныйОстатокКт
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК СКК_02_04__01_08
	               |ИЗ
	               |	ВТ_Амортизация КАК ВТ_Амортизация
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сальдо_01_01 КАК ВТ_Сальдо_01_01
	               |		ПО ВТ_Амортизация.ОС = ВТ_Сальдо_01_01.ОС
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сальдо_01_08 КАК ВТ_Сальдо_01_08
	               |		ПО ВТ_Амортизация.ОС = ВТ_Сальдо_01_08.ОС
	               |ИТОГИ
	               |	СУММА(СКК_02_04__01_01),
	               |	СУММА(СКК_02_04__01_08)
	               |ПО
	               |	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("КонПериода", Новый Граница(КонецПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ВидыСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Счета01_01", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("01.01")));
	Запрос.УстановитьПараметр("Счета01_08", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("01.08")));
	Запрос.УстановитьПараметр("Счета02_04", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("02.04")));
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("СКК_02_04__01_01", 0);
	ВозвращаемоеЗначение.Вставить("СКК_02_04__01_08", 0);
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ВозвращаемоеЗначение, Выборка);
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция РазделенноеСальдоСчета_97(КонецПериода, Организация) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).ВидАктива ЕСТЬ NULL
		|				ИЛИ ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).ВидАктива = ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ПрочиеОборотныеАктивы)
		|		ИНАЧЕ ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).ВидАктива
		|	КОНЕЦ КАК ВидАктива,
		|	СУММА(ХозрасчетныйОстатки.СуммаОстатокДт) КАК СуммаКонечныйОстатокДт
		|ПОМЕСТИТЬ ВТ_Сальдо
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонПериода, Счет В (&СчетаРБП), &ВидСубконтоРБП, Организация = &Организация) КАК ХозрасчетныйОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).ВидАктива ЕСТЬ NULL
		|				ИЛИ ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).ВидАктива = ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ПрочиеОборотныеАктивы)
		|		ИНАЧЕ ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).ВидАктива
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВидыАктивовДляРБП.Ссылка КАК ВидАктиваРБП,
		|	СУММА(ЕСТЬNULL(ВТ_Сальдо.СуммаКонечныйОстатокДт, 0)) КАК СуммаКонечныйОстатокДт
		|ИЗ
		|	Перечисление.ВидыАктивовДляРБП КАК ВидыАктивовДляРБП
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сальдо КАК ВТ_Сальдо
		|		ПО (ВТ_Сальдо.ВидАктива = ВидыАктивовДляРБП.Ссылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВидыАктивовДляРБП.Ссылка";
	
	Запрос.УстановитьПараметр("КонПериода",     Новый Граница(КонецПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ВидСубконтоРБП", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("СчетаРБП",       БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("97")));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтруктураСальдо97 = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		СтруктураСальдо97.Вставить(Выборка.ВидАктиваРБП, Выборка.СуммаКонечныйОстатокДт);
	КонецЦикла;
	
	Возврат СтруктураСальдо97;
	
КонецФункции

Функция РазделенноеСальдоСчета_76(Субсчет, КонецПериода, Организация) Экспорт
	
	СтруктураСальдо = Новый Соответствие;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).ВидАктива ЕСТЬ NULL
		|				ИЛИ ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).ВидАктива = ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ПрочиеОборотныеАктивы)
		|		ИНАЧЕ ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).ВидАктива
		|	КОНЕЦ КАК ВидАктива,
		|	СУММА(ХозрасчетныйОстатки.СуммаОстатокДт) КАК СуммаКонечныйОстатокДт
		|ПОМЕСТИТЬ ВТ_Сальдо
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонПериода, Счет В (&СчетаРБП), &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).ВидАктива ЕСТЬ NULL
		|				ИЛИ ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).ВидАктива = ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ПрочиеОборотныеАктивы)
		|		ИНАЧЕ ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.РасходыБудущихПериодов).ВидАктива
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВидыАктивовДляРБП.Ссылка КАК ВидАктиваРБП,
		|	ЕСТЬNULL(ВТ_Сальдо.СуммаКонечныйОстатокДт, 0) КАК СуммаКонечныйОстатокДт
		|ИЗ
		|	Перечисление.ВидыАктивовДляРБП КАК ВидыАктивовДляРБП
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сальдо КАК ВТ_Сальдо
		|		ПО (ВТ_Сальдо.ВидАктива = ВидыАктивовДляРБП.Ссылка)";
	
	Запрос.УстановитьПараметр("КонПериода", Новый Граница(КонецПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ВидыСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СчетаРБП", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Субсчет));
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Выборка.Следующий() Цикл
		СтруктураСальдо.Вставить(Выборка.ВидАктиваРБП, Выборка.СуммаКонечныйОстатокДт);
	КонецЦикла;
	
	Возврат СтруктураСальдо;
	
КонецФункции

Функция РазделенноеСальдоСчетаУчетаАвансов(СчетУчетаАвансов, КонецПериода, РазделятьАвансыПоВидамАктивов, Организация) Экспорт
	
	СтруктураСальдо = Новый Соответствие;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.ДоговорыКонтрагентов).ВидАктива ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляАвансов.ПустаяСсылка)
		|		ИНАЧЕ ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.ДоговорыКонтрагентов).ВидАктива
		|	КОНЕЦ КАК ВидАктива,
		|	СУММА(ХозрасчетныйОстатки.СуммаОстатокДт) КАК СуммаКонечныйОстатокДт
		|ПОМЕСТИТЬ ВТ_Сальдо
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонПериода, Счет В (&Счета602), &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстатки
		|ГДЕ
		|	&РазделятьАвансыПоВидамАктивов
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.ДоговорыКонтрагентов).ВидАктива ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляАвансов.ПустаяСсылка)
		|		ИНАЧЕ ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.ДоговорыКонтрагентов).ВидАктива
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВидыАктивовДляАвансов.Ссылка КАК ВидАктива,
		|	ЕСТЬNULL(ВТ_Сальдо.СуммаКонечныйОстатокДт, 0) КАК СуммаКонечныйОстатокДт
		|ИЗ
		|	Перечисление.ВидыАктивовДляАвансов КАК ВидыАктивовДляАвансов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сальдо КАК ВТ_Сальдо
		|		ПО (ВТ_Сальдо.ВидАктива = ВидыАктивовДляАвансов.Ссылка)";
	
	Запрос.УстановитьПараметр("КонПериода", Новый Граница(КонецПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ВидыСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Счета602", БухгалтерскийУчетПовтИсп.СчетаВИерархии(СчетУчетаАвансов));
	Запрос.УстановитьПараметр("РазделятьАвансыПоВидамАктивов", РазделятьАвансыПоВидамАктивов);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Выборка.Следующий() Цикл
		СтруктураСальдо.Вставить(Выборка.ВидАктива, Выборка.СуммаКонечныйОстатокДт);
	КонецЦикла;
	
	Возврат СтруктураСальдо;
	
КонецФункции

// Возвращает неинициализированные параметры расчета бухгалтерских итогов по счетам учета авансов.
//
// Возвращаемое значение:
//   Структура - параметры, по которым будет производиться расчет:
//     * Организация - СправочникСсылка.Организации;
//     * НачалоПериода - Дата;
//     * КонецПериода - Дата;
//     * СчетаУчетаАвансов - Массив - головные счета, по которым будет произведен расчет;
//     * РазделятьАвансыПоВидамАктивов - Булево.
//
Функция НовыеПараметрыСчетовУчетаАвансовПоВидамАктива() Экспорт
	
	ПараметрыИтогов = Новый Структура;
	ПараметрыИтогов.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	ПараметрыИтогов.Вставить("НачалоПериода", '0001-01-01');
	ПараметрыИтогов.Вставить("КонецПериода", '0001-01-01');
	ПараметрыИтогов.Вставить("СчетаУчетаАвансов", Новый Массив);
	ПараметрыИтогов.Вставить("СчетаУчетаНДСАвансов", Новый Массив);
	ПараметрыИтогов.Вставить("РазделятьАвансыПоВидамАктивов", Ложь);
	
	Возврат ПараметрыИтогов;
	
КонецФункции

// Возвращает таблицу значений с бухгалтерскими итогами по счетам учета авансов в разрезе вида актива баланса.
//
// Параметры:
//   ПараметрыИтогов - см. НовыеПараметрыСчетовУчетаАвансовПоВидамАктива
//
// Возвращаемое значение:
//   ТаблицаЗначений:
//     * Счет - ПланСчетовСсылка.Хозрасчетный;
//     * ВидАктива - Перечисление.ВидыАктивовДляАвансов;
//     * СНД - Число - сальдо начальное по дебету счета;
//     * ДО - Число - оборот по дебету счета;
//     * КО - Число - оборот по кредиту счета;
//     * СКД - Число - сальдо конечное по дебету счета.
//
Функция ИтогиСчетовУчетаАвансовПоВидамАктива(ПараметрыИтогов) Экспорт
	
	Организация = ПараметрыИтогов.Организация;
	НачалоПериода = ПараметрыИтогов.НачалоПериода;
	КонецПериода = ПараметрыИтогов.КонецПериода;
	СчетаУчетаАвансов = ПараметрыИтогов.СчетаУчетаАвансов;
	СчетаУчетаНДСАвансов = ПараметрыИтогов.СчетаУчетаНДСАвансов;
	РазделятьАвансыПоВидамАктивов = ПараметрыИтогов.РазделятьАвансыПоВидамАктивов;
	
	ТерминальныеСчета = Новый ТаблицаЗначений;
	ТерминальныеСчета.Колонки.Добавить("ГоловнойСчет", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТерминальныеСчета.Колонки.Добавить("СчетУчета", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТерминальныеСчета.Колонки.Добавить("ВидАктива", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыАктивовДляАвансов"));
	
	ВсеВидыАктивов = Новый Массив;
	ВсеВидыАктивов.Добавить(Перечисления.ВидыАктивовДляАвансов.ПустаяСсылка());
	Для Каждого МетаданныеПеречисления Из Метаданные.Перечисления.ВидыАктивовДляАвансов.ЗначенияПеречисления Цикл
		ВсеВидыАктивов.Добавить(Перечисления.ВидыАктивовДляАвансов[МетаданныеПеречисления.Имя]);
	КонецЦикла;
	
	ВсеСчета = Новый Массив;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВсеСчета, СчетаУчетаАвансов);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВсеСчета, СчетаУчетаНДСАвансов);
	
	Для Каждого Счет Из ВсеСчета Цикл
		СчетаВИерархии = БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет);
		Для Каждого СчетВИерархии Из СчетаВИерархии Цикл
			Для Каждого ВидАктива Из ВсеВидыАктивов Цикл
				НоваяЗаписьСчета = ТерминальныеСчета.Добавить();
				НоваяЗаписьСчета.ГоловнойСчет = Счет;
				НоваяЗаписьСчета.СчетУчета = СчетВИерархии;
				НоваяЗаписьСчета.ВидАктива = ВидАктива;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Матрикс.ГоловнойСчет КАК ГоловнойСчет,
		|	Матрикс.СчетУчета КАК СчетУчета,
		|	Матрикс.ВидАктива КАК ВидАктива
		|ПОМЕСТИТЬ ВТ_Матрикс
		|ИЗ
		|	&Матрикс КАК Матрикс
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ДоговорыКонтрагентов.Владелец КАК Справочник.Контрагенты) КАК Контрагент,
		|	ВЫРАЗИТЬ(ДоговорыКонтрагентов.Ссылка КАК Справочник.ДоговорыКонтрагентов) КАК Договор
		|ПОМЕСТИТЬ ВТ_ДоговорыПоВидамАктивов
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.ВидАктива В (&ИсключаемыеВидыАктиваАвансов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Документ.ДокументРасчетовСКонтрагентом.ПустаяСсылка) КАК СФПолученный,
		|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
		|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор
		|ПОМЕСТИТЬ ВТ_ВсеСФПолученные
		|ГДЕ
		|	ЛОЖЬ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеСФПолученные.СФПолученный КАК СФПолученный,
		|	ВТ_ДоговорыПоВидамАктивов.Договор.ВидАктива КАК ВидАктива
		|ПОМЕСТИТЬ ВТ_СФПолученныеПоВидуАктивов
		|ИЗ
		|	ВТ_ВсеСФПолученные КАК ВТ_ВсеСФПолученные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДоговорыПоВидамАктивов КАК ВТ_ДоговорыПоВидамАктивов
		|		ПО (ВТ_ДоговорыПоВидамАктивов.Контрагент = ВТ_ВсеСФПолученные.Контрагент)
		|		И (ВТ_ДоговорыПоВидамАктивов.Договор = ВТ_ВсеСФПолученные.Договор)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СФПолученный
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеПоВсемСчетам.СчетУчета КАК СчетУчета,
		|	ДанныеПоВсемСчетам.ВидАктива КАК ВидАктива,
		|	ДанныеПоВсемСчетам.СНД КАК СНД,
		|	ДанныеПоВсемСчетам.ДО КАК ДО,
		|	ДанныеПоВсемСчетам.КО КАК КО,
		|	ДанныеПоВсемСчетам.СКД КАК СКД,
		|	ДанныеПоВсемСчетам.СНК,
		|	ДанныеПоВсемСчетам.СКК
		|ПОМЕСТИТЬ ВТ_Сальдо
		|ИЗ
		|	(ВЫБРАТЬ
		|		ХозрасчетныйОстаткиИОбороты.Счет КАК СчетУчета,
		|		ВЫБОР
		|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.ДоговорыКонтрагентов).ВидАктива ЕСТЬ NULL
		|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляАвансов.ПустаяСсылка)
		|			ИНАЧЕ ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.ДоговорыКонтрагентов).ВидАктива
		|		КОНЕЦ КАК ВидАктива,
		|		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СНД,
		|		ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
		|		ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
		|		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СКД,
		|		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт КАК СНК,
		|		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СКК
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В
		|		(&СчетаУчетаАвансов), &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|	ГДЕ
		|		&РазделятьАвансыПоВидамАктивов
		|	СГРУППИРОВАТЬ ПО
		|		ВЫБОР
		|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.ДоговорыКонтрагентов).ВидАктива ЕСТЬ NULL
		|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляАвансов.ПустаяСсылка)
		|			ИНАЧЕ ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.ДоговорыКонтрагентов).ВидАктива
		|		КОНЕЦ,
		|		ХозрасчетныйОстаткиИОбороты.Счет,
		|		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаОборотКт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		ХозрасчетныйОстаткиИОбороты.Счет,
		|		ВЫБОР
		|			КОГДА ВТ_СФПолученныеПоВидуАктивов.ВидАктива ЕСТЬ NULL
		|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляАвансов.ПустаяСсылка)
		|			ИНАЧЕ ВТ_СФПолученныеПоВидуАктивов.ВидАктива
		|		КОНЕЦ,
		|		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаОборотКт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В
		|		(&СчетаУчетаНДСАвансов), &ВидыСубконтоСФПолученные, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СФПолученныеПоВидуАктивов КАК ВТ_СФПолученныеПоВидуАктивов
		|			ПО ХозрасчетныйОстаткиИОбороты.Субконто1 = ВТ_СФПолученныеПоВидуАктивов.СФПолученный) КАК ДанныеПоВсемСчетам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Матрикс.ГоловнойСчет КАК Счет,
		|	ВТ_Матрикс.ВидАктива КАК ВидАктива,
		|	СУММА(ЕСТЬNULL(ВТ_Сальдо.СНД, 0)) КАК СНД,
		|	СУММА(ЕСТЬNULL(ВТ_Сальдо.ДО, 0)) КАК ДО,
		|	СУММА(ЕСТЬNULL(ВТ_Сальдо.КО, 0)) КАК КО,
		|	СУММА(ЕСТЬNULL(ВТ_Сальдо.СКД, 0)) КАК СКД,
		|	СУММА(ЕСТЬNULL(ВТ_Сальдо.СНК, 0)) КАК СНК,
		|	СУММА(ЕСТЬNULL(ВТ_Сальдо.СКК, 0)) КАК СКК
		|ИЗ
		|	ВТ_Матрикс КАК ВТ_Матрикс
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сальдо КАК ВТ_Сальдо
		|		ПО ВТ_Матрикс.СчетУчета = ВТ_Сальдо.СчетУчета
		|		И ВТ_Матрикс.ВидАктива = ВТ_Сальдо.ВидАктива
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Матрикс.ГоловнойСчет,
		|	ВТ_Матрикс.ВидАктива";
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Матрикс", ТерминальныеСчета);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода", КонецПериода);

	Запрос.УстановитьПараметр("СчетаУчетаАвансов", ЗаполнениеБухгалтерскойОтчетности.ТерминальныеСчетаВИерархииИзСписка(СчетаУчетаАвансов));
	Запрос.УстановитьПараметр("СчетаУчетаНДСАвансов", ЗаполнениеБухгалтерскойОтчетности.ТерминальныеСчетаВИерархииИзСписка(СчетаУчетаНДСАвансов));
	
	Запрос.УстановитьПараметр("ВидыСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	Запрос.УстановитьПараметр("ВидыСубконтоСФПолученные", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СФПолученные);
	Запрос.УстановитьПараметр("РазделятьАвансыПоВидамАктивов", РазделятьАвансыПоВидамАктивов);
	
	// Параметры заполнения временной таблицы с основаниями счетов-фактур полученных.
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("СчетаПоНДСАвансов", ЗаполнениеБухгалтерскойОтчетности.ТерминальныеСчетаВИерархииИзСписка(СчетаУчетаАвансов));
	Запрос.УстановитьПараметр("СчетаНДСАвансовПоВидуАктива", ЗаполнениеБухгалтерскойОтчетности.ТерминальныеСчетаВИерархииИзСписка(СчетаУчетаНДСАвансов));
	
	СубконтоКонтрагентыСФПолученные = Новый Массив;
	СубконтоКонтрагентыСФПолученные.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	СубконтоКонтрагентыСФПолученные.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СФПолученные);
	Запрос.УстановитьПараметр("СубконтоКонтрагентыСФПолученные", СубконтоКонтрагентыСФПолученные);
	
	ИсключаемыеВидыАктиваАвансов = Новый Массив;
	ИсключаемыеВидыАктиваАвансов.Добавить(Перечисления.ВидыАктивовДляАвансов.ОсновныеСредства);
	ИсключаемыеВидыАктиваАвансов.Добавить(Перечисления.ВидыАктивовДляАвансов.Запасы);
	ИсключаемыеВидыАктиваАвансов.Добавить(Перечисления.ВидыАктивовДляАвансов.ПрочиеОборотные);
	Запрос.УстановитьПараметр("ИсключаемыеВидыАктиваАвансов", ИсключаемыеВидыАктиваАвансов);
	
	ЗаполнениеБухгалтерскойОтчетностиПояснения.УстановитьПолныйТекстЗапроса(Запрос, ТекстЗапроса, "СФПолученные");
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Возвращает неинициализированные параметры расчета бухгалтерских итогов по счетам расходов будущих периодов.
//
// Возвращаемое значение:
//   Структура - параметры, по которым будет производиться расчет:
//     * Организация - СправочникСсылка.Организации;
//     * НачалоПериода - Дата, МоментВремениСУточнениемПериода;
//     * КонецПериода - Дата, МоментВремениСУточнениемПериода;
//     * СчетаУчетаРБП - Массив - головные счета, по которым будет произведен расчет.
//
Функция НовыеПараметрыСчетовУчетаРБППоВидамАктива() Экспорт
	
	ПараметрыИтогов = Новый Структура;
	ПараметрыИтогов.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	ПараметрыИтогов.Вставить("НачалоПериода", '0001-01-01');
	ПараметрыИтогов.Вставить("КонецПериода", '0001-01-01');
	ПараметрыИтогов.Вставить("СчетаУчетаРБП", Новый Массив);
	
	Возврат ПараметрыИтогов;
	
КонецФункции

// Возвращает таблицу значений с бухгалтерскими итогами по счетам учета авансов в разрезе вида актива баланса.
//
// Параметры:
//   ПараметрыИтогов - см. НовыеПараметрыСчетовУчетаАвансовПоВидамАктива
//
// Возвращаемое значение:
//   ТаблицаЗначений:
//     * Счет - ПланСчетовСсылка.Хозрасчетный;
//     * ВидАктива - Перечисление.ВидыАктивовДляАвансов;
//     * СНД - Число - сальдо начальное по дебету счета;
//     * ДО - Число - оборот по дебету счета;
//     * КО - Число - оборот по кредиту счета;
//     * СКД - Число - сальдо конечное по дебету счета.
//
Функция ИтогиСчетовУчетаРБППоВидамАктива(ПараметрыИтогов) Экспорт
	
	Организация = ПараметрыИтогов.Организация;
	НачалоПериода = ПараметрыИтогов.НачалоПериода;
	КонецПериода = ПараметрыИтогов.КонецПериода;
	СчетаУчетаРБП = ПараметрыИтогов.СчетаУчетаРБП;
	
	ТерминальныеСчета = Новый ТаблицаЗначений;
	ТерминальныеСчета.Колонки.Добавить("ГоловнойСчет", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТерминальныеСчета.Колонки.Добавить("СчетУчета", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТерминальныеСчета.Колонки.Добавить("ВидАктива", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыАктивовДляРБП"));
	
	ВсеВидыАктивов = Новый Массив;
	ВсеВидыАктивов.Добавить(Перечисления.ВидыАктивовДляРБП.ПустаяСсылка());
	Для Каждого МетаданныеПеречисления Из Метаданные.Перечисления.ВидыАктивовДляРБП.ЗначенияПеречисления Цикл
		ВсеВидыАктивов.Добавить(Перечисления.ВидыАктивовДляРБП[МетаданныеПеречисления.Имя]);
	КонецЦикла;
	
	Для Каждого Счет Из СчетаУчетаРБП Цикл
		СчетаВИерархии = БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет);
		Для Каждого СчетВИерархии Из СчетаВИерархии Цикл
			Для Каждого ВидАктива Из ВсеВидыАктивов Цикл
				НоваяЗаписьСчета = ТерминальныеСчета.Добавить();
				НоваяЗаписьСчета.ГоловнойСчет = Счет;
				НоваяЗаписьСчета.СчетУчета = СчетВИерархии;
				НоваяЗаписьСчета.ВидАктива = ВидАктива;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Матрикс.ГоловнойСчет КАК ГоловнойСчет,
		|	Матрикс.СчетУчета КАК СчетУчета,
		|	Матрикс.ВидАктива КАК ВидАктива
		|ПОМЕСТИТЬ ВТ_Матрикс
		|ИЗ
		|	&Матрикс КАК Матрикс
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Счет КАК СчетУчета,
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).ВидАктива ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ПустаяСсылка)
		|		ИНАЧЕ ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).ВидАктива
		|	КОНЕЦ КАК ВидАктива,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СНД,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СКД
		|ПОМЕСТИТЬ ВТ_Сальдо
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&СчетаУчетаРБП), &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).ВидАктива ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ПустаяСсылка)
		|		ИНАЧЕ ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.РасходыБудущихПериодов).ВидАктива
		|	КОНЕЦ,
		|	ХозрасчетныйОстаткиИОбороты.Счет,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Матрикс.ГоловнойСчет КАК Счет,
		|	ВТ_Матрикс.ВидАктива КАК ВидАктива,
		|	СУММА(ЕСТЬNULL(ВТ_Сальдо.СНД, 0)) КАК СНД,
		|	СУММА(ЕСТЬNULL(ВТ_Сальдо.ДО, 0)) КАК ДО,
		|	СУММА(ЕСТЬNULL(ВТ_Сальдо.КО, 0)) КАК КО,
		|	СУММА(ЕСТЬNULL(ВТ_Сальдо.СКД, 0)) КАК СКД
		|ИЗ
		|	ВТ_Матрикс КАК ВТ_Матрикс
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сальдо КАК ВТ_Сальдо
		|		ПО ВТ_Матрикс.СчетУчета = ВТ_Сальдо.СчетУчета
		|			И ВТ_Матрикс.ВидАктива = ВТ_Сальдо.ВидАктива
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Матрикс.ГоловнойСчет,
		|	ВТ_Матрикс.ВидАктива";
	
	Запрос.УстановитьПараметр("Матрикс", ТерминальныеСчета);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода", КонецПериода);
	Запрос.УстановитьПараметр("СчетаУчетаРБП", ТерминальныеСчета.ВыгрузитьКолонку("СчетУчета"));
	Запрос.УстановитьПараметр("ВидыСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция РазделенноеСальдоСчета_76ВА(НачалоПериода, КонецПериода, РазделятьАвансыПоВидамАктивов, Организация) Экспорт
	
	СтруктураСальдо = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Параметры заполнения временной таблицы с основаниями счетов-фактур полученных.
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("СчетаПоНДСАвансов", Новый Массив);
	Запрос.УстановитьПараметр("СчетаНДСАвансовПоВидуАктива", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("76.ВА")));
	
	СубконтоКонтрагентыСФПолученные = Новый Массив;
	СубконтоКонтрагентыСФПолученные.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	СубконтоКонтрагентыСФПолученные.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СФПолученные);
	Запрос.УстановитьПараметр("СубконтоКонтрагентыСФПолученные", СубконтоКонтрагентыСФПолученные);
	
	ИсключаемыеВидыАктиваАвансов = Новый Массив;
	ИсключаемыеВидыАктиваАвансов.Добавить(Перечисления.ВидыАктивовДляАвансов.ОсновныеСредства);
	ИсключаемыеВидыАктиваАвансов.Добавить(Перечисления.ВидыАктивовДляАвансов.Запасы);
	ИсключаемыеВидыАктиваАвансов.Добавить(Перечисления.ВидыАктивовДляАвансов.ПрочиеОборотные);
	Запрос.УстановитьПараметр("ИсключаемыеВидыАктиваАвансов", ИсключаемыеВидыАктиваАвансов);
	
	ИсходныйТекстЗапроса =
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ДоговорыКонтрагентов.Владелец КАК Справочник.Контрагенты) КАК Контрагент,
		|	ВЫРАЗИТЬ(ДоговорыКонтрагентов.Ссылка КАК Справочник.ДоговорыКонтрагентов) КАК Договор
		|ПОМЕСТИТЬ ВТ_ДоговорыПоВидамАктивов
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.ВидАктива В(&ИсключаемыеВидыАктиваАвансов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(документ.ДокументРасчетовСКонтрагентом.ПустаяСсылка) КАК СФПолученный,
		|	ЗНАЧЕНИЕ(справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
		|	ЗНАЧЕНИЕ(справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор
		|ПОМЕСТИТЬ ВТ_ВсеСФПолученные
		|ГДЕ
		|	ЛОЖЬ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеСФПолученные.СФПолученный КАК СФПолученный,
		|	ВТ_ДоговорыПоВидамАктивов.Договор.ВидАктива КАК ВидАктива
		|ПОМЕСТИТЬ ВТ_СФПолученныеПоВидуАктивов
		|ИЗ
		|	ВТ_ВсеСФПолученные КАК ВТ_ВсеСФПолученные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДоговорыПоВидамАктивов КАК ВТ_ДоговорыПоВидамАктивов
		|		ПО (ВТ_ДоговорыПоВидамАктивов.Контрагент = ВТ_ВсеСФПолученные.Контрагент)
		|			И (ВТ_ДоговорыПоВидамАктивов.Договор = ВТ_ВсеСФПолученные.Договор)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СФПолученный
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ВТ_СФПолученныеПоВидуАктивов.ВидАктива ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляАвансов.ПустаяСсылка)
		|		ИНАЧЕ ВТ_СФПолученныеПоВидуАктивов.ВидАктива
		|	КОНЕЦ КАК ВидАктива,
		|	СУММА(ХозрасчетныйОстатки.СуммаОстатокКт) КАК СуммаКонечныйОстатокКт
		|ПОМЕСТИТЬ ВТ_Сальдо
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонПериода, Счет В (&Счет76ВА), &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СФПолученныеПоВидуАктивов КАК ВТ_СФПолученныеПоВидуАктивов
		|		ПО ХозрасчетныйОстатки.Субконто1 = ВТ_СФПолученныеПоВидуАктивов.СФПолученный
		|ГДЕ
		|	&РазделятьАвансыПоВидамАктивов
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА ВТ_СФПолученныеПоВидуАктивов.ВидАктива ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляАвансов.ПустаяСсылка)
		|		ИНАЧЕ ВТ_СФПолученныеПоВидуАктивов.ВидАктива
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВидыАктивовДляАвансов.Ссылка КАК ВидАктива,
		|	ЕСТЬNULL(ВТ_Сальдо.СуммаКонечныйОстатокКт, 0) КАК СуммаКонечныйОстатокКт
		|ИЗ
		|	Перечисление.ВидыАктивовДляАвансов КАК ВидыАктивовДляАвансов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сальдо КАК ВТ_Сальдо
		|		ПО (ВТ_Сальдо.ВидАктива = ВидыАктивовДляАвансов.Ссылка)";
	
	ЗаполнениеБухгалтерскойОтчетностиПояснения.УстановитьПолныйТекстЗапроса(Запрос, ИсходныйТекстЗапроса, "СФПолученные");
	
	Запрос.УстановитьПараметр("КонПериода", Новый Граница(КонецПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ВидыСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СФПолученные);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Счет76ВА", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("76.ВА")));
	Запрос.УстановитьПараметр("РазделятьАвансыПоВидамАктивов", РазделятьАвансыПоВидамАктивов);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Выборка.Следующий() Цикл
		СтруктураСальдо.Вставить(Выборка.ВидАктива, Выборка.СуммаКонечныйОстатокКт);
	КонецЦикла;
	
	Возврат СтруктураСальдо;
	
КонецФункции

Функция ДанныеСчетаПоВидуАктиваРБП(Счет, ВидАктиваРБП, Организация, ДатаНачалаПериодаОтчета, ДатаКонцаПериодаОтчета) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СНД,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт) КАК СКД
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
	               |			&НачПериода,
	               |			&КонПериода,
	               |			Период,
	               |			Движения,
	               |			Счет В (&СчетаРБП),
	               |			&ВидСубконтоРБП,
	               |			Организация = &Организация
	               |				И Субконто1.ВидАктива = &ВидАктива) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт";
	
	Запрос.УстановитьПараметр("НачПериода",     ДатаНачалаПериодаОтчета);
	Запрос.УстановитьПараметр("КонПериода",     ДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("ВидСубконтоРБП", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
	Запрос.УстановитьПараметр("ВидАктива",      ВидАктиваРБП);
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("СчетаРБП",       БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Результат = Новый Структура;
	Результат.Вставить("СНД", 0);
	Результат.Вставить("ДО",  0);
	Результат.Вставить("КО",  0);
	Результат.Вставить("СКД", 0);
	
	Если Выборка.Следующий() Тогда
		Результат.СНД = Выборка.СНД;
		Результат.ДО  = Выборка.ДО;
		Результат.КО  = Выборка.КО;
		Результат.СКД = Выборка.СКД;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ОборотыСчета99_01ПоАналитике(ПараметрыИтогов) Экспорт
	
	Организация   = ПараметрыИтогов.Организация;
	НачалоПериода = ПараметрыИтогов.НачалоПериода;
	КонецПериода  = ПараметрыИтогов.КонецПериода;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПрибылиИУбытки.Ссылка КАК ВидПрибылиИУбытка
	               |ПОМЕСТИТЬ ВТ_ВидыПрибылейИУбытков
	               |ИЗ
	               |	Перечисление.ПрибылиИУбытки КАК ПрибылиИУбытки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОбороты.Субконто1 КАК ВидПрибылиУбытка,
	               |	ХозрасчетныйОбороты.СуммаОборотДт КАК ДО,
	               |	ХозрасчетныйОбороты.СуммаОборотКт КАК КО
	               |ПОМЕСТИТЬ ВТ_Обороты
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, Период, Счет В (&Счета), &ВидСубконто, Организация = &Организация, , ) КАК ХозрасчетныйОбороты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВидыПрибылейИУбытков.ВидПрибылиИУбытка КАК ВидПрибылиИУбытка,
	               |	ЕСТЬNULL(ВТ_Обороты.ДО, 0) КАК ДО,
	               |	ЕСТЬNULL(ВТ_Обороты.КО, 0) КАК КО
	               |ИЗ
	               |	ВТ_ВидыПрибылейИУбытков КАК ВТ_ВидыПрибылейИУбытков
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Обороты КАК ВТ_Обороты
	               |		ПО ВТ_ВидыПрибылейИУбытков.ВидПрибылиИУбытка = ВТ_Обороты.ВидПрибылиУбытка";
	
	Запрос.УстановитьПараметр("НачПериода",  НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода",  КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Счета",       БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("99.01")));
	Запрос.УстановитьПараметр("ВидСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрибылиИУбытки);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтруктураОборотов = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		СтруктураОборотов.Вставить(Выборка.ВидПрибылиИУбытка , Новый Структура("ДО, КО", Выборка.ДО, Выборка.КО));
	КонецЦикла;
	
	Возврат СтруктураОборотов;
	
КонецФункции

Функция Обороты91ПоВПДР(ПараметрыИтогов) Экспорт
	
	Организация   = ПараметрыИтогов.Организация;
	НачалоПериода = ПараметрыИтогов.НачалоПериода;
	КонецПериода  = ПараметрыИтогов.КонецПериода;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВидыПрочихДоходовИРасходов.Ссылка КАК ВПДР
	               |ПОМЕСТИТЬ ВТ_ВПДР
	               |ИЗ
	               |	Перечисление.ВидыПрочихДоходовИРасходов КАК ВидыПрочихДоходовИРасходов
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ВПДР
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъединениеДанных.ВПДР КАК ВПДР,
	               |	СУММА(ОбъединениеДанных.КО_91_01) КАК КО_91_01,
	               |	СУММА(ОбъединениеДанных.ДО_91_02) КАК ДО_91_02,
	               |	СУММА(ОбъединениеДанных.ДО_91_02__68_02) КАК ДО_91_02__68_02,
	               |	СУММА(ОбъединениеДанных.ДО_91_02__76_ОТ) КАК ДО_91_02__76_ОТ
	               |ПОМЕСТИТЬ ВТ_ОборотыПоСчетам
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВЫБОР
	               |			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов ЕСТЬ NULL
	               |					ИЛИ ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПустаяСсылка)
	               |				ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы)
	               |			ИНАЧЕ ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов
	               |		КОНЕЦ КАК ВПДР,
	               |		ХозрасчетныйОбороты.СуммаОборотКт КАК КО_91_01,
	               |		0 КАК ДО_91_02,
	               |		0 КАК ДО_91_02__68_02,
	               |		0 КАК ДО_91_02__76_ОТ
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, Период, Счет В (&Счет91_01), &СубконтроПрочихДоходовИРасходов, Организация = &Организация, , ) КАК ХозрасчетныйОбороты
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВЫБОР
	               |			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов ЕСТЬ NULL
	               |					ИЛИ ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПустаяСсылка)
	               |				ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы)
	               |			ИНАЧЕ ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов
	               |		КОНЕЦ,
	               |		0,
	               |		ХозрасчетныйОбороты.СуммаОборотДт,
	               |		0,
	               |		0
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, Период, Счет В (&Счет91_02), &СубконтроПрочихДоходовИРасходов, Организация = &Организация, , ) КАК ХозрасчетныйОбороты
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВЫБОР
	               |			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов ЕСТЬ NULL
	               |					ИЛИ ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПустаяСсылка)
	               |				ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы)
	               |			ИНАЧЕ ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов
	               |		КОНЕЦ,
	               |		0,
	               |		0,
	               |		ХозрасчетныйОбороты.СуммаОборотДт,
	               |		0
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, Период, Счет В (&Счет91_02), &СубконтроПрочихДоходовИРасходов, Организация = &Организация, КорСчет В (&Счет68_02), ) КАК ХозрасчетныйОбороты
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВЫБОР
	               |			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов ЕСТЬ NULL
	               |					ИЛИ ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПустаяСсылка)
	               |				ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы)
	               |			ИНАЧЕ ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов
	               |		КОНЕЦ,
	               |		0,
	               |		0,
	               |		0,
	               |		ХозрасчетныйОбороты.СуммаОборотДт
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, Период, Счет В (&Счет91_02), &СубконтроПрочихДоходовИРасходов, Организация = &Организация, КорСчет В (&Счет76_ОТ), ) КАК ХозрасчетныйОбороты) КАК ОбъединениеДанных
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъединениеДанных.ВПДР
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ВПДР
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВПДР.ВПДР КАК ВПДР,
	               |	ЕСТЬNULL(ВТ_ОборотыПоСчетам.КО_91_01, 0) КАК КО_91_01,
	               |	ЕСТЬNULL(ВТ_ОборотыПоСчетам.ДО_91_02, 0) КАК ДО_91_02,
	               |	ЕСТЬNULL(ВТ_ОборотыПоСчетам.ДО_91_02__68_02, 0) КАК ДО_91_02__68_02,
	               |	ЕСТЬNULL(ВТ_ОборотыПоСчетам.ДО_91_02__76_ОТ, 0) КАК ДО_91_02__76_ОТ
	               |ИЗ
	               |	ВТ_ВПДР КАК ВТ_ВПДР
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОборотыПоСчетам КАК ВТ_ОборотыПоСчетам
	               |		ПО ВТ_ВПДР.ВПДР = ВТ_ОборотыПоСчетам.ВПДР";
	
	Запрос.УстановитьПараметр("НачПериода",  НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода",  КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Счет91_01",   БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("91.01")));
	Запрос.УстановитьПараметр("Счет91_02",   БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("91.02")));
	Запрос.УстановитьПараметр("Счет68_02",   БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("68.02")));
	Запрос.УстановитьПараметр("Счет76_ОТ",   БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("76.ОТ")));
	Запрос.УстановитьПараметр("СубконтроПрочихДоходовИРасходов", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	
	КО_91_01_ВПДР = Новый Структура;
	ДО_91_02_ВПДР = Новый Структура;
	ДО_91_02__68_02_ВПДР = Новый Структура;
	ДО_91_02__76_ОТ_ВПДР = Новый Структура;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ИмяВидаПДР = ОбщегоНазначения.ИмяЗначенияПеречисления(Выборка.ВПДР);
		КО_91_01_ВПДР.Вставить(ИмяВидаПДР, Выборка.КО_91_01);
		ДО_91_02_ВПДР.Вставить(ИмяВидаПДР, Выборка.ДО_91_02);
		ДО_91_02__68_02_ВПДР.Вставить(ИмяВидаПДР, Выборка.ДО_91_02__68_02);
		ДО_91_02__76_ОТ_ВПДР.Вставить(ИмяВидаПДР, Выборка.ДО_91_02__76_ОТ);
	КонецЦикла;
	
	Результат = Новый Структура;
	Результат.Вставить("КО_91_01_ВПДР", КО_91_01_ВПДР);
	Результат.Вставить("ДО_91_02_ВПДР", ДО_91_02_ВПДР);
	Результат.Вставить("ДО_91_02__68_02_ВПДР", ДО_91_02__68_02_ВПДР);
	Результат.Вставить("ДО_91_02__76_ОТ_ВПДР", ДО_91_02__76_ОТ_ВПДР);
	
	Возврат Результат;
	
КонецФункции

Функция Обороты91ПоКурсовымРазницамВУЕ(ПараметрыИтогов) Экспорт
	
	Организация   = ПараметрыИтогов.Организация;
	НачалоПериода = ПараметрыИтогов.НачалоПериода;
	КонецПериода  = ПараметрыИтогов.КонецПериода;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОбороты.Счет КАК Счет,
	               |	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК ДО,
	               |	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК КО
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, , Счет В (&Счета), &ВидСубконтоПрочиеДоходыИРасходы, Организация = &Организация, КорСчет В (&КорреспондирующиеСчета), &ВидСубконтоКонтрагентыДоговоры) КАК ХозрасчетныйОбороты
	               |ГДЕ
	               |	ВЫРАЗИТЬ(ХозрасчетныйОбороты.КорСубконто2 КАК Справочник.ДоговорыКонтрагентов).РасчетыВУсловныхЕдиницах
	               |	И ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.КурсовыеРазницы)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ХозрасчетныйОбороты.Счет";
	
	Счета = Новый Массив();
	Счета.Добавить(Счет("91.01"));
	Счета.Добавить(Счет("91.02"));
	Счета = БухгалтерскийУчет.СформироватьМассивСубсчетов(Счета);
	
	КорреспондирующиеСчета = Новый Массив;
	КорреспондирующиеСчета.Добавить(Счет("60.01"));
	КорреспондирующиеСчета.Добавить(Счет("60.01"));
	КорреспондирующиеСчета.Добавить(Счет("60.02"));
	КорреспондирующиеСчета.Добавить(Счет("60.21"));
	КорреспондирующиеСчета.Добавить(Счет("60.22"));
	КорреспондирующиеСчета.Добавить(Счет("60.31"));
	КорреспондирующиеСчета.Добавить(Счет("60.32"));
	КорреспондирующиеСчета.Добавить(Счет("62.01"));
	КорреспондирующиеСчета.Добавить(Счет("62.02"));
	КорреспондирующиеСчета.Добавить(Счет("62.21"));
	КорреспондирующиеСчета.Добавить(Счет("62.22"));
	КорреспондирующиеСчета.Добавить(Счет("62.31"));
	КорреспондирующиеСчета.Добавить(Счет("62.32"));
	КорреспондирующиеСчета.Добавить(Счет("62.ОТ"));
	КорреспондирующиеСчета.Добавить(Счет("63"));
	КорреспондирующиеСчета.Добавить(Счет("68.32"));
	КорреспондирующиеСчета.Добавить(Счет("76.02"));
	КорреспондирующиеСчета.Добавить(Счет("76.05"));
	КорреспондирующиеСчета.Добавить(Счет("76.06"));
	КорреспондирующиеСчета.Добавить(Счет("76.07.2"));
	КорреспондирующиеСчета.Добавить(Счет("76.09"));
	КорреспондирующиеСчета.Добавить(Счет("76.22"));
	КорреспондирующиеСчета.Добавить(Счет("76.25"));
	КорреспондирующиеСчета.Добавить(Счет("76.26"));
	КорреспондирующиеСчета.Добавить(Счет("76.27.2"));
	КорреспондирующиеСчета.Добавить(Счет("76.29"));
	КорреспондирующиеСчета.Добавить(Счет("76.32"));
	КорреспондирующиеСчета.Добавить(Счет("76.35"));
	КорреспондирующиеСчета.Добавить(Счет("76.36"));
	КорреспондирующиеСчета.Добавить(Счет("76.37.2"));
	КорреспондирующиеСчета.Добавить(Счет("76.39"));
	КорреспондирующиеСчета.Добавить(Счет("76.К"));
	КорреспондирующиеСчета = БухгалтерскийУчет.СформироватьМассивСубсчетов(КорреспондирующиеСчета);
	
	ВидСубконтоКонтрагентыДоговоры = Новый Массив;
	ВидСубконтоКонтрагентыДоговоры.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ВидСубконтоКонтрагентыДоговоры.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	ВидСубконтоПрочиеДоходыИРасходы = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы;
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
	Запрос.УстановитьПараметр("Организация",   Организация);
	
	Запрос.УстановитьПараметр("Счета", Счета);
	Запрос.УстановитьПараметр("КорреспондирующиеСчета", КорреспондирующиеСчета);
	
	Запрос.УстановитьПараметр("ВидСубконтоПрочиеДоходыИРасходы", ВидСубконтоПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("ВидСубконтоКонтрагентыДоговоры",  ВидСубконтоКонтрагентыДоговоры);
	
	КО_91_01__ВУЕ = 0;
	ДО_91_02__ВУЕ = 0;
	
	Счет_91_01 = БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("91.01"));
	Счет_91_02 = БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("91.02"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Счет_91_01.Найти(Выборка.Счет) <> Неопределено Тогда
			КО_91_01__ВУЕ = КО_91_01__ВУЕ + Выборка.КО;
		ИначеЕсли Счет_91_02.Найти(Выборка.Счет) <> Неопределено Тогда
			ДО_91_02__ВУЕ = ДО_91_02__ВУЕ + Выборка.ДО;
		КонецЕсли;
	КонецЦикла;
	
	Результат = Новый Структура;
	Результат.Вставить("КО_91_01__ВУЕ", КО_91_01__ВУЕ);
	Результат.Вставить("ДО_91_02__ВУЕ", ДО_91_02__ВУЕ);
	
	Возврат Результат;
	
КонецФункции

Функция Обороты91ПоПереоценкеВнеоборотныхАктивов(ПараметрыИтогов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Хозрасчетный.Ссылка КАК Счет,
	               |	Хозрасчетный.Ссылка КАК Счет2,
	               |	ВЫБОР
	               |		КОГДА НЕ Хозрасчетный.Родитель.Родитель.Ссылка ЕСТЬ NULL 
	               |			ТОГДА Хозрасчетный.Родитель.Ссылка
	               |		ИНАЧЕ Хозрасчетный.Ссылка
	               |	КОНЕЦ КАК Счет1,
	               |	ВЫБОР
	               |		КОГДА Хозрасчетный.Родитель.Ссылка ЕСТЬ NULL 
	               |			ТОГДА Хозрасчетный.Ссылка
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА Хозрасчетный.Родитель.Родитель.Ссылка ЕСТЬ NULL 
	               |					ТОГДА Хозрасчетный.Родитель.Ссылка
	               |				ИНАЧЕ Хозрасчетный.Родитель.Родитель.Ссылка
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Счет0
	               |ПОМЕСТИТЬ ВТ_ИерархияСчетов
	               |ИЗ
	               |	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъединениеДанных.Счет КАК Счет,
	               |	ВТ_ИерархияСчетовДт.Счет2 КАК Счет2,
	               |	ВТ_ИерархияСчетовДт.Счет1 КАК Счет1,
	               |	ВТ_ИерархияСчетовДт.Счет0 КАК Счет0,
	               |	ОбъединениеДанных.КорСчет КАК КорСчет,
	               |	ВТ_ИерархияСчетовКт.Счет2 КАК КорСчет2,
	               |	ВТ_ИерархияСчетовКт.Счет1 КАК КорСчет1,
	               |	ВТ_ИерархияСчетовКт.Счет0 КАК КорСчет0,
	               |	СУММА(ОбъединениеДанных.СуммаКорОборотДт) КАК СуммаКорОборотДт
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ХозрасчетныйОборотыДтКт.СчетДт КАК Счет,
	               |		ХозрасчетныйОборотыДтКт.СчетКт КАК КорСчет,
	               |		ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаКорОборотДт
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Период, СчетДт В (&Счет), &ВидСубконто, , , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |	ГДЕ
	               |		ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов = &ЗначениеСубконто
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ХозрасчетныйОборотыДтКт.СчетДт,
	               |		ХозрасчетныйОборотыДтКт.СчетКт,
	               |		ХозрасчетныйОборотыДтКт.СуммаОборот
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Период, , , СчетКт В (&Счет), &ВидСубконто, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |	ГДЕ
	               |		ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов = &ЗначениеСубконто) КАК ОбъединениеДанных
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИерархияСчетов КАК ВТ_ИерархияСчетовДт
	               |		ПО ОбъединениеДанных.Счет = ВТ_ИерархияСчетовДт.Счет
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИерархияСчетов КАК ВТ_ИерархияСчетовКт
	               |		ПО ОбъединениеДанных.КорСчет = ВТ_ИерархияСчетовКт.Счет
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъединениеДанных.Счет,
	               |	ВТ_ИерархияСчетовДт.Счет2,
	               |	ВТ_ИерархияСчетовДт.Счет1,
	               |	ВТ_ИерархияСчетовДт.Счет0,
	               |	ОбъединениеДанных.КорСчет,
	               |	ВТ_ИерархияСчетовКт.Счет2,
	               |	ВТ_ИерархияСчетовКт.Счет1,
	               |	ВТ_ИерархияСчетовКт.Счет0";
	
	Запрос.УстановитьПараметр("Организация",   ПараметрыИтогов.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыИтогов.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыИтогов.КонецПериода);
	
	Запрос.УстановитьПараметр("Счет", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("91")));
	Запрос.УстановитьПараметр("ВидСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("ЗначениеСубконто", Перечисления.ВидыПрочихДоходовИРасходов.ПереоценкаВнеоборотныхАктивов);
	
	ИтоговаяТаблица = Запрос.Выполнить().Выгрузить();
	
	ИтоговаяТаблица.Индексы.Добавить("Счет0, КорСчет0");
	ИтоговаяТаблица.Индексы.Добавить("Счет0, КорСчет1");
	ИтоговаяТаблица.Индексы.Добавить("Счет0, КорСчет2");
	
	ИтоговаяТаблица.Индексы.Добавить("Счет1, КорСчет0");
	ИтоговаяТаблица.Индексы.Добавить("Счет1, КорСчет1");
	ИтоговаяТаблица.Индексы.Добавить("Счет1, КорСчет2");
	
	ИтоговаяТаблица.Индексы.Добавить("Счет2, КорСчет0");
	ИтоговаяТаблица.Индексы.Добавить("Счет2, КорСчет1");
	ИтоговаяТаблица.Индексы.Добавить("Счет2, КорСчет2");
	
	Возврат ИтоговаяТаблица;
	
КонецФункции

Функция ЗасчитанныеНалогиЕНС(Организация, ДатаНачала, ДатаОкончания) Экспорт
	
	ЗасчитанныеНалоги = Новый Структура;
	ЗасчитанныеНалоги.Вставить("НДФЛ", 0);
	ЗасчитанныеНалоги.Вставить("НалогНаПрибыль", 0);
	ЗасчитанныеНалоги.Вставить("СтраховыеВзносы", 0);
	ЗасчитанныеНалоги.Вставить("НалогНаПрибыльСДивидендов", 0);
	ЗасчитанныеНалоги.Вставить("НДФЛСДивидендов", 0);
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ОпределитьЗасчитанныеНалогиЕНС(
		ЗасчитанныеНалоги, Организация, ДатаНачала, ДатаОкончания);
	
	Возврат ЗасчитанныеНалоги;
	
КонецФункции

// Возвращает таблицу значений с бухгалтерскими итогами по счетам учета ОС,
// разделенными по признаку начисления амортизации
//
// Параметры:
//   * Организация - СправочникСсылка.Организации;
//   * КонецПериода - Дата;
//   * СчетаУчетаОС - Массив - головные счета, по которым будет произведен расчет.
//
// Возвращаемое значение:
//   ТаблицаЗначений:
//     * Счет - ПланСчетовСсылка.Хозрасчетный;
//     * СКД_Амортизируемые - Число - сальдо конечное по дебету счета по амортизируемым ОС;
//     * СКД_Неамортизируемые - Число - сальдо конечное по дебету счета по амортизируемым ОС;
//     * СКК_Амортизируемые - Число - сальдо конечное по кредиту счета по неамортизируемым ОС;
//     * СКК_Неамортизируемые - Число - сальдо конечное по кредиту счета по неамортизируемым ОС.
//
Функция РазделенноеСальдоСчетовУчетаОС(Организация, КонецПериода, СчетаУчетаОС) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВТ_ПриведениеСчетов.СчетАлгоритма КАК СчетУчета,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СуммаКонечныйОстатокКт,
		|	ЕСТЬNULL(НачислениеАмортизацииОСБухгалтерскийУчетСрезПоследних.НачислятьАмортизацию, ИСТИНА) КАК НачислятьАмортизацию
		|ПОМЕСТИТЬ ВТ_ОбщиеИтоги
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, , Счет В (&СчетаУчетаОС), &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НачислениеАмортизацииОСБухгалтерскийУчет.СрезПоследних(&КонПериода, Организация = &Организация) КАК НачислениеАмортизацииОСБухгалтерскийУчетСрезПоследних
		|		ПО ХозрасчетныйОстаткиИОбороты.Субконто1 = НачислениеАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПриведениеСчетов КАК ВТ_ПриведениеСчетов
		|		ПО ХозрасчетныйОстаткиИОбороты.Счет = ВТ_ПриведениеСчетов.СчетУчета
		|			И (ВТ_ПриведениеСчетов.СчетАлгоритма В (&СчетаАлгоритма))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка,
		|	0,
		|	0,
		|	ИСТИНА
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	Хозрасчетный.Ссылка В(&СчетаАлгоритма)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ОбщиеИтоги.СчетУчета КАК Счет,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_ОбщиеИтоги.НачислятьАмортизацию
		|				ТОГДА ВТ_ОбщиеИтоги.СуммаКонечныйОстатокДт
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СКД_Амортизируемые,
		|	СУММА(ВЫБОР
		|			КОГДА НЕ ВТ_ОбщиеИтоги.НачислятьАмортизацию
		|				ТОГДА ВТ_ОбщиеИтоги.СуммаКонечныйОстатокДт
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СКД_Неамортизируемые,
		|	СУММА(ВЫБОР
		|			КОГДА ВТ_ОбщиеИтоги.НачислятьАмортизацию
		|				ТОГДА ВТ_ОбщиеИтоги.СуммаКонечныйОстатокКт
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СКК_Амортизируемые,
		|	СУММА(ВЫБОР
		|			КОГДА НЕ ВТ_ОбщиеИтоги.НачислятьАмортизацию
		|				ТОГДА ВТ_ОбщиеИтоги.СуммаКонечныйОстатокКт
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК СКК_Неамортизируемые
		|ИЗ
		|	ВТ_ОбщиеИтоги КАК ВТ_ОбщиеИтоги
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ОбщиеИтоги.СчетУчета";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачПериода", НачалоМесяца(КонецПериода));
	Запрос.УстановитьПараметр("КонПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("ВидыСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	Запрос.УстановитьПараметр("СчетаУчетаОС",
		ЗаполнениеБухгалтерскойОтчетности.ТерминальныеСчетаВИерархииИзСписка(СчетаУчетаОС));
	Запрос.УстановитьПараметр("СчетаАлгоритма",
		ЗаполнениеБухгалтерскойОтчетности.СчетаИзСписка(СчетаУчетаОС));
	
	ДополнитьТекстЗапросаПоВременнымТаблицам(Запрос);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция СальдоПоСчету(Знач Счет, Знач ВидОстатка, СальдоИОбороты)
	
	Если ТипЗнч(Счет) = Тип("Строка") Тогда
		Счет = Счет(Счет); // Приведение к ссылочному типу
	КонецЕсли;
	
	СтрокиПоСчету = СальдоИОбороты.НайтиСтроки(Новый Структура("Счет", Счет));
	
	Сальдо = 0;
	
	Если СтрокиПоСчету.Количество() <> 0 Тогда
		Если СтрокиПоСчету[0].ВидСчета = ВидСчета.Активный И СтрНайти(ВидОстатка, "Развернутый") = 0 Тогда
			ВидОстаткаДополнительный = СтрЗаменить(ВидОстатка, "Дт", "Кт");
			Сальдо = СтрокиПоСчету[0][ВидОстатка] - СтрокиПоСчету[0][ВидОстаткаДополнительный];
		ИначеЕсли СтрокиПоСчету[0].ВидСчета = ВидСчета.Пассивный И СтрНайти(ВидОстатка, "Развернутый") = 0 Тогда
			ВидОстаткаДополнительный = СтрЗаменить(ВидОстатка, "Кт", "Дт");
			Сальдо = СтрокиПоСчету[0][ВидОстатка] - СтрокиПоСчету[0][ВидОстаткаДополнительный];
		Иначе
			Сальдо = СтрокиПоСчету[0][ВидОстатка];
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Сальдо;
	
КонецФункции

Функция ОборотПоСчету(Знач Счет, Знач ВидОстатка, СальдоИОбороты)
	
	Если ТипЗнч(Счет) = Тип("Строка") Тогда
		Счет = Счет(Счет); // Приведение к ссылочному типу
	КонецЕсли;
	
	СтрокиПоСчету = СальдоИОбороты.НайтиСтроки(Новый Структура("Счет", Счет));
	
	Сальдо = 0;
	
	Если СтрокиПоСчету.Количество() <> 0 Тогда
		Сальдо = СтрокиПоСчету[0][ВидОстатка];
	КонецЕсли;
	
	Возврат Сальдо;
	
КонецФункции

#Область ТекстыЗапросовВременныхТаблиц

Процедура ДополнитьТекстЗапросаПоВременнымТаблицам(ИсходныйЗапрос) Экспорт
	
	МассивТекстовЗапроса = Новый Массив;
	
	Если СтрНайти(ИсходныйЗапрос.Текст, "ВТ_ПриведениеСчетов") <> 0 Тогда
		МассивТекстовЗапроса.Добавить(ТекстЗапросаВТ_ПриведениеСчетов());
	КонецЕсли;
	
	Если СтрНайти(ИсходныйЗапрос.Текст, "ВТ_ДокументыМодернизацииОСПереопределяемый") <> 0 Тогда
		МассивТекстовЗапроса.Добавить(
			ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ТекстЗапросаВТ_ДокументыМодернизацииОС());
	КонецЕсли;
	
	МассивТекстовЗапроса.Добавить(ИсходныйЗапрос.Текст);
	
	ИсходныйЗапрос.Текст = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
КонецПроцедуры

// Возвращает дополнение к тексту запроса, позволяющему использовать временную таблицу
// приводящую счета учета к счетам алгоритма, которые могут быть группой счетов.
// Временная таблица ВТ_ПриведениеСчетов с полями СчетУчета и СчетАлгоритма.
// Таблица содержит все возможные варианты группировки и требует фильтрации по полю СчетАлгоритма.
//
Функция ТекстЗапросаВТ_ПриведениеСчетов()
	
	ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Хозрасчетный.Родитель КАК Родитель
		|ПОМЕСТИТЬ ВТ_ВсеРодители
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	Хозрасчетный.Родитель <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Хозрасчетный.Родитель
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Хозрасчетный.Ссылка КАК Счет
		|ПОМЕСТИТЬ ВТ_ТерминальныеСчета
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	НЕ Хозрасчетный.Ссылка В
		|				(ВЫБРАТЬ
		|					ВТ_ВсеРодители.Родитель
		|				ИЗ
		|					ВТ_ВсеРодители КАК ВТ_ВсеРодители)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТерминальныеСчета.Счет КАК СчетАлгоритма,
		|	ВТ_ТерминальныеСчета.Счет КАК СчетУчета
		|ПОМЕСТИТЬ ВТ_ПриведениеСчетов
		|ИЗ
		|	ВТ_ТерминальныеСчета КАК ВТ_ТерминальныеСчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ТерминальныеСчета.Счет.Родитель,
		|	ВТ_ТерминальныеСчета.Счет
		|ИЗ
		|	ВТ_ТерминальныеСчета КАК ВТ_ТерминальныеСчета
		|ГДЕ
		|	ВТ_ТерминальныеСчета.Счет.Родитель <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ТерминальныеСчета.Счет.Родитель.Родитель,
		|	ВТ_ТерминальныеСчета.Счет
		|ИЗ
		|	ВТ_ТерминальныеСчета КАК ВТ_ТерминальныеСчета
		|ГДЕ
		|	ВТ_ТерминальныеСчета.Счет.Родитель.Родитель <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ТерминальныеСчета.Счет.Родитель.Родитель.Родитель,
		|	ВТ_ТерминальныеСчета.Счет
		|ИЗ
		|	ВТ_ТерминальныеСчета КАК ВТ_ТерминальныеСчета
		|ГДЕ
		|	ВТ_ТерминальныеСчета.Счет.Родитель.Родитель.Родитель <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетУчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ВсеРодители
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_ТерминальныеСчета";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти
