#Область СлужебныйПрограммныйИнтерфейс

// Функция-обертка для доступа к служебным методам адресного классификатора из веб-сервиса мобильного приложения
//
// Параметры:
//    ИмяМетода - Строка - имя метода в модуле АдресныйКлассификаторСлужебный
//    ПараметрыМетода - Структура - параметры вызываемого метода
//    СообщениеОбОшибке - Строка - текст с описанием ошибки
//
// Возвращаемое значение:
//    Произвольное - см. описание вызываемого метода
//    Неопределено - если метод не найден
//

Функция ВыполнитьМетодАдресногоКлассификатора(ИмяМетода, ПараметрыМетода, СообщениеОбОшибке) Экспорт
	
	Результат = Неопределено;
	ВерсияМетода = 0;
	
	Если ПараметрыМетода.Свойство("ВерсияМетода") Тогда
		ВерсияМетода = ПараметрыМетода.ВерсияМетода;
	КонецЕсли;
	
	Попытка
		Если ИмяМетода = "УстановитьИдентификаторыАдресов" Тогда
			
			Результат = ПараметрыМетода.Адреса;
			
			АдресныйКлассификаторСлужебный.УстановитьИдентификаторыАдресов(Результат,
				ПараметрыМетода.Источник);
			
		ИначеЕсли ИмяМетода = "ВариантыАвтоподбора" Тогда
			
			Если ВерсияМетода >=1 Тогда
				Результат = АдресныйКлассификаторСлужебный.ВариантыАвтоподбора(ПараметрыМетода.Текст,
					ПараметрыМетода.ДополнительныеПараметры);
			Иначе
				Результат = Новый СписокЗначений;
			КонецЕсли;
			
		ИначеЕсли ИмяМетода = "РаспознатьАдрес" Тогда
			
			Если ВерсияМетода = 0 Тогда
				КолонкаСокращение = ПараметрыМетода.ЧастиАдреса.Колонки.Найти("Сокращение");
				Если КолонкаСокращение <> Неопределено Тогда
					КолонкаСокращение.Имя = "ТипОбъекта";
				КонецЕсли;
			КонецЕсли;
				
			Результат = АдресныйКлассификаторСлужебный.РаспознатьАдрес(ПараметрыМетода.ЧастиАдреса,
				ПараметрыМетода.Представление,
				ПараметрыМетода.ВСтруктуру);
			
		ИначеЕсли ИмяМетода = "АктуальныеАдресныеСведения" Тогда
			
			Результат = АдресныйКлассификаторСлужебный.АктуальныеАдресныеСведения(ПараметрыМетода.СведенияОбАдресномОбъекте);
			
		ИначеЕсли ИмяМетода = "УстановитьМуниципальныеСведения" Тогда
			
			Результат = ПараметрыМетода.Адрес;
			
			Если ВерсияМетода >= 1 Тогда
				АдресныйКлассификаторСлужебный.УстановитьМуниципальныеСведения(Результат,
					ПараметрыМетода.ОКТМО,
					ПараметрыМетода.ИдентификаторАдреса,
					ПараметрыМетода.ЗагруженныеДанные);
			Иначе
				АдресныйКлассификаторСлужебный.УстановитьМуниципальныеСведения(Результат,
					ПараметрыМетода.ОКТМО,
					ПараметрыМетода.ИдентификаторАдреса);
			КонецЕсли;
			
		ИначеЕсли ИмяМетода = "РезультатПроверкиАдресовПоКлассификатору" Тогда
			
			Если ВерсияМетода >= 1 Тогда
				Результат = АдресныйКлассификаторСлужебный.РезультатПроверкиАдресовПоКлассификатору(ПараметрыМетода.Адреса);
			Иначе
				
				Результат = Новый Структура("Данные,Отказ,КраткоеПредставлениеОшибки",
					Неопределено,
					Истина,
					"Для автозаполнения адреса обновите приложение");
			КонецЕсли;
			
		ИначеЕсли ИмяМетода = "АдресныеОбъектыУровня" Тогда
			
			Если ВерсияМетода >= 1 Тогда
				Результат = АдресныйКлассификаторСлужебный.АдресныеОбъектыУровня(ПараметрыМетода.Родитель,
					ПараметрыМетода.Уровень,
					ПараметрыМетода.ТипАдреса,
					ПараметрыМетода.СтрокаПоиска);
			Иначе
				ДанныеАдресныхОбъектов = Новый Структура("Данные, Отказ", Новый СписокЗначений, Ложь);
				ДанныеАдресныхОбъектов.Вставить("ПодробноеПредставлениеОшибки", "Для автозаполнения адреса обновите приложение");
				ДанныеАдресныхОбъектов.Вставить("КраткоеПредставлениеОшибки", "Для автозаполнения адреса обновите приложение");
			КонецЕсли;
			
		ИначеЕсли ИмяМетода = "СписокДомов" Тогда
			
			Если ВерсияМетода >= 1 Тогда
				Результат = АдресныйКлассификаторСлужебный.СписокДомов(ПараметрыМетода.ИдентификаторАдресногоОбъекта,
					ПараметрыМетода.СтрокаПоиска,
					ПараметрыМетода.ПорцияПриПоиске);
			Иначе
				Результат = Неопределено;
			КонецЕсли;
			
		ИначеЕсли ИмяМетода = "СписокЗемельныхУчастков" Тогда
			
			Если ВерсияМетода >= 1 Тогда
				Результат = АдресныйКлассификаторСлужебный.СписокЗемельныхУчастков(ПараметрыМетода.ИдентификаторАдресногоОбъекта,
					ПараметрыМетода.СтрокаПоиска,
					ПараметрыМетода.ПорцияПриПоиске);
			Иначе
				Результат = Неопределено;
			КонецЕсли;
			
		ИначеЕсли ИмяМетода = "АдресаДляИнтерактивногоВыбора" Тогда
			
			Результат = АдресныйКлассификаторСлужебный.АдресаДляИнтерактивногоВыбора(ПараметрыМетода.Родитель,
				ПараметрыМетода.Уровень,
				ПараметрыМетода.ТипАдреса,
				ПараметрыМетода.ДополнительныеПараметры);
			
		ИначеЕсли ИмяМетода = "КодыАдресаИКодыКЛАДР" Тогда
			
			Если ВерсияМетода = 0 Тогда
				ПараметрыМетода.Адрес.Вставить("admLevels");
				ПараметрыМетода.Адрес.Вставить("munLevels");
				ПараметрыМетода.Адрес.Вставить("areaValue");
			КонецЕсли;
			
			Результат = АдресныйКлассификаторСлужебный.КодыАдресаИКодыКЛАДР(ПараметрыМетода.Адрес,
				ПараметрыМетода.ИдентификаторАдресногоОбъекта,
				ПараметрыМетода.Источник);
			
		ИначеЕсли ИмяМетода = "ИсключатьГородИзМуниципальногоАдреса" Тогда
			
			Результат = Ложь;
			
		Иначе
			СообщениеОбОшибке = СтрШаблон(НСтр("ru = 'Метод %1 не поддерживается'"), ИмяМетода);
		КонецЕсли;
	Исключение
		СообщениеОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	Возврат Результат;

КонецФункции

#КонецОбласти
