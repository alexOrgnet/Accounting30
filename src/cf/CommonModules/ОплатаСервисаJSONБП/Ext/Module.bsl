#Область ПрограммныйИнтерфейс

// Десериализует строку JSON в структуру.
//
// Параметры:
//	Строка - Строка - JSON, который нужно десериализовать
//	ИменаСвойствТипаДата - Строка - имена полей типа Дата, разделенные запятыми
//
// Возвращаемое значение:
//	Структура - JSON, десериализованный в структуру
//
Функция Прочитать(Строка, ИменаСвойствТипаДата = "") Экспорт
	
	JSON = Новый ЧтениеJSON();
	JSON.УстановитьСтроку(Строка);
	
	Результат = ПрочитатьJSON(JSON, Ложь, СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаСвойствТипаДата,,, Истина));
	
	Возврат Результат;
	
КонецФункции

// Сериализует переданное значение в JSON.
// Важно: если на входе будет несериализуемое в JSON значение, возникнет исключение.
//
// Параметры:
//	Значение - Сериализуемое в JSON Значение
//
// Возвращаемое значение:
//	Строка - строка JSON
//
Функция Записать(Значение) Экспорт
	
	Если Значение = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	JSON = Новый ЗаписьJSON();
	JSON.УстановитьСтроку();
	
	ЗаписатьJSON(JSON, Значение);
	
	Результат = JSON.Закрыть();
	
	Возврат Результат;
	
КонецФункции

// Получает свойство объекта.
// При отсутствии указанного свойства возвращается указанное значение по
// умолчанию, по умолчанию Неопределено.
//
// Параметры:
//	Данные - Объект, свойство которого необходимо получить, например, Структура
//	ИмяСвойства - Строка - Имя свойства
//	ЗначениеПоУмолчанию - Значение по умолчанию, которое возвращается при
// отсутствии указанного свойства. Необязательный. По умолчанию Неопределено.
//
// Возвращаемое значение:
//   Значение свойства
//
Функция ПолучитьСвойство(Данные, ИмяСвойства, ЗначениеПоУмолчанию = Неопределено) Экспорт
	
	Значение = Данные[ИмяСвойства];
	
	Если Значение = Неопределено Тогда
		Значение = ЗначениеПоУмолчанию;
	КонецЕсли;
	
	Возврат Значение;
	
КонецФункции

// Проверяет, что строка содержит валидный JSON.
// Параметры:
//	Строка - Строка - JSON, который нужно десериализовать
//
// Возвращаемое значение:
//	Булево - Истина, если переданная строка содержит валидный JSON, Ложь в противном случае.
//
Функция Валидировать(Строка) Экспорт
	
	JSON = Новый ЧтениеJSON();
	JSON.УстановитьСтроку(Строка);
	
	Попытка
		Результат = ПрочитатьJSON(JSON, Ложь);
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти
