#Область ОбщиеПроцедуры

Функция ОпределитьТипОснования(Знач ДанныеЗаполнения)
	
	ОснованиеЗаполнения = ДанныеЗаполнения;
	Если ТипЗнч(ОснованиеЗаполнения) = Тип("Структура") И ОснованиеЗаполнения.Свойство("Основание") Тогда
		ОснованиеЗаполнения = ОснованиеЗаполнения.Основание;
	КонецЕсли;
	Возврат ТипЗнч(ОснованиеЗаполнения);
	
КонецФункции

#КонецОбласти

#Область САТУРН 

Процедура ОбработкаЗаполненияДокументовСАТУРН(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	ТипОбъекта = ТипЗнч(ДокументОбъект);
    Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.АктИнвентаризацииСАТУРН") Тогда
		ОбработкаЗаполненияДокументаАктИнвентаризацииСАТУРН(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.АктПримененияСАТУРН") Тогда
		ОбработкаЗаполненияДокументаАктПримененияСАТУРН(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ИмпортПродукцииСАТУРН") Тогда
		ОбработкаЗаполненияДокументаИмпортПродукцииСАТУРН(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.НакладнаяСАТУРН") Тогда
		ОбработкаЗаполненияДокументаНакладнаяСАТУРН(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПроизводственнаяОперацияСАТУРН") Тогда
		ОбработкаЗаполненияДокументаПроизводственнаяОперацияСАТУРН(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры    

Процедура ЗаполнитьТабличнуюЧастьДокументаСАТУРН(ТабличнаяЧасть, РезультатЗапроса, ДанныеЗаполнения, ВозможноПустая = Ложь)
	
	Если ТипЗнч(РезультатЗапроса) = Тип("РезультатЗапроса") Тогда
		Выборка = РезультатЗапроса.Выбрать();
	Иначе
		Выборка = РезультатЗапроса;
	КонецЕсли;
	
	Если Выборка.Количество() = 0 И Не ВозможноПустая Тогда
		
		ВызватьИсключение СтрШаблон(
			НСтр("ru = 'В %1 отсутствует продукция для заполнения.'"),
			ДанныеЗаполнения);
		
	КонецЕсли;
	
	КолонкиТабличнойЧасти   = ТабличнаяЧасть.Выгрузить(Новый Структура("НомерСтроки",Ложь));
	ЕстьИдентификаторСтроки = КолонкиТабличнойЧасти.Колонки.Найти("Идентификатор") <> Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТабличнаяЧасть.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		//переорпеделение количества
		НоваяСтрока.КоличествоУпаковок 				= Выборка.Количество;
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(НоваяСтрока,"КоличествоСАТУРН") Тогда
			НоваяСтрока.КоличествоСАТУРН 			= Выборка.Количество;
		ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(НоваяСтрока,"КоличествоОстатокСАТУРН") Тогда
			НоваяСтрока.КоличествоОстатокСАТУРН		= Выборка.Количество;
		КонецЕсли;
		НоваяСтрока.Упаковка						= ПолучитьУпаковкуПоЕдиницеИзмерения(Выборка.Номенклатура.ЕдиницаИзмерения);
		//
		Если ЕстьИдентификаторСтроки Тогда
			НоваяСтрока.Идентификатор = Новый УникальныйИдентификатор;
		КонецЕсли;
		
	КонецЦикла;
	
	ИнтеграцияСАТУРН.ЗаполнитьТипИзмеряемойВеличиныИКоличествоВУпаковке(ТабличнаяЧасть);
	
КонецПроцедуры

Процедура ЗаполнитьОрганизациюСАТУРНИМестоХранения(ДокументОбъект, РеквизитыДокумента, ИспользоватьПроизводственныйОбъект = Ложь)
	
	ЕстьСклад           = ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(РеквизитыДокумента, "Склад");
	ТаблицаСопосталений = ИнтеграцияСАТУРН.НоваяТаблицаОрганизацияКонтрагент();
	
	Если ЕстьСклад Тогда
		СтрокаСопоставленияОрганизация = ИнтеграцияСАТУРН.ДобавитьВТаблицуОтбораСопоставлений(
			ТаблицаСопосталений, РеквизитыДокумента.Организация, РеквизитыДокумента.Склад, РеквизитыДокумента.Склад);
	Иначе
		СтрокаСопоставленияОрганизация = ИнтеграцияСАТУРН.ДобавитьВТаблицуОтбораСопоставлений(
			ТаблицаСопосталений, РеквизитыДокумента.Организация);
	КонецЕсли;
	
	Справочники.КлассификаторОрганизацийСАТУРН.ЗаполнитьТаблицуСопоставленийКлассификаторамиСАТУРН(ТаблицаСопосталений);
	
	ДокументОбъект.ОрганизацияСАТУРН = СтрокаСопоставленияОрганизация.ОрганизацияСАТУРН;
	
	Если ЕстьСклад И ЗначениеЗаполнено(РеквизитыДокумента.Склад) Тогда
		Если ИспользоватьПроизводственныйОбъект Тогда
			ДокументОбъект.МестоХранения = СтрокаСопоставленияОрганизация.МестоХраненияПроизводственныйОбъект;
		Иначе
			ДокументОбъект.МестоХранения = СтрокаСопоставленияОрганизация.МестоХраненияТорговыйОбъект;
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры


#Область АктИнвентаризацииСАТУРН

Процедура ОбработкаЗаполненияДокументаАктИнвентаризацииСАТУРН(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипОснования = ОпределитьТипОснования(ДанныеЗаполнения);
	
	Если ТипОснования = Тип("ДокументСсылка.ОприходованиеТоваров")Тогда
		ЗаполнитьАктИнвентаризацииСАТУРННаОснованииОприходованияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.СписаниеТоваров")Тогда
		ЗаполнитьАктИнвентаризацииСАТУРННаОснованииСписанияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		Документы.АктИнвентаризацииСАТУРН.ЗаполнитьПартии(ДокументОбъект);
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьАктИнвентаризацииСАТУРННаОснованииОприходованияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Шапка.Ссылка      КАК ДокументОснование,
	|	НЕ Шапка.Проведен КАК ЕстьОшибкиПроведен,
	|	Шапка.Организация КАК Организация,
	|	Шапка.Склад       КАК Склад,
	|	Шапка.Дата        КАК ДатаРегистрации
	|ИЗ
	|	Документ.ОприходованиеТоваров КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуАктИнвентаризацииСАТУРН(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьАктИнвентаризацииСАТУРН(ДокументОбъект, ДанныеЗаполнения, "ОприходованиеТоваров", Ложь, Истина);
	
КонецПроцедуры 

Процедура ЗаполнитьАктИнвентаризацииСАТУРННаОснованииСписанияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Шапка.Ссылка      КАК ДокументОснование,
	|	НЕ Шапка.Проведен КАК ЕстьОшибкиПроведен,
	|	Шапка.Организация КАК Организация,
	|	Шапка.Склад       КАК Склад,
	|	Шапка.Дата        КАК ДатаРегистрации
	|ИЗ
	|	Документ.СписаниеТоваров КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуАктИнвентаризацииСАТУРН(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьАктИнвентаризацииСАТУРН(ДокументОбъект, ДанныеЗаполнения, "СписаниеТоваров", Ложь, Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьШапкуАктИнвентаризацииСАТУРН(ДокументОбъект, ДанныеЗаполнения, Запрос)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ДокументОснование = ДанныеЗаполнения.Основание;
	Иначе
		ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
	КонецЕсли;
	ЗаполнитьОрганизациюСАТУРНИМестоХранения(ДокументОбъект, РеквизитыДокумента);
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьАктИнвентаризацииСАТУРН(ДокументОбъект, ДанныеЗаполнения, ИмяДокумента, ЕстьСерии, ДляОприходования)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть") Тогда
		Возврат;
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Основание = ДанныеЗаполнения.Основание;
	Иначе
		Основание = ДанныеЗаполнения;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполненияАктИнвентаризацииСАТУРНИзПрикладногоДокумента(ИмяДокумента,ЕстьСерии);
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", Основание);
	Запрос.УстановитьПараметр("ДляОприходования",  ДляОприходования);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.АктИнвентаризацииСАТУРН.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",       Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип.ПривестиЗначение());
	
	ЗаполнитьТабличнуюЧастьДокументаСАТУРН(ДокументОбъект.Товары, Запрос.Выполнить(), ДанныеЗаполнения);
	
КонецПроцедуры

Функция ТекстЗапросаЗаполненияАктИнвентаризацииСАТУРНИзПрикладногоДокумента(ИмяДокумента, ЕстьСерии)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктИнвентаризацииСАТУРН КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовСАТУРН КАК СтатусыДокументовСАТУРН
	|		ПО СтатусыДокументовСАТУРН.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовСАТУРН.Статус НЕ В(&КонечныеСтатусы)
	|;
	|"
	+ ?(ЕстьСерии = Ложь,
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	СУММА(Товары.Количество)                           КАК Количество,
	|	СУММА(Товары.Количество)                           КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияСАТУРН
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура
	|;
	|"
	,
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество,
	|	СУММА(Товары.Количество)                           КАК КоличествоУпаковок
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура..ПодконтрольнаяПродукцияСАТУРН
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура                                КАК Номенклатура,
	|	Серии.Характеристика                              КАК Характеристика,
	|	Серии.Серия                                       КАК Серия,
	|	СУММА(Серии.Количество)                           КАК Количество,
	|	СУММА(Серии.Количество)                           КАК КоличествоУпаковок
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Серии КАК Серии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Серии.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Серии.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ОсобенностьУчета В(&ОсобенностьУчета)
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия,Товары.Серия)                 КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)      КАК Количество,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)      КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Серии КАК Серии
	|			ПО Серии.Номенклатура = Товары.Номенклатура
	|			И Серии.Характеристика = Товары.Характеристика
	|;
	|"
	)
	+
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура          КАК Номенклатура,
	|	ТоварыСерии.Количество            КАК Количество,
	|	ТоварыСерии.Количество            КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.КоличествоУпаковок
	|ИЗ
	|	Документ.АктИнвентаризацииСАТУРН.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура              КАК Номенклатура,
	|	СУММА(ТоварыКОформлению.Количество)         КАК Количество,
	|	СУММА(ТоварыКОформлению.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыКОформлениюИтог
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлениюИтог.Номенклатура              КАК Номенклатура,
	|	ТоварыКОформлениюИтог.Количество * ВЫБОР КОГДА &ДляОприходования ТОГДА 1 ИНАЧЕ -1 КОНЕЦ КАК Количество,
	|	ТоварыКОформлениюИтог.Количество * ВЫБОР КОГДА &ДляОприходования ТОГДА 1 ИНАЧЕ -1 КОНЕЦ КАК КоличествоУпаковок
	|ИЗ
	|	ТоварыКОформлениюИтог КАК ТоварыКОформлениюИтог
	|";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ИмяПрикладногоДокумента",ИмяДокумента);
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область АктПримененияСАТУРН

Процедура ЗаполнитьШапкуАктПримененияСАТУРН(ДокументОбъект, ДанныеЗаполнения, Запрос)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ДокументОснование = ДанныеЗаполнения.Основание;
	Иначе
		ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
	КонецЕсли;
	
	ЗаполнитьОрганизациюСАТУРНИМестоХранения(ДокументОбъект, РеквизитыДокумента, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьАктПримененияСАТУРН(ДокументОбъект, ДанныеЗаполнения, ИмяДокумента, ЕстьСерии)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть") Тогда
		Возврат;
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	ОсобенностьУчета = Перечисления.ВидыПродукцииИС.ПодконтрольнаяПродукцияСАТУРН;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Основание = ДанныеЗаполнения.Основание;
	Иначе
		Основание = ДанныеЗаполнения;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполненияАктПримененияСАТУРНИзПрикладногоДокумента(ИмяДокумента,ЕстьСерии);
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", Основание);
	Запрос.УстановитьПараметр("ОсобенностьУчета",  ОсобенностьУчета);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.АктПримененияСАТУРН.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",       Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип.ПривестиЗначение());
	
	ЗаполнитьТабличнуюЧастьДокументаСАТУРН(ДокументОбъект.Товары, Запрос.Выполнить(), ДанныеЗаполнения);
	
КонецПроцедуры

Функция ТекстЗапросаЗаполненияАктПримененияСАТУРНИзПрикладногоДокумента(ИмяДокумента, ЕстьСерии)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктПримененияСАТУРН КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовСАТУРН КАК СтатусыДокументовСАТУРН
	|		ПО СтатусыДокументовСАТУРН.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовСАТУРН.Статус НЕ В(&КонечныеСтатусы)
	|;
	|"
	+ ?(ЕстьСерии = Ложь,
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	""""                              				   КАК Характеристика,
	|	""""                                       		   КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество,
	|	СУММА(Товары.Количество)                           КАК КоличествоУпаковок
	|
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияСАТУРН
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура
	|;
	|"
	,
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество
	|	СУММА(Товары.Количество)                           КАК КоличествоУпаковок
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ОсобенностьУчета В(&ОсобенностьУчета)
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура                                КАК Номенклатура,
	|	Серии.Характеристика                              КАК Характеристика,
	|	Серии.Серия                                       КАК Серия,
	|	СУММА(Серии.Количество)                           КАК Количество,
	|	СУММА(Серии.Количество)                           КАК КоличествоУпаковок
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Серии КАК Серии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Серии.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Серии.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ОсобенностьУчета В(&ОсобенностьУчета)
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия,Товары.Серия)                 КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)      КАК Количество,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)      КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Серии КАК Серии
	|			ПО Серии.Номенклатура = Товары.Номенклатура
	|			И Серии.Характеристика = Товары.Характеристика
	|;
	|"
	)
	+
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура          КАК Номенклатура,
	|	ТоварыСерии.Характеристика        КАК Характеристика,
	|	ТоварыСерии.Серия                 КАК Серия,
	|	ТоварыСерии.Количество            КАК Количество,
	|	ТоварыСерии.КоличествоУпаковок    КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	"""" КАК Характеристика,
	|	"""" КАК Серия,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.КоличествоУпаковок
	|ИЗ
	|	Документ.АктПримененияСАТУРН.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Соответствие.Номенклатура КАК Номенклатура,
	|	Соответствие.Характеристика КАК Характеристика,
	|	Соответствие.Серия КАК Серия,
	|	МАКСИМУМ(Соответствие.ПАТ) КАК ПАТ
	|ПОМЕСТИТЬ ТаблицаСоответствия
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыСАТУРН КАК Соответствие
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыКОформлению КАК ТоварыКОформлению
	|		ПО ТоварыКОформлению.Номенклатура = Соответствие.Номенклатура
	|		И ТоварыКОформлению.Характеристика = Соответствие.Характеристика
	|		И ТоварыКОформлению.Серия = Соответствие.Серия
	|СГРУППИРОВАТЬ ПО
	|	Соответствие.Номенклатура,
	|	Соответствие.Характеристика,
	|	Соответствие.Серия
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Соответствие.ПАТ) = 1
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура              КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика            КАК Характеристика,
	|	ТоварыКОформлению.Серия                     КАК Серия,
	|	МАКСИМУМ(ТаблицаСоответствия.ПАТ)           КАК ПАТ,
	|	СУММА(ТоварыКОформлению.Количество)         КАК Количество,
	|	СУММА(ТоварыКОформлению.КоличествоУпаковок) КАК КоличествоУпаковок
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСоответствия КАК ТаблицаСоответствия
	|	ПО ТаблицаСоответствия.Номенклатура = ТоварыКОформлению.Номенклатура
	|	И ТаблицаСоответствия.Характеристика = ТоварыКОформлению.Характеристика
	|	И ТаблицаСоответствия.Серия = ТоварыКОформлению.Серия
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ИмяПрикладногоДокумента",ИмяДокумента);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОбработкаЗаполненияДокументаАктПримененияСАТУРН(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипОснования = ОпределитьТипОснования(ДанныеЗаполнения);
	
	Если ТипОснования = Тип("ДокументСсылка.СписаниеТоваров") Тогда
		ЗаполнитьАктПримененияСАТУРННаОснованииСписанияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	КонецЕсли;
	Документы.АктПримененияСАТУРН.ЗаполнитьПартии(ДокументОбъект);

КонецПроцедуры

Процедура ЗаполнитьАктПримененияСАТУРННаОснованииСписанияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Шапка.Ссылка      КАК ДокументОснование,
	|	НЕ Шапка.Проведен КАК ЕстьОшибкиПроведен,
	|	Шапка.Организация КАК Организация,
	|	Шапка.Склад       КАК Склад,
	|	Шапка.Номер       КАК НомерАкта,
	|	Шапка.Дата        КАК ДатаПрименения
	|ИЗ
	|	Документ.СписаниеТоваров КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуАктПримененияСАТУРН(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьАктПримененияСАТУРН(ДокументОбъект, ДанныеЗаполнения, "СписаниеТоваров", Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ИмпортПродукцииСАТУРН

Процедура ЗаполнитьПоступлениеПоИмпортуПродукцииСАТУРН(ДокументОбъект, ДанныеЗаполнения) Экспорт
	
	Если ТипЗнч(ДанныеЗаполнения)<> Тип("ДокументСсылка.ИмпортПродукцииСАТУРН") Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеДляЗаполнения = ИнтеграцияСАТУРНБП.ДанныеПрикладныхДокументовИзИмпортаПродукцииСАТУРН(ДанныеЗаполнения);
	ТаблицаРеквизитов 	= ДанныеДляЗаполнения[0].Выгрузить();
	Шапка 				= ИнтеграцияСАТУРНБПВызовСервера.ТаблицаЗначенийВСтруктуру(ТаблицаРеквизитов);
	Товары 				= ДанныеДляЗаполнения[1].Выгрузить();
	
	ДокументОбъект.Заполнить(Шапка);
	
	ДокументОбъект.НомерВходящегоДокумента  = Шапка.НомерВходящегоДокумента;
	ДокументОбъект.ДатаВходящегоДокумента   = Шапка.ДатаВходящегоДокумента;
	ДокументОбъект.Склад 					= Шапка.Склад;
	
	ГоловнаяОрганизация = ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(ДокументОбъект.Организация);
	СписокВидовДоговоров = Новый СписокЗначений();
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);
	РаботаСДоговорамиКонтрагентовБП.УстановитьДоговорКонтрагента(ДокументОбъект.ДоговорКонтрагента, ДокументОбъект.Контрагент, ГоловнаяОрганизация, СписокВидовДоговоров);

	// Тип цен и валюту берем по умолчанию из договора
	Если ЗначениеЗаполнено(ДокументОбъект.ДоговорКонтрагента) Тогда
		РеквизитыДоговора 					= ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОбъект.ДоговорКонтрагента, "ВалютаВзаиморасчетов, ТипЦен");
		ДокументОбъект.ВалютаДокумента     	= РеквизитыДоговора.ВалютаВзаиморасчетов;
		ДокументОбъект.ТипЦен              	= РеквизитыДоговора.ТипЦен;
	Иначе
		ДокументОбъект.ВалютаДокумента     	= ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.ТипЦен) Тогда
		ДокументОбъект.ТипЦен = ДокументОбъект.Склад.ТипЦенРозничнойТорговли;
	КонецЕсли;
	
	СтруктураКурсаВзаиморасчетов 			= РаботаСКурсамиВалют.ПолучитьКурсВалюты(ДокументОбъект.ВалютаДокумента, ДокументОбъект.Дата);
	ДокументОбъект.КурсВзаиморасчетов      	= СтруктураКурсаВзаиморасчетов.Курс;
	ДокументОбъект.КратностьВзаиморасчетов 	= СтруктураКурсаВзаиморасчетов.Кратность;
	
	// Флаги включения налогов.
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.ТипЦен) Тогда
		ДокументОбъект.СуммаВключаетНДС = Ложь;
	Иначе
		ДокументОбъект.СуммаВключаетНДС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.ТипЦен, "ЦенаВключаетНДС");
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	ДанныеОбъекта = Новый Структура(
		"Дата, ВидОперации, Организация, Склад, ТипЦен, СуммаВключаетНДС,
		|ВалютаДокумента, КурсВзаиморасчетов, КратностьВзаиморасчетов");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, ДокументОбъект);
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.ТипЦен) Тогда 
		ДанныеОбъекта.Вставить("ЗаполнятьЦеныПродажаиПокупка", Истина); 
	КонецЕсли;
	
    СоответствиеСведенийОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОСпискеНоменклатуры(
		ОбщегоНазначения.ВыгрузитьКолонку(Товары, "Номенклатура", Истина), ДанныеОбъекта, Истина, Истина);

	Для Каждого СтрокаТоваров Из Товары Цикл
		СтрокаТабличнойЧасти 							= ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтрокаТоваров);
		
		СведенияОНоменклатуре 							= СоответствиеСведенийОНоменклатуре[СтрокаТоваров.Номенклатура];
		Если ЗначениеЗаполнено(СтрокаТоваров.Номенклатура) И СведенияОНоменклатуре <> Неопределено Тогда
			СтрокаТабличнойЧасти.ЕдиницаИзмерения		= СведенияОНоменклатуре.ЕдиницаИзмерения;
			СтрокаТабличнойЧасти.Коэффициент			= СведенияОНоменклатуре.Коэффициент;
			СтрокаТабличнойЧасти.СтавкаНДС				= СведенияОНоменклатуре.СтавкаНДС;
			СтрокаТабличнойЧасти.НомерГТД				= СведенияОНоменклатуре.НомерГТД;
			СтрокаТабличнойЧасти.СтранаПроисхождения	= СведенияОНоменклатуре.СтранаПроисхождения;
			СтрокаТабличнойЧасти.ОтражениеВУСН			= Перечисления.ОтражениеВУСН.Принимаются;
			СтрокаТабличнойЧасти.Цена					= СведенияОНоменклатуре.Цена;
		КонецЕсли;
		
		ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти);
        ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ДокументОбъект.СуммаВключаетНДС);

		СтавкаНДС 					= УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТабличнойЧасти.СтавкаНДС);
		СтрокаТабличнойЧасти.Цена  	= УчетНДСКлиентСервер.ПересчитатьЦенуПриИзмененииФлаговНалогов(СтрокаТабличнойЧасти.Цена, Истина, ДанныеОбъекта.СуммаВключаетНДС, СтавкаНДС);
		СтрокаТабличнойЧасти.Сумма 	= УчетНДСКлиентСервер.ПересчитатьЦенуПриИзмененииФлаговНалогов(СтрокаТабличнойЧасти.Сумма, Истина, ДанныеОбъекта.СуммаВключаетНДС, СтавкаНДС);
		
	КонецЦикла;
	
	СчетаУчетаВДокументах.ЗаполнитьПередОтображениемПользователю(ДокументОбъект);
		
КонецПроцедуры

Процедура ОбработкаЗаполненияДокументаИмпортПродукцииСАТУРН(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипОснования = ОпределитьТипОснования(ДанныеЗаполнения);
	
	Если ТипОснования = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")Тогда
		ЗаполнитьИмпортПродукцииСАТУРННаОснованииПоступленияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьИмпортПродукцииСАТУРННаОснованииПоступленияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ДокументОбъект.Товары.Количество() > 0 Тогда
		
		//Заполнение сопоставленной номенклатуры из основания
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ПАТ", ДокументОбъект.Товары.ВыгрузитьКолонку("ПАТ"));
		Запрос.УстановитьПараметр("ДокументОснование", ДокументОбъект.ДокументОснование);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ ТоварыОснования
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка = &ДокументОснование
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Р.Номенклатура КАК Номенклатура,
		|	Р.ПАТ КАК ПАТ
		|ИЗ
		|	РегистрСведений.СоответствиеНоменклатурыСАТУРН КАК Р
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыОснования КАК ТоварыОснования
		|		ПО ТоварыОснования.Номенклатура = Р.Номенклатура
		|		И Р.ПАТ В (&ПАТ)
		|ИТОГИ
		|ПО
		|	ПАТ";
		
		Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока Выборка.Следующий() Цикл
			Детали = Выборка.Выбрать();
			Если Детали.Количество() > 1 Тогда
				Продолжить;
			КонецЕсли;
			Детали.Следующий();
			СтрокиТовары = ДокументОбъект.Товары.НайтиСтроки(Новый Структура("ПАТ", Детали.ПАТ));
			Для Каждого СтрокаТЧ Из СтрокиТовары Цикл
				ЗаполнитьЗначенияСвойств(СтрокаТЧ, Детали);
			КонецЦикла;
		КонецЦикла; 
	КонецЕсли;
	
КонецПроцедуры

//Для заполнения ПоступлениеТоваровУслуг Из ИмпортПродукцииСатурн
Функция ДанныеПрикладныхДокументовИзИмпортаПродукцииСАТУРН(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МестаХранения.ТорговыйОбъект КАК ТорговыйОбъект,
	|	МестаХранения.ТорговыйОбъект КАК Склад,
	|	МестаХранения.ПроизводственныйОбъект КАК Подразделение,
	|	ИмпортПродукцииСАТУРН.Комментарий КАК Комментарий,
	|	ИмпортПродукцииСАТУРН.Дата КАК Дата,
	|	ИмпортПродукцииСАТУРН.ОрганизацияСАТУРН.Контрагент КАК Организация,
	|	ИмпортПродукцииСАТУРН.ОрганизацияСАТУРН КАК ОрганизацияСАТУРН,
	|	ИмпортПродукцииСАТУРН.Дата КАК ДатаВходящегоДокумента,
	|	ИмпортПродукцииСАТУРН.Номер КАК НомерВходящегоДокумента
	|ИЗ
	|	Документ.ИмпортПродукцииСАТУРН КАК ИмпортПродукцииСАТУРН
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторОрганизацийСАТУРН.МестаХранения КАК МестаХранения
	|		ПО ИмпортПродукцииСАТУРН.ОрганизацияСАТУРН = МестаХранения.Ссылка
	|			И ИмпортПродукцииСАТУРН.МестоХранения = МестаХранения.МестоХранения
	|ГДЕ
	|	ИмпортПродукцииСАТУРН.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИмпортПродукцииСАТУРН.Номенклатура КАК Номенклатура,
	|	ИмпортПродукцииСАТУРН.Номенклатура.ВидСтавкиНДС КАК СтавкаНДС,
	|	ИмпортПродукцииСАТУРН.Количество КАК Количество,
	|	ИмпортПродукцииСАТУРН.КоличествоУпаковок КАК КоличествоУпаковок
	|ИЗ
	|	Документ.ИмпортПродукцииСАТУРН.Товары КАК ИмпортПродукцииСАТУРН
	|ГДЕ
	|	ИмпортПродукцииСАТУРН.Ссылка = &Ссылка";
	
	Возврат Запрос.ВыполнитьПакет();
	
КонецФункции

#КонецОбласти 

#Область НакладнаяСАТУРН

Процедура ЗаполнитьШапкуНакладнаяСАТУРН(ДокументОбъект, ДанныеЗаполнения, Запрос)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ДокументОснование = ДанныеЗаполнения.Основание;
	Иначе
		ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	СтруктураРеквизитов = Новый Структура("Контрагент, Грузоотправитель, Грузополучатель, Перевозчик");
	ЗаполнитьЗначенияСвойств(СтруктураРеквизитов, РеквизитыДокумента);
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
	КонецЕсли;
	
	//установка вида операции накладной	
	УстановитьВидОперацииНакладнойСАТУРН(ДокументОбъект, ДокументОснование);
	//
	
	МетаданныеОснования = ДокументОснование.Метаданные();

	ТаблицаСопосталений = ИнтеграцияСАТУРН.НоваяТаблицаОрганизацияКонтрагент();
	СтрокаСопоставленияОрганизация = ИнтеграцияСАТУРН.ДобавитьВТаблицуОтбораСопоставлений(ТаблицаСопосталений, РеквизитыДокумента.Организация, РеквизитыДокумента.Склад);
	
	Если ЗначениеЗаполнено(СтруктураРеквизитов.Контрагент) Тогда
		СтрокаСопоставленияКонтрагент = ИнтеграцияСАТУРН.ДобавитьВТаблицуОтбораСопоставлений(ТаблицаСопосталений, РеквизитыДокумента.Контрагент);
	Иначе
		СтрокаСопоставленияКонтрагент = Неопределено;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураРеквизитов.Грузоотправитель) Тогда 
		СтрокаСопоставленияГрузоотправитель = ИнтеграцияСАТУРН.ДобавитьВТаблицуОтбораСопоставлений(ТаблицаСопосталений, РеквизитыДокумента.Грузоотправитель, РеквизитыДокумента.Склад);
	Иначе
		СтрокаСопоставленияГрузоотправитель = Неопределено;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураРеквизитов.Грузополучатель) Тогда 
		Если МетаданныеОснования.Имя = "ПеремещениеТоваров" Тогда
			СтрокаСопоставленияГрузополучатель = ИнтеграцияСАТУРН.ДобавитьВТаблицуОтбораСопоставлений(ТаблицаСопосталений, РеквизитыДокумента.Грузополучатель, РеквизитыДокумента.СкладПолучатель);
		Иначе
			СтрокаСопоставленияГрузополучатель = ИнтеграцияСАТУРН.ДобавитьВТаблицуОтбораСопоставлений(ТаблицаСопосталений, РеквизитыДокумента.Грузополучатель);
		КонецЕсли;
	Иначе
		СтрокаСопоставленияГрузополучатель = Неопределено;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураРеквизитов.Перевозчик) Тогда 
		СтрокаСопоставленияПеревозчик = ИнтеграцияСАТУРН.ДобавитьВТаблицуОтбораСопоставлений(ТаблицаСопосталений, РеквизитыДокумента.Перевозчик);
	Иначе
		СтрокаСопоставленияПеревозчик = Неопределено;
	КонецЕсли;
	
	Справочники.КлассификаторОрганизацийСАТУРН.ЗаполнитьТаблицуСопоставленийКлассификаторамиСАТУРН(ТаблицаСопосталений); 
	
	Если ЗначениеЗаполнено(СтрокаСопоставленияОрганизация.ОрганизацияСАТУРН) Тогда
		ДокументОбъект.ГрузоотправительОрганизацияСАТУРН = СтрокаСопоставленияОрганизация.ОрганизацияСАТУРН;
		ДокументОбъект.ГрузоотправительМестоХранения     = СтрокаСопоставленияОрганизация.МестоХраненияТорговыйОбъект;
	ИначеЕсли СтрокаСопоставленияГрузоотправитель <> Неопределено И ЗначениеЗаполнено(СтрокаСопоставленияГрузоотправитель.ОрганизацияСАТУРН) Тогда
		ДокументОбъект.ГрузополучательОрганизацияСАТУРН = СтрокаСопоставленияКонтрагент.ОрганизацияСАТУРН;
		ДокументОбъект.ГрузоотправительМестоХранения    = СтрокаСопоставленияКонтрагент.МестоХраненияТорговыйОбъект;
	КонецЕсли;
	
	Если СтрокаСопоставленияПеревозчик <> Неопределено Тогда
		ДокументОбъект.Перевозчик = СтрокаСопоставленияПеревозчик.ОрганизацияСАТУРН;
	КонецЕсли;
	
	Если СтрокаСопоставленияКонтрагент <> Неопределено И ЗначениеЗаполнено(СтрокаСопоставленияКонтрагент.ОрганизацияСАТУРН) Тогда
		ДокументОбъект.ГрузополучательОрганизацияСАТУРН = СтрокаСопоставленияКонтрагент.ОрганизацияСАТУРН;
	ИначеЕсли СтрокаСопоставленияГрузополучатель <> Неопределено И ЗначениеЗаполнено(СтрокаСопоставленияГрузополучатель.ОрганизацияСАТУРН) Тогда
		ДокументОбъект.ГрузополучательОрганизацияСАТУРН = СтрокаСопоставленияГрузополучатель.ОрганизацияСАТУРН;
		ДокументОбъект.ГрузополучательМестоХранения 	= СтрокаСопоставленияГрузополучатель.МестоХраненияТорговыйОбъект;
	КонецЕсли;
	
	Если СтрокаСопоставленияПеревозчик <> Неопределено Тогда
		ДокументОбъект.Перевозчик = СтрокаСопоставленияПеревозчик.ОрганизацияСАТУРН;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьНакладнаяСАТУРН(ДокументОбъект, ДанныеЗаполнения, ИмяДокумента, ЕстьСерии, ИмяТабличнойЧасти = "Товары")
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть") Тогда
		Возврат;
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Основание = ДанныеЗаполнения.Основание;
	Иначе
		Основание = ДанныеЗаполнения;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполненияНакладнаяСАТУРНИзПрикладногоДокумента(ИмяДокумента, ЕстьСерии, ИмяТабличнойЧасти);
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", Основание);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.НакладнаяСАТУРН.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",       Метаданные.ОпределяемыеТипы.СерияНоменклатуры.Тип.ПривестиЗначение());
	
	ЗаполнитьТабличнуюЧастьДокументаСАТУРН(ДокументОбъект.Товары, Запрос.Выполнить(), ДанныеЗаполнения);
	
КонецПроцедуры

Функция ТекстЗапросаЗаполненияНакладнаяСАТУРНИзПрикладногоДокумента(ИмяДокумента, ЕстьСерии, ИмяТабличнойЧасти = "Товары")
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.НакладнаяСАТУРН КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовСАТУРН КАК СтатусыДокументовСАТУРН
	|		ПО СтатусыДокументовСАТУРН.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовСАТУРН.Статус НЕ В(&КонечныеСтатусы)
	|;
	|"
	+ ?(ЕстьСерии = Ложь,
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	СУММА(Товары.Количество)                           КАК Количество,
	|	СУММА(Товары.Количество)						   КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента."+ИмяТабличнойЧасти+" КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияСАТУРН
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура
	|;
	|"
	,
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество,
	|	СУММА(Товары.КоличествоУпаковок)                   КАК КоличествоУпаковок
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ОсобенностьУчета В(&ОсобенностьУчета)
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура                                КАК Номенклатура,
	|	Серии.Характеристика                              КАК Характеристика,
	|	Серии.Серия                                       КАК Серия,
	|	СУММА(Серии.Количество)                           КАК Количество,
	|	СУММА(Серии.КоличествоУпаковок)                   КАК КоличествоУпаковок
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Серии КАК Серии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Серии.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Серии.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ОсобенностьУчета В(&ОсобенностьУчета)
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                           КАК Номенклатура,
	|	Товары.Характеристика                                         КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия,Товары.Серия)                            КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)                 КАК Количество,
	|	ЕСТЬNULL(Серии.КоличествоУпаковок, Товары.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Серии КАК Серии
	|			ПО Серии.Номенклатура = Товары.Номенклатура
	|			И Серии.Характеристика = Товары.Характеристика
	|;
	|"
	)
	+
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура          КАК Номенклатура,
	|	ТоварыСерии.Количество            КАК Количество,
	|	ТоварыСерии.КоличествоУпаковок    КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.КоличествоУпаковок
	|ИЗ
	|	Документ.НакладнаяСАТУРН.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура              КАК Номенклатура,
	|	СУММА(ТоварыКОформлению.Количество)         КАК Количество,
	|	СУММА(ТоварыКОформлению.КоличествоУпаковок) КАК КоличествоУпаковок
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяПрикладногоДокумента", ИмяДокумента);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОбработкаЗаполненияДокументаНакладнаяСАТУРН(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипОснования = ОпределитьТипОснования(ДанныеЗаполнения);
	
	Если ТипОснования = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		ЗаполнитьНакладнаяСАТУРННаОснованииПоступленияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		ЗаполнитьНаклданаяСАТУРННаОснованииВозвратаТоваровОтПокупателя(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		ЗаполнитьНакладнаяСАТУРННаОснованииРеализацииТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);	
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		ЗаполнитьНакладнаяСАТУРННаОснованииОтчетаОРозничныхПродажах(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка); 
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ТребованиеНакладная") Тогда
		ЗаполнитьНакладнаяСАТУРННаОснованииТребованияНакладной(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ЗаполнитьНакладнаяСАТУРННаОснованииПеремещениеТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		ЗаполнитьНакладнаяСАТУРННаОснованииВозвратаПоставщику(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	КонецЕсли;
	
	Документы.НакладнаяСАТУРН.ЗаполнитьПартии(ДокументОбъект);

КонецПроцедуры

Процедура ЗаполнитьНакладнаяСАТУРННаОснованииПоступленияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ДокументОснование = ДанныеЗаполнения.Основание;
	Иначе
		ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	ДокументОбъект.ДокументОснование = ДокументОснование;
	
	//Заполнение сопоставленной номенклатуры из основания
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПАТ", ДокументОбъект.Товары.ВыгрузитьКолонку("ПАТ"));
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОбъект.ДокументОснование);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ТоварыОснования
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Р.Номенклатура КАК Номенклатура,
	|	Р.ПАТ КАК ПАТ
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыСАТУРН КАК Р
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыОснования КАК ТоварыОснования
	|		ПО ТоварыОснования.Номенклатура = Р.Номенклатура
	|		И Р.ПАТ В (&ПАТ)
	|ИТОГИ
	|ПО
	|	ПАТ";
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Выборка.Следующий() Цикл
		Детали = Выборка.Выбрать();
		Если Детали.Количество() > 1 Тогда
			Продолжить;
		КонецЕсли;
		Детали = Выборка.Выбрать();
		Детали.Следующий();
		СтрокиТовары = ДокументОбъект.Товары.НайтиСтроки(Новый Структура("ПАТ", Детали.ПАТ));
		Для Каждого СтрокаТЧ Из СтрокиТовары Цикл
			ЗаполнитьЗначенияСвойств(СтрокаТЧ, Детали);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьНаклданаяСАТУРННаОснованииВозвратаТоваровОтПокупателя(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ДокументОснование = ДанныеЗаполнения.Основание;
	Иначе
		ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	ДокументОбъект.ДокументОснование = ДокументОснование;
	
	//Заполнение сопоставленной номенклатуры из основания
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПАТ", ДокументОбъект.Товары.ВыгрузитьКолонку("ПАТ"));
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОбъект.ДокументОснование);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ТоварыОснования
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Р.Номенклатура КАК Номенклатура,
	|	Р.ПАТ КАК ПАТ
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыСАТУРН КАК Р
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыОснования КАК ТоварыОснования
	|		ПО ТоварыОснования.Номенклатура = Р.Номенклатура
	|		И Р.ПАТ В (&ПАТ)
	|ИТОГИ
	|ПО
	|	ПАТ";
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Выборка.Следующий() Цикл
		Детали = Выборка.Выбрать();
		Если Детали.Количество() > 1 Тогда
			Продолжить;
		КонецЕсли;
		Детали = Выборка.Выбрать();
		Детали.Следующий();
		СтрокиТовары = ДокументОбъект.Товары.НайтиСтроки(Новый Структура("ПАТ", Детали.ПАТ));
		Для Каждого СтрокаТЧ Из СтрокиТовары Цикл
			ЗаполнитьЗначенияСвойств(СтрокаТЧ, Детали);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьНакладнаяСАТУРННаОснованииРеализацииТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Шапка.Ссылка                           КАК ДокументОснование,
	|	Шапка.Дата                             КАК ДатаРегистрации,
	|	Шапка.Перевозчик                       КАК Перевозчик,
	|	НЕ Шапка.Проведен                      КАК ЕстьОшибкиПроведен,
	|	Шапка.Организация                      КАК Организация,
	|	Шапка.Склад                            КАК Склад,
	|	Шапка.Грузоотправитель                 КАК Грузоотправитель,
	|	Шапка.Грузополучатель                  КАК Грузополучатель,
	|	Истина                                 КАК Реализация,
	|	Шапка.Контрагент                       КАК Контрагент,
	|	""Реализация товаров""                 КАК НаименованиеПервичногоДокумента,
	|	Шапка.Дата                             КАК ДатаПервичногоДокумента,
	|	Шапка.Номер                            КАК НомерПервичногоДокумента
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуНакладнаяСАТУРН(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьНакладнаяСАТУРН(ДокументОбъект, ДанныеЗаполнения, "РеализацияТоваровУслуг", Ложь);
	
КонецПроцедуры 

Процедура ЗаполнитьНакладнаяСАТУРННаОснованииОтчетаОРозничныхПродажах(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Шапка.Ссылка                           КАК ДокументОснование,
	|	Шапка.Дата                             КАК ДатаРегистрации,
	|	НЕ Шапка.Проведен                      КАК ЕстьОшибкиПроведен,
	|	Шапка.Организация                      КАК Организация,
	|	Шапка.Склад                            КАК Склад,
	|	Истина                                 КАК Реализация,
	|	""Отчет о розничных продажах""         КАК НаименованиеПервичногоДокумента,
	|	Шапка.Дата                             КАК ДатаПервичногоДокумента,
	|	Шапка.Номер                            КАК НомерПервичногоДокумента
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуНакладнаяСАТУРН(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьНакладнаяСАТУРН(ДокументОбъект, ДанныеЗаполнения, "ОтчетОРозничныхПродажах", Ложь);

КонецПроцедуры

Процедура ЗаполнитьНакладнаяСАТУРННаОснованииТребованияНакладной(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Шапка.Ссылка                           КАК ДокументОснование,
	|	Шапка.Дата                             КАК ДатаРегистрации,
	|	НЕ Шапка.Проведен                      КАК ЕстьОшибкиПроведен,
	|	Шапка.Организация                      КАК Организация,
	|	Шапка.Склад                            КАК Склад,
	|	Шапка.Контрагент                       КАК Контрагент,
	|	Истина                                 КАК Реализация,
	|	""Расход материалов""         		   КАК НаименованиеПервичногоДокумента,
	|	Шапка.Дата                             КАК ДатаПервичногоДокумента,
	|	Шапка.Номер                            КАК НомерПервичногоДокумента
	|ИЗ
	|	Документ.ТребованиеНакладная КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуНакладнаяСАТУРН(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьНакладнаяСАТУРН(ДокументОбъект, ДанныеЗаполнения, "ТребованиеНакладная", Ложь, "Материалы");
	
КонецПроцедуры

Процедура ЗаполнитьНакладнаяСАТУРННаОснованииПеремещениеТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Шапка.Ссылка                           КАК ДокументОснование,
	|	Шапка.Дата                             КАК ДатаРегистрации,
	|	НЕ Шапка.Проведен                      КАК ЕстьОшибкиПроведен,
	|	Шапка.Организация                      КАК Организация,
	|	Шапка.СкладОтправитель                 КАК Склад,
	|	Шапка.СкладПолучатель                  КАК СкладПолучатель,
	|	Шапка.Организация                 	   КАК Грузоотправитель,
	|	Шапка.Организация                      КАК Грузополучатель,
	|	Истина                                 КАК Реализация,
	|	""Перемещение товаров""                КАК НаименованиеПервичногоДокумента,
	|	Шапка.Дата                             КАК ДатаПервичногоДокумента,
	|	Шапка.Номер                            КАК НомерПервичногоДокумента
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуНакладнаяСАТУРН(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьНакладнаяСАТУРН(ДокументОбъект, ДанныеЗаполнения, "ПеремещениеТоваров", Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьНакладнаяСАТУРННаОснованииВозвратаПоставщику(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Шапка.Ссылка                           КАК ДокументОснование,
	|	Шапка.Дата                             КАК ДатаРегистрации,
	|	НЕ Шапка.Проведен                      КАК ЕстьОшибкиПроведен,
	|	Шапка.Организация                      КАК Организация,
	|	Шапка.Склад                            КАК Склад,
	|	Шапка.Грузоотправитель                 КАК Грузоотправитель,
	|	Шапка.Грузополучатель                  КАК Грузополучатель,
	|	Истина                                 КАК Реализация,
	|	Шапка.Контрагент                       КАК Контрагент,
	|	""Возврат товаров постащику""          КАК НаименованиеПервичногоДокумента,
	|	Шапка.Дата                             КАК ДатаПервичногоДокумента,
	|	Шапка.Номер                            КАК НомерПервичногоДокумента
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуНакладнаяСАТУРН(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьНакладнаяСАТУРН(ДокументОбъект, ДанныеЗаполнения, "ВозвратТоваровПоставщику", Ложь);
		
КонецПроцедуры

Функция ДанныеПрикладныхДокументовИзНакладнойСАТУРН(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МестаХраненияГрузоотправитель.ТорговыйОбъект КАК ТорговыйОбъект,
	|	МестаХраненияГрузоотправитель.ТорговыйОбъект КАК СкладКонтрагент,
	|	МестаХраненияГрузоотправитель.ПроизводственныйОбъект КАК ПодразделениеГрузоотправитель,
	|	МестаХраненияГрузополучатель.ТорговыйОбъект КАК Склад,
	|	МестаХраненияГрузополучатель.ПроизводственныйОбъект КАК Подразделение,
	|	НакладнаяСАТУРН.Комментарий КАК Комментарий,
	|	НакладнаяСАТУРН.Дата КАК Дата,
	|	НакладнаяСАТУРН.ГрузоотправительОрганизацияСАТУРН.Контрагент КАК Контрагент,
	|	НакладнаяСАТУРН.ГрузоотправительОрганизацияСАТУРН КАК КонтрагентСАТУРН,
	|	НакладнаяСАТУРН.ГрузополучательОрганизацияСАТУРН.Контрагент КАК Организация,
	|	НакладнаяСАТУРН.ГрузополучательОрганизацияСАТУРН КАК ОрганизацияСАТУРН,
	|	НакладнаяСАТУРН.Номер КАК НомерВходящегоДокумента,
	|	НакладнаяСАТУРН.Дата КАК ДатаВходящегоДокумента
	|ИЗ
	|	Документ.НакладнаяСАТУРН КАК НакладнаяСАТУРН
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторОрганизацийСАТУРН.МестаХранения КАК МестаХраненияГрузоотправитель
	|		ПО НакладнаяСАТУРН.ГрузоотправительОрганизацияСАТУРН = МестаХраненияГрузоотправитель.Ссылка
	|			И НакладнаяСАТУРН.ГрузоотправительМестоХранения = МестаХраненияГрузоотправитель.МестоХранения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторОрганизацийСАТУРН.МестаХранения КАК МестаХраненияГрузополучатель
	|		ПО НакладнаяСАТУРН.ГрузополучательОрганизацияСАТУРН = МестаХраненияГрузополучатель.Ссылка
	|			И НакладнаяСАТУРН.ГрузополучательМестоХранения = МестаХраненияГрузополучатель.МестоХранения
	|ГДЕ
	|	НакладнаяСАТУРН.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НакладнаяСАТУРН.Номенклатура КАК Номенклатура,
	|	НакладнаяСАТУРН.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	НакладнаяСАТУРН.Номенклатура.ВидСтавкиНДС КАК ВидСтавкиНДС,
	|	НакладнаяСАТУРН.Номенклатура.СтранаПроисхождения КАК СтранаПроисхождения,
	|	НакладнаяСАТУРН.Количество КАК Количество
	|ИЗ
	|	Документ.НакладнаяСАТУРН.Товары КАК НакладнаяСАТУРН
	|ГДЕ
	|	НакладнаяСАТУРН.Ссылка = &Ссылка";
	
	Возврат Запрос.ВыполнитьПакет();
	
КонецФункции

//Заполнение прикладных документов на основании накладной 
Процедура ЗаполнитьПоступлениеТоваровПоНакладнойСАТУРН(ДокументОбъект, ДанныеЗаполнения) Экспорт
	
	Если ТипЗнч(ДанныеЗаполнения)<> Тип("ДокументСсылка.НакладнаяСАТУРН") Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеДляЗаполнения = ИнтеграцияСАТУРНБП.ДанныеПрикладныхДокументовИзНакладнойСАТУРН(ДанныеЗаполнения);
	ТаблицаРеквизитов 	= ДанныеДляЗаполнения[0].Выгрузить();
	Шапка 				= ИнтеграцияСАТУРНБПВызовСервера.ТаблицаЗначенийВСтруктуру(ТаблицаРеквизитов);
	Товары 				= ДанныеДляЗаполнения[1].Выгрузить();
	
	ДокументОбъект.Заполнить(Шапка);
	
	ДокументОбъект.НомерВходящегоДокумента  = Шапка.НомерВходящегоДокумента;
	ДокументОбъект.ДатаВходящегоДокумента   = Шапка.ДатаВходящегоДокумента;
	ДокументОбъект.Склад 					= Шапка.Склад;
		
	ГоловнаяОрганизация = ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(ДокументОбъект.Организация);
	СписокВидовДоговоров = Новый СписокЗначений();
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);
	РаботаСДоговорамиКонтрагентовБП.УстановитьДоговорКонтрагента(ДокументОбъект.ДоговорКонтрагента, ДокументОбъект.Контрагент, ГоловнаяОрганизация, СписокВидовДоговоров);
	
	// Тип цен и валюту берем по умолчанию из договора
	Если ЗначениеЗаполнено(ДокументОбъект.ДоговорКонтрагента) Тогда
		РеквизитыДоговора 					= ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОбъект.ДоговорКонтрагента, "ВалютаВзаиморасчетов, ТипЦен");
		ДокументОбъект.ВалютаДокумента     	= РеквизитыДоговора.ВалютаВзаиморасчетов;
		ДокументОбъект.ТипЦен              	= РеквизитыДоговора.ТипЦен;
	Иначе
		ДокументОбъект.ВалютаДокумента     	= ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.ТипЦен) Тогда
		ДокументОбъект.ТипЦен = ДокументОбъект.Склад.ТипЦенРозничнойТорговли;
	КонецЕсли;
	
	СтруктураКурсаВзаиморасчетов 			= РаботаСКурсамиВалют.ПолучитьКурсВалюты(ДокументОбъект.ВалютаДокумента, ДокументОбъект.Дата);
	ДокументОбъект.КурсВзаиморасчетов      	= СтруктураКурсаВзаиморасчетов.Курс;
	ДокументОбъект.КратностьВзаиморасчетов 	= СтруктураКурсаВзаиморасчетов.Кратность;
	
	// Флаги включения налогов.
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.ТипЦен) Тогда
		ДокументОбъект.СуммаВключаетНДС = Ложь;
	Иначе
		ДокументОбъект.СуммаВключаетНДС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.ТипЦен, "ЦенаВключаетНДС");
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	ДанныеОбъекта = Новый Структура(
		"Дата, ВидОперации, Организация, Склад, ТипЦен, СуммаВключаетНДС,
		|ВалютаДокумента, КурсВзаиморасчетов, КратностьВзаиморасчетов");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, ДокументОбъект);
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.ТипЦен) Тогда 
		ДанныеОбъекта.Вставить("ЗаполнятьЦеныПродажаиПокупка", Истина); 
	КонецЕсли;
	
    СоответствиеСведенийОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОСпискеНоменклатуры(
		ОбщегоНазначения.ВыгрузитьКолонку(Товары, "Номенклатура", Истина), ДанныеОбъекта, Истина, Истина);

	Для Каждого СтрокаТоваров Из Товары Цикл
		СтрокаТабличнойЧасти 							= ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтрокаТоваров);
		
		СведенияОНоменклатуре 							= СоответствиеСведенийОНоменклатуре[СтрокаТоваров.Номенклатура];
		Если ЗначениеЗаполнено(СтрокаТоваров.Номенклатура) И СведенияОНоменклатуре <> Неопределено Тогда
			СтрокаТабличнойЧасти.ЕдиницаИзмерения		= СведенияОНоменклатуре.ЕдиницаИзмерения;
			СтрокаТабличнойЧасти.Коэффициент			= СведенияОНоменклатуре.Коэффициент;
			СтрокаТабличнойЧасти.СтавкаНДС				= СведенияОНоменклатуре.СтавкаНДС;
			СтрокаТабличнойЧасти.НомерГТД				= СведенияОНоменклатуре.НомерГТД;
			СтрокаТабличнойЧасти.СтранаПроисхождения	= СведенияОНоменклатуре.СтранаПроисхождения;
			СтрокаТабличнойЧасти.ОтражениеВУСН			= Перечисления.ОтражениеВУСН.Принимаются;
			СтрокаТабличнойЧасти.Цена					= СведенияОНоменклатуре.Цена;
		КонецЕсли;
		
		ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти);
        ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ДокументОбъект.СуммаВключаетНДС);

		СтавкаНДС 					= УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТабличнойЧасти.СтавкаНДС);
		СтрокаТабличнойЧасти.Цена  	= УчетНДСКлиентСервер.ПересчитатьЦенуПриИзмененииФлаговНалогов(СтрокаТабличнойЧасти.Цена, Истина, ДанныеОбъекта.СуммаВключаетНДС, СтавкаНДС);
		СтрокаТабличнойЧасти.Сумма 	= УчетНДСКлиентСервер.ПересчитатьЦенуПриИзмененииФлаговНалогов(СтрокаТабличнойЧасти.Сумма, Истина, ДанныеОбъекта.СуммаВключаетНДС, СтавкаНДС);
		
	КонецЦикла;
	
	СчетаУчетаВДокументах.ЗаполнитьПередОтображениемПользователю(ДокументОбъект);
	
КонецПроцедуры

Процедура ЗаполнитьВозвратТоваровОтПокупателяПоНакладнойСАТУРН(ДокументОбъект, ДанныеЗаполнения) Экспорт
		Если ТипЗнч(ДанныеЗаполнения) <> Тип("ДокументСсылка.НакладнаяСАТУРН") Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеДляЗаполнения = ИнтеграцияСАТУРНБП.ДанныеПрикладныхДокументовИзНакладнойСАТУРН(ДанныеЗаполнения);
	ТаблицаРеквизитов 	= ДанныеДляЗаполнения[0].Выгрузить();
	Шапка 				= ИнтеграцияСАТУРНБПВызовСервера.ТаблицаЗначенийВСтруктуру(ТаблицаРеквизитов);
	Товары 				= ДанныеДляЗаполнения[1].Выгрузить();
	
	ДокументОбъект.Заполнить(Шапка);
	
	Если Не ЗначениеЗаполнено(Шапка.Склад) Тогда
		Склад = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнойСклад");
	Иначе
		Склад = Шапка.Склад; 
	КонецЕсли;
	
	ДокументОбъект.Склад 					= Склад;
	ГоловнаяОрганизация = ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(ДокументОбъект.Организация);
	СписокВидовДоговоров = Новый СписокЗначений();
	СписокВидовДоговоров.Добавить(Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);
	РаботаСДоговорамиКонтрагентовБП.УстановитьДоговорКонтрагента(ДокументОбъект.ДоговорКонтрагента, ДокументОбъект.Контрагент, ГоловнаяОрганизация, СписокВидовДоговоров);
	
	// Тип цен и валюту берем по умолчанию из договора
	Если ЗначениеЗаполнено(ДокументОбъект.ДоговорКонтрагента) Тогда
		РеквизитыДоговора 					= ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОбъект.ДоговорКонтрагента, "ВалютаВзаиморасчетов, ТипЦен");
		ДокументОбъект.ВалютаДокумента     	= РеквизитыДоговора.ВалютаВзаиморасчетов;
		ДокументОбъект.ТипЦен              	= РеквизитыДоговора.ТипЦен;
	Иначе
		ДокументОбъект.ВалютаДокумента     	= ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.ТипЦен) Тогда
		ДокументОбъект.ТипЦен = ДокументОбъект.Склад.ТипЦенРозничнойТорговли;
	КонецЕсли;
	
	СтруктураКурсаВзаиморасчетов 			= РаботаСКурсамиВалют.ПолучитьКурсВалюты(ДокументОбъект.ВалютаДокумента, ДокументОбъект.Дата);
	ДокументОбъект.КурсВзаиморасчетов      	= СтруктураКурсаВзаиморасчетов.Курс;
	ДокументОбъект.КратностьВзаиморасчетов 	= СтруктураКурсаВзаиморасчетов.Кратность;
	
	// Флаги включения налогов.
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.ТипЦен) Тогда
		ДокументОбъект.СуммаВключаетНДС = Ложь;
	Иначе
		ДокументОбъект.СуммаВключаетНДС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.ТипЦен, "ЦенаВключаетНДС");
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	ДанныеОбъекта = Новый Структура(
		"Дата, ВидОперации, Организация, Склад, ТипЦен, СуммаВключаетНДС,
		|ВалютаДокумента, КурсВзаиморасчетов, КратностьВзаиморасчетов");
	ЗаполнитьЗначенияСвойств(ДанныеОбъекта, ДокументОбъект);
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.ТипЦен) Тогда 
		ДанныеОбъекта.Вставить("ЗаполнятьЦеныПродажаиПокупка", Истина); 
	КонецЕсли;
	
    СоответствиеСведенийОНоменклатуре = БухгалтерскийУчетПереопределяемый.ПолучитьСведенияОСпискеНоменклатуры(
		ОбщегоНазначения.ВыгрузитьКолонку(Товары, "Номенклатура", Истина), ДанныеОбъекта, Истина, Истина);

	Для Каждого СтрокаТоваров Из Товары Цикл
		СтрокаТабличнойЧасти 							= ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтрокаТоваров);
		
		СведенияОНоменклатуре 							= СоответствиеСведенийОНоменклатуре[СтрокаТоваров.Номенклатура];
		Если ЗначениеЗаполнено(СтрокаТоваров.Номенклатура) И СведенияОНоменклатуре <> Неопределено Тогда
			СтрокаТабличнойЧасти.СтавкаНДС				= СведенияОНоменклатуре.СтавкаНДС;
			СтрокаТабличнойЧасти.НомерГТД				= СведенияОНоменклатуре.НомерГТД;
			СтрокаТабличнойЧасти.СтранаПроисхождения	= СведенияОНоменклатуре.СтранаПроисхождения;
			СтрокаТабличнойЧасти.ОтражениеВУСН			= Перечисления.ОтражениеВУСН.Принимаются;
			СтрокаТабличнойЧасти.Цена					= СведенияОНоменклатуре.Цена;
		КонецЕсли;
		
		ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти);
        ОбработкаТабличныхЧастейКлиентСервер.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ДокументОбъект.СуммаВключаетНДС);

		СтавкаНДС 					= УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтрокаТабличнойЧасти.СтавкаНДС);
		СтрокаТабличнойЧасти.Цена  	= УчетНДСКлиентСервер.ПересчитатьЦенуПриИзмененииФлаговНалогов(СтрокаТабличнойЧасти.Цена, Истина, ДанныеОбъекта.СуммаВключаетНДС, СтавкаНДС);
		СтрокаТабличнойЧасти.Сумма 	= УчетНДСКлиентСервер.ПересчитатьЦенуПриИзмененииФлаговНалогов(СтрокаТабличнойЧасти.Сумма, Истина, ДанныеОбъекта.СуммаВключаетНДС, СтавкаНДС);
		
	КонецЦикла;
	
	СчетаУчетаВДокументах.ЗаполнитьПередОтображениемПользователю(ДокументОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ПроизводственнаяОперацияСАТУРН

Процедура ЗаполнитьШапкуПроизводственнаяОперацияСАТУРН(ДокументОбъект, ДанныеЗаполнения, Запрос)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьШапку") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ДокументОснование = ДанныеЗаполнения.Основание;
	Иначе
		ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
	КонецЕсли;
	
	ЗаполнитьОрганизациюСАТУРНИМестоХранения(ДокументОбъект, РеквизитыДокумента, Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьПроизводственнаяОперацияСАТУРН(ДокументОбъект, ДанныеЗаполнения, ИмяДокумента, ЕстьСерии)
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("НеЗаполнятьТабличнуюЧасть") Тогда
		Возврат;
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.Сырье.Очистить();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Основание = ДанныеЗаполнения.Основание;
	Иначе
		Основание = ДанныеЗаполнения;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполненияПроизводственнаяОперацияСАТУРНИзПрикладногоДокумента(ИмяДокумента, ЕстьСерии);
	
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", Основание);
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ПроизводственнаяОперацияСАТУРН.КонечныеСтатусы());
	
	Пакет = Запрос.ВыполнитьПакет();
	
	ЗаполнитьТабличнуюЧастьДокументаСАТУРН(ДокументОбъект.Товары, Пакет[Пакет.ВГраница()-1].Выбрать(), ДанныеЗаполнения);
	ЗаполнитьТабличнуюЧастьДокументаСАТУРН(ДокументОбъект.Сырье, Пакет[Пакет.ВГраница()].Выбрать(), ДанныеЗаполнения, Истина);
	
КонецПроцедуры

Функция ТекстЗапросаЗаполненияПроизводственнаяОперацияСАТУРНИзПрикладногоДокумента(ИмяДокумента, ЕстьСерии)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ПроизводственнаяОперацияСАТУРН КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовСАТУРН КАК СтатусыДокументовСАТУРН
	|		ПО СтатусыДокументовСАТУРН.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И СтатусыДокументовСАТУРН.Статус НЕ В(&КонечныеСтатусы)
	|;
	|"
	+ ?(ЕстьСерии = Ложь,
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	СУММА(Товары.Количество)                           КАК Количество,
	|	СУММА(Товары.Количество)                           КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Продукция КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияСАТУРН
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Сырье.Номенклатура      КАК Номенклатура,
	|	СУММА(Сырье.Количество) КАК Количество,
	|	СУММА(Сырье.Количество) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ Сырье
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Материалы КАК Сырье
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Сырье.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Сырье.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ПодконтрольнаяПродукцияСАТУРН
	|СГРУППИРОВАТЬ ПО
	|	Сырье.Номенклатура
	|;"
	,
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество,
	|	СУММА(Товары.Количество)                           КАК КоличествоУпаковок
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ОсобенностьУчета В(&ОсобенностьУчета)
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура                                КАК Номенклатура,
	|	Серии.Характеристика                              КАК Характеристика,
	|	Серии.Серия                                       КАК Серия,
	|	СУММА(Серии.Количество)                           КАК Количество,
	|	СУММА(Серии.Количество)                           КАК КоличествоУпаковок
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Серии КАК Серии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Серии.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Серии.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ОсобенностьУчета В(&ОсобенностьУчета)
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                           КАК Номенклатура,
	|	Товары.Характеристика                                         КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия,Товары.Серия)                            КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)                 КАК Количество,
	|	ЕСТЬNULL(Серии.КоличествоУпаковок, Товары.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Серии КАК Серии
	|			ПО Серии.Номенклатура = Товары.Номенклатура
	|			И Серии.Характеристика = Товары.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Сырье.Номенклатура      КАК Номенклатура,
	|	Сырье.Характеристика    КАК Характеристика,
	|	Сырье.Серия             КАК Серия,
	|	СУММА(Сырье.Количество) КАК Количество,
	|	СУММА(Сырье.Количество) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ Сырье
	|ИЗ
	|	Документ.ИмяПрикладногоДокумента.Сырье КАК Сырье
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Сырье.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Сырье.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ОсобенностьУчета В(&ОсобенностьУчета)
	|СГРУППИРОВАТЬ ПО
	|	Сырье.Номенклатура,
	|	Сырье.Характеристика,
	|	Сырье.Серия
	|;"
	)
	+
	"
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура          КАК Номенклатура,
	|	ТоварыСерии.Количество            КАК Количество,
	|	ТоварыСерии.КоличествоУпаковок    КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ПроизводственнаяОперацияСАТУРН.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Сырье.Номенклатура          КАК Номенклатура,
	|	Сырье.Количество            КАК Количество,
	|	Сырье.КоличествоУпаковок    КАК КоличествоУпаковок
	|ПОМЕСТИТЬ СырьеКОформлению
	|ИЗ
	|	Сырье КАК Сырье
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ПроизводственнаяОперацияСАТУРН.Сырье КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы КАК Т)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура              КАК Номенклатура,
	|	СУММА(ТоварыКОформлению.Количество)         КАК Количество,
	|	СУММА(ТоварыКОформлению.КоличествоУпаковок) КАК КоличествоУпаковок
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СырьеКОформлению.Номенклатура           КАК Номенклатура,
	|	СырьеКОформлению.Номенклатура.КодТНВЭД  КАК КодТНВЭД,
	//|	СырьеКОформлению.Номенклатура.КодОКПД2  КАК КодОКПД2,
	|	СУММА(СырьеКОформлению.Количество)      КАК Количество,
	|	СУММА(СырьеКОформлению.КоличествоУпаковок) КАК КоличествоУпаковок
	|ИЗ
	|	СырьеКОформлению КАК СырьеКОформлению
	|СГРУППИРОВАТЬ ПО
	|	СырьеКОформлению.Номенклатура,
	|	СырьеКОформлению.Номенклатура.КодОКПД2,
	|	СырьеКОформлению.Номенклатура.КодТНВЭД
	|ИМЕЮЩИЕ
	|	СУММА(СырьеКОформлению.Количество) > 0
	|";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ИмяПрикладногоДокумента",ИмяДокумента);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОбработкаЗаполненияДокументаПроизводственнаяОперацияСАТУРН(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипОснования = ОпределитьТипОснования(ДанныеЗаполнения);
	
	Если ТипОснования = Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену")Тогда
		ЗаполнитьПроизводственнуюОперациюСАТУРННаОснованииПроизводстваТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	КонецЕсли;
	
	Документы.ПроизводственнаяОперацияСАТУРН.ЗаполнитьПартии(ДокументОбъект);

КонецПроцедуры

Процедура ЗаполнитьПроизводственнуюОперациюСАТУРННаОснованииПроизводстваТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Шапка.Ссылка      КАК ДокументОснование,
	|	НЕ Шапка.Проведен КАК ЕстьОшибкиПроведен,
	|	Шапка.Организация КАК Организация,
	|	Шапка.Склад       КАК Склад,
	|	Шапка.Дата        КАК ДатаПроизводства,
	|	Шапка.Номер       КАК НомерПервичногоДокумента,
	|	Шапка.Дата        КАК ДатаПервичногоДокумента,
	|	""Производство""  КАК НаименованиеПервичногоДокумента
	|ИЗ
	|	Документ.ОтчетПроизводстваЗаСмену КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка = &ДокументОснование");
	
	ЗаполнитьШапкуПроизводственнаяОперацияСАТУРН(ДокументОбъект, ДанныеЗаполнения, Запрос);
	ЗаполнитьТабличнуюЧастьПроизводственнаяОперацияСАТУРН(ДокументОбъект, ДанныеЗаполнения, "ОтчетПроизводстваЗаСмену", Ложь);
	
КонецПроцедуры

#КонецОбласти

Функция ПолучитьУпаковкуПоЕдиницеИзмерения(ЕдиницаИзмерения) Экспорт
	
	Если ЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("166")
		Или ЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("112") Тогда
		Упаковка = ЕдиницаИзмерения.Наименование;
	Иначе
		Упаковка = "";
	КонецЕсли;
	
	Возврат Упаковка;
	
КонецФункции

Функция УстановитьВидОперацииНакладнойСАТУРН(ДокументОбъект, ДокументОснование)
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		ДокументОбъект.Операция = Перечисления.ВидыОперацийСАТУРН.НакладнаяРозничнаяТорговля;
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ТребованиеНакладная") Тогда
		ДокументОбъект.Операция = Перечисления.ВидыОперацийСАТУРН.НакладнаяСписаниеВПроизводство;
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда 
		Если ДокументОснование.Контрагент.СтранаРегистрации <> Справочники.СтраныМира.Россия Тогда
			ДокументОбъект.Операция = Перечисления.ВидыОперацийСАТУРН.НакладнаяЭкспорт;
		КонецЕсли;
	Иначе
		ДокументОбъект.Операция = Перечисления.ВидыОперацийСАТУРН.НакладнаяПеревозка;
	КонецЕсли; 
	
КонецФункции

#КонецОбласти
