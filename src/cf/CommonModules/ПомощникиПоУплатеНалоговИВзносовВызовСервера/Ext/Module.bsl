#Область СлужебныйПрограммныйИнтерфейс

Функция ПроверитьИВыгрузитьПлатежныйДокумент(Организация, ПлатежноеПоручение, УникальныйИдентификатор) Экспорт
	
	ВыгружатьСразу = ВыгружатьПлатежСразуСогласноНастройкамКлиентБанка(Организация, ПлатежноеПоручение);
	Если ВыгружатьСразу Тогда
		АдресФайла = ПомощникиПоУплатеНалоговИВзносов.ВыгрузитьПлатежныйДокумент(ПлатежноеПоручение, УникальныйИдентификатор);
		Возврат АдресФайла;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция РеквизитыПлатежногоДокументаДляОтправки(ПлатежноеПоручение) Экспорт
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПлатежноеПоручение, "Дата,СчетОрганизации");
	
КонецФункции

Процедура ЗаписатьОшибкуВыгрузкиПлатежаВЖурналРегистрации(ТекстОшибки) Экспорт
	
	ИмяСобытия = НСтр("ru = 'Выгрузка платежного поручения в файл'");
	ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка,,, ТекстОшибки);
	
КонецПроцедуры

Функция ПериодПлатежныхДокументов(ДокументыОплаты) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокДокументов", ДокументыОплаты);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МИНИМУМ(ПлатежноеПоручение.Дата) КАК НачалоПериода,
	|	МАКСИМУМ(ПлатежноеПоручение.Дата) КАК КонецПериода
	|ИЗ
	|	Документ.ПлатежноеПоручение КАК ПлатежноеПоручение
	|ГДЕ
	|	ПлатежноеПоручение.Ссылка В(&СписокДокументов)";
	
	ЗначенияПериода = Новый Структура("НачалоПериода,КонецПериода");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ЗначенияПериода, Выборка);
	КонецЕсли;
	
	Возврат ЗначенияПериода;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВыгружатьПлатежСразуСогласноНастройкамКлиентБанка(Организация, ПлатежноеПоручение)
	
	РеквизитыДокумента = РеквизитыПлатежногоДокументаДляОтправки(ПлатежноеПоручение);
	
	Возврат Обработки.КлиентБанк.ВыгружатьСразуСогласноНастройкамКлиентБанка(Организация, РеквизитыДокумента.СчетОрганизации);

КонецФункции

#КонецОбласти
