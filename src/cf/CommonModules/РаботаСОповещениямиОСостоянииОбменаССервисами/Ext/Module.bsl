#Область СлужебныйПрограммныйИнтерфейс

Функция ПараметрыОтображенияБаннера(АдресДанных) Экспорт
	
	Данные = ПолучитьИзВременногоХранилища(АдресДанных);
	Параметры = НовыйПараметрыОтображенияБаннера();
	
	ДатаЗакрытияБаннера = РаботаСОповещениямиОСостоянииОбменаССервисамиВызовСервера.ПолучитьДатуЗакрытияБаннера();
	
	ДатаОшибки = Макс(Данные.ДатаОшибкиАУСН, Данные.ДатаОшибкиДиректБанк);
	ДатаСинхронизации = Макс(Данные.ДатаСинхронизацииАУСН, Данные.ДатаСинхронизацииДиректБанк);
	
	Если Данные.ЕстьДокументыАУСНКПовторномуЧтению Тогда
		Параметры.ОтображатьНеобходимостьПовторногоЧтения = Истина;
	ИначеЕсли Данные.ЕстьОтклоненныеФНС Тогда
		Возврат Параметры;
	ИначеЕсли ЗначениеЗаполнено(Данные.ОшибкиОтправкиАУСН) Тогда
		Параметры.ОтображатьБаннерОшибки = Истина;
	ИначеЕсли ЗначениеЗаполнено(ДатаОшибки) И ДатаЗакрытияБаннера < ДатаОшибки Тогда
		Параметры.ОтображатьБаннерОшибки = Истина;
	ИначеЕсли Не ЗначениеЗаполнено(ДатаОшибки) И ДатаЗакрытияБаннера < ДатаСинхронизации Тогда
		Параметры.ОтображатьБаннерСостоянияЗагрузки = Истина;
	КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции

Функция ДанныеСостоянияОбмена(НастройкиОбмена, Ключ) Экспорт
	
	Данные = НовыйДанныеСостоянияОбмена();
	
	НастройкиДиректБанка = НастройкиОбмена.НастройкиДиректБанк;
	// Проверим наличие ошибок обмена ДиректБанка
	ТаблицаОшибок = ЭлектронноеВзаимодействиеБПВызовСервера.ТаблицаОшибокАвтоматическоеПолучениеВыписки(
		НастройкиДиректБанка);
	Если ТаблицаОшибок.Количество() <> 0 Тогда
		СтрокаТаблицыОшибок = ТаблицаОшибок.Получить(0);
		//Заполним дату ошибки в синхронизации, выбрав самую первую в истории (т.е. самую старую дату)
		Данные.ДатаОшибкиДиректБанк = СтрокаТаблицыОшибок.ДатаСинхронизации;
	КонецЕсли;
	
	НастройкиАУСН = НастройкиОбмена.НастройкиАУСН;
	СведенияОбменАУСН = РегистрыСведений.СостоянияИнтеграцииАУСН.СведенияОбОбмене(
		НастройкиАУСН.Организация, НастройкиАУСН.Банк);
	
	Данные.ЕстьОтклоненныеФНС = СведенияОбменАУСН.ЕстьОтклоненныеФНС = Истина;

	ОшибкиАУСН = СведенияОбменАУСН.Ошибки;
	ОшибкиОтправкиАУСН = СведенияОбменАУСН.ОшибкиОтправки;
	Если ЗначениеЗаполнено(ОшибкиАУСН) Тогда
		Данные.ОшибкиАУСН = ПоместитьВоВременноеХранилище(ОшибкиАУСН, Ключ);
		Данные.ДатаОшибкиАУСН = СведенияОбменАУСН.ДатаОбмена;
	ИначеЕсли ЗначениеЗаполнено(ОшибкиОтправкиАУСН) Тогда
		Данные.ОшибкиОтправкиАУСН = ПоместитьВоВременноеХранилище(ОшибкиОтправкиАУСН, Ключ);
		Данные.ДатаОшибкиАУСН = СведенияОбменАУСН.ДатаОбмена;
	КонецЕсли;
	
	Данные.ЕстьДокументыАУСНКПовторномуЧтению = СведенияОбменАУСН.ЕстьДокументыКПовторномуЧтению;
	
	Если ЗначениеЗаполнено(Данные.ДатаОшибкиДиректБанк) Или ЗначениеЗаполнено(Данные.ДатаОшибкиАУСН)
		Или Данные.ЕстьДокументыАУСНКПовторномуЧтению Тогда
		Возврат Данные;
	КонецЕсли;
	
	ТаблицаДатыСинхронизации =
		ЭлектронноеВзаимодействиеБПВызовСервера.ТаблицаДатыСинхронизацииАвтоматическоеПолучениеВыписки(НастройкиДиректБанка);
	Если ТаблицаДатыСинхронизации.Количество() <> 0 Тогда
		Данные.ДатаСинхронизацииДиректБанк = ТаблицаДатыСинхронизации[0].ДатаСинхронизации;
	КонецЕсли;
	
	Данные.ДатаСинхронизацииАУСН = СведенияОбменАУСН.ДатаОбмена;
	Данные.ЗагруженоБанковскихДокументовАУСН = СведенияОбменАУСН.ЗагруженоБанковскихДокументов;
	
	Возврат Данные;
	
КонецФункции

Функция ЗаголовкиСостоянияОбмена(ДанныеСостоянияОбмена) Экспорт
	
	Заголовки = НовыйЗаголовкиСостоянияАвтозагрузки();
	Если ДанныеСостоянияОбмена.ЕстьОтклоненныеФНС Тогда
		Заголовки.ЗаголовокВариантОтбораПредупрежденийПриЗагрузке =
			НСтр("ru = 'Есть банковские операции АУСН, отклоненные ФНС. Показать документы'");
	Иначе
		Заголовки.ЗаголовокВариантОтбораПредупрежденийПриЗагрузке = НСтр("ru = 'Показать документы'");
	КонецЕсли;
	Если ЗначениеЗаполнено(ДанныеСостоянияОбмена.ДатаОшибкиДиректБанк) Или
		ЗначениеЗаполнено(ДанныеСостоянияОбмена.ДатаОшибкиАУСН) Тогда
		Заголовки.ЗаголовокСостояниеАвтозагрузкиОшибка = ЗаголовокСостоянияОшибка(ДанныеСостоянияОбмена);
		Возврат Заголовки;
	КонецЕсли;
	Заголовки.ЗаголовокСостояниеАвтозагрузки = ЗаголовокСостоянияОбмена(ДанныеСостоянияОбмена);
	
	Возврат Заголовки;
	
КонецФункции

Функция НовыйНастройкиОбмена() Экспорт
	
	Настройки = Новый Структура;
	Настройки.Вставить("НастройкиДиректБанк", Неопределено);
	Настройки.Вставить("НастройкиАУСН", Неопределено);
	
	Возврат Настройки;
	
КонецФункции

Функция НовыйДанныеСостоянияОбмена()
	
	Данные = Новый Структура;
	Данные.Вставить("ДатаОшибкиДиректБанк", Дата(1, 1, 1));
	Данные.Вставить("ДатаОшибкиАУСН", Дата(1, 1, 1));
	Данные.Вставить("ОшибкиАУСН", "");
	Данные.Вставить("ОшибкиОтправкиАУСН", "");
	Данные.Вставить("ДатаСинхронизацииДиректБанк", Дата(1, 1, 1));
	Данные.Вставить("ДатаСинхронизацииАУСН", Дата(1, 1, 1));
	Данные.Вставить("ЗагруженоБанковскихДокументовАУСН", 0);
	Данные.Вставить("ЕстьОтклоненныеФНС", Ложь);
	Данные.Вставить("ЕстьДокументыАУСНКПовторномуЧтению", Ложь);
	
	Возврат Данные;
	
КонецФункции

Функция ЗаголовокБаннераПредупреждениеСервисАУСН(ТекстСообщения, Документ) Экспорт
	
	Результат = "";
	ДатаОтправкиСообщенияВТехподдержку = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
					РаботаСОповещениямиОСостоянииОбменаССервисамиКлиентСервер.ИмяДействияОбращениеВТехподдержку1С(),
					РаботаСОповещениямиОСостоянииОбменаССервисамиКлиентСервер.ИмяКлючаНастроекДатаОбращенияВТехподдержку1С(),
					Дата(1, 1, 1));
	ДанныеДокументаАУСН = РегистрыСведений.БанковскиеДокументыАУСН.ДанныеДокумента(Документ);
	Если ДанныеДокументаАУСН <> Неопределено Тогда
		ДатаОбменаАУСН = ДанныеДокументаАУСН.ДатаОбмена;
	Иначе
		ДатаОбменаАУСН = Дата(1, 1, 1);
	КонецЕсли;
	Если ДанныеДокументаАУСН <> Неопределено И ДанныеДокументаАУСН.ОшибкаНаСторонеБанка Тогда
		ЗаготовкаТекста = НСтр(
			"ru = '%1. Передайте в техническую поддержку <a href = ""%2"">Информацию об ошибке</a> через <a href = ""%3"">Личный кабинет</a> банка.'",
			ОбщегоНазначения.КодОсновногоЯзыка());
		Результат = СтроковыеФункции.ФорматированнаяСтрока(
			ЗаготовкаТекста,
			ТекстСообщения,
			РаботаСОповещениямиОСостоянииОбменаССервисамиКлиентСервер.ИмяДействияИнформацияОбОтклоненнойОперацииАУСН(),
			РаботаСОповещениямиОСостоянииОбменаССервисамиКлиентСервер.ИмяДействияЛичныйКабинетБанка());
	Иначе
		Если ДатаОтправкиСообщенияВТехподдержку > ДатаОбменаАУСН Тогда
			ЗаготовкаТекста = НСтр(
				"ru = '%1. Написать <a href = ""%2"">Сообщение в техническую поддержку 1С</a> (повторная отправка не требуется).'",
				ОбщегоНазначения.КодОсновногоЯзыка());
		Иначе
			ЗаготовкаТекста = НСтр(
				"ru = '%1. Написать <a href = ""%2"">Сообщение в техническую поддержку 1С</a>'",
				ОбщегоНазначения.КодОсновногоЯзыка());
		КонецЕсли;
		Результат = СтроковыеФункции.ФорматированнаяСтрока(
			ЗаготовкаТекста,
			ТекстСообщения,
			РаботаСОповещениямиОСостоянииОбменаССервисамиКлиентСервер.ИмяДействияОбращениеВТехподдержку1С());
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НовыйЗаголовкиСостоянияАвтозагрузки()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("ЗаголовокСостояниеАвтозагрузки", "");
	Заголовки.Вставить("ЗаголовокСостояниеАвтозагрузкиОшибка", "");
	Заголовки.Вставить("ЗаголовокВариантОтбораПредупрежденийПриЗагрузке", "");
	
	Возврат Заголовки;
	
КонецФункции

Функция ЗаголовокСостоянияОшибка(ДанныеСостоянияОбмена)
	
	ДатаОшибкиДиректБанк = ДанныеСостоянияОбмена.ДатаОшибкиДиректБанк;
	Если ДатаОшибкиДиректБанк > ДанныеСостоянияОбмена.ДатаОшибкиАУСН Тогда
		Если Пользователи.РолиДоступны("ПросмотрЖурналаРегистрации") Тогда
			ТекстЗаголовка =
				НСтр("ru = '%1 в %2:%3 при синхронизации с банком произошла ошибка. Подробнее в <a href = ""%4"">Журнале регистрации</a>.'");
		Иначе
			ТекстЗаголовка =
				НСтр("ru = '%1 в %2:%3 при синхронизации с банком произошла ошибка. Подробнее в журнале регистрации, обратитесь к администратору.'");
		КонецЕсли;
		ЗаголовокОшибки = СтрШаблон(
			ТекстЗаголовка,
			Формат(ДатаОшибкиДиректБанк, "ДФ=dd.MM.yyyy"),
			ОбщегоНазначенияБПКлиентСервер.ВремяЧислом(Час(ДатаОшибкиДиректБанк)),
			ОбщегоНазначенияБПКлиентСервер.ВремяЧислом(Минута(ДатаОшибкиДиректБанк)),
			РаботаСОповещениямиОСостоянииОбменаССервисамиКлиентСервер.ИмяДействияОткрытьЖурналРегистрации());
	ИначеЕсли ЗначениеЗаполнено(ДанныеСостоянияОбмена.ОшибкиАУСН) Тогда
		ОтправлятьВ1С = НеобходимоОтправитьВПоддержку1С(ДанныеСостоянияОбмена.ОшибкиАУСН);
		Если ОтправлятьВ1С Тогда
			ТекстЗаголовка = НСтр(
				"ru = 'При обмене с сервисом АУСН произошла ошибка. Написать <a href = ""%1"">Сообщение в техническую поддержку 1С</a>.'");
			ЗаголовокОшибки = СтрШаблон(
				ТекстЗаголовка, РаботаСОповещениямиОСостоянииОбменаССервисамиКлиентСервер.ИмяДействияОбращениеВТехподдержку1С());
		Иначе
			ТекстЗаголовка = НСтр(
				"ru = 'При обмене с сервисом АУСН произошла ошибка. Передайте в техническую поддержку <a href = ""%1"">Информацию об ошибке</a> через <a href = ""%2"">Личный кабинет</a> банка.'");
			ЗаголовокОшибки = СтрШаблон(
				ТекстЗаголовка,
				РаботаСОповещениямиОСостоянииОбменаССервисамиКлиентСервер.ИмяДействияИнформацияОбОшибкеАУСН(),
				РаботаСОповещениямиОСостоянииОбменаССервисамиКлиентСервер.ИмяДействияЛичныйКабинетБанка());
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(ДанныеСостоянияОбмена.ОшибкиОтправкиАУСН) Тогда
		ТекстЗаголовка = НСтр(
			"ru = 'Не удалось выполнить обмен с сервисом АУСН. Исправьте <a href = ""%1"">Ошибки заполнения реквизитов</a>'");
		ЗаголовокОшибки = СтрШаблон(
			ТекстЗаголовка,
			РаботаСОповещениямиОСостоянииОбменаССервисамиКлиентСервер.ИмяДействияИсправитьОшибкиОтправкиАУСН());
	КонецЕсли;
	
	Возврат ЗаголовокОшибки;
	
КонецФункции

Функция ЗаголовокСостоянияОбмена(ДанныеСостоянияОбмена)
	
	ТекстЗаголовка = "";
	ДатаСинхронизацииДиректБанк = ДанныеСостоянияОбмена.ДатаСинхронизацииДиректБанк;
	ДатаСинхронизацииАУСН = ДанныеСостоянияОбмена.ДатаСинхронизацииАУСН;
	ЗагруженоДокументов = ДанныеСостоянияОбмена.ЗагруженоБанковскихДокументовАУСН;
	Если ДатаСинхронизацииДиректБанк > ДатаСинхронизацииАУСН Тогда
		ТекстЗаголовка = СтрШаблон(
			НСтр("ru = '%1 в %2:%3 выполнена синхронизация с банком'"),
			Формат(ДатаСинхронизацииДиректБанк, "ДФ=dd.MM.yyyy"),
			ОбщегоНазначенияБПКлиентСервер.ВремяЧислом(Час(ДатаСинхронизацииДиректБанк)),
			ОбщегоНазначенияБПКлиентСервер.ВремяЧислом(Минута(ДатаСинхронизацииДиректБанк)));
	ИначеЕсли ЗначениеЗаполнено(ДатаСинхронизацииАУСН) И ЗагруженоДокументов > 0 Тогда
		ЗаголовокБаннера = ОбщегоНазначенияБПКлиентСервер.ФормаМножественногоЧисла(
			НСтр("ru = '%1 Выполнена синхронизация с сервисом АУСН. Загружен %2 документ'"),
			НСтр("ru = '%1 Выполнена синхронизация с сервисом АУСН. Загружено %2 документа'"),
			НСтр("ru = '%1 Выполнена синхронизация с сервисом АУСН. Загружено %2 документов'"),
			ЗагруженоДокументов);
		ТекстЗаголовка = СтрШаблон(
			ЗаголовокБаннера, ДатаСинхронизацииАУСН, ЗагруженоДокументов);
	КонецЕсли;
	
	Возврат ТекстЗаголовка;
	
КонецФункции

Функция НеобходимоОтправитьВПоддержку1С(АдресСпискаОшибок)
	
	Ошибки = ПолучитьИзВременногоХранилища(АдресСпискаОшибок);
	ОтправлятьВ1С = Ложь;
	Для Каждого Ошибка Из Ошибки Цикл
		Если Ошибка.ОтправитьВ1С Тогда
			ОтправлятьВ1С = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ОтправлятьВ1С;
	
КонецФункции

Функция НовыйПараметрыОтображенияБаннера()
	
	Параметры = Новый Структура;
	
	Параметры.Вставить("ОтображатьНеобходимостьПовторногоЧтения", Ложь);
	Параметры.Вставить("ОтображатьБаннерОшибки", Ложь);
	Параметры.Вставить("ОтображатьБаннерСостоянияЗагрузки", Ложь);
	
	Возврат Параметры;
	
КонецФункции

#КонецОбласти
