#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаписатьДатуЗакрытияБаннера() Экспорт
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		ИмяНастройкиСостояниеАвтозагрузки(),
		ИмяКлючаНастройкиДатаЗакрытияСостояниеАвтозагрузки(),
		ТекущаяДатаСеанса());
	
КонецПроцедуры

// Возвращает дату закрытия баннера оповещения о состоянии обмена с сервисами
//
// Возвращаемое значение:
//  Дата
//
Функция ПолучитьДатуЗакрытияБаннера() Экспорт
	
	Возврат ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
		ИмяНастройкиСостояниеАвтозагрузки(),
		ИмяКлючаНастройкиДатаЗакрытияСостояниеАвтозагрузки(),
		Дата(1, 1, 1));
	
КонецФункции

Функция ПараметрыОбращенияВТехподдержкуОшибкаАУСН(Данные) Экспорт
	
	Параметры = НовыйПараметрыОбращенияВТехПоддержку();
	
	Параметры.ЭтоРежимСервиса = ОбщегоНазначения.РазделениеВключено();
	
	Параметры.Тема = НСтр("ru = 'Ошибка обмена с сервисом АУСН'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	Параметры.РазделУчета = НСтр("ru = 'Синхронизация и обмен с другими программами'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	Параметры.ОжидаемоеПоведение = НСтр("ru = 'Обмен с сервисом АУСН проходит без ошибок'",
		ОбщегоНазначения.КодОсновногоЯзыка());
	
	Если ЭтоАдресВременногоХранилища(Данные) Тогда
		ДанныеСостоянияОбмена = ПолучитьИзВременногоХранилища(Данные);
		Если ЭтоАдресВременногоХранилища(ДанныеСостоянияОбмена.ОшибкиАУСН) Тогда
			Ошибки = ПолучитьИзВременногоХранилища(ДанныеСостоянияОбмена.ОшибкиАУСН);
		Иначе
			Ошибки = Неопределено;
		КонецЕсли;
		
		ТекстСообщения = Новый Массив;
		Если ТипЗнч(Ошибки) = Тип("ТаблицаЗначений") Тогда
			Для Каждого Ошибка Из Ошибки Цикл
				ТекстСообщения.Добавить(Ошибка.ТекстОшибки);
			КонецЦикла;
		КонецЕсли;
		Параметры.ПорядокВоспроизведения = СтрСоединить(ТекстСообщения, Символы.ПС);
	ИначеЕсли ТипЗнч(Данные) = Тип("Структура") Тогда
		Параметры.ПорядокВоспроизведения = ИнтеграцияАУСНВызовСервера.ТекстСообщенияОбОшибке(Данные);
	КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции

Функция ПараметрыФормыИнформацииОбОшибкеАУСН(АдресДанных) Экспорт
	
	Параметры = НовыйПараметрыФормыИнформацииОбОшибке();
	
	ДанныеСостоянияОбмена = ПолучитьИзВременногоХранилища(АдресДанных);
	Если ЭтоАдресВременногоХранилища(ДанныеСостоянияОбмена.ОшибкиАУСН) Тогда
		Ошибки = ПолучитьИзВременногоХранилища(ДанныеСостоянияОбмена.ОшибкиАУСН);
	Иначе
		Ошибки = Неопределено;
	КонецЕсли;
	
	ИдентификаторыДокументов = Новый Массив;
	ТекстСообщения = Новый Массив;
	Если ТипЗнч(Ошибки) = Тип("ТаблицаЗначений") Тогда
		Для Каждого Ошибка Из Ошибки Цикл
			ТекстСообщения.Добавить(Ошибка.ТекстОшибки);
			ИдентификаторыДокументов.Добавить(Ошибка.ИдентификаторДокумента);
		КонецЦикла;
	КонецЕсли;
	Параметры.ТекстОшибки = СтрСоединить(ТекстСообщения, Символы.ПС);
	Параметры.Документы = ИдентификаторыДокументов;
	
	Возврат Параметры;
	
КонецФункции

Функция ПараметрыФормыИнформацииОбОшибкеАУСН_ОтклоненФНС(Ссылка) Экспорт
	
	Параметры = НовыйПараметрыФормыИнформацииОбОшибке();
	Если Не РегистрыСведений.БанковскиеДокументыАУСН.ОперацияОтклоненаФНС(Ссылка) Тогда
		Возврат Параметры;
	КонецЕсли;
	
	Результат = Новый Массив;
	ТекстОшибки = РегистрыСведений.ПредупрежденияПриЗагрузкеВыписки.ПредупреждениеДляДокумента(Ссылка);
	Результат.Добавить(ТекстОшибки);
	ОтветФНС = РегистрыСведений.БанковскиеДокументыАУСН.ОтветФНС(Ссылка);
	Если ЗначениеЗаполнено(ОтветФНС) Тогда
		Результат.Добавить(ОтветФНС);
	КонецЕсли;
	Параметры.ТекстОшибки = СтрСоединить(Результат, Символы.ПС);
	
	Возврат Параметры;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИмяНастройкиСостояниеАвтозагрузки()
	
	Возврат "СостояниеАвтозагрузки";
	
КонецФункции

Функция ИмяКлючаНастройкиДатаЗакрытияСостояниеАвтозагрузки()
	
	Возврат "ДатаЗакрытияБаннера";
	
КонецФункции

Функция НовыйПараметрыОбращенияВТехПоддержку()
	
	Параметры = Новый Структура;
	
	Параметры.Вставить("ЭтоРежимСервиса", Ложь);
	Параметры.Вставить("РазделУчета", "");
	Параметры.Вставить("Тема", "");
	Параметры.Вставить("ПорядокВоспроизведения", "");
	Параметры.Вставить("ОжидаемоеПоведение", "");
	
	Возврат Параметры;
	
КонецФункции

Функция НовыйПараметрыФормыИнформацииОбОшибке()
	
	Параметры = Новый Структура;
	
	Параметры.Вставить("ТекстОшибки", "");
	Параметры.Вставить("Документы", Новый Массив);
	
	Возврат Параметры;
	
КонецФункции

#КонецОбласти
