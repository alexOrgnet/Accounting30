#Область ПрограммныйИнтерфейс

// Возвращает признак необходимости контролировать право применения спецрежима для организации
// 
// Параметры:
//   Организация - СправочникСсылка.Организации
//   НаДату - Дата, Неопределено - дата проверки
// 
// Возвращаемое значение:
//   Булево - Истина, если нужно контролировать
//
Функция Контролировать(Организация, Знач НаДату = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НаДату) Тогда
		НаДату = ТекущаяДатаСеанса();
	КонецЕсли;
	
	ПрименяемыйСпецрежим = ПрименяемыйСпецрежим(Организация, НаДату);
	
	Возврат ПрименяемыйСпецрежим.УСН Или ПрименяемыйСпецрежим.АУСН Или ПрименяемыйСпецрежим.Патент Или ПрименяемыйСпецрежим.НПД;
	
КонецФункции

// Возвращает структуру, с информацией о праве применения спецрежима
// по показателю.
//
// Параметры:
//  Организация - СправочникСсылка.Организации - Организация, для которой получаем информацию
//  ИмяПоказателя - Строка - см. процедуры ИмяПоказателяСпецрежимаДоходы() и прочие
//
// Возвращаемое значение:
//  Структура - См. НовыйИнформацияОПравеПримененияСпецрежима()
//
Функция ИнформацияОПравеПримененияСпецрежима(Организация, ИмяПоказателя) Экспорт
	
	ДатаПроверки = ОбщегоНазначения.ТекущаяДатаПользователя();
	ПрименяемыйСпецрежим = ПрименяемыйСпецрежим(Организация, ДатаПроверки);

	// Если это не спецрежим, тогда не показываем информацию
	Если Не ПрименяемыйСпецрежим.УСН И Не ПрименяемыйСпецрежим.Патент И Не ПрименяемыйСпецрежим.АУСН И Не ПрименяемыйСпецрежим.НПД Тогда
		Возврат НовыйИнформацияОПравеПримененияСпецрежима();
	КонецЕсли;
	
	ИнформацияПоПоказателю = ИнформацияПоПоказателю(ИмяПоказателя, Организация, ДатаПроверки);
	ИнформацияПоПоказателю.ПрименяетсяУСНДоходы = ПрименяемыйСпецрежим.УСНДоходы;
	
	Если Не ДостигнутоСледующееЗначениеНапоминания(ИмяПоказателя, ИнформацияПоПоказателю, Организация, ДатаПроверки) Тогда
		Возврат НовыйИнформацияОПравеПримененияСпецрежима();
	КонецЕсли;
	
	ИнформацияОПравеПримененияСпецрежима = НовыйИнформацияОПравеПримененияСпецрежима();
	ИнформацияОПравеПримененияСпецрежима.УтраченоПравоПрименения      = ИнформацияПоПоказателю.УтраченоПравоПрименения;
	ИнформацияОПравеПримененияСпецрежима.Показать                     = Истина;
	ИнформацияОПравеПримененияСпецрежима.СледующееЗначениеНапоминания =
		СледующееЗначениеНапоминания(ИнформацияПоПоказателю.Процент);
	ИнформацияОПравеПримененияСпецрежима.ОтображатьНапоминание        = 
		ИнформацияОПравеПримененияСпецрежима.СледующееЗначениеНапоминания < 100;
	ИнформацияОПравеПримененияСпецрежима.СсылкаНаПояснение = СсылкаНаПояснениеПоПравуПримененияСпецрежима(
		ИнформацияПоПоказателю,
		ПрименяемыйСпецрежим,
		ИнформацияОПравеПримененияСпецрежима.УтраченоПравоПрименения,
		ИмяПоказателя);
	ИнформацияОПравеПримененияСпецрежима.ТекстИнформации = ТекстИнформацияОПоказателе(
		ИнформацияПоПоказателю,
		ИмяПоказателя,
		ПрименяемыйСпецрежим);
	ИнформацияОПравеПримененияСпецрежима.ПодсказкаТекстИнформации = ПодсказкаИнформацииОПоказателе(
		ИнформацияПоПоказателю, ИмяПоказателя, ДатаПроверки, ПрименяемыйСпецрежим);
	ИнформацияОПравеПримененияСпецрежима.ТекстНапомнитьПозже = СтрШаблон(
		НСтр("ru='Напомнить при %1'"),
		Строка(ИнформацияОПравеПримененияСпецрежима.СледующееЗначениеНапоминания) + "%");
	Если ИнформацияОПравеПримененияСпецрежима.УтраченоПравоПрименения Тогда
		ИнформацияОПравеПримененияСпецрежима.ЦветФонаГруппы = ЦветаСтиля.ЦветФонаНекорректногоКонтрагентаВДокументе;
	КонецЕсли;
	
	Возврат ИнформацияОПравеПримененияСпецрежима;
	
КонецФункции

// Откладывает показ напоминание по показателю
//
// Параметры:
//  Организация - СправочникСсылка.Организации - Организация, для которой получаем информацию
//  ИмяПоказателя - Строка - см. процедуры ИмяПоказателяСпецрежимаДоходы() и прочие
//  СледующееЗначениеНапоминания - Число - Процент, при котором в следующий раз будет показана информация
//
Процедура ОтложитьПоказНапоминания(Организация, ИмяПоказателя, СледующееЗначениеНапоминания) Экспорт

	ИмяНастройкиПоказателя = ИмяНастройкиПравоПримененияСпецрежима() + ИмяПоказателя;
	
	// Получим ранее сохраненные данные
	СледующееНапоминание = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		ИмяНастройкиПравоПримененияСпецрежима(), 
		ИмяНастройкиПоказателя);
		
	// Если их нет, то создадим новое соответствие
	Если СледующееНапоминание = Неопределено Тогда
		СледующееНапоминание = Новый Соответствие;
	КонецЕсли;
	
	// Процент не должен быть больше 90%
	СледующееЗначениеНапоминания = Мин(СледующееЗначениеНапоминания, 90);
	ПериодНапоминания = Год(ОбщегоНазначения.ТекущаяДатаПользователя());
	
	// Получим соответствие по организациям
	НапоминаниеПоОрганизации = СледующееНапоминание[Организация];
	Если НапоминаниеПоОрганизации = Неопределено Тогда
		НапоминаниеПоДате = Новый Соответствие;
		НапоминаниеПоДате.Вставить(ПериодНапоминания, СледующееЗначениеНапоминания);
		СледующееНапоминание.Вставить(Организация, НапоминаниеПоДате);
	Иначе
		НапоминаниеПоОрганизации.Вставить(ПериодНапоминания, СледующееЗначениеНапоминания);
	КонецЕсли;
	
	// Сохраним новые настройки
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(
		ИмяНастройкиПравоПримененияСпецрежима(), 
		ИмяНастройкиПоказателя,
		СледующееНапоминание);

КонецПроцедуры

// Возвращает стоимость основных средств на указанную дату
//
// Параметры:
//  Организация - СправочникСсылка.Организации
//  ДатаПроверки - Дата
//
// Возвращаемое значение:
//  Число, Неопределено
//
Функция СтоимостьОсновныхСредств(Организация, ДатаПроверки) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("КонецПериода",  Новый Граница(КонецМесяца(ДатаПроверки), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("СчетОС",
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ОсновныеСредства));
	Запрос.УстановитьПараметр("СчетаАмортизации",
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.АмортизацияОсновныхСредств));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОсновныеСредства.Ссылка
	|ПОМЕСТИТЬ НеАмортизируемыеОС
	|ИЗ
	|	Справочник.ОсновныеСредства КАК ОсновныеСредства
	|ГДЕ
	|	ОсновныеСредства.ГруппаОС = ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокДт, 0) КАК СуммаОС
	|ПОМЕСТИТЬ ОС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонецПериода,
	|			Счет В (&СчетОС),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И НЕ Субконто1 В
	|						(ВЫБРАТЬ
	|							НеАмортизируемыеОС.Ссылка
	|						ИЗ
	|							НеАмортизируемыеОС КАК НеАмортизируемыеОС)) КАК ХозрасчетныйОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0) КАК СуммаАмортизации
	|ПОМЕСТИТЬ Амортизация
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, Счет В (&СчетаАмортизации), , Организация = &Организация) КАК ХозрасчетныйОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОС.СуммаОС - Амортизация.СуммаАмортизации КАК Показатель
	|ИЗ
	|	ОС КАК ОС,
	|	Амортизация КАК Амортизация";
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Показатель;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнформацияОПравеПримененияСпецрежима

Функция ПрименяемыйСпецрежим(Организация, НаДату)
	
	ПрименяетсяУСН = УчетнаяПолитика.ПрименяетсяУСН(Организация, НаДату);
	ПрименяетсяУСНДоходы = ПрименяетсяУСН И УчетнаяПолитика.ПрименяетсяУСНДоходы(Организация, НаДату);
	ПрименяетсяАУСН = УчетнаяПолитика.ПрименяетсяАУСН(Организация, НаДату);
	ПрименяетсяПатент = УчетнаяПолитика.ПрименяетсяУСНПатент(Организация, НаДату);
	ТолькоПатент = ПрименяетсяПатент И УчетнаяПолитика.ПрименяетсяОсобыйПорядокНалогообложения(Организация, НаДату);
	ПрименяетсяНПД = УчетнаяПолитика.ПрименяетсяНалогНаПрофессиональныйДоход(Организация, НаДату);
	
	ПрименяемыйСпецрежим = Новый Структура;
	ПрименяемыйСпецрежим.Вставить("УСН", ПрименяетсяУСН);
	ПрименяемыйСпецрежим.Вставить("УСНДоходы", ПрименяетсяУСНДоходы);
	ПрименяемыйСпецрежим.Вставить("АУСН", ПрименяетсяАУСН);
	ПрименяемыйСпецрежим.Вставить("Патент", ПрименяетсяПатент); // Совмещается с ОСНО или УСН
	ПрименяемыйСпецрежим.Вставить("ТолькоПатент", ТолькоПатент);
	ПрименяемыйСпецрежим.Вставить("НПД", ПрименяетсяНПД);

	Возврат ПрименяемыйСпецрежим;
	
КонецФункции

Функция НовыйИнформацияОПравеПримененияСпецрежима()

	Структура = Новый Структура;
	Структура.Вставить("Показать",                     Ложь);
	Структура.Вставить("УтраченоПравоПрименения",      Ложь);
	Структура.Вставить("ОтображатьНапоминание",        Ложь);
	Структура.Вставить("ТекстИнформации",              "");
	Структура.Вставить("ПодсказкаТекстИнформации",     "");
	Структура.Вставить("СсылкаНаПояснение",            "");
	Структура.Вставить("СледующееЗначениеНапоминания", 50);
	Структура.Вставить("ТекстНапомнитьПозже",          "");
	Структура.Вставить("ЦветФонаГруппы",               ЦветаСтиля.БыстрыеОтборыФонГруппы);
	
	Возврат Структура;

КонецФункции

Функция ИнформацияПоПоказателю(ИмяПоказателя, Организация, ДатаПроверки)
	
	ИнформацияПоПоказателю = НовыйИнформацияПоПоказателю();
	
	ДоступныеОрганизации = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсеОрганизацииДанныеКоторыхДоступныПоRLS(Ложь);
	Если ДоступныеОрганизации.Найти(Организация) = Неопределено Тогда
		// Организация не доступна, выполнять ничего не будем.
		Возврат ИнформацияПоПоказателю;
	КонецЕсли;
	
	Если ИмяПоказателя = ИмяПоказателяСпецрежимаДоходы() Тогда
		ИнформацияПоПоказателю = ИнформацияПоПоказателюДоходы(Организация, ДатаПроверки);
	ИначеЕсли ИмяПоказателя = ИмяПоказателяСпецрежимаОсновныеСредства() Тогда
		ИнформацияПоПоказателю = ИнформацияПоПоказателюОсновныеСредства(Организация, ДатаПроверки);
	ИначеЕсли ИмяПоказателя = ИмяПоказателяСпецрежимаРаботники() Тогда
		ИнформацияПоПоказателю = ИнформацияПоПоказателюРаботники(Организация, ДатаПроверки);
	ИначеЕсли ИмяПоказателя = ИмяПоказателяСпецрежимаТовары() Тогда
		ИнформацияПоПоказателю = ИнформацияПоПоказателюТовары(Организация, ДатаПроверки);
	КонецЕсли;
	
	Возврат ИнформацияПоПоказателю;

КонецФункции

Функция ИнформацияПоПоказателюДоходы(Организация, ДатаПроверки)
	
	ПрименяемыйСпецрежим = ПрименяемыйСпецрежим(Организация, ДатаПроверки);
	
	Если ПрименяемыйСпецрежим.Патент Тогда
		ГраницаДоходов = ГраницаДоходовОграничивающаяПравоПримененияПСН();
	ИначеЕсли ПрименяемыйСпецрежим.УСН Тогда
		ГраницаДоходов =
			КонтрольПраваПримененияСпецрежимаКлиентСервер.ГраницаДоходовДляПримененияОсновнойСтавкиУСН(ДатаПроверки);
	ИначеЕсли ПрименяемыйСпецрежим.АУСН Тогда
		ГраницаДоходов = УчетАУСН.ГраницаДоходов();
	ИначеЕсли ПрименяемыйСпецрежим.НПД Тогда
		ГраницаДоходов = НалогНаПрофессиональныйДоходКлиентСервер.ПределДоходов(ДатаПроверки);
	Иначе
		Возврат НовыйИнформацияПоПоказателю();
	КонецЕсли;

	НачалоПериода = НачалоГода(ДатаПроверки);
	КонецПериода = КонецМесяца(ДатаПроверки);
	
	Если ПрименяемыйСпецрежим.УСН Тогда
		НалоговыйПериодУСН = ИнтерфейсыВзаимодействияБРО.БлижайшийНалоговыйПериод(Организация, ДатаПроверки,
			Перечисления.ВариантыРасширенногоПервогоНалоговогоПериода.РегистрацияВДекабре);
		
		Если НалоговыйПериодУСН.Начало <= ДатаПроверки Тогда
			// Доходы контролируются с начала налогового периода.
			НачалоПериода = НалоговыйПериодУСН.Начало;
		Иначе
			// Проверка на дату ранее начала первого налогового периода не имеет смысла - деятельность отсутствует.
			Возврат НовыйИнформацияПоПоказателю();
		КонецЕсли;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Если ПрименяемыйСпецрежим.ТолькоПатент Тогда
		СуммаДоходов = СуммаДоходовПатент(Организация, НачалоПериода, КонецПериода);
	ИначеЕсли ПрименяемыйСпецрежим.Патент Или ПрименяемыйСпецрежим.УСН Тогда
		СуммаДоходов = СуммаДоходовУСН(Организация, НачалоПериода, КонецПериода);
	ИначеЕсли ПрименяемыйСпецрежим.АУСН Тогда
		СуммаДоходов = УчетАУСН.СуммаДоходов(Организация, НачалоПериода, КонецПериода);
	ИначеЕсли ПрименяемыйСпецрежим.НПД Тогда
		СуммаДоходов = НалогНаПрофессиональныйДоходВызовСервера.СуммаДоходов(Организация, НачалоПериода, КонецПериода);
	Иначе
		СуммаДоходов = 0;
	КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);
	
	ИнформацияПоПоказателю = НовыйИнформацияПоПоказателю();
	
	Если СуммаДоходов > 0 Тогда
		
		ИнформацияПоПоказателю.Показатель = СуммаДоходов;
		
		ИнформацияПоПоказателю.Граница = ГраницаДоходов;
		Если ПрименяемыйСпецрежим.УСН И Не ПрименяемыйСпецрежим.Патент Тогда
			// Повышенная ставка применяется только для УСН
			ИнформацияПоПоказателю.ГраницаПовышеннойСтавки =
				КонтрольПраваПримененияСпецрежимаКлиентСервер.ГраницаДоходовДляПримененияПовышеннойСтавкиУСН(ДатаПроверки);
		Иначе
			ИнформацияПоПоказателю.ГраницаПовышеннойСтавки = ГраницаДоходов;
		КонецЕсли;
		
		Если ИнформацияПоПоказателю.Показатель > ИнформацияПоПоказателю.Граница Тогда
			ИнформацияПоПоказателю.Процент =
				Окр(ИнформацияПоПоказателю.Показатель * 100 / ИнформацияПоПоказателю.ГраницаПовышеннойСтавки, 0);
		Иначе
			ИнформацияПоПоказателю.Процент = 
				Окр(ИнформацияПоПоказателю.Показатель * 100 / ИнформацияПоПоказателю.Граница, 0);
		КонецЕсли;
		
		ИнформацияПоПоказателю.УтраченоПравоПрименения = 
			ИнформацияПоПоказателю.Показатель > ИнформацияПоПоказателю.ГраницаПовышеннойСтавки;
		
		ИнформацияПоПоказателю.ИспользуетсяКоэффициентДефлятор = ПрименяемыйСпецрежим.УСН
			И УчетУСНКлиентСервер.ИспользуетсяКоэффициентДефлятор(ДатаПроверки);
		
	КонецЕсли;
	
	Возврат ИнформацияПоПоказателю;
	
КонецФункции

Функция СуммаДоходовУСН(Организация, НачалоПериода, КонецПериода)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот КАК Показатель
	|ПОМЕСТИТЬ втДоходы
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов.Обороты(&НачалоПериода, &КонецПериода, , Организация = &Организация) КАК КнигаУчетаДоходовИРасходовОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КнигаУчетаДоходовПатентОбороты.Графа4Оборот
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовПатент.Обороты(&НачалоПериода, &КонецПериода, , Организация = &Организация) КАК КнигаУчетаДоходовПатентОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(втДоходы.Показатель), 0) КАК Показатель
	|ИЗ
	|	втДоходы КАК втДоходы";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Окр(Выборка.Показатель, УчетУСНКлиентСервер.РазрядностьОкругленияПоказателей(КонецПериода));
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

Функция СуммаДоходовПатент(Организация, НачалоПериода, КонецПериода)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КнигаУчетаДоходовПатентОбороты.Графа4Оборот КАК Показатель
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовПатент.Обороты(&НачалоПериода, &КонецПериода,, Организация = &Организация) КАК
	|		КнигаУчетаДоходовПатентОбороты";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Показатель;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

Функция ИнформацияПоПоказателюОсновныеСредства(Организация, ДатаПроверки)
	
	ПрименяемыйСпецрежим = ПрименяемыйСпецрежим(Организация, ДатаПроверки);
	
	Если ПрименяемыйСпецрежим.УСН Тогда
		ГраницаСтоимостиОсновныхСредств = ГраницаСтоимостиОсновныхСредствОграничивающаяПравоПримененияУСН(ДатаПроверки);
	ИначеЕсли ПрименяемыйСпецрежим.АУСН Тогда
		ГраницаСтоимостиОсновныхСредств = УчетАУСН.ГраницаСтоимостиОсновныхСредств();
	Иначе
		Возврат НовыйИнформацияПоПоказателю();
	КонецЕсли;
	
	Показатель = СтоимостьОсновныхСредств(Организация, ДатаПроверки);
	
	ИнформацияПоПоказателю = НовыйИнформацияПоПоказателю();
	
	Если Показатель <> Неопределено Тогда
		
		ИнформацияПоПоказателю.Показатель = Показатель;
		ИнформацияПоПоказателю.Граница = ГраницаСтоимостиОсновныхСредств;
		ИнформацияПоПоказателю.Процент = Окр(ИнформацияПоПоказателю.Показатель * 100 / ИнформацияПоПоказателю.Граница, 0);
		ИнформацияПоПоказателю.УтраченоПравоПрименения = (ИнформацияПоПоказателю.Показатель > ИнформацияПоПоказателю.Граница);
		
	КонецЕсли;
	
	Возврат ИнформацияПоПоказателю;
	
КонецФункции

Функция ИнформацияПоПоказателюРаботники(Организация, ДатаПроверки)
	
	ПрименяемыйСпецрежим = ПрименяемыйСпецрежим(Организация, ДатаПроверки);
	
	Если ПрименяемыйСпецрежим.ТолькоПатент Тогда
		ГраницаЧисленностиРаботников = ГраницаСреднесписочнойЧисленностиРаботниковОграничивающаяПравоПримененияПатент();
	ИначеЕсли ПрименяемыйСпецрежим.УСН Тогда
		ГраницаЧисленностиРаботников =
			КонтрольПраваПримененияСпецрежимаКлиентСервер.ГраницаЧисленностиРаботниковДляПримененияОсновнойСтавкиУСН();
	ИначеЕсли ПрименяемыйСпецрежим.АУСН Тогда
		ГраницаЧисленностиРаботников =
			УчетАУСН.ГраницаЧисленностиРаботников();
	ИначеЕсли ПрименяемыйСпецрежим.НПД Тогда
		ГраницаЧисленностиРаботников = 0;
	Иначе
		Возврат НовыйИнформацияПоПоказателю();
	КонецЕсли;
	
	НачалоПериода = НачалоГода(ДатаПроверки);
	
	Если ПрименяемыйСпецрежим.УСН Тогда
		НалоговыйПериодУСН = ИнтерфейсыВзаимодействияБРО.БлижайшийНалоговыйПериод(Организация, ДатаПроверки,
			Перечисления.ВариантыРасширенногоПервогоНалоговогоПериода.РегистрацияВДекабре);
		
		Если НалоговыйПериодУСН.Начало <= ДатаПроверки Тогда
			// Численность работников контролируется с начала налогового периода.
			НачалоПериода = НалоговыйПериодУСН.Начало;
		Иначе
			// Проверка на дату ранее начала первого налогового периода не имеет смысла - деятельность отсутствует.
			Возврат НовыйИнформацияПоПоказателю();
		КонецЕсли;
	КонецЕсли;
	
	СведенияОЧисленностиРаботников = УчетЗарплаты.СреднесписочнаяЧисленность(Организация, НачалоПериода, ДатаПроверки);
	
	ИнформацияПоПоказателю = НовыйИнформацияПоПоказателю();
	ИнформацияПоПоказателю.Показатель = СведенияОЧисленностиРаботников.ЧисленностьРаботников;
	ИнформацияПоПоказателю.Граница = ГраницаЧисленностиРаботников;
	Если ПрименяемыйСпецрежим.УСН Тогда
		ИнформацияПоПоказателю.ГраницаПовышеннойСтавки =
			КонтрольПраваПримененияСпецрежимаКлиентСервер.ГраницаЧисленностиРаботниковДляПримененияПовышеннойСтавкиУСН(ДатаПроверки);
	Иначе
		ИнформацияПоПоказателю.ГраницаПовышеннойСтавки = ГраницаЧисленностиРаботников;
	КонецЕсли;
	
	Если ПрименяемыйСпецрежим.НПД Тогда
		ЕстьДоговорыПодряда = УчетЗарплаты.ЕстьДоговорыПодряда(Организация, НачалоПериода, Перечисления.Периодичность.Год);
		Если ЕстьДоговорыПодряда Или СведенияОЧисленностиРаботников.Численность > 0 Тогда
			ИнформацияПоПоказателю.Показатель = 1; // Показатель не выводится для НПД: учитываются и работники, и физлица на ГПХ
		Иначе
			ИнформацияПоПоказателю.Показатель = 0;
		КонецЕсли;
		ИнформацияПоПоказателю.Процент = ИнформацияПоПоказателю.Показатель * 100;
	ИначеЕсли ИнформацияПоПоказателю.Показатель > ИнформацияПоПоказателю.Граница Тогда
		ИнформацияПоПоказателю.Процент =
			Окр(ИнформацияПоПоказателю.Показатель * 100 / ИнформацияПоПоказателю.ГраницаПовышеннойСтавки, 0);
	Иначе
		ИнформацияПоПоказателю.Процент = Окр(ИнформацияПоПоказателю.Показатель * 100 / ИнформацияПоПоказателю.Граница, 0);
	КонецЕсли;
	
	ИнформацияПоПоказателю.УтраченоПравоПрименения =
		ИнформацияПоПоказателю.Показатель > ИнформацияПоПоказателю.ГраницаПовышеннойСтавки;
	
	Возврат ИнформацияПоПоказателю;
	
КонецФункции

Функция ТекстИнформацияОПоказателе(РезультатыПоПоказателю, ИмяПоказателя, ПрименяемыйСпецрежим)
	
	ЧастиШаблона = Новый Массив;
	
	ПараметрыТекста = Новый Структура;
	ПараметрыТекста.Вставить("Показатель", 0);
	ПараметрыТекста.Вставить("Граница", 0);
	ПараметрыТекста.Вставить("ГраницаПовышеннойСтавки", 0);
	
	Если ИмяПоказателя = ИмяПоказателяСпецрежимаДоходы() Тогда
		
		Если РезультатыПоПоказателю.УтраченоПравоПрименения Тогда
			Если ПрименяемыйСпецрежим.Патент Тогда
				ЧастиШаблона.Добавить(НСтр("ru='Доходы превысили границу применения патента'"));
			ИначеЕсли ПрименяемыйСпецрежим.УСН Тогда
				ЧастиШаблона.Добавить(НСтр("ru='Доходы превысили границу применения УСН'"));
			ИначеЕсли ПрименяемыйСпецрежим.АУСН Тогда
				ЧастиШаблона.Добавить(НСтр("ru='Доходы превысили границу применения АУСН'"));
			ИначеЕсли ПрименяемыйСпецрежим.НПД Тогда
				ЧастиШаблона.Добавить(НСтр("ru='Доходы превысили границу применения Налога на профессиональный доход'"));
			КонецЕсли;
			ЧастиШаблона.Добавить(НСтр("ru='([Показатель] при допустимых [ГраницаПовышеннойСтавки] млн руб)'"));
		ИначеЕсли КонтрольПраваПримененияСпецрежимаКлиентСервер.ПредупреждатьОВозможномПримененииПовышеннойСтавки(
			РезультатыПоПоказателю.Показатель,
			РезультатыПоПоказателю.Граница,
			РезультатыПоПоказателю.ГраницаПовышеннойСтавки) Тогда
			
			Если ПрименяемыйСпецрежим.УСН Тогда
				ЧастиШаблона.Добавить(НСтр("ru='Доходы достигли [Процент] от границы применения основной ставки [Спецрежим] ([Показатель] из [Граница] млн руб).
					|При превышении границы будет применяться повышенная ставка [ПовышеннаяСтавка]% (до [ГраницаПовышеннойСтавки] млн руб).'"));
				СтавкиУСН = УчетУСНКлиентСервер.НалоговыеСтавкиПоУмолчанию();
				ПараметрыТекста.Вставить("ПовышеннаяСтавка",
					?(РезультатыПоПоказателю.ПрименяетсяУСНДоходы,
					СтавкиУСН.СтавкаУСНДоходыПовышенная,
					СтавкиУСН.СтавкаУСНДоходыМинусРасходыПовышенная));
				ПараметрыТекста.Вставить("Спецрежим",
					?(РезультатыПоПоказателю.ПрименяетсяУСНДоходы,
					"УСН (доходы)",
					"УСН (доходы минус расходы)"));
			КонецЕсли;
		Иначе
			Если ПрименяемыйСпецрежим.Патент Тогда
				ЧастиШаблона.Добавить(НСтр("ru='Доходы достигли [Процент] от границы применения патента'"));
			ИначеЕсли ПрименяемыйСпецрежим.УСН Тогда
				ЧастиШаблона.Добавить(НСтр("ru='Доходы достигли [Процент] от границы применения УСН'"));
			ИначеЕсли ПрименяемыйСпецрежим.АУСН Тогда
				ЧастиШаблона.Добавить(НСтр("ru='Доходы достигли [Процент] от границы применения АУСН'"));
			ИначеЕсли ПрименяемыйСпецрежим.НПД  И ИмяПоказателя = ИмяПоказателяСпецрежимаДоходы() Тогда
				ЧастиШаблона.Добавить(НСтр("ru='Доходы достигли [Процент] от границы применения Налога на профессиональный доход'"));
			КонецЕсли;
			ЧастиШаблона.Добавить(НСтр("ru='([Показатель] из [ГраницаПовышеннойСтавки] млн руб)'"));
		КонецЕсли;
		
		ПараметрыТекста.Показатель = Окр(РезультатыПоПоказателю.Показатель / 1000000, 2); // в млн. рублей
		ПараметрыТекста.Граница = Окр(РезультатыПоПоказателю.Граница / 1000000, 2); // в млн. рублей
		ПараметрыТекста.ГраницаПовышеннойСтавки = Окр(РезультатыПоПоказателю.ГраницаПовышеннойСтавки / 1000000, 2); // в млн. рублей
		
	ИначеЕсли ИмяПоказателя = ИмяПоказателяСпецрежимаОсновныеСредства() Тогда
		
		Если РезультатыПоПоказателю.УтраченоПравоПрименения Тогда
			Если ПрименяемыйСпецрежим.УСН Тогда
				ЧастиШаблона.Добавить(НСтр("ru='Стоимость основных средств превысила границу применения УСН'"));
			ИначеЕсли ПрименяемыйСпецрежим.АУСН Тогда
				ЧастиШаблона.Добавить(НСтр("ru='Стоимость основных средств превысила границу применения АУСН'"));
			КонецЕсли;
		Иначе
			Если ПрименяемыйСпецрежим.УСН Тогда
				ЧастиШаблона.Добавить(НСтр("ru='Стоимость основных средств достигла [Процент] от границы применения УСН'"));
			ИначеЕсли ПрименяемыйСпецрежим.АУСН Тогда
				ЧастиШаблона.Добавить(НСтр("ru='Стоимость основных средств достигла [Процент] от границы применения АУСН'"));
			КонецЕсли;
		КонецЕсли;
		ЧастиШаблона.Добавить(НСтр("ru='([Показатель] из [Граница] млн руб)'"));
		
		ПараметрыТекста.Показатель = Окр(РезультатыПоПоказателю.Показатель / 1000000, 0); // в млн. рублей
		ПараметрыТекста.Граница = Окр(РезультатыПоПоказателю.Граница / 1000000, 2); // в млн. рублей
		ПараметрыТекста.ГраницаПовышеннойСтавки = Окр(РезультатыПоПоказателю.ГраницаПовышеннойСтавки / 1000000, 2); // в млн. рублей
		
	ИначеЕсли ИмяПоказателя = ИмяПоказателяСпецрежимаРаботники() Тогда
		
		Если РезультатыПоПоказателю.УтраченоПравоПрименения Тогда
			Если ПрименяемыйСпецрежим.УСН Тогда
				ЧастиШаблона.Добавить(НСтр("ru='Средняя численность работников превысила границу применения УСН'"));
			ИначеЕсли ПрименяемыйСпецрежим.АУСН Тогда
				ЧастиШаблона.Добавить(НСтр("ru='Средняя численность работников превысила границу применения АУСН'"));
			ИначеЕсли ПрименяемыйСпецрежим.Патент Тогда
				ЧастиШаблона.Добавить(НСтр("ru='Средняя численность работников превысила границу применения патента'"));
			ИначеЕсли ПрименяемыйСпецрежим.НПД Тогда
				ЧастиШаблона.Добавить(НСтр("ru='Приём сотрудников по трудовому договору нарушает условия применения Налога на профессиональный доход'"));
			КонецЕсли;
			
			Если Не ПрименяемыйСпецрежим.НПД Тогда
				ЧастиШаблона.Добавить(НСтр("ru='([Показатель] при допустимых [ГраницаПовышеннойСтавки] человек)'"));
			КонецЕсли;
			
		ИначеЕсли КонтрольПраваПримененияСпецрежимаКлиентСервер.ПредупреждатьОВозможномПримененииПовышеннойСтавки(
			РезультатыПоПоказателю.Показатель,
			РезультатыПоПоказателю.Граница,
			РезультатыПоПоказателю.ГраницаПовышеннойСтавки) Тогда
			
			Если ПрименяемыйСпецрежим.УСН Тогда
				ЧастиШаблона.Добавить(НСтр(
					"ru='Средняя численность работников достигла [Процент] от границы применения основной ставки [Спецрежим] ([Показатель] из [Граница] человек).
						|При превышении границы будет применяться повышенная ставка [ПовышеннаяСтавка]% (до [ГраницаПовышеннойСтавки] человек).'"));
				СтавкиУСН = УчетУСНКлиентСервер.НалоговыеСтавкиПоУмолчанию();
				ПараметрыТекста.Вставить("ПовышеннаяСтавка",
					?(РезультатыПоПоказателю.ПрименяетсяУСНДоходы,
					СтавкиУСН.СтавкаУСНДоходыПовышенная,
					СтавкиУСН.СтавкаУСНДоходыМинусРасходыПовышенная));
				ПараметрыТекста.Вставить("Спецрежим",
					?(РезультатыПоПоказателю.ПрименяетсяУСНДоходы,
					"УСН (доходы)",
					"УСН (доходы минус расходы)"));
			КонецЕсли;
		Иначе
			Если ПрименяемыйСпецрежим.УСН Тогда
				ЧастиШаблона.Добавить(НСтр("ru='Средняя численность работников достигла [Процент] от границы применения УСН'"));
			ИначеЕсли ПрименяемыйСпецрежим.АУСН Тогда
				ЧастиШаблона.Добавить(НСтр("ru='Средняя численность работников достигла [Процент] от границы применения АУСН'"));
			ИначеЕсли ПрименяемыйСпецрежим.Патент Тогда
				ЧастиШаблона.Добавить(НСтр("ru='Средняя численность работников достигла [Процент] от границы применения патента'"));
			КонецЕсли;
			ЧастиШаблона.Добавить(НСтр("ru='([Показатель] из [ГраницаПовышеннойСтавки] человек)'"));
		КонецЕсли;
		
		ПараметрыТекста.Показатель = РезультатыПоПоказателю.Показатель;
		ПараметрыТекста.Граница = РезультатыПоПоказателю.Граница;
		ПараметрыТекста.ГраницаПовышеннойСтавки = РезультатыПоПоказателю.ГраницаПовышеннойСтавки;
		
	ИначеЕсли ИмяПоказателя = ИмяПоказателяСпецрежимаТовары() Тогда
		
		Если ПрименяемыйСпецрежим.НПД Тогда
			ЧастиШаблона.Добавить(НСтр("ru='Продажа маркируемых товаров нарушает условия применения Налога на профессиональный доход'"));
		КонецЕсли;
		
		ПараметрыТекста.Показатель = РезультатыПоПоказателю.Показатель;
		ПараметрыТекста.Граница = РезультатыПоПоказателю.Граница;
		ПараметрыТекста.ГраницаПовышеннойСтавки = РезультатыПоПоказателю.ГраницаПовышеннойСтавки;
		
	КонецЕсли;
	
	ПараметрыТекста.Вставить("Процент", СтрШаблон(НСтр("ru = '%1%%'"), Строка(РезультатыПоПоказателю.Процент)));
	
	ТекстИнформации = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(
		СтрСоединить(ЧастиШаблона, " "), 
		ПараметрыТекста);
	
	Возврат ТекстИнформации;

КонецФункции

Функция ПодсказкаИнформацииОПоказателе(ИнформацияПоПоказателю, ИмяПоказателя, ДатаПроверки, ПрименяемыйСпецрежим)
	
	Если ИмяПоказателя <> ИмяПоказателяСпецрежимаДоходы() Или Не ПрименяемыйСпецрежим.УСН Тогда
		Возврат "";
	КонецЕсли;
	
	// При наличии коэффициента-дефлятора показываем подсказку, объясняющую повышенные лимиты.
	Если Не ИнформацияПоПоказателю.ИспользуетсяКоэффициентДефлятор
		И Год(ДатаПроверки) <> Год(УчетУСНКлиентСервер.ДатаНачалаПрогрессивнойШкалы()) Тогда
		Возврат "";
	КонецЕсли;
	
	// Подсказку показываем до тех пор, пока не превышен лимит применения основной ставки.
	Если Не КонтрольПраваПримененияСпецрежимаКлиентСервер.ПредупреждатьОВозможномПримененииПовышеннойСтавки(
		ИнформацияПоПоказателю.Показатель,
		ИнформацияПоПоказателю.Граница,
		ИнформацияПоПоказателю.ГраницаПовышеннойСтавки) Тогда
		
		Возврат "";
	КонецЕсли;
	
	Если Год(ДатаПроверки) = Год(УчетУСНКлиентСервер.ДатаНачалаПрогрессивнойШкалы()) Тогда
		
		Подсказка = СтроковыеФункции.ФорматированнаяСтрока(
			СтрШаблон(НСтр("ru = 'В %1 году границы применения основной и повышенной ставок УСН не индексируются.
			|<a href=""https://its.1c.ru/bmk/usn/limit_index_2021"">Подробнее на ИТС</a>'"), Формат(ДатаПроверки, "ДФ=гггг;")));
		
	Иначе
		
		КоэффициентДефлятор = УчетУСНКлиентСервер.КоэффициентДефлятор(ДатаПроверки);
		БазовыйЛимитОсновнойСтавки =
			КонтрольПраваПримененияСпецрежимаКлиентСервер.БазовыйЛимитДоходовДляПримененияОсновнойСтавкиУСН(ДатаПроверки);
		БазовыйЛимитПовышеннойСтавки =
			КонтрольПраваПримененияСпецрежимаКлиентСервер.БазовыйЛимитДоходовДляПримененияПовышеннойСтавкиУСН(ДатаПроверки);
		
		ШаблонПодсказки = НСтр("ru = 'В %1 году коэффициент-дефлятор составляет %2.
			|Граница применения основной ставки УСН: %3 млн. руб. * %2 = %4 млн. руб.
			|Граница применения повышенной ставки УСН: %5 млн. руб. * %2 = %6 млн. руб.'");
		
		Подсказка = СтрШаблон(ШаблонПодсказки,
			Формат(ДатаПроверки, "ДФ=гггг;"),
			КоэффициентДефлятор,
			Окр(БазовыйЛимитОсновнойСтавки / 1000000, 2), // в млн. рублей
			Окр(ИнформацияПоПоказателю.Граница / 1000000, 2), // в млн. рублей
			Окр(БазовыйЛимитПовышеннойСтавки / 1000000, 2), // в млн. рублей
			Окр(ИнформацияПоПоказателю.ГраницаПовышеннойСтавки / 1000000, 2)); // в млн. рублей
		
	КонецЕсли;
	
	Возврат Подсказка;
	
КонецФункции

Функция НовыйИнформацияПоПоказателю()

	Структура = Новый Структура;
	Структура.Вставить("Показатель", 0);
	Структура.Вставить("Процент", 0);
	Структура.Вставить("Граница", 0);
	Структура.Вставить("ГраницаПовышеннойСтавки", 0);
	Структура.Вставить("УтраченоПравоПрименения", Ложь);
	Структура.Вставить("ПрименяетсяУСНДоходы", Ложь);
	Структура.Вставить("ИспользуетсяКоэффициентДефлятор", Ложь);
	
	Возврат Структура;

КонецФункции

Функция ИнформацияПоПоказателюТовары(Организация, ДатаПроверки)
	
	ПрименяемыйСпецрежим = ПрименяемыйСпецрежим(Организация, ДатаПроверки);
	
	Если Не ПрименяемыйСпецрежим.НПД Тогда
		Возврат НовыйИнформацияПоПоказателю();
	КонецЕсли;

	НачалоПериода = НачалоГода(ДатаПроверки);
	КонецПериода = КонецМесяца(ДатаПроверки);
	
	УстановитьПривилегированныйРежим(Истина);
	Если ПрименяемыйСпецрежим.НПД Тогда
		КоличествоДокументовСЗапрещеннымиТоварами = КоличествоДокументовСЗапрещеннымиТоварами(Организация, НачалоПериода, КонецПериода);
	Иначе
		КоличествоДокументовСЗапрещеннымиТоварами = 0;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	ИнформацияПоПоказателю = НовыйИнформацияПоПоказателю();
	
	Если КоличествоДокументовСЗапрещеннымиТоварами > 0 Тогда
		
		ИнформацияПоПоказателю.Показатель = КоличествоДокументовСЗапрещеннымиТоварами;
		ИнформацияПоПоказателю.УтраченоПравоПрименения = Истина;
		ИнформацияПоПоказателю.Процент = ИнформацияПоПоказателю.Показатель * 100;
		
	КонецЕсли;
	
	Возврат ИнформацияПоПоказателю;
	
КонецФункции

Функция КоличествоДокументовСЗапрещеннымиТоварами(Организация, НачалоПериода, КонецПериода)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВТ.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ МаркируемыеТовары
	|ИЗ
	|	Справочник.Номенклатура КАК ВТ
	|ГДЕ
	|	НЕ ВТ.ПометкаУдаления
	|	И (ВТ.ПродукцияМаркируемаяДляГИСМ
	|			ИЛИ ВТ.ТабачнаяПродукция
	|			ИЛИ ВТ.ОбувнаяПродукция
	|			ИЛИ ВТ.ЛегкаяПромышленность
	|			ИЛИ ВТ.МолочнаяПродукцияПодконтрольнаяВЕТИС
	|			ИЛИ ВТ.Шины
	|			ИЛИ ВТ.Духи
	|			ИЛИ ВТ.Велосипеды
	|			ИЛИ ВТ.КреслаКоляски
	|			ИЛИ ВТ.Фотоаппараты
	|			ИЛИ ВТ.СредствоИндивидуальнойЗащиты
	|			ИЛИ ВТ.УпакованнаяВода
	|			ИЛИ ВТ.Антисептики
	|			ИЛИ ВТ.БАДы
	|			ИЛИ ВТ.МолочнаяПродукцияБезВЕТИС
	|			ИЛИ ВТ.АльтернативныйТабак
	|			ИЛИ ВТ.УпакованнаяВода
	|			ИЛИ ВТ.НикотиносодержащаяПродукция
	|			ИЛИ ВТ.Пиво
	|			ИЛИ ВТ.БезалкогольноеПиво
	|			ИЛИ ВТ.СоковаяПродукция)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ИспользуемыеМаркируемыеТовары.Ссылка), 0) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		МаркируемыеТовары.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаркируемыеТовары КАК МаркируемыеТовары
	|			ПО РеализацияТоваровУслугТовары.Номенклатура = МаркируемыеТовары.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|			ПО РеализацияТоваровУслугТовары.Ссылка = РеализацияТоваровУслуг.Ссылка
	|				И (РеализацияТоваровУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
	|				И (РеализацияТоваровУслуг.Проведен)
	|				И (РеализацияТоваровУслуг.Организация = &Организация)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		МаркируемыеТовары.Ссылка
	|	ИЗ
	|		Документ.СчетНаОплатуПокупателю.Товары КАК СчетНаОплатуПокупателюТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаркируемыеТовары КАК МаркируемыеТовары
	|			ПО СчетНаОплатуПокупателюТовары.Номенклатура = МаркируемыеТовары.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетНаОплатуПокупателю КАК СчетНаОплатуПокупателю
	|			ПО СчетНаОплатуПокупателюТовары.Ссылка = СчетНаОплатуПокупателю.Ссылка
	|				И (СчетНаОплатуПокупателю.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)
	|				И (СчетНаОплатуПокупателю.Проведен)
	|				И (СчетНаОплатуПокупателю.Организация = &Организация)) КАК ИспользуемыеМаркируемыеТовары";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоПериода);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Возврат Запрос.Выполнить().Выгрузить()[0].Количество;
	
КонецФункции

#КонецОбласти

#Область Напоминания

// Получим процент, при котором следующий раз покажем предупреждение пользователю
//
Функция СледующееЗначениеНапоминания(ТекущееЗначение)
	
	// Определяется шкала показа предупреждений
	Если ТекущееЗначение < 60 Тогда
		Возврат 60;
	ИначеЕсли ТекущееЗначение < 70 Тогда
		Возврат 70;
	ИначеЕсли ТекущееЗначение < 80 Тогда
		Возврат 80;
	ИначеЕсли ТекущееЗначение < 90 Тогда
		Возврат 90;
	Иначе
		Возврат 100;
	КонецЕсли;

КонецФункции

Функция ДостигнутоСледующееЗначениеНапоминания(ИмяПоказателя, ИнформацияПоПоказателю, Организация, ДатаПроверки)

	Если ИнформацияПоПоказателю.Процент < 50 Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	ИмяНастройкиПоказателя = ИмяНастройкиПравоПримененияСпецрежима() + ИмяПоказателя;
	
	СледующееНапоминание = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(
		ИмяНастройкиПравоПримененияСпецрежима(), 
		ИмяНастройкиПоказателя);
	
	Если СледующееНапоминание = Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	НапоминаниеПоОрганизации = СледующееНапоминание[Организация];
	Если НапоминаниеПоОрганизации = Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	СледующееЗначениеНапоминания = НапоминаниеПоОрганизации[Год(ДатаПроверки)];
	Если СледующееЗначениеНапоминания = Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СледующееЗначениеНапоминания <= ИнформацияПоПоказателю.Процент Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область НормативноСправочнаяИнформацияПоПравуПримененияСпецрежима

// Возвращает лимит доходов налогоплательщика, ограничивающий его право на применение патентной системы налогообложения
//
// Возвращаемое значение:
//  Число - Число - Граница доходов, ограничивающая право применения ПСН
//
Функция ГраницаДоходовОграничивающаяПравоПримененияПСН() Экспорт

	// Лимит доходов налогоплательщика, ограничивающий его право на применение ПСН
	// пп. 1 п. 6 ст. 346.45 НК РФ
	Возврат 60000000;

КонецФункции

// Возвращает лимит доходов налогоплательщика, ограничивающий его право на применение УСН
// с учетом коэффициента дефлятора для указанной даты
// 
// Возвращаемое значение:
//  Число - Число - Граница стоимости основных средств, ограничивающая право применения УСН 
//
Функция ГраницаСтоимостиОсновныхСредствОграничивающаяПравоПримененияУСН(Дата) Экспорт

	// Лимит остаточной стоимости основных средств, определяемой по правилам бухгалтерского учета.
	// См. пп. 16 п. 3 ст. 346.12 НК РФ
	ПредельнаяСтоимостьОС = 100000000;
	
	Если Год(Дата) >= 2017 Тогда
		ПредельнаяСтоимостьОС = 150000000; // Федеральный закон от 03.07.2016 N 243-ФЗ
	КонецЕсли;
	
	Возврат ПредельнаяСтоимостьОС;
	
КонецФункции

// Возвращает лимит остаточной стоимости основных средств налогоплательщика,
// ограничивающий его право на применение Автоматизированной УСН
// 
// Возвращаемое значение:
//  Число - Лимит остаточной стоимости основных средств 
//
Функция ГраницаСтоимостиОсновныхСредствОграничивающаяПравоПримененияАУСН() Экспорт

	Возврат 150000000;
	
КонецФункции

// Возвращает лимит средней численности работников
//
// Возвращаемое значение:
//  Число - Число - Граница среднесписочной численности работников, ограничивающая право применения патента 
//
Функция ГраницаСреднесписочнойЧисленностиРаботниковОграничивающаяПравоПримененияПатент() Экспорт
	
	// Лимит средней численности работников за налоговый период.
	// см. п. 5 ст. 346.43 НК РФ.
	Возврат 15;
	
КонецФункции

// Возвращает имя показателя "Доходы"
//
// Возвращаемое значение:
//   Строка - Имя показателя "Доходы"
//
Функция ИмяПоказателяСпецрежимаДоходы() Экспорт
	Возврат "Доходы";
КонецФункции

// Возвращает имя показателя "Товары"
//
// Возвращаемое значение:
//   Строка - Имя показателя "Товары"
//
Функция ИмяПоказателяСпецрежимаТовары() Экспорт
	Возврат "Товары";
КонецФункции

// Возвращает имя показателя "ОсновныеСредства"
//
// Возвращаемое значение:
//   Строка - Имя показателя "ОсновныеСредства"
//
Функция ИмяПоказателяСпецрежимаОсновныеСредства() Экспорт
	Возврат "ОсновныеСредства";
КонецФункции

// Возвращает имя показателя "Работники"
//
// Возвращаемое значение:
//   Строка - Имя показателя "Работники"
//
Функция ИмяПоказателяСпецрежимаРаботники() Экспорт
	Возврат "Работники";
КонецФункции

// Возвращает имя настройки, где хранятся напоминания
//
// Возвращаемое значение:
//   Строка - Имя настройки
//
Функция ИмяНастройкиПравоПримененияСпецрежима() Экспорт
	Возврат "ПравоПримененияСпецрежима";
КонецФункции

Функция СсылкаНаПояснениеПоПравуПримененияСпецрежима(ИнформацияПоПоказателю, ПрименяемыйСпецрежим, УтраченоПравоПрименения = Ложь, ИмяПоказателя = "")

	Если КонтрольПраваПримененияСпецрежимаКлиентСервер.ПредупреждатьОВозможномПримененииПовышеннойСтавки(
		ИнформацияПоПоказателю.Показатель,
		ИнформацияПоПоказателю.Граница,
		ИнформацияПоПоказателю.ГраницаПовышеннойСтавки) Тогда
		Возврат "";
	КонецЕсли;

	Если ПрименяемыйСпецрежим.Патент Тогда
		СсылкаНаПояснение = "http://its.1c.ru/db/taxpsn#content:9:hdoc"; // Статья "Утрата права на патентную систему налогообложения"
	ИначеЕсли ПрименяемыйСпецрежим.УСН Тогда
		Если УтраченоПравоПрименения Тогда
			СсылкаНаПояснение = "http://its.1c.ru/db/taxusn#content:65:1"; // Статья "Налогообложение при утрате права на применение УСН"
		ИначеЕсли ИмяПоказателя = ИмяПоказателяСпецрежимаДоходы() Тогда 
			СсылкаНаПояснение = "http://its.1c.ru/db/taxusn#content:64:1:issogl2209"; // Статья "Предельный размер доходов для сохранения права на применение УСН"
		ИначеЕсли ИмяПоказателя = ИмяПоказателяСпецрежимаОсновныеСредства() Тогда
			СсылкаНаПояснение = "http://its.1c.ru/db/taxusn#content:64:1:issogl2201"; // Статья "Предельная остаточная стоимость основных средств"
		ИначеЕсли ИмяПоказателя = ИмяПоказателяСпецрежимаРаботники() Тогда
			СсылкаНаПояснение = "http://its.1c.ru/db/taxusn#content:64:1:issogl2202"; // Статья "Предельная средняя численность работников"
		Иначе
			СсылкаНаПояснение = "http://its.1c.ru/db/taxusn#content:64:1:issogl1102"; // Статья "Обязательное прекращение применения УСН"
		КонецЕсли;
	ИначеЕсли УтраченоПравоПрименения
		И ПрименяемыйСпецрежим.НПД
		И ПравоДоступа("Изменение", Метаданные.РегистрыСведений.НастройкиСистемыНалогообложения) Тогда
		
		СсылкаНаПояснение = "УтратаПраваПримененияНПД";
	Иначе
		СсылкаНаПояснение = "";
	КонецЕсли;
	
	Возврат СсылкаНаПояснение;

КонецФункции

// Возвращает лимит средней численности работников.
//
// Возвращаемое значение:
//  Число - Граница среднесписочной численности работников, ограничивающая право применения ЕНВД.
//
Функция ГраницаСреднесписочнойЧисленностиРаботниковОграничивающаяПравоПримененияЕНВД() Экспорт
	
	// Лимит средней численности работников за налоговый период.
	// см. п. 2.3 ст. 346.26 НК РФ.
	Возврат 100;
	
КонецФункции

#КонецОбласти

#КонецОбласти