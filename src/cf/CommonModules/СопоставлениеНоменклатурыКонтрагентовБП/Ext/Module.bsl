
#Область ПрограммныйИнтерфейс

// Переопределяемый поиск по натуральным ключам
//
Процедура ПодобратьВариантыСопоставленияПоНатуральнымКлючам(ТаблицаНоменклатурыКонтрагентов, ДополнительныеПараметры) Экспорт

	// Поиск по идентификаторам маркетплейсов
	Если ТипЗнч(ДополнительныеПараметры.ДополнительныеПараметрыПоиска) = Тип("Структура")
		И ДополнительныеПараметры.ДополнительныеПараметрыПоиска.Свойство("Маркетплейс") Тогда
		ПодобратьВариантыСопоставленияПоИдентификаторамМаркетплейсов(ТаблицаНоменклатурыКонтрагентов, ДополнительныеПараметры.ДополнительныеПараметрыПоиска.Маркетплейс);
	КонецЕсли;
	
	НатуральныеКлючи = Неопределено;
	Если ТипЗнч(ДополнительныеПараметры.ДополнительныеПараметрыПоиска) = Тип("Структура") Тогда
		ДополнительныеПараметры.ДополнительныеПараметрыПоиска.Свойство("НатуральныеКлючи", НатуральныеКлючи);
	КонецЕсли;
	
	// Поиск по уникальному артикулу
	Если ЗначениеЗаполнено(НатуральныеКлючи) 
		И СтрНайти(НатуральныеКлючи, "Артикул") > 0 Тогда
		ПодобратьВариантыСопоставленияПоАртикулам(ТаблицаНоменклатурыКонтрагентов);
	КонецЕсли;
	
КонецПроцедуры	

// Поиск вариантов сопоставления номенклатуры по уникальным артикулам
//
Процедура ПодобратьВариантыСопоставленияПоАртикулам(ТаблицаНоменклатурыКонтрагентов)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаНоменклатурыКонтрагентов", ТаблицаНоменклатурыКонтрагентов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНоменклатурыКонтрагентов.Артикул КАК Артикул
	|ПОМЕСТИТЬ ТаблицаАртикулов
	|ИЗ
	|	&ТаблицаНоменклатурыКонтрагентов КАК ТаблицаНоменклатурыКонтрагентов
	|ГДЕ
	|	ТаблицаНоменклатурыКонтрагентов.НоменклатураИБ = НЕОПРЕДЕЛЕНО
	|	И ТаблицаНоменклатурыКонтрагентов.Артикул <> """"
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Артикул
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаАртикулов.Артикул КАК Артикул,
	|	МАКСИМУМ(Номенклатура.Ссылка) КАК НоменклатураИБ,
	|	МАКСИМУМ(Номенклатура.ЕдиницаИзмерения) КАК УпаковкаИБ,
	|	СУММА(1) КАК КоличествоСовпадений
	|ИЗ
	|	ТаблицаАртикулов КАК ТаблицаАртикулов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО ТаблицаАртикулов.Артикул = Номенклатура.Артикул
	|			И (НЕ Номенклатура.ПометкаУдаления)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаАртикулов.Артикул";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТаблицаНоменклатурыКонтрагентов.Индексы.Добавить("Артикул, НоменклатураИБ");
	Пока Выборка.Следующий() Цикл
		Если Выборка.КоличествоСовпадений > 1 Тогда
			Продолжить;
		КонецЕсли;

		Отбор = Новый Структура;
		Отбор.Вставить("Артикул", Выборка.Артикул);
		Отбор.Вставить("НоменклатураИБ", Неопределено);
		НайденныеСтроки = ТаблицаНоменклатурыКонтрагентов.НайтиСтроки(Отбор);
		Для Каждого Строка Из НайденныеСтроки Цикл
			Строка.НоменклатураИБ = Выборка.НоменклатураИБ;
					
			ВариантСопоставления = СопоставлениеНоменклатурыКонтрагентовСлужебный.НовыйВариантСопоставленияНоменклатурыБЭД();
			ВариантСопоставления.НоменклатураИБ      = Выборка.НоменклатураИБ;
			ВариантСопоставления.ПриоритетныйВариант = Истина;
			ВариантСопоставления.АртикулСопоставлен  = Истина;
			СопоставлениеНоменклатурыКонтрагентовСлужебный.ЗаполнитьВариантСопоставленияНоменклатуры(ВариантСопоставления, Строка.ВариантыСопоставленияНоменклатурыБЭД, Выборка.НоменклатураИБ);
			Если ЗначениеЗаполнено(Выборка.УпаковкаИБ) Тогда
				Строка.ВариантыСопоставленияУпаковкиБЭД.Добавить(Выборка.УпаковкаИБ);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ТаблицаНоменклатурыКонтрагентов.Индексы.Очистить();
	
КонецПроцедуры

// Поиск вариантов сопоставления номенклатуры по идентификаторам маркетплейсов
//
Процедура ПодобратьВариантыСопоставленияПоИдентификаторамМаркетплейсов(ТаблицаНоменклатурыКонтрагентов, Маркетплейс)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаНоменклатурыКонтрагентов", ТаблицаНоменклатурыКонтрагентов);
	Запрос.УстановитьПараметр("Маркетплейс", Маркетплейс);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНоменклатурыКонтрагентов.КодМагазина КАК ИдентификаторТовара
	|ПОМЕСТИТЬ ТаблицаИдентификаторовМаркетплейсов
	|ИЗ
	|	&ТаблицаНоменклатурыКонтрагентов КАК ТаблицаНоменклатурыКонтрагентов
	|ГДЕ
	|	ТаблицаНоменклатурыКонтрагентов.НоменклатураИБ = НЕОПРЕДЕЛЕНО
	|	И ТаблицаНоменклатурыКонтрагентов.КодМагазина <> """"
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторТовара
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураМаркетплейсов.ИдентификаторТовара КАК КодМагазина,
	|	СправочникНоменклатура.Ссылка КАК НоменклатураИБ,
	|	СправочникНоменклатура.ЕдиницаИзмерения КАК УпаковкаИБ
	|ИЗ
	|	ТаблицаИдентификаторовМаркетплейсов КАК ТаблицаИдентификаторовМаркетплейсов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураМаркетплейсов КАК НоменклатураМаркетплейсов
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО НоменклатураМаркетплейсов.Номенклатура = СправочникНоменклатура.Ссылка
	|		ПО ТаблицаИдентификаторовМаркетплейсов.ИдентификаторТовара = НоменклатураМаркетплейсов.ИдентификаторТовара
	|			И (НоменклатураМаркетплейсов.Маркетплейс = &Маркетплейс)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТаблицаНоменклатурыКонтрагентов.Индексы.Добавить("КодМагазина, НоменклатураИБ");
	Пока Выборка.Следующий() Цикл
		Отбор = Новый Структура;
		Отбор.Вставить("КодМагазина", Выборка.КодМагазина);
		Отбор.Вставить("НоменклатураИБ", Неопределено);
		НайденныеСтроки = ТаблицаНоменклатурыКонтрагентов.НайтиСтроки(Отбор);
		Для Каждого Строка Из НайденныеСтроки Цикл
			Строка.НоменклатураИБ = Выборка.НоменклатураИБ;
					
			ВариантСопоставления = СопоставлениеНоменклатурыКонтрагентовСлужебный.НовыйВариантСопоставленияНоменклатурыБЭД();
			ВариантСопоставления.НоменклатураИБ      = Выборка.НоменклатураИБ;
			ВариантСопоставления.ПриоритетныйВариант = Истина;
			ВариантСопоставления.ШтрихкодСопоставлен = Ложь;
			СопоставлениеНоменклатурыКонтрагентовСлужебный.ЗаполнитьВариантСопоставленияНоменклатуры(ВариантСопоставления, Строка.ВариантыСопоставленияНоменклатурыБЭД, Выборка.НоменклатураИБ);
			Если ЗначениеЗаполнено(Выборка.УпаковкаИБ) Тогда
				Строка.ВариантыСопоставленияУпаковкиБЭД.Добавить(Выборка.УпаковкаИБ);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ТаблицаНоменклатурыКонтрагентов.Индексы.Очистить();
	
КонецПроцедуры

#КонецОбласти