
#Область СлужебныеПроцедурыИФункции

// Заполняет реквизиты объекта справочника в зависимости от переданного вида контрагента
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - объект контрагент в карточке контрагента
//  Вид    - Строка - строка содержит вид контрагента
//
Процедура ПриИзмененииВидаКонтрагента(Объект, Вид) Экспорт 
	ФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
	Если Вид = "ФизическоеЛицо" Тогда
		Если Объект.СтранаРегистрации = Справочники.СтраныМира.Россия
			И Объект.ЮридическоеФизическоеЛицо <> ФизическоеЛицо Тогда
			Объект.ИНН = "";
		Иначе
			Объект.ИНН = Объект.ИНН;
		КонецЕсли;
		Объект.ЮридическоеФизическоеЛицо  = ФизическоеЛицо;
		Объект.КПП                        = "";
		Объект.РегистрационныйНомер       = "";
		Объект.СвидетельствоСерияНомер    = "";
		Объект.СвидетельствоДатаВыдачи    = Дата(1, 1, 1); // Пустая дата
		Объект.ОбособленноеПодразделение  = Ложь;
		Объект.ГосударственныйОрган       = Ложь;
		Объект.Самозанятый                = Ложь;
		Объект.ИндивидуальныйПредприниматель = Ложь;
		Объект.ВидГосударственногоОргана  = Перечисления.ВидыГосударственныхОрганов.ПустаяСсылка();
		Объект.КодГосударственногоОргана  = "";
		Если Объект.ГоловнойКонтрагент <> Объект.Ссылка Тогда
			Объект.ГоловнойКонтрагент = Объект.Ссылка;
		КонецЕсли;
	ИначеЕсли Вид = "ИндивидуальныйПредприниматель" Тогда
		Если Объект.СтранаРегистрации = Справочники.СтраныМира.Россия
			И Объект.ЮридическоеФизическоеЛицо <> ФизическоеЛицо Тогда
			Объект.ИНН = "";
		Иначе
			Объект.ИНН = Объект.ИНН;
		КонецЕсли;
		Объект.ЮридическоеФизическоеЛицо  = ФизическоеЛицо;
		Объект.КПП                        = "";
		Объект.ОбособленноеПодразделение  = Ложь;
		Объект.ГосударственныйОрган       = Ложь;
		Объект.Самозанятый                = Ложь;
		Объект.ИндивидуальныйПредприниматель = Истина;
		Объект.ВидГосударственногоОргана  = Перечисления.ВидыГосударственныхОрганов.ПустаяСсылка();
		Объект.КодГосударственногоОргана  = "";
		Если Объект.ГоловнойКонтрагент <> Объект.Ссылка Тогда
			Объект.ГоловнойКонтрагент = Объект.Ссылка;
		КонецЕсли;
	ИначеЕсли Вид = "Самозанятый" Тогда
		Если Объект.СтранаРегистрации = Справочники.СтраныМира.Россия
			И Объект.ЮридическоеФизическоеЛицо <> ФизическоеЛицо Тогда
			Объект.ИНН = "";
		Иначе
			Объект.ИНН = Объект.ИНН;
		КонецЕсли;
		Объект.ЮридическоеФизическоеЛицо  = ФизическоеЛицо;
		Объект.КПП                        = "";
		Объект.РегистрационныйНомер       = "";
		Объект.СвидетельствоСерияНомер    = "";
		Объект.СвидетельствоДатаВыдачи    = Дата(1, 1, 1); // Пустая дата
		Объект.ОбособленноеПодразделение  = Ложь;
		Объект.ГосударственныйОрган       = Ложь;
		Объект.Самозанятый                = Истина;
		Объект.ИндивидуальныйПредприниматель = Ложь;
		Объект.ВидГосударственногоОргана  = Перечисления.ВидыГосударственныхОрганов.ПустаяСсылка();
		Объект.КодГосударственногоОргана  = "";
		Если Объект.ГоловнойКонтрагент <> Объект.Ссылка Тогда
			Объект.ГоловнойКонтрагент = Объект.Ссылка;
		КонецЕсли;
	ИначеЕсли Вид = "ОбособленноеПодразделение" Тогда
		Объект.ЮридическоеФизическоеЛицо        = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
		Объект.ИНН                              = "";
		Объект.ДокументУдостоверяющийЛичность   = "";
		Объект.ОбособленноеПодразделение        = Истина;
		Объект.ГосударственныйОрган             = Ложь;
		Объект.Самозанятый                      = Ложь;
		Объект.ИндивидуальныйПредприниматель = Ложь;
		Объект.ВидГосударственногоОргана        = Перечисления.ВидыГосударственныхОрганов.ПустаяСсылка();
		Объект.КодГосударственногоОргана        = "";
		Если Объект.ГоловнойКонтрагент = Объект.Ссылка Тогда
			Объект.ГоловнойКонтрагент = Неопределено;
		КонецЕсли;
	ИначеЕсли Вид = "ГосударственныйОрган" Тогда
		Объект.ЮридическоеФизическоеЛицо        = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
		Объект.ДокументУдостоверяющийЛичность   = "";
		Объект.ОбособленноеПодразделение        = Ложь;
		Объект.СтранаРегистрации                = Справочники.СтраныМира.Россия;
		Объект.ГосударственныйОрган             = Истина;
		Объект.Самозанятый                      = Ложь;
		Объект.ИндивидуальныйПредприниматель = Ложь;
		Если Объект.ГоловнойКонтрагент <> Объект.Ссылка Тогда
			Объект.ГоловнойКонтрагент = Объект.Ссылка;
		КонецЕсли;
	Иначе
		Объект.ЮридическоеФизическоеЛицо        = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
		Объект.ИНН                              = ?(Объект.СтранаРегистрации = Справочники.СтраныМира.Россия, "", Объект.ИНН);
		Объект.КПП                              = "";
		Объект.ДокументУдостоверяющийЛичность   = "";
		Объект.ОбособленноеПодразделение        = Ложь;
		Объект.ГосударственныйОрган             = Ложь;
		Объект.Самозанятый                      = Ложь;
		Объект.ИндивидуальныйПредприниматель = Ложь;
		Объект.ВидГосударственногоОргана        = Перечисления.ВидыГосударственныхОрганов.ПустаяСсылка();
		Объект.КодГосударственногоОргана        = "";
		Если Объект.ГоловнойКонтрагент <> Объект.Ссылка Тогда
			Объект.ГоловнойКонтрагент = Объект.Ссылка;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

// Возвращает основные реквизиты юридического лица по данным ЕГРЮЛ.по ИНН
//
// Параметры:
//  ИННОбъекта - Строка - строка содержит ИНН контрагента
//  ЭтоЮрЛицо  - Булево - признак того, что контрагент является юридическим лицом
//
// Возвращаемое значение:
//  Структура:
//    * АдресРеквизитовКонтрагента - Строка - содержит адрес временного хранилища с регистрационными даннми контрагента.
//    * НаименованиеКонтрагента    - Строка - содержит наименование контрагента.
//    * ОписаниеОшибки - Строка - содержит текст ошибки, возникшей при получении данных.
//    * ЮридическоеФизическоеЛицо - ПеречислениеСсылка.ЮридическоеФизическоеЛицо - вид контрагента.
//
Функция ДанныеЕдиныхГосРеестровПоИНН(Знач ИННОбъекта, Знач ЭтоЮрЛицо) Экспорт
	ДанныеЗаполнения = Новый Структура("ОписаниеОшибки", "");
	
	ИННОбъекта = СокрП(ИННОбъекта);
	
	РезультатПроверки = ИдентификационныеНомераНалогоплательщиков.ПроверитьСоответствиеТребованиямИНН(ИННОбъекта, ЭтоЮрЛицо);
	
	Если РезультатПроверки.СоответствуетТребованиям Тогда
		
		Если РезультатПроверки.ЭтоЮрЛицо Тогда
			СведенияОКонтрагенте = РаботаСКонтрагентами.СведенияОЮридическомЛицеПоИНН(ИННОбъекта);
			РеквизитыКонтрагента = Новый Структура("ОписаниеОшибки", "");
			Если ЗначениеЗаполнено(СведенияОКонтрагенте.ОписаниеОшибки) Тогда
				РеквизитыКонтрагента.ОписаниеОшибки = СведенияОКонтрагенте.ОписаниеОшибки;
			ИначеЕсли ЗначениеЗаполнено(СведенияОКонтрагенте.ЕГРЮЛ) Тогда
				РеквизитыКонтрагента = СведенияОКонтрагенте.ЕГРЮЛ;
			Иначе
				ШаблонОписанияОшибки = НСтр("ru = 'Не удалось найти данные для заполнения реквизитов по ИНН %1.'");
				РеквизитыКонтрагента.ОписаниеОшибки = СтрШаблон(ШаблонОписанияОшибки, ИННОбъекта);
			КонецЕсли;
			РеквизитыКонтрагента.Вставить("ИНН", ИННОбъекта);
			Руководитель = Новый Структура("Фамилия, Имя, Отчество, Представление, ИНН, ДатаЗаписи, Должность");
			Если Не ЗначениеЗаполнено(РеквизитыКонтрагента.ОписаниеОшибки) Тогда
				Если ЗначениеЗаполнено(РеквизитыКонтрагента.Руководители) Тогда
					ЗаполнитьЗначенияСвойств(Руководитель, РеквизитыКонтрагента.Руководители[0]);
				Иначе
					Руководитель = Неопределено;
				КонецЕсли;
				РеквизитыКонтрагента.Вставить("Руководитель", Руководитель);
				РеквизитыКонтрагента.Вставить("КодОКВЭД",
					?(ЗначениеЗаполнено(РеквизитыКонтрагента.ВидДеятельности), РеквизитыКонтрагента.ВидДеятельности.Код, Неопределено));
				РеквизитыКонтрагента.Вставить("ЭтоОКВЭД2",  
					?(ЗначениеЗаполнено(РеквизитыКонтрагента.ВидДеятельности) И РеквизитыКонтрагента.ВидДеятельности.Классификатор = "ОКВЭД2", Истина, Ложь));
			КонецЕсли;
		Иначе
			РеквизитыКонтрагента = РаботаСКонтрагентами.РеквизитыПредпринимателяПоИНН(ИННОбъекта);
			РеквизитыКонтрагента.Вставить("КодОКВЭД",
				?(ЗначениеЗаполнено(РеквизитыКонтрагента.ВидДеятельности), РеквизитыКонтрагента.ВидДеятельности.Код, Неопределено));
			РеквизитыКонтрагента.Вставить("ЭтоОКВЭД2",  
				?(ЗначениеЗаполнено(РеквизитыКонтрагента.ВидДеятельности) И РеквизитыКонтрагента.ВидДеятельности.Классификатор = "ОКВЭД2", Истина, Ложь));
		КонецЕсли;
		
		ДобавитьЗаписьВЖурналОбИспользованииСервиса(ИННОбъекта);
		
		РеквизитыКонтрагента.Вставить("ЮридическоеФизическоеЛицо", 
			?(РезультатПроверки.ЭтоЮрЛицо, Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо, Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо));
		
		Если ЗначениеЗаполнено(РеквизитыКонтрагента.ОписаниеОшибки) Тогда
			ДанныеЗаполнения.ОписаниеОшибки = РеквизитыКонтрагента.ОписаниеОшибки;
		Иначе
			ДанныеЗаполнения.Вставить("НаименованиеКонтрагента", РеквизитыКонтрагента.Наименование);
			ДанныеЗаполнения.Вставить("ЮридическоеФизическоеЛицо", РеквизитыКонтрагента.ЮридическоеФизическоеЛицо);
			ДанныеЗаполнения.Вставить("АдресРеквизитовКонтрагента", ПоместитьВоВременноеХранилище(РеквизитыКонтрагента, Новый УникальныйИдентификатор));
		КонецЕсли;
	Иначе
		ДанныеЗаполнения.ОписаниеОшибки = РезультатПроверки.ОписаниеОшибки;
	КонецЕсли;
	
	Возврат ДанныеЗаполнения;
КонецФункции

Процедура ДобавитьЗаписьВЖурналОбИспользованииСервиса(ИННОбъекта)
	
	ЗаписьЖурналаРегистрации(НСтр("ru = 'Заполнение контрагента'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
		УровеньЖурналаРегистрации.Информация, Метаданные.Справочники.Контрагенты, ,
		СтрШаблон(НСтр("ru = 'Выполнено заполнение реквизитов контрагента по ИНН %1'"), ИННОбъекта));
	
КонецПроцедуры

// Возвращает основной банковский счет или Неопределено
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - объект контрагент в карточке контрагента
//
// Возвращаемое значение:
//  СправочникОбъект.БанковскиеСчета
//  Неопределено
//
Функция ПрочитатьОсновнойБанковскийСчет(Объект) Экспорт
	
	Если ЗначениеЗаполнено(Объект.ОсновнойБанковскийСчет) Тогда
		ОсновнойБанковскийСчетОбъект = Объект.ОсновнойБанковскийСчет.ПолучитьОбъект();
	ИначеЕсли ПравоДоступа("Добавление", Метаданные.Справочники.БанковскиеСчета) Тогда
		ОсновнойБанковскийСчетОбъект = Справочники.БанковскиеСчета.СоздатьЭлемент();
	Иначе
		ОсновнойБанковскийСчетОбъект = Неопределено;
	КонецЕсли;
	
	Возврат ОсновнойБанковскийСчетОбъект;
	
КонецФункции

// Возвращает результат проверки на дубли контрагента
//
// Параметры:
//  Контрагент - СправочникСсылка.Контрагенты - ссылка на проверяемого контрагента
//
// Возвращаемое значение:
//  Булево
//
Функция ПроверитьДубли(Знач Контрагент) Экспорт
	
	Возврат Справочники.Контрагенты.ПроверитьДубли(Контрагент);
	
КонецФункции

// Устанавливает ИНН обособленного подразделения контрагенту
//
// Параметры:
//  Объект - ДанныеФормыСтруктура - объект контрагент в карточке контрагента
//
Процедура УстановитьИННОбособленногоПодразделения(Объект) Экспорт
	
	Если Не Объект.ОбособленноеПодразделение Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ГоловнойКонтрагент) Тогда
		ИННГоловногоКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ГоловнойКонтрагент, "ИНН");
		Если Объект.ИНН <> ИННГоловногоКонтрагента Тогда
			Объект.ИНН = ИННГоловногоКонтрагента;
		КонецЕсли;
	Иначе
		Объект.ИНН = "";
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти