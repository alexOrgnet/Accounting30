#Область ПрограммныйИнтерфейс

Процедура ПроверитьИННКПП(Форма, ПроверитьИНН, ПроверитьКПП) Экспорт
	
	ЭтоЮрЛицо = Форма.ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо");
	
	Если ПроверитьИНН Тогда
		
		РезультатПроверки  = ИдентификационныеНомераНалогоплательщиков.ПроверитьСоответствиеТребованиямИНН(Форма.ИНН, ЭтоЮрЛицо);
		Форма.ОшибокПоИННнет     = НЕ ЗначениеЗаполнено(РезультатПроверки.ОписаниеОшибки);
		
		Форма.РезультатПроверкиИНН = Новый ФорматированнаяСтрока(РезультатПроверки.ОписаниеОшибки,, Форма.ЦветВыделенияНекорректногоЗначение);
		
		Форма.НадписьПоясненияНекорректногоИНН = Новый ФорматированнаяСтрока(Форма.РезультатПроверкиИНН);
		Форма.Элементы.НадписьПоясненияНекорректногоИНН.Видимость = НЕ ПустаяСтрока(Форма.РезультатПроверкиИНН);
		
	КонецЕсли;
	
	Если ПроверитьКПП Тогда
		
		РезультатПроверки = ИдентификационныеНомераНалогоплательщиков.ПроверитьСоответствиеТребованиямФорматаКПП(Форма.КПП, ЭтоЮрЛицо);
		Форма.ОшибокПоКППнет = РезультатПроверки.СоответствуетТребованиям;
		
		Форма.РезультатПроверкиКПП = Новый ФорматированнаяСтрока(РезультатПроверки.ОписаниеОшибки,, Форма.ЦветВыделенияНекорректногоЗначение);
		
		Форма.НадписьПоясненияНекорректногоКПП = Новый ФорматированнаяСтрока(Форма.РезультатПроверкиКПП);
		Форма.Элементы.НадписьПоясненияНекорректногоКПП.Видимость = НЕ ПустаяСтрока(Форма.РезультатПроверкиКПП);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьВидимостьПолейКонтрагента(Форма, ОтображатьРеквизитыФизЛица = Истина) Экспорт
	
	ЭтоЮридическоеЛицо = 
		Форма.ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо");
	
	ЭтоФизическоеЛицо = 
		Форма.ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо");
	
	Элементы = Форма.Элементы;
	
	ВидимостьГруппыПоискаИНННаименование = ЭтоЮридическоеЛицо И Форма.ЗаполнениеРеквизитовПлашкой;
	Элементы.ПолеПоискаИНННаименование.Видимость = ВидимостьГруппыПоискаИНННаименование;
	Элементы.ЗаполнитьРеквизитыПоДаннымЕГР.Видимость = ВидимостьГруппыПоискаИНННаименование;
	
	Элементы.Наименование.Видимость = ЭтоЮридическоеЛицо;
	Элементы.КнопкаЗаполнитьРеквизитыПоНаименованию.Видимость = НЕ Форма.ЗаполнениеРеквизитовПлашкой И ЭтоЮридическоеЛицо;
	
	Если Элементы.Найти("ФИО") <> Неопределено Тогда
		Элементы.ФИО.Видимость = ЭтоФизическоеЛицо;
	КонецЕсли;
	
	Элементы.ИНН.Видимость = ОтображатьРеквизитыФизЛица ИЛИ ЭтоЮридическоеЛицо;
	Элементы.КомандаЗаполнитьПоИНН.Видимость = НЕ Форма.ЗаполнениеРеквизитовПлашкой И ЭтоЮридическоеЛицо;
	
	Элементы.КПП.Видимость       = ЭтоЮридическоеЛицо;
	
	Если Элементы.Найти("ОКТМО") <> Неопределено Тогда
		Элементы.ОКТМО.Видимость     = ОтображатьРеквизитыФизЛица ИЛИ ЭтоЮридическоеЛицо;
	КонецЕсли;
	
	Элементы.НадписьПоясненияНекорректногоИНН.Видимость = (ОтображатьРеквизитыФизЛица ИЛИ ЭтоЮридическоеЛицо) 
		И НЕ ПустаяСтрока(Форма.РезультатПроверкиИНН);
	Элементы.НадписьПоясненияНекорректногоКПП.Видимость = ЭтоЮридическоеЛицо И НЕ ПустаяСтрока(Форма.РезультатПроверкиКПП);
	
КонецПроцедуры

Процедура УстановитьКлючСохраненияПоложенияОкна(Форма, ПрефиксКлючаСохранения) Экспорт
	
	ЭтоЮридическоеЛицо = 
		Форма.ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо");
	ЭтоФизическоеЛицо = 
		Форма.ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо");
	
	Если ЭтоЮридическоеЛицо Тогда
		ИмяКлюча = ПрефиксКлючаСохранения + ?(Форма.ЗаполнениеРеквизитовПлашкой,
			"ЮридическоеЛицо", "ЮридическоеЛицоНовый");
	ИначеЕсли ЭтоФизическоеЛицо Тогда
		ИмяКлюча = ПрефиксКлючаСохранения + "ФизическоеЛицо";
	Иначе
		ИмяКлюча = ПрефиксКлючаСохранения;
	КонецЕсли;
	
	Форма.КлючСохраненияПоложенияОкна = ИмяКлюча;
	
КонецПроцедуры

// Возвращает структуру вариантов действия с налогом к возврату.
// 
// Возвращаемое значение:
//   Структура - Описание:
//     * НеВозвращать - Строка - не заполнять заявление на возврат налога.
//     * ВернутьНаСчет - Строка - заполнить заявление на возврат налога на банковский счет.
//
Функция ВариантыДействийСНалогомКВозврату() Экспорт
	
	Варианты = Новый Структура;
	Варианты.Вставить("ВернутьНаСчет", "ВернутьНаСчет");
	Варианты.Вставить("НеВозвращать", "НеВозвращать");
	
	Возврат Варианты;
	
КонецФункции

// Возвращает имя периода, который используется как суффикс для показателей.
//
// Параметры:
// - НомерПериода - Число - Номер периода по порядку 
//
// Возвращаемое значение:
//   Строка - Имя периода
//
Функция ИмяПериодаНарастающимИтогом(НомерПериода) Экспорт
	
	Если НомерПериода = 1 Тогда
		Возврат "1Квартал";
	ИначеЕсли НомерПериода = 2 Тогда
		Возврат "Полугодие";
	ИначеЕсли НомерПериода = 3 Тогда
		Возврат "9Месяцев";
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции 

// Управление свойствами формы
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма
//
Процедура УправлениеФормой(Форма) Экспорт

	Элементы = Форма.Элементы;
	
	КоличествоДоступныхДоходов = Форма.РаспределениеПоДоходам.Количество();
	
	Если Элементы.Найти("ВидДохода") <> Неопределено Тогда
		Элементы.ВидДохода.Видимость = (КоличествоДоступныхДоходов = 0);
	КонецЕсли;
	
	Элементы.ГруппаВидДохода.Видимость = (КоличествоДоступныхДоходов > 0);
	Элементы.ОдинВидДохода.Видимость = (КоличествоДоступныхДоходов = 1);
	Элементы.ГруппаНесколькоДоходов.Видимость = (КоличествоДоступныхДоходов > 1);
	Элементы.РаспределениеПоДоходам.Видимость = (Форма.ВариантРаспределенияВычета = 1);
	Элементы.ВидДоходаВычета.Доступность = (Форма.ВариантРаспределенияВычета = 0);
	
	ВычетУказан = (Форма.СуммаВычета > 0);
	
	Элементы.ВариантРаспределенияВычетаНадпись.Доступность = ВычетУказан;
	Элементы.ГруппаВариантыРаспределенияВычета.Доступность = ВычетУказан;
	Элементы.РаспределениеПоДоходам.Доступность = ВычетУказан;
	
	Если Форма.РаспределениеПоДоходам.Итог("СуммаВычета") > Форма.СуммаВычета Тогда
		РаспределитьСуммуВычета(Форма);
	КонецЕсли;
	
	Форма.НалоговаяБазаВсего = Форма.РаспределениеПоДоходам.Итог("НалоговаяБаза");
	Форма.РаспределеноВычетаВсего = Форма.РаспределениеПоДоходам.Итог("СуммаВычета");
	
	Если Элементы.Найти("ДекорацияСуммаВычета") <> Неопределено Тогда
		
		Если ВычетУказан Тогда
			Элементы.ДекорацияСуммаВычета.Заголовок = СтрШаблон(
				НСтр("ru = 'Вам полагается вычет в размере: %1 руб.'"),
				Формат(Форма.СуммаВычета, "ЧДЦ=2;"));
		Иначе
			Элементы.ДекорацияСуммаВычета.Заголовок = НСтр("ru = 'Имущественный вычет был применён ранее'");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Распределяет сумму положенного вычета по умолчанию: по попрядку следования доходов
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма, для которой настраивается распределение вычета по доходам
//
Процедура РаспределитьСуммуВычета(Форма) Экспорт
	
	СуммаКРаспределению = Форма.СуммаВычета;
	
	Для Каждого ТекущаяСтрока Из Форма.РаспределениеПоДоходам Цикл
		Если СуммаКРаспределению <= 0 Тогда
			ТекущаяСтрока.СуммаВычета = 0;
			Продолжить;
		КонецЕсли; 
		ТекущаяСтрока.СуммаВычета = Мин(СуммаКРаспределению, ТекущаяСтрока.НалоговаяБаза);
		СуммаКРаспределению = СуммаКРаспределению - ТекущаяСтрока.СуммаВычета;
	КонецЦикла;
	
	Форма.НалоговаяБазаВсего = Форма.РаспределениеПоДоходам.Итог("НалоговаяБаза");
	Форма.РаспределеноВычетаВсего = Форма.РаспределениеПоДоходам.Итог("СуммаВычета");
	
КонецПроцедуры

// Возвращает идентификатор обозначения вида дохода от продажи цифровых активов
//
// Возвращаемое значение:
//   Строка - Вид дохода от продажи цифровых активов и криптовалюты
//
Функция ВидДоходаКриптовалюта() Экспорт
	
	Возврат "Криптовалюта";
	
КонецФункции

// Возвращает признак разделения шага помощника на отдельные этапы: доходы и вычеты
//
// Параметры:
//   ВыбраннаяФорма - Строка - Имя формы регламентированного отчета Декларации 3-НДФЛ
//
// Возвращаемое значение:
//   Булево - Истина для формы декларации 3-НДФЛ с 2021 г.
//
Функция ВычетыРаспределяютсяПоДоходам(ВыбраннаяФорма) Экспорт
	
	Если ВыбраннаяФорма = "ФормаОтчета2021кв1"
		Или ВыбраннаяФорма = "ФормаОтчета2020кв1"
		Или ВыбраннаяФорма = "ФормаОтчета2019кв1"
		Или ВыбраннаяФорма = "ФормаОтчета2018кв1" Тогда
			
		Возврат Ложь;
	
	Иначе
		
		Возврат Истина;
		
	КонецЕсли;
	
КонецФункции

// Возвращает идентификатор прогрессивной ставки НДФЛ
//
// Возвращаемое значение:
//    Число - идентификатор прогрессивной шкалы НДФЛ
//
Функция ИдентификаторСтавкиПрогрессивнойШкалы() Экспорт
	
	Возврат "13/15";
	
КонецФункции

#КонецОбласти