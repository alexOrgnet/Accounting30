
#Область ПрограммныйИнтерфейс

// Заполняет параметры сообщения электронной почты, отправляемого без шаблона.
// См. ПереводыСБПc2bКлиентПереопределяемый.ПриЗаполненииПараметровСообщенияБезШаблонаСБП
//
Процедура ПриЗаполненииПараметровСообщенияБезШаблонаСБП(ПараметрыСообщения, ПараметрыОперации) Экспорт
	
	ИнтеграцияССБПБПВызовСервера.ПриЗаполненииПараметровСообщенияБезШаблонаСБП(ПараметрыСообщения, ПараметрыОперации);
	
КонецПроцедуры

Функция ВозвратОплаты(ДокументВозврат, ДокументПродажи, ПараметрыОперации, Форма, ОповещениеОЗавершении) Экспорт
	
	РезультатВозвратОплаты = ИнтеграцияССБПБПВызовСервера.ВозвратОплаты(
		ДокументВозврат, ДокументПродажи, ПараметрыОперации);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма",                  Форма);
	ДополнительныеПараметры.Вставить("ДокументВозврат",        ДокументВозврат);
	ДополнительныеПараметры.Вставить("ПараметрыОперации",      ПараметрыОперации);
	ДополнительныеПараметры.Вставить("РезультатВозвратОплаты", РезультатВозвратОплаты);
	ДополнительныеПараметры.Вставить("ОповещениеОЗавершении",  ОповещениеОЗавершении);
	
	Если РезультатВозвратОплаты.СтатусОперации = "Выполнена"
		Или РезультатВозвратОплаты.СтатусОперации = "Ошибка" Тогда
		
		ВыполнитьОбработкуОповещения(ОповещениеОЗавершении, НовыйРезультатОперации(РезультатВозвратОплаты.ИнформацияОбОшибке));
	Иначе
		// запустим длительную операцию проверки статуса возврата
		ДлительнаяОперация = ИнтеграцияССБПБПВызовСервера.СтатусВозврата(
			Форма.УникальныйИдентификатор, ДокументВозврат, ПараметрыОперации.НастройкаИнтеграции);
		
		СтатусВозвратаЗавершение = Новый ОписаниеОповещения("СтатусВозвратаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
		ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Региструем возврат в СБП'");
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, СтатусВозвратаЗавершение, ПараметрыОжидания);
	КонецЕсли;
	
КонецФункции

Процедура ВозвратОплатыПодтверждениеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	РезультатВозвратОплаты = ИнтеграцияССБПБПВызовСервера.ПодтвердитьВозврат(
		ДополнительныеПараметры.ДокументВозврат, ДополнительныеПараметры.ПараметрыОперации.НастройкиИнтеграции);
	Если РезультатВозвратОплаты.СтатусОперации = "Выполнена" 
		ИЛИ РезультатВозвратОплаты.СтатусОперации = "Ошибка" Тогда
		
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении, РезультатВозвратОплаты);
	Иначе
		// запустим длительную операцию проверки статуса возврата
		ДлительнаяОперация = ИнтеграцияССБПБПВызовСервера.СтатусВозврата(
			ДополнительныеПараметры.Форма.УникальныйИдентификатор,
			ДополнительныеПараметры.ДокументВозврат,
			ДополнительныеПараметры.ПараметрыОперации.НастройкаИнтеграции);
		
		СтатусВозвратаЗавершение = Новый ОписаниеОповещения("СтатусВозвратаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ДополнительныеПараметры.Форма);
		ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Региструем возврат в СБП'");
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, СтатусВозвратаЗавершение, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

Процедура СтатусВозвратаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат.Статус = "Выполнено" Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Не удалось произвести возврат покупателю. Повторите операцию позже.'"));
		Возврат;
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(
		ДополнительныеПараметры.ОповещениеОЗавершении, НовыйРезультатОперации(Результат.ПодробноеПредставлениеОшибки));
	
КонецПроцедуры

Процедура ПроверитьОплату(ДокументПродажи, ПараметрыОперации, Форма, ОповещениеОЗавершении) Экспорт
	
	ДлительнаяОперация = ИнтеграцияССБПБПВызовСервера.СтатусОплаты(
		Форма.УникальныйИдентификатор, ДокументПродажи, ПараметрыОперации.НастройкаИнтеграции);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Ожидание оплаты от покупателя'");
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция НовыйРезультатОперации(СообщениеОбОшибке)
	
	Результат = Новый Структура;
	Результат.Вставить("Результат",         НЕ ЗначениеЗаполнено(СообщениеОбОшибке));
	Результат.Вставить("СообщениеОбОшибке", СообщениеОбОшибке);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
