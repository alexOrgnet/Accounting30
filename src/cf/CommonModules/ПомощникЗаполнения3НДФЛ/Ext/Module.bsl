#Область ПрограммныйИнтерфейс

Процедура ИсточникДоходовПриСозданииНаСервере(Форма, ОтображатьРеквизитыФизЛица = Истина) Экспорт
	
	Форма.ЦветВыделенияНекорректногоЗначение = ЦветаСтиля.ЦветВыделенияКонтрагентаСОшибкой;
	
	Если ЗначениеЗаполнено(Форма.ИНН) ИЛИ ЗНачениеЗаполнено(Форма.КПП) Тогда
		ПомощникЗаполнения3НДФЛКлиентСервер.ПроверитьИННКПП(Форма, Истина, Истина);
	КонецЕсли;
	
	ПомощникЗаполнения3НДФЛКлиентСервер.УстановитьВидимостьПолейКонтрагента(Форма, ОтображатьРеквизитыФизЛица);
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеРеквизитовИсточникаДоходов(Форма, МассивНепроверяемыхРеквизитов, Отказ) Экспорт
	
	Если Форма.ВидКонтрагента = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ФИО");
		
		Если ЗначениеЗаполнено(Форма.КПП)
			И НЕ Форма.ОшибокПоКППнет Тогда
			
			ОбщегоНазначения.СообщитьПользователю(Форма.РезультатПроверкиКПП,, "КПП",, Отказ);
			
		КонецЕсли;
		
	ИначеЕсли Форма.ВидКонтрагента = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Наименование");
		МассивНепроверяемыхРеквизитов.Добавить("КПП");
	Иначе
		МассивНепроверяемыхРеквизитов.Добавить("ФИО");
		МассивНепроверяемыхРеквизитов.Добавить("Наименование");
		МассивНепроверяемыхРеквизитов.Добавить("КПП");
	КонецЕсли;
	
	Если МассивНепроверяемыхРеквизитов.Найти("ИНН") = Неопределено 
		И ЗначениеЗаполнено(Форма.ИНН)
		И НЕ Форма.ОшибокПоИННнет Тогда
		
		ОбщегоНазначения.СообщитьПользователю(Форма.РезультатПроверкиИНН,, "ИНН",, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

// Возвращает значения реквизитов формы для настройки распределения вычета по доходам
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма
//
// Возвращаемое значение:
//   Структура
//
Функция НастройкиРаспределенияВычетов(ВыбраннаяФорма, ДоступныеДоходы = Неопределено, ДоходыВычеты = Неопределено) Экспорт
	
	Результат = НовыйНастройкиРаспределенияВычетов();
	
	Если Не ПомощникЗаполнения3НДФЛКлиентСервер.ВычетыРаспределяютсяПоДоходам(ВыбраннаяФорма) Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если ТипЗнч(ДоступныеДоходы) = Тип("Соответствие") И ЗначениеЗаполнено(ДоступныеДоходы) Тогда
		
		// Если в переданных параметрах указана настройка распределения суммы вычета по доходам,
		// то необходимо её восстановить
		Если ЗначениеЗаполнено(ДоходыВычеты)
			И ДоходыВычеты.Свойство("ВидДохода")
			И ТипЗнч(ДоходыВычеты.ВидДохода) = Тип("Соответствие") Тогда
			
			СуммаВычетаОстаток = ДоходыВычеты.СуммаВычета;
			
			Для Каждого ТекущийДоход Из ДоходыВычеты.ВидДохода Цикл
				
				ДоступныйДоход = ДоступныеДоходы.Получить(ТекущийДоход.Ключ);
				
				НоваяСтрока = Результат.РаспределениеПоДоходам.Добавить();
				НоваяСтрока.Доход = ТекущийДоход.Ключ;
				НоваяСтрока.НалоговаяБаза = ДоступныйДоход;
				НоваяСтрока.СуммаВычета = ТекущийДоход.Значение;
				Результат.СписокВыбораДохода.Добавить(НоваяСтрока.Доход);
				
				СуммаВычетаОстаток = Макс(СуммаВычетаОстаток - НоваяСтрока.СуммаВычета, 0);
				
			КонецЦикла;
			
			// Добавим доходы, которых не хватает в списке доступных
			Для Каждого ТекущийДоход Из ДоступныеДоходы Цикл
				Если Результат.СписокВыбораДохода.Найти(ТекущийДоход.Ключ) = Неопределено Тогда
					НоваяСтрока = Результат.РаспределениеПоДоходам.Добавить();
					НоваяСтрока.Доход = ТекущийДоход.Ключ;
					НоваяСтрока.НалоговаяБаза = ТекущийДоход.Значение;
					НоваяСтрока.СуммаВычета = Мин(СуммаВычетаОстаток, ТекущийДоход.Значение);
					Результат.СписокВыбораДохода.Добавить(НоваяСтрока.Доход);
					
					СуммаВычетаОстаток = Макс(СуммаВычетаОстаток - НоваяСтрока.СуммаВычета, 0);
				КонецЕсли;
			КонецЦикла;
			
			Отбор = Новый Структура;
			Отбор.Вставить("СуммаВычета", Результат.РаспределениеПоДоходам.Итог("СуммаВычета"));
			СтрокиОтбора = Результат.РаспределениеПоДоходам.НайтиСтроки(Отбор);
			
			Если СтрокиОтбора.Количество() > 0 Тогда
				Результат.ВариантРаспределенияВычета = 0;
				Результат.ВидДохода = СтрокиОтбора[0].Доход;
			Иначе
				Результат.ВидДохода = Результат.СписокВыбораДохода[0];
				Результат.ВариантРаспределенияВычета = 1;
			КонецЕсли;
			
		Иначе
			
			СуммаРаспределить = ?(ЗначениеЗаполнено(ДоходыВычеты), ДоходыВычеты.СуммаВычета, 0);
			
			Для Каждого ТекущийДоход Из ДоступныеДоходы Цикл
				НоваяСтрока = Результат.РаспределениеПоДоходам.Добавить();
				НоваяСтрока.Доход = ТекущийДоход.Ключ;
				НоваяСтрока.НалоговаяБаза = ТекущийДоход.Значение;
				НоваяСтрока.СуммаВычета = Мин(СуммаРаспределить, НоваяСтрока.НалоговаяБаза);
				СуммаРаспределить = Макс(СуммаРаспределить - НоваяСтрока.СуммаВычета, 0);
				Результат.СписокВыбораДохода.Добавить(ТекущийДоход.Ключ);
			КонецЦикла;
			
			Результат.ВидДохода = Результат.СписокВыбораДохода[0];
			
		КонецЕсли;
		
		Результат.СуммаВычета = Результат.РаспределениеПоДоходам.Итог("СуммаВычета");
		
	КонецЕсли;

	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НовыйНастройкиРаспределенияВычетов()
	
	Результат = Новый Структура;
	Результат.Вставить("ВариантРаспределенияВычета", 0);
	Результат.Вставить("ВидДохода",  Перечисления.ИсточникиДоходовФизическихЛиц.ПустаяСсылка());
	Результат.Вставить("СуммаВычета", 0);
	Результат.Вставить("РаспределениеПоДоходам", Новый ТаблицаЗначений());
	Результат.Вставить("СписокВыбораДохода", Новый Массив);
	
	ТипЧисло = ОбщегоНазначения.ОписаниеТипаЧисло(15, 2);
	Результат.РаспределениеПоДоходам.Колонки.Добавить("Доход", Новый ОписаниеТипов("ПеречислениеСсылка.ИсточникиДоходовФизическихЛиц"));
	Результат.РаспределениеПоДоходам.Колонки.Добавить("НалоговаяБаза", ТипЧисло);
	Результат.РаспределениеПоДоходам.Колонки.Добавить("СуммаВычета", ТипЧисло);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти