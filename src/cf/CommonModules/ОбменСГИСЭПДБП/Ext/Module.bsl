Процедура ОбработкаЗаполненияЭТрН(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	Если НЕ ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли; 
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		ЗаполнитьЗначенияСвойств(ДокументОбъект, ОбменСГИСЭПДБПВызовСервера.ДанныеЗаполненияЭТрН(ДанныеЗаполнения));
		
		НоваяСтрока = ДокументОбъект.ДокументыОснования.Добавить();
		НоваяСтрока.ДокументОснование = ДанныеЗаполнения;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ДокументОбъект, ДанныеЗаполнения);
	КонецЕсли; 
КонецПроцедуры

Процедура ПроверитьДобавитьОснованиеЭТрН(ЭлектроннаяТранспортнаяНакладная, Основание) Экспорт
	
	ДокументОбъект = ЭлектроннаяТранспортнаяНакладная.ПолучитьОбъект();
	Если ДокументОбъект = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	СтруктураПоиска = Новый Структура("ДокументОснование", Основание);
	Если ДокументОбъект.ДокументыОснования.НайтиСтроки(СтруктураПоиска).Количество() > 0 Тогда
		Возврат;
	КонецЕсли; 
	
	НоваяСтрока = ДокументОбъект.ДокументыОснования.Добавить();
	НоваяСтрока.ДокументОснование = Основание;
	
	ДокументОбъект.Записать();
КонецПроцедуры

Функция ДокументооборотНастроен(Организация, Контрагент) Экспорт
	Если НЕ ЗначениеЗаполнено(Организация) 
		ИЛИ НЕ ЗначениеЗаполнено(Контрагент)
		ИЛИ НЕ ЭлектронныеДокументыЭДО.ЕстьПравоЧтенияДокументов() Тогда
		
		Возврат Ложь;
	КонецЕсли; 
	
	ПараметрыЭД = Новый Структура;
	
	ПараметрыЭД.Вставить("Организация",  Организация);
	ПараметрыЭД.Вставить("Контрагент",   Контрагент);
	ПараметрыЭД.Вставить("ТипДокумента", ОбменСКонтрагентами.ТипыДокументов().ЭТрН);
	ПараметрыЭД.Вставить("Направление",  Перечисления.НаправленияЭДО.Исходящий);
	
	Возврат ОбменСКонтрагентами.ЕстьПравоЧтенияНастройкиОбмена()
		И ОбменСКонтрагентами.ДокументооборотНастроен(ПараметрыЭД);
КонецФункции
 
