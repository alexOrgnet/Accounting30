#Область ПрограммныйИнтерфейс

// Возвращает идентификатор банка для обмена с сервисом АУСН
//
// Параметры:
//  БИК - строка
//
// Возвращаемое значение:
//  Строка
//
Функция ИдентификаторБанка(БИК) Экспорт
	
	БанкПоКлассификатору = РаботаСБанкамиБП.СсылкаПоКлассификатору(БИК);
	Возврат РегистрыСведений.БанкиАУСН.Идентификатор(БанкПоКлассификатору);
	
КонецФункции

// Возвращает идентификатор банка
// 
// Параметры:
//  Банк - СправочникСсылка.КлассификаторБанков
// 
// Возвращаемое значение:
//   Строка
//
Функция ИдентификаторБанкаПоКлассификатору(Банк) Экспорт
	
	Идентификатор = РегистрыСведений.БанкиАУСН.Идентификатор(Банк);
	Если Идентификатор = Неопределено Тогда
		ИнтеграцияАУСН.ЗаписатьОшибкуВЖурналРегистрации(СтрШаблон(НСтр("ru = 'Не определен идентификатор банка %1'"), Банк));
	КонецЕсли;
	
	Возврат ?(Идентификатор <> Неопределено, Идентификатор, "");
	
КонецФункции

// Возвращает ссылку на личный кабинет банка
// 
// Параметры:
//  Банк - СправочникСсылка.КлассификаторБанков
// 
// Возвращаемое значение:
//   Строка
//
Функция СсылкаЛичныйКабинетБанка(Банк) Экспорт
	
	СсылкаЛичныйКабинет = РегистрыСведений.БанкиАУСН.СсылкаЛичныйКабинет(Банк);
	Если СсылкаЛичныйКабинет = Неопределено Тогда
		ИнтеграцияАУСН.ЗаписатьОшибкуВЖурналРегистрации(СтрШаблон(НСтр("ru = 'Не определена ссылка на личный кабинет банка %1'"), Банк));
	КонецЕсли;
	
	Возврат ?(СсылкаЛичныйКабинет <> Неопределено, СсылкаЛичныйКабинет, "");
	
КонецФункции

#КонецОбласти