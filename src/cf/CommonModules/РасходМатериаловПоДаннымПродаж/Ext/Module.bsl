#Область ПрограммныйИнтерфейс

Функция РассчитатьРасходМатериаловДляВыпускаПродукции(Период, Организация, Регистратор) Экспорт
	
	МенеджерТаблицыВыпущеннойПродукции = ВременнаяТаблицаВыпущеннойПродукции(Период, Организация);
	РасчетМатериаловДляВыпуска = РасчетМатериаловДляВыпускаПродукцииПоДаннымПродаж(
		Период, Организация, МенеджерТаблицыВыпущеннойПродукции);
	РасчетМатериаловДляСписания = РасчетМатериаловДляСписания(
		Период, Организация, МенеджерТаблицыВыпущеннойПродукции);
	ЗаполнитьСчетаУчетаМатериалов(Период, Организация, РасчетМатериаловДляВыпуска, РасчетМатериаловДляСписания);
	
	
	ВыпущеннаяПродукцияДляУчетаЗатратИППоДаннымПродаж = ВыпущеннаяПродукцияДляУчетаЗатратИППоДаннымПродаж(
		Период, Организация, МенеджерТаблицыВыпущеннойПродукции);
	РеквизитыСписанияМатериалов = РеквизитыСписанияМатериалов(Период, Организация, Регистратор);
	МатериалыДляСписанияНДС = МатериалыДляСписанияНДС(РасчетМатериаловДляСписания, Период, Организация);
	РасходМатериаловДляСправкиРасчета = РасходМатериаловДляСправкиРасчета(РасчетМатериаловДляВыпуска);
	
	ПараметрыСписанияМатериалов = Новый Структура;
	ПараметрыСписанияМатериалов.Вставить("РасчетМатериаловДляВыпуска", РасчетМатериаловДляВыпуска);
	ПараметрыСписанияМатериалов.Вставить("РасчетМатериаловДляСписания", РасчетМатериаловДляСписания);
	ПараметрыСписанияМатериалов.Вставить("ВыпущеннаяПродукцияДляУчетаЗатратИППоДаннымПродаж",
		ВыпущеннаяПродукцияДляУчетаЗатратИППоДаннымПродаж);
	ПараметрыСписанияМатериалов.Вставить("ТаблицаРеквизитов", РеквизитыСписанияМатериалов);
	ПараметрыСписанияМатериалов.Вставить("МатериалыДляСписанияНДС", МатериалыДляСписанияНДС);
	ПараметрыСписанияМатериалов.Вставить("РасходМатериаловДляСправкиРасчета", РасходМатериаловДляСправкиРасчета);
	
	Возврат ПараметрыСписанияМатериалов;
	
КонецФункции

Функция ПодготовитьТаблицыСписанияМатериалов(РасчетМатериаловДляВыпуска, ТаблицаРеквизитов) Экспорт
	
	РасчетСписанияМатериалов = Новый Структура;
	РасчетСписанияМатериалов.Вставить("СписаноМатериалов", Неопределено);
	РасчетСписанияМатериалов.Вставить("НедостаточноМатериалов", Неопределено);
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизитов) Тогда
		Возврат РасчетСписанияМатериалов;
	КонецЕсли;
	
	Реквизиты = ТаблицаРеквизитов[0];
	
	ТаблицаСписанияМатериалов = ДополнитьРасходМатериаловДаннымиДляСписанияПартий(
		РасчетМатериаловДляВыпуска, Реквизиты.Организация, Реквизиты.Период);
	
	СписанныеМатериалы = УчетТоваров.ПодготовитьТаблицыСписанныеМатериалыДляВыпускаПродукции(ТаблицаСписанияМатериалов, Реквизиты);
	
	Если СписанныеМатериалы = Неопределено Тогда
		Возврат РасчетСписанияМатериалов;
	КонецЕсли;
	
	РасчетСписанияМатериалов.СписаноМатериалов = СписанныеМатериалы.СписанныеТовары;
	РасчетСписанияМатериалов.НедостаточноМатериалов = СписанныеМатериалы.НедостаточноДляСписания;
	
	Возврат РасчетСписанияМатериалов;
	
КонецФункции

Функция ПодготовитьТаблицыСписанияМатериаловИП(СписаноМатериалов, РасчетМатериаловДляВыпуска, ТаблицаРеквизитов) Экспорт
	
	ТаблицыСписанияМатериаловИП = Новый Структура("СписанныеМПЗ, ИзмененияВидаДеятельности, СтоимостьПродукции, Материалы, ОшибкиСписанияМПЗ");
	
	Реквизиты = ТаблицаРеквизитов[0];
	Если Не УчетнаяПолитика.ПлательщикНДФЛ(Реквизиты.Организация, Реквизиты.Период) Тогда
		Возврат ТаблицыСписанияМатериаловИП;
	КонецЕсли;
	
	// Для подготовки таблицы материалов используется типовая функция УчетДоходовИРасходовПредпринимателя.ДополнитьТаблицуСписанияМатериалов().
	// Как правило, в нее передается таблица, подготовленная в модуле менеджера проводимого документа.
	// Мы эмулируем этот процесс для упрощения поддержки: готовим таблицу ТаблицаСписанияМатериаловИП, затем получаем типовую
	// таблицу из УчетДоходовИРасходовПредпринимателя.ДополнитьТаблицуСписанияМатериалов() и дополняем ее нужными колонками склада и поступившей партии (регистратор).
	// В проведении документов склад и партия обычно хранятся в рекизитах документа, а в регламентной операции мы делаем движения сразу по многим документам,
	// поэтому и выносим ее в таблицу. Списание материалов ИП поддерживает указание склада и партии поступления как в реквизитах, так и в таблице.
	ТаблицаСписанияМатериаловИП = ПодготовитьТаблицуСписанияМатериаловИП(
		СписаноМатериалов, РасчетМатериаловДляВыпуска);
	ТаблицаСписанияМатериаловИП_Дополненная = УчетДоходовИРасходовПредпринимателя.ДополнитьТаблицуСписанияМатериалов(
		ТаблицаСписанияМатериаловИП, ТаблицаРеквизитов);
	ДобавитьКолонкиТипСкладаИПартияПоступившая(ТаблицаСписанияМатериаловИП_Дополненная, РасчетМатериаловДляВыпуска);
	
	РезультатСписания = УчетДоходовИРасходовПредпринимателя.ПодготовитьТаблицыСписанияМПЗ_ВыпускПродукции(
		ТаблицаСписанияМатериаловИП_Дополненная, ТаблицаРеквизитов);
	
	ЗаполнитьЗначенияСвойств(ТаблицыСписанияМатериаловИП, РезультатСписания);
	
	Возврат ТаблицыСписанияМатериаловИП;
	
КонецФункции

Процедура ОписатьОшибкиВыявленныеПриСписанииМатериалов(Ошибки, РасчетМатериаловДляСписания, Материалы) Экспорт
	
	// Структура таблиц Материалы готовится в УчетТоваров.ПодготовитьТаблицыСписанныеМатериалыДляВыпускаПродукции()
	
	ПараметрыТекста = Новый Структура;
	
	Описание     = НСтр("ru = 'Недостаточно материалов для выпуска продукции по данным продаж'");
	
	ЧтоСлучилось = Новый Массив;
	ЧтоСлучилось.Добавить(НСтр("ru = 'В этом месяце был отражен автоматический выпуск продукции при реализации. Для формирования себестоимости этой продукции нужно учесть расход материалов по нормам, указанным в карточке продукции.'"));
	ЧтоСлучилось.Добавить(НСтр("ru = 'В учете не отражено приобретение материалов, достаточное для выпуска всей проданной продукции.'"));
	
	ЧтоНадоЗнать = Новый Массив;
	ЧтоНадоЗнать.Добавить(НСтр("ru = 'При автоматическом выпуске продукции при реализации не требуется вводить специальные документы ""Выпуск продукции"".'"));
	ЧтоНадоЗнать.Добавить(НСтр("ru = 'Выпуск оформляется документами ""Реализация (акт, накладная, УПД)"" на все количество проданной продукции.'"));
	ЧтоНадоЗнать.Добавить(НСтр("ru = 'Для того, чтобы правильно учесть затраты на производство, сформировать себестоимость и отчет о прибыли, необходимо списать материалы, которые использованы для выпуска продукции.'"));
	ЧтоНадоЗнать.Добавить(НСтр("ru = 'Материалы списываются в затраты по нормам из спецификации в карточке продукции.'"));
	
	
	ГдеПроблема = НСтр("ru = 'В таблице приведены материалы, которые требуются для выпуска продукции, исходя из норм, но отсутствуют в учете на конец месяца.'");
	
	ЧтоДелать = Новый Массив;
	ЧтоДелать.Добавить(НСтр("ru = 'Проверьте, что спецификации на выпуск продукции заполнены правильно. Если есть ошибки - исправьте спецификацию.'"));
	ЧтоДелать.Добавить(НСтр("ru = 'Проверьте, что все документы поступления материалов введены в программу, а также, что в них указаны те же элементы справочника ""Номенклатура"", что и в спецификации на выпуск продукции. Если есть ошибки - исправьте данные документов.'"));
	ЧтоДелать.Добавить(НСтр("ru = 'Если для производства продукции потрачено меньше материалов, чем предполагалось по нормам, введите документ ""Выпуск продукции"", укажите в нем реально использованные материалы и выполните актуализацию повторно.'"));
	
	// СКОМПОНУЕМ ОПИСАНИЕ ОШИБКИ
	Ошибка = ВыводСообщенийОбОшибках.ДобавитьОписаниеОшибки(Ошибки);
	
	ВыводСообщенийОбОшибках.ДобавитьРаздел(Ошибка, "Описание",     ВыводСообщенийОбОшибках.СкомпоноватьТекст(Описание,     ПараметрыТекста));
	ВыводСообщенийОбОшибках.ДобавитьРаздел(Ошибка, "ЧтоСлучилось", ВыводСообщенийОбОшибках.СкомпоноватьТекст(ЧтоСлучилось, ПараметрыТекста));
	ВыводСообщенийОбОшибках.ДобавитьРаздел(Ошибка, "ЧтоНадоЗнать", ВыводСообщенийОбОшибках.СкомпоноватьТекст(ЧтоНадоЗнать, ПараметрыТекста));
	
	// ГдеПроблема - комплексный раздел, содержит вложенные таблицы
	Секция = ВыводСообщенийОбОшибках.ДобавитьРаздел(Ошибка, "ГдеПроблема",  ВыводСообщенийОбОшибках.СкомпоноватьТекст(ГдеПроблема, ПараметрыТекста));
	
	ДанныеДляВывода = ДанныеДляВыводаВСообщениеОбОшибках(Материалы.НедостаточноМатериалов, РасчетМатериаловДляСписания);
	
	Для Каждого СтрокаСклада Из ДанныеДляВывода Цикл
		
		Если Справочники.Склады.ИспользуетсяНесколькоСкладов() И ЗначениеЗаполнено(СтрокаСклада.Склад) Тогда
			ВыводСообщенийОбОшибках.ДобавитьСекцию(Секция, "НедостаточноМатериаловДляВыпускаПродукции_Склад", Новый Структура("Склад", СтрокаСклада.Склад));
		КонецЕсли;
		
		ВывестиВОписаниеОбОшибкахТаблицуМатериаловСклада(Секция, СтрокаСклада.ДанныеНедостаткаМатериалов);
		
	КонецЦикла;
	
	// ЧтоДелать
	ВыводСообщенийОбОшибках.ДобавитьСекцию(Секция, "Текст", ВыводСообщенийОбОшибках.СкомпоноватьТекст(ЧтоДелать, ПараметрыТекста));
	
КонецПроцедуры

Процедура ОписатьОшибкиВыявленныеПриСписанииМатериаловИП(Ошибки, ТаблицыМатериаловИП) Экспорт
	
	// ТаблицыМатериаловИП готовятся в УчетТоваров.ПодготовитьТаблицыСписанныеМатериалыДляВыпускаПродукции()
	
	ПараметрыТекста = Новый Структура;
	
	Описание     = НСтр("ru = 'Недостаточно материалов для выпуска продукции в налоговом учете ИП'");
	
	ЧтоСлучилось = Новый Массив;
	ЧтоСлучилось.Добавить(НСтр("ru = 'В этом месяце был отражен автоматический выпуск продукции при реализации. Для правильного формирования налоговой базы по НДФЛ от продажи этой продукции нужно списать материалы по нормам из спецификаций.'"));
	ЧтоСлучилось.Добавить(НСтр("ru = 'В налоговом учете ИП на конец месяца недостаточно материалов для выпуска всей продукции.'"));
	
	ЧтоНадоЗнать = Новый Массив;
	ЧтоНадоЗнать.Добавить(НСтр("ru = 'При автоматическом выпуске продукции при реализации не требуется вводить специальные документы ""Выпуск продукции"".'"));
	ЧтоНадоЗнать.Добавить(НСтр("ru = 'Выпуск оформляется документами ""Реализация (акт, накладная, УПД)"" на все количество проданной продукции.'"));
	ЧтоНадоЗнать.Добавить(НСтр("ru = 'Для того, чтобы правильно сформировать налоговую базу по НДФЛ от продажи продукции, необходимо списать материалы, которые использованы для выпуска продукции.'"));
	ЧтоНадоЗнать.Добавить(НСтр("ru = 'Материалы списываются по нормам из спецификации в карточке продукции.'"));
	
	
	ГдеПроблема = НСтр("ru = 'В таблице приведены материалы, которых не хватает для списания в налоговом учете ИП.'");
	
	ЧтоДелать = Новый Массив;
	ЧтоДелать.Добавить(НСтр("ru = 'Проверьте, что все операции по поступлению и списанию материалов отражены специальными документами и остатки материалов по бухгалтерскому учету соответствуют остаткам по налоговому учету ИП.'"));
	
	// СКОМПОНУЕМ ОПИСАНИЕ ОШИБКИ
	Ошибка = ВыводСообщенийОбОшибках.ДобавитьОписаниеОшибки(Ошибки);
	
	ВыводСообщенийОбОшибках.ДобавитьРаздел(Ошибка, "Описание",     ВыводСообщенийОбОшибках.СкомпоноватьТекст(Описание,     ПараметрыТекста));
	ВыводСообщенийОбОшибках.ДобавитьРаздел(Ошибка, "ЧтоСлучилось", ВыводСообщенийОбОшибках.СкомпоноватьТекст(ЧтоСлучилось, ПараметрыТекста));
	ВыводСообщенийОбОшибках.ДобавитьРаздел(Ошибка, "ЧтоНадоЗнать", ВыводСообщенийОбОшибках.СкомпоноватьТекст(ЧтоНадоЗнать, ПараметрыТекста));
	
	// ГдеПроблема - комплексный раздел, содержит вложенные таблицы
	Секция = ВыводСообщенийОбОшибках.ДобавитьРаздел(Ошибка, "ГдеПроблема",  ВыводСообщенийОбОшибках.СкомпоноватьТекст(ГдеПроблема, ПараметрыТекста));
	
	ДанныеДляВывода = ДанныеДляВыводаВСообщениеОбОшибкахИП(ТаблицыМатериаловИП.ОшибкиСписанияМПЗ, ТаблицыМатериаловИП.СписанныеМПЗ);
	
	ВывестиВОписаниеОбОшибкахТаблицуМатериаловМП(Секция, ДанныеДляВывода);
	
	// ЧтоДелать
	ВыводСообщенийОбОшибках.ДобавитьСекцию(Секция, "Текст", ВыводСообщенийОбОшибках.СкомпоноватьТекст(ЧтоДелать, ПараметрыТекста));
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция НовыйВыпущеннаяПродукция()
	
	ОписаниеСчет = Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный");
	ТипПартия = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии.ТипЗначения;
	
	ВыпущеннаяПродукция = Новый ТаблицаЗначений;
	ВыпущеннаяПродукция.Колонки.Добавить("ПартияПоступившейНоменклатуры", ТипПартия);
	ВыпущеннаяПродукция.Колонки.Добавить("СчетЗатрат", ОписаниеСчет);
	ВыпущеннаяПродукция.Колонки.Добавить("НоменклатурнаяГруппа", Новый ОписаниеТипов("СправочникСсылка.НоменклатурныеГруппы"));
	ВыпущеннаяПродукция.Колонки.Добавить("Продукция", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ВыпущеннаяПродукция.Колонки.Добавить("СчетУчетаПродукции", ОписаниеСчет);
	ВыпущеннаяПродукция.Колонки.Добавить("КоличествоПродукции", ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	
	Возврат ВыпущеннаяПродукция;
	
КонецФункции

Функция НовыйРасчетМатериалов()
	
	ОписаниеСчет        = Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный");
	ТипПартия = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Партии.ТипЗначения;
	
	РасчетМатериалов = Новый ТаблицаЗначений;
	РасчетМатериалов.Колонки.Добавить("НомерСтроки",           ОбщегоНазначения.ОписаниеТипаЧисло(10, 0));
	РасчетМатериалов.Колонки.Добавить("Период",                ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	РасчетМатериалов.Колонки.Добавить("ПериодДень",            ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	РасчетМатериалов.Колонки.Добавить("Склад",                 Новый ОписаниеТипов("СправочникСсылка.Склады"));
	РасчетМатериалов.Колонки.Добавить("ТипСклада",             Новый ОписаниеТипов("ПеречислениеСсылка.ТипыСкладов"));
	РасчетМатериалов.Колонки.Добавить("Подразделение",         Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	РасчетМатериалов.Колонки.Добавить("Продукция",             Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	РасчетМатериалов.Колонки.Добавить("СчетУчетаПродукции",    ОписаниеСчет);
	РасчетМатериалов.Колонки.Добавить("КоличествоПродукции",   ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	РасчетМатериалов.Колонки.Добавить("ПлановаяСтоимостьПродукции",  ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	РасчетМатериалов.Колонки.Добавить("НоменклатурнаяГруппа",  Новый ОписаниеТипов("СправочникСсылка.НоменклатурныеГруппы"));
	РасчетМатериалов.Колонки.Добавить("ПартияВыпуска",         ТипПартия);
	РасчетМатериалов.Колонки.Добавить("Спецификация",          Новый ОписаниеТипов("СправочникСсылка.СпецификацииНоменклатуры"));
	РасчетМатериалов.Колонки.Добавить("СтатьяЗатрат",          Новый ОписаниеТипов("СправочникСсылка.СтатьиЗатрат"));
	РасчетМатериалов.Колонки.Добавить("Номенклатура",          Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	РасчетМатериалов.Колонки.Добавить("СчетУчета",             ОписаниеСчет);
	РасчетМатериалов.Колонки.Добавить("Количество",            ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	
	Возврат РасчетМатериалов;
	
КонецФункции

Функция НовыйРасчетМатериаловДляСписания()
	
	ОписаниеСчет        = Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный");
	
	МатериалыДляСписания = Новый ТаблицаЗначений;
	МатериалыДляСписания.Колонки.Добавить("НомерСтроки",           ОбщегоНазначения.ОписаниеТипаЧисло(10, 0));
	МатериалыДляСписания.Колонки.Добавить("Склад",                 Новый ОписаниеТипов("СправочникСсылка.Склады"));
	МатериалыДляСписания.Колонки.Добавить("Номенклатура",          Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	МатериалыДляСписания.Колонки.Добавить("Продукция",             Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	МатериалыДляСписания.Колонки.Добавить("НоменклатурнаяГруппа",  Новый ОписаниеТипов("СправочникСсылка.НоменклатурныеГруппы"));
	МатериалыДляСписания.Колонки.Добавить("СтатьяЗатрат",          Новый ОписаниеТипов("СправочникСсылка.СтатьиЗатрат"));
	
	МатериалыДляСписания.Колонки.Добавить("НовыйСпособУчетаНДС",   Новый ОписаниеТипов("ПеречислениеСсылка.СпособыУчетаНДС"));
	МатериалыДляСписания.Колонки.Добавить("СчетУчета",             ОписаниеСчет);
	
	МатериалыДляСписания.Колонки.Добавить("Количество",            ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	
	Возврат МатериалыДляСписания;
	
КонецФункции

Функция НовыйРасходМатериаловДляСправкиРасчета()
	
	ОписаниеСчет        = Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный");
	
	РасходМатериалов = Новый ТаблицаЗначений;
	РасходМатериалов.Колонки.Добавить("ПериодДень",            ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	РасходМатериалов.Колонки.Добавить("Номенклатура",          Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	РасходМатериалов.Колонки.Добавить("Продукция",             Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	РасходМатериалов.Колонки.Добавить("СчетУчета",             ОписаниеСчет);
	РасходМатериалов.Колонки.Добавить("Склад",                 Новый ОписаниеТипов("СправочникСсылка.Склады"));
	РасходМатериалов.Колонки.Добавить("КоличествоПродукции",   ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	РасходМатериалов.Колонки.Добавить("КоличествоМатериаловНаЕдиницуПродукции", ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	РасходМатериалов.Колонки.Добавить("Количество",            ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	РасходМатериалов.Колонки.Добавить("НоменклатурнаяГруппа",  Новый ОписаниеТипов("СправочникСсылка.НоменклатурныеГруппы"));
	РасходМатериалов.Колонки.Добавить("СтатьяЗатрат",          Новый ОписаниеТипов("СправочникСсылка.СтатьиЗатрат"));
	РасходМатериалов.Колонки.Добавить("Спецификация",          Новый ОписаниеТипов("СправочникСсылка.СпецификацииНоменклатуры"));
	
	Возврат РасходМатериалов;
	
КонецФункции

Функция ВременнаяТаблицаВыпущеннойПродукции(Период, Организация)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",         Организация);
	Запрос.УстановитьПараметр("НачалоПериода",       НачалоМесяца(Период));
	Запрос.УстановитьПараметр("КонецПериода",        КонецМесяца(Период));
	
	// Нам нужно получить значения реквизитов, поэтому не исползуем виртуальную таблицу оборотов,
	// а готовим результат из записей регистра.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВыпускПродукции.Организация КАК Организация,
	|	ВыпускПродукции.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ВыпускПродукции.СчетУчета КАК СчетУчетаПродукции,
	|	ВыпускПродукции.Склад КАК Склад,
	|	ВыпускПродукции.Склад.ТипСклада КАК ТипСклада,
	|	ВыпускПродукции.Номенклатура КАК Продукция,
	|	ВыпускПродукции.СпособУчетаНДС КАК СпособУчетаНДС,
	|	ВыпускПродукции.Период КАК Период,
	|	ВыпускПродукции.Спецификация КАК Спецификация,
	|	СУММА(ВыпускПродукции.ВыпускПоДаннымПродаж) КАК КоличествоПродукции,
	|	СУММА(ВыпускПродукции.ПлановаяСтоимостьВыпуска) КАК ПлановаяСтоимостьПродукции,
	|	ВыпускПродукции.Регистратор КАК ПартияВыпуска
	|ПОМЕСТИТЬ Выпуск
	|ИЗ
	|	РегистрНакопления.ВыпускПродукцииПоДаннымПродаж КАК ВыпускПродукции
	|ГДЕ
	|	ВыпускПродукции.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ВыпускПродукции.Организация = &Организация
	|	И ВыпускПродукции.Активность
	|	И ВыпускПродукции.ВыпускПоДаннымПродаж <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыпускПродукции.Организация,
	|	ВыпускПродукции.НоменклатурнаяГруппа,
	|	ВыпускПродукции.СчетУчета,
	|	ВыпускПродукции.Склад,
	|	ВыпускПродукции.Склад.ТипСклада,
	|	ВыпускПродукции.Номенклатура,
	|	ВыпускПродукции.СпособУчетаНДС,
	|	ВыпускПродукции.Регистратор,
	|	ВыпускПродукции.Период,
	|	ВыпускПродукции.Спецификация
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВыпускПродукции.ВыпускПоДаннымПродаж) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Спецификация";
	
	Запрос.Выполнить();
	Возврат Запрос.МенеджерВременныхТаблиц;
	
КонецФункции

Функция ВыпущеннаяПродукцияДляУчетаЗатратИППоДаннымПродаж(Период, Организация, МенеджерТаблицыВыпущеннойПродукции)
	
	Если Не УчетнаяПолитика.ПлательщикНДФЛ(Организация, Период) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерТаблицыВыпущеннойПродукции;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыпускПродукции.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ВыпускПродукции.СчетУчетаПродукции КАК СчетУчетаПродукции,
	|	ВыпускПродукции.ТипСклада КАК ТипСклада,
	|	ВыпускПродукции.Продукция КАК Продукция,
	|	ВыпускПродукции.Период КАК Период,
	|	ВыпускПродукции.КоличествоПродукции КАК КоличествоПродукции,
	|	ВыпускПродукции.ПлановаяСтоимостьПродукции КАК ПлановаяСтоимостьПродукции,
	|	ВыпускПродукции.ПартияВыпуска КАК ПартияПоступившейНоменклатуры
	|ИЗ
	|	Выпуск КАК ВыпускПродукции
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	ПартияПоступившейНоменклатуры,
	|	Продукция";
	
	СчетЗатратВыпускаПродукции = РасчетВыпускаПоДаннымПродаж.СчетВыпускаПродукции(Организация, Период);
	
	ВыпущеннаяПродукция = НовыйВыпущеннаяПродукция();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаПродукции = ВыпущеннаяПродукция.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПродукции, Выборка);
		СтрокаПродукции.СчетЗатрат = СчетЗатратВыпускаПродукции;
		
	КонецЦикла;
	
	УчетДоходовИРасходовПредпринимателя.ДобавитьВидМПЗХарактерДеятельности(
		ВыпущеннаяПродукция, Организация, Период, "СчетУчетаПродукции");
	
	Возврат ВыпущеннаяПродукция;
	
КонецФункции

Функция РасчетМатериаловДляВыпускаПродукцииПоДаннымПродаж(Период, Организация, МенеджерТаблицыВыпущеннойПродукции)
	
	РасчетМатериалов = НовыйРасчетМатериалов();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерТаблицыВыпущеннойПродукции;
	
	ЭлементыТекстаЗапроса = Новый Массив;
	ЭлементыТекстаЗапроса.Добавить(УправлениеПроизводством.ТекстЗапросаВременнаяТаблицаЗатратыСырья());
	ЭлементыТекстаЗапроса.Добавить(
	"ВЫБРАТЬ
	|	ЗатратыСырья.Период КАК Период,
	|	НАЧАЛОПЕРИОДА(ЗатратыСырья.Период, ДЕНЬ) КАК ПериодДень,
	|	ЗатратыСырья.Склад КАК Склад,
	|	ЗатратыСырья.ТипСклада КАК ТипСклада,
	|	ЗатратыСырья.Продукция КАК Продукция,
	|	ЗатратыСырья.ПартияВыпуска КАК ПартияВыпуска,
	|	ЗатратыСырья.СчетУчетаПродукции КАК СчетУчетаПродукции,
	|	ЗатратыСырья.КоличествоПродукции КАК КоличествоПродукции,
	|	ЗатратыСырья.ПлановаяСтоимостьПродукции КАК ПлановаяСтоимостьПродукции,
	|	ЗатратыСырья.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ЗатратыСырья.Номенклатура КАК Номенклатура,
	|	ЗатратыСырья.Спецификация КАК Спецификация,
	|	ЗатратыСырья.Количество КАК Количество
	|ИЗ
	|	ЗатратыСырья КАК ЗатратыСырья
	|ГДЕ
	|	ЗатратыСырья.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ЗатратыСырья.Количество <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	ПартияВыпуска,
	|	Продукция,
	|	Номенклатура");
	Запрос.Текст = СтрСоединить(ЭлементыТекстаЗапроса, ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтатьяЗатрат = РасчетВыпускаПоДаннымПродаж.СтатьяЗатратДляВыпущеннойПродукции();
	
	НомерСтроки = 0;
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрокаРасчета = РасчетМатериалов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаРасчета, Выборка);
		НоваяСтрокаРасчета.СтатьяЗатрат = СтатьяЗатрат;
		
		// Номер строки требуется для общих процедур списания материалов.
		// Как правило, они заточены на табличные части документов, в которых есть номер строки.
		// Поэтому нам нужно смоделировать аналогичное поведение.
		НомерСтроки = НомерСтроки + 1;
		НоваяСтрокаРасчета.НомерСтроки = НомерСтроки;
		
	КонецЦикла;
	
	РасчетМатериалов.Индексы.Добавить("НомерСтроки");
	
	Возврат РасчетМатериалов;
	
КонецФункции

Функция РасчетМатериаловДляСписания(Период, Организация, МенеджерТаблицыВыпущеннойПродукции)
	
	РасчетМатериаловДляСписания = НовыйРасчетМатериаловДляСписания();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерТаблицыВыпущеннойПродукции;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗатратыСырья.Склад КАК Склад,
	|	ЗатратыСырья.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ЗатратыСырья.Номенклатура КАК Номенклатура,
	|	ЗатратыСырья.Продукция КАК Продукция,
	|	ЗатратыСырья.СпособУчетаНДС КАК НовыйСпособУчетаНДС,
	|	СУММА(ЗатратыСырья.Количество) КАК Количество
	|ИЗ
	|	ЗатратыСырья КАК ЗатратыСырья
	|ГДЕ
	|	ЗатратыСырья.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ЗатратыСырья.Количество <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗатратыСырья.Склад,
	|	ЗатратыСырья.НоменклатурнаяГруппа,
	|	ЗатратыСырья.Номенклатура,
	|	ЗатратыСырья.Продукция,
	|	ЗатратыСырья.СпособУчетаНДС
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Продукция";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтатьяЗатрат = РасчетВыпускаПоДаннымПродаж.СтатьяЗатратДляВыпущеннойПродукции();
	
	НомерСтроки = 0;
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрокаМатериала = РасчетМатериаловДляСписания.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаМатериала, Выборка);
		НоваяСтрокаМатериала.СтатьяЗатрат = СтатьяЗатрат;
		
		// Номер строки требуется для общих процедур списания материалов.
		// Как правило, они заточены на табличные части документов, в которых есть номер строки.
		// Поэтому нам нужно смоделировать аналогичное поведение.
		НомерСтроки = НомерСтроки + 1;
		НоваяСтрокаМатериала.НомерСтроки = НомерСтроки;
		
	КонецЦикла;
	
	Возврат РасчетМатериаловДляСписания;
	
КонецФункции

Процедура ЗаполнитьСчетаУчетаМатериалов(Период, Организация, РасчетМатериаловДляВыпуска, РасчетМатериаловДляСписания)
	
	// Для оптимизации заполнения счетов учета свернем таблицу по тем полям,
	// от которых зависит счет учета (КлючевыеКолонки) и будем заполнять счетами уже маленькую таблицу.
	КлючевыеКолонки = "Номенклатура,Склад,НоменклатурнаяГруппа";
	КолонкиЗаполнения = "СчетУчета,НовыйСпособУчетаНДС";
	КолонкиДляЗаполнения = КлючевыеКолонки + "," + КолонкиЗаполнения;
	ЗаполненныеСчетаУчета = РасчетМатериаловДляСписания.Скопировать(, КолонкиДляЗаполнения);
	ЗаполненныеСчетаУчета.Свернуть(КолонкиДляЗаполнения);
	
	Правила = СчетаУчетаВДокументах.НовыйПравилаЗаполнения();
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Дата");
	СчетаУчетаВДокументах.ДобавитьВПравилоОписаниеРеквизитаДокумента(Правила, "Организация");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Материалы", "СчетУчета", "ЗапасыКромеЗабалансовых");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Номенклатура", "Номенклатура");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "Склад", "Склад");
	
	СчетаУчетаВДокументах.ДобавитьПравилоЗаполнения(Правила, "Материалы", "НовыйСпособУчетаНДС", "СпособУчетаНДСИспользованного");
	СчетаУчетаВДокументах.ДобавитьВПравилоИсточникДанныхРеквизитОбъекта(Правила, "НоменклатурнаяГруппа", "НоменклатурнаяГруппа");
	
	РеквизитыШапки = Новый Структура("Организация,Дата", Организация, Период);
	СчетаУчетаВДокументах.ЗаполнитьТаблицуПоПравилам(Правила, РеквизитыШапки, ЗаполненныеСчетаУчета);
	
	ЗаполненныеСчетаУчета.Индексы.Добавить(КлючевыеКолонки);
	
	ЗаполнитьСчетаУчетаВТаблице(РасчетМатериаловДляСписания, КлючевыеКолонки, ЗаполненныеСчетаУчета);
	
	ЗаполнитьСчетаУчетаВТаблице(РасчетМатериаловДляВыпуска, КлючевыеКолонки, ЗаполненныеСчетаУчета);
	
КонецПроцедуры

Функция РеквизитыСписанияМатериалов(Период, Организация, Регистратор)
	
	ТаблицаРеквизитов = Новый ТаблицаЗначений;
	ТаблицаРеквизитов.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаРеквизитов.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	ТаблицаРеквизитов.Колонки.Добавить("Период", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ТаблицаРеквизитов.Колонки.Добавить("НачалоПериода", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ТаблицаРеквизитов.Колонки.Добавить("ОкончаниеПериода", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ТаблицаРеквизитов.Колонки.Добавить("Регистратор", Документы.ТипВсеСсылки());
	ТаблицаРеквизитов.Колонки.Добавить("СпособОценкиМПЗПоСредней", Новый ОписаниеТипов("Булево"));
	ТаблицаРеквизитов.Колонки.Добавить("Контрагент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТаблицаРеквизитов.Колонки.Добавить("Содержание", ОбщегоНазначения.ОписаниеТипаСтрока(150));
	ТаблицаРеквизитов.Колонки.Добавить("ДеятельностьНаПатенте", Новый ОписаниеТипов("Булево"));
	ТаблицаРеквизитов.Колонки.Добавить("ТипСписания", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	ТаблицаРеквизитов.Колонки.Добавить("ВидОперации");
	ТаблицаРеквизитов.Колонки.Добавить("ДокументРеализации");
	
	// Реквизиты для НДС
	ТаблицаРеквизитов.Колонки.Добавить("НДСвСтоимостиТоваров", Новый ОписаниеТипов("ПеречислениеСсылка.ДействиеНДСВСтоимостиТоваров"));
	ТаблицаРеквизитов.Колонки.Добавить("СписыватьНДСнаКорСчетИАналитикуТовара", Новый ОписаниеТипов("Булево"));
	ТаблицаРеквизитов.Колонки.Добавить("СчетСписанияНДС", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаРеквизитов.Колонки.Добавить("СубконтоСписанияНДС1");
	ТаблицаРеквизитов.Колонки.Добавить("СубконтоСписанияНДС2");
	ТаблицаРеквизитов.Колонки.Добавить("СубконтоСписанияНДС3");
	
	
	
	СтрокаРеквизитов = ТаблицаРеквизитов.Добавить();
	СтрокаРеквизитов.Организация = Организация;
	// Выпуск идет по пустому подразделению, поэтому и списание материалов тоже.
	СтрокаРеквизитов.Подразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	СтрокаРеквизитов.Период = Период;
	СтрокаРеквизитов.НачалоПериода = НачалоМесяца(Период);
	СтрокаРеквизитов.ОкончаниеПериода = КонецМесяца(Период);
	СтрокаРеквизитов.Регистратор = Регистратор;
	СтрокаРеквизитов.СпособОценкиМПЗПоСредней = УчетнаяПолитика.СпособОценкиМПЗ(Организация, Период) = Перечисления.СпособыОценки.ПоСредней;
	// Поле контрагент нужно для корректного списания материалов в УчетТоваров.СформироватьДвиженияСписаниеТоваров().
	// Оно нужно для отбора по материалу контрагента. Мы выпускаем продукцию из собственного материала, поэтому поле Контрагент пустое.
	СтрокаРеквизитов.Контрагент = Справочники.Контрагенты.ПустаяСсылка();
	СтрокаРеквизитов.Содержание = УчетПроизводства.ТекстСодержанияПроводкиСписанияМатериалов();
	СтрокаРеквизитов.ДеятельностьНаПатенте = Ложь;
	// Документ реализации требуется только для типа списания "Реализация" в процедура УчетДоходовИРасходовПредпринимателя.СформироватьДвиженияСписаниеМПЗ()
	// Т.к. у нас тип списания = "Списание", то можем его не заполнять.
	СтрокаРеквизитов.ДокументРеализации = Неопределено;
	СтрокаРеквизитов.ТипСписания = "Списание";
	СтрокаРеквизитов.ВидОперации = "РегламентнаяОперацияРасходМатериаловДляВыпускаПродукции";
	
	СтрокаРеквизитов.НДСвСтоимостиТоваров = Перечисления.ДействиеНДСВСтоимостиТоваров.НеИзменять;
	// Счет списания НДС и субконто не заполняем, т.к. в нашем случае они не требуются.
	СтрокаРеквизитов.СписыватьНДСнаКорСчетИАналитикуТовара = Истина;
	
	Возврат ТаблицаРеквизитов;
	
КонецФункции

Функция МатериалыДляСписанияНДС(РасчетМатериаловДляСписания, Период, Организация)
	
	Если Не УчетнаяПолитика.ПлательщикНДС(Организация, Период) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	// Функция готовит данные для списания материалов в учете НДС
	// в процедуре УчетНДСБП.СформироватьДвиженияСписаниеТоваровНаРасходы().
	// Аналогичная таблица готовится в Документы.ОтчетПроизводстваЗаСмену.ТекстЗапросаНДС().
	
	МатериалыДляСписанияНДС = УчетНДСБП.НовыйТаблицаТоварыДляСписанияНаРасходы();
	
	Для Каждого СтрокаМатериалаДляСписания Из РасчетМатериаловДляСписания Цикл
		
		СтрокаМатериаловНДС = МатериалыДляСписанияНДС.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаМатериаловНДС, СтрокаМатериалаДляСписания,
			"Номенклатура,СчетУчета,НовыйСпособУчетаНДС,Количество");
		СтрокаМатериаловНДС.ИмяСписка = ИмяВиртуальнойТабличнойЧастиРегламентнойОперации();
		СтрокаМатериаловНДС.СинонимСписка = ПредставлениеВиртуальнойТабличнойЧастиРегламентнойОперации();
		СтрокаМатериаловНДС.НомерСтрокиДокумента = СтрокаМатериалаДляСписания.НомерСтроки;
		СтрокаМатериаловНДС.СтранаПроисхождения = Справочники.СтраныМира.ПустаяСсылка();
		СтрокаМатериаловНДС.НомерГТД = Справочники.НомераГТД.ПустаяСсылка();
		
	КонецЦикла;
	
	Возврат МатериалыДляСписанияНДС;
	
КонецФункции

Функция РасходМатериаловДляСправкиРасчета(РасчетМатериаловДляВыпуска)
	
	// Функция готовит данные для записи в регистр сведений РасчетРасходаМатериаловПоДаннымПродаж
	// По этому отчету формируется справка-расчет "Расход материалов по данным продаж".
	
	ПоляОтбора = "ПериодДень,Номенклатура,Продукция,СчетУчета,Склад";
	
	РасходМатериалов = НовыйРасходМатериаловДляСправкиРасчета();
	РасчетМатериаловДляРасхода = РасчетМатериаловДляВыпуска.Скопировать();
	РасчетМатериаловДляРасхода.Свернуть(ПоляОтбора,
		"КоличествоПродукции,Количество,ПлановаяСтоимостьПродукции");
	
	РасчетМатериаловДляВыпуска.Индексы.Добавить(ПоляОтбора);
	ОтборРасчетаМатериалов = Новый Структура(ПоляОтбора);
	
	Для Каждого СтрокаРасчета Из РасчетМатериаловДляРасхода Цикл
		СтрокаРасхода = РасходМатериалов.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаРасхода, СтрокаРасчета);
		СтрокаРасхода.КоличествоМатериаловНаЕдиницуПродукции = ?(СтрокаРасчета.КоличествоПродукции = 0,
			0, СтрокаРасчета.Количество / СтрокаРасчета.КоличествоПродукции);
		
		ЗаполнитьЗначенияСвойств(ОтборРасчетаМатериалов, СтрокаРасчета);
		СтрокиРасчета = РасчетМатериаловДляВыпуска.НайтиСтроки(ОтборРасчетаМатериалов);
		Если СтрокиРасчета.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(СтрокаРасхода, СтрокиРасчета[0], "Спецификация,НоменклатурнаяГруппа,СтатьяЗатрат");
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат РасходМатериалов;
	
КонецФункции

Функция ДополнитьРасходМатериаловДаннымиДляСписанияПартий(РасчетМатериаловДляСписания, Организация, Период)
	
	ТаблицаСписанияМатериалов = УчетТоваров.НовыйТаблицаТоварыДляСписания();
	
	СчетЗатрат = РасчетВыпускаПоДаннымПродаж.СчетЗатратДляВыпущеннойПродукции();
	СвойстваСчетаЗатрат = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(СчетЗатрат);
	ПодразделениеЗатрат = РасчетВыпускаПоДаннымПродаж.ПодразделениеЗатратДляВыпущеннойПродукции(Организация);
	
	ПоляЗначенийСубконто = Новый Соответствие;
	ПоляЗначенийСубконто.Вставить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Продукция, "Продукция");
	ПоляЗначенийСубконто.Вставить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы, "НоменклатурнаяГруппа");
	ПоляЗначенийСубконто.Вставить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат, "СтатьяЗатрат");
	
	Для Каждого СтрокаРасчета Из РасчетМатериаловДляСписания Цикл
		
		Если СтрокаРасчета.Количество = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаСписанияМатериалов = ТаблицаСписанияМатериалов.Добавить();
		СтрокаСписанияМатериалов.ИмяСписка = ИмяВиртуальнойТабличнойЧастиРегламентнойОперации();
		СтрокаСписанияМатериалов.СинонимСписка = ПредставлениеВиртуальнойТабличнойЧастиРегламентнойОперации();
		СтрокаСписанияМатериалов.Период = Период;
		ЗаполнитьЗначенияСвойств(СтрокаСписанияМатериалов, СтрокаРасчета,
			"НомерСтроки,СчетУчета,Номенклатура,Склад,Количество");
		
		СтрокаСписанияМатериалов.КорСчетСписания = СчетЗатрат;
		СтрокаСписанияМатериалов.КорПодразделение = ПодразделениеЗатрат;
		
		Для НомерСубконто = 1 По СвойстваСчетаЗатрат.КоличествоСубконто Цикл
			ВидСубконто = СвойстваСчетаЗатрат["ВидСубконто" + Строка(НомерСубконто)];
			СтрокаСписанияМатериалов["ВидКорСубконто" + Строка(НомерСубконто)] = ВидСубконто;
			ИмяПоляДляЗначенияСубконто = ПоляЗначенийСубконто.Получить(ВидСубконто);
			Если ЗначениеЗаполнено(ИмяПоляДляЗначенияСубконто) Тогда
				СтрокаСписанияМатериалов["КорСубконто" + Строка(НомерСубконто)] = СтрокаРасчета[ИмяПоляДляЗначенияСубконто];
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаСписанияМатериалов;
	
КонецФункции

#Область УчетИП_НДФЛ

Функция ПодготовитьТаблицуСписанияМатериаловИП(СписаноМатериалов, РасчетМатериаловДляВыпуска)
	
	ТаблицаСписанияМатериаловИП = УчетДоходовИРасходовПредпринимателя.НовыйТаблицаМатериаловДляВыпускаПродукции();
	
	ИмяСписка = ИмяВиртуальнойТабличнойЧастиРегламентнойОперации();
	СинонимСписка = ПредставлениеВиртуальнойТабличнойЧастиРегламентнойОперации();
	
	КлючевыеПоляСписанияМатериалов = "Номенклатура,Склад";
	СписаноМатериаловДляРаспределения = СписаноМатериалов.Скопировать();
	СписаноМатериаловДляРаспределения.Индексы.Добавить(КлючевыеПоляСписанияМатериалов);
	
	ОтборСписаноМатериалов = Новый Структура(КлючевыеПоляСписанияМатериалов);
	
	Для Каждого СтрокаРасчетаМатериаловДляВыпуска Из РасчетМатериаловДляВыпуска Цикл
		
		ОсталосьРаспределить = СтрокаРасчетаМатериаловДляВыпуска.Количество;
		
		ЗаполнитьЗначенияСвойств(ОтборСписаноМатериалов, СтрокаРасчетаМатериаловДляВыпуска);
		СтрокиСписанияМатериалов = СписаноМатериаловДляРаспределения.НайтиСтроки(ОтборСписаноМатериалов);
		Для Каждого СтрокаСписанияМатериалов Из СтрокиСписанияМатериалов Цикл
			
			Если ОсталосьРаспределить = 0 Тогда
				Прервать;
			КонецЕсли;
			
			Если СтрокаСписанияМатериалов.Количество <= 0 Тогда
				Продолжить;
			КонецЕсли;
			
			КоличествоМожноРаспределить = Мин(ОсталосьРаспределить, СтрокаСписанияМатериалов.Количество);
			
			СтрокаСписанияМатериаловИП = ТаблицаСписанияМатериаловИП.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаСписанияМатериаловИП, СтрокаРасчетаМатериаловДляВыпуска,
				"НомерСтроки,Номенклатура,Продукция,КоличествоПродукции,НоменклатурнаяГруппа,СтатьяЗатрат");
			СтрокаСписанияМатериаловИП.СчетЗатрат = СтрокаРасчетаМатериаловДляВыпуска.СчетУчетаПродукции;
			
			СтрокаСписанияМатериаловИП.ИмяСписка = ИмяСписка;
			СтрокаСписанияМатериаловИП.СинонимСписка = СинонимСписка;
			
			СтрокаСписанияМатериаловИП.СчетУчета = СтрокаСписанияМатериалов.СчетУчета;
			СтрокаСписанияМатериаловИП.Партия = СтрокаСписанияМатериалов.Партия;
			СтрокаСписанияМатериаловИП.Количество = КоличествоМожноРаспределить;
			СтрокаСписанияМатериалов.Количество = СтрокаСписанияМатериалов.Количество - КоличествоМожноРаспределить;
			ОсталосьРаспределить = ОсталосьРаспределить - КоличествоМожноРаспределить;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаСписанияМатериаловИП;
	
КонецФункции

Процедура ДобавитьКолонкиТипСкладаИПартияПоступившая(ТаблицаСписанияМатериаловИП, РасчетМатериаловДляВыпуска)
	
	// Выпуск продукции может выполняться по разным складам, и соответственно, разным типам складов.
	// Тип склад важен для определения ХарактерДеятельности (см. УчетДоходовИРасходовПредпринимателя.ПолучитьТаблицыСписанияМПЗ().
	// Тип склада у нас есть в расчете материалов - заполним эти данные оттуда.
	// Выпуск продукции регламентной операцией формирует движения по многим партиям выпуска (реализациям),
	// поэтому также в таблицу нужно добавить и партию, по которой продана/выпущена продукция.
	
	ТаблицаСписанияМатериаловИП.Колонки.Добавить("ТипСклада", Новый ОписаниеТипов("ПеречислениеСсылка.ТипыСкладов"));
	ТаблицаСписанияМатериаловИП.Колонки.Добавить("ПартияПоступившейНоменклатуры", Документы.ТипВсеСсылки());
	
	Для Каждого СтрокаСписанияМатериаловИП Из ТаблицаСписанияМатериаловИП Цикл
		
		СтрокаРасчетаПродукции = РасчетМатериаловДляВыпуска.Найти(СтрокаСписанияМатериаловИП.НомерСтроки, "НомерСтроки");
		Если СтрокаРасчетаПродукции = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаСписанияМатериаловИП.ТипСклада = СтрокаРасчетаПродукции.ТипСклада;
		СтрокаСписанияМатериаловИП.ПартияПоступившейНоменклатуры = СтрокаРасчетаПродукции.ПартияВыпуска;
		
	КонецЦикла
	
КонецПроцедуры

Функция ИмяВиртуальнойТабличнойЧастиРегламентнойОперации()
	
	Возврат НСтр("ru = 'РегламентнаяОперация");
	
КонецФункции

Функция ПредставлениеВиртуальнойТабличнойЧастиРегламентнойОперации()
	
	Возврат НСтр("ru = 'Регламентная операция");
	
КонецФункции

#КонецОбласти

#Область ВыводОшибокРегламентнойОперации

Функция ДанныеДляВыводаВСообщениеОбОшибках(НедостаточноДляСписания, РасчетМатериаловДляСписания)
	
	ДанныеДляВывода = Новый ТаблицаЗначений();
	ДанныеДляВывода.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));
	ДанныеДляВывода.Колонки.Добавить("ДанныеНедостаткаМатериалов");
	
	НедостаточноМатериалов = НедостаточноДляСписания.Скопировать(, "Номенклатура,Склад,СчетУчета,КоличествоОсталосьПогасить");
	НедостаточноМатериалов.Свернуть("Склад,Номенклатура,СчетУчета", "КоличествоОсталосьПогасить");
	// Алгоритм вывода списка недостающих материалов требует обязательного упорядочивания по складу.
	// Упорядочивание по остальным полям нужно только для вывода предсказуемого результата
	НедостаточноМатериалов.Сортировать("Склад,Номенклатура,СчетУчета");
	
	НеобходимоМатериалов = РасчетМатериаловДляСписания.Скопировать(, "Продукция,Номенклатура,Склад,СчетУчета,Количество");
	НеобходимоМатериалов.Свернуть("Продукция,Номенклатура,Склад,СчетУчета", "Количество");
	
	ТекущаяСтрокаДанныхДляВывода = Неопределено;
	Для Каждого СтрокаНедостаточноМатериалов Из НедостаточноМатериалов Цикл
		
		Если ТекущаяСтрокаДанныхДляВывода = Неопределено
			Или СтрокаНедостаточноМатериалов.Склад <> ТекущаяСтрокаДанныхДляВывода.Склад Тогда
			
			ТекущаяСтрокаДанныхДляВывода = ДанныеДляВывода.Добавить();
			ТекущаяСтрокаДанныхДляВывода.Склад = СтрокаНедостаточноМатериалов.Склад;
			ТекущаяСтрокаДанныхДляВывода.ДанныеНедостаткаМатериалов = НовыйДанныеНедостаткаМатериалов();
			
		КонецЕсли;
		
		СтрокаМатериаловНаСкладе = ТекущаяСтрокаДанныхДляВывода.ДанныеНедостаткаМатериалов.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаМатериаловНаСкладе, СтрокаНедостаточноМатериалов, "Номенклатура,СчетУчета");
		СтрокаМатериаловНаСкладе.Количество = СтрокаНедостаточноМатериалов.КоличествоОсталосьПогасить;
		СтрокаМатериаловНаСкладе.Продукция = ПродукцияДляМатериала(ТекущаяСтрокаДанныхДляВывода.Склад,
			СтрокаМатериаловНаСкладе.Номенклатура, СтрокаМатериаловНаСкладе.СчетУчета, НеобходимоМатериалов);
		СтрокаМатериаловНаСкладе.КоличествоНужно = СтрокаМатериаловНаСкладе.Продукция.Итог("КоличествоНужно");
		СтрокаМатериаловНаСкладе.КоличествоВНаличии = СтрокаМатериаловНаСкладе.КоличествоНужно - СтрокаМатериаловНаСкладе.Количество;
		
	КонецЦикла;
	
	Возврат ДанныеДляВывода;
	
КонецФункции

Функция ДанныеДляВыводаВСообщениеОбОшибкахИП(ОшибкиСписанияМПЗ, СписанныеМПЗ)
	
	ДанныеДляВывода = НовыйДанныеНедостаткаМатериаловИП();
	
	НедостаточноМатериалов = ОшибкиСписанияМПЗ.Скопировать(, "Номенклатура,ВидМПЗ,ХарактерДеятельности,Партия,Количество");
	НедостаточноМатериалов.Свернуть("Номенклатура,ВидМПЗ,ХарактерДеятельности,Партия", "Количество");
	НедостаточноМатериалов.Сортировать("Номенклатура,ВидМПЗ,ХарактерДеятельности,Партия");
	
	ОтборСписанныхМПЗ = Новый Структура("Номенклатура,ВидМПЗ,ХарактерДеятельности,Партия");
	
	Для Каждого СтрокаОшибкиСписания Из НедостаточноМатериалов Цикл
		
		ЗаполнитьЗначенияСвойств(ОтборСписанныхМПЗ, СтрокаОшибкиСписания);
		КоличествоСписано = 0;
		СтрокиСписанныхМПЗ = СписанныеМПЗ.НайтиСтроки(ОтборСписанныхМПЗ);
		Для Каждого СтрокаСписанныхМПЗ Из СтрокиСписанныхМПЗ Цикл
			КоличествоСписано = КоличествоСписано + СтрокаСписанныхМПЗ.Количество;
		КонецЦикла;
		
		СтрокаМатериалов = ДанныеДляВывода.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаМатериалов, СтрокаОшибкиСписания, "Номенклатура,ВидМПЗ,ХарактерДеятельности,Партия,Количество");
		СтрокаМатериалов.КоличествоНужно = СтрокаМатериалов.Количество + КоличествоСписано;
		СтрокаМатериалов.КоличествоВНаличии = КоличествоСписано;
		
	КонецЦикла;
	
	Возврат ДанныеДляВывода;
	
КонецФункции

Функция НовыйДанныеНедостаткаМатериалов()
	
	ДанныеНедостаткаМатериалов = Новый ТаблицаЗначений;
	ДанныеНедостаткаМатериалов.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ДанныеНедостаткаМатериалов.Колонки.Добавить("СчетУчета", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ДанныеНедостаткаМатериалов.Колонки.Добавить("Количество", ОбщегоНазначения.ОписаниеТипаЧисло(15,3));
	ДанныеНедостаткаМатериалов.Колонки.Добавить("КоличествоНужно", ОбщегоНазначения.ОписаниеТипаЧисло(15,3));
	ДанныеНедостаткаМатериалов.Колонки.Добавить("КоличествоВНаличии", ОбщегоНазначения.ОписаниеТипаЧисло(15,3));
	ДанныеНедостаткаМатериалов.Колонки.Добавить("Продукция", Новый ОписаниеТипов("ТаблицаЗначений"));
	
	Возврат ДанныеНедостаткаМатериалов;
	
КонецФункции

Функция НовыйДанныеНедостаткаМатериаловИП()
	
	ДанныеНедостаткаМатериалов = Новый ТаблицаЗначений;
	ДанныеНедостаткаМатериалов.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ДанныеНедостаткаМатериалов.Колонки.Добавить("ВидМПЗ", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыМПЗ"));
	ДанныеНедостаткаМатериалов.Колонки.Добавить("ХарактерДеятельности", Новый ОписаниеТипов("ПеречислениеСсылка.ХарактерДеятельности"));
	ДанныеНедостаткаМатериалов.Колонки.Добавить("Партия", Документы.ТипВсеСсылки());
	ДанныеНедостаткаМатериалов.Колонки.Добавить("Количество", ОбщегоНазначения.ОписаниеТипаЧисло(15,3));
	ДанныеНедостаткаМатериалов.Колонки.Добавить("КоличествоНужно", ОбщегоНазначения.ОписаниеТипаЧисло(15,3));
	ДанныеНедостаткаМатериалов.Колонки.Добавить("КоличествоВНаличии", ОбщегоНазначения.ОписаниеТипаЧисло(15,3));
	
	Возврат ДанныеНедостаткаМатериалов;
	
КонецФункции

Функция ПродукцияДляМатериала(Склад, Номенклатура, СчетУчета, НеобходимоМатериалов)
	
	ПродукцияДляМатериала = Новый ТаблицаЗначений;
	ПродукцияДляМатериала.Колонки.Добавить("Продукция", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ПродукцияДляМатериала.Колонки.Добавить("КоличествоНужно", ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	
	ОтборПродукции = Новый Структура;
	ОтборПродукции.Вставить("Склад", Склад);
	ОтборПродукции.Вставить("Номенклатура", Номенклатура);
	ОтборПродукции.Вставить("СчетУчета", СчетУчета);
	
	СтрокиПродукции = НеобходимоМатериалов.НайтиСтроки(ОтборПродукции);
	Для Каждого СтрокаПродукции Из СтрокиПродукции Цикл
		СтрокаПродукцииДляМатериала = ПродукцияДляМатериала.Добавить();
		СтрокаПродукцииДляМатериала.Продукция = СтрокаПродукции.Продукция;
		СтрокаПродукцииДляМатериала.КоличествоНужно = СтрокаПродукции.Количество;
	КонецЦикла;
	
	ПродукцияДляМатериала.Сортировать("Продукция");
	
	Возврат ПродукцияДляМатериала;
	
КонецФункции

Процедура ВывестиВОписаниеОбОшибкахТаблицуМатериаловСклада(Секция, ДанныеНедостаткаМатериалов)
	
	ВыводСообщенийОбОшибках.ДобавитьСекцию(Секция, "НедостаточноМатериаловДляВыпускаПродукции_Шапка", Новый Структура);
	
	Для Каждого СтрокаМатериала Из ДанныеНедостаткаМатериалов Цикл
		
		ДанныеДляВывода = Новый Структура("Номенклатура,СчетУчета,Количество,КоличествоНужно,КоличествоВНаличии");
		ЗаполнитьЗначенияСвойств(ДанныеДляВывода, СтрокаМатериала);
		
		МассивПродукции = СтрокаМатериала.Продукция.ВыгрузитьКолонку("Продукция");
		
		ДанныеДляВывода.Вставить("Продукция", СтрСоединить(МассивПродукции, "," + " "));
		
		РасшифровкаПродукции = ВыводСообщенийОбОшибках.НовыйОписаниеРасшифровки("ФормаСписка");
		РасшифровкаПродукции.Объект    = "Справочник.Номенклатура";
		РасшифровкаПродукции.Заголовок = НСтр("ru = 'Список выпущенной продукции'");
		РасшифровкаПродукции.Отбор.Вставить("Ссылка", МассивПродукции);
		РасшифровкаПродукции.Отбор.Вставить("ЭтоГруппа", Ложь);
		
		ПараметрыФормыСписка = Новый Структура;
		ПараметрыФормыСписка.Вставить("ВидОтображенияТаблицы", ОтображениеТаблицы.Список);
		ПараметрыФормыСписка.Вставить("Заголовок", НСтр("ru = 'Список выпущенной продукции'"));
		
		РасшифровкаПродукции.Вставить("ПараметрыФормы", ПараметрыФормыСписка);
		
		ДанныеДляВывода.Вставить("РасшифровкаПродукции", РасшифровкаПродукции);
		
		СтрокаОписания = ВыводСообщенийОбОшибках.ДобавитьСекцию(
			Секция,
			"НедостаточноМатериаловДляВыпускаПродукции_Строка",
			ДанныеДляВывода);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВывестиВОписаниеОбОшибкахТаблицуМатериаловМП(Секция, ТаблицаДляВывода)
	
	ВыводСообщенийОбОшибках.ДобавитьСекцию(Секция, "НедостаточноМатериаловИПДляВыпускаПродукции_Шапка", Новый Структура);
	
	Для Каждого СтрокаВывода Из ТаблицаДляВывода Цикл
		
		ДанныеДляВывода = Новый Структура("Номенклатура,Партия,ВидМПЗ,ХарактерДеятельности,Количество,КоличествоНужно,КоличествоВНаличии");
		ЗаполнитьЗначенияСвойств(ДанныеДляВывода, СтрокаВывода);
		
		СтрокаОписания = ВыводСообщенийОбОшибках.ДобавитьСекцию(
			Секция,
			"НедостаточноМатериаловИПДляВыпускаПродукции_Строка",
			ДанныеДляВывода);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСчетаУчетаВТаблице(ТаблицаДляЗаполнения, КлючевыеКолонки, ЗаполненныеСчетаУчета)
	
	ОтборСтрок = Новый Структура(КлючевыеКолонки);
	Для Каждого СтрокаТаблицыДляЗаполнения Из ТаблицаДляЗаполнения Цикл
		ЗаполнитьЗначенияСвойств(ОтборСтрок, СтрокаТаблицыДляЗаполнения);
		СтрокиСчетовУчета = ЗаполненныеСчетаУчета.НайтиСтроки(ОтборСтрок);
		Если СтрокиСчетовУчета.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыДляЗаполнения, СтрокиСчетовУчета[0]);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти