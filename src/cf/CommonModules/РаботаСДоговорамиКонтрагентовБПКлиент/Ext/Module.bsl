#Область ПрограммныйИнтерфейс

// Обработчик события выбора поля Договор
//
// Параметры:
// Элемент - Поле формы, для которого выполняется обработчик.
// ВыбранноеЗначение - Значение, выбранное в поле "Договор" формы
// ПараметрыСоздания - см. РаботаСДоговорамиКонтрагентовБП.ПараметрыСозданияНовогоДоговора
// СтандартнаяОбработка
//
Процедура ДоговорОбработкаВыбора(Элемент, ВыбранноеЗначение, ПараметрыСоздания, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Строка")
		И (Не ЗначениеЗаполнено(Элемент.ОграничениеТипа)
		Или Элемент.ОграничениеТипа.СодержитТип(Тип("СправочникСсылка.ДоговорыКонтрагентов"))) Тогда
		
		Если ВыбранноеЗначение = "НовыйДоговор" Тогда
			
			Если ПараметрыСоздания.Свойство("Номер") Тогда
				ПараметрыСоздания.Удалить("Номер");
			КонецЕсли;
			СоздатьДоговор(Элемент, "", ПараметрыСоздания, СтандартнаяОбработка);
			
		ИначеЕсли ВыбранноеЗначение = "БезДоговора" Тогда
			
			ПараметрыСоздания.Вставить("Наименование", НСтр("ru='Без договора'", ОбщегоНазначенияКлиент.КодОсновногоЯзыка()));
			Если ПараметрыСоздания.Свойство("Номер") Тогда
				ПараметрыСоздания.Удалить("Номер");
			КонецЕсли;
			Если ПараметрыСоздания.Свойство("Дата") Тогда
				ПараметрыСоздания.Удалить("Дата");
			КонецЕсли;
			
			ПараметрыДоговора = ПараметрыНовогоДоговора(Элемент.ПараметрыВыбора, ПараметрыСоздания);
			
			ВыбранноеЗначение = РаботаСДоговорамиКонтрагентовБПВызовСервера.СоздатьОсновнойДоговорКонтрагента(ПараметрыДоговора);
			
		ИначеЕсли ВыбранноеЗначение = "НовыйДоговорСНумерацией" Тогда
			
			ПараметрыДоговора = ПараметрыНовогоДоговора(Элемент.ПараметрыВыбора, ПараметрыСоздания);
			
			ВыбранноеЗначение = РаботаСДоговорамиКонтрагентовБПВызовСервера.СоздатьДоговорКонтрагентаСНумерацией(ПараметрыДоговора);
			
		ИначеЕсли ВыбранноеЗначение = "НовыйДоговорСчет" Тогда
			
			ПараметрыСоздания.Вставить("Наименование", СтрШаблон(
				НСтр("ru = 'Счет № %1 от %2 г.'"),
				ПараметрыСоздания.Номер,
				Формат(ПараметрыСоздания.Дата, "ДФ='дд.ММ.гггг'")));
			
			СоздатьДоговор(Элемент, "", ПараметрыСоздания, СтандартнаяОбработка);
			
		Иначе
			
			СоздатьДоговор(Элемент, ВыбранноеЗначение, ПараметрыСоздания, СтандартнаяОбработка);
			
		КонецЕсли;
	ИначеЕсли Элемент.СписокВыбора.Количество() > 0 Тогда 
		Элемент.СписокВыбора.Очистить();
	КонецЕсли;
	
КонецПроцедуры

// Заполняет список выбора для поля Договор
//
// Параметры:
//   ЭлементФормыСписка - Поле формы, для которого выполняется обработчик.
//   Текст - Строка - Текст, введенный в поле Договор формы
//   ПредлагатьНовыйДоговор - Булево - Истина, если в поле Договор должен быть доступен выбор из предопределенных значений.
//   СтандартнаяОбработка - признак выполнения стандартной (системной) обработки события.
//   ПредлагатьНовыйДоговорСНумерацией - Булево - Истина, если в поле Договор доступно создание договора с новым номером.
//   ПредлагатьНовыйДоговорСчет - Булево - Истина, если в поле Договор доступно создание договора с наименованием "Счет № ... от ...".
//
Процедура ЗаполнитьСписокВыбора(ЭлементФормыСписка, Текст, ПредлагатьНовыйДоговор, СтандартнаяОбработка, ПредлагатьНовыйДоговорСНумерацией = Ложь, ПредлагатьНовыйДоговорСчет = Ложь) Экспорт
	
	СписокВыбора = ЭлементФормыСписка.СписокВыбора;
	
	Если СписокВыбора.Количество()> 0 Тогда
		СписокВыбора.Очистить();
	КонецЕсли;
	
	Если ПустаяСтрока(Текст) Тогда
		
		Если ПредлагатьНовыйДоговор Тогда
			СписокВыбора.Добавить("БезДоговора", НСтр("ru='Без договора'", ОбщегоНазначенияКлиент.КодОсновногоЯзыка()));
		КонецЕсли;
		Если ПредлагатьНовыйДоговорСНумерацией Тогда
			СписокВыбора.Добавить("НовыйДоговорСНумерацией", НСтр("ru='Создать договор с новым номером'"));
		ИначеЕсли ПредлагатьНовыйДоговор Тогда
			СписокВыбора.Добавить("НовыйДоговор", НСтр("ru='Создать договор ...'"));
		КонецЕсли;
		Если ПредлагатьНовыйДоговорСчет Тогда
			СписокВыбора.Добавить("НовыйДоговорСчет", НСтр("ru='Создать договор ""Счет № ... от ...""'"));
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура НастроитьСпособЗаполненияСтавкиНДС(Форма, ИмяТаблицы, СтавкаНДС = Неопределено) Экспорт

	Элементы = Форма.Элементы;

	Если НЕ ЗначениеЗаполнено(СтавкаНДС) Тогда
		ТекущиеДанные = Элементы[ИмяТаблицы].ТекущиеДанные;
		СтавкаНДС = ТекущиеДанные.СтавкаНДС;
	КонецЕсли;
	
	Если СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.БезНДС") Тогда
		Форма.СпособЗаполненияСтавкиНДС = ПредопределенноеЗначение("Перечисление.СпособыЗаполненияСтавкиНДС.БезНДС");
	Иначе
		Форма.СпособЗаполненияСтавкиНДС = ПредопределенноеЗначение("Перечисление.СпособыЗаполненияСтавкиНДС.ИзКарточкиНоменклатуры");
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события создания нового договора из формы документа.
//
// Параметры:
//   Элемент - ПолеФормы - элемент формы, для которого выполняется обработчик.
//   ВведенноеЗначение - Строка - текст, введенный в поле ввода.
//   ПараметрыСоздания - см. РаботаСДоговорамиКонтрагентовБП.ПараметрыСозданияНовогоДоговора
//   СтандартнаяОбработка - Булево - признак выполнения стандартной (системной) обработки события
//
Процедура ДоговорСоздание(Элемент, ВведенноеЗначение, ПараметрыСоздания, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(ВведенноеЗначение) = Тип("Строка")
		И (Не ЗначениеЗаполнено(Элемент.ОграничениеТипа)
		Или Элемент.ОграничениеТипа.СодержитТип(Тип("СправочникСсылка.ДоговорыКонтрагентов"))) Тогда
		
		СоздатьДоговор(Элемент, ВведенноеЗначение, ПараметрыСоздания, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик автоподбора значения для поля Договор
//
// Параметры:
//   Элемент - ПолеФормы - элемент формы, для которого выполняется обработчик.
//   Текст - Строка -  текст, введенный в поле Договор.
//   ДанныеВыбора - СписокЗначений - содержит подобранные значения.
//   ПараметрыПолученияДанных - Структура, Неопределено - параметры поиска.
//   Ожидание - Число - интервал после ввода текста.
//   СтандартнаяОбработка - Булево - признак выполнения стандартной (системной) обработки события.
//
Процедура ДоговорАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка) Экспорт
	
	Если Не ПустаяСтрока(Текст)
		И (Не ЗначениеЗаполнено(Элемент.ОграничениеТипа)
		Или Элемент.ОграничениеТипа.СодержитТип(Тип("СправочникСсылка.ДоговорыКонтрагентов"))) Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСДоговорамиКонтрагентовБПВызовСервера.ДанныеВыбораДоговора(ПараметрыПолученияДанных, Ложь);
	КонецЕсли;
	
КонецПроцедуры

// Обработчик окончания ввода текста для поля Договор
//
// Параметры:
//   Элемент - ПолеФормы - элемент формы, для которого выполняется обработчик.
//   Текст - Строка -  текст, введенный в поле Договор.
//   ДанныеВыбора - СписокЗначений - содержит подобранные значения.
//   ПараметрыПолученияДанных - Структура, Неопределено - параметры поиска.
//   СтандартнаяОбработка - Булево - признак выполнения стандартной (системной) обработки события.
//
Процедура ДоговорОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка) Экспорт
	
	Если Не ПустаяСтрока(Текст) 
		И (Не ЗначениеЗаполнено(Элемент.ОграничениеТипа)
		Или Элемент.ОграничениеТипа.СодержитТип(Тип("СправочникСсылка.ДоговорыКонтрагентов"))) Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСДоговорамиКонтрагентовБПВызовСервера.ДанныеВыбораДоговора(ПараметрыПолученияДанных, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЗначенияЗаполненияПоПараметрамВыбора(ПараметрыВыбора)
	
	ЗначенияЗаполнения = Новый Структура;
	
	Для каждого ПараметрВыбора Из ПараметрыВыбора Цикл
		Если СтрНайти(ПараметрВыбора.Имя, "Отбор.") <> 0 Тогда
			ЗначенияЗаполнения.Вставить(СтрЗаменить(ПараметрВыбора.Имя, "Отбор.", ""), ПараметрВыбора.Значение);
		ИначеЕсли СтрНайти(ПараметрВыбора.Имя, ".") = 0 Тогда
			ЗначенияЗаполнения.Вставить(ПараметрВыбора.Имя, ПараметрВыбора.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ЗначенияЗаполнения;
	
КонецФункции

Функция ПараметрыНовогоДоговора(ПараметрыВыбора, ПараметрыСоздания)
	
	ЗначенияЗаполнения = ЗначенияЗаполненияПоПараметрамВыбора(ПараметрыВыбора);
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ЗначенияЗаполнения, ПараметрыСоздания, Ложь);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	Возврат ПараметрыФормы;
	
КонецФункции

Процедура СоздатьДоговор(Элемент, ВведенноеЗначение, ПараметрыСоздания, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ВведенноеЗначение) Тогда
		ЕстьЦифры = СтрРазделить(ВведенноеЗначение, "0123456789", Истина).Количество() > 1;
		Если ЕстьЦифры Тогда
			ПараметрыСоздания.Вставить("Номер", ВведенноеЗначение);
		Иначе
			ПараметрыСоздания.Вставить("Наименование", ВведенноеЗначение);
			Если ПараметрыСоздания.Свойство("Номер") Тогда
				ПараметрыСоздания.Удалить("Номер");
			КонецЕсли;
			Если ПараметрыСоздания.Свойство("Дата") Тогда
				ПараметрыСоздания.Удалить("Дата");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыФормы = ПараметрыНовогоДоговора(Элемент.ПараметрыВыбора, ПараметрыСоздания);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ВидНовогоДоговора", ПараметрыСоздания.ВидДоговора);
	
	СтандартнаяОбработка = Ложь;
	Если ОбщегоНазначенияБПВызовСервера.ЭтоПростойИнтерфейс()
		И Не ПараметрыФормы.ЗначенияЗаполнения.Свойство("Наименование") Тогда
		ОткрытьФорму("Справочник.ДоговорыКонтрагентов.Форма.ФормаНовогоЭлемента", ПараметрыФормы, Элемент);
	Иначе
		ОткрытьФорму("Справочник.ДоговорыКонтрагентов.ФормаОбъекта", ПараметрыФормы, Элемент);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

