#Область СлужебныйПрограммныйИнтерфейс

Функция ОтправлятьУведомления() Экспорт
	
	РезультатЧтения = ОбщегоНазначенияБП.ПрочитатьДанныеИзХранилища(ВладелецДанныхВХранилище(), "ОтправлятьУведомленияПоЭлектроннойПочте");
	
	Если РезультатЧтения = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат РезультатЧтения;
	
КонецФункции

Функция Получатель() Экспорт
	
	РезультатЧтения = ОбщегоНазначенияБП.ПрочитатьДанныеИзХранилища(ВладелецДанныхВХранилище(), "Получатель");
	
	Если РезультатЧтения = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	Возврат РезультатЧтения;
	
КонецФункции

Функция АдресИнформационнойБазы() Экспорт
	
	Если ОбщегоНазначения.РазделениеВключено() Тогда
		АдресИнформационнойБазы = ОбщегоНазначенияБП.ПрочитатьДанныеИзХранилища(
			ВладелецДанныхВХранилище(), "АдресИнформационнойБазы");
		Если АдресИнформационнойБазы = Неопределено Тогда
			Возврат "";
		КонецЕсли;
	Иначе
		АдресИнформационнойБазы = ОбщегоНазначения.АдресПубликацииИнформационнойБазыВИнтернете();
		Если ПустаяСтрока(АдресИнформационнойБазы) Тогда
			АдресИнформационнойБазы = ОбщегоНазначения.АдресПубликацииИнформационнойБазыВЛокальнойСети();
		КонецЕсли;
	КонецЕсли;
	
	Возврат АдресИнформационнойБазы;
	
КонецФункции

Процедура УстановитьОтправлятьУведомления(ОтправлятьУведомления) Экспорт
	
	ОбщегоНазначенияБП.ЗаписатьДанныеВХранилище(ВладелецДанныхВХранилище(),
		ОтправлятьУведомления, "ОтправлятьУведомленияПоЭлектроннойПочте");
		
	Если ОбщегоНазначения.РазделениеВключено() Тогда
		ОбщегоНазначенияБП.ЗаписатьДанныеВХранилище(ВладелецДанныхВХранилище(), 
			ПолучитьНавигационнуюСсылкуИнформационнойБазы(), "АдресИнформационнойБазы");
	КонецЕсли;

КонецПроцедуры

Процедура УстановитьПолучателя(Получатель) Экспорт
	
	ОбщегоНазначенияБП.ЗаписатьДанныеВХранилище(ВладелецДанныхВХранилище(),
		Получатель, "Получатель");
	
КонецПроцедуры

Функция КорректностьНастройки() Экспорт
	
	Если Не ОтправлятьУведомления() Тогда
		Возврат Истина;
	КонецЕсли;
	
	// Проверка заполненности получателя
	Получатель = Получатель();
	Если ПустаяСтрока(Получатель) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Проверка корректности получателя
	Адреса = ОбщегоНазначенияКлиентСервер.АдресаЭлектроннойПочтыИзСтроки(Получатель);
	Для каждого Адрес Из Адреса Цикл
		Если Не ПустаяСтрока(Адрес.ОписаниеОшибки) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	// Проверка системной записи электронной почты
	УстановитьПривилегированныйРежим(Истина);
	СистемнаяУчетнаяЗапись = РаботаСПочтовымиСообщениями.СистемнаяУчетнаяЗапись();
	УчетнаяЗаписьНастроена = РаботаСПочтовымиСообщениями.УчетнаяЗаписьНастроена(СистемнаяУчетнаяЗапись, Истина, Ложь);
	Если Не УчетнаяЗаписьНастроена Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВладелецДанныхВХранилище()
	
	Возврат "УведомленияОЗадачах";
	
КонецФункции

#КонецОбласти