////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ, ОТРАЖАЮЩИЕ ХОЗЯЙСТВЕННЫЕ ОПЕРАЦИИ В ПОДСИСТЕМЕ

Функция ДатаОтменыСпецодежды() Экспорт
	
	Возврат '20210101';
	
КонецФункции

#Область ПередачаМатериаловСотруднику

Процедура СформироватьДвиженияПередачаМатериаловСотруднику(ТаблицаМатериалы, ТаблицаСписанныеМатериалы, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Если Не ЗначениеЗаполнено(ТаблицаМатериалы) Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыПередачаМатериаловСотруднику(ТаблицаМатериалы, ТаблицаСписанныеМатериалы, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ

	ТаблицаПереданныеСотрудникуМатериалы = ПодготовитьТаблицуПереданныеСотрудникуМатериалы(
		Параметры.ТаблицаМатериалы, Параметры.ТаблицаСписанныеМатериалы, Отказ);

	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ

	СформироватьПроводкиПередачаМатериаловСотрудникуМЦ(ТаблицаПереданныеСотрудникуМатериалы, Реквизиты, Движения, Отказ);

КонецПроцедуры

Функция ПодготовитьПараметрыПередачаМатериаловСотруднику(ТаблицаМатериалы, ТаблицаСписанныеМатериалы, ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ТаблицаМатериалы
	
	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"                   // <Число> - номер строки в списке
	+ "СчетМЦ,"                        // <ПланСчетовСсылка.Хозрасчетный> - забалансовый счет учета материалов в эксплуатации (МЦ)
	+ "Номенклатура,"                  // <СправочникСсылка.Номенклатура> - номенклатура материалов в эксплуатации
	+ "ПартияМатериаловВЭксплуатации," // <Характеристика.ВидыСубконтоХозрасчетные> - партия материалов в эксплуатации
	+ "ФизЛицо,"                       // <СправочникСсылка.ФизическиеЛица> - материально-ответственное лицо
	+ "Подразделение,"                 // <Ссылка на справочник подразделений> - производственное подразделение организации
	+ "КоличествоМЦ,"                  // <Число,15,3> - количество материалов для учета на забалансовом счете (МЦ)
	+ "Содержание";                    // <Строка> - содержание проводки
	
	Параметры.Вставить("ТаблицаМатериалы", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаМатериалы, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.ТаблицаСписанныеМатериалы
	
	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"                   // <Число> - номер строки в списке
	+ "СуммаСписания,"                 // <Число,15,2> - себестоимость материалов, определенная по данным остатков
	+ "СуммаСписанияНУ,"               // <Число,15,2> - себестоимость материалов (НУ), определенная по данным остатков
	+ "СуммаСписанияПР,"               // <Число,15,2> - сумма постоянных разниц (ПБУ 18/02) в себестоимости материалов, определенной по данным остатков
	+ "СуммаСписанияВР";               // <Число,15,2> - сумма временных разниц (ПБУ 18/02) в себестоимости материалов, определенной по данным остатков
	
	Параметры.Вставить("ТаблицаСписанныеМатериалы", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаСписанныеМатериалы, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Период,"                        // <Дата> - период движений - дата документа
	+ "Организация,"                   // <СправочникСсылка.Организации>
	+ "СпособУчетаМатериаловПоСотруднику,"
	+ "Регистратор";                   // <ДокументСсылка.*> - документ-регистратор движений
	
	Параметры.Вставить("Реквизиты", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

Функция ПодготовитьТаблицуПереданныеСотрудникуМатериалы(ТаблицаМатериалы, ТаблицаСписанныеМатериалы, Отказ)
	
	ОписаниеТипаЧисла15_2 = ОбщегоНазначения.ОписаниеТипаЧисло(15, 2);
	
	ТаблицаМатериалы.Колонки.Добавить("Сумма",     ОписаниеТипаЧисла15_2);
	ТаблицаМатериалы.Колонки.Добавить("СуммаМЦ",   ОписаниеТипаЧисла15_2);
	ТаблицаМатериалы.Колонки.Добавить("СуммаНУ",   ОписаниеТипаЧисла15_2);
	ТаблицаМатериалы.Колонки.Добавить("СуммаМЦНУ", ОписаниеТипаЧисла15_2);
	ТаблицаМатериалы.Колонки.Добавить("СуммаПР",   ОписаниеТипаЧисла15_2);
	ТаблицаМатериалы.Колонки.Добавить("СуммаВР",   ОписаниеТипаЧисла15_2);
	
	Если ТаблицаМатериалы.Количество() = 0 Тогда
		Возврат ТаблицаМатериалы;
	КонецЕсли;
	
	ТаблицаСписанныеМатериалы.Свернуть("НомерСтроки", "СуммаСписания,СуммаСписанияНУ,СуммаСписанияПР,СуммаСписанияВР");
	
	Для каждого СтрокаТаблицы Из ТаблицаМатериалы Цикл
		
		Если СтрокаТаблицы.НомерСтроки > ТаблицаСписанныеМатериалы.Количество() Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаСписания = ТаблицаСписанныеМатериалы[СтрокаТаблицы.НомерСтроки - 1];
		
		СтрокаТаблицы.Сумма = СтрокаСписания.СуммаСписания;
		СтрокаТаблицы.СуммаНУ = СтрокаСписания.СуммаСписанияНУ;
		СтрокаТаблицы.СуммаМЦ = СтрокаСписания.СуммаСписания;
		СтрокаТаблицы.СуммаМЦНУ = СтрокаСписания.СуммаСписанияНУ;
		СтрокаТаблицы.СуммаПР = СтрокаСписания.СуммаСписанияПР;
		СтрокаТаблицы.СуммаВР = СтрокаСписания.СуммаСписанияВР;
		
	КонецЦикла;
	
	Возврат ТаблицаМатериалы;

КонецФункции

Процедура СформироватьПроводкиПередачаМатериаловСотрудникуМЦ(ТаблицаМатериалы, Реквизиты, Движения, Отказ)
	
	Для каждого СтрокаТаблицы из ТаблицаМатериалы Цикл

		Если СтрокаТаблицы.Сумма = 0
				И СтрокаТаблицы.КоличествоМЦ = 0 Тогда
			Продолжить;
		КонецЕсли;
	
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Период      = Реквизиты.Период;
		Проводка.Организация = Реквизиты.Организация;
		
		Проводка.Содержание  = СтрокаТаблицы.Содержание;
		
		Проводка.СчетДт = СтрокаТаблицы.СчетМЦ;
		
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Номенклатура", СтрокаТаблицы.Номенклатура);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПартииМатериаловВЭксплуатации", СтрокаТаблицы.ПартияМатериаловВЭксплуатации);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "РаботникиОрганизаций", СтрокаТаблицы.ФизЛицо);
		
		СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);
		
		Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = СтрокаТаблицы.Подразделение;
		КонецЕсли;
		
		Если СвойстваСчетаДт.Количественный Тогда
			Проводка.КоличествоДт = СтрокаТаблицы.КоличествоМЦ;
		КонецЕсли;
		
		// При выборе способа учета Расход сразу же списываем материалы со счета МЦ.
		Если Реквизиты.СпособУчетаМатериаловПоСотруднику = Перечисления.СпособыУчетаМатериаловПоСотрудникам.Расход Тогда
			Проводка.СчетКт = СтрокаТаблицы.СчетМЦ;
			СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);
			
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Номенклатура", СтрокаТаблицы.Номенклатура);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ПартииМатериаловВЭксплуатации", СтрокаТаблицы.ПартияМатериаловВЭксплуатации);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РаботникиОрганизаций", СтрокаТаблицы.ФизЛицо);
			
			Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
				Проводка.ПодразделениеКт = СтрокаТаблицы.Подразделение;
			КонецЕсли;
			
			Если СвойстваСчетаКт.Количественный Тогда
				Проводка.КоличествоКт = СтрокаТаблицы.КоличествоМЦ;
			КонецЕсли;
		КонецЕсли;
		
		Проводка.Сумма = СтрокаТаблицы.Сумма;
		
	КонецЦикла;
	
	Движения.Хозрасчетный.Записывать = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СписаниеМатериаловССотрудника

Функция ПодготовитьТаблицуСписанныеССотрудникаМатериалы(ТаблицаМатериалы, ТаблицаРеквизиты, Отказ) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаМатериалы) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Реквизиты = ТаблицаРеквизиты[0];
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаМатериалы.НомерСтроки КАК НомерСтроки,
	|	ТаблицаМатериалы.Номенклатура КАК Номенклатура,
	|	ТаблицаМатериалы.Количество КАК Количество,
	|	ТаблицаМатериалы.Содержание КАК Содержание
	|ПОМЕСТИТЬ ТаблицаМатериалы
	|ИЗ
	|	&ТаблицаМатериалы КАК ТаблицаМатериалы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаМатериалы.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаМатериалы.Номенклатура КАК Номенклатура,
	|	СУММА(ТаблицаМатериалы.Количество) КАК Количество,
	|	МИНИМУМ(ТаблицаМатериалы.Содержание) КАК Содержание
	|ПОМЕСТИТЬ СгруппированнаяТаблицаМатериалы
	|ИЗ
	|	ТаблицаМатериалы КАК ТаблицаМатериалы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаМатериалы.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СгруппированнаяТаблицаМатериалы.НомерСтроки КАК НомерСтроки,
	|	СгруппированнаяТаблицаМатериалы.Номенклатура КАК Номенклатура,
	|	СгруппированнаяТаблицаМатериалы.Количество КАК Количество,
	|	СгруппированнаяТаблицаМатериалы.Содержание КАК Содержание,
	|	&Сотрудник КАК Сотрудник,
	|	&Подразделение КАК Подразделение,
	|	ЕСТЬNULL(ХозрасчетныйОстаткиМЦ.КоличествоОстатокДт, 0) КАК КоличествоМЦОстаток,
	|	ЕСТЬNULL(ХозрасчетныйОстаткиМЦ.СуммаОстатокДт, 0) КАК ПервоначальнаяСтоимостьКонечныйОстаток,
	|	ХозрасчетныйОстаткиМЦ.Субконто2 КАК ПартияМатериаловВЭксплуатации,
	|	ХозрасчетныйОстаткиМЦ.Счет КАК СчетУчета
	|ИЗ
	|	СгруппированнаяТаблицаМатериалы КАК СгруппированнаяТаблицаМатериалы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&Период,
	|				Счет В (&СчетаУчета),
	|				&ВидыСубконто,
	|				Организация = &Организация
	|					И (Подразделение = &Подразделение
	|						ИЛИ Подразделение ЕСТЬ NULL)
	|					И Субконто3 = &Сотрудник) КАК ХозрасчетныйОстаткиМЦ
	|		ПО СгруппированнаяТаблицаМатериалы.Номенклатура = ХозрасчетныйОстаткиМЦ.Субконто1
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	СчетУчета,
	|	ПартияМатериаловВЭксплуатации
	|ИТОГИ
	|	МАКСИМУМ(Количество),
	|	СУММА(КоличествоМЦОстаток)
	|ПО
	|	НомерСтроки";
	Запрос.УстановитьПараметр("ТаблицаМатериалы", ТаблицаМатериалы);
	Запрос.УстановитьПараметр("Период"       , Новый Граница(Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация"  , Реквизиты.Организация);
	Запрос.УстановитьПараметр("Подразделение", Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("Сотрудник"    , Реквизиты.Сотрудник);
	
	СчетаУчета = Новый Массив;
	СчетаУчета.Добавить(БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ИнвентарьИХозяйственныеПринадлежностиВЭксплуатации));
	СчетаУчета.Добавить(БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.СпецодеждаВЭксплуатацииВспомогательный));
	
	Запрос.УстановитьПараметр("СчетаУчета", СчетаУчета);
	
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПартииМатериаловВЭксплуатации);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций);
	Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	
	ТаблицаСписанныеМатериалы = Новый ТаблицаЗначений;
	ТаблицаСписанныеМатериалы.Колонки.Добавить("НомерСтроки");
	ТаблицаСписанныеМатериалы.Колонки.Добавить("Номенклатура");
	ТаблицаСписанныеМатериалы.Колонки.Добавить("Количество");
	ТаблицаСписанныеМатериалы.Колонки.Добавить("Содержание");
	ТаблицаСписанныеМатериалы.Колонки.Добавить("Сотрудник");
	ТаблицаСписанныеМатериалы.Колонки.Добавить("Подразделение");
	ТаблицаСписанныеМатериалы.Колонки.Добавить("Сумма");
	ТаблицаСписанныеМатериалы.Колонки.Добавить("СчетУчета");
	ТаблицаСписанныеМатериалы.Колонки.Добавить("ПартияМатериаловВЭксплуатации");
	
	ВыборкаНомерСтроки = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНомерСтроки.Следующий() Цикл
		
		// Проверяем, достаточный ли остаток по количеству
		Если ВыборкаНомерСтроки.Количество > ВыборкаНомерСтроки.КоличествоМЦОстаток Тогда
			
			ТекстОшибки = НСтр("ru='Указанное количество превышает остаток по счетам МЦ.
				|Остаток: %1; Не хватает: %2'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки,
				ВыборкаНомерСтроки.КоличествоМЦОстаток,
				ВыборкаНомерСтроки.Количество - ВыборкаНомерСтроки.КоличествоМЦОстаток);
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", "Корректность",
				НСтр("ru = 'Количество'"),
				ВыборкаНомерСтроки.НомерСтроки,
				"Материалы",
				ТекстОшибки);
			Поле = "Материалы" + "[" + Формат(ВыборкаНомерСтроки.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].Количество";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Поле, "Объект", Отказ);
		
			Продолжить;
		КонецЕсли;

		КоличествоОсталось = ВыборкаНомерСтроки.Количество;
		ВыборкаДетальныеЗаписи = ВыборкаНомерСтроки.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СтрокаСписанныеМатериалы = ТаблицаСписанныеМатериалы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаСписанныеМатериалы, ВыборкаДетальныеЗаписи,, "Количество");
			КоличествоКСписанию = Мин(КоличествоОсталось, ВыборкаДетальныеЗаписи.КоличествоМЦОстаток);
			
			// Рассчитываем суммы списания
			ДоляСписанияМЦ = ?(ВыборкаДетальныеЗаписи.КоличествоМЦОстаток = 0, 0, КоличествоКСписанию / ВыборкаДетальныеЗаписи.КоличествоМЦОстаток);
			СтрокаСписанныеМатериалы.Сумма = ВыборкаДетальныеЗаписи.ПервоначальнаяСтоимостьКонечныйОстаток * ДоляСписанияМЦ;
			СтрокаСписанныеМатериалы.Количество = КоличествоКСписанию;
			
			КоличествоОсталось = КоличествоОсталось - КоличествоКСписанию;
			Если КоличествоОсталось = 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

	Возврат ТаблицаСписанныеМатериалы;

КонецФункции

Процедура СформироватьДвиженияСписаниеМатериаловССотрудника(ТаблицаСписанныеССотрудникаМатериалы, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Если Не ЗначениеЗаполнено(ТаблицаСписанныеССотрудникаМатериалы) Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыСписаниеМатериаловССотрудника(ТаблицаСписанныеССотрудникаМатериалы, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ

	СформироватьПроводкиСписаниеМатериаловССотрудника(Параметры.ТаблицаСписанныеССотрудникаМатериалы,
		Реквизиты, Движения, Отказ);

КонецПроцедуры

Функция ПодготовитьПараметрыСписаниеМатериаловССотрудника(ТаблицаСписанныеССотрудникаМатериалы,  ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ТаблицаМатериалы
	
	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"                   // <Число> - номер строки в списке
	+ "Номенклатура,"                  // <СправочникСсылка.Номенклатура> - номенклатура материалов в эксплуатации
	+ "Количество,"                    // <Число,15,3> - количество материалов для учета на забалансовом счете (МЦ)
	+ "Содержание,"                     // <Строка> - содержание проводки
	+ "Сотрудник,"                      // <СправочникСсылка.ФизическиеЛица> - сотрудник, с которого списываются материалы
	+ "Подразделение,"                  // <Ссылка на справочник подразделений> - производственное подразделение организации
	+ "Сумма,"                          // <Число,15,2> - себестоимость материалов, определенная по данным остатков
	+ "СчетУчета,"                      // <ПланСчетовСсылка.Хозрасчетный> - забалансовый счет учета материалов в эксплуатации (МЦ)
	+ "ПартияМатериаловВЭксплуатации"; // <Характеристика.ВидыСубконтоХозрасчетные> - партия материалов в эксплуатации
	
	Параметры.Вставить("ТаблицаСписанныеССотрудникаМатериалы", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаСписанныеССотрудникаМатериалы, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Период,"                        // <Дата> - период движений - дата документа
	+ "Организация,"                   // <СправочникСсылка.Организации>
	+ "Подразделение,"                 // <Ссылка на справочник подразделений> - производственное подразделение организации
	+ "Сотрудник,"                     // <СправочникСсылка.ФизическиеЛица> - материально-ответственное лицо
	+ "Регистратор";                   // <ДокументСсылка.*> - документ-регистратор движений
	
	Параметры.Вставить("Реквизиты", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

Процедура СформироватьПроводкиСписаниеМатериаловССотрудника(ТаблицаСписанныеССотрудникаМатериалы, Реквизиты, Движения, Отказ)
	
	Для каждого СтрокаТаблицы из ТаблицаСписанныеССотрудникаМатериалы Цикл

		Если СтрокаТаблицы.Сумма = 0
				И СтрокаТаблицы.Количество = 0 Тогда
			Продолжить;
		КонецЕсли;
	
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Период      = Реквизиты.Период;
		Проводка.Организация = Реквизиты.Организация;
		
		Проводка.Содержание  = СтрокаТаблицы.Содержание;
		
		Проводка.СчетКт = СтрокаТаблицы.СчетУчета;
		
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Номенклатура",
			СтрокаТаблицы.Номенклатура);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ПартииМатериаловВЭксплуатации",
			СтрокаТаблицы.ПартияМатериаловВЭксплуатации);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РаботникиОрганизаций",
			СтрокаТаблицы.Сотрудник);
		
		СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);
		
		Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеКт = СтрокаТаблицы.Подразделение;
		КонецЕсли;
		
		Если СвойстваСчетаКт.Количественный Тогда
			Проводка.КоличествоКт = СтрокаТаблицы.Количество;
		КонецЕсли;
		
		Проводка.Сумма = СтрокаТаблицы.Сумма;
		
	КонецЦикла;
	
	Движения.Хозрасчетный.Записывать = Истина;
	
КонецПроцедуры

Процедура ЗаполнитьПоОстаткамПереданныеСотрудникуМатериалы(ДокументОбъект, ТаблицаМатериалы,
		СИстекшимСрокомПолезногоИспользования, ВедетсяУчетпрослеживаемыхТоваров = Ложь) Экспорт

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Дата"         , КонецДня(ДокументОбъект.Дата) + 1);
	Запрос.УстановитьПараметр("Организация"  , ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("Подразделение", ДокументОбъект.ПодразделениеОрганизации);
	Запрос.УстановитьПараметр("Сотрудник"    , ДокументОбъект.Сотрудник);
	Запрос.УстановитьПараметр("ВедетсяУчетПрослеживаемыхТоваров", ВедетсяУчетПрослеживаемыхТоваров);
	
	Если ДокументОбъект.Ссылка.Пустая() Тогда
		Запрос.УстановитьПараметр("Период", Новый Граница(ДокументОбъект.Дата, ВидГраницы.Исключая));
	Иначе
		Запрос.УстановитьПараметр("Период",
			Новый Граница(Новый МоментВремени(ДокументОбъект.Дата, ДокументОбъект.Ссылка), ВидГраницы.Исключая));
	КонецЕсли;
	
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПартииМатериаловВЭксплуатации);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций);
	Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	
	СчетаУчета = Новый Массив;
	СчетаУчета.Добавить(БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ИнвентарьИХозяйственныеПринадлежностиВЭксплуатации));
	СчетаУчета.Добавить(БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.СпецодеждаВЭксплуатацииВспомогательный));
	
	Запрос.УстановитьПараметр("СчетаУчета", СчетаУчета);
	
	Если СИстекшимСрокомПолезногоИспользования Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Субконто1 КАК Номенклатура,
		|	ХозрасчетныйОстатки.КоличествоОстаток КАК Количество,
		|	ПередачаМатериаловВЭксплуатациюИнвентарь.Ссылка.Дата КАК ДатаВыдачи
		|ПОМЕСТИТЬ ОстаткиМатериалы
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&Период,
		|			Счет В (&СчетаУчета),
		|			&ВидыСубконто,
		|			Организация = &Организация
		|				И (Подразделение = &Подразделение
		|					ИЛИ Подразделение ЕСТЬ NULL)
		|				И Субконто2 ССЫЛКА Документ.ПередачаМатериаловВЭксплуатацию
		|				И Субконто3 = &Сотрудник) КАК ХозрасчетныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВЭксплуатацию.ИнвентарьИХозяйственныеПринадлежности КАК ПередачаМатериаловВЭксплуатациюИнвентарь
		|		ПО ХозрасчетныйОстатки.Субконто1 = ПередачаМатериаловВЭксплуатациюИнвентарь.Номенклатура
		|			И ХозрасчетныйОстатки.Субконто2 = ПередачаМатериаловВЭксплуатациюИнвентарь.Ссылка
		|			И ХозрасчетныйОстатки.Субконто3 = ПередачаМатериаловВЭксплуатациюИнвентарь.ФизЛицо
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.КоличествоОстаток,
		|	ПартияМатериаловВЭксплуатации.Дата
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&Период,
		|			Счет В (&СчетаУчета),
		|			&ВидыСубконто,
		|			Организация = &Организация
		|				И (Подразделение = &Подразделение
		|					ИЛИ Подразделение ЕСТЬ NULL)
		|				И Субконто2 ССЫЛКА Документ.ПартияМатериаловВЭксплуатации
		|				И Субконто3 = &Сотрудник) КАК ХозрасчетныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПартияМатериаловВЭксплуатации КАК ПартияМатериаловВЭксплуатации
		|		ПО ХозрасчетныйОстатки.Субконто1 = ПартияМатериаловВЭксплуатации.Номенклатура
		|			И ХозрасчетныйОстатки.Субконто2 = ПартияМатериаловВЭксплуатации.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.КоличествоОстаток,
		|	ТребованиеНакладнаяМатериалы.Ссылка.Дата
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&Период,
		|			Счет В (&СчетаУчета),
		|			&ВидыСубконто,
		|			Организация = &Организация
		|				И (Подразделение = &Подразделение
		|					ИЛИ Подразделение ЕСТЬ NULL)
		|				И Субконто2 ССЫЛКА Документ.ТребованиеНакладная
		|				И Субконто3 = &Сотрудник) КАК ХозрасчетныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТребованиеНакладная.Материалы КАК ТребованиеНакладнаяМатериалы
		|		ПО ХозрасчетныйОстатки.Субконто1 = ТребованиеНакладнаяМатериалы.Номенклатура
		|			И ХозрасчетныйОстатки.Субконто2 = ТребованиеНакладнаяМатериалы.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиМатериалы.Номенклатура КАК Номенклатура,
		|	ОстаткиМатериалы.Количество КАК Количество,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СрокиИспользованияНоменклатуры.СрокИспользования, 0) > 0
		|			ТОГДА ДОБАВИТЬКДАТЕ(ОстаткиМатериалы.ДатаВыдачи, МЕСЯЦ, ЕСТЬNULL(СрокиИспользованияНоменклатуры.СрокИспользования, 0))
		|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|	КОНЕЦ КАК ДатаСписания
		|ПОМЕСТИТЬ ОстаткиМатериалыПоСрокам
		|ИЗ
		|	ОстаткиМатериалы КАК ОстаткиМатериалы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СрокиИспользованияНоменклатуры КАК СрокиИспользованияНоменклатуры
		|		ПО ОстаткиМатериалы.Номенклатура = СрокиИспользованияНоменклатуры.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиМатериалыПоСрокам.Номенклатура КАК Номенклатура,
		|	ОстаткиМатериалыПоСрокам.Количество КАК Количество,
		|	ВЫБОР
		|		КОГДА &ВедетсяУчетПрослеживаемыхТоваров
		|			ТОГДА СправочникНоменклатура.ПрослеживаемыйКомплект
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПрослеживаемыйКомплект,
		|	ВЫБОР
		|		КОГДА &ВедетсяУчетПрослеживаемыхТоваров
		|			ТОГДА СправочникНоменклатура.ПрослеживаемыйТовар
		|					ИЛИ СправочникНоменклатура.ПрослеживаемыйКомплект
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПрослеживаемыйТовар,
		|	СправочникНоменклатура.СтранаПроисхождения КАК СтранаПроисхождения
		|ИЗ
		|	ОстаткиМатериалыПоСрокам КАК ОстаткиМатериалыПоСрокам
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО ОстаткиМатериалыПоСрокам.Номенклатура = СправочникНоменклатура.Ссылка
		|ГДЕ
		|	ОстаткиМатериалыПоСрокам.ДатаСписания < &Дата
		|	И ОстаткиМатериалыПоСрокам.ДатаСписания <> ДАТАВРЕМЯ(1, 1, 1)";
		
	Иначе
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Субконто1 КАК Номенклатура,
		|	ХозрасчетныйОстатки.КоличествоОстатокДт КАК Количество,
		|	ВЫБОР
		|		КОГДА &ВедетсяУчетПрослеживаемыхТоваров
		|			ТОГДА СправочникНоменклатура.ПрослеживаемыйКомплект
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПрослеживаемыйКомплект,
		|	ВЫБОР
		|		КОГДА &ВедетсяУчетПрослеживаемыхТоваров
		|			ТОГДА СправочникНоменклатура.ПрослеживаемыйТовар
		|					ИЛИ СправочникНоменклатура.ПрослеживаемыйКомплект
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПрослеживаемыйТовар,
		|	СправочникНоменклатура.СтранаПроисхождения КАК СтранаПроисхождения
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&Период,
		|			Счет В (&СчетаУчета),
		|			&ВидыСубконто,
		|			Организация = &Организация
		|				И (Подразделение = &Подразделение
		|					ИЛИ Подразделение ЕСТЬ NULL)
		|				И Субконто3 = &Сотрудник) КАК ХозрасчетныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО ХозрасчетныйОстатки.Субконто1 = СправочникНоменклатура.Ссылка";
		
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	ОстаткиМатериалов = Запрос.Выполнить().Выгрузить();
	Если ВедетсяУчетПрослеживаемыхТоваров Тогда
		МассивНоменклатуры = ОбщегоНазначения.ВыгрузитьКолонку(ОстаткиМатериалов, "Номенклатура", Истина);
		РеквизитыНоменклатурыИзИстории = Справочники.Номенклатура.ПризнакПрослеживаемостиНаДатуИзИстории(
		МассивНоменклатуры, ДокументОбъект.Дата);
		Для Каждого Строка Из ОстаткиМатериалов Цикл
			РеквизитыТекущейНоменклатуры = РеквизитыНоменклатурыИзИстории[Строка.Номенклатура];
			Если РеквизитыТекущейНоменклатуры <> Неопределено Тогда
				Строка.ПрослеживаемыйТовар = РеквизитыТекущейНоменклатуры.ПрослеживаемыйТовар;
				Строка.ПрослеживаемыйКомплект = РеквизитыТекущейНоменклатуры.ПрослеживаемыйКомплект;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	ТаблицаМатериалы.Загрузить(ОстаткиМатериалов);

КонецПроцедуры

#КонецОбласти

// ПЕРЕДАЧА МАТЕРИАЛОВ В ЭКСПЛУАТАЦИЮ

Процедура СформироватьДвиженияПередачаСпецодеждыСпецоснасткиВЭксплуатацию(ТаблицаМатериалы, ТаблицаСписанныеМатериалы, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Если Не ЗначениеЗаполнено(ТаблицаМатериалы) Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыПередачаСпецодеждыСпецоснасткиВЭксплуатацию(ТаблицаМатериалы, ТаблицаСписанныеМатериалы, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ

	ТаблицаПереданныеМатериалы = ПодготовитьТаблицуПереданныеВЭксплуатациюМатериалы(
		Параметры.ТаблицаМатериалы, Параметры.ТаблицаСписанныеМатериалы, Отказ);
	
	ТаблицаНачислениеПогашенияСтоимостиМатериалов = ПодготовитьТаблицуНачислениеПогашенияСтоимостиСпецодеждыСпецоснастки(
		ТаблицаПереданныеМатериалы, Реквизиты, Отказ);

	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
	
	СформироватьПроводкиПогашениеСтоимостиСпецодеждыСпецоснастки(
		ТаблицаНачислениеПогашенияСтоимостиМатериалов, Реквизиты, Движения, Отказ);
	
	СформироватьПроводкиПоступлениеСпецодеждыСпецоснасткиВЭксплуатациюМЦ(
		ТаблицаНачислениеПогашенияСтоимостиМатериалов, Реквизиты, Движения, Отказ);

КонецПроцедуры

Функция ПодготовитьПараметрыПередачаСпецодеждыСпецоснасткиВЭксплуатацию(ТаблицаМатериалы, ТаблицаСписанныеМатериалы, ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ТаблицаМатериалы
	
	СписокОбязательныхКолонок = ""
	+ "ИмяСписка,"                     // <Строка,0> - имя списка в документе
	+ "НомерСтроки,"                   // <Число> - номер строки в списке
	+ "СчетПередачи,"                  // <ПланСчетовСсылка.Хозрасчетный> - счет учета материалов в эксплуатации
	+ "СчетМЦ,"                        // <ПланСчетовСсылка.Хозрасчетный> - забалансовый счет учета материалов в эксплуатации (МЦ)
	+ "Номенклатура,"                  // <СправочникСсылка.Номенклатура> - номенклатура материалов в эксплуатации
	+ "ПартияМатериаловВЭксплуатации," // <Характеристика.ВидыСубконтоХозрасчетные> - партия материалов в эксплуатации
	+ "ФизЛицо,"                       // <СправочникСсылка.ФизическиеЛица> - материально-ответственное лицо
	+ "Подразделение,"                 // <Ссылка на справочник подразделений> - производственное подразделение организации
	+ "СпособПогашенияСтоимости,"      // <ПеречислениеСсылка.СпособыПогашенияСтоимости> - способ погашения стоимости материалов
	+ "СпособПогашенияСтоимостиНУ,"      // <ПеречислениеСсылка.СпособыПогашенияСтоимости> - способ погашения стоимости материалов в НУ
	+ "СпособОтраженияРасходов,"       // <СправочникСсылка.СпособыОтраженияРасходов> - способ отражения в затратах погашенной стоимости материалов
	+ "Количество,"                    // <Число,15,3> - количество материалов для погашения стоимости
	+ "КоличествоМЦ";                  // <Число,15,3> - количество материалов для учета на забалансовом счете (МЦ)
	
	Параметры.Вставить("ТаблицаМатериалы", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаМатериалы, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.ТаблицаСписанныеМатериалы
	
	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"                   // <Число> - номер строки в списке
	+ "СуммаСписания,"                 // <Число,15,2> - себестоимость материалов, определенная по данным остатков
	+ "СуммаСписанияНУ,"               // <Число,15,2> - себестоимость материалов (НУ), определенная по данным остатков
	+ "СуммаСписанияПР,"               // <Число,15,2> - сумма постоянных разниц (ПБУ 18/02) в себестоимости материалов, определенной по данным остатков
	+ "СуммаСписанияВР";               // <Число,15,2> - сумма временных разниц (ПБУ 18/02) в себестоимости материалов, определенной по данным остатков
	
	Параметры.Вставить("ТаблицаСписанныеМатериалы", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаСписанныеМатериалы, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Период,"                        // <Дата> - период движений - дата документа
	+ "Организация,"                   // <СправочникСсылка.Организации>
	+ "Регистратор";                   // <ДокументСсылка.*> - документ-регистратор движений
	
	Параметры.Вставить("Реквизиты", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

Процедура СформироватьДвиженияПередачаИнвентаряВЭксплуатацию(ТаблицаМатериалы, ТаблицаСписанныеМатериалы, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Если Не ЗначениеЗаполнено(ТаблицаМатериалы) Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыПередачаИнвентаряВЭксплуатацию(ТаблицаМатериалы, ТаблицаСписанныеМатериалы, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ

	Если Реквизиты.Период < УчетМатериаловВЭксплуатации.ДатаОтменыСпецодежды() Тогда
		ТаблицаПереданныйИнвентарь = ПодготовитьТаблицуПереданныеВЭксплуатациюМатериалы(
			Параметры.ТаблицаМатериалы, Параметры.ТаблицаСписанныеМатериалы, Отказ);
	Иначе
		ТаблицаПереданныйИнвентарь = ПодготовитьТаблицуПереданныеВЭксплуатациюМатериалы2021(
			Параметры.ТаблицаМатериалы, Параметры.ТаблицаСписанныеМатериалы, Отказ);
	КонецЕсли;

	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ

	СформироватьПроводкиПоступлениеИнвентаряВЭксплуатациюМЦ(ТаблицаПереданныйИнвентарь, Реквизиты, Движения, Отказ);

КонецПроцедуры

Функция ПодготовитьПараметрыПередачаИнвентаряВЭксплуатацию(ТаблицаМатериалы, ТаблицаСписанныеМатериалы, ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ТаблицаМатериалы
	
	СписокОбязательныхКолонок = ""
	+ "ИмяСписка,"                     // <Строка,0> - имя списка в документе
	+ "НомерСтроки,"                   // <Число> - номер строки в списке
	+ "СчетМЦ,"                        // <ПланСчетовСсылка.Хозрасчетный> - забалансовый счет учета материалов в эксплуатации (МЦ)
	+ "Номенклатура,"                  // <СправочникСсылка.Номенклатура> - номенклатура материалов в эксплуатации
	+ "ПартияМатериаловВЭксплуатации," // <Характеристика.ВидыСубконтоХозрасчетные> - партия материалов в эксплуатации
	+ "ФизЛицо,"                       // <СправочникСсылка.ФизическиеЛица> - материально-ответственное лицо
	+ "Подразделение,"                 // <Ссылка на справочник подразделений> - производственное подразделение организации
	+ "КоличествоМЦ";                  // <Число,15,3> - количество материалов для учета на забалансовом счете (МЦ)
	
	Параметры.Вставить("ТаблицаМатериалы", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаМатериалы, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.ТаблицаСписанныеМатериалы
	
	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"                   // <Число> - номер строки в списке
	+ "СуммаСписания,"                 // <Число,15,2> - себестоимость материалов, определенная по данным остатков
	+ "СуммаСписанияНУ,"               // <Число,15,2> - себестоимость материалов (НУ), определенная по данным остатков
	+ "СуммаСписанияПР,"               // <Число,15,2> - сумма постоянных разниц (ПБУ 18/02) в себестоимости материалов, определенной по данным остатков
	+ "СуммаСписанияВР";               // <Число,15,2> - сумма временных разниц (ПБУ 18/02) в себестоимости материалов, определенной по данным остатков
	
	Параметры.Вставить("ТаблицаСписанныеМатериалы", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаСписанныеМатериалы, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Период,"                        // <Дата> - период движений - дата документа
	+ "Организация,"                   // <СправочникСсылка.Организации>
	+ "Регистратор";                   // <ДокументСсылка.*> - документ-регистратор движений
	
	Параметры.Вставить("Реквизиты", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

// ВОЗВРАТ МАТЕРИАЛОВ ИЗ ЭКСПЛУАТАЦИИ

Функция ПодготовитьТаблицыОстатковВозвратСпецодеждыСпецоснасткиИзЭксплуатации(ТаблицаМатериалы, ТаблицаРеквизиты, Отказ) Экспорт

	Если Не ЗначениеЗаполнено(ТаблицаМатериалы) Тогда
		Отказ = Истина;
		Возврат Неопределено;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыВозвратСпецодеждыСпецоснасткиИзЭксплуатации(ТаблицаМатериалы, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
	
	СтруктураТаблиц = Новый Структура("ТаблицаНачислениеПогашенияСтоимостиМатериалов, ТаблицаСписанныеМатериалы");
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ

	ТаблицаПогашениеСтоимостиМатериалов = ПодготовитьТаблицуПогашениеСтоимостиСпецодеждыСпецоснастки(
		Параметры.ТаблицаМатериалы, Реквизиты, Отказ);
	
	СтруктураТаблиц.ТаблицаНачислениеПогашенияСтоимостиМатериалов = ПодготовитьТаблицуНачислениеПогашенияСтоимостиСпецодеждыСпецоснастки(
		ТаблицаПогашениеСтоимостиМатериалов, Реквизиты, Отказ);
	
	СтруктураТаблиц.ТаблицаСписанныеМатериалы = ПодготовитьТаблицуСписанныеИзЭксплуатацииСпецодеждаСпецоснастка(
		Параметры.ТаблицаМатериалы, ТаблицаПогашениеСтоимостиМатериалов, Реквизиты, Отказ);

	Возврат СтруктураТаблиц;
		
КонецФункции
 
Процедура СформироватьДвиженияВозвратСпецодеждыСпецоснасткиИзЭксплуатации(ТаблицаНачислениеПогашенияСтоимостиМатериалов, ТаблицаСписанныеМатериалы, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Реквизиты = ТаблицаРеквизиты[0];

	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ

	СформироватьПроводкиПогашениеСтоимостиСпецодеждыСпецоснастки(
		ТаблицаНачислениеПогашенияСтоимостиМатериалов, Реквизиты, Движения, Отказ);

	СформироватьПроводкиСписаниеМатериаловИзЭксплуатации(
		ТаблицаСписанныеМатериалы, Реквизиты, Движения, Отказ);
		
	СформироватьПроводкиСписаниеМатериаловИзЭксплуатацииМЦ(
		ТаблицаСписанныеМатериалы, Реквизиты, Движения, Отказ);
	
КонецПроцедуры

Функция ПодготовитьПараметрыВозвратСпецодеждыСпецоснасткиИзЭксплуатации(ТаблицаМатериалы, ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ТаблицаМатериалы
	
	СписокОбязательныхКолонок = ""
	+ "ИмяСписка,"                     // <Строка,0> - имя списка в документе
	+ "СинонимСписка,"                 // <Строка,0> - синоним списка
	+ "НомерСтроки,"                   // <Число> - номер строки в списке
	+ "СчетУчета,"                     // <ПланСчетовСсылка.Хозрасчетный> -  счет учета материалов на складе
	+ "СчетПередачи,"                  // <ПланСчетовСсылка.Хозрасчетный> - счет учета материалов в эксплуатации
	+ "СчетМЦ,"                        // <ПланСчетовСсылка.Хозрасчетный> - забалансовый счет учета материалов в эксплуатации (МЦ)
	+ "Номенклатура,"                  // <СправочникСсылка.Номенклатура> - номенклатура материалов в эксплуатации
	+ "ПартияМатериаловВЭксплуатации," // <Характеристика.ВидыСубконтоХозрасчетные> - партия материалов в эксплуатации
	+ "ФизЛицо,"                       // <СправочникСсылка.ФизическиеЛица> - материально-ответственное лицо
	+ "Подразделение,"                 // <Ссылка на справочник подразделений> - производственное подразделение организации
	+ "СчетРасходов,"                  // <ПланСчетовСсылка.Хозрасчетный> - счет списания материалов из эксплуатации
	+ "ВидСубконтоРасходов1,"          // <Число/Строка/ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные> - вид субконто счета расходов
	+ "ВидСубконтоРасходов2,"          // <Число/Строка/ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные> - вид субконто счета расходов
	+ "ВидСубконтоРасходов3,"          // <Число/Строка/ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные> - вид субконто счета расходов
	+ "СубконтоРасходов1,"             // - значение субконто счета расходов
	+ "СубконтоРасходов2,"             // - значение субконто счета расходов
	+ "СубконтоРасходов3,"             // - значение субконто счета расходов
	+ "Количество,"                    // <Число,15,3> - количество возвращенных материалов
	+ "Содержание";                    // <Строка,150> - содержание проводки
	
	Параметры.Вставить("ТаблицаМатериалы", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаМатериалы, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Регистратор,"                   // <ДокументСсылка.*> - документ-регистратор движений
	+ "Период,"                        // <Дата> - период движений - дата документа
	+ "Организация,"                   // <СправочникСсылка.Организации>
	+ "Подразделение";                 // <Ссылка на справочник подразделений> - производственное подразделение организации
	
	Параметры.Вставить("Реквизиты", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

// СПИСАНИЕ МАТЕРИАЛОВ ИЗ ЭКСПЛУАТАЦИИ

Процедура СформироватьДвиженияСписаниеСпецодеждыСпецоснасткиИзЭксплуатации(ТаблицаМатериалы, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Если Не ЗначениеЗаполнено(ТаблицаМатериалы) Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыСписаниеСпецодеждыСпецоснасткиИзЭксплуатации(ТаблицаМатериалы, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ

	ТаблицаПогашениеСтоимостиМатериалов = ПодготовитьТаблицуПогашениеСтоимостиСпецодеждыСпецоснастки(
		Параметры.ТаблицаМатериалы, Реквизиты, Отказ);
	
	ТаблицаНачислениеПогашенияСтоимостиМатериалов = ПодготовитьТаблицуНачислениеПогашенияСтоимостиСпецодеждыСпецоснастки(
		ТаблицаПогашениеСтоимостиМатериалов, Реквизиты, Отказ);
	
	ТаблицаСписанныеМатериалы = ПодготовитьТаблицуСписанныеИзЭксплуатацииСпецодеждаСпецоснастка(
		Параметры.ТаблицаМатериалы, ТаблицаПогашениеСтоимостиМатериалов, Реквизиты, Отказ);
	
	Если НЕ Реквизиты.СписыватьВДебетСчетаУказанногоВДокументе Тогда
		ТаблицаСписаныеПоНазначениюИспользованияМатериалы = ПодготовитьТаблицуСписанныеПоНазначениюИспользованияСпецодеждаСпецоснастка(
			ТаблицаСписанныеМатериалы, Реквизиты, Отказ);
	КонецЕсли;

	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ

	СформироватьПроводкиПогашениеСтоимостиСпецодеждыСпецоснастки(
		ТаблицаНачислениеПогашенияСтоимостиМатериалов, Реквизиты, Движения, Отказ);

	Если Реквизиты.СписыватьВДебетСчетаУказанногоВДокументе Тогда
		СформироватьПроводкиСписаниеМатериаловИзЭксплуатации(
			ТаблицаСписанныеМатериалы, Реквизиты, Движения, Отказ);
	Иначе
		СформироватьПроводкиСписаниеМатериаловИзЭксплуатации(
			ТаблицаСписаныеПоНазначениюИспользованияМатериалы, Реквизиты, Движения, Отказ);
	КонецЕсли;
	
	СформироватьПроводкиСписаниеМатериаловИзЭксплуатацииМЦ(
		ТаблицаСписанныеМатериалы, Реквизиты, Движения, Отказ);
	
КонецПроцедуры

Функция ПодготовитьПараметрыСписаниеСпецодеждыСпецоснасткиИзЭксплуатации(ТаблицаМатериалы, ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ТаблицаМатериалы
	
	СписокОбязательныхКолонок = ""
	+ "ИмяСписка,"                     // <Строка,0> - имя списка в документе
	+ "СинонимСписка,"                 // <Строка,0> - синоним списка
	+ "НомерСтроки,"                   // <Число> - номер строки в списке
	+ "СчетПередачи,"                  // <ПланСчетовСсылка.Хозрасчетный> - счет учета материалов в эксплуатации
	+ "СчетМЦ,"                        // <ПланСчетовСсылка.Хозрасчетный> - забалансовый счет учета материалов в эксплуатации (МЦ)
	+ "Номенклатура,"                  // <СправочникСсылка.Номенклатура> - номенклатура материалов в эксплуатации
	+ "ПартияМатериаловВЭксплуатации," // <Характеристика.ВидыСубконтоХозрасчетные> - партия материалов в эксплуатации
	+ "ФизЛицо,"                       // <СправочникСсылка.ФизическиеЛица> - материально-ответственное лицо
	+ "Подразделение,"                 // <Ссылка на справочник подразделений> - производственное подразделение организации
	+ "СчетРасходов,"                  // <ПланСчетовСсылка.Хозрасчетный> - счет списания материалов из эксплуатации
	+ "ВидСубконтоРасходов1,"          // <Число/Строка/ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные> - вид субконто счета расходов
	+ "ВидСубконтоРасходов2,"          // <Число/Строка/ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные> - вид субконто счета расходов
	+ "ВидСубконтоРасходов3,"          // <Число/Строка/ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные> - вид субконто счета расходов
	+ "СубконтоРасходов1,"             // - значение субконто счета расходов
	+ "СубконтоРасходов2,"             // - значение субконто счета расходов
	+ "СубконтоРасходов3,"             // - значение субконто счета расходов
	+ "Количество,"                    // <Число,15,3> - количество списанных материалов
	+ "Содержание";                    // <Строка,150> - содержание проводки
	
	Параметры.Вставить("ТаблицаМатериалы", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаМатериалы, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Регистратор,"                              // <ДокументСсылка.*> - документ-регистратор движений
	+ "Период,"                                   // <Дата> - период движений - дата документа
	+ "Организация,"                              // <СправочникСсылка.Организации>
	+ "Подразделение,"                            // <Ссылка на справочник подразделений> - производственное подразделение организации
	+ "СписыватьВДебетСчетаУказанногоВДокументе"; // <Булево> - способ списания материалов из эксплуатации
	
	Параметры.Вставить("Реквизиты", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

Процедура СформироватьДвиженияСписаниеИнвентаряИзЭксплуатации(ТаблицаМатериалы, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Если Не ЗначениеЗаполнено(ТаблицаМатериалы) Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыСписаниеИнвентаряИзЭксплуатации(ТаблицаМатериалы, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ

	ТаблицаСписанныйИнвентарь = ПодготовитьТаблицуСписанныйИзЭксплуатацииИнвентарь(
		Параметры.ТаблицаМатериалы, Реквизиты, Отказ);

	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ

	СформироватьПроводкиСписаниеМатериаловИзЭксплуатацииМЦ(
		ТаблицаСписанныйИнвентарь, Реквизиты, Движения, Отказ);
	
КонецПроцедуры

Функция ПодготовитьПараметрыСписаниеИнвентаряИзЭксплуатации(ТаблицаМатериалы, ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ТаблицаМатериалы
	
	СписокОбязательныхКолонок = ""
	+ "ИмяСписка,"                     // <Строка,0> - имя списка в документе
	+ "СинонимСписка,"                 // <Строка,0> - синоним списка
	+ "НомерСтроки,"                   // <Число> - номер строки в списке
	+ "СчетМЦ,"                        // <ПланСчетовСсылка.Хозрасчетный> - забалансовый счет учета материалов в эксплуатации (МЦ)
	+ "Номенклатура,"                  // <СправочникСсылка.Номенклатура> - номенклатура материалов в эксплуатации
	+ "ПартияМатериаловВЭксплуатации," // <Характеристика.ВидыСубконтоХозрасчетные> - партия материалов в эксплуатации
	+ "ФизЛицо,"                       // <СправочникСсылка.ФизическиеЛица> - материально-ответственное лицо
	+ "КоличествоМЦ,"                  // <Число,15,3> - количество материалов для погашения стоимости
	+ "Содержание";                    // <Строка,150> - содержание проводки
	
	Параметры.Вставить("ТаблицаМатериалы", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаМатериалы, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Регистратор,"                   // <ДокументСсылка.*> - документ-регистратор движений
	+ "Период,"                        // <Дата> - период движений - дата документа
	+ "Организация,"                   // <СправочникСсылка.Организации>
	+ "Подразделение";                 // <Ссылка на справочник подразделений> - производственное подразделение организации
	
	Параметры.Вставить("Реквизиты", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

// РЕГЛАМЕНТНАЯ ОПЕРАЦИЯ "ПОГАШЕНИЕ СТОИМОСТИ СПЕЦОДЕЖДЫ, СПЕЦОСНАСТКИ"

Процедура СформироватьДвиженияПогашениеСтоимостиСпецодеждыСпецоснасткиРеглОперация(ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Параметры = ПодготовитьПараметрыПогашениеСтоимостиСпецодеждыСпецоснасткиРеглОперация(ТаблицаРеквизиты);
	
	Реквизиты = Параметры.Реквизиты[0];

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ

	ТаблицаПогашениеСтоимостиМатериалов = ПодготовитьТаблицуПогашениеСтоимостиСпецодеждыСпецоснастки(
		Неопределено, Реквизиты, Отказ);
	
	ТаблицаНачислениеПогашенияСтоимостиМатериалов = ПодготовитьТаблицуНачислениеПогашенияСтоимостиСпецодеждыСпецоснастки(
		ТаблицаПогашениеСтоимостиМатериалов, Реквизиты, Отказ);

	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ

	СформироватьПроводкиПогашениеСтоимостиСпецодеждыСпецоснастки(
		ТаблицаНачислениеПогашенияСтоимостиМатериалов, Реквизиты, Движения, Отказ);
		
КонецПроцедуры

Функция ПодготовитьПараметрыПогашениеСтоимостиСпецодеждыСпецоснасткиРеглОперация(ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Регистратор,"                   // <ДокументСсылка.*> - документ-регистратор движений
	+ "Период,"                        // <Дата> - период движений - дата документа
	+ "Организация";                   // <СправочникСсылка.Организации>
	
	Параметры.Вставить("Реквизиты", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ, ВЫПОЛНЯЮЩИЕ ПОДГОТОВКУ ПРОВЕДЕНИЯ

// ПОДГОТОВКА ПЕРЕДАЧИ МАТЕРИАЛОВ В ЭКСПЛУАТАЦИЮ

Функция ПодготовитьТаблицуПереданныеВЭксплуатациюМатериалы(ТаблицаМатериалы, ТаблицаСписанныеМатериалы, Отказ)
	
	ТаблицаМатериалы.Колонки.Добавить("Сумма", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаМатериалы.Колонки.Добавить("СуммаМЦ", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаМатериалы.Колонки.Добавить("СуммаНУ", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаМатериалы.Колонки.Добавить("СуммаМЦНУ", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаМатериалы.Колонки.Добавить("СуммаПР", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаМатериалы.Колонки.Добавить("СуммаВР", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	
	Если ТаблицаМатериалы.Количество() = 0 Тогда
		Возврат ТаблицаМатериалы;
	КонецЕсли;
	
	ТаблицаСписанныеМатериалы.Свернуть("НомерСтроки", "СуммаСписания,СуммаСписанияНУ,СуммаСписанияПР,СуммаСписанияВР");
	
	Для каждого СтрокаТаблицы Из ТаблицаМатериалы Цикл
		
		Если СтрокаТаблицы.НомерСтроки > ТаблицаСписанныеМатериалы.Количество() Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаСписания = ТаблицаСписанныеМатериалы[СтрокаТаблицы.НомерСтроки - 1];
		
		Если СтрокаТаблицы.ИмяСписка = "ИнвентарьИХозяйственныеПринадлежности"
		 ИЛИ СтрокаТаблицы.СпособПогашенияСтоимости = Перечисления.СпособыПогашенияСтоимости.ПогашатьСтоимостьПриПередачеВЭксплуатацию
		Тогда
			СтрокаТаблицы.Сумма = СтрокаСписания.СуммаСписания;
		Иначе
			СтрокаТаблицы.Сумма = 0;
		КонецЕсли;
		
		Если СтрокаТаблицы.ИмяСписка = "ИнвентарьИХозяйственныеПринадлежности"
		 ИЛИ СтрокаТаблицы.СпособПогашенияСтоимостиНУ = Перечисления.СпособыПогашенияСтоимости.ПогашатьСтоимостьПриПередачеВЭксплуатацию
		Тогда
			СтрокаТаблицы.СуммаНУ = СтрокаСписания.СуммаСписанияНУ;
		Иначе
			СтрокаТаблицы.СуммаНУ = 0;
		КонецЕсли;
		
		СтрокаТаблицы.СуммаМЦ = СтрокаСписания.СуммаСписания;
		СтрокаТаблицы.СуммаМЦНУ = СтрокаСписания.СуммаСписанияНУ;
		СтрокаТаблицы.СуммаПР = СтрокаСписания.СуммаСписанияПР;
		СтрокаТаблицы.СуммаВР = СтрокаСписания.СуммаСписанияВР;
		
	КонецЦикла;
	
	Возврат ТаблицаМатериалы;

КонецФункции

Функция ПодготовитьТаблицуПереданныеВЭксплуатациюМатериалы2021(ТаблицаМатериалы, ТаблицаСписанныеМатериалы, Отказ)
	
	ОписаниеТипаЧисла15_2 = ОбщегоНазначения.ОписаниеТипаЧисло(15, 2);
	
	ТаблицаМатериалы.Колонки.Добавить("Сумма",     ОписаниеТипаЧисла15_2);
	ТаблицаМатериалы.Колонки.Добавить("СуммаМЦ",   ОписаниеТипаЧисла15_2);
	ТаблицаМатериалы.Колонки.Добавить("СуммаНУ",   ОписаниеТипаЧисла15_2);
	ТаблицаМатериалы.Колонки.Добавить("СуммаМЦНУ", ОписаниеТипаЧисла15_2);
	ТаблицаМатериалы.Колонки.Добавить("СуммаПР",   ОписаниеТипаЧисла15_2);
	ТаблицаМатериалы.Колонки.Добавить("СуммаВР",   ОписаниеТипаЧисла15_2);
	
	Если ТаблицаМатериалы.Количество() = 0 Тогда
		Возврат ТаблицаМатериалы;
	КонецЕсли;
	
	ТаблицаСписанныеМатериалы.Свернуть("НомерСтроки", "СуммаСписания,СуммаСписанияНУ,СуммаСписанияПР,СуммаСписанияВР");
	
	Для каждого СтрокаТаблицы Из ТаблицаМатериалы Цикл
		
		Если СтрокаТаблицы.НомерСтроки > ТаблицаСписанныеМатериалы.Количество() Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаСписания = ТаблицаСписанныеМатериалы[СтрокаТаблицы.НомерСтроки - 1];
		
		СтрокаТаблицы.Сумма = СтрокаСписания.СуммаСписания;
		СтрокаТаблицы.СуммаНУ = СтрокаСписания.СуммаСписанияНУ;
		СтрокаТаблицы.СуммаМЦ = СтрокаСписания.СуммаСписания;
		СтрокаТаблицы.СуммаМЦНУ = СтрокаСписания.СуммаСписанияНУ;
		СтрокаТаблицы.СуммаПР = СтрокаСписания.СуммаСписанияПР;
		СтрокаТаблицы.СуммаВР = СтрокаСписания.СуммаСписанияВР;
		
	КонецЦикла;
	
	Возврат ТаблицаМатериалы;

КонецФункции

// ПОДГОТОВКА ПОГАШЕНИЯ СТОИМОСТИ СПЕЦОДЕЖДЫ, СПЕЦОСНАСТКИ

Функция ПодготовитьТаблицуПогашениеСтоимостиСпецодеждыСпецоснастки(ТаблицаМатериалы = Неопределено, Реквизиты, Отказ)
	
	// Если это регламентная операция "Погашение стоимости спецодежды и спецоснастки",
	// будем формировать таблицу по всем материалам в эксплуатации
	ЭтоРегламентнаяОперация = (ТаблицаМатериалы = Неопределено);
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Реквизиты.Период));
	
	Если ЭтоРегламентнаяОперация Тогда
		Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Реквизиты.Период));
	Иначе
		Запрос.УстановитьПараметр("КонецПериода", Новый Граница(Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор), ВидГраницы.Исключая));
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СчетаУчетаСпецодеждыЗабалансовый",   
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.СпецодеждаВЭксплуатацииВспомогательный));
	Запрос.УстановитьПараметр("СчетаУчетаСпецоснасткиЗабалансовый", 
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.СпецоснасткаВЭксплуатацииВспомогательный));
	Запрос.УстановитьПараметр("СчетаУчетаСпецодежды",              
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.СпецодеждаВЭксплуатации));
	Запрос.УстановитьПараметр("СчетаУчетаСпецоснастки",            
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.СпецоснасткаВЭксплуатации));
	
	ВидыСубконтоСпецодежда = Новый Массив;
	ВидыСубконтоСпецодежда.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	ВидыСубконтоСпецодежда.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПартииМатериаловВЭксплуатации);
	ВидыСубконтоСпецодежда.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций);
	
	ВидыСубконтоСпецоснастка = Новый Массив;
	ВидыСубконтоСпецоснастка.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	ВидыСубконтоСпецоснастка.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПартииМатериаловВЭксплуатации);
	
	Запрос.УстановитьПараметр("ВидыСубконтоСпецодежда",   ВидыСубконтоСпецодежда);
	Запрос.УстановитьПараметр("ВидыСубконтоСпецоснастка", ВидыСубконтоСпецоснастка);
	
	Если ЭтоРегламентнаяОперация Тогда
		
		ТекстОтбораМатериалов = "";
		
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВнешнийИсточник.СчетПередачи КАК СчетПередачи,
		|	ВнешнийИсточник.Номенклатура КАК Номенклатура,
		|	ВнешнийИсточник.ПартияМатериаловВЭксплуатации КАК ПартияМатериаловВЭксплуатации,
		|	ВнешнийИсточник.ФизЛицо КАК ФизЛицо,
		|	ВнешнийИсточник.Подразделение КАК Подразделение,
		|	ВнешнийИсточник.Количество
		|ПОМЕСТИТЬ ТаблицаНоменклатуры
		|ИЗ
		|	&ВнешнийИсточник КАК ВнешнийИсточник
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетПередачи,
		|	Номенклатура,
		|	ПартияМатериаловВЭксплуатации,
		|	ФизЛицо,
		|	Подразделение
		|;
		|";
		Материалы = ТаблицаМатериалы.Скопировать();
		Материалы.Свернуть("СчетПередачи, Номенклатура, ПартияМатериаловВЭксплуатации, ФизЛицо, Подразделение", "Количество");
		Запрос.УстановитьПараметр("ВнешнийИсточник", Материалы);
		Запрос.УстановитьПараметр("СписокПартийМатериаловВЭксплуатации",
			ОбщегоНазначения.ВыгрузитьКолонку(Материалы, "ПартияМатериаловВЭксплуатации", Истина));
			
		ТекстОтбораМатериалов = " И Субконто1 В (ВЫБРАТЬ Номенклатура ИЗ ТаблицаНоменклатуры) И Субконто2 В (&СписокПартийМатериаловВЭксплуатации)";
		
	Конецесли;
	
	Запрос.Текст = Запрос.Текст + "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОборотыМЦ.Счет КАК СчетМЦ,
	|	ХозрасчетныйОстаткиИОборотыМЦ.Субконто1 КАК Номенклатура,
	|	ХозрасчетныйОстаткиИОборотыМЦ.Субконто2 КАК ПартияМатериаловВЭксплуатации,
	|	ХозрасчетныйОстаткиИОборотыМЦ.Субконто3 КАК ФизЛицо,
	|	ХозрасчетныйОстаткиИОборотыМЦ.Подразделение КАК Подразделение,
	|	ХозрасчетныйОстаткиИОборотыМЦ.КоличествоКонечныйОстатокДт КАК КоличествоКонечныйОстаток,
	|	ХозрасчетныйОстаткиИОборотыМЦ.СуммаКонечныйОстатокДт КАК ПервоначальнаяСтоимостьКонечныйОстаток,
	|	ХозрасчетныйОстаткиИОборотыМЦ.СуммаНУКонечныйОстатокДт КАК ПервоначальнаяСтоимостьНУКонечныйОстаток,	
	|	ХозрасчетныйОстаткиИОборотыМЦ.СуммаПРКонечныйОстатокДт КАК ПервоначальнаяСтоимостьПРКонечныйОстаток,
	|	ХозрасчетныйОстаткиИОборотыМЦ.СуммаВРКонечныйОстатокДт КАК ПервоначальнаяСтоимостьВРКонечныйОстаток
	|ПОМЕСТИТЬ СпецодеждаОстаткиМЦ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаУчетаСпецодеждыЗабалансовый), &ВидыСубконтоСпецодежда, Организация = &Организация"+ТекстОтбораМатериалов+") КАК ХозрасчетныйОстаткиИОборотыМЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	ПартияМатериаловВЭксплуатации,
	|	ФизЛицо,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОборотыМЦ.Счет КАК СчетМЦ,
	|	ХозрасчетныйОстаткиИОборотыМЦ.Субконто1 КАК Номенклатура,
	|	ХозрасчетныйОстаткиИОборотыМЦ.Субконто2 КАК ПартияМатериаловВЭксплуатации,
	|	ХозрасчетныйОстаткиИОборотыМЦ.Подразделение КАК Подразделение,
	|	ХозрасчетныйОстаткиИОборотыМЦ.КоличествоКонечныйОстатокДт КАК КоличествоКонечныйОстаток,
	|	ХозрасчетныйОстаткиИОборотыМЦ.СуммаКонечныйОстатокДт КАК ПервоначальнаяСтоимостьКонечныйОстаток,
	|	ХозрасчетныйОстаткиИОборотыМЦ.СуммаНУКонечныйОстатокДт КАК ПервоначальнаяСтоимостьНУКонечныйОстаток,
	|	ХозрасчетныйОстаткиИОборотыМЦ.СуммаПРКонечныйОстатокДт КАК ПервоначальнаяСтоимостьПРКонечныйОстаток,
	|	ХозрасчетныйОстаткиИОборотыМЦ.СуммаВРКонечныйОстатокДт КАК ПервоначальнаяСтоимостьВРКонечныйОстаток
	|ПОМЕСТИТЬ СпецоснасткаОстаткиМЦ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаУчетаСпецоснасткиЗабалансовый), &ВидыСубконтоСпецоснастка, Организация = &Организация"+ТекстОтбораМатериалов+") КАК ХозрасчетныйОстаткиИОборотыМЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	ПартияМатериаловВЭксплуатации,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Счет КАК СчетПередачи,
	|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Номенклатура,
	|	ХозрасчетныйОстаткиИОбороты.Субконто2 КАК ПартияМатериаловВЭксплуатации,
	|	ХозрасчетныйОстаткиИОбороты.Субконто3 КАК ФизЛицо,
	|	ХозрасчетныйОстаткиИОбороты.Подразделение КАК Подразделение,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СтоимостьНачальныйОстаток,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СтоимостьКонечныйОстаток,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНУКонечныйОстатокДт КАК СтоимостьНУКонечныйОстаток,
	|	ХозрасчетныйОстаткиИОбороты.СуммаПРКонечныйОстатокДт КАК СтоимостьПРКонечныйОстаток,
	|	ХозрасчетныйОстаткиИОбороты.СуммаВРКонечныйОстатокДт КАК СтоимостьВРКонечныйОстаток,
	|	ХозрасчетныйОстаткиИОбороты.КоличествоКонечныйОстатокДт КАК КоличествоОстаток,
	|	СпецодеждаОстаткиМЦ.СчетМЦ КАК СчетМЦ,
	|	ЕСТЬNULL(СпецодеждаОстаткиМЦ.ПервоначальнаяСтоимостьКонечныйОстаток, 0) КАК ПервоначальнаяСтоимостьКонечныйОстаток,
	|	ЕСТЬNULL(СпецодеждаОстаткиМЦ.ПервоначальнаяСтоимостьНУКонечныйОстаток, 0) КАК ПервоначальнаяСтоимостьНУКонечныйОстаток,
	|	ЕСТЬNULL(СпецодеждаОстаткиМЦ.ПервоначальнаяСтоимостьПРКонечныйОстаток, 0) КАК ПервоначальнаяСтоимостьПРКонечныйОстаток,
	|	ЕСТЬNULL(СпецодеждаОстаткиМЦ.ПервоначальнаяСтоимостьВРКонечныйОстаток, 0) КАК ПервоначальнаяСтоимостьВРКонечныйОстаток,
	|	ЕСТЬNULL(" + ?(ЭтоРегламентнаяОперация, "ХозрасчетныйОстаткиИОбороты.КоличествоКонечныйОстатокДт", "ТаблицаНоменклатуры.Количество") + ", 0) КАК Количество
	|ПОМЕСТИТЬ СпецодеждаОстатки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаУчетаСпецодежды), &ВидыСубконтоСпецодежда, Организация = &Организация"+ТекстОтбораМатериалов+") КАК ХозрасчетныйОстаткиИОбороты";
	
	Если НЕ ЭтоРегламентнаяОперация Тогда
		
		Запрос.Текст = Запрос.Текст +"
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|		ПО ХозрасчетныйОстаткиИОбороты.Счет = ТаблицаНоменклатуры.СчетПередачи
		|			И ХозрасчетныйОстаткиИОбороты.Субконто1 = ТаблицаНоменклатуры.Номенклатура
		|			И ХозрасчетныйОстаткиИОбороты.Субконто2 = ТаблицаНоменклатуры.ПартияМатериаловВЭксплуатации
		|			И ХозрасчетныйОстаткиИОбороты.Субконто3 = ТаблицаНоменклатуры.ФизЛицо
		|			И (ХозрасчетныйОстаткиИОбороты.Подразделение = ТаблицаНоменклатуры.Подразделение
		|				ИЛИ ХозрасчетныйОстаткиИОбороты.Подразделение ЕСТЬ NULL )
		|";
		
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст +"
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпецодеждаОстаткиМЦ КАК СпецодеждаОстаткиМЦ
	|		ПО ХозрасчетныйОстаткиИОбороты.Субконто1 = СпецодеждаОстаткиМЦ.Номенклатура
	|			И ХозрасчетныйОстаткиИОбороты.Субконто2 = СпецодеждаОстаткиМЦ.ПартияМатериаловВЭксплуатации
	|			И ХозрасчетныйОстаткиИОбороты.Субконто3 = СпецодеждаОстаткиМЦ.ФизЛицо
	|			И (ХозрасчетныйОстаткиИОбороты.Подразделение = СпецодеждаОстаткиМЦ.Подразделение
	|				ИЛИ ХозрасчетныйОстаткиИОбороты.Подразделение ЕСТЬ NULL )
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	ПартияМатериаловВЭксплуатации,
	|	ФизЛицо,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Счет КАК СчетПередачи,
	|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Номенклатура,
	|	ХозрасчетныйОстаткиИОбороты.Субконто2 КАК ПартияМатериаловВЭксплуатации,
	|	ХозрасчетныйОстаткиИОбороты.Подразделение КАК Подразделение,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СтоимостьНачальныйОстаток,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СтоимостьКонечныйОстаток,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНУКонечныйОстатокДт КАК СтоимостьНУКонечныйОстаток,
	|	ХозрасчетныйОстаткиИОбороты.СуммаПРКонечныйОстатокДт КАК СтоимостьПРКонечныйОстаток,
	|	ХозрасчетныйОстаткиИОбороты.СуммаВРКонечныйОстатокДт КАК СтоимостьВРКонечныйОстаток,
	|	ХозрасчетныйОстаткиИОбороты.КоличествоКонечныйОстатокДт КАК КоличествоОстаток,
	|	СпецоснасткаОстаткиМЦ.СчетМЦ КАК СчетМЦ,
	|	ЕСТЬNULL(СпецоснасткаОстаткиМЦ.ПервоначальнаяСтоимостьКонечныйОстаток, 0) КАК ПервоначальнаяСтоимостьКонечныйОстаток,
	|	ЕСТЬNULL(СпецоснасткаОстаткиМЦ.ПервоначальнаяСтоимостьНУКонечныйОстаток, 0) КАК ПервоначальнаяСтоимостьНУКонечныйОстаток,
	|	ЕСТЬNULL(СпецоснасткаОстаткиМЦ.ПервоначальнаяСтоимостьПРКонечныйОстаток, 0) КАК ПервоначальнаяСтоимостьПРКонечныйОстаток,
	|	ЕСТЬNULL(СпецоснасткаОстаткиМЦ.ПервоначальнаяСтоимостьВРКонечныйОстаток, 0) КАК ПервоначальнаяСтоимостьВРКонечныйОстаток,
	|	ЕСТЬNULL(" + ?(ЭтоРегламентнаяОперация, "ХозрасчетныйОстаткиИОбороты.КоличествоКонечныйОстатокДт", "ТаблицаНоменклатуры.Количество") + ", 0) КАК Количество
	|ПОМЕСТИТЬ СпецоснасткаОстатки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаУчетаСпецоснастки), &ВидыСубконтоСпецоснастка, Организация = &Организация"+ТекстОтбораМатериалов+") КАК ХозрасчетныйОстаткиИОбороты";
	
	Если НЕ ЭтоРегламентнаяОперация Тогда
		
		Запрос.Текст = Запрос.Текст +"
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|		ПО ХозрасчетныйОстаткиИОбороты.Счет = ТаблицаНоменклатуры.СчетПередачи
		|			И ХозрасчетныйОстаткиИОбороты.Субконто1 = ТаблицаНоменклатуры.Номенклатура
		|			И ХозрасчетныйОстаткиИОбороты.Субконто2 = ТаблицаНоменклатуры.ПартияМатериаловВЭксплуатации
		|			И ХозрасчетныйОстаткиИОбороты.Подразделение = ТаблицаНоменклатуры.Подразделение
		|";
		
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст +"
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпецоснасткаОстаткиМЦ КАК СпецоснасткаОстаткиМЦ
	|		ПО ХозрасчетныйОстаткиИОбороты.Субконто1 = СпецоснасткаОстаткиМЦ.Номенклатура
	|			И ХозрасчетныйОстаткиИОбороты.Субконто2 = СпецоснасткаОстаткиМЦ.ПартияМатериаловВЭксплуатации
	|			И ХозрасчетныйОстаткиИОбороты.Подразделение = СпецоснасткаОстаткиМЦ.Подразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	ПартияМатериаловВЭксплуатации,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыработкаМатериаловОбороты.Номенклатура,
	|	ВыработкаМатериаловОбороты.КоличествоОборот
	|ПОМЕСТИТЬ ВыработкаМатериаловОбороты
	|ИЗ
	|	РегистрНакопления.ВыработкаМатериалов.Обороты(&НачалоПериода, &КонецПериода, Период, Организация = &Организация) КАК ВыработкаМатериаловОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпецодеждаОстатки.СчетПередачи,
	|	СпецодеждаОстатки.СчетМЦ,
	|	СпецодеждаОстатки.Номенклатура,
	|	СпецодеждаОстатки.ПартияМатериаловВЭксплуатации,
	|	СпецодеждаОстатки.ФизЛицо,
	|	СпецодеждаОстатки.Подразделение,
	|	СпецодеждаОстатки.СтоимостьНачальныйОстаток,
	|	СпецодеждаОстатки.СтоимостьКонечныйОстаток,
	|	СпецодеждаОстатки.СтоимостьНУКонечныйОстаток,
	|	СпецодеждаОстатки.СтоимостьПРКонечныйОстаток,
	|	СпецодеждаОстатки.СтоимостьВРКонечныйОстаток,
	|	СпецодеждаОстатки.КоличествоОстаток,
	|	СпецодеждаОстатки.ПервоначальнаяСтоимостьКонечныйОстаток,
	|	СпецодеждаОстатки.ПервоначальнаяСтоимостьНУКонечныйОстаток,
	|	СпецодеждаОстатки.ПервоначальнаяСтоимостьПРКонечныйОстаток,
	|	СпецодеждаОстатки.ПервоначальнаяСтоимостьВРКонечныйОстаток,
	|	СпецодеждаОстатки.Количество КАК КоличествоМЦ,
	|	СпецодеждаОстатки.Количество,
	|	ПередачаМатериаловВЭксплуатациюСпецодежда.НазначениеИспользования КАК НазначениеИспользования,
	|	ПередачаМатериаловВЭксплуатациюСпецодежда.НазначениеИспользования.СпособПогашенияСтоимости КАК СпособПогашенияСтоимости,
	|	ЕСТЬNULL(ПередачаМатериаловВЭксплуатациюСпецодежда.НазначениеИспользования.СрокПолезногоИспользования, 0) КАК СрокПолезногоИспользования,
	|	ЕСТЬNULL(ПередачаМатериаловВЭксплуатациюСпецодежда.НазначениеИспользования.ОбщийОбъемПродукцииРабот, 0) КАК ОбъемПродукцииРабот,
	|	ПередачаМатериаловВЭксплуатациюСпецодежда.НазначениеИспользования.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	0 КАК Выработка
	|ИЗ
	|	СпецодеждаОстатки КАК СпецодеждаОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВЭксплуатацию.Спецодежда КАК ПередачаМатериаловВЭксплуатациюСпецодежда
	|		ПО СпецодеждаОстатки.Номенклатура = ПередачаМатериаловВЭксплуатациюСпецодежда.Номенклатура
	|			И СпецодеждаОстатки.ПартияМатериаловВЭксплуатации = ПередачаМатериаловВЭксплуатациюСпецодежда.Ссылка
	|			И СпецодеждаОстатки.ФизЛицо = ПередачаМатериаловВЭксплуатациюСпецодежда.ФизЛицо
	|ГДЕ
	|	СпецодеждаОстатки.ПартияМатериаловВЭксплуатации ССЫЛКА Документ.ПередачаМатериаловВЭксплуатацию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СпецодеждаОстатки.СчетПередачи,
	|	СпецодеждаОстатки.СчетМЦ,
	|	СпецодеждаОстатки.Номенклатура,
	|	СпецодеждаОстатки.ПартияМатериаловВЭксплуатации,
	|	СпецодеждаОстатки.ФизЛицо,
	|	СпецодеждаОстатки.Подразделение,
	|	СпецодеждаОстатки.СтоимостьНачальныйОстаток,
	|	СпецодеждаОстатки.СтоимостьКонечныйОстаток,
	|	СпецодеждаОстатки.СтоимостьНУКонечныйОстаток,
	|	СпецодеждаОстатки.СтоимостьПРКонечныйОстаток,
	|	СпецодеждаОстатки.СтоимостьВРКонечныйОстаток,
	|	СпецодеждаОстатки.КоличествоОстаток,
	|	СпецодеждаОстатки.ПервоначальнаяСтоимостьКонечныйОстаток,
	|	СпецодеждаОстатки.ПервоначальнаяСтоимостьНУКонечныйОстаток,
	|	СпецодеждаОстатки.ПервоначальнаяСтоимостьПРКонечныйОстаток,
	|	СпецодеждаОстатки.ПервоначальнаяСтоимостьВРКонечныйОстаток,
	|	СпецодеждаОстатки.Количество,
	|	СпецодеждаОстатки.Количество,
	|	ПартияМатериаловВЭксплуатацииСпецодежда.НазначениеИспользования,
	|	ПартияМатериаловВЭксплуатацииСпецодежда.НазначениеИспользования.СпособПогашенияСтоимости,
	|	ЕСТЬNULL(ПартияМатериаловВЭксплуатацииСпецодежда.НазначениеИспользования.СрокПолезногоИспользования, 0),
	|	ЕСТЬNULL(ПартияМатериаловВЭксплуатацииСпецодежда.НазначениеИспользования.ОбщийОбъемПродукцииРабот, 0),
	|	ПартияМатериаловВЭксплуатацииСпецодежда.НазначениеИспользования.СпособОтраженияРасходов,
	|	0
	|ИЗ
	|	СпецодеждаОстатки КАК СпецодеждаОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПартияМатериаловВЭксплуатации КАК ПартияМатериаловВЭксплуатацииСпецодежда
	|		ПО СпецодеждаОстатки.Номенклатура = ПартияМатериаловВЭксплуатацииСпецодежда.Номенклатура
	|			И СпецодеждаОстатки.ПартияМатериаловВЭксплуатации = ПартияМатериаловВЭксплуатацииСпецодежда.Ссылка
	|ГДЕ
	|	СпецодеждаОстатки.ПартияМатериаловВЭксплуатации ССЫЛКА Документ.ПартияМатериаловВЭксплуатации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СпецоснасткаОстатки.СчетПередачи,
	|	СпецоснасткаОстатки.СчетМЦ,
	|	СпецоснасткаОстатки.Номенклатура,
	|	СпецоснасткаОстатки.ПартияМатериаловВЭксплуатации,
	|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка),
	|	СпецоснасткаОстатки.Подразделение,
	|	СпецоснасткаОстатки.СтоимостьНачальныйОстаток,
	|	СпецоснасткаОстатки.СтоимостьКонечныйОстаток,
	|	СпецоснасткаОстатки.СтоимостьНУКонечныйОстаток,
	|	СпецоснасткаОстатки.СтоимостьПРКонечныйОстаток,
	|	СпецоснасткаОстатки.СтоимостьВРКонечныйОстаток,
	|	СпецоснасткаОстатки.КоличествоОстаток,
	|	СпецоснасткаОстатки.ПервоначальнаяСтоимостьКонечныйОстаток,
	|	СпецоснасткаОстатки.ПервоначальнаяСтоимостьНУКонечныйОстаток,
	|	СпецоснасткаОстатки.ПервоначальнаяСтоимостьПРКонечныйОстаток,
	|	СпецоснасткаОстатки.ПервоначальнаяСтоимостьВРКонечныйОстаток,
	|	СпецоснасткаОстатки.Количество,
	|	СпецоснасткаОстатки.Количество,
	|	ПередачаМатериаловВЭксплуатациюСпецоснастка.НазначениеИспользования,
	|	ПередачаМатериаловВЭксплуатациюСпецоснастка.НазначениеИспользования.СпособПогашенияСтоимости,
	|	ЕСТЬNULL(ПередачаМатериаловВЭксплуатациюСпецоснастка.НазначениеИспользования.СрокПолезногоИспользования, 0),
	|	ЕСТЬNULL(ПередачаМатериаловВЭксплуатациюСпецоснастка.НазначениеИспользования.ОбщийОбъемПродукцииРабот, 0),
	|	ПередачаМатериаловВЭксплуатациюСпецоснастка.НазначениеИспользования.СпособОтраженияРасходов,
	|	ЕСТЬNULL(ВыработкаМатериаловОбороты.КоличествоОборот, 0)
	|ИЗ
	|	СпецоснасткаОстатки КАК СпецоснасткаОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВЭксплуатацию.Спецоснастка КАК ПередачаМатериаловВЭксплуатациюСпецоснастка
	|		ПО СпецоснасткаОстатки.Номенклатура = ПередачаМатериаловВЭксплуатациюСпецоснастка.Номенклатура
	|			И СпецоснасткаОстатки.ПартияМатериаловВЭксплуатации = ПередачаМатериаловВЭксплуатациюСпецоснастка.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыработкаМатериаловОбороты КАК ВыработкаМатериаловОбороты
	|		ПО СпецоснасткаОстатки.Номенклатура = ВыработкаМатериаловОбороты.Номенклатура
	|ГДЕ
	|	СпецоснасткаОстатки.ПартияМатериаловВЭксплуатации ССЫЛКА Документ.ПередачаМатериаловВЭксплуатацию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СпецоснасткаОстатки.СчетПередачи,
	|	СпецоснасткаОстатки.СчетМЦ,
	|	СпецоснасткаОстатки.Номенклатура,
	|	СпецоснасткаОстатки.ПартияМатериаловВЭксплуатации,
	|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка),
	|	СпецоснасткаОстатки.Подразделение,
	|	СпецоснасткаОстатки.СтоимостьНачальныйОстаток,
	|	СпецоснасткаОстатки.СтоимостьКонечныйОстаток,
	|	СпецоснасткаОстатки.СтоимостьНУКонечныйОстаток,
	|	СпецоснасткаОстатки.СтоимостьПРКонечныйОстаток,
	|	СпецоснасткаОстатки.СтоимостьВРКонечныйОстаток,
	|	СпецоснасткаОстатки.КоличествоОстаток,
	|	СпецоснасткаОстатки.ПервоначальнаяСтоимостьКонечныйОстаток,
	|	СпецоснасткаОстатки.ПервоначальнаяСтоимостьНУКонечныйОстаток,
	|	СпецоснасткаОстатки.ПервоначальнаяСтоимостьПРКонечныйОстаток,
	|	СпецоснасткаОстатки.ПервоначальнаяСтоимостьВРКонечныйОстаток,
	|	СпецоснасткаОстатки.Количество,
	|	СпецоснасткаОстатки.Количество,
	|	ПартияМатериаловВЭксплуатацииСпецоснастка.НазначениеИспользования,
	|	ПартияМатериаловВЭксплуатацииСпецоснастка.НазначениеИспользования.СпособПогашенияСтоимости,
	|	ЕСТЬNULL(ПартияМатериаловВЭксплуатацииСпецоснастка.НазначениеИспользования.СрокПолезногоИспользования, 0),
	|	ЕСТЬNULL(ПартияМатериаловВЭксплуатацииСпецоснастка.НазначениеИспользования.ОбщийОбъемПродукцииРабот, 0),
	|	ПартияМатериаловВЭксплуатацииСпецоснастка.НазначениеИспользования.СпособОтраженияРасходов,
	|	ЕСТЬNULL(ВыработкаМатериаловОбороты.КоличествоОборот, 0)
	|ИЗ
	|	СпецоснасткаОстатки КАК СпецоснасткаОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПартияМатериаловВЭксплуатации КАК ПартияМатериаловВЭксплуатацииСпецоснастка
	|		ПО СпецоснасткаОстатки.Номенклатура = ПартияМатериаловВЭксплуатацииСпецоснастка.Номенклатура
	|			И СпецоснасткаОстатки.ПартияМатериаловВЭксплуатации = ПартияМатериаловВЭксплуатацииСпецоснастка.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыработкаМатериаловОбороты КАК ВыработкаМатериаловОбороты
	|		ПО СпецоснасткаОстатки.Номенклатура = ВыработкаМатериаловОбороты.Номенклатура
	|ГДЕ
	|	СпецоснасткаОстатки.ПартияМатериаловВЭксплуатации ССЫЛКА Документ.ПартияМатериаловВЭксплуатации";
	
	ТаблицаПогашениеСтоимости = Запрос.Выполнить().Выгрузить();
	
	// Рассчитываем суммы погашения стоимости
	ТаблицаПогашениеСтоимости.Колонки.Добавить("Сумма",   ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаПогашениеСтоимости.Колонки.Добавить("СуммаНУ", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаПогашениеСтоимости.Колонки.Добавить("СуммаПР", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаПогашениеСтоимости.Колонки.Добавить("СуммаВР", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	
	// Отберем строки таблицы погашения стоимости, в которых есть что распределять
	СтрокиПогашениеСтоимостиДляРаспределения = Новый Массив;
	СпособыОтраженияРасходов                 = Новый Массив;
	
	Для Каждого СтрокаТаблицы Из ТаблицаПогашениеСтоимости Цикл
		
		Если (НЕ ЗначениеЗаполнено(СтрокаТаблицы.НазначениеИспользования))
			ИЛИ (СтрокаТаблицы.СпособПогашенияСтоимости = Перечисления.СпособыПогашенияСтоимости.ПогашатьСтоимостьПриПередачеВЭксплуатацию)
			ИЛИ (СтрокаТаблицы.СтоимостьНачальныйОстаток <= 0) Тогда
			// Материал не имеет остаточной стоимости на начало месяца
			// или списан на затраты при передаче - дополнительная обработка не требуется.
			Продолжить;
		КонецЕсли;
		
		СтрокиПогашениеСтоимостиДляРаспределения.Добавить(СтрокаТаблицы);
		Если СпособыОтраженияРасходов.Найти(СтрокаТаблицы.СпособОтраженияРасходов) = Неопределено Тогда
			СпособыОтраженияРасходов.Добавить(СтрокаТаблицы.СпособОтраженияРасходов);
		КонецЕсли;
		
	КонецЦикла;
	
	// Проверим, что корректно заполнены правила отражения расходов.
	НаправленияАмортизацииСОшибками = Справочники.СпособыОтраженияРасходовПоАмортизации.ПроверитьПриВыполненииРегламентнойОперации(
		Реквизиты.Регистратор,
		Отказ,
		СпособыОтраженияРасходов);
	
	Для Каждого СтрокаТаблицы Из СтрокиПогашениеСтоимостиДляРаспределения Цикл
		
		Если (СтрокаТаблицы.СпособПогашенияСтоимости = Перечисления.СпособыПогашенияСтоимости.ПогашатьСтоимостьПриПередачеВЭксплуатацию)
			ИЛИ (СтрокаТаблицы.СтоимостьНачальныйОстаток <= 0) Тогда
			// Материал не имеет остаточной стоимости на начало месяца
			// или списан на затраты при передаче - дополнительная обработка не требуется.
			Продолжить;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.СпособПогашенияСтоимости) Тогда
			ТекстОшибки = НСтр("ru='Не указан способ погашения стоимости для материала ""%1"" в назначении использования ""%2"".
				|Рекомендуется проверить данные в документе передачи в эксплуатацию.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстОшибки,
				СтрокаТаблицы.Номенклатура,
				СтрокаТаблицы.НазначениеИспользования);
			БухгалтерскийУчетПереопределяемый.СообщитьОбОшибкеРегОперацииСНавигацией(ТекстОшибки, , Отказ, Реквизиты.Регистратор);
			Продолжить;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.СрокПолезногоИспользования)
			И (СтрокаТаблицы.СпособПогашенияСтоимости = Перечисления.СпособыПогашенияСтоимости.Линейный) Тогда
				ТекстОшибки = НСтр("ru='Не указан срок использования для материала ""%1"" в назначении использования ""%2"".
					|Рекомендуется проверить данные в документе передачи в эксплуатацию.'");
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ТекстОшибки,
					СтрокаТаблицы.Номенклатура,
					СтрокаТаблицы.НазначениеИспользования);
				БухгалтерскийУчетПереопределяемый.СообщитьОбОшибкеРегОперацииСНавигацией(ТекстОшибки, , Отказ, Реквизиты.Регистратор);
			Продолжить;
		КонецЕсли;
		
		СуммаПогашения   = 0;
		СуммаПогашенияНУ = 0;
		СуммаПогашенияПР = 0;
		
		Если СтрокаТаблицы.КоличествоОстаток > 0 Тогда
		
			Если СтрокаТаблицы.СпособПогашенияСтоимости = Перечисления.СпособыПогашенияСтоимости.Линейный Тогда
				
				СуммаПогашения   = СтрокаТаблицы.ПервоначальнаяСтоимостьКонечныйОстаток / СтрокаТаблицы.СрокПолезногоИспользования;
				СуммаПогашенияНУ = СтрокаТаблицы.ПервоначальнаяСтоимостьНУКонечныйОстаток / СтрокаТаблицы.СрокПолезногоИспользования;
				СуммаПогашенияПР = СтрокаТаблицы.ПервоначальнаяСтоимостьПРКонечныйОстаток / СтрокаТаблицы.СрокПолезногоИспользования;
				
			ИначеЕсли СтрокаТаблицы.СпособПогашенияСтоимости = Перечисления.СпособыПогашенияСтоимости.ПропорциональноОбъемуПродукцииРабот Тогда
				
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Выработка) Тогда
					Продолжить;
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ОбъемПродукцииРабот) Тогда
					ТекстОшибки = НСтр("ru='Не определен объем продукции для вычисления погашения стоимости для материала  ""%1"" в назначении использования ""%2"".
						|Рекомендуется проверить данные в документе передачи в эксплуатацию.'");
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						ТекстОшибки,
						СтрокаТаблицы.Номенклатура,
						СтрокаТаблицы.НазначениеИспользования);
					БухгалтерскийУчетПереопределяемый.СообщитьОбОшибкеРегОперацииСНавигацией(ТекстОшибки, , Отказ, Реквизиты.Регистратор);
					Продолжить;
				КонецЕсли;
				
				СуммаПогашения   = СтрокаТаблицы.ПервоначальнаяСтоимостьКонечныйОстаток * СтрокаТаблицы.Выработка / СтрокаТаблицы.ОбъемПродукцииРабот;
				СуммаПогашенияНУ = СтрокаТаблицы.ПервоначальнаяСтоимостьНУКонечныйОстаток * СтрокаТаблицы.Выработка / СтрокаТаблицы.ОбъемПродукцииРабот;
				СуммаПогашенияПР = СтрокаТаблицы.ПервоначальнаяСтоимостьПРКонечныйОстаток * СтрокаТаблицы.Выработка / СтрокаТаблицы.ОбъемПродукцииРабот;
				
			КонецЕсли;
			
			// Сумма погашения рассчитывается пропорционально количеству материалов, по которым погашается стоимость.
			СуммаПогашения   = СуммаПогашения / СтрокаТаблицы.КоличествоОстаток * СтрокаТаблицы.Количество;
			СуммаПогашенияНУ = СуммаПогашенияНУ / СтрокаТаблицы.КоличествоОстаток * СтрокаТаблицы.Количество;
			СуммаПогашенияПР = СуммаПогашенияПР / СтрокаТаблицы.КоличествоОстаток * СтрокаТаблицы.Количество;
			
			СуммаПогашения = ?(Окр(СуммаПогашения, 2) = 0 И СуммаПогашения <> 0, 0.01, Окр(СуммаПогашения, 2));
			СуммаПогашенияНУ = ?(Окр(СуммаПогашенияНУ, 2) = 0 И СуммаПогашенияНУ <> 0, 0.01, Окр(СуммаПогашенияНУ, 2));
			СуммаПогашенияПР = ?(Окр(СуммаПогашенияПР, 2) = 0 И СуммаПогашенияПР <> 0, 0.01, Окр(СуммаПогашенияПР, 2));
			
		КонецЕсли;
		
		// Сумма погашения не может быть меньше 0 и больше остаточной стоимости.
		СтрокаТаблицы.Сумма   = Макс(0, Мин(СтрокаТаблицы.СтоимостьКонечныйОстаток, СуммаПогашения));
		СтрокаТаблицы.СуммаНУ = Макс(0, Мин(СтрокаТаблицы.СтоимостьНУКонечныйОстаток, СуммаПогашенияНУ));
		СтрокаТаблицы.СуммаПР = Макс(0, Мин(СтрокаТаблицы.СтоимостьПРКонечныйОстаток, СуммаПогашенияПР));
		
		Если СтрокаТаблицы.Сумма = 0 И СтрокаТаблицы.СуммаНУ = 0 И СтрокаТаблицы.СуммаПР = 0 Тогда
			СтрокаТаблицы.СуммаВР = СтрокаТаблицы.СтоимостьВРКонечныйОстаток;
		Иначе
			СтрокаТаблицы.СуммаВР = СтрокаТаблицы.Сумма - СтрокаТаблицы.СуммаНУ - СтрокаТаблицы.СуммаПР;
		КонецЕсли;
		
	КонецЦикла;
	
	// Погашается только стоимость материалов, количество не списывается
	ТаблицаПогашениеСтоимости.ЗаполнитьЗначения(0, "Количество");
	ТаблицаПогашениеСтоимости.ЗаполнитьЗначения(0, "КоличествоМЦ");
	
	Возврат ТаблицаПогашениеСтоимости;
	
КонецФункции

Функция ПодготовитьТаблицуНачислениеПогашенияСтоимостиСпецодеждыСпецоснастки(ТаблицаМатериалы, Реквизиты, Отказ) Экспорт
	
	ТаблицаНачислениеПогашенияСтоимости = ТаблицаМатериалы.СкопироватьКолонки();
	ТаблицаНачислениеПогашенияСтоимости.Колонки.Добавить("СчетРасходов");
	ТаблицаНачислениеПогашенияСтоимости.Колонки.Добавить("СубконтоРасходов1");
	ТаблицаНачислениеПогашенияСтоимости.Колонки.Добавить("СубконтоРасходов2");
	ТаблицаНачислениеПогашенияСтоимости.Колонки.Добавить("СубконтоРасходов3");
	ТаблицаНачислениеПогашенияСтоимости.Колонки.Добавить("ПодразделениеРасходов");
	
	МассивКоэффициентов = Новый Массив;
	
	НаличиеСуммаМЦ = (ТаблицаМатериалы.Колонки.Найти("СуммаМЦ") <> Неопределено);
	НаличиеСуммаМЦНУ = (ТаблицаМатериалы.Колонки.Найти("СуммаМЦНУ") <> Неопределено);
	
	Для Каждого СтрокаТаблицы Из ТаблицаМатериалы Цикл
		
		Если СтрокаТаблицы.Количество = 0
		   И СтрокаТаблицы.КоличествоМЦ = 0
		   И СтрокаТаблицы.Сумма = 0
		   И СтрокаТаблицы.СуммаНУ = 0
		   И СтрокаТаблицы.СуммаПР = 0
		   И СтрокаТаблицы.СуммаВР = 0
		   И ?(НаличиеСуммаМЦ, СтрокаТаблицы.СуммаМЦ = 0, Истина)
		   И ?(НаличиеСуммаМЦНУ, СтрокаТаблицы.СуммаМЦНУ = 0, Истина)
		Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.СпособОтраженияРасходов) Тогда
			ТекстОшибки = НСтр("ru='Не указан способ отражения расходов по погашению стоимости для материала ""%1"".
				|Рекомендуется проверить данные в документе передачи в эксплуатацию.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстОшибки,
				СтрокаТаблицы.Номенклатура);
			БухгалтерскийУчетПереопределяемый.СообщитьОбОшибкеРегОперацииСНавигацией(ТекстОшибки, , Отказ, Реквизиты.Регистратор);
			Продолжить;
		КонецЕсли;

		МассивКоэффициентов.Очистить();
		Для Каждого СпособОтраженияРасходов Из СтрокаТаблицы.СпособОтраженияРасходов.Способы Цикл
			МассивКоэффициентов.Добавить(СпособОтраженияРасходов.Коэффициент);
		КонецЦикла;

		МассивКоличества = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(СтрокаТаблицы.Количество, МассивКоэффициентов, 3);
		МассивКоличестваМЦ = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(СтрокаТаблицы.КоличествоМЦ, МассивКоэффициентов, 3);

		Если НаличиеСуммаМЦ Тогда 
			МассивСуммМЦ = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(СтрокаТаблицы.СуммаМЦ, МассивКоэффициентов, 2);
		Иначе
			МассивСуммМЦ = Неопределено;
		КонецЕсли;
		Если НаличиеСуммаМЦНУ Тогда 
			МассивСуммМЦНУ = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(СтрокаТаблицы.СуммаМЦНУ, МассивКоэффициентов, 2);
		Иначе
			МассивСуммМЦНУ = Неопределено;
		КонецЕсли;
		
		МассивСумм = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(СтрокаТаблицы.Сумма, МассивКоэффициентов, 2);
		Если ЗначениеЗаполнено(СтрокаТаблицы.Сумма) И (МассивСумм = Неопределено) Тогда
			ТекстОшибки = НСтр("ru='В способе отражения расходов по погашению стоимости для материала ""%1"" не проставлены коэффициенты.
				|Рекомендуется проверить данные в документе передачи в эксплуатацию.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстОшибки,
				СтрокаТаблицы.Номенклатура);
			БухгалтерскийУчетПереопределяемый.СообщитьОбОшибкеРегОперацииСНавигацией(ТекстОшибки, , Отказ, Реквизиты.Регистратор);
			Продолжить;
		КонецЕсли;
		
		МассивСуммНУ = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(СтрокаТаблицы.СуммаНУ, МассивКоэффициентов, 2);
		Если ЗначениеЗаполнено(СтрокаТаблицы.СуммаНУ) И (МассивСуммНУ = Неопределено) Тогда
			ТекстОшибки = НСтр("ru='В способе отражения расходов по погашению стоимости для материала ""%1"" не проставлены коэффициенты.
				|Рекомендуется проверить данные в документе передачи в эксплуатацию.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстОшибки,
				СтрокаТаблицы.Номенклатура);
			БухгалтерскийУчетПереопределяемый.СообщитьОбОшибкеРегОперацииСНавигацией(ТекстОшибки, , Отказ, Реквизиты.Регистратор);
			Продолжить;
		КонецЕсли;
		
		МассивСуммПР = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(СтрокаТаблицы.СуммаПР, МассивКоэффициентов, 2);
		Если ЗначениеЗаполнено(СтрокаТаблицы.СуммаПР) И (МассивСуммПР = Неопределено) Тогда
			ТекстОшибки = НСтр("ru='В способе отражения расходов по погашению стоимости для материала ""%1"" не проставлены коэффициенты.
				|Рекомендуется проверить данные в документе передачи в эксплуатацию.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстОшибки,
				СтрокаТаблицы.Номенклатура);
			БухгалтерскийУчетПереопределяемый.СообщитьОбОшибкеРегОперацииСНавигацией(ТекстОшибки, , Отказ, Реквизиты.Регистратор);
			Продолжить;
		КонецЕсли;
		
		МассивСуммВР = ОбщегоНазначенияБПКлиентСервер.РаспределитьПропорционально(СтрокаТаблицы.СуммаВР, МассивКоэффициентов, 2);
		Если ЗначениеЗаполнено(СтрокаТаблицы.СуммаВР) И (МассивСуммВР = Неопределено) Тогда
			ТекстОшибки = НСтр("ru='В способе отражения расходов по погашению стоимости для материала ""%1"" не проставлены коэффициенты.
				|Рекомендуется проверить данные в документе передачи в эксплуатацию.'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстОшибки,
				СтрокаТаблицы.Номенклатура);
			БухгалтерскийУчетПереопределяемый.СообщитьОбОшибкеРегОперацииСНавигацией(ТекстОшибки, , Отказ, Реквизиты.Регистратор);
			Продолжить;
		КонецЕсли;
		
		Если НЕ (МассивСумм = Неопределено) Тогда
			Если МассивСумм.Количество() <> МассивКоэффициентов.Количество() Тогда
				ТекстОшибки = НСтр("ru='В способе отражения расходов по погашению стоимости для материала ""%1"" не проставлены коэффициенты.
					|Рекомендуется проверить данные в документе передачи в эксплуатацию.'");
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ТекстОшибки,
					СтрокаТаблицы.Номенклатура);
				БухгалтерскийУчетПереопределяемый.СообщитьОбОшибкеРегОперацииСНавигацией(ТекстОшибки, , Отказ, Реквизиты.Регистратор);
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ (МассивСуммНУ = Неопределено) Тогда
			Если МассивСуммНУ.Количество() <> МассивКоэффициентов.Количество() Тогда
				ТекстОшибки = НСтр("ru='В способе отражения расходов по погашению стоимости для материала ""%1"" не проставлены коэффициенты.
					|Рекомендуется проверить данные в документе передачи в эксплуатацию.'");
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ТекстОшибки,
					СтрокаТаблицы.Номенклатура);
				БухгалтерскийУчетПереопределяемый.СообщитьОбОшибкеРегОперацииСНавигацией(ТекстОшибки, , Отказ, Реквизиты.Регистратор);
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ (МассивСуммПР = Неопределено) Тогда
			Если МассивСуммПР.Количество() <> МассивКоэффициентов.Количество() Тогда
				ТекстОшибки = НСтр("ru='В способе отражения расходов по погашению стоимости для материала ""%1"" не проставлены коэффициенты.
					|Рекомендуется проверить данные в документе передачи в эксплуатацию.'");
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ТекстОшибки,
					СтрокаТаблицы.Номенклатура);
				БухгалтерскийУчетПереопределяемый.СообщитьОбОшибкеРегОперацииСНавигацией(ТекстОшибки, , Отказ, Реквизиты.Регистратор);
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ (МассивСуммВР = Неопределено) Тогда
			Если МассивСуммВР.Количество() <> МассивКоэффициентов.Количество() Тогда
				ТекстОшибки = НСтр("ru='В способе отражения расходов по погашению стоимости для материала ""%1"" не проставлены коэффициенты.
					|Рекомендуется проверить данные в документе передачи в эксплуатацию.'");
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ТекстОшибки,
					СтрокаТаблицы.Номенклатура);
				БухгалтерскийУчетПереопределяемый.СообщитьОбОшибкеРегОперацииСНавигацией(ТекстОшибки, , Отказ, Реквизиты.Регистратор);
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Для Каждого СпособОтраженияРасходов Из СтрокаТаблицы.СпособОтраженияРасходов.Способы Цикл
			
			ИндексЭлемента = СпособОтраженияРасходов.НомерСтроки - 1;
			
			НоваяСтрока = ТаблицаНачислениеПогашенияСтоимости.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
			
			НоваяСтрока.СчетРасходов          = СпособОтраженияРасходов.СчетЗатрат;
			НоваяСтрока.ПодразделениеРасходов = СпособОтраженияРасходов.ПодразделениеОрганизации;
			НоваяСтрока.СубконтоРасходов1     = СпособОтраженияРасходов.Субконто1;
			НоваяСтрока.СубконтоРасходов2     = СпособОтраженияРасходов.Субконто2;
			НоваяСтрока.СубконтоРасходов3     = СпособОтраженияРасходов.Субконто3;
			НоваяСтрока.Сумма                 = ?(ЗначениеЗаполнено(МассивСумм),         МассивСумм[ИндексЭлемента],         0);
			НоваяСтрока.СуммаНУ               = ?(ЗначениеЗаполнено(МассивСуммНУ),       МассивСуммНУ[ИндексЭлемента],       0);
			НоваяСтрока.СуммаПР               = ?(ЗначениеЗаполнено(МассивСуммПР),       МассивСуммПР[ИндексЭлемента],       0);
			НоваяСтрока.СуммаВР               = ?(ЗначениеЗаполнено(МассивСуммВР),       МассивСуммВР[ИндексЭлемента],       0);
			НоваяСтрока.Количество            = ?(ЗначениеЗаполнено(МассивКоличества),   МассивКоличества[ИндексЭлемента],   0);
			НоваяСтрока.КоличествоМЦ          = ?(ЗначениеЗаполнено(МассивКоличестваМЦ), МассивКоличестваМЦ[ИндексЭлемента], 0);
			Если НаличиеСуммаМЦ Тогда
				НоваяСтрока.СуммаМЦ			  = ?(ЗначениеЗаполнено(МассивСуммМЦ),		 МассивСуммМЦ[ИндексЭлемента],		 0);
			КонецЕсли;
			Если НаличиеСуммаМЦНУ Тогда
				НоваяСтрока.СуммаМЦНУ		  = ?(ЗначениеЗаполнено(МассивСуммМЦНУ),	 МассивСуммМЦНУ[ИндексЭлемента],	 0);
			КонецЕсли;
			
		КонецЦикла;

	КонецЦикла;
	
	Возврат ТаблицаНачислениеПогашенияСтоимости;

КонецФункции

// ПОДГОТОВКА СПИСАНИЯ МАТЕРИАЛОВ ИЗ ЭКСПЛУАТАЦИИ

Функция ПодготовитьТаблицуСписанныеИзЭксплуатацииСпецодеждаСпецоснастка(ТаблицаМатериалы, ТаблицаПогашениеСтоимостиМатериалов, Реквизиты, Отказ)
	
	ВидОперацииСписания = ?(ТипЗнч(Реквизиты.Регистратор)=Тип("ДокументСсылка.ВозвратМатериаловИзЭксплуатации"), "Возврат", "Списание");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаМатериалы.ИмяСписка,
	|	ТаблицаМатериалы.СинонимСписка,
	|	ТаблицаМатериалы.НомерСтроки,
	|	ТаблицаМатериалы.СчетПередачи КАК СчетПередачи,
	|	ТаблицаМатериалы.СчетМЦ КАК СчетМЦ,
	|	ТаблицаМатериалы.Номенклатура КАК Номенклатура,
	|	ТаблицаМатериалы.ПартияМатериаловВЭксплуатации КАК ПартияМатериаловВЭксплуатации,
	|	ЕСТЬNULL(ТаблицаМатериалы.ФизЛицо, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК ФизЛицо,
	|	ЕСТЬNULL(ТаблицаМатериалы.Подразделение, &ПустоеПодразделение) КАК Подразделение,
	|	ТаблицаМатериалы.Количество,
	|	ТаблицаМатериалы.СчетРасходов,
	|	ТаблицаМатериалы.СубконтоРасходов1,
	|	ТаблицаМатериалы.СубконтоРасходов2,
	|	ТаблицаМатериалы.СубконтоРасходов3,
	|	ТаблицаМатериалы.ВидСубконтоРасходов1,
	|	ТаблицаМатериалы.ВидСубконтоРасходов2,
	|	ТаблицаМатериалы.ВидСубконтоРасходов3,
	|	ТаблицаМатериалы.Содержание
	|ПОМЕСТИТЬ ТаблицаМатериалы
	|ИЗ
	|	&ТаблицаМатериалы КАК ТаблицаМатериалы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетПередачи,
	|	СчетМЦ,
	|	Номенклатура,
	|	ПартияМатериаловВЭксплуатации,
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПогашениеСтоимостиМатериалов.СчетПередачи КАК СчетПередачи,
	|	ТаблицаПогашениеСтоимостиМатериалов.СчетМЦ КАК СчетМЦ,
	|	ТаблицаПогашениеСтоимостиМатериалов.Номенклатура КАК Номенклатура,
	|	ТаблицаПогашениеСтоимостиМатериалов.ПартияМатериаловВЭксплуатации КАК ПартияМатериаловВЭксплуатации,
	|	ЕСТЬNULL(ТаблицаПогашениеСтоимостиМатериалов.ФизЛицо, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК ФизЛицо,
	|	ТаблицаПогашениеСтоимостиМатериалов.Подразделение КАК Подразделение,
	|	ТаблицаПогашениеСтоимостиМатериалов.СпособПогашенияСтоимости КАК СпособПогашенияСтоимости,
	|	ТаблицаПогашениеСтоимостиМатериалов.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	ТаблицаПогашениеСтоимостиМатериалов.КоличествоОстаток,
	|	ТаблицаПогашениеСтоимостиМатериалов.СтоимостьКонечныйОстаток,
	|	ТаблицаПогашениеСтоимостиМатериалов.СтоимостьНУКонечныйОстаток,
	|	ТаблицаПогашениеСтоимостиМатериалов.СтоимостьПРКонечныйОстаток,
	|	ТаблицаПогашениеСтоимостиМатериалов.СтоимостьВРКонечныйОстаток,
	|	ТаблицаПогашениеСтоимостиМатериалов.Сумма,
	|	ТаблицаПогашениеСтоимостиМатериалов.СуммаНУ,
	|	ТаблицаПогашениеСтоимостиМатериалов.СуммаПР,
	|	ТаблицаПогашениеСтоимостиМатериалов.СуммаВР
	|ПОМЕСТИТЬ ТаблицаПогашениеСтоимостиМатериалов
	|ИЗ
	|	&ТаблицаПогашениеСтоимостиМатериалов КАК ТаблицаПогашениеСтоимостиМатериалов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетПередачи,
	|	СчетМЦ,
	|	Номенклатура,
	|	ПартияМатериаловВЭксплуатации,
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаМатериалы.ИмяСписка КАК ИмяСписка,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура) КАК ВидРасхода,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыПартийУСН.Купленные) КАК СтатусыПартийУСН,
	|	ТаблицаМатериалы.Номенклатура КАК ЭлементРасхода,
	|	ЛОЖЬ КАК ЭтоТовар,
	|	ИСТИНА КАК ЭтоМатериал,
	|	&ВалютаРегламентированногоУчета КАК Валюта,
	|	ТаблицаМатериалы.СинонимСписка,
	|	ТаблицаМатериалы.НомерСтроки КАК НомерСтроки,
	|	ТаблицаМатериалы.СчетПередачи,
	|	ТаблицаМатериалы.СчетМЦ,
	|	ТаблицаМатериалы.Номенклатура,
	|	ТаблицаМатериалы.ПартияМатериаловВЭксплуатации,
	|	ТаблицаМатериалы.ПартияМатериаловВЭксплуатации КАК Партия,
	|	ТаблицаМатериалы.ФизЛицо,
	|	ТаблицаМатериалы.ФизЛицо КАК ДоговорКонтрагента,
	|	&Подразделение КАК Подразделение,
	|	&Подразделение КАК ПодразделениеРасходов,
	|	ТаблицаМатериалы.Количество,
	|	ТаблицаМатериалы.Количество КАК КоличествоМЦ,
	|	0 КАК НДС,
	|	ТаблицаМатериалы.СчетРасходов КАК СчетУчета,
	|	ТаблицаМатериалы.СчетРасходов,
	|	ТаблицаМатериалы.СубконтоРасходов1,
	|	ТаблицаМатериалы.СубконтоРасходов2,
	|	ТаблицаМатериалы.СубконтоРасходов3,
	|	ТаблицаМатериалы.ВидСубконтоРасходов1,
	|	ТаблицаМатериалы.ВидСубконтоРасходов2,
	|	ТаблицаМатериалы.ВидСубконтоРасходов3,
	|	ТаблицаМатериалы.Содержание,
	|	ЗНАЧЕНИЕ(Перечисление.ОтражениеВУСН.НеПринимаются) КАК ОтражениеВУСН,
	|	ТаблицаПогашениеСтоимостиМатериалов.СпособПогашенияСтоимости КАК СпособПогашенияСтоимости,
	|	ТаблицаПогашениеСтоимостиМатериалов.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	ЕСТЬNULL(ТаблицаПогашениеСтоимостиМатериалов.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ТаблицаПогашениеСтоимостиМатериалов.СтоимостьКонечныйОстаток, 0) КАК СтоимостьКонечныйОстаток,
	|	ЕСТЬNULL(ТаблицаПогашениеСтоимостиМатериалов.СтоимостьНУКонечныйОстаток, 0) КАК СтоимостьНУКонечныйОстаток,
	|	ЕСТЬNULL(ТаблицаПогашениеСтоимостиМатериалов.СтоимостьПРКонечныйОстаток, 0) КАК СтоимостьПРКонечныйОстаток,
	|	ЕСТЬNULL(ТаблицаПогашениеСтоимостиМатериалов.СтоимостьВРКонечныйОстаток, 0) КАК СтоимостьВРКонечныйОстаток,
	|	ЕСТЬNULL(ТаблицаПогашениеСтоимостиМатериалов.Сумма, 0) КАК СуммаПогашения,
	|	ЕСТЬNULL(ТаблицаПогашениеСтоимостиМатериалов.СуммаНУ, 0) КАК СуммаПогашенияНУ,
	|	ЕСТЬNULL(ТаблицаПогашениеСтоимостиМатериалов.СуммаПР, 0) КАК СуммаПогашенияПР,
	|	ЕСТЬNULL(ТаблицаПогашениеСтоимостиМатериалов.СуммаВР, 0) КАК СуммаПогашенияВР,
	|	ВЫБОР
	|		КОГДА ТаблицаМатериалы.ИмяСписка = ""Спецодежда""
	|			ТОГДА ЕСТЬNULL(ХозрасчетныйОстаткиСпецодежда.КоличествоОстатокДт, 0)
	|		ИНАЧЕ ЕСТЬNULL(ХозрасчетныйОстаткиСпецоснастка.КоличествоОстатокДт, 0)
	|	КОНЕЦ КАК КоличествоМЦОстаток,
	|	ВЫБОР
	|		КОГДА ТаблицаМатериалы.ИмяСписка = ""Спецодежда""
	|			ТОГДА ЕСТЬNULL(ХозрасчетныйОстаткиСпецодежда.СуммаОстатокДт, 0)
	|		ИНАЧЕ ЕСТЬNULL(ХозрасчетныйОстаткиСпецоснастка.СуммаОстатокДт, 0)
	|	КОНЕЦ КАК ПервоначальнаяСтоимостьКонечныйОстаток,
	|	ВЫБОР
	|		КОГДА ТаблицаМатериалы.ИмяСписка = ""Спецодежда""
	|			ТОГДА ЕСТЬNULL(ХозрасчетныйОстаткиСпецодежда.СуммаНУОстатокДт, 0)
	|		ИНАЧЕ ЕСТЬNULL(ХозрасчетныйОстаткиСпецоснастка.СуммаНУОстатокДт, 0)
	|	КОНЕЦ КАК ПервоначальнаяСтоимостьНУКонечныйОстаток,
	|	ВЫБОР
	|		КОГДА ТаблицаМатериалы.ИмяСписка = ""Спецодежда""
	|			ТОГДА ЕСТЬNULL(ХозрасчетныйОстаткиСпецодежда.СуммаПРОстатокДт, 0)
	|		ИНАЧЕ ЕСТЬNULL(ХозрасчетныйОстаткиСпецоснастка.СуммаПРОстатокДт, 0)
	|	КОНЕЦ КАК ПервоначальнаяСтоимостьПРКонечныйОстаток,
	|	ВЫБОР
	|		КОГДА ТаблицаМатериалы.ИмяСписка = ""Спецодежда""
	|			ТОГДА ЕСТЬNULL(ХозрасчетныйОстаткиСпецодежда.СуммаВРОстатокДт, 0)
	|		ИНАЧЕ ЕСТЬNULL(ХозрасчетныйОстаткиСпецоснастка.СуммаВРОстатокДт, 0)
	|	КОНЕЦ КАК ПервоначальнаяСтоимостьВРКонечныйОстаток
	|ИЗ
	|	ТаблицаМатериалы КАК ТаблицаМатериалы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПогашениеСтоимостиМатериалов КАК ТаблицаПогашениеСтоимостиМатериалов
	|		ПО ТаблицаМатериалы.СчетПередачи = ТаблицаПогашениеСтоимостиМатериалов.СчетПередачи
	|			И ТаблицаМатериалы.СчетМЦ = ТаблицаПогашениеСтоимостиМатериалов.СчетМЦ
	|			И ТаблицаМатериалы.Номенклатура = ТаблицаПогашениеСтоимостиМатериалов.Номенклатура
	|			И ТаблицаМатериалы.ПартияМатериаловВЭксплуатации = ТаблицаПогашениеСтоимостиМатериалов.ПартияМатериаловВЭксплуатации
	|			И ТаблицаМатериалы.ФизЛицо = ТаблицаПогашениеСтоимостиМатериалов.ФизЛицо
	|			И (ТаблицаМатериалы.Подразделение = ТаблицаПогашениеСтоимостиМатериалов.Подразделение ИЛИ ТаблицаПогашениеСтоимостиМатериалов.Подразделение ЕСТЬ NULL)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&Период,
	|				Счет В (&СчетаУчетаСпецодеждыЗабалансовый),
	|				&ВидыСубконтоСпецодежда,
	|				Организация = &Организация
	|					И (Подразделение = &Подразделение
	|						ИЛИ Подразделение ЕСТЬ NULL )) КАК ХозрасчетныйОстаткиСпецодежда
	|		ПО ТаблицаМатериалы.СчетМЦ = ХозрасчетныйОстаткиСпецодежда.Счет
	|			И ТаблицаМатериалы.Номенклатура = ХозрасчетныйОстаткиСпецодежда.Субконто1
	|			И ТаблицаМатериалы.ПартияМатериаловВЭксплуатации = ХозрасчетныйОстаткиСпецодежда.Субконто2
	|			И ТаблицаМатериалы.ФизЛицо = ХозрасчетныйОстаткиСпецодежда.Субконто3
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&Период,
	|				Счет В (&СчетаУчетаСпецоснасткиЗабалансовый),
	|				&ВидыСубконтоСпецоснастка,
	|				Организация = &Организация
	|					И (Подразделение = &Подразделение
	|						ИЛИ Подразделение ЕСТЬ NULL )) КАК ХозрасчетныйОстаткиСпецоснастка
	|		ПО ТаблицаМатериалы.СчетМЦ = ХозрасчетныйОстаткиСпецоснастка.Счет
	|			И ТаблицаМатериалы.Номенклатура = ХозрасчетныйОстаткиСпецоснастка.Субконто1
	|			И ТаблицаМатериалы.ПартияМатериаловВЭксплуатации = ХозрасчетныйОстаткиСпецоснастка.Субконто2
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИмяСписка,
	|	НомерСтроки";
	Запрос.УстановитьПараметр("ТаблицаМатериалы", 						ТаблицаМатериалы);
	Запрос.УстановитьПараметр("ТаблицаПогашениеСтоимостиМатериалов", 	ТаблицаПогашениеСтоимостиМатериалов);
	Запрос.УстановитьПараметр("Период", Новый Граница(Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация", 							Реквизиты.Организация);
	Запрос.УстановитьПараметр("Подразделение", 							Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("СчетаУчетаСпецодеждыЗабалансовый",   		
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.СпецодеждаВЭксплуатацииВспомогательный));
	Запрос.УстановитьПараметр("СчетаУчетаСпецоснасткиЗабалансовый", 		
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.СпецоснасткаВЭксплуатацииВспомогательный));
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", 		Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ПустоеПодразделение", 					БухгалтерскийУчетПереопределяемый.ПустоеПодразделение());
	
	ВидыСубконтоСпецодежда = Новый Массив;
	ВидыСубконтоСпецодежда.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	ВидыСубконтоСпецодежда.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПартииМатериаловВЭксплуатации);
	ВидыСубконтоСпецодежда.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций);
	
	ВидыСубконтоСпецоснастка = Новый Массив;
	ВидыСубконтоСпецоснастка.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	ВидыСубконтоСпецоснастка.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПартииМатериаловВЭксплуатации);
	
	Запрос.УстановитьПараметр("ВидыСубконтоСпецодежда",   ВидыСубконтоСпецодежда);
	Запрос.УстановитьПараметр("ВидыСубконтоСпецоснастка", ВидыСубконтоСпецоснастка);
	
	ТаблицаСписанныеМатериалы = Запрос.Выполнить().Выгрузить();
	
	ТаблицаСписанныеМатериалы.Колонки.Добавить("Сумма",   ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаСписанныеМатериалы.Колонки.Добавить("СуммаНУ", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаСписанныеМатериалы.Колонки.Добавить("СуммаПР", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаСписанныеМатериалы.Колонки.Добавить("СуммаВР", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	
	ТаблицаСписанныеМатериалы.Колонки.Добавить("СуммаМЦ",   ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаСписанныеМатериалы.Колонки.Добавить("СуммаМЦНУ", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаСписанныеМатериалы.Колонки.Добавить("СуммаМЦПР", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаСписанныеМатериалы.Колонки.Добавить("СуммаМЦВР", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	
	Для Каждого СтрокаТаблицы Из ТаблицаСписанныеМатериалы Цикл
		
		// Проверяем, достаточный ли остаток по количеству (на забалансовом счете МЦ)
		Если СтрокаТаблицы.КоличествоМЦ > СтрокаТаблицы.КоличествоМЦОстаток Тогда
		
			ТекстОшибки = НСтр("ru='Указанное количество превышает остаток по счету %1.
				|Остаток: %2; Не хватает: %3'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки,
				СтрокаТаблицы.СчетМЦ,
				СтрокаТаблицы.КоличествоМЦОстаток,
				СтрокаТаблицы.КоличествоМЦ - СтрокаТаблицы.КоличествоМЦОстаток);
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", "Корректность",
				НСтр("ru = 'Количество'"),
				СтрокаТаблицы.НомерСтроки,
				СтрокаТаблицы.СинонимСписка,
				ТекстОшибки);
			Поле = СтрокаТаблицы.ИмяСписка + "[" + Формат(СтрокаТаблицы.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].Количество";

			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Поле, "Объект", Отказ);
		
			Продолжить;
			
		КонецЕсли;
		
		// Рассчитываем суммы списания
		ДоляСписанияМЦ = ?(СтрокаТаблицы.КоличествоМЦОстаток = 0, 0, СтрокаТаблицы.КоличествоМЦ / СтрокаТаблицы.КоличествоМЦОстаток);
		СтрокаТаблицы.СуммаМЦ   = СтрокаТаблицы.ПервоначальнаяСтоимостьКонечныйОстаток * ДоляСписанияМЦ;
		СтрокаТаблицы.СуммаМЦНУ = СтрокаТаблицы.ПервоначальнаяСтоимостьНУКонечныйОстаток * ДоляСписанияМЦ;
		СтрокаТаблицы.СуммаМЦПР = СтрокаТаблицы.ПервоначальнаяСтоимостьПРКонечныйОстаток * ДоляСписанияМЦ;
		СтрокаТаблицы.СуммаМЦВР = СтрокаТаблицы.ПервоначальнаяСтоимостьВРКонечныйОстаток * ДоляСписанияМЦ;
		
		Если (ВидОперацииСписания = "Возврат")
		 ИЛИ (ВидОперацииСписания = "Списание"
		  И (СтрокаТаблицы.СпособПогашенияСтоимости = Перечисления.СпособыПогашенияСтоимости.Линейный
		 ИЛИ СтрокаТаблицы.СпособПогашенияСтоимости = Перечисления.СпособыПогашенияСтоимости.ПропорциональноОбъемуПродукцииРабот))
		Тогда
		
			// Проверяем, достаточный ли остаток по количеству (на счете бух. учета)
			Если СтрокаТаблицы.Количество > СтрокаТаблицы.КоличествоОстаток Тогда
			
				ТекстОшибки = НСтр("ru='Указанное количество превышает остаток по счету %1.
					|Остаток: %2; Не хватает: %3'");
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки,
					СтрокаТаблицы.СчетПередачи,
					СтрокаТаблицы.КоличествоОстаток,
					СтрокаТаблицы.Количество - СтрокаТаблицы.КоличествоОстаток);
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", "Корректность",
					НСтр("ru = 'Количество'"),
					СтрокаТаблицы.НомерСтроки,
					СтрокаТаблицы.СинонимСписка,
					ТекстОшибки);
				Поле = СтрокаТаблицы.ИмяСписка + "[" + Формат(СтрокаТаблицы.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].Количество";

				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Поле, "Объект", Отказ);
			
				Продолжить;
				
			КонецЕсли;
			
			// Рассчитываем суммы списания
			ДоляСписания = ?(СтрокаТаблицы.КоличествоОстаток = 0, 0, СтрокаТаблицы.Количество / СтрокаТаблицы.КоличествоОстаток);
			СтрокаТаблицы.Сумма   = СтрокаТаблицы.СтоимостьКонечныйОстаток * ДоляСписания - СтрокаТаблицы.СуммаПогашения;
			СтрокаТаблицы.СуммаНУ = СтрокаТаблицы.СтоимостьНУКонечныйОстаток * ДоляСписания - СтрокаТаблицы.СуммаПогашенияНУ;
			СтрокаТаблицы.СуммаПР = СтрокаТаблицы.СтоимостьПРКонечныйОстаток * ДоляСписания - СтрокаТаблицы.СуммаПогашенияПР;
			СтрокаТаблицы.СуммаВР = СтрокаТаблицы.СтоимостьВРКонечныйОстаток * ДоляСписания - СтрокаТаблицы.СуммаПогашенияВР;
			
		ИначеЕсли ВидОперацииСписания = "Списание" Тогда
			// Материалы, списанные на затраты при передаче в эксплуатацию,
			// необходимо списать только с забалансового счета учета (МЦ)
			СтрокаТаблицы.Количество = 0;

		КонецЕсли;
		
	КонецЦикла;

	Возврат ТаблицаСписанныеМатериалы;

КонецФункции

Функция ПодготовитьТаблицуСписанныеПоНазначениюИспользованияСпецодеждаСпецоснастка(ТаблицаСписанныеМатериалы, Реквизиты, Отказ)
	
	СписокКолонок = ""
	+ "СчетПередачи,"
	+ "Номенклатура,"
	+ "ПартияМатериаловВЭксплуатации,"
	+ "ФизЛицо,"
	+ "Подразделение,"
	+ "СпособОтраженияРасходов,"
	+ "Количество,"
	+ "Сумма,"
	+ "СуммаНУ,"
	+ "СуммаПР,"
	+ "СуммаВР,"
	+ "Содержание";
	
	ТаблицаСписаниеМатериалов = ТаблицаСписанныеМатериалы.Скопировать(, СписокКолонок);
	ТаблицаСписаниеМатериалов.Колонки.Добавить("КоличествоМЦ", ОбщегоНазначения.ОписаниеТипаЧисло(15,3));
	
	// Материалы необходимо списать на затраты так, как указано в способе отражения расходов
	ТаблицаСписанныеПоНазначениюИспользованияМатериалы = ПодготовитьТаблицуНачислениеПогашенияСтоимостиСпецодеждыСпецоснастки(
		ТаблицаСписаниеМатериалов, Реквизиты, Отказ);
	
	Возврат ТаблицаСписанныеПоНазначениюИспользованияМатериалы;
	
КонецФункции

Функция ПодготовитьТаблицуСписанныйИзЭксплуатацииИнвентарь(ТаблицаМатериалы, Реквизиты, Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаМатериалы.ИмяСписка,
	|	ТаблицаМатериалы.СинонимСписка,
	|	ТаблицаМатериалы.НомерСтроки,
	|	ТаблицаМатериалы.СчетМЦ КАК СчетМЦ,
	|	ТаблицаМатериалы.Номенклатура КАК Номенклатура,
	|	ТаблицаМатериалы.ПартияМатериаловВЭксплуатации КАК ПартияМатериаловВЭксплуатации,
	|	ЕСТЬNULL(ТаблицаМатериалы.ФизЛицо, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК ФизЛицо,
	|	ТаблицаМатериалы.КоличествоМЦ,
	|	ТаблицаМатериалы.Содержание
	|ПОМЕСТИТЬ ТаблицаМатериалы
	|ИЗ
	|	&ТаблицаМатериалы КАК ТаблицаМатериалы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетМЦ,
	|	Номенклатура,
	|	ПартияМатериаловВЭксплуатации,
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаМатериалы.ИмяСписка КАК ИмяСписка,
	|	ТаблицаМатериалы.СинонимСписка,
	|	ТаблицаМатериалы.НомерСтроки КАК НомерСтроки,
	|	ТаблицаМатериалы.СчетМЦ,
	|	ТаблицаМатериалы.Номенклатура,
	|	ТаблицаМатериалы.ПартияМатериаловВЭксплуатации,
	|	ТаблицаМатериалы.ФизЛицо,
	|	&Подразделение КАК Подразделение,
	|	ТаблицаМатериалы.КоличествоМЦ,
	|	ТаблицаМатериалы.Содержание,
	|	ЕСТЬNULL(ХозрасчетныйОстаткиМЦ.КоличествоОстатокДт, 0) КАК КоличествоМЦОстаток,
	|	ЕСТЬNULL(ХозрасчетныйОстаткиМЦ.СуммаОстатокДт, 0) КАК ПервоначальнаяСтоимостьКонечныйОстаток,
	|	ЕСТЬNULL(ХозрасчетныйОстаткиМЦ.СуммаНУОстатокДт, 0) КАК ПервоначальнаяСтоимостьНУКонечныйОстаток,
	|	ЕСТЬNULL(ХозрасчетныйОстаткиМЦ.СуммаПРОстатокДт, 0) КАК ПервоначальнаяСтоимостьПРКонечныйОстаток,
	|	ЕСТЬNULL(ХозрасчетныйОстаткиМЦ.СуммаВРОстатокДт, 0) КАК ПервоначальнаяСтоимостьВРКонечныйОстаток
	|ИЗ
	|	ТаблицаМатериалы КАК ТаблицаМатериалы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&Период,
	|				Счет В (&СчетаУчетаИнвентаряЗабалансовый),
	|				&ВидыСубконтоИнвентарь,
	|				Организация = &Организация
	|					И (Подразделение = &Подразделение
	|						ИЛИ Подразделение ЕСТЬ NULL )) КАК ХозрасчетныйОстаткиМЦ
	|		ПО ТаблицаМатериалы.СчетМЦ = ХозрасчетныйОстаткиМЦ.Счет
	|			И ТаблицаМатериалы.Номенклатура = ХозрасчетныйОстаткиМЦ.Субконто1
	|			И ТаблицаМатериалы.ПартияМатериаловВЭксплуатации = ХозрасчетныйОстаткиМЦ.Субконто2
	|			И ТаблицаМатериалы.ФизЛицо = ХозрасчетныйОстаткиМЦ.Субконто3
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИмяСписка,
	|	НомерСтроки";
	Запрос.УстановитьПараметр("ТаблицаМатериалы", ТаблицаМатериалы);
	Запрос.УстановитьПараметр("Период", Новый Граница(Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация", 	  Реквизиты.Организация);
	Запрос.УстановитьПараметр("Подразделение",	  Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("СчетаУчетаИнвентаряЗабалансовый", 
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ИнвентарьИХозяйственныеПринадлежностиВЭксплуатации));
	
	ВидыСубконтоИнвентарь = Новый Массив;
	ВидыСубконтоИнвентарь.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	ВидыСубконтоИнвентарь.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПартииМатериаловВЭксплуатации);
	ВидыСубконтоИнвентарь.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций);
	Запрос.УстановитьПараметр("ВидыСубконтоИнвентарь", ВидыСубконтоИнвентарь);
	
	ТаблицаСписанныеМатериалы = Запрос.Выполнить().Выгрузить();
	
	ТаблицаСписанныеМатериалы.Колонки.Добавить("СуммаМЦ",   ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаСписанныеМатериалы.Колонки.Добавить("СуммаМЦНУ", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаСписанныеМатериалы.Колонки.Добавить("СуммаМЦПР", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаСписанныеМатериалы.Колонки.Добавить("СуммаМЦВР", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	
	Для Каждого СтрокаТаблицы Из ТаблицаСписанныеМатериалы Цикл
		
		// Проверяем, достаточный ли остаток по количеству (на забалансовом счете МЦ)
		Если СтрокаТаблицы.КоличествоМЦ > СтрокаТаблицы.КоличествоМЦОстаток Тогда
		
			ТекстОшибки = НСтр("ru='Указанное количество превышает остаток по счету %1.
				|Остаток: %2; Не хватает: %3'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки,
				СтрокаТаблицы.СчетМЦ,
				СтрокаТаблицы.КоличествоМЦОстаток,
				СтрокаТаблицы.КоличествоМЦ - СтрокаТаблицы.КоличествоМЦОстаток);
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка", "Корректность",
				НСтр("ru = 'Количество'"),
				СтрокаТаблицы.НомерСтроки,
				СтрокаТаблицы.СинонимСписка,
				ТекстОшибки);
			Поле = СтрокаТаблицы.ИмяСписка + "[" + Формат(СтрокаТаблицы.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].Количество";

			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Поле, "Объект", Отказ);
		
			Продолжить;
			
		КонецЕсли;
		
		// Рассчитываем суммы списания
		ДоляСписанияМЦ = ?(СтрокаТаблицы.КоличествоМЦОстаток = 0, 0, СтрокаТаблицы.КоличествоМЦ / СтрокаТаблицы.КоличествоМЦОстаток);
		СтрокаТаблицы.СуммаМЦ   = СтрокаТаблицы.ПервоначальнаяСтоимостьКонечныйОстаток * ДоляСписанияМЦ;
		СтрокаТаблицы.СуммаМЦНУ = 0;
		СтрокаТаблицы.СуммаМЦПР = СтрокаТаблицы.ПервоначальнаяСтоимостьПРКонечныйОстаток * ДоляСписанияМЦ;
		СтрокаТаблицы.СуммаМЦВР = СтрокаТаблицы.ПервоначальнаяСтоимостьВРКонечныйОстаток * ДоляСписанияМЦ;
		
	КонецЦикла;

	Возврат ТаблицаСписанныеМатериалы;

КонецФункции

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ, ВЫПОЛНЯЮЩИЕ ДВИЖЕНИЯ ПО РЕГИСТРАМ

// ДВИЖЕНИЯ РЕГИСТРА БУХГАЛТЕРИИ

Процедура СформироватьПроводкиПогашениеСтоимостиСпецодеждыСпецоснастки(ТаблицаПогашенияСтоимости, Реквизиты, Движения, Отказ) Экспорт
	
	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	ПоддержкаПБУ18 = УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период);
	
	// С целью оптимизации производительности напрямую (а не через функции с повторно используемыми значениями) кешируем
	// свойства счетов. При заполнении субконто исключаем лишние проверки на значения субконто (наличие субконто на счете
	// и т.п. существующие в алгоритме как предусловия).
	СвойстваСчетовДтКеш = Новый Соответствие;
	СчетКтПредыдущий = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	
	// С целью оптимизации производительности предопределенные значения помещаются в переменные.
	ВидСубконтоНоменклатура                  = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура;
	ВидСубконтоПартииМатериаловВЭксплуатации = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПартииМатериаловВЭксплуатации;
	ВидСубконтоРаботникиОрганизаций          = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций;
	
	Для каждого СтрокаТаблицы из ТаблицаПогашенияСтоимости Цикл

		Если СтрокаТаблицы.Количество = 0
		   И СтрокаТаблицы.Сумма = 0
		   И СтрокаТаблицы.СуммаНУ = 0
		   И СтрокаТаблицы.СуммаПР = 0
		   И СтрокаТаблицы.СуммаВР = 0
		Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаНУДт = 0;
		СуммаПРДт = 0;
		СуммаВРДт = 0;
		СуммаНУКт = 0;
		СуммаПРКт = 0;
		СуммаВРКт = 0;
		
		Проводка = Движения.Хозрасчетный.Добавить();
		// Здесь заполнение субконто счета Дт, для производительности совмещенное с получением свойсв счета.
		// Заполнение самого счета и подразделения будет далее после проверок на ненулевые суммы.
		СвойстваСчетаДт = БухгалтерскийУчет.УстановитьСубконтоПоКешуСвойствСчета(СтрокаТаблицы.СчетРасходов, Проводка.СубконтоДт, СвойстваСчетовДтКеш,
				СтрокаТаблицы.СубконтоРасходов1, СтрокаТаблицы.СубконтоРасходов2, СтрокаТаблицы.СубконтоРасходов3);
				
		Если СтрокаТаблицы.СчетПередачи <> СчетКтПредыдущий Тогда   // первое использование счета передачи	
			
			// Предполагаем, что счетов передачи лишь несколько, и в ТаблицаПогашенияСтоимости спецодежда по одному счету идет подряд.
			// Поэтому ограничиваемся запоминанием только предыдущего счета, а не всех использованных счетов.
			
			СчетКтПредыдущий = СтрокаТаблицы.СчетПередачи;
			СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(СтрокаТаблицы.СчетПередачи);
			ИспользуемыеВидыСубконтоСчетКт = Новый Структура;
			ИспользуемыеВидыСубконтоСчетКт.Вставить("Номенклатура", СвойстваСчетаКт.ВидСубконто1 = ВидСубконтоНоменклатура
																		Или СвойстваСчетаКт.ВидСубконто2 = ВидСубконтоНоменклатура
																		Или СвойстваСчетаКт.ВидСубконто3 = ВидСубконтоНоменклатура);
			ИспользуемыеВидыСубконтоСчетКт.Вставить("ПартииМатериаловВЭксплуатации", СвойстваСчетаКт.ВидСубконто2 = ВидСубконтоПартииМатериаловВЭксплуатации 
																		Или СвойстваСчетаКт.ВидСубконто1 = ВидСубконтоПартииМатериаловВЭксплуатации
																		Или СвойстваСчетаКт.ВидСубконто3 = ВидСубконтоПартииМатериаловВЭксплуатации);
			ИспользуемыеВидыСубконтоСчетКт.Вставить("РаботникиОрганизаций", СвойстваСчетаКт.ВидСубконто3 = ВидСубконтоРаботникиОрганизаций
																		Или СвойстваСчетаКт.ВидСубконто2 = ВидСубконтоРаботникиОрганизаций
																		Или СвойстваСчетаКт.ВидСубконто1 = ВидСубконтоРаботникиОрганизаций);
		КонецЕсли;
		
		Если ОтражатьВНалоговомУчете Тогда
			
			ЭтоНеПринимаемыйРасходНУ = НалоговыйУчет.ЭтоНепринимаемыйРасходНУ(СтрокаТаблицы.СубконтоРасходов1,
				СтрокаТаблицы.СубконтоРасходов2, СтрокаТаблицы.СубконтоРасходов3);
				
			Если СвойстваСчетаДт.НалоговыйУчет Тогда
				
				СуммаНУДт = ?(ЭтоНеПринимаемыйРасходНУ, 0, СтрокаТаблицы.СуммаНУ);
				
				Если ПоддержкаПБУ18 Тогда
					Если СтрокаТаблицы.Сумма = 0 Тогда
						СуммаПРДт = 0;
		    			СуммаВРДт = ?(ЭтоНеПринимаемыйРасходНУ, 0, - СтрокаТаблицы.СуммаНУ);
					Иначе
						СуммаПРДт = ?(ЭтоНеПринимаемыйРасходНУ, СтрокаТаблицы.СуммаНУ + СтрокаТаблицы.СуммаПР, СтрокаТаблицы.СуммаПР);
		    			СуммаВРДт = СтрокаТаблицы.СуммаВР;
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
			Если СвойстваСчетаКт.НалоговыйУчет Тогда
				
				СуммаНУКт = СтрокаТаблицы.СуммаНУ;
				
				Если ПоддержкаПБУ18 Тогда
					Если СтрокаТаблицы.Сумма = 0 Тогда
						СуммаПРКт = ?(ЭтоНеПринимаемыйРасходНУ, - СтрокаТаблицы.СуммаНУ, 0);
						СуммаВРКт = ?(ЭтоНеПринимаемыйРасходНУ, 0, - СтрокаТаблицы.СуммаНУ);
					Иначе
						СуммаПРКт = СтрокаТаблицы.СуммаПР;
						СуммаВРКт = СтрокаТаблицы.СуммаВР;
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если СтрокаТаблицы.Количество = 0
		   И СтрокаТаблицы.Сумма = 0
		   И СуммаНУДт = 0
		   И СуммаПРДт = 0
		   И СуммаВРДт = 0
		   И СуммаНУКт = 0
		   И СуммаПРКт = 0
		   И СуммаВРКт = 0
		Тогда
		    Движения.Хозрасчетный.Удалить(Проводка);
			Продолжить;
		КонецЕсли;
		
		Проводка.Период      = Реквизиты.Период;
		Проводка.Организация = Реквизиты.Организация;
		Проводка.Содержание  = "Погашение стоимости " + БухгалтерскийУчетПовтИсп.НазваниеОбъектаПоСчетуУчета(СтрокаТаблицы.СчетПередачи);
		
		Проводка.СчетДт = СтрокаТаблицы.СчетРасходов;
		// Субконто Дт были заполнены выше при получении СвойстваСчетаДт.
		Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = СтрокаТаблицы.ПодразделениеРасходов;
		КонецЕсли;
		Если СвойстваСчетаДт.Количественный Тогда
			Проводка.КоличествоДт = СтрокаТаблицы.Количество;
		КонецЕсли;
		
		Проводка.СчетКт = СтрокаТаблицы.СчетПередачи;
		Если ИспользуемыеВидыСубконтоСчетКт.Номенклатура Тогда
			Проводка.СубконтоКт.Вставить(ВидСубконтоНоменклатура,                  СтрокаТаблицы.Номенклатура);
		КонецЕсли;
		Если ИспользуемыеВидыСубконтоСчетКт.ПартииМатериаловВЭксплуатации Тогда
			Проводка.СубконтоКт.Вставить(ВидСубконтоПартииМатериаловВЭксплуатации, СтрокаТаблицы.ПартияМатериаловВЭксплуатации);
		КонецЕсли;
		Если ИспользуемыеВидыСубконтоСчетКт.РаботникиОрганизаций Тогда
			Проводка.СубконтоКт.Вставить(ВидСубконтоРаботникиОрганизаций,          СтрокаТаблицы.ФизЛицо);
		КонецЕсли;
		Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеКт = СтрокаТаблицы.Подразделение;
		КонецЕсли;
		Если СвойстваСчетаКт.Количественный Тогда
			Проводка.КоличествоКт = СтрокаТаблицы.Количество;
		КонецЕсли;
		
		Проводка.Сумма = СтрокаТаблицы.Сумма;

		Если ОтражатьВНалоговомУчете Тогда
			
			Если СвойстваСчетаДт.НалоговыйУчет Тогда
				
				Проводка.СуммаНУДт = СуммаНУДт;
				
				Если ПоддержкаПБУ18 Тогда
					Проводка.СуммаПРДт = СуммаПРДт;
		    		Проводка.СуммаВРДт = СуммаВРДт;
				КонецЕсли;
				
			КонецЕсли;
			
			Если СвойстваСчетаКт.НалоговыйУчет Тогда
				
				Проводка.СуммаНУКт = СуммаНУКт;
				
				Если ПоддержкаПБУ18 Тогда
					Проводка.СуммаПРКт = СуммаПРКт;
					Проводка.СуммаВРКт = СуммаВРКт;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.Хозрасчетный.Записывать = Истина;
	
КонецПроцедуры

Процедура СформироватьПроводкиПоступлениеСпецодеждыСпецоснасткиВЭксплуатациюМЦ(ТаблицаПогашенияСтоимости, Реквизиты, Движения, Отказ) Экспорт
	
	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	ПоддержкаПБУ18 = УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период);
	
	Для каждого СтрокаТаблицы из ТаблицаПогашенияСтоимости Цикл

		Если СтрокаТаблицы.СуммаМЦ = 0
		   И СтрокаТаблицы.СуммаМЦНУ = 0
		   И СтрокаТаблицы.СуммаПР = 0
		   И СтрокаТаблицы.СуммаВР = 0
		   И СтрокаТаблицы.КоличествоМЦ = 0
		Тогда
			Продолжить;
		КонецЕсли;
	
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Период      = Реквизиты.Период;
		Проводка.Организация = Реквизиты.Организация;
		Проводка.Содержание  = "Передача " + БухгалтерскийУчетПовтИсп.НазваниеОбъектаПоСчетуУчета(СтрокаТаблицы.СчетПередачи) + " в эксплуатацию";
		
		Проводка.СчетДт = СтрокаТаблицы.СчетМЦ;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Номенклатура", СтрокаТаблицы.Номенклатура);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПартииМатериаловВЭксплуатации", СтрокаТаблицы.ПартияМатериаловВЭксплуатации);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "РаботникиОрганизаций", СтрокаТаблицы.ФизЛицо);
		
		СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);
		
		Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = СтрокаТаблицы.Подразделение;
		КонецЕсли;
		
		Если СвойстваСчетаДт.Количественный Тогда
			Проводка.КоличествоДт = СтрокаТаблицы.КоличествоМЦ;
		КонецЕсли;
		
		Проводка.Сумма = СтрокаТаблицы.СуммаМЦ;
		
		Если ОтражатьВНалоговомУчете Тогда
			
			ЭтоНеПринимаемыйРасходНУ = НалоговыйУчет.ЭтоНепринимаемыйРасходНУ(СтрокаТаблицы.СубконтоРасходов1,
				СтрокаТаблицы.СубконтоРасходов2, СтрокаТаблицы.СубконтоРасходов3);
				
			Если СтрокаТаблицы.СпособПогашенияСтоимостиНУ = Перечисления.СпособыПогашенияСтоимости.ПогашатьСтоимостьПриПередачеВЭксплуатацию Тогда	
				
				Если СвойстваСчетаДт.НалоговыйУчет Тогда
					
					Проводка.СуммаНУДт = 0;
					
					Если ПоддержкаПБУ18 Тогда
						Если СтрокаТаблицы.Сумма = 0 Тогда
							Проводка.СуммаПРДт = ?(ЭтоНеПринимаемыйРасходНУ, СтрокаТаблицы.СуммаМЦНУ + СтрокаТаблицы.СуммаПР, СтрокаТаблицы.СуммаПР);
							Проводка.СуммаВРДт = ?(ЭтоНеПринимаемыйРасходНУ, СтрокаТаблицы.СуммаВР, СтрокаТаблицы.СуммаМЦНУ + СтрокаТаблицы.СуммаВР);
						Иначе
							Проводка.СуммаПРДт = 0;
							Проводка.СуммаВРДт = 0;
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;
				
			Иначе
							
				Если СвойстваСчетаДт.НалоговыйУчет Тогда
					
					Проводка.СуммаНУДт = СтрокаТаблицы.СуммаМЦНУ;
					
					Если ПоддержкаПБУ18 Тогда
						Если СтрокаТаблицы.Сумма = 0 Тогда
							Проводка.СуммаПРДт = СтрокаТаблицы.СуммаПР;
							Проводка.СуммаВРДт = СтрокаТаблицы.СуммаВР;
						Иначе
							Проводка.СуммаПРДт = 0;
							Проводка.СуммаВРДт = 0;
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.Хозрасчетный.Записывать = Истина;
	
КонецПроцедуры

Процедура СформироватьПроводкиПоступлениеИнвентаряВЭксплуатациюМЦ(ТаблицаМатериалы, Реквизиты, Движения, Отказ)
	
	Для каждого СтрокаТаблицы из ТаблицаМатериалы Цикл

		Если СтрокаТаблицы.Сумма = 0
		   И СтрокаТаблицы.КоличествоМЦ = 0
		Тогда
			Продолжить;
		КонецЕсли;
	
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Период      = Реквизиты.Период;
		Проводка.Организация = Реквизиты.Организация;
		
		Если СтрокаТаблицы.ИмяСписка = "Спецодежда" Тогда
			Проводка.Содержание  = "Передача спецодежды в эксплуатацию";
		ИначеЕсли СтрокаТаблицы.ИмяСписка = "Спецоснастка" Тогда
			Проводка.Содержание  = "Передача спецоснастки в эксплуатацию";
		Иначе
			Проводка.Содержание  = "Передача инвентаря в эксплуатацию";
		КонецЕсли;
		
		Проводка.СчетДт = СтрокаТаблицы.СчетМЦ;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Номенклатура", СтрокаТаблицы.Номенклатура);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПартииМатериаловВЭксплуатации", СтрокаТаблицы.ПартияМатериаловВЭксплуатации);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "РаботникиОрганизаций", СтрокаТаблицы.ФизЛицо);
		
		СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);
		
		Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = СтрокаТаблицы.Подразделение;
		КонецЕсли;
		
		Если СвойстваСчетаДт.Количественный Тогда
			Проводка.КоличествоДт = СтрокаТаблицы.КоличествоМЦ;
		КонецЕсли;
		
		Проводка.Сумма = СтрокаТаблицы.Сумма;
		
	КонецЦикла;
	
	Движения.Хозрасчетный.Записывать = Истина;
	
КонецПроцедуры

Процедура СформироватьПроводкиСписаниеМатериаловИзЭксплуатации(ТаблицаСписанныеМатериалы, Реквизиты, Движения, Отказ)
	
	СпособОценкиМПЗ = УчетнаяПолитика.СпособОценкиМПЗ(Реквизиты.Организация, Реквизиты.Период);
	ВедетсяУчетПоПартиям = СпособОценкиМПЗ <> Перечисления.СпособыОценки.ПоСредней;
	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	ПоддержкаПБУ18 = УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период);
	
	ЕстьКолонкиВидСубконто = ТаблицаСписанныеМатериалы.Колонки.Найти("ВидСубконтоРасходов1") <> Неопределено
							И ТаблицаСписанныеМатериалы.Колонки.Найти("ВидСубконтоРасходов2") <> Неопределено
							И ТаблицаСписанныеМатериалы.Колонки.Найти("ВидСубконтоРасходов3") <> Неопределено;
	
	Для каждого СтрокаТаблицы из ТаблицаСписанныеМатериалы Цикл

		Если СтрокаТаблицы.Сумма = 0
		   И СтрокаТаблицы.СуммаНУ = 0
		   И СтрокаТаблицы.СуммаПР = 0
		   И СтрокаТаблицы.СуммаВР = 0
		   И СтрокаТаблицы.Количество = 0
		Тогда
			Продолжить;
		КонецЕсли;
	
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Период      = Реквизиты.Период;
		Проводка.Организация = Реквизиты.Организация;
		Проводка.Содержание  = СтрокаТаблицы.Содержание;
		
		Проводка.СчетДт = СтрокаТаблицы.СчетРасходов;
		Для НомерСубконто = 1 По 3 Цикл
			ВидСубконто = ?(ЕстьКолонкиВидСубконто, СтрокаТаблицы["ВидСубконтоРасходов" + НомерСубконто], НомерСубконто);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, ВидСубконто, СтрокаТаблицы["СубконтоРасходов" + НомерСубконто]);
		КонецЦикла;
		Если ВедетсяУчетПоПартиям Тогда
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Партии", Реквизиты.Регистратор);
		КонецЕсли;
		
		СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);

		Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = СтрокаТаблицы.ПодразделениеРасходов;
		КонецЕсли;

		Если СвойстваСчетаДт.Количественный Тогда
			Проводка.КоличествоДт = СтрокаТаблицы.Количество;
		КонецЕсли;

		Проводка.СчетКт = СтрокаТаблицы.СчетПередачи;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Номенклатура", СтрокаТаблицы.Номенклатура);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ПартииМатериаловВЭксплуатации", СтрокаТаблицы.ПартияМатериаловВЭксплуатации);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РаботникиОрганизаций", СтрокаТаблицы.ФизЛицо);
		
		СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);
		
		Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеКт = СтрокаТаблицы.Подразделение;
		КонецЕсли;
		
		Если СвойстваСчетаКт.Количественный Тогда
			Проводка.КоличествоКт = СтрокаТаблицы.Количество;
		КонецЕсли;

		Проводка.Сумма = СтрокаТаблицы.Сумма;

		Если ОтражатьВНалоговомУчете Тогда

			Если СвойстваСчетаДт.НалоговыйУчет Тогда
				Проводка.СуммаНУДт = СтрокаТаблицы.СуммаНУ;
				Если ПоддержкаПБУ18 Тогда
					Проводка.СуммаПРДт = СтрокаТаблицы.СуммаПР;
					Проводка.СуммаВРДт = СтрокаТаблицы.СуммаВР;
				КонецЕсли;
			КонецЕсли;

			Если СвойстваСчетаКт.НалоговыйУчет Тогда
				Проводка.СуммаНУКт = СтрокаТаблицы.СуммаНУ;
				Если ПоддержкаПБУ18 Тогда
					Проводка.СуммаПРКт = СтрокаТаблицы.СуммаПР;
					Проводка.СуммаВРКт = СтрокаТаблицы.СуммаВР;
				КонецЕсли;
			КонецЕсли;

		КонецЕсли;

	КонецЦикла;
	
	Движения.Хозрасчетный.Записывать = Истина;
	
КонецПроцедуры

Процедура СформироватьПроводкиСписаниеМатериаловИзЭксплуатацииМЦ(ТаблицаСписанныеМатериалы, Реквизиты, Движения, Отказ)
	
	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	ПоддержкаПБУ18 = УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период);
	
	Для каждого СтрокаТаблицы из ТаблицаСписанныеМатериалы Цикл

		Если СтрокаТаблицы.СуммаМЦ = 0
		   И СтрокаТаблицы.СуммаМЦНУ = 0
		   И СтрокаТаблицы.СуммаМЦПР = 0
		   И СтрокаТаблицы.СуммаМЦВР = 0
		   И СтрокаТаблицы.КоличествоМЦ = 0
		Тогда
			Продолжить;
		КонецЕсли;
	
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Период      = Реквизиты.Период;
		Проводка.Организация = Реквизиты.Организация;
		Проводка.Содержание  = СтрокаТаблицы.Содержание;

		Проводка.СчетКт = СтрокаТаблицы.СчетМЦ;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Номенклатура", СтрокаТаблицы.Номенклатура);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ПартииМатериаловВЭксплуатации", СтрокаТаблицы.ПартияМатериаловВЭксплуатации);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РаботникиОрганизаций", СтрокаТаблицы.ФизЛицо);
		
		СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);
		
		Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеКт = СтрокаТаблицы.Подразделение;
		КонецЕсли;
		
		Если СвойстваСчетаКт.Количественный Тогда
			Проводка.КоличествоКт = СтрокаТаблицы.КоличествоМЦ;
		КонецЕсли;

		Проводка.Сумма = СтрокаТаблицы.СуммаМЦ;

		Если ОтражатьВНалоговомУчете Тогда

			Если СвойстваСчетаКт.НалоговыйУчет Тогда
				Проводка.СуммаНУКт = СтрокаТаблицы.СуммаМЦНУ;
				Если ПоддержкаПБУ18 Тогда
					Проводка.СуммаПРКт = СтрокаТаблицы.СуммаМЦПР;
					Проводка.СуммаВРКт = СтрокаТаблицы.СуммаМЦВР;
				КонецЕсли;
			КонецЕсли;

		КонецЕсли;

	КонецЦикла;
	
	Движения.Хозрасчетный.Записывать = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ЗАПОЛНЕНИЯ ТАБЛИЧНЫХ ЧАСТЕЙ

// Процедура формирует таблицу остатков спецодежды в незавершенном производстве.
//
Процедура ЗаполнитьСпецодеждуПоОстаткамВЭксплуатации(ДокОбъект, ТаблицаМатериалы, ВключатьЗабалансовые = Истина, СИстекшимСрокомПолезногоИспользования = Ложь) Экспорт

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Дата",          КонецДня(ДокОбъект.Дата) + 1);
	Запрос.УстановитьПараметр("Организация",   ДокОбъект.Организация);
	Запрос.УстановитьПараметр("Подразделение", ДокОбъект.ПодразделениеОрганизации);
	
	// Если передается ДанныеФормыСтруктура
	Если ДокОбъект.Ссылка.Пустая() Тогда
		Запрос.УстановитьПараметр("Период", Новый Граница(ДокОбъект.Дата, ВидГраницы.Исключая));
	Иначе
		Запрос.УстановитьПараметр("Период",
			Новый Граница(Новый МоментВремени(ДокОбъект.Дата, ДокОбъект.Ссылка), ВидГраницы.Исключая));
	КонецЕсли;
		
	Если ВключатьЗабалансовые Тогда
		Запрос.УстановитьПараметр("СчетаУчетаСпецодежды", БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.СпецодеждаВЭксплуатацииВспомогательный));
	Иначе
		Запрос.УстановитьПараметр("СчетаУчетаСпецодежды", БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.СпецодеждаВЭксплуатации));		
	КонецЕсли;
	
	Если СИстекшимСрокомПолезногоИспользования Тогда
		
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет      КАК Счет,
		|	ХозрасчетныйОстатки.Субконто1 КАК Номенклатура,
		|	ХозрасчетныйОстатки.Субконто2 КАК ДокументВыдачи,
		|	ХозрасчетныйОстатки.Субконто3 КАК Сотрудник,
		|	ХозрасчетныйОстатки.СуммаОстаток КАК Сумма,
		|	ХозрасчетныйОстатки.КоличествоОстаток КАК Количество,
		|	ПередачаМатериаловВЭксплуатациюСпецодежда.НазначениеИспользования КАК НазначениеИспользования,
		|	ЕСТЬNULL(ПередачаМатериаловВЭксплуатациюСпецодежда.Ссылка.Дата, ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Документ.ПередачаМатериаловВЭксплуатацию).Дата) КАК ДатаВыдачи
		|ПОМЕСТИТЬ ОстаткиСпецодежды
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (&СчетаУчетаСпецодежды), , 
		|			Организация = &Организация И (Подразделение = &Подразделение ИЛИ Подразделение ЕСТЬ NULL)
		|			И Субконто2 ССЫЛКА Документ.ПередачаМатериаловВЭксплуатацию) КАК ХозрасчетныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВЭксплуатацию.Спецодежда КАК ПередачаМатериаловВЭксплуатациюСпецодежда
		|		ПО ХозрасчетныйОстатки.Субконто1 = ПередачаМатериаловВЭксплуатациюСпецодежда.Номенклатура
		|			И ХозрасчетныйОстатки.Субконто2 = ПередачаМатериаловВЭксплуатациюСпецодежда.Ссылка
		|			И ХозрасчетныйОстатки.Субконто3 = ПередачаМатериаловВЭксплуатациюСпецодежда.ФизЛицо
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2,
		|	ХозрасчетныйОстатки.Субконто3,
		|	ХозрасчетныйОстатки.СуммаОстаток,
		|	ХозрасчетныйОстатки.КоличествоОстаток,
		|	ПартияМатериаловВЭксплуатации.НазначениеИспользования,
		|	ПартияМатериаловВЭксплуатации.Дата
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (&СчетаУчетаСпецодежды), , 
		|			Организация = &Организация И (Подразделение = &Подразделение ИЛИ Подразделение ЕСТЬ NULL)
		|			И Субконто2 ССЫЛКА Документ.ПартияМатериаловВЭксплуатации) КАК ХозрасчетныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПартияМатериаловВЭксплуатации КАК ПартияМатериаловВЭксплуатации
		|		ПО ХозрасчетныйОстатки.Субконто1 = ПартияМатериаловВЭксплуатации.Номенклатура
		|			И ХозрасчетныйОстатки.Субконто2 = ПартияМатериаловВЭксплуатации.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2,
		|	ХозрасчетныйОстатки.Субконто3,
		|	ХозрасчетныйОстатки.СуммаОстаток,
		|	ХозрасчетныйОстатки.КоличествоОстаток,
		|	NULL,
		|	ЕСТЬNULL(ТребованиеНакладнаяМатериалы.Ссылка.Дата, ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Документ.ТребованиеНакладная).Дата)
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (&СчетаУчетаСпецодежды), ,  
		|			Организация = &Организация И (Подразделение = &Подразделение ИЛИ Подразделение ЕСТЬ NULL)
		|			И Субконто2 ССЫЛКА Документ.ТребованиеНакладная) КАК ХозрасчетныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТребованиеНакладная.Материалы КАК ТребованиеНакладнаяМатериалы
		|		ПО ХозрасчетныйОстатки.Субконто1 = ТребованиеНакладнаяМатериалы.Номенклатура
		|			И ХозрасчетныйОстатки.Субконто2 = ТребованиеНакладнаяМатериалы.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиСпецодежды.Счет           КАК Счет,
		|	ОстаткиСпецодежды.Номенклатура   КАК Номенклатура,
		|	ОстаткиСпецодежды.ДокументВыдачи КАК ДокументВыдачи,
		|	ОстаткиСпецодежды.Сотрудник      КАК Сотрудник,
		|	ОстаткиСпецодежды.Сумма          КАК Сумма,
		|	ОстаткиСпецодежды.Количество     КАК Количество,
		|	ОстаткиСпецодежды.ДатаВыдачи     КАК ДатаВыдачи,
		|	ЕСТЬNULL(НазначенияИспользования.СрокПолезногоИспользования, СрокиИспользованияНоменклатуры.СрокИспользования) КАК СрокИспользования,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НазначенияИспользования.СрокПолезногоИспользования, СрокиИспользованияНоменклатуры.СрокИспользования) > 0
		|			ТОГДА ДОБАВИТЬКДАТЕ(ОстаткиСпецодежды.ДатаВыдачи, МЕСЯЦ, ЕСТЬNULL(НазначенияИспользования.СрокПолезногоИспользования, СрокиИспользованияНоменклатуры.СрокИспользования))
		|		ИНАЧЕ ДАТАВРЕМЯ(1,1,1)
		|	КОНЕЦ КАК ДатаСписания,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НазначенияИспользования.СрокПолезногоИспользования, СрокиИспользованияНоменклатуры.СрокИспользования) > 0
		|			ТОГДА РАЗНОСТЬДАТ(&Дата, ДОБАВИТЬКДАТЕ(ОстаткиСпецодежды.ДатаВыдачи, МЕСЯЦ, ЕСТЬNULL(НазначенияИспользования.СрокПолезногоИспользования, СрокиИспользованияНоменклатуры.СрокИспользования)), ДЕНЬ)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОсталосьДней
		|ПОМЕСТИТЬ ОстаткиСпецодеждыПоСрокам
		|ИЗ
		|	ОстаткиСпецодежды КАК ОстаткиСпецодежды
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НазначенияИспользования КАК НазначенияИспользования
		|		ПО ОстаткиСпецодежды.НазначениеИспользования = НазначенияИспользования.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СрокиИспользованияНоменклатуры КАК СрокиИспользованияНоменклатуры
		|		ПО ОстаткиСпецодежды.Номенклатура = СрокиИспользованияНоменклатуры.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиСпецодеждыПоСрокам.Счет           КАК СчетПередачи,
		|	ОстаткиСпецодеждыПоСрокам.Номенклатура   КАК Номенклатура,
		|	ОстаткиСпецодеждыПоСрокам.ДокументВыдачи КАК ПартияМатериаловВЭксплуатации,
		|	ОстаткиСпецодеждыПоСрокам.Сотрудник      КАК Физлицо,
		|	ОстаткиСпецодеждыПоСрокам.Количество	 КАК Количество
		|ПОМЕСТИТЬ ОстаткиМЦ
		|ИЗ
		|	ОстаткиСпецодеждыПоСрокам КАК ОстаткиСпецодеждыПоСрокам
		|ГДЕ
		|	ОстаткиСпецодеждыПоСрокам.ДатаСписания < &Дата
		|	И ОстаткиСпецодеждыПоСрокам.ДатаСписания <> ДАТАВРЕМЯ(1,1,1)";
		
	Иначе
		ТекстЗапроса = " 
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет                КАК СчетПередачи,
		|	ХозрасчетныйОстатки.Субконто1           КАК Номенклатура,
		|	ХозрасчетныйОстатки.Субконто2           КАК ПартияМатериаловВЭксплуатации,
		|	ХозрасчетныйОстатки.Субконто3           КАК Физлицо,
		|	ХозрасчетныйОстатки.КоличествоОстатокДт КАК Количество
		|ПОМЕСТИТЬ ОстаткиМЦ
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|		&Период,
		|		Счет В (&СчетаУчетаСпецодежды),
		|		,
		|		Организация = &Организация
		|			И (Подразделение = &Подразделение ИЛИ Подразделение ЕСТЬ NULL)
		|	) КАК ХозрасчетныйОстатки";
		
	КонецЕсли;
	
	Если ВключатьЗабалансовые Тогда
		Запрос.УстановитьПараметр("БалансовыеСчетаУчетаСпецодежды", БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.СпецодеждаВЭксплуатации));
		Запрос.Текст = ТекстЗапроса + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ХозрасчетныйОстатки.Счет, ОстаткиСпецодежды.СчетПередачи) КАК СчетПередачи,
		|	ОстаткиСпецодежды.Номенклатура КАК Номенклатура,
		|	ОстаткиСпецодежды.ПартияМатериаловВЭксплуатации КАК ПартияМатериаловВЭксплуатации,
		|	ОстаткиСпецодежды.Физлицо      КАК Физлицо,
		|	ОстаткиСпецодежды.Количество   КАК Количество
		|ИЗ
		|	ОстаткиМЦ КАК ОстаткиСпецодежды
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (&БалансовыеСчетаУчетаСпецодежды),	,
		|		Организация = &Организация И (Подразделение = &Подразделение ИЛИ Подразделение ЕСТЬ NULL)) КАК ХозрасчетныйОстатки
		|		ПО ХозрасчетныйОстатки.Субконто1 = ОстаткиСпецодежды.Номенклатура 
		|		И ХозрасчетныйОстатки.Субконто2 = ОстаткиСпецодежды.ПартияМатериаловВЭксплуатации 
		|		И ХозрасчетныйОстатки.Субконто3 = ОстаткиСпецодежды.Физлицо";
	Иначе
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ОстаткиМЦ", "");		
	КонецЕсли;
	
	ОстаткиМатериалов = Запрос.Выполнить().Выгрузить();

	ТаблицаМатериалы.Загрузить(ОстаткиМатериалов);
		
КонецПроцедуры

// Процедура формирует таблицу остатков спецоснастки в незавершенном производстве.
//
Процедура ЗаполнитьСпецоснасткуПоОстаткамВЭксплуатации(ДокОбъект, ТаблицаМатериалы, ВключатьЗабалансовые = Истина, СИстекшимСрокомПолезногоИспользования = Ложь) Экспорт

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Дата",          КонецДня(ДокОбъект.Дата) + 1);
	Запрос.УстановитьПараметр("Организация",   ДокОбъект.Организация);
	Запрос.УстановитьПараметр("Подразделение", ДокОбъект.ПодразделениеОрганизации);
	
	// Если передается ДанныеФормыСтруктура
	Если ДокОбъект.Ссылка.Пустая() Тогда
		Запрос.УстановитьПараметр("Период", Новый Граница(ДокОбъект.Дата, ВидГраницы.Исключая));
	Иначе
		Запрос.УстановитьПараметр("Период",
			Новый Граница(Новый МоментВремени(ДокОбъект.Дата, ДокОбъект.Ссылка), ВидГраницы.Исключая));
	КонецЕсли;
		
	Если ВключатьЗабалансовые Тогда
		Запрос.УстановитьПараметр("СчетаУчетаСпецоснастки", БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.СпецоснасткаВЭксплуатацииВспомогательный));
	Иначе
		Запрос.УстановитьПараметр("СчетаУчетаСпецоснастки", БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.СпецоснасткаВЭксплуатации));		
	КонецЕсли;
	
	Если СИстекшимСрокомПолезногоИспользования Тогда
		
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет      КАК Счет,
		|	ХозрасчетныйОстатки.Субконто1 КАК Номенклатура,
		|	ХозрасчетныйОстатки.Субконто2 КАК ДокументВыдачи,
		|	ХозрасчетныйОстатки.СуммаОстаток КАК Сумма,
		|	ХозрасчетныйОстатки.КоличествоОстаток КАК Количество,
		|	ПередачаМатериаловВЭксплуатациюСпецоснастка.НазначениеИспользования КАК НазначениеИспользования,
		|	ЕСТЬNULL(ПередачаМатериаловВЭксплуатациюСпецоснастка.Ссылка.Дата, ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Документ.ПередачаМатериаловВЭксплуатацию).Дата) КАК ДатаВыдачи
		|ПОМЕСТИТЬ ОстаткиСпецоснастки
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (&СчетаУчетаСпецоснастки), , 
		|			Организация = &Организация И (Подразделение = &Подразделение ИЛИ Подразделение ЕСТЬ NULL)
		|			И Субконто2 ССЫЛКА Документ.ПередачаМатериаловВЭксплуатацию) КАК ХозрасчетныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВЭксплуатацию.Спецоснастка КАК ПередачаМатериаловВЭксплуатациюСпецоснастка
		|		ПО ХозрасчетныйОстатки.Субконто1 = ПередачаМатериаловВЭксплуатациюСпецоснастка.Номенклатура
		|			И ХозрасчетныйОстатки.Субконто2 = ПередачаМатериаловВЭксплуатациюСпецоснастка.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2,
		|	ХозрасчетныйОстатки.СуммаОстаток,
		|	ХозрасчетныйОстатки.КоличествоОстаток,
		|	ПартияМатериаловВЭксплуатации.НазначениеИспользования,
		|	ПартияМатериаловВЭксплуатации.Дата
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (&СчетаУчетаСпецоснастки), , 
		|			Организация = &Организация И (Подразделение = &Подразделение ИЛИ Подразделение ЕСТЬ NULL)
		|			И Субконто2 ССЫЛКА Документ.ПартияМатериаловВЭксплуатации) КАК ХозрасчетныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПартияМатериаловВЭксплуатации КАК ПартияМатериаловВЭксплуатации
		|		ПО ХозрасчетныйОстатки.Субконто1 = ПартияМатериаловВЭксплуатации.Номенклатура
		|			И ХозрасчетныйОстатки.Субконто2 = ПартияМатериаловВЭксплуатации.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2,
		|	ХозрасчетныйОстатки.СуммаОстаток,
		|	ХозрасчетныйОстатки.КоличествоОстаток,
		|	NULL,
		|	ЕСТЬNULL(ТребованиеНакладнаяМатериалы.Ссылка.Дата, ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Документ.ТребованиеНакладная).Дата)
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (&СчетаУчетаСпецоснастки), ,  
		|			Организация = &Организация И (Подразделение = &Подразделение ИЛИ Подразделение ЕСТЬ NULL)
		|			И Субконто2 ССЫЛКА Документ.ТребованиеНакладная) КАК ХозрасчетныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТребованиеНакладная.Материалы КАК ТребованиеНакладнаяМатериалы
		|		ПО ХозрасчетныйОстатки.Субконто1 = ТребованиеНакладнаяМатериалы.Номенклатура
		|			И ХозрасчетныйОстатки.Субконто2 = ТребованиеНакладнаяМатериалы.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиСпецоснастки.Счет           КАК Счет,
		|	ОстаткиСпецоснастки.Номенклатура   КАК Номенклатура,
		|	ОстаткиСпецоснастки.ДокументВыдачи КАК ДокументВыдачи,
		|	ОстаткиСпецоснастки.Сумма          КАК Сумма,
		|	ОстаткиСпецоснастки.Количество     КАК Количество,
		|	ОстаткиСпецоснастки.ДатаВыдачи     КАК ДатаВыдачи,
		|	ЕСТЬNULL(НазначенияИспользования.СрокПолезногоИспользования, СрокиИспользованияНоменклатуры.СрокИспользования) КАК СрокИспользования,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НазначенияИспользования.СрокПолезногоИспользования, СрокиИспользованияНоменклатуры.СрокИспользования) > 0
		|			ТОГДА ДОБАВИТЬКДАТЕ(ОстаткиСпецоснастки.ДатаВыдачи, МЕСЯЦ, ЕСТЬNULL(НазначенияИспользования.СрокПолезногоИспользования, СрокиИспользованияНоменклатуры.СрокИспользования))
		|		ИНАЧЕ ДАТАВРЕМЯ(1,1,1)
		|	КОНЕЦ КАК ДатаСписания,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НазначенияИспользования.СрокПолезногоИспользования, СрокиИспользованияНоменклатуры.СрокИспользования) > 0
		|			ТОГДА РАЗНОСТЬДАТ(&Дата, ДОБАВИТЬКДАТЕ(ОстаткиСпецоснастки.ДатаВыдачи, МЕСЯЦ, ЕСТЬNULL(НазначенияИспользования.СрокПолезногоИспользования, СрокиИспользованияНоменклатуры.СрокИспользования)), ДЕНЬ)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОсталосьДней
		|ПОМЕСТИТЬ ОстаткиСпецоснасткиПоСрокам
		|ИЗ
		|	ОстаткиСпецоснастки КАК ОстаткиСпецоснастки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НазначенияИспользования КАК НазначенияИспользования
		|		ПО ОстаткиСпецоснастки.НазначениеИспользования = НазначенияИспользования.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СрокиИспользованияНоменклатуры КАК СрокиИспользованияНоменклатуры
		|		ПО ОстаткиСпецоснастки.Номенклатура = СрокиИспользованияНоменклатуры.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиСпецоснасткиПоСрокам.Счет           КАК СчетПередачи,
		|	ОстаткиСпецоснасткиПоСрокам.Номенклатура   КАК Номенклатура,
		|	ОстаткиСпецоснасткиПоСрокам.ДокументВыдачи КАК ПартияМатериаловВЭксплуатации,
		|	ОстаткиСпецоснасткиПоСрокам.Количество	 КАК Количество
		|ПОМЕСТИТЬ ОстаткиМЦ
		|ИЗ
		|	ОстаткиСпецоснасткиПоСрокам КАК ОстаткиСпецоснасткиПоСрокам
		|ГДЕ
		|	ОстаткиСпецоснасткиПоСрокам.ДатаСписания < &Дата
		|	И ОстаткиСпецоснасткиПоСрокам.ДатаСписания <> ДАТАВРЕМЯ(1,1,1)";
		
	Иначе
		ТекстЗапроса = " 
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет                КАК СчетПередачи,
		|	ХозрасчетныйОстатки.Субконто1           КАК Номенклатура,
		|	ХозрасчетныйОстатки.Субконто2           КАК ПартияМатериаловВЭксплуатации,
		|	ХозрасчетныйОстатки.КоличествоОстатокДт КАК Количество
		|ПОМЕСТИТЬ ОстаткиМЦ
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|		&Период,
		|		Счет В (&СчетаУчетаСпецоснастки),
		|		,
		|		Организация = &Организация
		|			И (Подразделение = &Подразделение ИЛИ Подразделение ЕСТЬ NULL)
		|	) КАК ХозрасчетныйОстатки";
		
	КонецЕсли;
	
	Если ВключатьЗабалансовые Тогда
		Запрос.УстановитьПараметр("БалансовыеСчетаУчетаСпецоснастки", БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.СпецоснасткаВЭксплуатации));
		Запрос.Текст = ТекстЗапроса + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ХозрасчетныйОстатки.Счет, ОстаткиСпецоснастки.СчетПередачи) КАК СчетПередачи,
		|	ОстаткиСпецоснастки.Номенклатура КАК Номенклатура,
		|	ОстаткиСпецоснастки.ПартияМатериаловВЭксплуатации КАК ПартияМатериаловВЭксплуатации,
		|	ОстаткиСпецоснастки.Количество   КАК Количество
		|ИЗ
		|	ОстаткиМЦ КАК ОстаткиСпецоснастки
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (&БалансовыеСчетаУчетаСпецоснастки),	,
		|		Организация = &Организация И (Подразделение = &Подразделение ИЛИ Подразделение ЕСТЬ NULL)) КАК ХозрасчетныйОстатки
		|		ПО ХозрасчетныйОстатки.Субконто1 = ОстаткиСпецоснастки.Номенклатура 
		|		И ХозрасчетныйОстатки.Субконто2 = ОстаткиСпецоснастки.ПартияМатериаловВЭксплуатации";
	Иначе
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ОстаткиМЦ", "");		
	КонецЕсли;
	
	ОстаткиМатериалов = Запрос.Выполнить().Выгрузить();

	ТаблицаМатериалы.Загрузить(ОстаткиМатериалов);

КонецПроцедуры

// Процедура формирует таблицу остатков инвентаря и хозяйственных
// принадлежностей на забалансовом счете.
//
Процедура ЗаполнитьИнвентарьИХозяйственныеПринадлежностиПоОстаткамВЭксплуатации(ДокОбъект, ТаблицаМатериалы, СИстекшимСрокомПолезногоИспользования = Ложь) Экспорт

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Дата",          КонецДня(ДокОбъект.Дата) + 1);
	Запрос.УстановитьПараметр("Организация",   ДокОбъект.Организация);
	Запрос.УстановитьПараметр("Подразделение", ДокОбъект.ПодразделениеОрганизации);
	
	// Если передается ДанныеФормыСтруктура
	Если ДокОбъект.Ссылка.Пустая() Тогда
		Запрос.УстановитьПараметр("Период", Новый Граница(ДокОбъект.Дата, ВидГраницы.Исключая));
	Иначе
		Запрос.УстановитьПараметр("Период",
			Новый Граница(Новый МоментВремени(ДокОбъект.Дата, ДокОбъект.Ссылка), ВидГраницы.Исключая));
	КонецЕсли;
	ВедетсяУчетПрослеживаемыхТоваров  = ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров")
		И ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(ДокОбъект.Дата);
		
	Запрос.УстановитьПараметр("СчетаУчетаИнвентарь", БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ИнвентарьИХозяйственныеПринадлежностиВЭксплуатации));
	Запрос.УстановитьПараметр("ВедетсяУчетПрослеживаемыхТоваров", ВедетсяУчетПрослеживаемыхТоваров);
	
	Если СИстекшимСрокомПолезногоИспользования Тогда
		
		ТекстЗапроса = "ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет КАК Счет,
		|	ХозрасчетныйОстатки.Субконто1 КАК Номенклатура,
		|	ХозрасчетныйОстатки.Субконто2 КАК ДокументВыдачи,
		|	ХозрасчетныйОстатки.Субконто3 КАК Сотрудник,
		|	ХозрасчетныйОстатки.СуммаОстаток КАК Сумма,
		|	ХозрасчетныйОстатки.КоличествоОстаток КАК Количество,
		|	NULL КАК НазначениеИспользования,
		|	ЕСТЬNULL(ПередачаМатериаловВЭксплуатациюИнвентарь.Ссылка.Дата, ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Документ.ПередачаМатериаловВЭксплуатацию).Дата) КАК ДатаВыдачи
		|ПОМЕСТИТЬ ОстаткиИнвентарь
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&Период,
		|			Счет В (&СчетаУчетаИнвентарь),
		|			,
		|			Организация = &Организация
		|				И (Подразделение = &Подразделение
		|					ИЛИ Подразделение ЕСТЬ NULL)
		|				И Субконто2 ССЫЛКА Документ.ПередачаМатериаловВЭксплуатацию) КАК ХозрасчетныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВЭксплуатацию.ИнвентарьИХозяйственныеПринадлежности КАК ПередачаМатериаловВЭксплуатациюИнвентарь
		|		ПО ХозрасчетныйОстатки.Субконто1 = ПередачаМатериаловВЭксплуатациюИнвентарь.Номенклатура
		|			И ХозрасчетныйОстатки.Субконто2 = ПередачаМатериаловВЭксплуатациюИнвентарь.Ссылка
		|			И ХозрасчетныйОстатки.Субконто3 = ПередачаМатериаловВЭксплуатациюИнвентарь.ФизЛицо
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2,
		|	ХозрасчетныйОстатки.Субконто3,
		|	ХозрасчетныйОстатки.СуммаОстаток,
		|	ХозрасчетныйОстатки.КоличествоОстаток,
		|	ПартияМатериаловВЭксплуатации.НазначениеИспользования,
		|	ПартияМатериаловВЭксплуатации.Дата
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&Период,
		|			Счет В (&СчетаУчетаИнвентарь),
		|			,
		|			Организация = &Организация
		|				И (Подразделение = &Подразделение
		|					ИЛИ Подразделение ЕСТЬ NULL)
		|				И Субконто2 ССЫЛКА Документ.ПартияМатериаловВЭксплуатации) КАК ХозрасчетныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПартияМатериаловВЭксплуатации КАК ПартияМатериаловВЭксплуатации
		|		ПО ХозрасчетныйОстатки.Субконто1 = ПартияМатериаловВЭксплуатации.Номенклатура
		|			И ХозрасчетныйОстатки.Субконто2 = ПартияМатериаловВЭксплуатации.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2,
		|	ХозрасчетныйОстатки.Субконто3,
		|	ХозрасчетныйОстатки.СуммаОстаток,
		|	ХозрасчетныйОстатки.КоличествоОстаток,
		|	NULL,
		|	ЕСТЬNULL(ТребованиеНакладная.Дата, ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Документ.ТребованиеНакладная).Дата)
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&Период,
		|			Счет В (&СчетаУчетаИнвентарь),
		|			,
		|			Организация = &Организация
		|				И (Подразделение = &Подразделение
		|					ИЛИ Подразделение ЕСТЬ NULL)
		|				И Субконто2 ССЫЛКА Документ.ТребованиеНакладная) КАК ХозрасчетныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТребованиеНакладная КАК ТребованиеНакладная
		|		ПО ХозрасчетныйОстатки.Субконто2 = ТребованиеНакладная.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиИнвентарь.Счет КАК Счет,
		|	ОстаткиИнвентарь.Номенклатура КАК Номенклатура,
		|	ОстаткиИнвентарь.ДокументВыдачи КАК ДокументВыдачи,
		|	ОстаткиИнвентарь.Сотрудник КАК Сотрудник,
		|	ОстаткиИнвентарь.Сумма КАК Сумма,
		|	ОстаткиИнвентарь.Количество КАК Количество,
		|	ОстаткиИнвентарь.ДатаВыдачи КАК ДатаВыдачи,
		|	ЕСТЬNULL(НазначенияИспользования.СрокПолезногоИспользования, СрокиИспользованияНоменклатуры.СрокИспользования) КАК СрокИспользования,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НазначенияИспользования.СрокПолезногоИспользования, СрокиИспользованияНоменклатуры.СрокИспользования) > 0
		|			ТОГДА ДОБАВИТЬКДАТЕ(ОстаткиИнвентарь.ДатаВыдачи, МЕСЯЦ, ЕСТЬNULL(НазначенияИспользования.СрокПолезногоИспользования, СрокиИспользованияНоменклатуры.СрокИспользования))
		|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|	КОНЕЦ КАК ДатаСписания,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НазначенияИспользования.СрокПолезногоИспользования, СрокиИспользованияНоменклатуры.СрокИспользования) > 0
		|			ТОГДА РАЗНОСТЬДАТ(&Дата, ДОБАВИТЬКДАТЕ(ОстаткиИнвентарь.ДатаВыдачи, МЕСЯЦ, ЕСТЬNULL(НазначенияИспользования.СрокПолезногоИспользования, СрокиИспользованияНоменклатуры.СрокИспользования)), ДЕНЬ)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОсталосьДней,
		|	ВЫБОР
		|		КОГДА &ВедетсяУчетПрослеживаемыхТоваров
		|			ТОГДА СправочникНоменклатура.СтранаПроисхождения
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
		|	КОНЕЦ КАК СтранаПроисхождения,
		|	ВЫБОР
		|		КОГДА &ВедетсяУчетПрослеживаемыхТоваров
		|			ТОГДА СправочникНоменклатура.ПрослеживаемыйТовар Или СправочникНоменклатура.ПрослеживаемыйКомплект
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПрослеживаемыйТовар,
		|	ВЫБОР
		|		КОГДА &ВедетсяУчетПрослеживаемыхТоваров
		|			ТОГДА СправочникНоменклатура.ПрослеживаемыйКомплект
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПрослеживаемыйКомплект
		|ПОМЕСТИТЬ ОстаткиИнвентарьПоСрокам
		|ИЗ
		|	ОстаткиИнвентарь КАК ОстаткиИнвентарь
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НазначенияИспользования КАК НазначенияИспользования
		|		ПО ОстаткиИнвентарь.НазначениеИспользования = НазначенияИспользования.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СрокиИспользованияНоменклатуры КАК СрокиИспользованияНоменклатуры
		|		ПО ОстаткиИнвентарь.Номенклатура = СрокиИспользованияНоменклатуры.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО ОстаткиИнвентарь.Номенклатура = СправочникНоменклатура.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиИнвентарьПоСрокам.Счет КАК СчетПередачи,
		|	ОстаткиИнвентарьПоСрокам.Номенклатура КАК Номенклатура,
		|	ОстаткиИнвентарьПоСрокам.ДокументВыдачи КАК ПартияМатериаловВЭксплуатации,
		|	ОстаткиИнвентарьПоСрокам.Сотрудник КАК Физлицо,
		|	ОстаткиИнвентарьПоСрокам.Количество КАК Количество,
		|	ОстаткиИнвентарьПоСрокам.СтранаПроисхождения КАК СтранаПроисхождения,
		|	ОстаткиИнвентарьПоСрокам.ПрослеживаемыйТовар КАК ПрослеживаемыйТовар,
		|	ОстаткиИнвентарьПоСрокам.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект
		|ИЗ
		|	ОстаткиИнвентарьПоСрокам КАК ОстаткиИнвентарьПоСрокам
		|ГДЕ
		|	ОстаткиИнвентарьПоСрокам.ДатаСписания < &Дата
		|	И ОстаткиИнвентарьПоСрокам.ДатаСписания <> ДАТАВРЕМЯ(1, 1, 1)";
		
	Иначе
		ТекстЗапроса = "ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет КАК СчетПередачи,
		|	ХозрасчетныйОстатки.Субконто1 КАК Номенклатура,
		|	ХозрасчетныйОстатки.Субконто2 КАК ПартияМатериаловВЭксплуатации,
		|	ХозрасчетныйОстатки.Субконто3 КАК Физлицо,
		|	ХозрасчетныйОстатки.КоличествоОстатокДт КАК Количество,
		|	ВЫБОР
		|		КОГДА &ВедетсяУчетПрослеживаемыхТоваров
		|			ТОГДА Номенклатура.СтранаПроисхождения
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
		|	КОНЕЦ КАК СтранаПроисхождения,
		|	ВЫБОР
		|		КОГДА &ВедетсяУчетПрослеживаемыхТоваров
		|			ТОГДА Номенклатура.ПрослеживаемыйТовар Или Номенклатура.ПрослеживаемыйКомплект
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПрослеживаемыйТовар,
		|	ВЫБОР
		|		КОГДА &ВедетсяУчетПрослеживаемыхТоваров
		|			ТОГДА Номенклатура.ПрослеживаемыйКомплект
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПрослеживаемыйКомплект
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|			&Период,
		|			Счет В (&СчетаУчетаИнвентарь),
		|			,
		|			Организация = &Организация
		|				И (Подразделение = &Подразделение
		|					ИЛИ Подразделение ЕСТЬ NULL)) КАК ХозрасчетныйОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|		ПО ХозрасчетныйОстатки.Субконто1 = Номенклатура.Ссылка";
		
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	ОстаткиМатериалов = Запрос.Выполнить().Выгрузить();
	Если ВедетсяУчетПрослеживаемыхТоваров Тогда
		МассивНоменклатуры = ОбщегоНазначения.ВыгрузитьКолонку(ОстаткиМатериалов, "Номенклатура", Истина);
		РеквизитыНоменклатурыИзИстории = Справочники.Номенклатура.ПризнакПрослеживаемостиНаДатуИзИстории(
		МассивНоменклатуры, ДокОбъект.Дата);
		Для Каждого Строка Из ОстаткиМатериалов Цикл
			РеквизитыТекущейНоменклатуры = РеквизитыНоменклатурыИзИстории[Строка.Номенклатура];
			Если РеквизитыТекущейНоменклатуры <> Неопределено Тогда
				Строка.ПрослеживаемыйТовар = РеквизитыТекущейНоменклатуры.ПрослеживаемыйТовар
				Или РеквизитыТекущейНоменклатуры.ПрослеживаемыйКомплект;
				Строка.ПрослеживаемыйКомплект = РеквизитыТекущейНоменклатуры.ПрослеживаемыйКомплект;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ТаблицаМатериалы.Загрузить(ОстаткиМатериалов);

КонецПроцедуры

#Область ПеремещениеМатериаловСотрудников

Процедура СформироватьДвиженияПеремещениеМатериаловСотрудников(ТаблицаСписанныеССотрудникаМатериалы, ТаблицаРеквизиты, Движения, Отказ) Экспорт

	Если Не ЗначениеЗаполнено(ТаблицаСписанныеССотрудникаМатериалы) Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыПеремещениеМатериаловСотрудников(ТаблицаСписанныеССотрудникаМатериалы, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ

	СформироватьПроводкиПеремещениеМатериаловСотрудников(Параметры.ТаблицаСписанныеССотрудникаМатериалы,
		Реквизиты, Движения, Отказ);

КонецПроцедуры

Функция ПодготовитьПараметрыПеремещениеМатериаловСотрудников(ТаблицаСписанныеССотрудникаМатериалы,  ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ТаблицаМатериалы
	
	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"                   // <Число> - номер строки в списке
	+ "Номенклатура,"                  // <СправочникСсылка.Номенклатура> - номенклатура материалов в эксплуатации
	+ "Количество,"                    // <Число,15,3> - количество материалов для учета на забалансовом счете (МЦ)
	+ "Содержание,"                    // <Строка> - содержание проводки
	+ "Сотрудник,"                     // <СправочникСсылка.ФизическиеЛица> - сотрудник, с которого списываются материалы
	+ "Подразделение,"                 // <Ссылка на справочник подразделений> - производственное подразделение организации
	+ "Сумма,"                         // <Число,15,2> - себестоимость материалов, определенная по данным остатков
	+ "СчетУчета,"                     // <ПланСчетовСсылка.Хозрасчетный> - забалансовый счет учета материалов в эксплуатации (МЦ)
	+ "ПартияМатериаловВЭксплуатации"; // <Характеристика.ВидыСубконтоХозрасчетные> - партия материалов в эксплуатации
	
	Параметры.Вставить("ТаблицаСписанныеССотрудникаМатериалы", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаСписанныеССотрудникаМатериалы, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Период,"                        // <Дата> - период движений - дата документа
	+ "Организация,"                   // <СправочникСсылка.Организации>
	+ "Подразделение,"                 // <Ссылка на справочник подразделений> - производственное подразделение организации
	+ "Сотрудник,"                     // <СправочникСсылка.ФизическиеЛица> - материально-ответственное лицо
	+ "СотрудникПолучатель,"           // <СправочникСсылка.ФизическиеЛица> - сотрудник, с которого списываются материалы
	+ "ПодразделениеПолучатель,"       // <Ссылка на справочник подразделений> - производственное подразделение организации
	+ "Регистратор";                   // <ДокументСсылка.*> - документ-регистратор движений
	
	Параметры.Вставить("Реквизиты", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

Процедура СформироватьПроводкиПеремещениеМатериаловСотрудников(ТаблицаСписанныеССотрудникаМатериалы, Реквизиты, Движения, Отказ)
	
	Для каждого СтрокаТаблицы из ТаблицаСписанныеССотрудникаМатериалы Цикл

		Если СтрокаТаблицы.Сумма = 0
				И СтрокаТаблицы.Количество = 0 Тогда
			Продолжить;
		КонецЕсли;
	
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Период      = Реквизиты.Период;
		Проводка.Организация = Реквизиты.Организация;
		
		Проводка.Содержание  = СтрокаТаблицы.Содержание;
		
		Проводка.СчетДт = СтрокаТаблицы.СчетУчета;
		
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Номенклатура",
			СтрокаТаблицы.Номенклатура);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПартииМатериаловВЭксплуатации",
			СтрокаТаблицы.ПартияМатериаловВЭксплуатации);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "РаботникиОрганизаций",
			Реквизиты.СотрудникПолучатель);
		
		СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);
		
		Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = Реквизиты.ПодразделениеПолучатель;
		КонецЕсли;
		
		Если СвойстваСчетаДт.Количественный Тогда
			Проводка.КоличествоДт = СтрокаТаблицы.Количество;
		КонецЕсли;
		
		Проводка.СчетКт = СтрокаТаблицы.СчетУчета;
		
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Номенклатура",
			СтрокаТаблицы.Номенклатура);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ПартииМатериаловВЭксплуатации",
			СтрокаТаблицы.ПартияМатериаловВЭксплуатации);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РаботникиОрганизаций",
			СтрокаТаблицы.Сотрудник);
		
		СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);
		
		Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеКт = СтрокаТаблицы.Подразделение;
		КонецЕсли;
		
		Если СвойстваСчетаКт.Количественный Тогда
			Проводка.КоличествоКт = СтрокаТаблицы.Количество;
		КонецЕсли;
		
		Проводка.Сумма = СтрокаТаблицы.Сумма;
		
	КонецЦикла;
	
	Движения.Хозрасчетный.Записывать = Истина;
	
КонецПроцедуры

#КонецОбласти
