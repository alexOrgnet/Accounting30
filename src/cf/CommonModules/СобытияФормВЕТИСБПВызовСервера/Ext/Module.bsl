#Область РаботаСФормамиВЕТИС

//Добавляеи реквизит на форому
//Параметры:
//			- Форма Тип("Форма")
//			- ОписаниеРеквизита Тип("Структура")
//
//Возвращаемое значение: нет
//
Процедура ДобавитьРеквизитФормы(Форма,ОписаниеРеквизита) Экспорт
	
	РеквизитФормы 			= Новый РеквизитФормы(ОписаниеРеквизита.ИмяРеквизита
												,ОписаниеРеквизита.ТипРеквизита
												,""
												,ОписаниеРеквизита.ЗаголовокРеквизита);
	ДобавляемыеРеквизиты 	= Новый Массив;									
	ДобавляемыеРеквизиты.Добавить(РеквизитФормы);
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
КонецПроцедуры

//Добавляет элемент управления на форму
//Параметры: 
//			-Форма Тип("Форма")
//			- ОписаниеЭлемента Тип("Структура")
//			- Действие Тип("Структура")
//
//Возвращаемое значение: нет
//
Процедура ДобавитьЭлементУправления(Форма, ОписаниеЭлемента, Действие) Экспорт
	
	Группа 							= Форма.Элементы.Найти(ОписаниеЭлемента.РодительскаяГруппа);
	Если Не Группа 					= Неопределено Тогда
		Размещение 					= Группа;
	Иначе
		Размещение 					= Форма;
	КонецЕсли;
	Флажок 							= Форма.Элементы.Добавить(ОписаниеЭлемента.ИмяЭлемента, Тип("ПолеФормы"), Размещение);
	Флажок.Заголовок 				= ОписаниеЭлемента.ЗаголовокЭлемента;
	Флажок.Вид 						= ОписаниеЭлемента.ВидЭлемента;
	Флажок.ПутьКДанным 				= ОписаниеЭлемента.ПутьКданным;
	Флажок.ПоложениеЗаголовка 		= ОписаниеЭлемента.ПоложениеЗаголовка;
	Если ОписаниеЭлемента.РасширеннаяПодсказка Тогда
		Флажок.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
		Флажок.РасширеннаяПодсказка.Заголовок = ОписаниеЭлемента.ТекстПодсказки;
	КонецЕсли;
	Флажок.УстановитьДействие(Действие.ИмяСобытия, Действие.ИмяОбработчика);
	
КонецПроцедуры

//Устанавливает видимость элемента Формы 
//Параметры:
//			-Форма Тип("Форма")
//			-ИмяЭлемента Тип("Строка")
//			-Видимость Тип("Булево")
//
//Возвращаемое значение: нет
//
Процедура УстановитьВидимостьДополнительногоЭлемента(Форма, ИмяЭлемента, Видимость = Ложь) Экспорт
	
	Если ИмяЭлемента = "ИспользоватьРаздельноеСписаниеМатериаловИВыпускПродукцииВЕТИС" Тогда
		Форма.Элементы[ИмяЭлемента].Видимость = ?(ПолучитьФункциональнуюОпцию("ВестиУчетПодконтрольныхТоваровВЕТИС"), Истина, Ложь);
	Иначе
		Форма.Элементы[ИмяЭлемента].Видимость = Видимость;
	КонецЕсли;
	
КонецПроцедуры

//Обновляет значение реквизита формы
//Параметры:
//			-Форма Тип("Форма")
//			-ИмяРеквизита Тип("Строка")
//
//Возвращаемое значение: нет
//
Процедура ОбновитьЗначениеРеквизитаФормы(Форма, ИмяРеквизита) Экспорт
	
	Форма[ИмяРеквизита] = Константы[ИмяРеквизита].Получить();
	
КонецПроцедуры

//Устанавливает видимость/доступность/значения  элементовФормы связанных  с производственной транзакцией
//Параметры: Форма Тип("Форма")
//
//Возвращаемое значение: нет
//
Процедура НастроитьЭлементыПроизводственнойТранзакцииНаФорме(Форма) Экспорт
	
	Если ТипЗнч(Форма.Объект.ДокументОснование) = Тип("ДокументСсылка.ТребованиеНакладная") 	Тогда 
		Форма.Элементы.ЗавершениеПроизводственнойТранзакции.Видимость 							= Ложь;
	ИначеЕсли ТипЗнч(Форма.Объект.ДокументОснование) = Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену") Тогда
		Если Форма.Объект.ДокументОснование.ВидОперации = Перечисления.ВидыОперацийОтчетПроизводстваЗаСмену.ОтчетПроизводстваЗаСмену Тогда
			ПроизводственнаяОперация =  ИнтеграцияВЕТИСБПВызовСервера.НайтиСсылкуПроизводственнойОперациВЕТИС(Форма.Объект.ДокументОснование);
			ПроизводственнаяТранзакция = ПроизводственнаяОперация.ИдентификаторПроизводственнойТранзакции;
			Если ЗначениеЗаполнено(ПроизводственнаяТранзакция) Тогда
				Форма.Элементы.ЗавершениеПроизводственнойТранзакции.Видимость 					= Истина;
				Если Форма.Параметры.Ключ.Пустая() Тогда
					Форма.Объект.ИдентификаторПроизводственнойТранзакции 						= ПроизводственнаяТранзакция;
					Форма.Объект.ЗавершениеПроизводственнойТранзакции							= Истина;
				КонецЕсли;
			Иначе
				Форма.Элементы.ЗавершениеПроизводственнойТранзакции.Видимость 					= Ложь;
			КонецЕсли;
		Иначе
			Форма.Элементы.ЗавершениеПроизводственнойТранзакции.Видимость 						= Истина;
		КонецЕсли;
	КонецЕсли;
		
	Форма.Элементы.ИдентификаторПроизводственнойТранзакции.ИсторияВыбораПриВВоде				= ИсторияВыбораПриВводе.НеИспользовать;
	
	УстановитьУсловноеОформлениеПоляИдентификаторПроизводственнойТранзакции(Форма);
	
КонецПроцедуры

//Устанавливает условное оформление поля идентификатор производственной транзакции
//Параметры: Форма Тип("Форма")
//
//Возвращаемое значение: нет
//
Процедура УстановитьУсловноеОформлениеПоляИдентификаторПроизводственнойТранзакции(Форма) Экспорт
		
	ЭлементУО = Форма.УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ИдентификаторПроизводственнойТранзакции");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.ИдентификаторПроизводственнойТранзакции", ВидСравненияКомпоновкиДанных.НеЗаполнено);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
	Если ИнтеграцияВЕТИСБПВызовСервера.ЭтоОтчетПроизводстваЗаСмену(Форма.Объект.ДокументОснование) Тогда
		ГруппаЭлементовОтбора = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(ЭлементУО.Отбор,
									"Группа ИЛИ", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаЭлементовОтбора, "Объект.Товары.КоличествоСтрок", ВидСравненияКомпоновкиДанных.Равно, 0);
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаЭлементовОтбора, "Объект.Сырье.КоличествоСтрок", ВидСравненияКомпоновкиДанных.Равно, 0);
	КонецЕсли;
	
	ЭлементУО = Форма.УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ИдентификаторПроизводственнойТранзакции");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"Объект.ИдентификаторПроизводственнойТранзакции", ВидСравненияКомпоновкиДанных.Заполнено);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);

КонецПроцедуры

#КонецОбласти