////////////////////////////////////////////////////////////////////////////////
// Работа с номенклатурой.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Выполняет поиск номенклатуры по штрих-коду в регистре сведений "Штрихкоды" и в сервисе 1С:Номенклатура.
//
// Параметры:
//  Оповещение  - ОписаниеОповещения - Описание процедуры, принимающей результат поиска.
//
Процедура НайтиПоШтрихкоду(Оповещение) Экспорт
	
	Перем Штрихкод, ТекстВопроса;
	
	Оповещение.ДополнительныеПараметры.Свойство("Штрихкод", Штрихкод);
	Оповещение.ДополнительныеПараметры.Свойство("ТекстВопроса", ТекстВопроса);
	
	Контекст = Новый Структура;
	Контекст.Вставить("ОповещениеОРезультате", Оповещение);
	Контекст.Вставить("ТекстВопроса", ТекстВопроса);
	
	Если ЗначениеЗаполнено(Штрихкод) Тогда
		ДанныеШтрихкода = ШтрихкодированиеНоменклатурыБПКлиент.СтруктураДанныхШтрихкода(Штрихкод, 0);
		ПоискНоменклатурыПоШтрихкодуПослеВводаСтроки(ДанныеШтрихкода, Контекст);
	Иначе
		ОповещениеПослеВводаСтроки = Новый ОписаниеОповещения("ПоискНоменклатурыПоШтрихкодуПослеВводаСтроки",
			ЭтотОбъект, Контекст);
		ШтрихкодированиеНоменклатурыБПКлиент.ПоказатьВводШтрихкода(ОповещениеПослеВводаСтроки);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоискНоменклатурыПоШтрихкодуПослеВводаСтроки(ДанныеШтрихкода, Контекст) Экспорт
	
	Штрихкод = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеШтрихкода, "Штрихкод");
	
	Если Штрихкод = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Контекст.Вставить("Штрихкод", Штрихкод);
	
	НоменклатураПоШтрихкоду = РаботаСНоменклатуройВызовСервераБП.НоменклатураПоШтрихкоду(Штрихкод);
	Контекст.Вставить("Номенклатура", НоменклатураПоШтрихкоду);
	
	Если Не НоменклатураПоШтрихкоду.Пустая() Тогда
		ПоискНоменклатурыПоШтрихкодуЗавершение(Контекст);
	Иначе 
		ПроверитьДоступностьИВыполнитьПоиск(Контекст);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоискНоменклатурыПоШтрихкодуПослеДобавленияИзСервиса(Результат, Контекст) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Строка") Тогда
		Контекст.Вставить("Идентификатор", Результат);
	Иначе 
		СозданнаяНоменклатура = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Результат, "СозданнаяНоменклатура");
		Если ТипЗнч(СозданнаяНоменклатура) = Тип("Массив") И СозданнаяНоменклатура.Количество() > 0 Тогда
			НоменклатураПоШтрихкоду = СозданнаяНоменклатура[0];
			Контекст.Вставить("Номенклатура", НоменклатураПоШтрихкоду);
		КонецЕсли;
	КонецЕсли;
	
	ПоискНоменклатурыПоШтрихкодуЗавершение(Контекст);
	
КонецПроцедуры

Процедура ПодключитьИнтернетПоддержкуПользователей(Оповещение) Экспорт
	
	ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(
		Оповещение, ЭтотОбъект);
	
КонецПроцедуры

// См. РаботаСНоменклатуройКлиентПереопределяемый.СоздатьНоменклатуруИнтерактивно.
Процедура СоздатьНоменклатуруИнтерактивно(ПараметрыФормы, ОписаниеОповещенияОЗакрытии) Экспорт 
	
	ПараметрыСоздания = Новый Структура;
	Если ПараметрыФормы.Свойство("ИдентификаторНоменклатуры") Тогда
		ПараметрыСоздания.Вставить("ИдентификаторСервиса", ПараметрыФормы.ИдентификаторНоменклатуры);
	КонецЕсли;
	
	Если ПараметрыСоздания.Количество() = 0 Тогда
		ПараметрыСоздания = ПараметрыФормы;
	КонецЕсли;
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаЭлемента", ПараметрыСоздания,,,,, ОписаниеОповещенияОЗакрытии);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СозданиеНовыхОбъектовПриВводе

Процедура НоменклатураАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка) Экспорт
	
	Если НЕ ПустаяСтрока(Текст) 
		И (НЕ ЗначениеЗаполнено(Элемент.ОграничениеТипа)
		ИЛИ Элемент.ОграничениеТипа.СодержитТип(Тип("СправочникСсылка.Номенклатура"))) Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСНоменклатуройВызовСервераБП.ДанныеВыбораНоменклатуры(ПараметрыПолученияДанных, Ложь);
	КонецЕсли;
	
КонецПроцедуры

Процедура НоменклатураОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка) Экспорт
	
	Если НЕ ПустаяСтрока(Текст) 
		И (НЕ ЗначениеЗаполнено(Элемент.ОграничениеТипа)
		ИЛИ Элемент.ОграничениеТипа.СодержитТип(Тип("СправочникСсылка.Номенклатура"))) Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = РаботаСНоменклатуройВызовСервераБП.ДанныеВыбораНоменклатуры(ПараметрыПолученияДанных, Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура НоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ВидыНоменклатуры") Тогда
		
		ВыбранноеЗначение = СоздатьНоменклатуруПоВиду(Элемент, ВыбранноеЗначение);
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("Структура") И ВыбранноеЗначение.Свойство("ВидНоменклатуры") Тогда
		
		КодЕдиницыИзмерения = Неопределено;
		ВыбранноеЗначение.Свойство("КодЕдиницыИзмерения", КодЕдиницыИзмерения);
		ВыбранноеЗначение = СоздатьНоменклатуруПоВиду(Элемент, ВыбранноеЗначение.ВидНоменклатуры, КодЕдиницыИзмерения);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ЗначенияЗаполненияПоПараметрамВыбора(ПараметрыВыбора)
	
	ВременнаяСтруктура = Новый Структура;
	ДобавитьПараметрыВыбораВСтруктуру(ВременнаяСтруктура, ПараметрыВыбора);
	
	ЗначенияЗаполнения = Новый Структура;
	Для каждого КлючИЗначение Из ВременнаяСтруктура.Отбор Цикл
		ЗначенияЗаполнения.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	Возврат ЗначенияЗаполнения;
	
КонецФункции

Процедура ДобавитьПараметрыВыбораВСтруктуру(Структура, ПараметрыВыбора)
	
	Если НЕ Структура.Свойство("Отбор") Тогда
		Структура.Вставить("Отбор", Новый Структура);
	КонецЕсли;
	
	Для каждого ПараметрВыбора Из ПараметрыВыбора Цикл
		Если Найти(ПараметрВыбора.Имя, "Отбор.") <> 0 Тогда
			Структура.Отбор.Вставить(СтрЗаменить(ПараметрВыбора.Имя, "Отбор.", ""), ПараметрВыбора.Значение);
		ИначеЕсли Найти(ПараметрВыбора.Имя, ".") = 0 Тогда
			Структура.Вставить(ПараметрВыбора.Имя, ПараметрВыбора.Значение);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция СоздатьНоменклатуруПоВиду(Элемент, ВидНоменклатуры, КодЕдиницыИзмерения = Неопределено)
	
	Наименование = Элемент.ТекстРедактирования;
	
	ПараметрыСоздания = Новый Структура;
	ПараметрыСоздания.Вставить("ЗначенияЗаполнения", ЗначенияЗаполненияПоПараметрамВыбора(Элемент.ПараметрыВыбора));
	
	ДополнительныеПараметрыСоздания = Новый Структура;
	ДополнительныеПараметрыСоздания.Вставить("Наименование", Наименование);
	Если ЗначениеЗаполнено(КодЕдиницыИзмерения) Тогда
		ДополнительныеПараметрыСоздания.Вставить("КодЕдиницыИзмерения", КодЕдиницыИзмерения);
	КонецЕсли;
	ПараметрыСоздания.Вставить("ДополнительныеПараметрыСоздания", ДополнительныеПараметрыСоздания);
	
	Возврат РаботаСНоменклатуройВызовСервераБП.СоздатьНоменклатуруБыстро(ВидНоменклатуры, ПараметрыСоздания);
	
КонецФункции

#КонецОбласти

#Область ПериодичностьУслуг

// Процедура предлагает установить периодичность для номенклатуры
// 
// Параметры:
//    ТекущиеДанные - ДанныеФормыЭлементКоллекции - Строка в которой есть поля:
//                                                  Номенклатура
//                                                  Содержание
//    Дата - Дата - Дата для формирования нового содержания.
//
Процедура СодержаниеПриИзменении(ТекущиеДанные, Дата) Экспорт
	
	Если НЕ ТекущиеДанные.Свойство("Номенклатура") ИЛИ НЕ ТекущиеДанные.Свойство("Содержание")
		ИЛИ НЕ ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) ИЛИ НЕ ЗначениеЗаполнено(ТекущиеДанные.Содержание) Тогда
		Возврат;
	КонецЕсли;
	
	ПериодичностьУслуги = Неопределено;
	ТекстТекущегоМесяца = НРег(Формат(Дата, "Л=ru_RU; ДФ=MMMM"));
	ТекстТекущийКвартал = НРег(Формат(Дата, "Л=ru_RU; ДФ='к ""квартал""'"));
	
	Содержание = ТекущиеДанные.Содержание;
	Если СтрНайти(НРег(Содержание), ТекстТекущегоМесяца) Тогда
		ПериодичностьУслуги = ПредопределенноеЗначение("Перечисление.Периодичность.Месяц");
	ИначеЕсли СтрНайти(НРег(Содержание), ТекстТекущийКвартал) Тогда
		ПериодичностьУслуги = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал");
	КонецЕсли;
	
	// Не нашли в содержании услуг ключевые слова
	Если НЕ ЗначениеЗаполнено(ПериодичностьУслуги) Тогда
		Возврат;
	КонецЕсли;
	
	Номенклатура = ТекущиеДанные.Номенклатура;
	// Проверим, нужно ли предлагать включение периодичности.
	Если НЕ РаботаСНоменклатуройВызовСервераБП.ПредложитьВключитьПериодичностьУслуги(
		Номенклатура, Содержание, ПериодичностьУслуги, Дата) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыНоменклатуры = Новый Структура;
	ПараметрыНоменклатуры.Вставить("Номенклатура",        Номенклатура);
	ПараметрыНоменклатуры.Вставить("ПериодичностьУслуги", ПериодичностьУслуги);
	ПараметрыНоменклатуры.Вставить("Дата",                Дата);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ТекущиеДанные", ТекущиеДанные);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СодержаниеПриИзмененииЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаПериодичностьОказанияУслуги",
		ПараметрыНоменклатуры,
		ЭтотОбъект,
		,
		,
		,
		ОписаниеОповещения);
	
КонецПроцедуры

Процедура СодержаниеПриИзмененииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ДополнительныеПараметры.ТекущиеДанные, Результат);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСНоменклатуройБЭД

Процедура ПроверитьДоступностьИВыполнитьПоиск(Контекст)
	
	ПараметрыДоступности = РаботаСНоменклатуройКлиентСерверБП.ПараметрыДоступностиСервиса();
	
	Если ТипЗнч(Контекст.ОповещениеОРезультате.Модуль) = Тип("ФормаКлиентскогоПриложения") Тогда
		ЗаполнитьЗначенияСвойств(ПараметрыДоступности, Контекст.ОповещениеОРезультате.Модуль);
	КонецЕсли;
	
	Если ПараметрыДоступности.ИнтернетПоддержкаПодключена = Неопределено Тогда
		РаботаСНоменклатуройВызовСервераБП.ЗаполнитьПараметрыДоступностиСервиса(ПараметрыДоступности);
	КонецЕсли;
	
	Для каждого Элемент Из ПараметрыДоступности Цикл
		Контекст.Вставить(Элемент.Ключ, Элемент.Значение);
	КонецЦикла;
	
	Если Не ПараметрыДоступности.СервисДоступен Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Нарушение прав доступа'"));
		ПоискНоменклатурыПоШтрихкодуЗавершение(Контекст);
	ИначеЕсли Не ПараметрыДоступности.СервисАктивен Тогда
		ТекстВопроса = Неопределено;
		Контекст.Свойство("ТекстВопроса", ТекстВопроса);
		Если ТекстВопроса = Неопределено Тогда
			ТекстВопроса = НСтр("ru = 'Хотите поискать в сервисе 1С:Номенклатура?'")
		КонецЕсли;
		
		Оповещение = Новый ОписаниеОповещения("ВопросВыполнитьПоискЗавершение", ЭтотОбъект, Контекст);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	ИначеЕсли Не ПараметрыДоступности.ИнтернетПоддержкаПодключена Тогда
		Оповещение = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержкуПользователейНажатиеПродолжение", 
			ЭтотОбъект, Контекст);
		ПодключитьИнтернетПоддержкуПользователей(Оповещение);
	Иначе 
		ВыполнитьПоиск(Контекст);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьПоиск(Контекст)
	
	Контекст.Вставить("ВернутьОдинРезультат", Истина);
	Оповещение = Новый ОписаниеОповещения("ПоискНоменклатурыПоШтрихкодуПослеДобавленияИзСервиса", ЭтотОбъект, Контекст);
	РаботаСНоменклатуройКлиент.НайтиНоменклатуруПоШтрихкодуВСервисе(Контекст.Штрихкод, Неопределено, Оповещение);
	
КонецПроцедуры

Процедура ПодключитьИнтернетПоддержкуПользователейНажатиеПродолжение(Результат, ДополнительныеПараметры) Экспорт 
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры.Вставить("ИнтернетПоддержкаПодключена", Истина);
	ВыполнитьПоиск(ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ВопросВыполнитьПоискЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		ПоискНоменклатурыПоШтрихкодуЗавершение(ДополнительныеПараметры);
		Возврат;
	КонецЕсли;
	
	Если РаботаСНоменклатуройВызовСервераБП.СервисУспешноАктивирован() Тогда 
		ДополнительныеПараметры.Вставить("СервисАктивен", Истина);
	Иначе 
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не удалось подключить сервис 1С:Номенклатура'"));
		ПоискНоменклатурыПоШтрихкодуЗавершение(ДополнительныеПараметры);
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры.ИнтернетПоддержкаПодключена Тогда
		ВыполнитьПоиск(ДополнительныеПараметры);
	Иначе 
		Оповещение = Новый ОписаниеОповещения("ПодключитьИнтернетПоддержкуПользователейНажатиеПродолжение", 
			ЭтотОбъект, ДополнительныеПараметры);
		ПодключитьИнтернетПоддержкуПользователей(Оповещение);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПоискНоменклатурыПоШтрихкодуЗавершение(Контекст)
	
	Результат = Новый Структура;
	Результат.Вставить("Номенклатура", ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"));
	Результат.Вставить("Штрихкод", "");
	Результат.Вставить("Идентификатор", "");
	
	ЗаполнитьЗначенияСвойств(Результат, Контекст);
	
	Если Контекст.Свойство("ИнтернетПоддержкаПодключена") Тогда
		Результат.Вставить("ИнтернетПоддержкаПодключена", Контекст.ИнтернетПоддержкаПодключена);
	КонецЕсли;
	
	Если Контекст.Свойство("СервисАктивен") Тогда
		Результат.Вставить("СервисАктивен", Контекст.СервисАктивен);
	КонецЕсли;
	
	ВыполнитьОбработкуОповещения(Контекст.ОповещениеОРезультате, Результат);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФорм

Процедура ПослеЗаписи_ФормаДокумента() Экспорт
	
	Оповестить("ОбновитьИсториюДвиженийНоменклатуры");
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти