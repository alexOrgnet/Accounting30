
#Область ПрограммныйИнтерфейс

// См. ОбщегоНазначенияКлиентПереопределяемый.ПослеНачалаРаботыСистемы
Процедура ПослеНачалаРаботы() Экспорт
	
	ПодключитьОбработчикОжидания("Подключаемый_ПоказатьУведомленияАУСНОтФНС", 15, Истина);
	
	Подключить();
	
КонецПроцедуры

// Подключает обработчики отдельных событий СистемыВзаимодействия.
//
Процедура Подключить() Экспорт
	
	ПараметрыВсехЧатов = ПараметрыВсехЧатов();
	Если ПараметрыВсехЧатов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Обработчик = Новый ОписаниеОповещения("ОбработчикФормированияКоманд", ЭтотОбъект);
	СистемаВзаимодействия.ПодключитьОбработчикФормированияКоманд(Обработчик);
	
	ПараметрыВсехЧатов = ПараметрыВсехЧатов();
	Для Каждого ПараметрыЧата Из ПараметрыВсехЧатов Цикл
		
		СистемаВзаимодействия.НачатьПодключениеОбработчикаНовыхСообщений(
			,
			Новый ИдентификаторОбсужденияСистемыВзаимодействия(ПараметрыЧата.Ключ),
			Новый ОписаниеОповещения("ОбработчикОтветаНаСообщение", ЭтотОбъект, ПараметрыЧата.Значение)); 
		
	КонецЦикла;
	
КонецПроцедуры

// Запускает фоновые задания по каждой из организаций, формирующие сообщения системы взаимодействия.
//
Процедура ПоказатьНовыеОповещения() Экспорт
	
	ОтключитьОбработчикОжидания("Подключаемый_ПоказатьУведомленияАУСНОтФНС");
	
	ПараметрыВсехЧатов = ПараметрыВсехЧатов();
	Если ПараметрыВсехЧатов.Количество() > 0 Тогда
		УведомленияОтФНСАУСНВызовСервера.ПоказатьОповещенияВФоне(ПараметрыВсехЧатов);
		ПодключитьОбработчикОжидания("Подключаемый_ПоказатьУведомленияАУСНОтФНС", ИнтервалПроверкиОповещений());
	Иначе
		ОповеститьПользователяОНастройкеУведомлений();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Назначается как обработчик, вызываемый при нажатии на ссылку в тексте сообщения. Формирует список доступных действий.
// 
// Параметры:
//  ПараметрыКоманд - ПараметрыФормированияКомандСистемыВзаимодействия - контекст формирования команд.
//  Команды       - Массив из ОписаниеКомандыСистемыВзаимодействия  - список команд, доступных для выбора.
//  КомандаПоУмолчанию - ОписаниеКомандыСистемыВзаимодействия - что выполнится при нажатии на левую кнопку мыши.
//  ДополнительныеПараметры - Неопределено - не используется.
//
Процедура ОбработчикФормированияКоманд(ПараметрыКоманд, Команды, КомандаПоУмолчанию, ДополнительныеПараметры) Экспорт
	
	Если Не ЭтоЧатУведомленияАУСНОтФНС(ПараметрыКоманд.Обсуждение.Идентификатор, ПараметрыВсехЧатов()) Тогда
		Возврат;
	КонецЕсли;
	
	#Если ВебКлиент Тогда
		ИсточникНавигационнаяСсылка = ИсточникКомандСистемыВзаимодействия.НавигационнаяСсылка;
		ИсточникСообщение = ИсточникКомандСистемыВзаимодействия.Сообщение;
		КомандаУдалитьСообщение = СтандартнаяКомандаСистемыВзаимодействия.УдалитьСообщение;
	#Иначе
		// Обход ошибки платформы 60005432 .
		ИсточникНавигационнаяСсылка = Неопределено;
		ИсточникСообщение = Неопределено;
		КомандаУдалитьСообщение = Неопределено;
		ТекстИнициализацииПеременных =
		"ИсточникНавигационнаяСсылка = ИсточникКомандСистемыВзаимодействия.НавигационнаяСсылка;
		|ИсточникСообщение = ИсточникКомандСистемыВзаимодействия.Сообщение;
		|КомандаУдалитьСообщение = СтандартнаяКомандаСистемыВзаимодействия.УдалитьСообщение;";
		Выполнить(ТекстИнициализацииПеременных);
	#КонецЕсли
	
	Если ПараметрыКоманд.Источник = ИсточникНавигационнаяСсылка Тогда
		
		Если ПараметрыКоманд.НавигационнаяСсылка = "ПерейтиВ1СОтчетность" Тогда
			
			ПриВыбореДействияСообщенияСистемыВзаимодействия(
				ПараметрыКоманд.Сообщение, "УведомлениеОРезультатахПроверкиАУСН");
				
			КомандаПоУмолчанию = Команды[Команды.ВГраница()];
			Команды.Удалить(0);
				
		КонецЕсли;
		Возврат;
		
	ИначеЕсли ПараметрыКоманд.Источник <> ИсточникСообщение Тогда
		Возврат;
	КонецЕсли;
	
	ИндексУдалить = Неопределено;
	Для Индекс = 0 По Команды.Количество() - 1 Цикл
		
		Команда = Команды[Индекс];
		
		Если Команда.Команда = КомандаУдалитьСообщение Тогда
			ИндексУдалить = Индекс;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Команды.Удалить(ИндексУдалить);
	
	ОбработчикКоманды = Новый ОписаниеОповещения("ОбработкаКомандыУдалитьСообщение", ЭтотОбъект, ПараметрыКоманд.Сообщение);
	ПредставлениеКоманды = НСтр("ru = 'Удалить'");
	#Если ВебКлиент Тогда
	НоваяКоманда = Новый ОписаниеКомандыСистемыВзаимодействия(ОбработчикКоманды, ПредставлениеКоманды);
	#Иначе	
	// Обход ошибки платформы 60005432 .
	НоваяКоманда = Неопределено;
	ТекстИнициализацииПеременных = "НоваяКоманда = Новый ОписаниеКомандыСистемыВзаимодействия(ОбработчикКоманды, ПредставлениеКоманды);";
	Выполнить(ТекстИнициализацииПеременных);
	#КонецЕсли
	Команды.Вставить(ИндексУдалить, НоваяКоманда);
	
КонецПроцедуры

// Обработчик нажатия на гиперссылку в сообщении, заданную в свойстве Действия.
// 
// Параметры:
//  Сообщение    - СообщениеСистемыВзаимодействия - источник события.
//  Действие     - Строка - см. УведомленияОтФНСАУСН.ПоказатьОповещения()
//
Процедура ПриВыбореДействияСообщенияСистемыВзаимодействия(Сообщение, Действие) Экспорт
	
	ПараметрыВсехЧатов = ПараметрыВсехЧатов();
	Если Не ЭтоЧатУведомленияАУСНОтФНС(Сообщение.Обсуждение, ПараметрыВсехЧатов) Тогда
		Возврат;
	КонецЕсли;
	
	Если Действие = "ОткрытьУведомление" Тогда
		
		ИдентификаторУведомления = Сообщение.Данные.Идентификатор;
		Уведомление = УведомленияОтФНСАУСНВызовСервера.УведомлениеПоИдентификатору(ИдентификаторУведомления);
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("Ключ", Уведомление);
		
		НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(Уведомление);
		
		ОткрытьФорму("Справочник.УведомленияАУСН.Форма.УведомлениеОтФНС", ПараметрыОткрытия, , ИдентификаторУведомления, , НавигационнаяСсылка);
		
	ИначеЕсли Действие = "СнятиеСАУСН" Тогда
		
		ОписаниеЧата = ПараметрыВсехЧатов[Строка(Сообщение.Обсуждение)];
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("Организация",      ОписаниеЧата.Организация);
		ПараметрыОткрытия.Вставить("РежимНастройки",   Истина);
		ПараметрыОткрытия.Вставить("КонтекстныйВызов", Истина);
		
		НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(ОписаниеЧата.Организация);
		
		ОткрытьФорму("ОбщаяФорма.НалогиИОтчеты", ПараметрыОткрытия, , Сообщение.Данные.Идентификатор, , НавигационнаяСсылка);
		
	ИначеЕсли Действие = "УведомлениеОРезультатахПроверкиАУСН" Тогда
		
		ОписаниеЧата = ПараметрыВсехЧатов[Строка(Сообщение.Обсуждение)];
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("Организация",    ОписаниеЧата.Организация);
		ПараметрыОткрытия.Вставить("Раздел",         ПредопределенноеЗначение("Перечисление.СтраницыЖурналаОтчетность.Уведомления"));
		ОткрытьФорму("ОбщаяФорма.РегламентированнаяОтчетность", ПараметрыОткрытия, , "1С-Отчетность");
		
	ИначеЕсли Действие = "УведомлениеОРассчитанномНалоге" Тогда
		
		ОписаниеЧата = ПараметрыВсехЧатов[Строка(Сообщение.Обсуждение)];
		
		ПериодСобытия = НачалоМесяца(ТекущаяДата()) + 26 * 24 * 60 * 60;
		Описание = СтрШаблон(НСтр("ru = 'АУСН, уплата за %1'"), Формат(ПериодСобытия, НСтр("ru = 'ДФ=''ММММ гггг """"г.""""'';'")));
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("ДатаНачала", '00010101');
		ПараметрыОткрытия.Вставить("Заголовок",  Описание);
		ПараметрыОткрытия.Вставить("Срок",       ПериодСобытия);
		
		ОткрытьФорму("ОбщаяФорма.НапоминаниеОплатитьАУСН", ПараметрыОткрытия, , Сообщение.Данные.Идентификатор);
		
	ИначеЕсли Действие = РаботаСОповещениямиОСостоянииОбменаССервисамиКлиентСервер.ИмяДействияЛичныйКабинетБанка() Тогда
		
		ИдентификаторУведомления = Сообщение.Данные.Идентификатор;
		СсылкаЛК = УведомленияОтФНСАУСНВызовСервера.ЛичныйКабинетБанкаДляУведомления(ИдентификаторУведомления);
		Если ЗначениеЗаполнено(СсылкаЛК) Тогда
			ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(СсылкаЛК);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Назначается как обработчик, вызываемый при появлении новых сообщений в обсуждении.
// 
// Параметры:
//  Сообщение     - СообщениеСистемыВзаимодействия - источник события.
//  ПараметрыЧата - Структура - см. УведомленияОтФНСАУСН.ДобавитьПараметрыЧата()
//
Процедура ОбработчикОтветаНаСообщение(Сообщение, ПараметрыЧата) Экспорт
	
	Если Сообщение.Данные <> Неопределено Тогда
		// Сообщение бота ФНС.
		Возврат;
	КонецЕсли;
	
	// Вместо ответа в чате предлагаем перейти в "1С-Отчетность".
	УведомленияОтФНСАУСНВызовСервера.Предложить1СОтчетность(Сообщение.Автор, ПараметрыЧата);
		
КонецПроцедуры

// Назначается как обработчик, вызываемый при удалении сообщения системы взаимодействия.
// 
// Параметры:
//  Сообщение - СообщениеСистемыВзаимодействия - что удаляется.
//
Процедура ОбработкаКомандыУдалитьСообщение(Сообщение) Экспорт
	
	ПоказатьВопрос(
		Новый ОписаниеОповещения("ОбработкаКомандыУдалитьСообщениеЗавершение", ЭтотОбъект, Сообщение),
		НСтр("ru = 'Удалить сообщение?'"),
		РежимДиалогаВопрос.ДаНет,
		,
		КодВозвратаДиалога.Нет);
	
КонецПроцедуры

Процедура ОбработкаКомандыУдалитьСообщениеЗавершение(ОтветНаВопрос, Сообщение) Экспорт

	Если ОтветНаВопрос <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторУведомления = ?(ЭтоУведомлениеАУСНОтФНС(Сообщение), Сообщение.Данные.Идентификатор, "");
	УведомленияОтФНСАУСНВызовСервера.УдалитьСообщение(Сообщение.Идентификатор, ИдентификаторУведомления);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПараметрыВсехЧатов()
	
	ПараметрыВсехЧатов = Новый Соответствие;
	
	ПараметрыРаботыКлиента = СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиента();
	ПараметрыВсехЧатов = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыРаботыКлиента, "УведомленияАУСНОтФНС", ПараметрыВсехЧатов);
	
	Возврат ПараметрыВсехЧатов;
	
КонецФункции

Функция ЭтоЧатУведомленияАУСНОтФНС(ИдентификаторОбсуждения, ПараметрыВсехЧатов)

	ПараметрыЧата = ПараметрыВсехЧатов.Получить(Строка(ИдентификаторОбсуждения));
	
	Возврат ПараметрыЧата <> Неопределено;
	
КонецФункции

Функция ЭтоУведомлениеАУСНОтФНС(Сообщение)
	
	Если ТипЗнч(Сообщение.Данные) <> Тип("Структура")
	 Или Не Сообщение.Данные.Свойство("Идентификатор")
	 Или Не Сообщение.Данные.Свойство("ТипОповещения") Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

Функция ИнтервалПроверкиОповещений()
	
	Возврат 3600; // Каждый час
	
КонецФункции

Процедура ОповеститьПользователяОНастройкеУведомлений()
	
	ЕстьНепрочитанныеУведомления = УведомленияОтФНСАУСНВызовСервера.ЕстьНепрочитанныеУведомления();
	Если Не ЕстьНепрочитанныеУведомления
		Или Не ИнтеграцияАУСНВызовСервераПовтИсп.СервисПодключен()
		Или Не УведомленияОтФНСАУСНВызовСервера.МожноПодключитьОбсуждения()
		Или УведомленияОтФНСАУСНВызовСервера.ОбсужденияПодключены() Тогда
		Возврат;
	КонецЕсли;
	
	ИмяФормыНастроек = "e1cib/app/Обработка.ПодключениеАУСН/";
	ТекстПояснения = НСтр("ru = 'Чтобы его прочитать, нажмите сюда и подключите Обсуждения.'");
	ПоказатьОповещениеПользователя(НСтр("ru = 'Получено новое сообщение от ФНС'"),
		ИмяФормыНастроек,
		ТекстПояснения,
		БиблиотекаКартинок.ИнтеграцияАУСНОповещенияОтключены,
		СтатусОповещенияПользователя.Важное);
	
КонецПроцедуры

#КонецОбласти
