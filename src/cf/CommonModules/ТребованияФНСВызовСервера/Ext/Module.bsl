////////////////////////////////////////////////////////////////////////////////
//
// Серверные процедуры и функции регламентированных отчетов общего назначения 
// с кешируемым результатом на время сеанса.
//  
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

Функция СостояниеТребованийДляПанели(Организация = Неопределено) Экспорт
	
	Подтвердить = ТребованияФНС.ТребующиеСкорогоПодтверждения(Организация).Количество();
	БезОтвета   = ТребованияФНС.ТребующиеСкорогоОтвета(Организация).Количество();
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Подтвердить", Подтвердить);
	ДополнительныеПараметры.Вставить("БезОтвета",   БезОтвета);
	
	Возврат ДополнительныеПараметры;
	
КонецФункции

Функция ВидыТребований(Организация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЖурналОтправокВКонтролирующиеОрганы.Ссылка.ВидДокумента КАК ВидДокумента
		|ИЗ
		|	РегистрСведений.ЖурналОтправокВКонтролирующиеОрганы КАК ЖурналОтправокВКонтролирующиеОрганы
		|ГДЕ
		|	НЕ ЖурналОтправокВКонтролирующиеОрганы.ПометкаУдаления
		|	И ЖурналОтправокВКонтролирующиеОрганы.СтраницаЖурнала = ЗНАЧЕНИЕ(Перечисление.СтраницыЖурналаОтчетность.Входящие)
		|	И НЕ ЖурналОтправокВКонтролирующиеОрганы.Скрыт
		|	И ЖурналОтправокВКонтролирующиеОрганы.Ссылка ССЫЛКА Справочник.ДокументыРеализацииПолномочийНалоговыхОрганов
		|	И ЖурналОтправокВКонтролирующиеОрганы.Ссылка.ВидДокумента <> НЕОПРЕДЕЛЕНО";
	
	Если ЗначениеЗаполнено(Организация) Тогда
		ТребованияФНС.ДобавитьОтборВЗапросЖурнала(Запрос, "Организация", Организация);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выгрузка = РезультатЗапроса.Выгрузить();
	
	Выгрузка.Сортировать("ВидДокумента");
	
	ВидыДокументов = Выгрузка.ВыгрузитьКолонку("ВидДокумента");
	
	Возврат ВидыДокументов;
	
КонецФункции

Функция ПроизводственныйКалендарь() Экспорт

	Календарь = КалендарныеГрафики.ОсновнойПроизводственныйКалендарь();
	Возврат Календарь;

КонецФункции

Функция ЕстьТребующиеПодтверждения(Организация = Неопределено) Экспорт
	
	Требования = ТребованияФНС.ТребующиеПодтверждения(Организация);
	Возврат Требования.Количество() > 0
	
КонецФункции

Функция ЕстьТребующиеСкорогоПодтверждения(Организация = Неопределено) Экспорт
	
	Требования = ТребованияФНС.ТребующиеСкорогоПодтверждения(Организация);
	Возврат Требования.Количество() > 0
	
КонецФункции

Процедура ВосстановитьСвойстваФайлов(ФайлыПослеОбработки, ФайлыДоОбработки) Экспорт
	
	КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	
	Для каждого ОписаниеФайла Из ФайлыПослеОбработки Цикл
		
		Если ОбработкаФайловPDFКлиентСервер.ЭтоPDFФайл(ОписаниеФайла.Имя) Тогда
			
			Для каждого ФайлДоОбработки Из ФайлыДоОбработки Цикл
				
				ДвДанныеДо = ПолучитьИзВременногоХранилища(ФайлДоОбработки.Адрес);
				ДвДанныеПосле = ПолучитьИзВременногоХранилища(ОписаниеФайла.Адрес);
				
				ИмяДо = КонтекстЭДОСервер.ИмяФайлаБезРасширения(ФайлДоОбработки.Имя);
				ИмяПосле = КонтекстЭДОСервер.ИмяФайлаБезРасширения(ОписаниеФайла.Имя);
				
				Если ДвДанныеДо = ДвДанныеПосле И ИмяДо = ИмяПосле Тогда
					ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ОписаниеФайла, ФайлДоОбработки, Истина);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция РазмерПоАдресу(Адрес) Экспорт
	
	ДвДанные = ПолучитьИзВременногоХранилища(Адрес);
	Возврат ДвДанные.Размер();
	
КонецФункции

Функция СвойствоОтчета(Отчет, Имя) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Отчет) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Попытка
	
		УстановитьПривилегированныйРежим(Истина);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	*
			|ИЗ
			|	РегистрСведений.ЖурналОтчетовСтатусы КАК ЖурналОтчетовСтатусы
			|ГДЕ
			|	ЖурналОтчетовСтатусы.Ссылка = &Отчет";
		
		Запрос.УстановитьПараметр("Отчет", Отчет);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			Возврат ВыборкаДетальныеЗаписи[Имя];
		КонецЕсли;
		
	Исключение
		// Не требует обработки. Может не быть отчетом и выпасть в исключение
		Возврат "";
	КонецПопытки;
	
КонецФункции

Функция ЭтоСообщениеОбИсчисленииИмущественныхНалогов(Требование) Экспорт

	Виды = Перечисления.ВидыНалоговыхДокументов;
	Вид  = Требование.ВидДокумента;

	ЭтоСообщениеОбИсчисленииИмущественныхНалогов = 
		(Вид = Виды.СообщениеОбИсчисленнойСуммеТранспортногоНалога
		Или Вид = Виды.СообщениеОбИсчисленнойСуммеТранспортногоИмущественногоЗемельногоНалогов
		Или Вид = Виды.СообщениеОбИсчисленнойСуммеЗемельногоНалога);

	Возврат ЭтоСообщениеОбИсчисленииИмущественныхНалогов;
	
КонецФункции

#КонецОбласти