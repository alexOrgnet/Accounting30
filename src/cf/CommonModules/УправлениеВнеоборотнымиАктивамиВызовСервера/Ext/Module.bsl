#Область ПрограммныйИнтерфейс

#Область СообщениеОНаличииТранспортаИЗемли

// Возвращает структуру со значениями полей страницы транспортного средства сообщения о наличии ТС и зем. участков.
//
// Параметры:
//  Организация - СправочникСсылка.Организации - организация, по которой подается сообщение о наличии ТС.
//  ТранспортноеСредство - СправочникСсылка.ОсноныеСредства - транспортное средство, по которому заполняется страница сообщения.
//  Период - дата - дата окончания отчетного периода, за который подается сообщение.
//
Функция ДанныеСтраницыТранспортногоСредства(Организация, ТранспортноеСредство, Период) Экспорт
	
	// Структура со значениями полей страницы транспортного средства
	ДанныеСтраницы = Новый Структура;
	ДанныеСтраницы.Вставить("ВидТС");        // вид транспортного средства
	ДанныеСтраницы.Вставить("ИдНомТС");      // идентификационный номер (VIN)
	ДанныеСтраницы.Вставить("МаркаТС");      // марка
	ДанныеСтраницы.Вставить("РегЗнакТС");    // регистрационный знак
	ДанныеСтраницы.Вставить("ДатаРегТС");    // дата регистрации
	ДанныеСтраницы.Вставить("ДатаСнУчетТС"); // дата снятия с учета
		
	Запрос = Новый Запрос;
	Запрос.Текст = УправлениеВнеоборотнымиАктивами.ТекстЗапросаВыборкиТранспортныхСредствДляСообщенияВФНС(Истина);
	
	Запрос.УстановитьПараметр("Организации", ОбщегоНазначенияБПВызовСервераПовтИсп.ВсяОрганизация(Организация));
	Запрос.УстановитьПараметр("ПериодРасчета", 	Период);
	Запрос.УстановитьПараметр("ОсновноеСредство", ТранспортноеСредство);	
	
	ВыборкаТС = Запрос.Выполнить().Выбрать();
			
	Если ВыборкаТС.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(ДанныеСтраницы, ВыборкаТС);
		
		// Подготовим таблицу соответствия кодов видов ТС, использовавашихся в декларации по транспортному налогу,
		// и номеров категорий ТС, используемых в заявлении на льготу 
		Макет = РегистрыСведений.РегистрацияТранспортныхСредств.ПолучитьМакет("КодыВидовИКатегорииТС");
		КодыВидовИКатегорииТС = ОбщегоНазначения.ПрочитатьXMLВТаблицу(Макет.ПолучитьТекст()).Данные;
				
		НайденнаяСтрока = КодыВидовИКатегорииТС.Найти(ВыборкаТС.КодВидаТС, "КодВида");
		Если НайденнаяСтрока <> Неопределено Тогда
			ДанныеСтраницы.ВидТС = НайденнаяСтрока.НомерКатегории;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ДанныеСтраницы;
			
КонецФункции

// Возвращает структуру со значениями полей страницы земельного участка сообщения о наличии ТС и зем. участков.
//
// Параметры:
//  Организация - СправочникСсылка.Организации - организация, по которой подается сообщение о наличии земельных участков.
//  ЗемельныйУчасток - СправочникСсылка.ОсноныеСредства - земельный участок, по которому заполняется страница сообщения.
//  Период - дата - дата окончания отчетного периода, за который подается сообщение.
//
Функция ДанныеСтраницыЗемельногоУчастка(Организация, ЗемельныйУчасток, Период) Экспорт
	
	// Структура со значениями полей страницы земельного участка
	ДанныеСтраницы = Новый Структура;
	ДанныеСтраницы.Вставить("НомКадастрЗУ");  // кадастровый номер земельного участка
	ДанныеСтраницы.Вставить("ДатаРегПрав");   // дата регистрации (возникновения) права на участок
	ДанныеСтраницы.Вставить("ДатаПрекрПрав"); // дата прекращения права
	ДанныеСтраницы.Вставить("Комментарий");   // наименование основного средства в программе (служебное поле)

	Запрос = Новый Запрос;
	Запрос.Текст = УправлениеВнеоборотнымиАктивами.ТекстЗапросаВыборкиЗемельныхУчастковДляСообщенияВФНС(Истина);
	
	Запрос.УстановитьПараметр("Организации", ОбщегоНазначенияБПВызовСервераПовтИсп.ВсяОрганизация(Организация));
	Запрос.УстановитьПараметр("ПериодРасчета", Период);
	Запрос.УстановитьПараметр("ОсновноеСредство", ЗемельныйУчасток);	
	
	ВыборкаЗУ = Запрос.Выполнить().Выбрать();
			
	Если ВыборкаЗУ.Следующий() Тогда		
		ЗаполнитьЗначенияСвойств(ДанныеСтраницы, ВыборкаЗУ);					
	КонецЕсли;
	
	Возврат ДанныеСтраницы;
			
КонецФункции

// Определяет дату окончания отчетного периода (последнего предшествующего), за который подается уведомление.
// 
// Параметры:
//  ДатаСообщения - Дата - предполагаемая дата подачи сообщения, обычно дата подписи.
// 
// Возвращаемое значение:
//  Дата - окончания последнего отчетного периода, который предшествует дате уведомления 
// и за который это уведомление подается.
//
Функция ПоследнийОтчетныйПериодПоДатеУведомления(Знач ДатаСообщения) Экспорт
	
	ДатаСообщения = ?(ЗначениеЗаполнено(ДатаСообщения), ДатаСообщения, ОбщегоНазначения.ТекущаяДатаПользователя());
	Возврат	НачалоДня(НачалоГода(ДатаСообщения)-1); // конец прошлого года
	
КонецФункции

#КонецОбласти

#КонецОбласти
