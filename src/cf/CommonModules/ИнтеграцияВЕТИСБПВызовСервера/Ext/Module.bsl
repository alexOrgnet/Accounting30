#Область ПрограммныйИнтерфейс

Функция ПолучитьКоэффициентЕдиницыИзмеренияВЕТИС(ЕдиницаИзмеренияВЕТИС, Номенклатура) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ЕдиницаИзмеренияВЕТИС", ЕдиницаИзмеренияВЕТИС);
	запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КоэффициентыЕдиницИзмеренияВЕТИС.КоэффициентЕдиницыВЕТИС КАК КоэффициентЕдиницыВЕТИС
	|ИЗ
	|	РегистрСведений.КоэффициентыЕдиницИзмеренияВЕТИС КАК КоэффициентыЕдиницИзмеренияВЕТИС
	|ГДЕ
	|	КоэффициентыЕдиницИзмеренияВЕТИС.Номенклатура = &Номенклатура
	|	И КоэффициентыЕдиницИзмеренияВЕТИС.ЕдиницаИзмеренияВЕТИС = &ЕдиницаИзмеренияВЕТИС";
	
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		Возврат ?(ЗначениеЗаполнено(Результат.КоэффициентЕдиницыВЕТИС), Результат.КоэффициентЕдиницыВЕТИС, Неопределено);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецФункции

// Возвращает ссылку на элемент справочника КлассификаторЕдиницИзмерения по единице измерения ВЕТИС.
//
Функция ПолучитьЕдиницуИзмерения(ЕдиницаИзмеренияВЕТИС) Экспорт

	Возврат ИнтеграцияВЕТИСБП.ПолучитьЕдиницуИзмерения(ЕдиницаИзмеренияВЕТИС);

КонецФункции

// Возвращает ссылку на элемент справочника Контрагенты по хозяйствующему субъекту и предприятию ВЕТИС.
//
Функция ПолучитьКонтрагента(ХозяйствующийСубъектВЕТИС, ПредприятиеВЕТИС = Неопределено) Экспорт

	Возврат ИнтеграцияВЕТИСБП.ПолучитьКонтрагента(ХозяйствующийСубъектВЕТИС, ПредприятиеВЕТИС);

КонецФункции

//Возвращает значение константы раздельное списание материалов и выпуск продукции
//Параметры: нет
//
//Возвращаемое значение: ЗначениеКонстанты Тип("Булево")
//
Функция ИспользоватьРаздельноеСписаниеМатериаловИВыпускПродукцииВЕТИС() Экспорт
	
	Возврат Константы.ИспользоватьРаздельноеСписаниеМатериаловИВыпускПродукцииВЕТИС.Получить();
	
КонецФункции

//Получает ссылку на документ ПроизводственнаяОперацияВЕТИС по документу основанию
//Параметры:     -Основание Тип("ДокументСсылка.ТребованиеНакладаная") Или
//							Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену")
//
//Возвращаемое значение: Тип("ДокументСсылка.ПроизводственнаяОперацияВетис")
//
Функция НайтиСсылкуПроизводственнойОперациВЕТИС(Основание) Экспорт
	
	Возврат Документы.ПроизводственнаяОперацияВЕТИС.НайтиПоРеквизиту("ДокументОснование",Основание);
	
КонецФункции

//Получает транзакцию по основанию
//Параметры: Основание Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену")
//						Тип("ДокументСсылка.ТребованиеНакладная")
//
//Возвращаемое значение: ПроизводственнаяТранзакция Тип("СправочникСсылка.ИдентификаторыПроизводственныхТранзакций")
//
Функция НайтиТранзакцию(Основание) Экспорт
	
	ПроизводственнаяОперация = НайтиСсылкуПроизводственнойОперациВЕТИС(Основание);
	Возврат ПроизводственнаяОперация.ИдентификаторПроизводственнойТранзакции;
	
КонецФункции

//Проверяет заполнение производственной транзакции в документе
//Параметры:
//			-Объект Тип("ДокументОбъект.ПроизводственнаяОперацияВЕТИС")
//			-НепроверяемыеРеквизиты Тип("Массив");
//			-Отказ Тип("Булево")
//
//Возвращаемое значение: нет
//
Процедура ПроверитьЗаполнениеТранзакцииВЕТИС(Объект, ПроверяемыеРеквизиты, НепроверяемыеРеквизиты, Отказ) Экспорт
	
	Если Не ТипЗнч(Объект) = Тип("ДокументОбъект.ПроизводственнаяОперацияВЕТИС") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТоварыСырьеЗаполнены(Объект) И ЭтоОтчетПроизводстваЗаСмену(Объект.ДокументОснование) Тогда
		Возврат;
	КонецЕсли;

	Если ПолучитьФункциональнуюОпцию("ИспользоватьРаздельноеСписаниеМатериаловИВыпускПродукцииВЕТИС") Тогда
		ПроверяемыеРеквизиты.Добавить("ИдентификаторПроизводственнойТранзакции");
	КонецЕсли;
	
КонецПроцедуры

//Проверяет автивность транзакции ВЕТИС по идентификатору транзакции
//Параметры:	ИдентификаторТранзакцииВЕТИС Тип("СправочникСсылка.ИдентификаторыТранзакцийВЕТИС")
//
//Возвращаемое значение: ТранзакцияАктивна Тип("Булево");
Функция ТранзакцияВЕТИСАктивна(ИдентификаторТранзакцииВЕТИС) Экспорт
	
	ТранзакцияАктивна = Ложь;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
       |	ПроизводственныеТранзакцииБПВЕТИС.ИдентификаторПроизводственнойТранзакции КАК Транзакция
       |ИЗ
       |	РегистрСведений.ПроизводственныеТранзакцииБПВЕТИС КАК ПроизводственныеТранзакцииБПВЕТИС
       |ГДЕ
       |	ПроизводственныеТранзакцииБПВЕТИС.ИдентификаторПроизводственнойТранзакции = &ИдентификаторПроизводственнойТранзакции
       |	И НЕ ПроизводственныеТранзакцииБПВЕТИС.ЗавершениеПроизводственнойТранзакции";
	Запрос.УстановитьПараметр("ИдентификаторПроизводственнойТранзакции",ИдентификаторТранзакцииВЕТИС);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ТранзакцияАктивна = Истина;
	КонецЕсли;
	Возврат ТранзакцияАктивна;
	
КонецФункции

//Текст запроса  для замены запроса дин. списка формы документов Произвродственные операции ВЕТИС
//Параметры:Нет
//
//Возвращаемое значение: текстЗапроса Тип("Строка")
//
Функция ПолучитьТекстЗапросаСписка() Экспорт
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
   |	Таблица.Ссылка КАК Ссылка,
   |	Таблица.ПометкаУдаления КАК ПометкаУдаления,
   |	Таблица.Номер КАК Номер,
   |	Таблица.Дата КАК Дата,
   |	Таблица.Проведен КАК Проведен,
   |	Таблица.ХозяйствующийСубъект КАК ХозяйствующийСубъект,
   |	Таблица.Предприятие КАК Предприятие,
   |	Таблица.ИдентификаторПроизводственнойТранзакции КАК ПроизводственнаяТранзакция,
   |	Таблица.Ответственный КАК Ответственный,
   |	СтатусыДокументовВЕТИС.Статус КАК СтатусВЕТИС,
   |	СтатусыДокументовВЕТИС.ДальнейшееДействие1 КАК ДальнейшееДействиеВЕТИС1,
   |	СтатусыДокументовВЕТИС.ДальнейшееДействие2 КАК ДальнейшееДействиеВЕТИС2,
   |	СтатусыДокументовВЕТИС.ДальнейшееДействие3 КАК ДальнейшееДействиеВЕТИС3,
   |	ВложенныйЗапрос.СостояниеТранзакции КАК СостояниеТранзакции
   |ИЗ
   |	Документ.ПроизводственнаяОперацияВЕТИС КАК Таблица
   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовВЕТИС КАК СтатусыДокументовВЕТИС
   |		ПО (СтатусыДокументовВЕТИС.Документ = Таблица.Ссылка)
   |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
   |			ИдентификаторыПроизводственныхТранзакцийБПВЕТИС.ХозяйствующийСубъект КАК ХозяйствующийСубъект,
   |			ИдентификаторыПроизводственныхТранзакцийБПВЕТИС.Предприятие КАК Предприятие,
   |			ИдентификаторыПроизводственныхТранзакцийБПВЕТИС.Ссылка КАК ПроизводственнаяТранзакция,
   |			МАКСИМУМ(ВЫБОР
   |					КОГДА ПроизводственныеТранзакцииБПВЕТИС.ИдентификаторПроизводственнойТранзакции ЕСТЬ NULL
   |						ТОГДА ""Не активна""
   |					ИНАЧЕ ВЫБОР
   |							КОГДА ПроизводственныеТранзакцииБПВЕТИС.ЗавершениеПроизводственнойТранзакции
   |								ТОГДА ""Завершена""
   |							ИНАЧЕ ""Активна""
   |						КОНЕЦ
   |				КОНЕЦ) КАК СостояниеТранзакции
   |		ИЗ
   |			Справочник.ИдентификаторыПроизводственныхТранзакцийБПВЕТИС КАК ИдентификаторыПроизводственныхТранзакцийБПВЕТИС
   |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПроизводственныеТранзакцииБПВЕТИС КАК ПроизводственныеТранзакцииБПВЕТИС
   |				ПО ИдентификаторыПроизводственныхТранзакцийБПВЕТИС.Ссылка = ПроизводственныеТранзакцииБПВЕТИС.ИдентификаторПроизводственнойТранзакции
   |		
   |		СГРУППИРОВАТЬ ПО
   |			ИдентификаторыПроизводственныхТранзакцийБПВЕТИС.Ссылка,
   |			ИдентификаторыПроизводственныхТранзакцийБПВЕТИС.ХозяйствующийСубъект,
   |			ИдентификаторыПроизводственныхТранзакцийБПВЕТИС.Предприятие) КАК ВложенныйЗапрос
   |		ПО Таблица.ХозяйствующийСубъект = ВложенныйЗапрос.ХозяйствующийСубъект
   |			И Таблица.Предприятие = ВложенныйЗапрос.Предприятие
   |			И Таблица.ИдентификаторПроизводственнойТранзакции = ВложенныйЗапрос.ПроизводственнаяТранзакция";
	
	Возврат ТекстЗапроса;
	
КонецФункции

//Производит запись в регистр производственных транзакций ВЕТИС
//Параметры:
//			-ПроизводственнаяОперацияВЕТИС Тип("ДокументОбъект.ПроизводственнаяОперацияВЕТИС")
//			-Отказ Тип("Булево")
//
//Возвращаемое значение: нет
//
Процедура ЗаписатьТранзакциюВЕТИС(ПроизводственнаяОперацияВЕТИС, Отказ) Экспорт
	
	Запись = РегистрыСведений.ПроизводственныеТранзакцииБПВЕТИС.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Запись, ПроизводственнаяОперацияВЕТИС);
	Попытка
		Запись.Записать();
	Исключение
		Отказ = Истина;
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
		
КонецПроцедуры

//Удаляет запись производственной транзакции ВЕТИС
//Параметры:
//			-ПроизводственнаяОперацияВЕТИС Тип("ДокументОбъект.ПроизводственнаяОперацияВЕТИС")
//			-Отказ Тип("Булево")
//
//Возвращаемое значение: нет
//
Процедура УдалитьТранзакциюВЕТИС(ПроизводственнаяОперацияВЕТИС, Отказ) Экспорт
	
	НаборЗаписей = РегистрыСведений.ПроизводственныеТранзакцииБПВЕТИС.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ИдентификаторПроизводственнойТранзакции.Установить(ПроизводственнаяОперацияВЕТИС.ИдентификаторПроизводственнойТранзакции);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	Попытка
		НаборЗаписей.Записать();
	Исключение
		Отказ = Истина;
		Сообщить(ОписаниеОШибки());
	КонецПопытки
	
КонецПроцедуры

//Добавляе колонку в динамический список
//Параметры:
//			-Форма Тип("Форма")
//			-ИмяСписка Тип("Строка")
//			-ИмяПоля Тип("Строка")
//			-Заголовок Тип("Строка") -необяз.
//
//Возвращаемое значение: нет
//
Процедура ДобавитьКолонкуВДинамическийСписокФормы(Форма, ИмяСписка, ИмяПоля, Заголовок = "") Экспорт
	
	КолонкаСписка 				= Форма.Элементы.Добавить(ИмяПоля,Тип("ПолеФормы"),Форма.Элементы.Найти(ИмяСписка));
	КолонкаСписка.ПутьКДанным 	= ИмяСписка+"."+ИмяПоля;
	КолонкаСписка.Вид 			= ВидПоляФормы.ПолеВвода;
	КолонкаСписка.Заголовок 	= ?(ЗначениеЗаполнено(Заголовок), Заголовок, ИмяПоля);
	
КонецПроцедуры

//Проверяет и записывает/удаляет производственную транзакцию перед проведением/отменой проведения
//Параметры:
//			-Объект Тип("ДокументОбъект.ПроизводственнаяОперацияВЕТИС")
//			-РежимЗаписи Тип("РежимЗаписиДокумента")
//			-Отказ Тип("Булево")
//Возвращаемое значение: нет
//
Процедура ПроверитьИЗаписатьПроизводственнуюТранзакцию(Объект, РежимЗаписи, Отказ)  Экспорт
	
	//Регистр сведений производственные транзакции ВЕТИС
	Если ПолучитьФункциональнуюОпцию("ИспользоватьРаздельноеСписаниеМатериаловИВыпускПродукцииВЕТИС") И Не Отказ Тогда
		Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
			ЗаписатьТранзакциюВЕТИС(Объект, Отказ);
		ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
			Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ТребованиеНакладная") Тогда
				Если ТранзакцияВЕТИСАктивна(Объект.ИдентификаторПроизводственнойТранзакции) Тогда
					УдалитьТранзакциюВЕТИС(Объект, Отказ);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли 
	
КонецПроцедуры

//Проверяет вид документа ОтчетПроизвосдвтаЗа смену
//Параметры: Объект Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену")
//
//Возвращаемое значение: Тип("Булево")
//
Функция ЭтоОтчетПроизводстваЗаСмену(Объект) Экспорт
	
	Если ТипЗнч(Объект)=Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену") И
		 Объект.ВидОперации = Перечисления.ВидыОперацийОтчетПроизводстваЗаСмену.ОтчетПроизводстваЗаСмену Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

//Проверяет вид документа ОтчетПроизвосдвтаЗа смену
//Параметры: Объект Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену")
//
//Возвращаемое значение: Тип("Булево")
//
Функция ЭтоВыпускПродукции(Объект) Экспорт
	
	Если ТипЗнч(Объект)=Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену") И
		 Объект.ВидОперации = Перечисления.ВидыОперацийОтчетПроизводстваЗаСмену.ВыпускПродукции Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

//Проверяет что объект -Документ ПроизводственнаяОперацияВЕТИС содержащий и сырье и продукцию
//Параметры: Объект Тип("ДокументСсылка.ПроизводственнаяОперацияВЕТИС")
//
//Возвращаемое значение: Результат Тип("Булево")
//
Функция ТоварыСырьеЗаполнены(Объект) Экспорт
	
	Результат = Ложь;
	Если  Объект.Сырье.Количество()>0 
		И Объект.Товары.Количество()>0 Тогда
		Результат = Истина;
	КонецЕсли;
	Возврат Результат;
	
КонецФункции

//Получает необходимость установки признака завершения производственной транзакции ВЕТИС в зависимости от документа основания
//Параметры: Основание 
//			*Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену")
//			*Тип("ДокументСсылка.ТребованиеНакладная")
//
//Возвращаемое значение: Видимость Тип("Булево")
//
Функция ПолучитьВидимостьЭлементаЗавершенияПроизводственнойТранзакцииПоОснованию(Основание) Экспорт
	
	Видимость = Ложь;
	Если ЭтоОтчетПроизводстваЗаСмену(Основание) Тогда 
		Видимость = Истина;
	ИначеЕсли ЭтоВыпускПродукции(Основание) Тогда
		Видимость = Истина;
	Иначе
		Видимость = Ложь;
	КонецЕсли;
	Возврат Видимость;
	
КонецФункции

#КонецОбласти
