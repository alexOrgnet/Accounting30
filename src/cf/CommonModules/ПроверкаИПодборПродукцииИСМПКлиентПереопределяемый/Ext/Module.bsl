#Область СлужебныйПрограммныйИнтерфейс

#Область СерииНоменклатуры

// Заполняет структуру, массив которых в дальнейшем будет передан в процедуру генерации серий.
//
// Параметры:
//  * ДанныеДляГенерацииСерии - Структура - Описание:
//  ** Номенклатура - ОпределяемыйТип.Номенклатура - Номенклатура, для которой будет генерироваться серия.
//  ** Серия        - ОпределяемыйТип.СерияНоменклатуры - В данное значение будет записана сгенерированная серия.
//  ** ЕстьОшибка   - Булево - Будет установлено в Истина, если по каким то причинам серия сгенерирована не будет.
//  ** ТекстОшибки  - Строка - причина, по которой серия не генерировалась.
//  ** МРЦ          - Число - только для табачной продукции, максимальная розничная цена.
//  * ВидМаркируемойПродукции - ПеречислениеСсылка.ВидыПродукцииИС - вид маркируемой продукции, для которой получается структура данных
Процедура ПолучитьДанныеДляГенерацииСерии(ДанныеДляГенерацииСерии, ВидМаркируемойПродукции) Экспорт
	
	
	Возврат;

КонецПроцедуры

// Добавляет специфичные параметры указания серий для товаров, указанных в форме.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма с товарами, для которой необходимо определить параметры указания серий.
//  ПараметрыУказанияСерий - Структура - дополняемые параметры указания серий.
Процедура ДополнитьПараметрыУказанияСерий(Форма, ПараметрыУказанияСерий) Экспорт
	
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область ОткрытиеФормыПроверкиИПодбора

// Заполняет специфичные параметры открытия форм проверки и подбора маркируемой продукции в зависимости от точки вызова
//
// Параметры:
//  Форма - УправляемаяФорма - форма из которой происходит открытие формы проверки и подбора
//  Параметры - (См. ПроверкаИПодборПродукцииИСМПКлиент.ПараметрыОткрытияФормыПроверкиИПодбора)
//
Процедура ПриУстановкеПараметровОткрытияФормыПроверкиИПодбора(Форма, Параметры) Экспорт

	Если ИнтеграцияИСБПКлиентСервер.ЭтоДокументПоНаименованию(Форма, "РеализацияТоваровУслуг")
		Или ИнтеграцияИСБПКлиентСервер.ЭтоДокументПоНаименованию(Форма, "РеализацияТоваровУслуг")
		Или ИнтеграцияИСБПКлиентСервер.ЭтоДокументПоНаименованию(Форма, "ПоступлениеТоваровУслуг")
		Или ИнтеграцияИСБПКлиентСервер.ЭтоДокументПоНаименованию(Форма, "ПередачаТоваров")
		Тогда
		
		Параметры.ИмяРеквизитаДокументОснование = "";
		Параметры.ИмяРеквизитаКонтрагент = "Контрагент";
	ИначеЕсли ИнтеграцияИСБПКлиентСервер.ЭтоДокументПоНаименованию(Форма, "КорректировкаРеализации") Тогда
		Параметры.ИмяРеквизитаДокументОснование = "ИсходныйДокументРеализации";
		Параметры.ИмяРеквизитаКонтрагент = "Контрагент";
		
	ИначеЕсли ИнтеграцияИСБПКлиентСервер.ЭтоДокументПоНаименованию(Форма, "ВозвратТоваровОтПокупателя") Тогда
		Параметры.ИмяРеквизитаДокументОснование = "Сделка";
		Параметры.ИмяРеквизитаКонтрагент = "Контрагент";
		
	ИначеЕсли ИнтеграцияИСБПКлиентСервер.ЭтоДокументПоНаименованию(Форма, "АктОРасхождениях") Тогда
		Параметры.ИмяРеквизитаДокументОснование = "ДокументПоступления";
		Параметры.ИмяРеквизитаКонтрагент = "Контрагент";
		
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма,"ПараметрыИнтеграцииГосИС") Тогда
		
		НастройкиИнтеграции = Форма.ПараметрыИнтеграцииГосИС.Получить(Параметры.ВидМаркируемойПродукции);
		Если Не(НастройкиИнтеграции = Неопределено) Тогда
			Параметры.ПроверкаЭлектронногоДокумента = НастройкиИнтеграции.ЕстьЭлектронныйДокумент;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры
// Выполняет специфичные действия после закрытия форм проверки и подбора маркируемой продукции в зависимости от точки вызова
//
// Параметры:
//  РезультатЗакрытия - Произвольный - результат закрытия формы проверки и подбора
//  ДополнительныеПараметры - Структура с реквизитом Форма (управляемая форма из которой происходил вызов)
//
Процедура ПриЗакрытииФормыПроверкиИПодбора(РезультатЗакрытия, ДополнительныеПараметры) Экспорт

	ДополнительныеПараметры.Форма.Прочитать();
	
КонецПроцедуры

// Выполняет специфичные действия перед открытием форм проверки и подбора маркируемой продукции в зависимости от точки вызова
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения       - форма из которой происходит открытие формы проверки и подбора
//  ПараметрыОткрытияФормыПроверки - Структура - параметры открытия формы проверки и подбора для формы-источника
//  ПараметрыФормыПроверки         - Структура - подготовленные параметры открытия формы проверки и подбора
//  Отказ                          - Булево    - отказ от открытия формы
//
Процедура ПередОткрытиемФормыПроверкиПодбора(Форма, ПараметрыОткрытияФормыПроверки, ПараметрыФормыПроверки, Отказ) Экспорт
	Если ПараметрыФормыПроверки.ПроверкаНеПоДокументу 
		ИЛИ НЕ ТребуетсяКонтрольСтатусаКонтрагента(ПараметрыФормыПроверки.ПроверяемыйДокумент) Тогда
	
		Возврат;
	КонецЕсли; 
	
	ЗначенияРеквизитовДокумента = Новый Структура("Контрагент");
	ЗаполнитьЗначенияСвойств(ЗначенияРеквизитовДокумента, Форма.Объект);
	
	ПараметрыФормыПроверки.Вставить("КонтрагентПоДокументу", ЗначенияРеквизитовДокумента.Контрагент);
КонецПроцедуры

// Добавляет возвможные варианты заполнения
// Параметры:
// Форма - ФормаКлиентскогоПриложения:
//	*ПроверкаНеПоДокументу - Булево
//	*РазрешитьЗагрузкуПоОрдерам - Булево
// ВариантыЗаполнения - СписокЗначений из Строка - возвращаемое значение
Процедура ПриОпределенииВариантовЗаполненияКодовМаркировки(Форма, ВариантыЗаполнения) Экспорт
	
	Возврат;
	
КонецПроцедуры

// Параметры:
// Форма - ФормаКлиентскогоПриложения:
//	*ПроверяемыйДокумент - ДокументСсылка
// ВариантЗаполнения - Строка
Процедура ПриОбработкеВариантаЗаполненияКодовМаркировки(Форма, ВариантЗаполнения, ПараметрыОбработкиТСД = Неопределено) Экспорт

	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область ОткрытиеФормПрикладныхОбъектов

Процедура ОткрытьФормуАктаОРасхождениях(ДокументСсылка, ВладелецФормы) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
#Область СлужебныйПрограмныйИнтерфейс

Функция ТребуетсяКонтрольСтатусаКонтрагента(Документ)
	ТипыДокументовСКонтролемКонтрагента = Новый Массив;
	ТипыДокументовСКонтролемКонтрагента.Добавить(Тип("ДокументСсылка.РеализацияТоваровУслуг"));
	ТипыДокументовСКонтролемКонтрагента.Добавить(Тип("ДокументСсылка.ПередачаТоваров"));
	ТипыДокументовСКонтролемКонтрагента.Добавить(Тип("ДокументСсылка.КорректировкаРеализации"));
	
	Возврат ТипыДокументовСКонтролемКонтрагента.Найти(ТипЗнч(Документ)) <> Неопределено;
КонецФункции
 

#КонецОбласти
