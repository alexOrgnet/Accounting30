
////////////////////////////////////////////////////////////////////////////////
// Учет резервов для небольших организаций.
// Переопределяемое в потребителе поведение.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Процедура предназначена для заполнения в полученной таблице информации об особенностях расчета отпусков
// с учетом специфики места внедрения.
//
// Параметры:
//   НачисленнаяЗарплатаИВзносы - таблица значений
//		Структура таблицы НачисленнаяЗарплатаИВзносы (необходимые колонки)
//			Начисление
//			КомпенсацияОтпуска
//
Процедура ДополнитьТаблицуСведениямиОбОсобенностяхОтпусков(НачисленнаяЗарплатаИВзносы) Экспорт
	
	Отбор = Новый Структура("КатегорияНачисленияИлиНеоплаченногоВремени", Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаОтпуска);
	ВидНачисленияОтпуск = ПланыВидовРасчета.Начисления.НачислениеПоУмолчанию(Отбор);
	
	ВидыНачисления = ПланыВидовРасчета.Начисления.НачисленияПоОтбору(Новый СТруктура("Код", "КОТ"));
	Если ВидыНачисления.Количество() <> 0 Тогда
		ВидНачисленияКомпенсацияОтпуска = ВидыНачисления[0];
	Иначе
		ВидНачисленияКомпенсацияОтпуска = "";
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из НачисленнаяЗарплатаИВзносы Цикл
		
		Если СтрокаТаблицы.Начисление = ВидНачисленияОтпуск
			Или СтрокаТаблицы.Начисление = ВидНачисленияКомпенсацияОтпуска Тогда
			СтрокаТаблицы.ВидОтпуска = "Основной";
		КонецЕсли;
		СтрокаТаблицы.КомпенсацияОтпуска = СтрокаТаблицы.Начисление = ВидНачисленияКомпенсацияОтпуска;
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура предназначена для проверки наличия обмена с программой учета зарплаты
//
// Параметры:
//   ОбменИспользуется - Булево, переопределяется в зависимости от настройки
//
Процедура ОбменИспользуется(ОбменИспользуется) Экспорт
	
	Если ОбменИспользуется Тогда
		Возврат;
	КонецЕсли;
		
	Если Не ОбменИспользуется Тогда
		
		МДПланОбмена = Метаданные.ПланыОбмена.Найти("СинхронизацияДанныхЧерезУниверсальныйФормат");
		Если МДПланОбмена <> Неопределено Тогда
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("ЭтотУзел",               ПланыОбмена["СинхронизацияДанныхЧерезУниверсальныйФормат"].ЭтотУзел());
			Запрос.УстановитьПараметр("ИдентификаторНастройки", "ОбменЗУПБП");
			Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ОбменЗарплата3Бухгалтерия3.Ссылка
			|ИЗ
			|	#ПолноеИмяПланаОбмена КАК ОбменЗарплата3Бухгалтерия3
			|ГДЕ
			|	ОбменЗарплата3Бухгалтерия3.Ссылка <> &ЭтотУзел
			|	И ОбменЗарплата3Бухгалтерия3.ВариантНастройки = &ИдентификаторНастройки";
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ПолноеИмяПланаОбмена", МДПланОбмена.ПолноеИмя());
			ОбменИспользуется = Не Запрос.Выполнить().Пустой();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура предназначена для дополнения таблицы параметров данными о проценте годовой премии
// и с учетом специфики места внедрения.
//
// Параметры:
//   Организация       - Спр.Организации.СправочникСсылка - Организация.
//   Период            - Дата - Период дат.
//   ДанныеПоказателей - таблица значений.
//		Структура таблицы ДанныеПоказателей.
//			Сотрудник
//			ФондОплатыТруда
//			ПроцентГодовойПремии
//
Процедура ДополнитьТаблицуПроцентомГодовойПремии(Организация, Период, ДанныеПоказателей) Экспорт
	
	ДанныеПоказателей.Свернуть("Сотрудник, ПроцентГодовойПремии", "Сумма");
	
	НастройкиУчетаЗарплаты = РегистрыСведений.НастройкиУчетаЗарплаты.Получить(Новый Структура("Организация", Организация));
	РазмерЕжегоднойПремии  = НастройкиУчетаЗарплаты.РазмерЕжегоднойПремии;
	
	ДанныеПоказателей.ЗаполнитьЗначения(РазмерЕжегоднойПремии, "ПроцентГодовойПремии");
	
КонецПроцедуры

// Процедура предназначена для формирования списка оплачиваемых за счет резерва отпусков
// с учетом специфики места внедрения.
//
// Параметры:
//   МассивВидовОтпусковРезерва - Массив.
//
Процедура ПолучитьМассивВидовОтпусковРезерва(МассивВидовОтпусковРезерва) Экспорт
	
	МассивВидовОтпусковРезерва.Добавить("Основной");
	
КонецПроцедуры

#КонецОбласти
