#Область СлужебныйПрограммныйИнтерфейс

// Возвращает организацию по умолчанию
// 
// Параметры:
//   ОсновнаяОрганизация - ОпределяемыйТип.Организация, Неопределено - (возвращаемое значение)
//  
Процедура ПолучитьОсновнуюОрганизацию(ОсновнаяОрганизация) Экспорт
	
	ОсновнаяОрганизация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	
КонецПроцедуры

// Возвращает сведения об организации.
//
// Параметры:
//  Организация - ОпределяемыйТип.Организация - ссылка на элемент справочника Организации
//  НачалоПериода - Дата, Неопределено - начало периода настроек
//  КонецПериода - Дата, Неопределено - конец периода настроек
//  СведенияОбОрганизации - Структура - см. ИнтеграцияАУСН.НовыеСведенияОбОрганизации (возвращаемое значение)
//
Процедура ПолучитьСведенияОбОрганизации(Организация, НачалоПериода, КонецПериода, СведенияОбОрганизации) Экспорт
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "ИНН");
	
	ИспользуетсяНесколькоБанковскихСчетов = Справочники.БанковскиеСчета.ИспользуетсяНесколькоБанковскихСчетовОрганизации(
		Организация);
		
	//@skip-check wrong-string-literal-content
	ОсновнойБанковскийСчет = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ОсновнойБанковскийСчет");
	Если ЗначениеЗаполнено(ОсновнойБанковскийСчет) Тогда
		//@skip-check wrong-string-literal-content
		БИК = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОсновнойБанковскийСчет, "Банк.Код");
		БанкОсновногоСчета = РаботаСБанкамиБП.СсылкаПоКлассификатору(БИК);
		Если БанкОсновногоСчета = Неопределено Тогда
			БанкОсновногоСчета = Справочники.КлассификаторБанков.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
	БанкиОрганизации = Новый Массив;
	
	БанковскиеСчетаОрганизации = Справочники.БанковскиеСчета.БанковскиеСчетаОрганизации(
		Организация, ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета(), , Ложь);
	Если ЗначениеЗаполнено(БанковскиеСчетаОрганизации) Тогда
		РеквизитыБанковскихСчетов = Справочники.БанковскиеСчета.РеквизитыБанковскихСчетов(
			ОбщегоНазначения.ВыгрузитьКолонку(БанковскиеСчетаОрганизации, "Ссылка"));
		Для Каждого РеквизитыСчета Из РеквизитыБанковскихСчетов Цикл
			Если ЗначениеЗаполнено(НачалоПериода) И ЗначениеЗаполнено(РеквизитыСчета.ДатаЗакрытия)
				И РеквизитыСчета.ДатаЗакрытия < НачалоПериода Тогда
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(КонецПериода) И ЗначениеЗаполнено(РеквизитыСчета.ДатаОткрытия)
				И КонецПериода < РеквизитыСчета.ДатаОткрытия Тогда
				Продолжить;
			КонецЕсли;
			БанкСчета = РаботаСБанкамиБП.СсылкаПоКлассификатору(РеквизитыСчета.БанкКод);
			Если БанкСчета <> Неопределено И БанкиОрганизации.Найти(БанкСчета) = Неопределено Тогда
				БанкиОрганизации.Добавить(БанкСчета);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НачалоПериода) И ЗначениеЗаполнено(КонецПериода) Тогда
		ПрименяетсяАУСН = УчетнаяПолитика.ПрименяетсяАУСНЗаПериод(
			Организация, НачалоПериода, КонецПериода);
	Иначе
		ПрименяетсяАУСН = УчетнаяПолитика.ПрименяетсяАУСН(
			Организация, ТекущаяДатаСеанса());
	КонецЕсли;
	
	ПредставлениеСистемыНалогообложения = ОрганизацииФормыКлиентСервер.ПредставлениеСистемыНалогообложения(Организация);
	
	СведенияОбОрганизации = ИнтеграцияАУСН.НовыеСведенияОбОрганизации();
	СведенияОбОрганизации.Вставить("ИНН", РеквизитыОрганизации.ИНН);
	СведенияОбОрганизации.Вставить("ИспользуетсяНесколькоБанковскихСчетов", ИспользуетсяНесколькоБанковскихСчетов);
	СведенияОбОрганизации.Вставить("БанкОсновногоСчета", БанкОсновногоСчета);
	СведенияОбОрганизации.Вставить("БанкиОрганизации", БанкиОрганизации);
	СведенияОбОрганизации.Вставить("ПрименяетсяАУСН", ПрименяетсяАУСН);
	СведенияОбОрганизации.Вставить("ПредставлениеСистемыНалогообложения", ПредставлениеСистемыНалогообложения);
	
КонецПроцедуры

#КонецОбласти