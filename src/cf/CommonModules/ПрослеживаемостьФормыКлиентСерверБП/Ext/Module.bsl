
#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаполнитьПредставлениеРНПТ(Форма, СтрокаТабличнойЧасти, ЕстьПодсказкаРНПТ = Истина, ЭтоПереходныйПериод = Ложь, ЭтоУслуги = Ложь) Экспорт
	
	Объект = Форма.Объект;
	ДокументСсылка = Объект.Ссылка;
	ЭтоВвозИзЕАЭС  = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
		И Форма.ПоставщикРезидентТаможенногоСоюза;
	ЭтоКорректировка = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.КорректировкаПоступления")
		ИЛИ ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.КорректировкаРеализации");
	ЭтоВводОстатков = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВводНачальныхОстатков");
	ОстаткиПоСчету0803 = ЭтоВводОстатков
		И СтрокаТабличнойЧасти.СчетУчета = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств");
		
	Если ЭтоУслуги Тогда
		ПрослеживаемыйТовар = Ложь;
	Иначе
		ПрослеживаемыйТовар = СтрокаТабличнойЧасти.ПрослеживаемыйТовар;
	КонецЕсли;
		
	Если ЭтоУслуги Или ПрослеживаемыйТовар Или ОстаткиПоСчету0803
		И НЕ ЭтоВвозИзЕАЭС Тогда
		
		Если ЕстьПодсказкаРНПТ Тогда
			СтрокаТабличнойЧасти.ПодсказкаРНПТ = "РНПТ:";
		КонецЕсли;
		Если ЭтоВводОстатков Тогда
			СтрокиСРНПТ = Объект.СведенияПрослеживаемости.НайтиСтроки(Новый Структура("Ключ", СтрокаТабличнойЧасти.Ключ));
		ИначеЕсли ЭтоКорректировка Тогда
			СтрокиСРНПТ = Объект.СведенияПрослеживаемости.НайтиСтроки(Новый Структура("ИдентификаторСтроки, ЭтоСтрокаСИсходнымиРНПТ", 
				СтрокаТабличнойЧасти.ИдентификаторСтроки, Ложь));
			СтрокиСРНПТДо = Объект.СведенияПрослеживаемости.НайтиСтроки(Новый Структура("ИдентификаторСтроки, ЭтоСтрокаСИсходнымиРНПТ", 
				СтрокаТабличнойЧасти.ИдентификаторСтроки, Истина));
		Иначе
			СтрокиСРНПТ = Объект.СведенияПрослеживаемости.НайтиСтроки(Новый Структура("ИдентификаторСтроки", СтрокаТабличнойЧасти.ИдентификаторСтроки));
		КонецЕсли;
		
		КоличествоРНПТ = СтрокиСРНПТ.Количество();
		Если КоличествоРНПТ = 0 Тогда
			Если ЭтоПереходныйПериод Тогда
				СтрокаТабличнойЧасти.РНПТ = Строка(СтрокаТабличнойЧасти.НомерГТД);
			Иначе
				СтрокаТабличнойЧасти.РНПТ = "";
			КонецЕсли;
		ИначеЕсли КоличествоРНПТ = 1 Тогда
			СтрокаТабличнойЧасти.РНПТ = СокрЛП(Строка(СтрокиСРНПТ[0].РНПТ));
		Иначе
			СтрокаТабличнойЧасти.РНПТ = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 и еще %2'"),
			СокрЛП(Строка(СтрокиСРНПТ[0].РНПТ)),
			КоличествоРНПТ-1);
		КонецЕсли;
		
		Если ЭтоКорректировка Тогда
			// Заполним РНПТ исходного документа.
			КоличествоРНПТДо = СтрокиСРНПТДо.Количество();
			Если КоличествоРНПТДо = 0 Тогда
				Если ЭтоПереходныйПериод Тогда
					СтрокаТабличнойЧасти.РНПТДо = Строка(СтрокаТабличнойЧасти.НомерГТДДоИзменения);
				Иначе
					СтрокаТабличнойЧасти.РНПТДо = "";
				КонецЕсли;
			ИначеЕсли КоличествоРНПТДо = 1 Тогда
				СтрокаТабличнойЧасти.РНПТДо = СокрЛП(Строка(СтрокиСРНПТДо[0].РНПТ));
			Иначе
				СтрокаТабличнойЧасти.РНПТДо = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 и еще %2'"),
				СокрЛП(Строка(СтрокиСРНПТДо[0].РНПТ)),
				КоличествоРНПТДо-1);
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ЕстьПодсказкаРНПТ Тогда
		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.СтранаПроисхождения) Тогда
			СтрокаТабличнойЧасти.ПодсказкаРНПТ = "ТД:";
		Иначе
			СтрокаТабличнойЧасти.ПодсказкаРНПТ = "";
		КонецЕсли;
		СтрокаТабличнойЧасти.РНПТ = Строка(СтрокаТабличнойЧасти.НомерГТД);
		Если ЭтоКорректировка Тогда
			СтрокаТабличнойЧасти.РНПТДо = Строка(СтрокаТабличнойЧасти.НомерГТДДоИзменения);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьПредставлениеРНПТОС(Форма, СтрокаТабличнойЧасти) Экспорт
	Объект = Форма.Объект;
	ДокументСсылка = Объект.Ссылка;
	ЭтоСписаниеОС = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.СписаниеОС");
	ЭтоВводОстатков = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВводНачальныхОстатков");
	РНПТ = "";
	Если ЭтоСписаниеОС Тогда
		СтрокиСРНПТ = Объект.СведенияПрослеживаемости.НайтиСтроки(Новый Структура("ИдентификаторСтроки", СтрокаТабличнойЧасти.КлючСтроки));
	ИначеЕсли ЭтоВводОстатков Тогда 
		СтрокиСРНПТ = Объект.СведенияПрослеживаемости.НайтиСтроки(Новый Структура("Ключ", СтрокаТабличнойЧасти.Ключ));
	Иначе
		СтрокиСРНПТ = Объект.СведенияПрослеживаемости.НайтиСтроки(Новый Структура("ИдентификаторСтроки", СтрокаТабличнойЧасти.ИдентификаторСтроки));
	КонецЕсли;

	КоличествоРНПТ = СтрокиСРНПТ.Количество();
	Если КоличествоРНПТ = 0 Тогда
		СтрокаТабличнойЧасти.РНПТ = "";
	ИначеЕсли КоличествоРНПТ = 1 Тогда
		СтрокаТабличнойЧасти.РНПТ = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 - %2'"),
		СокрЛП(Строка(СтрокиСРНПТ[0].СтранаПроисхождения)),
		СокрЛП(Строка(СтрокиСРНПТ[0].РНПТ)));
	Иначе
		СтрокаТабличнойЧасти.РНПТ = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 - %2 и еще %3'"),
		СокрЛП(Строка(СтрокиСРНПТ[0].СтранаПроисхождения)),
		СокрЛП(Строка(СтрокиСРНПТ[0].РНПТ)),
		КоличествоРНПТ-1);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти