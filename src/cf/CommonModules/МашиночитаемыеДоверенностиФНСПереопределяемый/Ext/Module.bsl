///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// При заполнении налоговых органов действия.
// 
// Параметры:
//  Организации - Массив, Неопределено
//  НалоговыеОрганыДействия - ТаблицаЗначений
//
Процедура ПриЗаполненииНалоговыхОргановДействия(Организации, НалоговыеОрганыДействия) Экспорт
	ИнтерфейсыВзаимодействияБРОВызовСервера.ПриЗаполненииНалоговыхОргановДействия(Организации, НалоговыеОрганыДействия);
КонецПроцедуры

// Вызывается в форме машиночитаемой доверенности для заполнения реквизитов организации при выборе доверителя и представителя,
// если выбран вид представителя/доверителя "Организация".
// 
// Параметры:
//  Организация - ОпределяемыйТип.Организация - ссылка на организацию, реквизиты которой надо заполнить.
//  Реквизиты - Структура:
//                * ЭтоИндивидуальныйПредприниматель - Булево
//                * ЭтоИностраннаяОрганизация - Булево
//                * ЭтоФилиал - Булево
//                * НаименованиеПолное - Строка
//                * НаименованиеСокращенное - Строка
//                * ИНН - Строка
//                * КПП - Строка
//                * ОГРН - Строка
//                * ЭлектроннаяПочта - Строка
//                * ЭлектроннаяПочтаЗначение - Строка - в формате JSON, как его возвращает
//                  функция КонтактнаяИнформацияОбъекта общего модуля УправлениеКонтактнойИнформацией.
//                * Телефон - Строка
//                * ТелефонЗначение - Строка - в формате JSON, как его возвращает
//                  функция КонтактнаяИнформацияОбъекта общего модуля УправлениеКонтактнойИнформацией.
//                Заполняются для иностранной организации:
//                * НомерЗаписиОбАккредитации - Строка
//                * СтранаРегистрации - СправочникСсылка.СтраныМира
//                * СтранаРегистрацииКод - Строка
//                * РегистрационныйНомерВСтранеРегистрации - Строка
//                * НаименованиеРегистрирующегоОргана - Строка
//                * КодНалогоплательщикаВСтранеРегистрации - Строка
//                * ФактическийАдрес - Строка
//                * ФактическийАдресЗначение - Строка - в формате JSON, как его возвращает
//                  функция КонтактнаяИнформацияОбъекта общего модуля УправлениеКонтактнойИнформацией.
//                * ЮридическийАдресВСтранеРегистрации - Строка
//                * ЮридическийАдресВСтранеРегистрацииЗначение - Строка - в формате JSON, как его возвращает
//                  функция КонтактнаяИнформацияОбъекта общего модуля УправлениеКонтактнойИнформацией.
//                Заполняются для российской организации:
//                * НаименованиеУчредительногоДокумента - Строка
//                * ЮридическийАдрес - Строка
//                * ЮридическийАдресЗначение - Строка - в формате JSON, как его возвращает
//                  функция КонтактнаяИнформацияОбъекта общего модуля УправлениеКонтактнойИнформацией.
//                Заполняются для филиала:
//                * РегистрационныйНомерФилиала - Строка
//                Данные о физическом лице с правом действия без доверенности:
//                * ЛицоБезДоверенности - ОпределяемыйТип.ФизическоеЛицо
//                * РеквизитыЛицаБезДоверенности - см. ПриЗаполненииРеквизитовФизическогоЛица.Реквизиты
//
//  СтандартнаяОбработка - Булево - установите в Ложь, если нужно отменить заполнение реквизитов из подсистемы Организации
//
Процедура ПриЗаполненииРеквизитовОрганизации(Организация, Реквизиты, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Организация) <> Тип("СправочникСсылка.Организации") Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Организация);
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, 
		"ГоловнаяОрганизация,ИндивидуальныйПредприниматель");
	
	Реквизиты.НаименованиеСокращенное = СведенияОбОрганизации.СокращенноеНаименование;
	Реквизиты.НаименованиеПолное = СведенияОбОрганизации.ПолноеНаименование;
	Реквизиты.ЭтоИндивидуальныйПредприниматель = 
		СведенияОбОрганизации.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
	
	Реквизиты.ЭтоФилиал = ЗначениеЗаполнено(РеквизитыОрганизации.ГоловнаяОрганизация)
		И РеквизитыОрганизации.ГоловнаяОрганизация <> Организация;
	
	Реквизиты.СтранаРегистрации = СведенияОбОрганизации.СтранаРегистрации;
	
	Если СведенияОбОрганизации.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
		Реквизиты.ЛицоБезДоверенности = РеквизитыОрганизации.ИндивидуальныйПредприниматель;
	Иначе
		Если ЗначениеЗаполнено(СведенияОбОрганизации.Руководитель) Тогда
			Реквизиты.ЛицоБезДоверенности = СведенияОбОрганизации.Руководитель;
			ДолжностьЛицаБезДоверенности = СведенияОбОрганизации.ДолжностьРуководителяПредставление;
		КонецЕсли;
		Реквизиты.КПП = СведенияОбОрганизации.КПП;
	КонецЕсли;
	
	Реквизиты.ИНН  = СведенияОбОрганизации.ИНН;
	Реквизиты.ОГРН = СведенияОбОрганизации.ОГРН;
	
	Если ЗначениеЗаполнено(СведенияОбОрганизации.Email) Тогда
		Реквизиты.ЭлектроннаяПочта = СведенияОбОрганизации.Email;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СведенияОбОрганизации.ЮридическийАдрес) Тогда
		Реквизиты.ЮридическийАдресЗначение = СведенияОбОрганизации.ЗначениеJSONЮридическийАдрес;
		Реквизиты.ЮридическийАдрес = СведенияОбОрганизации.ЮридическийАдрес;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СведенияОбОрганизации.Телефоны) Тогда
		Реквизиты.ТелефонЗначение = СведенияОбОрганизации.ЗначениеJSONТелефоны;
		Реквизиты.Телефон = СведенияОбОрганизации.Телефоны;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Реквизиты.ЛицоБезДоверенности) Тогда
		РеквизитыЛицаБезДоверенности = МашиночитаемыеДоверенностиФНС.РеквизитыПредставителяОрганизации(
			Реквизиты.ЛицоБезДоверенности, Реквизиты.ЭтоИндивидуальныйПредприниматель, ДолжностьЛицаБезДоверенности);
		МашиночитаемыеДоверенностиФНСПереопределяемый.ПриЗаполненииРеквизитовФизическогоЛица(Реквизиты.ЛицоБезДоверенности, РеквизитыЛицаБезДоверенности);
		Реквизиты.РеквизитыЛицаБезДоверенности = РеквизитыЛицаБезДоверенности;
	КонецЕсли;
	
КонецПроцедуры

// Вызывается в форме машиночитаемой доверенности для заполнения реквизитов физического лица при выборе доверителя и представителя,
// если выбран вид представителя/доверителя "Физическое лицо".
// 
// Параметры:
//  ФизическоеЛицо - ОпределяемыйТип.ФизическоеЛицо - ссылка на физлицо, реквизиты которого надо заполнить.
//  Реквизиты - Структура:
//               * ЭтоИндивидуальныйПредприниматель - Булево
//               * ЭтоФизическоеЛицо - Булево
//               * ЭтоДолжностноеЛицо - Булево
//               * ДолжностьЛицаДоверителя - Строка
//               * Фамилия - Строка
//               * Имя - Строка
//               * Отчество - Строка
//               * Пол - Число - 1 - мужской, 2 - женский
//               * ИННФЛ - Строка
//               * СтраховойНомерПФР - Строка
//               * АдресРегистрации - Строка
//               * АдресРегистрацииЗначение - Строка - в формате JSON, как его возвращает
//                  функция КонтактнаяИнформацияОбъекта общего модуля УправлениеКонтактнойИнформацией.
//               * ЭлектроннаяПочта - Строка
//               * ЭлектроннаяПочтаЗначение - Строка - в формате JSON, как его возвращает
//                  функция КонтактнаяИнформацияОбъекта общего модуля УправлениеКонтактнойИнформацией.
//               * Телефон - Строка
//               * ТелефонЗначение - Строка - в формате JSON, как его возвращает
//                  функция КонтактнаяИнформацияОбъекта общего модуля УправлениеКонтактнойИнформацией.
//               * ДатаРождения - Дата
//               * ДокументВид - Строка
//               * ДокументНомер - Строка
//               * ДокументКемВыдан - Строка
//               * ДокументДатаВыдачи - Строка
//               * ДокументКодПодразделения - Строка
//               * ДокументСрокДействия - Строка
//               * Гражданство - СправочникСсылка.СтраныМира
//               * БезГражданства - Булево
//               * МестоРождения - Строка
//               * НомерЗаписиЕдиногоРегистраНаселения - Строка
//
Процедура ПриЗаполненииРеквизитовФизическогоЛица(ФизическоеЛицо, Реквизиты) Экспорт
	
	Если Не ЗначениеЗаполнено(ФизическоеЛицо) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ФизическоеЛицо) <> Тип("СправочникСсылка.ФизическиеЛица") Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеФизическогоЛица = УчетЗарплаты.ДанныеФизическихЛиц(Неопределено, ФизическоеЛицо, ТекущаяДатаСеанса());
	
	Если ДанныеФизическогоЛица.Пол = Перечисления.ПолФизическогоЛица.Мужской Тогда
		Реквизиты.Пол = 1;
		
	ИначеЕсли ДанныеФизическогоЛица.Пол = Перечисления.ПолФизическогоЛица.Женский Тогда
		Реквизиты.Пол = 2;
	КонецЕсли;
	
	Реквизиты.ИННФЛ = ДанныеФизическогоЛица.ИНН;
	
	Реквизиты.Фамилия = ДанныеФизическогоЛица.Фамилия;
	Реквизиты.Имя = ДанныеФизическогоЛица.Имя;
	Реквизиты.Отчество = ДанныеФизическогоЛица.Отчество;
	Реквизиты.ДатаРождения = ДанныеФизическогоЛица.ДатаРождения;
	Реквизиты.МестоРождения = ПерсонифицированныйУчетКлиентСервер.ПредставлениеМестаРождения(ДанныеФизическогоЛица.МестоРождения);
	Реквизиты.Гражданство = ДанныеФизическогоЛица.Страна;
	Реквизиты.БезГражданства = Ложь;
	Реквизиты.СтраховойНомерПФР = ДанныеФизическогоЛица.СтраховойНомерПФР;
	Если ЗначениеЗаполнено(ДанныеФизическогоЛица.ВидДокумента) Тогда
		Реквизиты.ДокументВид = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеФизическогоЛица.ВидДокумента, "КодМВД");
	КонецЕсли;
	Реквизиты.ДокументНомер            = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 %2'"), ДанныеФизическогоЛица.Серия, ДанныеФизическогоЛица.Номер);
	Реквизиты.ДокументКемВыдан         = ДанныеФизическогоЛица.КемВыдан;
	Реквизиты.ДокументКодПодразделения = ДанныеФизическогоЛица.КодПодразделения;
	Реквизиты.ДокументДатаВыдачи       = ДанныеФизическогоЛица.ДатаВыдачи;
	
	АдресаЭлектроннойПочты = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		ФизическоеЛицо, Справочники.ВидыКонтактнойИнформации.EMailФизическиеЛица, , Ложь);
	
	Если ЗначениеЗаполнено(АдресаЭлектроннойПочты) Тогда
		АдресЭлектроннойПочты = АдресаЭлектроннойПочты[0];
		Реквизиты.ЭлектроннаяПочтаЗначение = АдресЭлектроннойПочты.Значение;
		Реквизиты.ЭлектроннаяПочта = АдресЭлектроннойПочты.Представление;
	КонецЕсли;
	
	Телефоны = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		ФизическоеЛицо, Справочники.ВидыКонтактнойИнформации.ТелефонРабочийФизическиеЛица, , Ложь);
	
	Если ЗначениеЗаполнено(Телефоны) Тогда
		Телефон = Телефоны[0];  
		Реквизиты.ТелефонЗначение = Телефон.Значение;
		Реквизиты.Телефон         = Телефон.Представление;
	КонецЕсли;
	
	АдресаРегистрации = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
		ФизическоеЛицо, Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица, , Ложь);
	
	Если ЗначениеЗаполнено(АдресаРегистрации) Тогда
		АдресРегистрации = АдресаРегистрации[0];
		Реквизиты.АдресРегистрацииЗначение = АдресРегистрации.Значение;
		Реквизиты.АдресРегистрации = АдресРегистрации.Представление;
	КонецЕсли;
	
КонецПроцедуры

// Вызывается в форме машиночитаемой доверенности для заполнения реквизитов контрагента при выборе доверителя и представителя,
// если выбран вид представителя/доверителя "Контрагент".
// 
// Параметры:
//  Контрагент - ОпределяемыйТип.Контрагент - ссылка на контрагента, реквизиты которого надо заполнить.
//  Реквизиты - см. ПриЗаполненииРеквизитовОрганизации.Реквизиты
//
Процедура ПриЗаполненииРеквизитовКонтрагента(Контрагент, Реквизиты) Экспорт
	
	Если Не ЗначениеЗаполнено(Контрагент) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Контрагент) <> Тип("СправочникСсылка.Контрагенты") Тогда
		Возврат;
	КонецЕсли;
	
	СведенияОКонтрагенте = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Контрагент);
	
	РеквизитыКонтрагента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Контрагент, 
		"ГоловнойКонтрагент");
	
	Реквизиты.НаименованиеСокращенное = СведенияОКонтрагенте.СокращенноеНаименование;
	Реквизиты.НаименованиеПолное = СведенияОКонтрагенте.ПолноеНаименование;
	Реквизиты.ЭтоИндивидуальныйПредприниматель = 
		СведенияОКонтрагенте.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо;
	
	Реквизиты.ЭтоФилиал = ЗначениеЗаполнено(РеквизитыКонтрагента.ГоловнойКонтрагент)
		И РеквизитыКонтрагента.ГоловнойКонтрагент <> Контрагент;
	
	Реквизиты.СтранаРегистрации = СведенияОКонтрагенте.СтранаРегистрации;
	
	Если СведенияОКонтрагенте.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо Тогда
		Реквизиты.КПП = СведенияОКонтрагенте.КПП;
	КонецЕсли;
	
	Реквизиты.ИНН  = СведенияОКонтрагенте.ИНН;
	Реквизиты.ОГРН = СведенияОКонтрагенте.ОГРН;
	
	Если ЗначениеЗаполнено(СведенияОКонтрагенте.Email) Тогда
		Реквизиты.ЭлектроннаяПочта = СведенияОКонтрагенте.Email;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СведенияОКонтрагенте.ЮридическийАдрес) Тогда
		Реквизиты.ЮридическийАдресЗначение = СведенияОКонтрагенте.ЗначениеJSONЮридическийАдрес;
		Реквизиты.ЮридическийАдрес = СведенияОКонтрагенте.ЮридическийАдрес;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СведенияОКонтрагенте.Телефоны) Тогда
		Реквизиты.ТелефонЗначение = СведенияОКонтрагенте.Телефоны;
		Реквизиты.Телефон = СведенияОКонтрагенте.ЗначениеJSONТелефоны;
	КонецЕсли;
	
КонецПроцедуры

// Для выполнения прикладной проверки подписи по доверенности. Например, проверка соответствия реквизитов доверителя
// контрагенту, указанному в документе, и полномочий подписанта. Результаты проверки сохраняются в информационной базе.
//
// Параметры:
//  ДанныеДоверенности - Структура, ВыборкаИзРезультатаЗапроса:
//   * Ссылка - СправочникСсылка.МашиночитаемыеДоверенности
//   * ПодписанныйОбъект - ОпределяемыйТип.ПодписанныйОбъект - ссылка на подписанный объект.
//   * Полномочия - ТаблицаЗначений,  РезультатЗапроса - содержит реквизиты табличной части Полномочия справочника МашиночитаемыеДоверенности.
//   * Ограничения - ТаблицаЗначений, РезультатЗапроса - содержит реквизиты табличной части Ограничения справочника МашиночитаемыеДоверенности.
//  Сертификат - см. МашиночитаемыеДоверенностиФНС.ОтборДляДоверенностейПоСертификату.Сертификат
//  ПротоколПроверки - Соответствие из КлючИЗначение:
//   * Ключ - Строка - ключ проверки, для проверки полномочий и документа в протокол добавлены значения
//     с ключами "ПроверкаПолномочий" и "ПроверкаДокумента".
//   * Значение - см. МашиночитаемыеДоверенностиФНС.РезультатПроверкиДляПротокола
//
Процедура ПриПроверкеДоверенностиПодписи(ДанныеДоверенности, Сертификат, ПротоколПроверки) Экспорт
	
	
	
КонецПроцедуры

// Переопределяет описание состояния доверенности в реестре Федеральной таможенной службы или другом.
// 
// Параметры:
//  Доверенность - СправочникСсылка.МашиночитаемыеДоверенности
//  РегистрацияВРеестре - Структура:
//   * ПоказыватьРегистрироватьВРеестре - Булево - показывать флажок регистрации в реестре.
//   * ЗаголовокФлажкаРегистрации - Строка - заголовок флажка регистрации в реестре.
//   * ПодсказкаРегистрации - Строка - подсказка флажка регистрации.
//   * ЗарегистрированаВРеестре - Булево
//   * СостояниеРегистрации - Строка, ФорматированнаяСтрока
//   * ПодсказкаСостояния - Строка - подсказка состояния регистрации. 
//   * Картинка - Строка - имя картинки статуса в строке состояния.
//   * ПолномочияПриОткрытии - Неопределено, Массив из Строка - список кодов полномочий, переданных в параметре при открытии
//     формы. Можно анализировать и не отображать флажок регистрации, если полномочия относятся к другой подсистеме.
//   * ВыбранныеПолномочия - Структура:
//     ** Полномочия -  ТаблицаЗначений
//     ** Ограничения - ТаблицаЗначений
//   * КодыПолномочийДляДобавления - Массив из Строка - коды полномочий, которые предлагать добавить при выборе флажка регистрации.
//     Если одно из них уже выбрано, предложение о добавлении не выводится.
//
Процедура ПриПолученииСтатусаРегистрации(Доверенность, РегистрацияВРеестре) Экспорт
	
	ИнтерфейсыВзаимодействияБРОВызовСервера.ПриПолученииСтатусаРегистрации(Доверенность, РегистрацияВРеестре);
	
КонецПроцедуры

// Переопределяет процедуру регистрации в реестре Федеральной таможенной службы или другом.
// 
// Параметры:
//  Доверенность - СправочникСсылка.МашиночитаемыеДоверенности
//
Процедура ПриРегистрацииДоверенности(Доверенность) Экспорт
	
	ИнтерфейсыВзаимодействияБРОВызовСервера.ПриРегистрацииДоверенности(Доверенность);
	
КонецПроцедуры

// Переопределяет процедуру настроек формы списка для реестра Федеральной таможенной службы или другого.
// 
// Параметры:
//  Настройки - Структура:
//   * ПоказыватьСтатусВФормеСписка - Булево - показывать статус в реестре в форме списка.
//   * ЗаголовокКолонкиСтатуса      - Строка - заголовок колонки статуса в форме списка.
//   * КартинкаКолонкиСтатуса       - Картинка - картинка колонки статуса в форме списка.
//   * КоллекцияКартинокДляСтроки   - Картинка - коллекция для картинки строки.
//
Процедура ПриОпределенииНастроек(Настройки) Экспорт
	
	ИнтерфейсыВзаимодействияБРОВызовСервера.ПриОпределенииНастроек(Настройки);
	
КонецПроцедуры

// Переопределяет процедуру получения статусов доверенностей для реестра Федеральной таможенной службы или другого.
// 
// Параметры:
//  Доверенности - Массив из СправочникСсылка.МашиночитаемыеДоверенности
//  Статусы - Соответствие из КлючИЗначение:
//   * Ключ     - СправочникСсылка.МашиночитаемыеДоверенности
//   * Значение - Структура:
//                 ** ИндексКартинки - Число - картинка колонки статуса в форме списка.
//                 ** Статус         - Строка
//
Процедура ПриПолученииСтатусов(Доверенности, Статусы) Экспорт
	
	ИнтерфейсыВзаимодействияБРОВызовСервера.ПриПолученииСтатусов(Доверенности, Статусы);
	
КонецПроцедуры

#КонецОбласти
