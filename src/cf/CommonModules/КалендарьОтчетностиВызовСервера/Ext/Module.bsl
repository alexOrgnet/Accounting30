#Область ПрограммныйИнтерфейс

// Формирует из параметров навигационной ссылки параметры открытия помощника
// подготовки регламентированного отчета, уплаты налога.
//
// Параметры:
//   ПараметрыНавигационнойСсылки - Структура - см. КалендарьОтчетностиКлиентСервер.НовыйПараметрыНавигационнойСсылки
//
// Возвращаемое значение:
//   Структура - см. КалендарьОтчетностиКлиентСервер.НовыйПараметрыПомощника
//
Функция ПодготовитьПараметрыПомощника(ПараметрыНавигационнойСсылки) Экспорт
	
	ПараметрыПомощника = КалендарьОтчетностиКлиентСервер.НовыйПараметрыПомощника();
	ПустоеЗначениеПараметра = КалендарьОтчетностиКлиентСервер.ПустоеЗначениеПараметраНавигационнойСсылки();
	
	Для Каждого Параметр Из ПараметрыНавигационнойСсылки Цикл
		ПараметрыНавигационнойСсылки[Параметр.Ключ] =
			РаскодироватьСтроку(Параметр.Значение, СпособКодированияСтроки.КодировкаURL);
	КонецЦикла;
	
	Попытка
		ПараметрыПомощника.Организация = Справочники.Организации.ПолучитьСсылку(
			Новый УникальныйИдентификатор(ПараметрыНавигационнойСсылки.organization));
			
		РегистрацияФНС = ПараметрыНавигационнойСсылки.registration;
		ПараметрРегистрацияЗаполнен = ЗначениеЗаполнено(РегистрацияФНС) И РегистрацияФНС <> ПустоеЗначениеПараметра;
		ПараметрыПомощника.РегистрацияВНалоговомОргане = ?(ПараметрРегистрацияЗаполнен,
			Справочники.РегистрацииВНалоговомОргане.РегистрацияВНалоговомОргане(
				ПараметрыПомощника.Организация,
				ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыПомощника.Организация, "КПП"),
				ПараметрыНавигационнойСсылки.registration),
			Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
				
		ПараметрыПомощника.Срок = Дата(ПараметрыНавигационнойСсылки.limit);
		ПараметрыПомощника.ПериодСобытия = КонецДня(Дата(ПараметрыНавигационнойСсылки.period));
		ПараметрыПомощника.КонецПериода = ПараметрыПомощника.ПериодСобытия;
		ПараметрыПомощника.Наименование = ПараметрыНавигационнойСсылки.description;
		ПараметрыПомощника.ИдентификаторЗадачи = ПараметрыНавигационнойСсылки.task_id;
		ПараметрыПомощника.ЭтоУведомление = ПараметрыНавигационнойСсылки.is_notification = "true";
		
		// Календарь отчетности работает с 2-мя видами "правил":
		// ПравилаПредставленияОтчетовУплатыНалогов и ПравилаФинОтчетности.
		// Из общего числа обрабатываемых правил доля у "ПравилаФинОтчетности" незначительна.
		// В приоритете ищем значение "ПравилаПредставленияОтчетовУплатыНалогов'
		ИдентификаторПравила = ПараметрыНавигационнойСсылки.rule_id;
		ПараметрПравилоЗаполнен = ЗначениеЗаполнено(ИдентификаторПравила) И ИдентификаторПравила <> ПустоеЗначениеПараметра;
		ПараметрыПомощника.Правило = ?(ПараметрПравилоЗаполнен,
			Справочники.ПравилаПредставленияОтчетовУплатыНалогов.НайтиПоИдентификатору(
				ПараметрыНавигационнойСсылки.task_id,
				ИдентификаторПравила),
			Справочники.ПравилаПредставленияОтчетовУплатыНалогов.ПустаяСсылка());
				
		Если Не ЗначениеЗаполнено(ПараметрыПомощника.Правило) И ПараметрПравилоЗаполнен Тогда
			ПараметрыПомощника.Правило = Справочники.ПравилаФинОтчетности.НайтиПоКоду(ИдентификаторПравила);
		КонецЕсли;
		
	Исключение
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'КалендарьОтчетностиНавигационнаяСсылка'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка, ,
			ОбщегоНазначенияБП.ЗначениеВСтрокуJSON(ПараметрыНавигационнойСсылки),
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат Неопределено;
	КонецПопытки;
	
	Возврат ПараметрыПомощника;
	
КонецФункции

// Возвращает идентификатор этого облачного приложения в механизме обмена сообщениями
//
// Возвращаемое значение:
//   Строка - идентификатор приложения
//
Функция ИдентификаторЭтогоПриложения() Экспорт
	
	Возврат СообщенияОблачныхПриложений.ИдентификаторЭтогоПриложения();
	
КонецФункции

#КонецОбласти
