
#Область ПрограммныйИнтерфейс

// Возвращает порядок уплаты взноса за период
//
// Параметры:
//   Организация   - СправочникСсылка.Организации - ИП, который уплачивает взнос
//   Период        - Период, за который оплачивается взнос
//   ВзносСДоходов - Булево - Признак, указывающий на оплату взноса с доходов
//
// Возвращаемое значение:
//   Структура - см. РегистрыСведений.ЗадачиБухгалтера.НовыйРасписание()
//   Неопределено
//
Функция ПорядокУплатыВзноса(Организация, Период, ВзносСДоходов = Ложь) Экспорт
	
	// Пробуем определить правило по списку задач
	ВидНалога = УчетСтраховыхВзносовИП.ВидСтраховогоВзносаИП(ВзносСДоходов);
	
	ПорядокУплаты = РегистрыСведений.ЗадачиБухгалтера.ПорядокУплатыНалогаЗаПериод(Организация, ВидНалога, Период);
	Если ЗначениеЗаполнено(ПорядокУплаты) Тогда
		ПорядокУплаты.Организация = Организация;
		Возврат ПорядокУплаты;
	КонецЕсли;
	
	// Если не удалось определить правило задачам, пробуем определить его по расписанию
	
	ОтборПравил = Справочники.ПравилаПредставленияОтчетовУплатыНалогов.ОтборПравилЗаполнения();
	ОтборПравил.Организация    = Организация;
	ОтборПравил.НачалоИнтервала = НачалоГода(Период) - 1;
	ОтборПравил.КонецИнтервала = ДобавитьМесяц(КонецГода(Период), 12);
	ОтборПравил.Действие = Перечисления.ВидыДействийКалендаряБухгалтера.УплатаНалога;
	ОтборПравил.ИмяЗадачи = ЗадачиБухгалтераКлиентСервер.КодЗадачиСтраховыеВзносыИП();
	
	Расписание = РегистрыСведений.ЗадачиБухгалтера.РасписаниеПоНалогамОтчетамЗаПериод(ОтборПравил);
	Расписание.Сортировать("Срок Возр");
	
	СтрокиОтбора = Расписание.НайтиСтроки(Новый Структура("ПериодСобытия", НачалоДня(КонецГода(Период))));
	
	Для Каждого ТекущаяСтрока Из СтрокиОтбора Цикл
		
		ЭтоПравилоУплатыВзносовСДоходов = УчетСтраховыхВзносовИП.ЭтоПравилоУплатыВзносовСДоходов(ТекущаяСтрока.Правило);
		Если (ВзносСДоходов И ЭтоПравилоУплатыВзносовСДоходов)
			Или (Не ВзносСДоходов И Не ЭтоПравилоУплатыВзносовСДоходов) Тогда
			
			ПорядокУплаты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТекущаяСтрока);
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ПорядокУплаты;
	
КонецФункции

// Возвращает признак упрощенного зачета взносов, подлежащих уплате
// Федеральный закон от 31.07.2023 N 389-ФЗ
//
// Параметры:
//   Организация               - СправочникСсылка.Организации - ИП, который уплачивает фиксированные взносы
//   ПериодСобытия             - Дата - Период, за который оплачиваются фиксированные взносы
//   УчитыватьПереходныйПериод - Булево - Признак, при котором проверяется дата перехода на упрощенный зачет взносов
//
// Возвращаемое значение:
//   Булево
//
Функция УпрощенныйЗачетФиксированныхВзносов(Организация, ПериодСобытия, УчитыватьПереходныйПериод = Истина) Экспорт
	
	Если ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Организация)
		Или УчитыватьПереходныйПериод И УчетСтраховыхВзносовИП.ДатаПереходаНаУпрощенныйЗачетВзносов() > ПериодСобытия Тогда
		
		Возврат Ложь;
	КонецЕсли;
	
	ПериодДействияЗакона = '20230101';
	ПрименяетсяУСНДоходы = УчетнаяПолитика.ПрименяетсяУСНДоходы(Организация, ПериодСобытия);
	ПрименяетсяУСНДоходыМинусРасходы = УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(Организация, ПериодСобытия);
	ПлательщикНДФЛ = УчетнаяПолитика.ПлательщикНДФЛ(Организация, ПериодСобытия);
	
	Если Не ПлательщикНДФЛ И Не ПрименяетсяУСНДоходыМинусРасходы Тогда
		ПрименяетсяПСН = УчетнаяПолитика.ПрименяетсяУСНПатент(Организация, ПериодСобытия);
	Иначе
		// При совмещение с ОСН или УСН доходы минус расходы считаем, что порядок зачета через пополнение ЕНС и резервирование сумм
		ПрименяетсяПСН = Ложь;
	КонецЕсли;
	
	Возврат ПериодСобытия >= ПериодДействияЗакона И (ПрименяетсяУСНДоходы Или ПрименяетсяПСН);
	
КонецФункции

// Возвращает признак уплаты взноса с доходов свыше предела
// Взнос платится в периоды, когда не действует пониженный тариф фиксированных взносов (ст. 430 НК РФ)
//
// Параметры:
//   Организация   - СправочникСсылка.Организации - ИП, для которого необходимо рассчитать признак уплаты взносов с доходов
//   НачалоПериода - Дата - Дата начала периода
//   КонецПериода  - Дата - Дата окончания периода
//
// Возвращаемое значение:
//   Булево
//
Функция УплачиваетсяВзносСДоходов(Организация, НачалоПериода, КонецПериода) Экспорт
	
	Если Не ЗначениеЗаполнено(Организация)
		Или ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Организация)
		Или УчетнаяПолитика.УплачивалсяТолькоНПДЗаПериод(Организация, НачалоПериода, КонецПериода) Тогда
		// Если в периоде платился только НПД, тогда не нужно платить взносы с доходов
		Возврат Ложь;
	КонецЕсли;
	
	// Если учет еще не ведется или передан год до первого года ведения учета,
	// доходы за предыдущие годы заведомо нулевые - взноса не может быть
	ДатаНачалаУчета = Справочники.Организации.ДатаНачалаВеденияУчета(Организация);
	Если ДатаНачалаУчета = Неопределено Или Год(ДатаНачалаУчета) > Год(НачалоПериода) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Если в периоде нужно было платить взносы не по пониженному тарифу, то тогда необходимо рассчитать взнос с доходов за этот период
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ИСТИНА КАК ПоЕдиномуТарифу
	|ИЗ
	|	РегистрСведений.НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС КАК НастройкиУчетаСтраховыхВзносовИП
	|ГДЕ
	|	НастройкиУчетаСтраховыхВзносовИП.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НастройкиУчетаСтраховыхВзносовИП.Организация = &Организация
	|	И НастройкиУчетаСтраховыхВзносовИП.ПлательщикСтраховыхВзносовПФР_ФФОМС
	|	И НЕ НастройкиУчетаСтраховыхВзносовИП.Тариф В (&Тарифы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИСТИНА
	|ИЗ
	|	РегистрСведений.НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМС.СрезПоследних(&НачалоПериода, Организация = &Организация) КАК НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМССрезПоследних
	|ГДЕ
	|	НЕ НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМССрезПоследних.Тариф В (&Тарифы)
	|	И НастройкиУчетаСтраховыхВзносовИП_ПФР_ФФОМССрезПоследних.ПлательщикСтраховыхВзносовПФР_ФФОМС");
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Тарифы", ПониженныеТарифыСтраховыхВзносов());
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

// Возвращает срок оплаты взноса по виду платежа
// п. 2 ст. 432 НК РФ
//
// Параметры:
//   СтраховойПериод      - Дата - Период, за который нужно заплатить взнос
//   ВидПлатежаВГосБюджет - ПеречислениеСсылка.ВидыПлатежейВГосБюджет - Начислено/оплачено, Взносы свыше предела
//
// Возвращаемое значение:
//   Дата
//
Функция СрокОплатыПоВидуПлатежа(СтраховойПериод, ВидПлатежаВГосБюджет = Неопределено) Экспорт
	
	// Срок переносится на ближайший рабочий день, если дата платежа выпадает на выходной и праздничный день
	
	Если ВидПлатежаВГосБюджет = Перечисления.ВидыПлатежейВГосБюджет.ВзносыСвышеПредела Тогда
		// Взнос с доходов оплачивается 1 июля года, следующего за истекшим расчетным периодом
		Возврат СрокУплатыНалогаВБюджет(Год(СтраховойПериод) + 1, 07, 01);
	Иначе
		// Взнос по единому тарифу оплачивается не позднее 31 декабря текущего календарного года
		Возврат СрокУплатыНалогаВБюджет(Год(СтраховойПериод), 12, 31);
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПониженныеТарифыСтраховыхВзносов() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить(Перечисления.ИПТарифыФиксированныхВзносов.ВоенныйПенсионер); // п.1.4 ст.430 НК РФ
	Результат.Добавить(Перечисления.ИПТарифыФиксированныхВзносов.УчастникСЭЗнаНТ); // п.1.3 ст.430 НК РФ
	
	Возврат Результат
	
КонецФункции

Функция СрокУплатыНалогаВБюджет(ГодУплаты, МесяцУплаты, ДеньУплаты)
	
	ДатаУплатыНалога = Дата(ГодУплаты, МесяцУплаты, ДеньУплаты);
		
	// Перенесем на рабочие дни
	ПроизводственныйКалендарь = КалендарныеГрафики.ОсновнойПроизводственныйКалендарь();
		
	Если Не ЗначениеЗаполнено(ПроизводственныйКалендарь) Тогда
		Возврат КонецДня(ДатаУплатыНалога);
	КонецЕсли; 
		
	ИсходныеДаты = Новый Массив;
	ИсходныеДаты.Добавить(ДатаУплатыНалога);
		
	ГрафикПереноса = КалендарныеГрафики.ДатыБлижайшихРабочихДней(
		ПроизводственныйКалендарь, 
		ИсходныеДаты,
		Ложь,
		Ложь,
		Истина);
	
	ДатаПереноса = ?(ЗначениеЗаполнено(ГрафикПереноса[ДатаУплатыНалога]), 
		ГрафикПереноса[ДатаУплатыНалога], ДатаУплатыНалога);
	
	Возврат КонецДня(ДатаПереноса);
	
КонецФункции

#КонецОбласти