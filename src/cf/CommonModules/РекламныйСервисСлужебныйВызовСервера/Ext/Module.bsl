// @strict-types

#Область СлужебныйПрограммныйИнтерфейс

// Рекламный носитель нажатие.
// 
// Параметры:
//  ИдентификаторРекламы - Строка - идентификатор рекламы.
//  ИмяФормы - Строка - полное имя формы вызова.
//
Процедура МакетРекламныйСервисНажатие(Знач ИдентификаторРекламы, Знач ИмяФормы) Экспорт
	РекламныйСервисСлужебный.МакетРекламныйСервисНажатие(ИдентификаторРекламы, ИмяФормы);
КонецПроцедуры

// см. ОбщегоНазначенияКлиентПереопределяемый.ПослеНачалаРаботыСистемы
Процедура ПослеНачалаРаботыСистемы() Экспорт
	РекламныйСервисСлужебный.ПослеНачалаРаботыСистемы();
КонецПроцедуры

// Получить данные результата и зафиксировать показ рекламы в фоне.
// 
// Параметры:
//  АдресРезультата - Строка
//  СписокПоказаннойРекламыФормы - см. РекламныйСервисСлужебныйКлиент.НовыйСписокПоказаннойРекламыФормы
// 
// Возвращаемое значение:
//  Строка - текст HTML документа.
//
Функция ПолучитьДанныеРезультатаЗафиксироватьПоказ(Знач АдресРезультата, Знач СписокПоказаннойРекламыФормы) Экспорт
	
	ДанныеРезультата = ПолучитьИзВременногоХранилища(АдресРезультата); // см. РекламныйСервисСлужебный.НовыйРезультатФормированияРекламногоМакета
	
	СписокПоказаннойРекламыФормы.СписокРекламы = ДанныеРезультата.ИдентификаторыРекламы;
	РекламныйСервисСлужебный.ЗафиксироватьПоказРекламыВФоне(СписокПоказаннойРекламыФормы);
	
	Возврат ДанныеРезультата.ТекстHTML;
	
КонецФункции

// Рекламный носитель команда закрыть рекламу.
Процедура КомандаЗакрытьРекламу() Экспорт
	РекламныйСервисСлужебный.КомандаЗакрытьРекламу();
КонецПроцедуры

#КонецОбласти