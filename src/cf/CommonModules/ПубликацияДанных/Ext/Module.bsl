#Область ПрограммныйИнтерфейс

// Публикует данные по переданному правилу
// 
// Параметры:
//  ИсходныеДанные - Структура - Данные для публикации
//  ПравилоПубликации - Строка таблицы значений
//     * Идентификатор1С - Строка - Внутренний идентификатор правила
//     * ПубликуемыйИдентификатор - Строка - Публикуемый идентификатор правила
//  ПубликуемыеДанные - Структура
//
Процедура ОпубликоватьЗначениеПоПравилу(ИсходныеДанные, ПравилоПубликации, ПубликуемыеДанные) Экспорт
	
	ПубликуемоеЗначение = ИсходныеДанные[ПравилоПубликации.Идентификатор1С];
	
	Если ТипЗнч(ПубликуемоеЗначение) = Тип("Дата") Тогда
		Если ЗначениеЗаполнено(ПубликуемоеЗначение) Тогда
			ПубликуемоеЗначение = XMLСтрока(ПубликуемоеЗначение);
		Иначе
			ПубликуемоеЗначение = "";
		КонецЕсли;
	КонецЕсли;

	ПубликуемыеДанные.Вставить(ПравилоПубликации.ПубликуемыйИдентификатор, ПубликуемоеЗначение);
	
КонецПроцедуры

 // Возвращает новую таблицу значений для правил публикации
 // 
 // Возвращаемые значения
 //  Правила - Таблица значений
 //     * Идентификатор1С - Строка - Внутренний идентификатор правила
 //     * ПубликуемыйИдентификатор - Строка - Публикуемый идентификатор правила
 //
Функция НовыеПравилаПубликации() Экспорт
	
	Правила = Новый ТаблицаЗначений;
	
	ОписаниеТипаСтрока = ОбщегоНазначения.ОписаниеТипаСтрока(0);
	
	Правила.Колонки.Добавить("Идентификатор1С",          ОписаниеТипаСтрока);
	Правила.Колонки.Добавить("ПубликуемыйИдентификатор", ОписаниеТипаСтрока);
	
	Возврат Правила;
	
КонецФункции

// Добавляет правило публикации в таблицу Правила
// 
// Параметры:
//  Правила - Таблица значений - содержит правила публикации
//  Идентификатор1С - Строка - Внутренний идентификатор
//  ПубликуемыйИдентификатор - Строка - Публикуемый идентификатор
//
Процедура ДобавитьПравилоПубликации(Правила, Идентификатор1С, ПубликуемыйИдентификатор) Экспорт
	
	НовоеПравило = Правила.Добавить();
	
	НовоеПравило.Идентификатор1С          = Идентификатор1С;
	НовоеПравило.ПубликуемыйИдентификатор = ПубликуемыйИдентификатор;
	
КонецПроцедуры

#КонецОбласти