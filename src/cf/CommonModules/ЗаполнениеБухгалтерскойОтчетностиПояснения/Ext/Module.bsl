////////////////////////////////////////////////////////////////////////////////
// ЗАПОЛНЕНИЕ БУХГАЛТЕРСКОЙ ОТЧЕТНОСТИ.
// Модуль применяется для автоматического заполнения пояснений к бухгалтерскому
// балансу и отчету о финансовых результатах.
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

#Область ФормаОтчета2011Кв4_Пояснения1

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения1(КонтекстВыполнения) Экспорт
	
	Организация = КонтекстВыполнения.Организация;
	
	// Вспомогательные значения периодов.
	НачалоПериодаОтчета = КонтекстВыполнения.НачалоПериодаОтчета;
	ДатаКонцаПериодаОтчета = КонтекстВыполнения.КонецПериодаОтчета;
	КонецПериодаОтчета = Новый МоментВремениСУточнениемПериода(ДатаКонцаПериодаОтчета, 0);
	
	НачалоПериодаПредыдущегоГода = ДобавитьМесяц(КонтекстВыполнения.НачалоПериодаОтчета, -12);
	ДатаКонцаПредыдущегоГода = КонецГода(НачалоПериодаПредыдущегоГода);
	КонецПериодаПредыдущегоГода = Новый МоментВремениСУточнениемПериода(
		ДатаКонцаПредыдущегоГода, БухгалтерскийУчет.ВерхняяГраницаУточненияПериода());
	
	НачалоПериодаГодаПредшествующегоПредыдущему = ДобавитьМесяц(КонтекстВыполнения.НачалоПериодаОтчета, -24);
	ДатаКонцаГодаПредшествующегоПредыдущему = КонецГода(НачалоПериодаГодаПредшествующегоПредыдущему);
	КонецПериодаГодаПредшествующегоПредыдущему = Новый МоментВремениСУточнениемПериода(
		ДатаКонцаГодаПредшествующегоПредыдущему, БухгалтерскийУчет.ВерхняяГраницаУточненияПериода());
	
	ЗаполнятьПредыдущиеПериоды = НЕ РасширенныйПериодОтчета(НачалоПериодаОтчета);
	
	БухгалтерскиеВеличины = Новый Структура;
	
	НастройкиПолученияБухитогов = Новый Структура;
	НастройкиПолученияБухитогов.Вставить("Организация",   Организация);
	НастройкиПолученияБухитогов.Вставить("НачалоПериода", НачалоПериодаОтчета);
	НастройкиПолученияБухитогов.Вставить("КонецПериода",  КонецПериодаОтчета);
	
	СальдоИОборотыПоСчетам = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
	ОборотыМеждуСчетами    = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетами(НастройкиПолученияБухитогов);
	
	БухгалтерскиеВеличины.Вставить("СиО", СальдоИОборотыПоСчетам);
	БухгалтерскиеВеличины.Вставить("ОмС", ОборотыМеждуСчетами);
	
	Если ЗаполнятьПредыдущиеПериоды Тогда
		НастройкиПолученияБухитогов.Вставить("НачалоПериода", НачалоПериодаПредыдущегоГода);
		НастройкиПолученияБухитогов.Вставить("КонецПериода",  КонецПериодаПредыдущегоГода);
		
		СальдоИОборотыПоСчетам = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
		ОборотыМеждуСчетами    = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетами(НастройкиПолученияБухитогов);
		
		БухгалтерскиеВеличины.Вставить("СиО_Год_1", СальдоИОборотыПоСчетам);
		БухгалтерскиеВеличины.Вставить("ОмС_Год_1", ОборотыМеждуСчетами);
		
		НастройкиПолученияБухитогов.Вставить("НачалоПериода", НачалоПериодаГодаПредшествующегоПредыдущему);
		НастройкиПолученияБухитогов.Вставить("КонецПериода",  КонецПериодаГодаПредшествующегоПредыдущему);
		
		СальдоИОборотыПоСчетам = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
		ОборотыМеждуСчетами    = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетами(НастройкиПолученияБухитогов);
		
		БухгалтерскиеВеличины.Вставить("СиО_Год_2", СальдоИОборотыПоСчетам);
		БухгалтерскиеВеличины.Вставить("ОмС_Год_2", ОборотыМеждуСчетами);
		
	КонецЕсли;
	
	КонтекстВыполнения.Вставить("БИ", БухгалтерскиеВеличины);
	
	ПроцессорПоказателя = НовыйПроцессорПоказателя();
	ПроцессорПоказателя.СчетаСРеквизитами = КонтекстВыполнения.СчетаСРеквизитами;
	ПроцессорПоказателя.ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	ПроцессорПоказателя.Организация = КонтекстВыполнения.Организация;
	ПроцессорПоказателя.ИмяРаздела = "Пояснения1";
	
	// Таблица 1.1.
	
	КонтекстСтроки = Новый Структура;
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ТаблицаДопСтрок5100и5110 = КонтекстВыполнения.ТаблицаЗначенийДопСтрок5100и5110;
	
	ЗаголовкиГраф = Новый Соответствие;
	ЗаголовкиГраф.Вставить("04", "Первоначальная стоимость на начало года");
	ЗаголовкиГраф.Вставить("05", "Накопленная амортизация на начало года");
	ЗаголовкиГраф.Вставить("06", "Изменения за период - поступило");
	ЗаголовкиГраф.Вставить("07", "Изменения за период - Выбыло - первоначальная стоимость");
	ЗаголовкиГраф.Вставить("08", "Изменения за период - Выбыло - накопленная амортизация и убытки от обесценения");
	ЗаголовкиГраф.Вставить("09", "Изменения за период - начислено амортизации");
	ЗаголовкиГраф.Вставить("10", "Изменения за период - убыток от обесценения");
	ЗаголовкиГраф.Вставить("11", "Изменения за период - Переоценка - Первоначальная стоимость");
	ЗаголовкиГраф.Вставить("12", "Изменения за период - Переоценка - Накопленная амортизация");
	ЗаголовкиГраф.Вставить("13", "Первоначальная стоимость на конец периода");
	ЗаголовкиГраф.Вставить("14", "Накопленная амортизация и убытки от обесценения на конец периода");
	
	КонтекстСтроки.Вставить("НомерСтроки", "5100");
	КонтекстСтроки.Вставить("ЗаголовкиГраф", ЗаголовкиГраф);
	КонтекстСтроки.Вставить("ДатаНачалаПериодаОтчета", НачалоПериодаОтчета);
	КонтекстСтроки.Вставить("ДатаКонцаПериодаОтчета",  КонецПериодаОтчета);
	КонтекстСтроки.Вставить("СальдоИОборотыПоСчетам",  КонтекстВыполнения.БИ.СиО);
	КонтекстСтроки.Вставить("ОборотыМеждуСчетами",     КонтекстВыполнения.БИ.ОмС);
	КонтекстСтроки.Вставить("ТаблицаДополнительныхСтрок", ТаблицаДопСтрок5100и5110);
	
	РассчитанныеЗначения0 = Новый Соответствие;
	РассчитанныеЗначения0.Вставить("СальдоИОборотыПоСчетам", КонтекстВыполнения.БИ.СиО);
	РассчитанныеЗначения0.Вставить("ОборотыМеждуСчетами",    КонтекстВыполнения.БИ.ОмС);
	
	РассчитанныеЗначения1 = Новый Соответствие;
	
	ПроцессорПоказателя.РассчитанныеЗначения = РассчитанныеЗначения0;
	ПроцессорПоказателя.НачалоПериода = НачалоПериодаОтчета;
	ПроцессорПоказателя.КонецПериода  = КонецПериодаОтчета;
	КонтекстСтроки.Вставить("ПроцессорПоказателя", ПроцессорПоказателя);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения1Строки5100и5110(КонтекстВыполнения);
	
	Если ЗаполнятьПредыдущиеПериоды Тогда
		РассчитанныеЗначения1 = Новый Соответствие;
		РассчитанныеЗначения1.Вставить("СальдоИОборотыПоСчетам", КонтекстВыполнения.БИ.СиО_Год_1);
		РассчитанныеЗначения1.Вставить("ОборотыМеждуСчетами",    КонтекстВыполнения.БИ.ОмС_Год_1);
		
		ПроцессорПоказателя.РассчитанныеЗначения = РассчитанныеЗначения1;
		ПроцессорПоказателя.НачалоПериода = НачалоПериодаПредыдущегоГода;
		ПроцессорПоказателя.КонецПериода  = КонецПериодаПредыдущегоГода;
		
		КонтекстСтроки.Вставить("НомерСтроки", "5110");
		КонтекстСтроки.Вставить("ДатаНачалаПериодаОтчета", НачалоПериодаПредыдущегоГода);
		КонтекстСтроки.Вставить("ДатаКонцаПериодаОтчета",  КонецПериодаПредыдущегоГода);
		КонтекстСтроки.Вставить("СальдоИОборотыПоСчетам",  КонтекстВыполнения.БИ.СиО_Год_1);
		КонтекстСтроки.Вставить("ОборотыМеждуСчетами",     КонтекстВыполнения.БИ.ОмС_Год_1);
		
		ЗаполнитьФормаОтчета2011Кв4_Пояснения1Строки5100и5110(КонтекстВыполнения);
		
	КонецЕсли;
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения1Строки5100и5110ВТомЧисле(КонтекстВыполнения, ТаблицаДопСтрок5100и5110);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
	// Таблица 1.4.
	
	ТаблицаДопСтрок5140и5150 = КонтекстВыполнения.ТаблицаЗначенийДопСтрок5140и5150;
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения1Строки5140и5150(КонтекстВыполнения,
		"5140", НачалоПериодаОтчета, КонецПериодаОтчета, ТаблицаДопСтрок5140и5150);
	
	Если ЗаполнятьПредыдущиеПериоды Тогда
		ЗаполнитьФормаОтчета2011Кв4_Пояснения1Строки5140и5150(КонтекстВыполнения,
			"5150", НачалоПериодаПредыдущегоГода, КонецПериодаПредыдущегоГода, ТаблицаДопСтрок5140и5150);
	КонецЕсли;
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения1Строки5140и5150ВТомЧисле(КонтекстВыполнения, ТаблицаДопСтрок5140и5150);
	
	// Таблица 1.5.
	
	ЗаголовкиГраф15 = Новый Соответствие;
	ЗаголовкиГраф15.Вставить("04", "На начало года");
	ЗаголовкиГраф15.Вставить("05", "Изменения за период - затраты за период");
	ЗаголовкиГраф15.Вставить("06", "Изменения за период - списано затрат как не давших положительного результата");
	ЗаголовкиГраф15.Вставить("07", "Изменения за период - принято к учету в качестве нематериальных активов или НИОКР");
	ЗаголовкиГраф15.Вставить("08", "На конец периода");
	
	КонтекстСтроки = Новый Структура;
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ТаблицаДопСтрок5160и5170 = КонтекстВыполнения.ТаблицаЗначенийДопСтрок5160и5170;
	
	КонтекстСтроки.Вставить("НомерСтроки", "5160");
	КонтекстСтроки.Вставить("ЗаголовкиГраф", ЗаголовкиГраф15);
	КонтекстСтроки.Вставить("ДатаНачалаПериодаОтчета",    НачалоПериодаОтчета);
	КонтекстСтроки.Вставить("ДатаКонцаПериодаОтчета",     КонецПериодаОтчета);
	КонтекстСтроки.Вставить("ТаблицаДополнительныхСтрок", ТаблицаДопСтрок5160и5170);
	
	ПроцессорПоказателя.РассчитанныеЗначения = РассчитанныеЗначения0;
	ПроцессорПоказателя.НачалоПериода = НачалоПериодаОтчета;
	ПроцессорПоказателя.КонецПериода  = КонецПериодаОтчета;
	КонтекстСтроки.Вставить("ПроцессорПоказателя", ПроцессорПоказателя);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения1Строки5160и5170(КонтекстВыполнения);
	
	Если ЗаполнятьПредыдущиеПериоды Тогда
		КонтекстСтроки.Вставить("НомерСтроки", "5170");
		КонтекстСтроки.Вставить("ДатаНачалаПериодаОтчета",  НачалоПериодаПредыдущегоГода);
		КонтекстСтроки.Вставить("ДатаКонцаПериодаОтчета",   КонецПериодаПредыдущегоГода);
		
		ПроцессорПоказателя.РассчитанныеЗначения = РассчитанныеЗначения1;
		ПроцессорПоказателя.НачалоПериода = НачалоПериодаПредыдущегоГода;
		ПроцессорПоказателя.КонецПериода  = КонецПериодаПредыдущегоГода;
		
		ЗаполнитьФормаОтчета2011Кв4_Пояснения1Строки5160и5170(КонтекстВыполнения);
		
	КонецЕсли;
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения1Строки5160и5170ВТомЧисле(КонтекстВыполнения, ТаблицаДопСтрок5160и5170);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
	КонтекстСтроки = Новый Структура;
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ТаблицаДопСтрок5180и5190 = КонтекстВыполнения.ТаблицаЗначенийДопСтрок5180и5190;
	
	КонтекстСтроки.Вставить("НомерСтроки", "5180");
	КонтекстСтроки.Вставить("ЗаголовкиГраф", ЗаголовкиГраф15);
	КонтекстСтроки.Вставить("ТаблицаДополнительныхСтрок", ТаблицаДопСтрок5180и5190);
	
	КонтекстСтроки.Вставить("ДатаНачалаПериодаОтчета",    НачалоПериодаОтчета);
	КонтекстСтроки.Вставить("ДатаКонцаПериодаОтчета",     КонецПериодаОтчета);
	
	ПроцессорПоказателя.РассчитанныеЗначения = РассчитанныеЗначения0;
	ПроцессорПоказателя.НачалоПериода = НачалоПериодаОтчета;
	ПроцессорПоказателя.КонецПериода  = КонецПериодаОтчета;
	КонтекстСтроки.Вставить("ПроцессорПоказателя", ПроцессорПоказателя);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения1Строки5180и5190(КонтекстВыполнения);
	
	Если ЗаполнятьПредыдущиеПериоды Тогда
		КонтекстСтроки.Вставить("НомерСтроки", "5190");
		КонтекстСтроки.Вставить("ДатаНачалаПериодаОтчета",  НачалоПериодаПредыдущегоГода);
		КонтекстСтроки.Вставить("ДатаКонцаПериодаОтчета",   КонецПериодаПредыдущегоГода);
		
		ПроцессорПоказателя.РассчитанныеЗначения = РассчитанныеЗначения1;
		ПроцессорПоказателя.НачалоПериода = НачалоПериодаПредыдущегоГода;
		ПроцессорПоказателя.КонецПериода  = КонецПериодаПредыдущегоГода;
		
		ЗаполнитьФормаОтчета2011Кв4_Пояснения1Строки5180и5190(КонтекстВыполнения);
		
	КонецЕсли;
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения1Строки5180и5190ВТомЧисле(КонтекстВыполнения, ТаблицаДопСтрок5180и5190);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения1Строки5100и5110(КонтекстВыполнения)
	
	НаименованиеСтроки = "Нематериальные активы - всего";
	
	Организация = КонтекстВыполнения.Организация;
	СчетаСРеквизитами = КонтекстВыполнения.СчетаСРеквизитами;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	КонтекстСтроки = КонтекстВыполнения.КонтекстСтроки;
	
	НомерСтроки   = КонтекстСтроки.НомерСтроки;
	ЗаголовкиГраф = КонтекстСтроки.ЗаголовкиГраф;
	НачалоПериода = КонтекстСтроки.ДатаНачалаПериодаОтчета;
	КонецПериода  = КонтекстСтроки.ДатаКонцаПериодаОтчета;
	ТаблицаДополнительныхСтрок = КонтекстСтроки.ТаблицаДополнительныхСтрок;
	
	ОбщиеПараметрыРасшифровки = Новый Структура;
	ОбщиеПараметрыРасшифровки.Вставить("Организация",   Организация);
	ОбщиеПараметрыРасшифровки.Вставить("НачалоПериода", НачалоПериода);
	ОбщиеПараметрыРасшифровки.Вставить("КонецПериода",  КонецПериода);
	
	ИспользоватьАлгоритм2011Года = (ПривестиКДате(КонецПериода) >= '2011-01-01');
	
	ПроцессорПоказателя = КонтекстВыполнения.КонтекстСтроки.ПроцессорПоказателя;
	Вычитаемый = Истина;
	
	НастройкиПолученияБухитогов = Новый Структура;
	НастройкиПолученияБухитогов.Вставить("Организация",   Организация);
	НастройкиПолученияБухитогов.Вставить("НачалоПериода", НачалоПериода);
	НастройкиПолученияБухитогов.Вставить("КонецПериода",  КонецПериода);
	
	Обороты91ПоПереоценкеВнеоборотныхАктивов =
		ЗаполнениеБухгалтерскойОтчетностиИтоги.Обороты91ПоПереоценкеВнеоборотныхАктивов(НастройкиПолученияБухитогов);
	
	// Разделение оборотов в корреспонденции со счетом 91 по видам прочих доходов и расходов.
	ОБ_05__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов =
		ОБ("05", "91.01", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	ОБ_91_02__05_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов =
		ОБ("91.02", "05", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	ОБ_04_01__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов =
		ОБ("04.01", "91.01", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	ОБ_91_02__04_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов =
		ОБ("91.02", "04.01", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	
#Область Графа04
	
	Графа = "04";
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 04.01");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа05
	
	Графа = "05";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНК 05");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
#КонецОбласти
	
#Область Графа06
	
	Графа = "06";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 04.01, 08.05");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа07
	
	Графа = "07";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 04.01");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 83.01.2, 04.01");
	
	Если ИспользоватьАлгоритм2011Года Тогда
		ЗначениеПоказателя = ПроцессорПоказателя.Показатель.ЗначениеПоказателя
		                   - ОБ_91_02__04_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов;
		
		ИмяВПДР = "ПереоценкаВнеоборотныхАктивов";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
			"-", "Оборот по дебету счета " + СчетСРеквизитами("91.02", СчетаСРеквизитами).Код + " " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом " + СчетСРеквизитами("04.01", СчетаСРеквизитами).Код,
			-ОБ_91_02__04_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, "Пояснения1", НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, "91.02", "04.01", ИмяВПДР));
		
		ПроцессорПоказателя.Показатель.ЗначениеПоказателя = ЗначениеПоказателя;
		
	Иначе
		УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 84, 04.01");
		
	КонецЕсли;
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
#КонецОбласти
	
#Область Графа08
	
	Графа = "08";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 05, 04.01");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа09
	
	Графа = "09";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 05");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 83.01.2, 05");
	
	Если ИспользоватьАлгоритм2011Года Тогда
		ЗначениеПоказателя = ПроцессорПоказателя.Показатель.ЗначениеПоказателя
		                   - ОБ_91_02__05_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов;
		
		ИмяВПДР = "ПереоценкаВнеоборотныхАктивов";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
			"-", "Оборот по дебету счета " + СчетСРеквизитами("91.02", СчетаСРеквизитами).Код + " " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом " + СчетСРеквизитами("05", СчетаСРеквизитами).Код,
			-ОБ_91_02__05_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, "Пояснения1", НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, "91.02", "05", ИмяВПДР));
			
		ПроцессорПоказателя.Показатель.ЗначениеПоказателя = ЗначениеПоказателя;
		
	Иначе
		УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 84, 05");
		
	КонецЕсли;
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
#КонецОбласти
	
#Область Графа11
	
	Графа = "11";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 04.01, 83.01.2");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 83.01.2, 04.01");
	
	Если ИспользоватьАлгоритм2011Года Тогда
		ЗначениеПоказателя = ПроцессорПоказателя.Показатель.ЗначениеПоказателя
		                   - ОБ_91_02__04_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов
		                   + ОБ_04_01__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов;
		
		ИмяВПДР = "ПереоценкаВнеоборотныхАктивов";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
			"-", "Оборот по дебету счета " + СчетСРеквизитами("91.02", СчетаСРеквизитами).Код + " " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом " + СчетСРеквизитами("04.01", СчетаСРеквизитами).Код,
			-ОБ_91_02__04_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, "Пояснения1", НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, "91.02", "04.01", ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
			"+", "Оборот по кредиту счета " + СчетСРеквизитами("91.01", СчетаСРеквизитами).Код + " " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом " + СчетСРеквизитами("04.01", СчетаСРеквизитами).Код,
			ОБ_04_01__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, "Пояснения1", НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, "91.01", "04.01", ИмяВПДР));
		
		ПроцессорПоказателя.Показатель.ЗначениеПоказателя = ЗначениеПоказателя;
		
	Иначе
		УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 84, 04.01");
		УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 04.01, 84");
		
	КонецЕсли;
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа12
	
	Графа = "12";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 83.01.2, 05");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 05, 83.01.2");
	
	Если ИспользоватьАлгоритм2011Года Тогда
		ЗначениеПоказателя = ПроцессорПоказателя.Показатель.ЗначениеПоказателя
		                   - ОБ_05__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов
		                   + ОБ_91_02__05_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов;
		
		ИмяВПДР = "ПереоценкаВнеоборотныхАктивов";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
			"-", "Оборот по кредиту счета " + СчетСРеквизитами("91.01", СчетаСРеквизитами).Код + " " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом " + СчетСРеквизитами("05", СчетаСРеквизитами).Код,
			-ОБ_05__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, "Пояснения1", НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, "91.01", "05", ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
			"+", "Оборот по дебету счета " + СчетСРеквизитами("91.02", СчетаСРеквизитами).Код + " " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом " + СчетСРеквизитами("05", СчетаСРеквизитами).Код,
			ОБ_91_02__05_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, "Пояснения1", НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, "91.02", "05", ИмяВПДР));
		
		ПроцессорПоказателя.Показатель.ЗначениеПоказателя = ЗначениеПоказателя;
		
	Иначе
		УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 05, 84");
		УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 84, 05");
		
	КонецЕсли;
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
#КонецОбласти
	
#Область Графа13
	
	Графа = "13";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 04.01");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа14
	
	Графа = "14";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 05");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
#КонецОбласти
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения1СведенияДопСтрок5100и5110(
		КонтекстВыполнения, НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок);
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения1СведенияДопСтрок5100и5110(КонтекстВыполнения,
	НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок)
	
	Организация = КонтекстВыполнения.Организация;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = ТекстЗапросаДопСтрокиПояснения1_1(КонецПериода);
	
	Запрос.УстановитьПараметр("НачПериода",  НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода",  КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.УстановитьПараметр("ИспользоватьАлгоритм2011Года", ПривестиКДате(КонецПериода) >= '2011-01-01');
	
	Запрос.УстановитьПараметр("Счет_05",    БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("05")));
	Запрос.УстановитьПараметр("Счет_04_01", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("04.01")));
	Запрос.УстановитьПараметр("Счет_08_05", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08.05")));
	Запрос.УстановитьПараметр("Счет_08_08", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08.08")));
	Запрос.УстановитьПараметр("Счет_84",    БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("84")));
	Запрос.УстановитьПараметр("Счет_91_01", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("91.01")));
	Запрос.УстановитьПараметр("Счет_91_02", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("91.02")));
	
	Запрос.УстановитьПараметр("Счет_83_01_2", Счет("83.01.2"));
	
	Запрос.УстановитьПараметр("СубконтоНМА", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы);
	Запрос.УстановитьПараметр("СубконтоПрочиеДоходыИРасходы", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("ПереоценкаВнеоборотныхАктивов", Перечисления.ВидыПрочихДоходовИРасходов.ПереоценкаВнеоборотныхАктивов);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		ВидНМА = Выборка.ВидНМА;
		Если НЕ ЗначениеЗаполнено(ВидНМА) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицыДополнительныхСтрок = ТаблицаДополнительныхСтрок.Добавить();
		СтрокаТаблицыДополнительныхСтрок.ВидНМА = ВидНМА;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "04" + "_" + НомерСтроки] =  Выборка.ЗначениеГрафы04;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "05" + "_" + НомерСтроки] = -Выборка.ЗначениеГрафы05;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "06" + "_" + НомерСтроки] =  Выборка.ЗначениеГрафы06;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "07" + "_" + НомерСтроки] = -Выборка.ЗначениеГрафы07;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "08" + "_" + НомерСтроки] =  Выборка.ЗначениеГрафы08;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "09" + "_" + НомерСтроки] = -Выборка.ЗначениеГрафы09;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "10" + "_" + НомерСтроки] =  Выборка.ЗначениеГрафы10;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "11" + "_" + НомерСтроки] =  Выборка.ЗначениеГрафы11;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "12" + "_" + НомерСтроки] = -Выборка.ЗначениеГрафы12;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "13" + "_" + НомерСтроки] =  Выборка.ЗначениеГрафы13;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "14" + "_" + НомерСтроки] = -Выборка.ЗначениеГрафы14;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения1Строки5100и5110ВТомЧисле(КонтекстВыполнения, ТаблицаЗначенийДопСтрок)
	
	Если ТаблицаЗначенийДопСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИмяГруппы = "ДопСтрока5100";
	МногострочнаяЧасть = Новый ТаблицаЗначений;
	МногострочнаяЧасть.Колонки.Добавить("П100100510001", Новый ОписаниеТипов("Строка"));
	
	МногострочнаяЧасть.Колонки.Добавить("П100100510004", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100510005", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100510006", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100510007", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100510008", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100510009", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100510010", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100510011", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100510012", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100510013", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100510014", Новый ОписаниеТипов("Число"));
	
	МногострочнаяЧасть.Колонки.Добавить("П100100511004", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100511005", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100511006", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100511007", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100511008", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100511009", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100511010", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100511011", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100511012", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100511013", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100511014", Новый ОписаниеТипов("Число"));
	
	Для Каждого ДополнительнаяСтрока Из ТаблицаЗначенийДопСтрок Цикл
		СтрокаМногострочнойЧасти = МногострочнаяЧасть.Добавить();
		СтрокаМногострочнойЧасти.П100100510001 = ДополнительнаяСтрока.ВидНМА;
		
		СтрокаМногострочнойЧасти.П100100510004 = ДополнительнаяСтрока.Графа04_5100;
		СтрокаМногострочнойЧасти.П100100510005 = ДополнительнаяСтрока.Графа05_5100;
		СтрокаМногострочнойЧасти.П100100510006 = ДополнительнаяСтрока.Графа06_5100;
		СтрокаМногострочнойЧасти.П100100510007 = ДополнительнаяСтрока.Графа07_5100;
		СтрокаМногострочнойЧасти.П100100510008 = ДополнительнаяСтрока.Графа08_5100;
		СтрокаМногострочнойЧасти.П100100510009 = ДополнительнаяСтрока.Графа09_5100;
		СтрокаМногострочнойЧасти.П100100510010 = ДополнительнаяСтрока.Графа10_5100;
		СтрокаМногострочнойЧасти.П100100510011 = ДополнительнаяСтрока.Графа11_5100;
		СтрокаМногострочнойЧасти.П100100510012 = ДополнительнаяСтрока.Графа12_5100;
		СтрокаМногострочнойЧасти.П100100510013 = ДополнительнаяСтрока.Графа13_5100;
		СтрокаМногострочнойЧасти.П100100510014 = ДополнительнаяСтрока.Графа14_5100;
		
		СтрокаМногострочнойЧасти.П100100511004 = ДополнительнаяСтрока.Графа04_5110;
		СтрокаМногострочнойЧасти.П100100511005 = ДополнительнаяСтрока.Графа05_5110;
		СтрокаМногострочнойЧасти.П100100511006 = ДополнительнаяСтрока.Графа06_5110;
		СтрокаМногострочнойЧасти.П100100511007 = ДополнительнаяСтрока.Графа07_5110;
		СтрокаМногострочнойЧасти.П100100511008 = ДополнительнаяСтрока.Графа08_5110;
		СтрокаМногострочнойЧасти.П100100511009 = ДополнительнаяСтрока.Графа09_5110;
		СтрокаМногострочнойЧасти.П100100511010 = ДополнительнаяСтрока.Графа10_5110;
		СтрокаМногострочнойЧасти.П100100511011 = ДополнительнаяСтрока.Графа11_5110;
		СтрокаМногострочнойЧасти.П100100511012 = ДополнительнаяСтрока.Графа12_5110;
		СтрокаМногострочнойЧасти.П100100511013 = ДополнительнаяСтрока.Графа13_5110;
		СтрокаМногострочнойЧасти.П100100511014 = ДополнительнаяСтрока.Графа14_5110;
	КонецЦикла;
	
	Если НЕ КонтекстВыполнения.МногострочныеПоказатели.Свойство("Пояснения1") Тогда
		КонтекстВыполнения.МногострочныеПоказатели.Вставить("Пояснения1", Новый Структура);
	КонецЕсли;
	
	КонтекстВыполнения.МногострочныеПоказатели.Пояснения1.Вставить(ИмяГруппы, МногострочнаяЧасть);
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения1Строки5140и5150(КонтекстВыполнения,
	НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок)
	
	Организация = КонтекстВыполнения.Организация;
	СчетаСРеквизитами = КонтекстВыполнения.СчетаСРеквизитами;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	ИмяРаздела = "Пояснения1";
	
	ПараметрыРасшифровки = Новый Структура;
	ПараметрыРасшифровки.Вставить("Организация",   КонтекстВыполнения.Организация);
	ПараметрыРасшифровки.Вставить("НачалоПериода", НачалоПериода);
	ПараметрыРасшифровки.Вставить("КонецПериода",  КонецПериода);
	
	КонтекстВыполнения.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
	
	ДополнительныеПараметрыРасшифровки = Новый Структура("Организация", Организация);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РасходыНаНИОКР.Организация,
	               |	РасходыНаНИОКР.НИОКР,
	               |	СУММА(РасходыНаНИОКР.СНД_04_02) КАК СНД_04_02,
	               |	СУММА(РасходыНаНИОКР.КО_04_02) КАК КО_04_02,
	               |	СУММА(РасходыНаНИОКР.СКД_04_02) КАК СКД_04_02,
	               |	СУММА(РасходыНаНИОКР.ОБ_04_02__08_08) КАК ОБ_04_02__08_08,
	               |	СУММА(РасходыНаНИОКР.ОБ_91_02__04_02) КАК ОБ_91_02__04_02
	               |ПОМЕСТИТЬ ВТ_РасходыНаНИОКР
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ХозрасчетныйОстаткиИОбороты.Организация КАК Организация,
	               |		ХозрасчетныйОстаткиИОбороты.Субконто1 КАК НИОКР,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СНД_04_02,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО_04_02,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СКД_04_02,
	               |		0 КАК ОБ_04_02__08_08,
	               |		0 КАК ОБ_91_02__04_02
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет = &Счет_04_02, &СубконтоНМА, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ХозрасчетныйОборотыДтКт.Организация,
	               |		ХозрасчетныйОборотыДтКт.СубконтоДт1,
	               |		0,
	               |		0,
	               |		0,
	               |		ХозрасчетныйОборотыДтКт.СуммаОборот,
	               |		0
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт = &Счет_04_02, &СубконтоНМА, СчетКт = &Счет_08_08, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ХозрасчетныйОборотыДтКт.Организация,
	               |		ХозрасчетныйОборотыДтКт.СубконтоКт1,
	               |		0,
	               |		0,
	               |		0,
	               |		0,
	               |		ХозрасчетныйОборотыДтКт.СуммаОборот
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт = &Счет_91_02, , СчетКт = &Счет_04_02, &СубконтоНМА, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт) КАК РасходыНаНИОКР
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РасходыНаНИОКР.НИОКР,
	               |	РасходыНаНИОКР.Организация
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_РасходыНаНИОКР.НИОКР КАК РасходыНаНИОКР,
	               |	ВЫБОР
	               |		КОГДА ВТ_РасходыНаНИОКР.СНД_04_02 <> 0
	               |			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМАБухгалтерскийУчет.ПервоначальнаяСтоимость, 0)
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ЗначениеГрафы04,
	               |	ВЫБОР
	               |		КОГДА ВТ_РасходыНаНИОКР.СНД_04_02 <> 0
	               |			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМАБухгалтерскийУчет.ПервоначальнаяСтоимость, 0) - ВТ_РасходыНаНИОКР.СНД_04_02
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ЗначениеГрафы05,
	               |	ВТ_РасходыНаНИОКР.ОБ_04_02__08_08 КАК ЗначениеГрафы06,
	               |	ВЫБОР
	               |		КОГДА ВТ_РасходыНаНИОКР.ОБ_91_02__04_02 <> 0
	               |			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМАБухгалтерскийУчет.ПервоначальнаяСтоимость, 0)
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ЗначениеГрафы07,
	               |	ВЫБОР
	               |		КОГДА ВТ_РасходыНаНИОКР.ОБ_91_02__04_02 <> 0
	               |			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМАБухгалтерскийУчет.ПервоначальнаяСтоимость, 0) - ВТ_РасходыНаНИОКР.ОБ_91_02__04_02
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ЗначениеГрафы08,
	               |	ВТ_РасходыНаНИОКР.КО_04_02 - ВЫБОР
	               |		КОГДА ВТ_РасходыНаНИОКР.ОБ_91_02__04_02 <> 0
	               |			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМАБухгалтерскийУчет.ПервоначальнаяСтоимость, 0)
	               |		ИНАЧЕ 0
	               |	КОНЕЦ + ВЫБОР
	               |		КОГДА ВТ_РасходыНаНИОКР.ОБ_91_02__04_02 <> 0
	               |			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМАБухгалтерскийУчет.ПервоначальнаяСтоимость, 0) - ВТ_РасходыНаНИОКР.ОБ_91_02__04_02
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ЗначениеГрафы09,
	               |	ВЫБОР
	               |		КОГДА ВТ_РасходыНаНИОКР.СКД_04_02 <> 0
	               |			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМАБухгалтерскийУчет.ПервоначальнаяСтоимость, 0)
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ЗначениеГрафы10,
	               |	ВЫБОР
	               |		КОГДА ВТ_РасходыНаНИОКР.СКД_04_02 <> 0
	               |			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияНМАБухгалтерскийУчет.ПервоначальнаяСтоимость, 0) - ВТ_РасходыНаНИОКР.СКД_04_02
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ЗначениеГрафы11,
	               |	ВТ_РасходыНаНИОКР.СНД_04_02 КАК СНД_04_02,
	               |	ВТ_РасходыНаНИОКР.ОБ_04_02__08_08 КАК ОБ_04_02__08_08,
	               |	ВТ_РасходыНаНИОКР.ОБ_91_02__04_02 КАК ОБ_91_02__04_02,
	               |	ВТ_РасходыНаНИОКР.КО_04_02 КАК КО_04_02,
	               |	ВТ_РасходыНаНИОКР.СКД_04_02 КАК СКД_04_02
	               |ИЗ
	               |	ВТ_РасходыНаНИОКР КАК ВТ_РасходыНаНИОКР
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет КАК ПервоначальныеСведенияНМАБухгалтерскийУчет
	               |		ПО ВТ_РасходыНаНИОКР.НИОКР = ПервоначальныеСведенияНМАБухгалтерскийУчет.НематериальныйАктив
	               |			И ВТ_РасходыНаНИОКР.Организация = ПервоначальныеСведенияНМАБухгалтерскийУчет.Организация
	               |ИТОГИ
	               |	СУММА(ЗначениеГрафы04),
	               |	СУММА(ЗначениеГрафы05),
	               |	СУММА(ЗначениеГрафы06),
	               |	СУММА(ЗначениеГрафы07),
	               |	СУММА(ЗначениеГрафы08),
	               |	СУММА(ЗначениеГрафы09),
	               |	СУММА(ЗначениеГрафы10),
	               |	СУММА(ЗначениеГрафы11),
	               |	СУММА(СНД_04_02),
	               |	СУММА(ОБ_04_02__08_08),
	               |	СУММА(ОБ_91_02__04_02),
	               |	СУММА(КО_04_02),
	               |	СУММА(СКД_04_02)
	               |ПО
	               |	ОБЩИЕ";
	Запрос.УстановитьПараметр("НачПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода", КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Счет_04_02",   Счет("04.02"));
	Запрос.УстановитьПараметр("Счет_08_08",   Счет("08.08"));
	Запрос.УстановитьПараметр("Счет_91_02",   Счет("91.02"));
	Запрос.УстановитьПараметр("СубконтоНМА", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы);
	
	ВыборкаИтогов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ВыборкаИтогов.Следующий() Тогда
		Графа = "04";
		ЗначениеГрафы04 = ВыборкаИтогов["ЗначениеГрафы" + Графа];
		ЗначениеПоказателя = ЗначениеГрафы04;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
		
		НаименованиеСоставляющей = "Первоначальная стоимость расходов на НИОКР, по которым на начало периода имеется остаток на счете " + СчетСРеквизитами("04.02", СчетаСРеквизитами).Код;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " ""НИОКР - всего"", графа ""Первоначальная стоимость на начало года""", "+", НаименованиеСоставляющей, ЗначениеГрафы04, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		Графа = "05";
		СНД_04_02 = ВыборкаИтогов.СНД_04_02;
		ЗначениеПоказателя = ВыборкаИтогов["ЗначениеГрафы" + Графа];
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " ""НИОКР - всего"", графа ""Часть стоимости, списанной на расходы на начало года""", "+", НаименованиеСоставляющей, ЗначениеГрафы04, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!СНД " + СчетСРеквизитами("04.02", СчетаСРеквизитами).Код, -СНД_04_02, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "04.02"));
		
		Графа = "06";
		ОБ_04_02__08_08 = ВыборкаИтогов.ОБ_04_02__08_08;
		ЗначениеПоказателя = ОБ_04_02__08_08;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " ""НИОКР - всего"", графа ""Изменения за период - поступило""", "+", "!ОБ " + СчетСРеквизитами("04.02", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("08.08", СчетаСРеквизитами).Код, ОБ_04_02__08_08, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "04.02", "08.08"));
		
		Графа = "07";
		ЗначениеГрафы07 = ВыборкаИтогов["ЗначениеГрафы" + Графа];
		ЗначениеПоказателя = ЗначениеГрафы07;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, -ЗначениеПоказателя); // вычитаемый
		
		НаименованиеСоставляющей = "Первоначальная стоимость расходов на НИОКР, по которым в течении периода имеются проводки с дебета счета " + СчетСРеквизитами("91.02", СчетаСРеквизитами).Код + " в кредит счета " + СчетСРеквизитами("04.02", СчетаСРеквизитами).Код;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " ""НИОКР - всего"", графа ""Изменения за период - выбыло - первоначальная стоимость""", "+", НаименованиеСоставляющей, ЗначениеГрафы07, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		Графа = "08";
		ОБ_91_02__04_02 = ВыборкаИтогов.ОБ_91_02__04_02;
		ЗначениеПоказателя = ВыборкаИтогов["ЗначениеГрафы" + Графа];
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " ""НИОКР - всего"", графа ""Изменения за период - выбыло - часть стоимости, списанной на расходы""", "+", НаименованиеСоставляющей, ЗначениеГрафы07, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!ОБ " +  СчетСРеквизитами("91.02", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("04.02", СчетаСРеквизитами).Код, -ОБ_91_02__04_02, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "91.02", "04.02"));
		
		Графа = "09";
		КО_04_02 = ВыборкаИтогов.КО_04_02;
		ЗначениеПоказателя = ВыборкаИтогов["ЗначениеГрафы" + Графа];
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " ""НИОКР - всего"", графа ""Изменения за период - часть стоимости, списанная на расходы за период""", "+", "!КО " + СчетСРеквизитами("04.02", СчетаСРеквизитами).Код, КО_04_02, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "04.02"));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!ОБ " + СчетСРеквизитами("91.02", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("04.02", СчетаСРеквизитами).Код, -ОБ_91_02__04_02, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "91.02", "04.02"));
		
		Графа = "10";
		ЗначениеГрафы10 = ВыборкаИтогов["ЗначениеГрафы" + Графа];
		ЗначениеПоказателя = ЗначениеГрафы10;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
		
		НаименованиеСоставляющей = "Первоначальная стоимость расходов на НИОКР, по которым на конец периода имеется остаток на счете " + СчетСРеквизитами("04.02", СчетаСРеквизитами).Код;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " ""НИОКР - всего"", графа ""Первоначальная стоимость на конец периода""", "+", НаименованиеСоставляющей, ЗначениеГрафы10, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		Графа = "11";
		СКД_04_02 = ВыборкаИтогов.СКД_04_02;
		ЗначениеПоказателя = ВыборкаИтогов["ЗначениеГрафы" + Графа];
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, -ЗначениеПоказателя);  // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " ""НИОКР - всего"", графа ""Первоначальная стоимость на конец периода""", "+", НаименованиеСоставляющей, ЗначениеГрафы10, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!СКД " + СчетСРеквизитами("04.02", СчетаСРеквизитами).Код, -СКД_04_02, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "04.02"));
		
		Выборка = ВыборкаИтогов.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			СтрокаТаблицыДополнительныхСтрок = ТаблицаДополнительныхСтрок.Добавить();
			СтрокаТаблицыДополнительныхСтрок.РасходыНаНИОКР = Выборка.РасходыНаНИОКР;
			
			Графа = "04";
			ЗначениеПоказателя = Выборка["ЗначениеГрафы" + Графа];
			СтрокаТаблицыДополнительныхСтрок["Графа" + Графа + "_" + НомерСтроки] = ЗначениеПоказателя;
			
			Графа = "05";
			ЗначениеПоказателя = Выборка["ЗначениеГрафы" + Графа];
			СтрокаТаблицыДополнительныхСтрок["Графа" + Графа + "_" + НомерСтроки] = -ЗначениеПоказателя; // вычитаемый
			
			Графа = "06";
			ЗначениеПоказателя = Выборка["ЗначениеГрафы" + Графа];
			СтрокаТаблицыДополнительныхСтрок["Графа" + Графа + "_" + НомерСтроки] = ЗначениеПоказателя;
			
			Графа = "07";
			ЗначениеПоказателя = Выборка["ЗначениеГрафы" + Графа];
			СтрокаТаблицыДополнительныхСтрок["Графа" + Графа + "_" + НомерСтроки] = -ЗначениеПоказателя; // вычитаемый
			
			Графа = "08";
			ЗначениеПоказателя = Выборка["ЗначениеГрафы" + Графа];
			СтрокаТаблицыДополнительныхСтрок["Графа" + Графа + "_" + НомерСтроки] = ЗначениеПоказателя;
			
			Графа = "09";
			ЗначениеПоказателя = Выборка["ЗначениеГрафы" + Графа];
			СтрокаТаблицыДополнительныхСтрок["Графа" + Графа + "_" + НомерСтроки] = -ЗначениеПоказателя; // вычитаемый
			
			Графа = "10";
			ЗначениеПоказателя = Выборка["ЗначениеГрафы" + Графа];
			СтрокаТаблицыДополнительныхСтрок["Графа" + Графа + "_" + НомерСтроки] = ЗначениеПоказателя;
			
			Графа = "11";
			ЗначениеПоказателя = Выборка["ЗначениеГрафы" + Графа];
			СтрокаТаблицыДополнительныхСтрок["Графа" + Графа + "_" + НомерСтроки] = -ЗначениеПоказателя; // вычитаемый
			
		КонецЦикла;
		
	Иначе
		// Вывод расшифровки с нулевыми значениями при отстутствии в ИБ сведений за период заполнения.
		Графа = "04";
		ЗначениеГрафы04 = 0;
		ЗначениеПоказателя = ЗначениеГрафы04;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
		
		НаименованиеСоставляющей = "Первоначальная стоимость расходов на НИОКР, по которым на начало периода имеется остаток на счете " + СчетСРеквизитами("04.02", СчетаСРеквизитами).Код;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " ""НИОКР - всего"", графа ""Первоначальная стоимость на начало года""", "+", НаименованиеСоставляющей, ЗначениеГрафы04, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		Графа = "05";
		СНД_04_02 = 0;
		ЗначениеПоказателя = 0;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " ""НИОКР - всего"", графа ""Часть стоимости, списанной на расходы на начало года""", "+", НаименованиеСоставляющей, ЗначениеГрафы04, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!СНД " + СчетСРеквизитами("04.02", СчетаСРеквизитами).Код, -СНД_04_02, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "04.02"));
		
		Графа = "06";
		ОБ_04_02__08_08 = 0;
		ЗначениеПоказателя = ОБ_04_02__08_08;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " ""НИОКР - всего"", графа ""Изменения за период - поступило""", "+", "!ОБ " + СчетСРеквизитами("04.02", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("08.08", СчетаСРеквизитами).Код, ОБ_04_02__08_08, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "04.02", "08.08"));
		
		Графа = "07";
		ЗначениеГрафы07 = 0;
		ЗначениеПоказателя = ЗначениеГрафы07;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, -ЗначениеПоказателя); // вычитаемый
		
		НаименованиеСоставляющей = "Первоначальная стоимость расходов на НИОКР, по которым в течении периода имеются проводки с дебета счета " + СчетСРеквизитами("91.02", СчетаСРеквизитами).Код + " в кредит счета " + СчетСРеквизитами("04.02", СчетаСРеквизитами).Код;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " ""НИОКР - всего"", графа ""Изменения за период - выбыло - первоначальная стоимость""", "+", НаименованиеСоставляющей, ЗначениеГрафы07, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		Графа = "08";
		ОБ_91_02__04_02 = 0;
		ЗначениеПоказателя = 0;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " ""НИОКР - всего"", графа ""Изменения за период - выбыло - часть стоимости, списанной на расходы""", "+", НаименованиеСоставляющей, ЗначениеГрафы07, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!ОБ " +  СчетСРеквизитами("91.02", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("04.02", СчетаСРеквизитами).Код, -ОБ_91_02__04_02, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "91.02", "04.02"));
		
		Графа = "09";
		КО_04_02 = 0;
		ЗначениеПоказателя = 0;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " ""НИОКР - всего"", графа ""Изменения за период - часть стоимости, списанная на расходы за период""", "+", "!КО " + СчетСРеквизитами("04.02", СчетаСРеквизитами).Код, КО_04_02, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "04.02"));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!ОБ " + СчетСРеквизитами("91.02", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("04.02", СчетаСРеквизитами).Код, -ОБ_91_02__04_02, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "91.02", "04.02"));
		
		Графа = "10";
		ЗначениеГрафы10 = 0;
		ЗначениеПоказателя = ЗначениеГрафы10;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
		
		НаименованиеСоставляющей = "Первоначальная стоимость расходов на НИОКР, по которым на конец периода имеется остаток на счете " + СчетСРеквизитами("04.02", СчетаСРеквизитами).Код;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " ""НИОКР - всего"", графа ""Первоначальная стоимость на конец периода""", "+", НаименованиеСоставляющей, ЗначениеГрафы10, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		Графа = "11";
		СКД_04_02 = 0;
		ЗначениеПоказателя = 0;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " ""НИОКР - всего"", графа ""Первоначальная стоимость на конец периода""", "+", НаименованиеСоставляющей, ЗначениеГрафы10, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!СКД " + СчетСРеквизитами("04.02", СчетаСРеквизитами).Код, -СКД_04_02, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "04.02"));
		
	КонецЕсли;
	
	КонтекстВыполнения.Удалить("ПараметрыРасшифровки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения1Строки5140и5150ВТомЧисле(КонтекстВыполнения, ТаблицаЗначенийДопСтрок)
	
	Если ТаблицаЗначенийДопСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИмяГруппы = "ДопСтрока5140";
	МногострочнаяЧасть = Новый ТаблицаЗначений;
	МногострочнаяЧасть.Колонки.Добавить("П100100514001", Новый ОписаниеТипов("Строка"));
	
	МногострочнаяЧасть.Колонки.Добавить("П100100514004", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100514005", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100514006", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100514007", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100514008", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100514009", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100514010", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100514011", Новый ОписаниеТипов("Число"));
	
	МногострочнаяЧасть.Колонки.Добавить("П100100515004", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100515005", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100515006", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100515007", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100515008", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100515009", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100515010", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100515011", Новый ОписаниеТипов("Число"));
	
	Для Каждого ДополнительнаяСтрока Из ТаблицаЗначенийДопСтрок Цикл
		СтрокаМногострочнойЧасти = МногострочнаяЧасть.Добавить();
		СтрокаМногострочнойЧасти.П100100514001 = ДополнительнаяСтрока.РасходыНаНИОКР;
		
		СтрокаМногострочнойЧасти.П100100514004 = ДополнительнаяСтрока.Графа04_5140;
		СтрокаМногострочнойЧасти.П100100514005 = ДополнительнаяСтрока.Графа05_5140;
		СтрокаМногострочнойЧасти.П100100514006 = ДополнительнаяСтрока.Графа06_5140;
		СтрокаМногострочнойЧасти.П100100514007 = ДополнительнаяСтрока.Графа07_5140;
		СтрокаМногострочнойЧасти.П100100514008 = ДополнительнаяСтрока.Графа08_5140;
		СтрокаМногострочнойЧасти.П100100514009 = ДополнительнаяСтрока.Графа09_5140;
		СтрокаМногострочнойЧасти.П100100514010 = ДополнительнаяСтрока.Графа10_5140;
		СтрокаМногострочнойЧасти.П100100514011 = ДополнительнаяСтрока.Графа11_5140;
		
		СтрокаМногострочнойЧасти.П100100515004 = ДополнительнаяСтрока.Графа04_5150;
		СтрокаМногострочнойЧасти.П100100515005 = ДополнительнаяСтрока.Графа05_5150;
		СтрокаМногострочнойЧасти.П100100515006 = ДополнительнаяСтрока.Графа06_5150;
		СтрокаМногострочнойЧасти.П100100515007 = ДополнительнаяСтрока.Графа07_5150;
		СтрокаМногострочнойЧасти.П100100515008 = ДополнительнаяСтрока.Графа08_5150;
		СтрокаМногострочнойЧасти.П100100515009 = ДополнительнаяСтрока.Графа09_5150;
		СтрокаМногострочнойЧасти.П100100515010 = ДополнительнаяСтрока.Графа10_5150;
		СтрокаМногострочнойЧасти.П100100515011 = ДополнительнаяСтрока.Графа11_5150;
	КонецЦикла;
	
	Если НЕ КонтекстВыполнения.МногострочныеПоказатели.Свойство("Пояснения1") Тогда
		КонтекстВыполнения.МногострочныеПоказатели.Вставить("Пояснения1", Новый Структура);
	КонецЕсли;
	
	КонтекстВыполнения.МногострочныеПоказатели.Пояснения1.Вставить(ИмяГруппы, МногострочнаяЧасть);
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения1Строки5160и5170(КонтекстВыполнения)
	
	НаименованиеСтроки = "Затраты по незаконченным исследованиям и разработкам – всего";
	
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	КонтекстСтроки = КонтекстВыполнения.КонтекстСтроки;
	
	НомерСтроки   = КонтекстСтроки.НомерСтроки;
	ЗаголовкиГраф = КонтекстСтроки.ЗаголовкиГраф;
	НачалоПериода = КонтекстСтроки.ДатаНачалаПериодаОтчета;
	КонецПериода  = КонтекстСтроки.ДатаКонцаПериодаОтчета;
	ТаблицаДополнительныхСтрок = КонтекстСтроки.ТаблицаДополнительныхСтрок;
	
	ПроцессорПоказателя = КонтекстВыполнения.КонтекстСтроки.ПроцессорПоказателя;
	Вычитаемый = Истина;
	
#Область Графа04
	
	Графа = "04";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 08.08");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 08.11");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа05
	
	Графа = "05";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 08.08");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 08.11");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа06
	
	Графа = "06";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 91.02, 08.08");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 91.02, 08.11");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
#КонецОбласти
	
#Область Графа07
	
	Графа = "07";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 04.02, 08.08");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 04.02, 08.11");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
#КонецОбласти
	
#Область Графа08
	
	Графа = "08";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.08");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.11");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
	ЗапросПоОбъектамВложений = ЗапросПоНИОКР(КонтекстВыполнения, НачалоПериода, КонецПериода, "08.08", "04.02", "РасходыНаНИОКР");
	
	ВыборкаПоОбъектамВложений = ЗапросПоОбъектамВложений.Выполнить().Выбрать();
	
	Пока ВыборкаПоОбъектамВложений.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоОбъектамВложений.Объект) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТаблицыДополнительныхСтрок = ТаблицаДополнительныхСтрок.Добавить();
		СтрокаТаблицыДополнительныхСтрок.ОбъектНИОКР = ВыборкаПоОбъектамВложений.Объект;
		
		СтрокаТаблицыДополнительныхСтрок["Графа04_" + НомерСтроки] =  ВыборкаПоОбъектамВложений.Графа04;
		СтрокаТаблицыДополнительныхСтрок["Графа05_" + НомерСтроки] =  ВыборкаПоОбъектамВложений.Графа05;
		СтрокаТаблицыДополнительныхСтрок["Графа06_" + НомерСтроки] = -ВыборкаПоОбъектамВложений.Графа06;
		СтрокаТаблицыДополнительныхСтрок["Графа07_" + НомерСтроки] = -ВыборкаПоОбъектамВложений.Графа07;
		СтрокаТаблицыДополнительныхСтрок["Графа08_" + НомерСтроки] =  ВыборкаПоОбъектамВложений.Графа08;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения1Строки5160и5170ВТомЧисле(КонтекстВыполнения, ТаблицаЗначенийДопСтрок)
	
	Если ТаблицаЗначенийДопСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИмяГруппы = "ДопСтрока5160";
	МногострочнаяЧасть = Новый ТаблицаЗначений;
	МногострочнаяЧасть.Колонки.Добавить("П100100516001", Новый ОписаниеТипов("Строка"));
	
	МногострочнаяЧасть.Колонки.Добавить("П100100516004", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100516005", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100516006", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100516007", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100516008", Новый ОписаниеТипов("Число"));
	
	МногострочнаяЧасть.Колонки.Добавить("П100100517004", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100517005", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100517006", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100517007", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100517008", Новый ОписаниеТипов("Число"));
	
	Для Каждого ДополнительнаяСтрока Из ТаблицаЗначенийДопСтрок Цикл
		СтрокаМногострочнойЧасти = МногострочнаяЧасть.Добавить();
		СтрокаМногострочнойЧасти.П100100516001 = ДополнительнаяСтрока.ОбъектНИОКР;
		
		СтрокаМногострочнойЧасти.П100100516004 = ДополнительнаяСтрока.Графа04_5160;
		СтрокаМногострочнойЧасти.П100100516005 = ДополнительнаяСтрока.Графа05_5160;
		СтрокаМногострочнойЧасти.П100100516006 = ДополнительнаяСтрока.Графа06_5160;
		СтрокаМногострочнойЧасти.П100100516007 = ДополнительнаяСтрока.Графа07_5160;
		СтрокаМногострочнойЧасти.П100100516008 = ДополнительнаяСтрока.Графа08_5160;
		
		СтрокаМногострочнойЧасти.П100100517004 = ДополнительнаяСтрока.Графа04_5170;
		СтрокаМногострочнойЧасти.П100100517005 = ДополнительнаяСтрока.Графа05_5170;
		СтрокаМногострочнойЧасти.П100100517006 = ДополнительнаяСтрока.Графа06_5170;
		СтрокаМногострочнойЧасти.П100100517007 = ДополнительнаяСтрока.Графа07_5170;
		СтрокаМногострочнойЧасти.П100100517008 = ДополнительнаяСтрока.Графа08_5170;
	КонецЦикла;
	
	Если НЕ КонтекстВыполнения.МногострочныеПоказатели.Свойство("Пояснения1") Тогда
		КонтекстВыполнения.МногострочныеПоказатели.Вставить("Пояснения1", Новый Структура);
	КонецЕсли;
	
	КонтекстВыполнения.МногострочныеПоказатели.Пояснения1.Вставить(ИмяГруппы, МногострочнаяЧасть);
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения1Строки5180и5190(КонтекстВыполнения)
	
	НаименованиеСтроки = "незаконченные операции по приобретению нематериальных активов – всего";
	
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	КонтекстСтроки = КонтекстВыполнения.КонтекстСтроки;
	
	НомерСтроки   = КонтекстСтроки.НомерСтроки;
	ЗаголовкиГраф = КонтекстСтроки.ЗаголовкиГраф;
	НачалоПериода = КонтекстСтроки.ДатаНачалаПериодаОтчета;
	КонецПериода  = КонтекстСтроки.ДатаКонцаПериодаОтчета;
	ТаблицаДополнительныхСтрок = КонтекстСтроки.ТаблицаДополнительныхСтрок;
	
	ПроцессорПоказателя = КонтекстВыполнения.КонтекстСтроки.ПроцессорПоказателя;
	Вычитаемый = Истина;
	
#Область Графа04
	
	Графа = "04";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 08.05");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа05
	
	Графа = "05";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 08.05");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа06
	
	Графа = "06";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 91.02, 08.05");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
#КонецОбласти
	
#Область Графа07
	
	Графа = "07";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 04.01, 08.05");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
#КонецОбласти
	
#Область Графа08
	
	Графа = "08";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.05");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
	ЗапросПоОбъектамВложений = ЗапросПоНИОКР(КонтекстВыполнения, НачалоПериода, КонецПериода, "08.05", "04.01", "НематериальныеАктивы");
	
	ВыборкаПоОбъектамВложений = ЗапросПоОбъектамВложений.Выполнить().Выбрать();
	
	Пока ВыборкаПоОбъектамВложений.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоОбъектамВложений.Объект) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТаблицыДополнительныхСтрок = ТаблицаДополнительныхСтрок.Добавить();
		СтрокаТаблицыДополнительныхСтрок.ОбъектНМА = ВыборкаПоОбъектамВложений.Объект;
		
		СтрокаТаблицыДополнительныхСтрок["Графа04_" + НомерСтроки] =  ВыборкаПоОбъектамВложений.Графа04;
		СтрокаТаблицыДополнительныхСтрок["Графа05_" + НомерСтроки] =  ВыборкаПоОбъектамВложений.Графа05;
		СтрокаТаблицыДополнительныхСтрок["Графа06_" + НомерСтроки] = -ВыборкаПоОбъектамВложений.Графа06;
		СтрокаТаблицыДополнительныхСтрок["Графа07_" + НомерСтроки] = -ВыборкаПоОбъектамВложений.Графа07;
		СтрокаТаблицыДополнительныхСтрок["Графа08_" + НомерСтроки] =  ВыборкаПоОбъектамВложений.Графа08;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения1Строки5180и5190ВТомЧисле(КонтекстВыполнения, ТаблицаЗначенийДопСтрок)
	
	Если ТаблицаЗначенийДопСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИмяГруппы = "ДопСтрока5180";
	МногострочнаяЧасть = Новый ТаблицаЗначений;
	МногострочнаяЧасть.Колонки.Добавить("П100100518001", Новый ОписаниеТипов("Строка"));
	
	МногострочнаяЧасть.Колонки.Добавить("П100100518004", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100518005", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100518006", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100518007", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100518008", Новый ОписаниеТипов("Число"));
	
	МногострочнаяЧасть.Колонки.Добавить("П100100519004", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100519005", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100519006", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100519007", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100519008", Новый ОписаниеТипов("Число"));
	
	Для Каждого ДополнительнаяСтрока Из ТаблицаЗначенийДопСтрок Цикл
		СтрокаМногострочнойЧасти = МногострочнаяЧасть.Добавить();
		СтрокаМногострочнойЧасти.П100100518001 = ДополнительнаяСтрока.ОбъектНМА;
		
		СтрокаМногострочнойЧасти.П100100518004 = ДополнительнаяСтрока.Графа04_5180;
		СтрокаМногострочнойЧасти.П100100518005 = ДополнительнаяСтрока.Графа05_5180;
		СтрокаМногострочнойЧасти.П100100518006 = ДополнительнаяСтрока.Графа06_5180;
		СтрокаМногострочнойЧасти.П100100518007 = ДополнительнаяСтрока.Графа07_5180;
		СтрокаМногострочнойЧасти.П100100518008 = ДополнительнаяСтрока.Графа08_5180;
		
		СтрокаМногострочнойЧасти.П100100519004 = ДополнительнаяСтрока.Графа04_5190;
		СтрокаМногострочнойЧасти.П100100519005 = ДополнительнаяСтрока.Графа05_5190;
		СтрокаМногострочнойЧасти.П100100519006 = ДополнительнаяСтрока.Графа06_5190;
		СтрокаМногострочнойЧасти.П100100519007 = ДополнительнаяСтрока.Графа07_5190;
		СтрокаМногострочнойЧасти.П100100519008 = ДополнительнаяСтрока.Графа08_5190;
	КонецЦикла;
	
	Если НЕ КонтекстВыполнения.МногострочныеПоказатели.Свойство("Пояснения1") Тогда
		КонтекстВыполнения.МногострочныеПоказатели.Вставить("Пояснения1", Новый Структура);
	КонецЕсли;
	
	КонтекстВыполнения.МногострочныеПоказатели.Пояснения1.Вставить(ИмяГруппы, МногострочнаяЧасть);
	
КонецПроцедуры

Функция ЗапросПоНИОКР(КонтекстВыполнения, НачалоПериода, КонецПериода, СписокСчетовВложений, КодСчетаУчетаНМА, ИмяВидаСубконто)
	
	Организация = КонтекстВыполнения.Организация;
	СчетаВложений = МассивСчетовВИерархииИзСписка(СписокСчетовВложений);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапросаПоНИОКР();
	
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
	
	Запрос.УстановитьПараметр("СчетаВложений", СчетаВложений);
	Запрос.УстановитьПараметр("Счет_НМА",      БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет(КодСчетаУчетаНМА)));
	Запрос.УстановитьПараметр("Счет_91_02",    БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("91.02")));
	
	Запрос.УстановитьПараметр("ВидСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные[ИмяВидаСубконто]);
	
	Возврат Запрос;
	
КонецФункции

Функция ТекстЗапросаПоНИОКР()
	
	ТексЗапроса = "ВЫБРАТЬ
	              |	ВложенныйЗапрос.Объект КАК Объект,
	              |	СУММА(ВложенныйЗапрос.Графа04) КАК Графа04,
	              |	СУММА(ВложенныйЗапрос.Графа05) КАК Графа05,
	              |	СУММА(ВложенныйЗапрос.Графа06) КАК Графа06,
	              |	СУММА(ВложенныйЗапрос.Графа07) КАК Графа07,
	              |	СУММА(ВложенныйЗапрос.Графа08) КАК Графа08
	              |ИЗ
	              |	(ВЫБРАТЬ
	              |		ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Объект,
	              |		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК Графа04,
	              |		ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК Графа05,
	              |		0 КАК Графа06,
	              |		0 КАК Графа07,
	              |		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК Графа08
	              |	ИЗ
	              |		РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаВложений), &ВидСубконто, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	              |	
	              |	ОБЪЕДИНИТЬ ВСЕ
	              |	
	              |	ВЫБРАТЬ
	              |		ХозрасчетныйОборотыДтКт.СубконтоКт1,
	              |		0,
	              |		0,
	              |		ВЫБОР
	              |			КОГДА ХозрасчетныйОборотыДтКт.СчетДт В (&Счет_91_02)
	              |				ТОГДА ХозрасчетныйОборотыДтКт.СуммаОборот
	              |			ИНАЧЕ 0
	              |		КОНЕЦ,
	              |		ВЫБОР
	              |			КОГДА ХозрасчетныйОборотыДтКт.СчетДт В (&Счет_НМА)
	              |				ТОГДА ХозрасчетныйОборотыДтКт.СуммаОборот
	              |			ИНАЧЕ 0
	              |		КОНЕЦ,
	              |		0
	              |	ИЗ
	              |		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	              |				&НачалоПериода,
	              |				&КонецПериода,
	              |				,
	              |				СчетДт В (&Счет_91_02)
	              |					ИЛИ СчетДт В (&Счет_НМА),
	              |				,
	              |				СчетКт В (&СчетаВложений),
	              |				&ВидСубконто,
	              |				Организация = &Организация) КАК ХозрасчетныйОборотыДтКт) КАК ВложенныйЗапрос
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ВложенныйЗапрос.Объект";
	
	Возврат ТексЗапроса;
	
КонецФункции

Функция ТекстЗапросаДопСтрокиПояснения1_1(КонецПериода)
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14 КАК ВидНМА,
		|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт) КАК СНД,
		|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотКт) КАК КО,
		|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт) КАК СКД
		|ПОМЕСТИТЬ ВТ_Счет_04_01
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счет_04_01), &СубконтоНМА, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидНМА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14 КАК ВидНМА,
		|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт) КАК СНК,
		|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотКт) КАК КО,
		|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт) КАК СКК
		|ПОМЕСТИТЬ ВТ_Счет_05
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счет_05), &СубконтоНМА, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидНМА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14 КАК ВидНМА,
		|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК ОБ
		|ПОМЕСТИТЬ ВТ_ОБ_05__04_01
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счет_05), &СубконтоНМА, СчетКт В (&Счет_04_01), &СубконтоНМА, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидНМА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14 КАК ВидНМА,
		|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК ОБ
		|ПОМЕСТИТЬ ВТ_ОБ_84__04_01
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счет_84), , СчетКт В (&Счет_04_01), &СубконтоНМА, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидНМА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14 КАК ВидНМА,
		|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК ОБ
		|ПОМЕСТИТЬ ВТ_ОБ_04_01__84
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счет_04_01), &СубконтоНМА, СчетКт В (&Счет_84), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидНМА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14 КАК ВидНМА,
		|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК ОБ
		|ПОМЕСТИТЬ ВТ_ОБ_84__05
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счет_84), , СчетКт В (&Счет_05), &СубконтоНМА, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидНМА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14 КАК ВидНМА,
		|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК ОБ
		|ПОМЕСТИТЬ ВТ_ОБ_05__84
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счет_05), &СубконтоНМА, СчетКт В (&Счет_84), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидНМА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14 КАК ВидНМА,
		|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК ОБ
		|ПОМЕСТИТЬ ВТ_ОБ_04_01__83_01_2
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счет_04_01), &СубконтоНМА, СчетКт В (&Счет_83_01_2), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидНМА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14 КАК ВидНМА,
		|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК ОБ
		|ПОМЕСТИТЬ ВТ_ОБ_83_01_2__04_01
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счет_83_01_2), , СчетКт В (&Счет_04_01), &СубконтоНМА, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидНМА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14 КАК ВидНМА,
		|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК ОБ
		|ПОМЕСТИТЬ ВТ_ОБ_83_01_2__05
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счет_83_01_2), , СчетКт В (&Счет_05), &СубконтоНМА, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидНМА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14 КАК ВидНМА,
		|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК ОБ
		|ПОМЕСТИТЬ ВТ_ОБ_05__83_01_2
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счет_05), &СубконтоНМА, СчетКт В (&Счет_83_01_2), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидНМА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14 КАК ВидНМА,
		|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК ОБ
		|ПОМЕСТИТЬ ВТ_ОБ_91_02__04_01
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачПериода,
		|			&КонПериода,
		|			Период,
		|			СчетДт В (&Счет_91_02),
		|			&СубконтоПрочиеДоходыИРасходы,
		|			СчетКт В (&Счет_04_01),
		|			&СубконтоНМА,
		|			Организация = &Организация
		|				И СубконтоДт1.ВидПрочихДоходовИРасходов = &ПереоценкаВнеоборотныхАктивов) КАК ХозрасчетныйОборотыДтКт
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидНМА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14 КАК ВидНМА,
		|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК ОБ
		|ПОМЕСТИТЬ ВТ_ОБ_04_01__91_01
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачПериода,
		|			&КонПериода,
		|			Период,
		|			СчетДт В (&Счет_04_01),
		|			&СубконтоНМА,
		|			СчетКт В (&Счет_91_01),
		|			&СубконтоПрочиеДоходыИРасходы,
		|			Организация = &Организация
		|				И СубконтоКт1.ВидПрочихДоходовИРасходов = &ПереоценкаВнеоборотныхАктивов) КАК ХозрасчетныйОборотыДтКт
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидНМА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14 КАК ВидНМА,
		|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК ОБ
		|ПОМЕСТИТЬ ВТ_ОБ_91_02__05
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачПериода,
		|			&КонПериода,
		|			Период,
		|			СчетДт В (&Счет_91_02),
		|			&СубконтоПрочиеДоходыИРасходы,
		|			СчетКт В (&Счет_05),
		|			&СубконтоНМА,
		|			Организация = &Организация
		|				И СубконтоДт1.ВидПрочихДоходовИРасходов = &ПереоценкаВнеоборотныхАктивов) КАК ХозрасчетныйОборотыДтКт
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидНМА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14 КАК ВидНМА,
		|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК ОБ
		|ПОМЕСТИТЬ ВТ_ОБ_05__91_01
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачПериода,
		|			&КонПериода,
		|			Период,
		|			СчетДт В (&Счет_05),
		|			&СубконтоНМА,
		|			СчетКт В (&Счет_91_01),
		|			&СубконтоПрочиеДоходыИРасходы,
		|			Организация = &Организация
		|				И СубконтоКт1.ВидПрочихДоходовИРасходов = &ПереоценкаВнеоборотныхАктивов) КАК ХозрасчетныйОборотыДтКт
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидНМА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Счет_04_01.ВидНМА КАК ВидНМА,
		|	ВТ_Счет_04_01.СНД КАК ЗначениеГрафы04,
		|	0 КАК ЗначениеГрафы05,
		|	0 КАК ЗначениеГрафы06,
		|	0 КАК ЗначениеГрафы07,
		|	0 КАК ЗначениеГрафы08,
		|	0 КАК ЗначениеГрафы09,
		|	0 КАК ЗначениеГрафы10,
		|	0 КАК ЗначениеГрафы11,
		|	0 КАК ЗначениеГрафы12,
		|	ВТ_Счет_04_01.СКД КАК ЗначениеГрафы13,
		|	0 КАК ЗначениеГрафы14
		|ИЗ
		|	ВТ_Счет_04_01 КАК ВТ_Счет_04_01
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Счет_05.ВидНМА,
		|	0,
		|	ВТ_Счет_05.СНК,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	ВТ_Счет_05.СКК
		|ИЗ
		|	ВТ_Счет_05 КАК ВТ_Счет_05
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.НематериальныеАктивы).ВидНМАПоПБУ14,
		|	0,
		|	0,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счет_04_01), &СубконтоНМА, СчетКт В (&Счет_08_05), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РасчетЗначенияГр07.ВидНМА,
		|	0,
		|	0,
		|	0,
		|	РасчетЗначенияГр07.ЗначениеГрафы,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_Счет_04_01.ВидНМА КАК ВидНМА,
		|		ВТ_Счет_04_01.КО КАК ЗначениеГрафы
		|	ИЗ
		|		ВТ_Счет_04_01 КАК ВТ_Счет_04_01
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ОБ_83_01_2__04_01.ВидНМА,
		|		-ВТ_ОБ_83_01_2__04_01.ОБ
		|	ИЗ
		|		ВТ_ОБ_83_01_2__04_01 КАК ВТ_ОБ_83_01_2__04_01
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ОБ_91_02__04_01.ВидНМА,
		|		-ВТ_ОБ_91_02__04_01.ОБ
		|	ИЗ
		|		ВТ_ОБ_91_02__04_01 КАК ВТ_ОБ_91_02__04_01
		|	ГДЕ
		|		&ИспользоватьАлгоритм2011Года
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ОБ_84__04_01.ВидНМА,
		|		-ВТ_ОБ_84__04_01.ОБ
		|	ИЗ
		|		ВТ_ОБ_84__04_01 КАК ВТ_ОБ_84__04_01
		|	ГДЕ
		|		НЕ &ИспользоватьАлгоритм2011Года) КАК РасчетЗначенияГр07
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ОБ_05__04_01.ВидНМА,
		|	0,
		|	0,
		|	0,
		|	0,
		|	ВТ_ОБ_05__04_01.ОБ,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	ВТ_ОБ_05__04_01 КАК ВТ_ОБ_05__04_01
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РасчетЗначенияГр09.ВидНМА,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	РасчетЗначенияГр09.ЗначениеГрафы,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_Счет_05.ВидНМА КАК ВидНМА,
		|		ВТ_Счет_05.КО КАК ЗначениеГрафы
		|	ИЗ
		|		ВТ_Счет_05 КАК ВТ_Счет_05
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ОБ_83_01_2__05.ВидНМА,
		|		-ВТ_ОБ_83_01_2__05.ОБ
		|	ИЗ
		|		ВТ_ОБ_83_01_2__05 КАК ВТ_ОБ_83_01_2__05
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ОБ_91_02__05.ВидНМА,
		|		-ВТ_ОБ_91_02__05.ОБ
		|	ИЗ
		|		ВТ_ОБ_91_02__05 КАК ВТ_ОБ_91_02__05
		|	ГДЕ
		|		&ИспользоватьАлгоритм2011Года
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ОБ_84__05.ВидНМА,
		|		-ВТ_ОБ_84__05.ОБ
		|	ИЗ
		|		ВТ_ОБ_84__05 КАК ВТ_ОБ_84__05
		|	ГДЕ
		|		НЕ &ИспользоватьАлгоритм2011Года) КАК РасчетЗначенияГр09
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РасчетЗначенияГр11.ВидНМА,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	РасчетЗначенияГр11.ЗначениеГрафы,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_ОБ_04_01__83_01_2.ВидНМА КАК ВидНМА,
		|		ВТ_ОБ_04_01__83_01_2.ОБ КАК ЗначениеГрафы
		|	ИЗ
		|		ВТ_ОБ_04_01__83_01_2 КАК ВТ_ОБ_04_01__83_01_2
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ОБ_83_01_2__04_01.ВидНМА,
		|		-ВТ_ОБ_83_01_2__04_01.ОБ
		|	ИЗ
		|		ВТ_ОБ_83_01_2__04_01 КАК ВТ_ОБ_83_01_2__04_01
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ОБ_91_02__04_01.ВидНМА,
		|		-ВТ_ОБ_91_02__04_01.ОБ
		|	ИЗ
		|		ВТ_ОБ_91_02__04_01 КАК ВТ_ОБ_91_02__04_01
		|	ГДЕ
		|		&ИспользоватьАлгоритм2011Года
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ОБ_04_01__91_01.ВидНМА,
		|		ВТ_ОБ_04_01__91_01.ОБ
		|	ИЗ
		|		ВТ_ОБ_04_01__91_01 КАК ВТ_ОБ_04_01__91_01
		|	ГДЕ
		|		&ИспользоватьАлгоритм2011Года
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ОБ_84__04_01.ВидНМА,
		|		-ВТ_ОБ_84__04_01.ОБ
		|	ИЗ
		|		ВТ_ОБ_84__04_01 КАК ВТ_ОБ_84__04_01
		|	ГДЕ
		|		НЕ &ИспользоватьАлгоритм2011Года
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ОБ_04_01__84.ВидНМА,
		|		ВТ_ОБ_04_01__84.ОБ
		|	ИЗ
		|		ВТ_ОБ_04_01__84 КАК ВТ_ОБ_04_01__84
		|	ГДЕ
		|		НЕ &ИспользоватьАлгоритм2011Года) КАК РасчетЗначенияГр11
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РасчетЗначенияГр12.ВидНМА,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	РасчетЗначенияГр12.ЗначениеГрафы,
		|	0,
		|	0
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_ОБ_83_01_2__05.ВидНМА КАК ВидНМА,
		|		ВТ_ОБ_83_01_2__05.ОБ КАК ЗначениеГрафы
		|	ИЗ
		|		ВТ_ОБ_83_01_2__05 КАК ВТ_ОБ_83_01_2__05
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ОБ_05__83_01_2.ВидНМА,
		|		-ВТ_ОБ_05__83_01_2.ОБ
		|	ИЗ
		|		ВТ_ОБ_05__83_01_2 КАК ВТ_ОБ_05__83_01_2
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ОБ_05__91_01.ВидНМА,
		|		-ВТ_ОБ_05__91_01.ОБ
		|	ИЗ
		|		ВТ_ОБ_05__91_01 КАК ВТ_ОБ_05__91_01
		|	ГДЕ
		|		&ИспользоватьАлгоритм2011Года
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ОБ_91_02__05.ВидНМА,
		|		ВТ_ОБ_91_02__05.ОБ
		|	ИЗ
		|		ВТ_ОБ_91_02__05 КАК ВТ_ОБ_91_02__05
		|	ГДЕ
		|		&ИспользоватьАлгоритм2011Года
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ОБ_05__84.ВидНМА,
		|		-ВТ_ОБ_05__84.ОБ
		|	ИЗ
		|		ВТ_ОБ_05__84 КАК ВТ_ОБ_05__84
		|	ГДЕ
		|		НЕ &ИспользоватьАлгоритм2011Года
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ОБ_84__05.ВидНМА,
		|		ВТ_ОБ_84__05.ОБ
		|	ИЗ
		|		ВТ_ОБ_84__05 КАК ВТ_ОБ_84__05
		|	ГДЕ
		|		НЕ &ИспользоватьАлгоритм2011Года) КАК РасчетЗначенияГр12
		|ИТОГИ
		|	СУММА(ЗначениеГрафы04),
		|	СУММА(ЗначениеГрафы05),
		|	СУММА(ЗначениеГрафы06),
		|	СУММА(ЗначениеГрафы07),
		|	СУММА(ЗначениеГрафы08),
		|	СУММА(ЗначениеГрафы09),
		|	СУММА(ЗначениеГрафы10),
		|	СУММА(ЗначениеГрафы11),
		|	СУММА(ЗначениеГрафы12),
		|	СУММА(ЗначениеГрафы13),
		|	СУММА(ЗначениеГрафы14)
		|ПО
		|	ВидНМА";
	
	// Учет по ФСБУ 14/2022 "Нематериальные активы".
	Если ПривестиКДате(КонецПериода) >= '2024-01-01' Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ".ВидНМАПоПБУ14", ".ВидНематериальногоАктива");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ФормаОтчета2011Кв4_Пояснения2

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения2(КонтекстВыполнения) Экспорт
	
	// Вспомогательные значения периодов.
	НачалоПериодаОтчета = КонтекстВыполнения.НачалоПериодаОтчета;
	ДатаКонцаПериодаОтчета  = КонтекстВыполнения.КонецПериодаОтчета;
	КонецПериодаОтчета = Новый МоментВремениСУточнениемПериода(ДатаКонцаПериодаОтчета, 0);
	
	НачалоПериодаПредыдущегоГода = ДобавитьМесяц(КонтекстВыполнения.НачалоПериодаОтчета, -12);
	ДатаКонцаПредыдущегоГода  = КонецГода(НачалоПериодаПредыдущегоГода);
	КонецПериодаПредыдущегоГода = Новый МоментВремениСУточнениемПериода(ДатаКонцаПредыдущегоГода, БухгалтерскийУчет.ВерхняяГраницаУточненияПериода());
	
	НачалоПериодаГодаПредшествующегоПредыдущему = ДобавитьМесяц(КонтекстВыполнения.НачалоПериодаОтчета, -24);
	ДатаКонцаГодаПредшествующегоПредыдущему  = КонецГода(НачалоПериодаГодаПредшествующегоПредыдущему);
	КонецПериодаГодаПредшествующегоПредыдущему = Новый МоментВремениСУточнениемПериода(ДатаКонцаГодаПредшествующегоПредыдущему, БухгалтерскийУчет.ВерхняяГраницаУточненияПериода());
	
	ЗаголовокГрафыНаОтчетнуюДату = "На " + Формат(ДатаКонцаПериодаОтчета, "ДЛФ=DD");
	ЗаголовокГрафыНаКонецПредыдущегоГода = "На " + Формат(ДатаКонцаПредыдущегоГода, "ДЛФ=DD");
	ЗаголовокГрафыНаКонецГодаПредшествующегоПредыдущему = "На " + Формат(ДатаКонцаГодаПредшествующегоПредыдущему, "ДЛФ=DD");
	
	ЗаполнятьПредыдущиеПериоды = НЕ РасширенныйПериодОтчета(НачалоПериодаОтчета);
	
	ТаблицаЗначенийДопСтрок5200и5210 = КонтекстВыполнения.ТаблицаЗначенийДопСтрок5200и5210;
	ТаблицаЗначенийДопСтрок5220и5230 = КонтекстВыполнения.ТаблицаЗначенийДопСтрок5220и5230;
	ТаблицаЗначенийДопСтрок5240и5250 = КонтекстВыполнения.ТаблицаЗначенийДопСтрок5240и5250;
	ТаблицаЗначенийДопСтрок5260      = КонтекстВыполнения.ТаблицаЗначенийДопСтрок5260;
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения2Строки5200и5210(КонтекстВыполнения, "5200", НачалоПериодаОтчета, КонецПериодаОтчета, ТаблицаЗначенийДопСтрок5200и5210);
	ЗаполнитьФормаОтчета2011Кв4_Пояснения2Строки5220и5230(КонтекстВыполнения, "5220", НачалоПериодаОтчета, КонецПериодаОтчета, ТаблицаЗначенийДопСтрок5220и5230);
	ЗаполнитьФормаОтчета2011Кв4_Пояснения2Строки5240и5250(КонтекстВыполнения, "5240", НачалоПериодаОтчета, КонецПериодаОтчета, ТаблицаЗначенийДопСтрок5240и5250);
	ЗаполнитьФормаОтчета2011Кв4_Пояснения2Строка5260(КонтекстВыполнения, "03", НачалоПериодаОтчета, КонецПериодаОтчета, ТаблицаЗначенийДопСтрок5260);
	ЗаполнитьФормаОтчета2011Кв4_Пояснения2Строки528х(КонтекстВыполнения, "03", ЗаголовокГрафыНаОтчетнуюДату, НачалоПериодаОтчета, КонецПериодаОтчета);
	
	Если ЗаполнятьПредыдущиеПериоды Тогда
		ЗаполнитьФормаОтчета2011Кв4_Пояснения2Строки5200и5210(КонтекстВыполнения, "5210", НачалоПериодаПредыдущегоГода, КонецПериодаПредыдущегоГода, ТаблицаЗначенийДопСтрок5200и5210);
		ЗаполнитьФормаОтчета2011Кв4_Пояснения2Строки5220и5230(КонтекстВыполнения, "5230", НачалоПериодаПредыдущегоГода, КонецПериодаПредыдущегоГода, ТаблицаЗначенийДопСтрок5220и5230);
		ЗаполнитьФормаОтчета2011Кв4_Пояснения2Строки5240и5250(КонтекстВыполнения, "5250", НачалоПериодаПредыдущегоГода, КонецПериодаПредыдущегоГода, ТаблицаЗначенийДопСтрок5240и5250);
		ЗаполнитьФормаОтчета2011Кв4_Пояснения2Строка5260(КонтекстВыполнения, "04", НачалоПериодаПредыдущегоГода, КонецПериодаПредыдущегоГода, ТаблицаЗначенийДопСтрок5260);
		ЗаполнитьФормаОтчета2011Кв4_Пояснения2Строки528х(КонтекстВыполнения, "04", ЗаголовокГрафыНаКонецПредыдущегоГода, НачалоПериодаПредыдущегоГода, КонецПериодаПредыдущегоГода);
		ЗаполнитьФормаОтчета2011Кв4_Пояснения2Строки528х(КонтекстВыполнения, "05", ЗаголовокГрафыНаКонецГодаПредшествующегоПредыдущему, НачалоПериодаГодаПредшествующегоПредыдущему, КонецПериодаГодаПредшествующегоПредыдущему);
	КонецЕсли;
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения2Строки5200и5210ВТомЧисле(КонтекстВыполнения, ТаблицаЗначенийДопСтрок5200и5210);
	ЗаполнитьФормаОтчета2011Кв4_Пояснения2Строки5220и5230ВТомЧисле(КонтекстВыполнения, ТаблицаЗначенийДопСтрок5220и5230);
	ЗаполнитьФормаОтчета2011Кв4_Пояснения2Строки5240и5250ВТомЧисле(КонтекстВыполнения, ТаблицаЗначенийДопСтрок5240и5250);
	ЗаполнитьФормаОтчета2011Кв4_Пояснения2Строка5260ВТомЧисле(КонтекстВыполнения, ТаблицаЗначенийДопСтрок5260);
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения2Строки5200и5210(КонтекстВыполнения,
	НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок)
	
	ИмяРаздела = "Пояснения2";
	
	Организация = КонтекстВыполнения.Организация;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	ПараметрыРасшифровки = Новый Структура;
	ПараметрыРасшифровки.Вставить("Организация",   КонтекстВыполнения.Организация);
	ПараметрыРасшифровки.Вставить("НачалоПериода", НачалоПериода);
	ПараметрыРасшифровки.Вставить("КонецПериода",  КонецПериода);
	
	КонтекстВыполнения.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
	
	ИспользоватьАлгоритм2011Года = (ПривестиКДате(КонецПериода) >= '20110101');
	
	НастройкиПолученияБухитогов = Новый Структура;
	НастройкиПолученияБухитогов.Вставить("Организация",   Организация);
	НастройкиПолученияБухитогов.Вставить("НачалоПериода", НачалоПериода);
	НастройкиПолученияБухитогов.Вставить("КонецПериода",  КонецПериода);
	
	СальдоИОборотыПоСчетам = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
	ОборотыМеждуСчетами    = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетами(НастройкиПолученияБухитогов);
	
	СНД_01_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД("01.01", СальдоИОборотыПоСчетам);
	СНД_01_03 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД("01.03", СальдоИОборотыПоСчетам);
	СНД_01_08 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД("01.08", СальдоИОборотыПоСчетам);
	СНД_01_11 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД("01.11", СальдоИОборотыПоСчетам);
	
	СКД_01_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("01.01", СальдоИОборотыПоСчетам);
	СКД_01_03 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("01.03", СальдоИОборотыПоСчетам);
	СКД_01_08 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("01.08", СальдоИОборотыПоСчетам);
	СКД_01_11 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("01.11", СальдоИОборотыПоСчетам);
	
	СНК_02_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНК("02.01", СальдоИОборотыПоСчетам);
	СНК_02_03 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНК("02.03", СальдоИОборотыПоСчетам);
	СНК_02_11 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНК("02.11", СальдоИОборотыПоСчетам);
	
	КО_02_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.КО("02.01", СальдоИОборотыПоСчетам);
	КО_02_03 = ЗаполнениеБухгалтерскойОтчетностиИтоги.КО("02.03", СальдоИОборотыПоСчетам);
	КО_02_11 = ЗаполнениеБухгалтерскойОтчетностиИтоги.КО("02.11", СальдоИОборотыПоСчетам);
	
	СКК_02_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКК("02.01", СальдоИОборотыПоСчетам);
	СКК_02_03 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКК("02.03", СальдоИОборотыПоСчетам);
	СКК_02_11 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКК("02.11", СальдоИОборотыПоСчетам);
	
	ОБ_01_01__08 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("01.01", "08", ОборотыМеждуСчетами);
	ОБ_01_03__08 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("01.03", "08", ОборотыМеждуСчетами);
	ОБ_01_08__08 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("01.08", "08", ОборотыМеждуСчетами);
	ОБ_01_11__08 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("01.11", "08", ОборотыМеждуСчетами);
	
	ОБ_01_09__01_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("01.09", "01.01", ОборотыМеждуСчетами);
	ОБ_01_09__01_03 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("01.09", "01.03", ОборотыМеждуСчетами);
	ОБ_01_09__01_11 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("01.09", "01.11", ОборотыМеждуСчетами);
	
	ОБ_02_01__01_09 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("02.01", "01.09", ОборотыМеждуСчетами);
	ОБ_02_03__01_09 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("02.03", "01.09", ОборотыМеждуСчетами);
	ОБ_02_11__01_09 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("02.11", "01.09", ОборотыМеждуСчетами);
	
	ОБ_01_01__83_01_1 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("01.01", "83.01.1", ОборотыМеждуСчетами);
	ОБ_83_01_1__01_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("83.01.1", "01.01", ОборотыМеждуСчетами);
	
	ОБ_01_03__83_01_1 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("01.03", "83.01.1", ОборотыМеждуСчетами);
	ОБ_83_01_1__01_03 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("83.01.1", "01.03", ОборотыМеждуСчетами);
	
	ОБ_01_11__83_01_1 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("01.11", "83.01.1", ОборотыМеждуСчетами);
	ОБ_83_01_1__01_11 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("83.01.1", "01.11", ОборотыМеждуСчетами);
	
	ОБ_02_01__83_01_1 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("02.01", "83.01.1", ОборотыМеждуСчетами);
	ОБ_83_01_1__02_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("83.01.1", "02.01", ОборотыМеждуСчетами);
	
	ОБ_02_03__83_01_1 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("02.03", "83.01.1", ОборотыМеждуСчетами);
	ОБ_83_01_1__02_03 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("83.01.1", "02.03", ОборотыМеждуСчетами);
	
	ОБ_02_11__83_01_1 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("02.11", "83.01.1", ОборотыМеждуСчетами);
	ОБ_83_01_1__02_11 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("83.01.1", "02.11", ОборотыМеждуСчетами);
	
	ОБ_01_01__84 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("01.01", "84", ОборотыМеждуСчетами);
	ОБ_84__01_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("84", "01.01", ОборотыМеждуСчетами);
	ОБ_02_01__84 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("02.01", "84", ОборотыМеждуСчетами);
	ОБ_84__02_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("84", "02.01", ОборотыМеждуСчетами);
	
	ОБ_02_01__02 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("02.01", "02", ОборотыМеждуСчетами);
	ОБ_02_03__02 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("02.03", "02", ОборотыМеждуСчетами);
	ОБ_02_11__02 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("02.11", "02", ОборотыМеждуСчетами);
	
	Обороты91ПоПереоценкеВнеоборотныхАктивов = ЗаполнениеБухгалтерскойОтчетностиИтоги.Обороты91ПоПереоценкеВнеоборотныхАктивов(НастройкиПолученияБухитогов);
	
	ОБ_01_01__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("01.01", "91.01", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	ОБ_91_02__01_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("91.02", "01.01", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	
	ОБ_01_03__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("01.03", "91.01", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	ОБ_91_02__01_03_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("91.02", "01.03", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	
	ОБ_01_11__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("01.11", "91.01", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	ОБ_91_02__01_11_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("91.02", "01.11", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	
	ОБ_91_02__02_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("91.02", "02.01", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	ОБ_02_01__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("02.01", "91.01", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	
	ОБ_91_02__02_03_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("91.02", "02.03", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	ОБ_02_03__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("02.03", "91.01", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	
	ОБ_91_02__02_11_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("91.02", "02.11", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	ОБ_02_11__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("02.11", "91.01", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	
	НаименованиеСтроки = "Основные средства (без учета доходных вложений в материальные ценности) - всего";
	
	Графа = "04";
	ЗаголовокГрафы = "На начало года - первоначальная стоимость";
	ЗначениеПоказателя = СНД_01_01 + СНД_01_03 + СНД_01_08 + СНД_01_11;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """", "+", "!СНД " + Счет("01.01").Код, СНД_01_01, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "01.01"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!СНД " + Счет("01.03").Код, СНД_01_03, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "01.03"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!СНД " + Счет("01.08").Код, СНД_01_08, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "01.08"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", "!СНД " + Счет("01.11").Код,
		СНД_01_11, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "01.11"));
	
	Графа = "05";
	ЗаголовокГрафы = "На начало года - накопленная амортизация";
	ЗначениеПоказателя = СНК_02_01 + СНК_02_03 + СНК_02_11;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, -ЗначениеПоказателя); // вычитаемый
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """", "+", "!СНК " + Счет("02.01").Код, СНК_02_01, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "02.01"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!СНК " + Счет("02.03").Код, СНК_02_03, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "02.03"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", "!СНК " + Счет("02.11").Код,
		СНК_02_11, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "02.11"));
	
	Графа = "06";
	ЗаголовокГрафы = "Изменения за период - Поступило";
	ЗначениеПоказателя = ОБ_01_01__08 + ОБ_01_03__08 + ОБ_01_08__08 + ОБ_01_11__08;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """", "+", "!ОБ " + Счет("01.01").Код + " " + Счет("08").Код, ОБ_01_01__08, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "01.01", "08"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!ОБ " + Счет("01.03").Код + " " + Счет("08").Код, ОБ_01_03__08, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "01.03", "08"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!ОБ " + Счет("01.08").Код + " " + Счет("08").Код, ОБ_01_08__08, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "01.08", "08"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", "!ОБ " + Счет("01.11").Код + " " + Счет("08").Код,
		ОБ_01_11__08, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "01.11", "08"));
	
	Графа = "07";
	ЗаголовокГрафы = "Изменения за период - Выбыло объектов - первоначальная стоимость";
	ЗначениеПоказателя = ОБ_01_09__01_01 + ОБ_01_09__01_03 + ОБ_01_09__01_11;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, -ЗначениеПоказателя); // вычитаемый
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """", "+", "!ОБ " + Счет("01.09").Код + " " + Счет("01.01").Код, ОБ_01_09__01_01, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "01.09", "01.01"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!ОБ " + Счет("01.09").Код + " " + Счет("01.03").Код, ОБ_01_09__01_03, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "01.09", "01.03"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", "!ОБ " + Счет("01.09").Код + " " + Счет("01.11").Код,
		ОБ_01_09__01_11, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "01.09", "01.11"));
	
	Графа = "08";
	ЗаголовокГрафы = "Изменения за период - Выбыло объектов - накопленная амортизация";
	ЗначениеПоказателя = ОБ_02_01__01_09 + ОБ_02_03__01_09 + ОБ_02_11__01_09;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """", "+", "!ОБ " + Счет("02.01").Код + " " + Счет("01.09").Код, ОБ_02_01__01_09, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "02.01", "01.09"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!ОБ " + Счет("02.03").Код + " " + Счет("01.09").Код, ОБ_02_03__01_09, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "02.03", "01.09"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", "!ОБ " + Счет("02.11").Код + " " + Счет("01.09").Код,
		ОБ_02_11__01_09, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "02.11", "01.09"));
	
	Графа = "09";
	ЗаголовокГрафы = "Изменения за период - начислено амортизации";
	Если ИспользоватьАлгоритм2011Года Тогда
		ЗначениеПоказателя = КО_02_01 + КО_02_03 + КО_02_11
		                   - ОБ_02_01__02 - ОБ_02_03__02 - ОБ_02_11__02;
		// Вычет графы 11.
		ЗначениеПоказателя = ЗначениеПоказателя
		                   - ОБ_83_01_1__02_01 + ОБ_02_01__83_01_1
		                   - ОБ_83_01_1__02_03 + ОБ_02_03__83_01_1
		                   - ОБ_83_01_1__02_11 + ОБ_02_11__83_01_1
		                   - ОБ_91_02__02_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов
		                   + ОБ_02_01__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов
		                   - ОБ_91_02__02_03_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов
		                   + ОБ_02_03__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов
		                   - ОБ_91_02__02_11_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов
		                   + ОБ_02_11__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов;

		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """", "+", "!КО " + Счет("02.01").Код, КО_02_01, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "02.01"));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!КО " + Счет("02.03").Код, КО_02_03, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "02.03"));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
			"+", "!КО " + Счет("02.11").Код,
			КО_02_11, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "02.11"));
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!ОБ " + Счет("02.01").Код + " " + Счет("02").Код, -ОБ_02_01__02, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "02.01", "02"));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!ОБ " + Счет("02.03").Код + " " + Счет("02").Код, -ОБ_02_03__02, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "02.03", "02"));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
			"-", "!ОБ " + Счет("02.11").Код + " " + Счет("02").Код,
			-ОБ_02_11__02, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "02.11", "02"));
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!ОБ " + Счет("83.01.1").Код + " " + Счет("02.01").Код, -ОБ_83_01_1__02_01, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "83.01.1", "02.01"));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!ОБ " + Счет("02.01").Код + " " + Счет("83.01.1").Код, ОБ_02_01__83_01_1, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "02.01", "83.01.1"));
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!ОБ " + Счет("83.01.1").Код + " " + Счет("02.03").Код, -ОБ_83_01_1__02_03, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "83.01.1", "02.03"));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!ОБ " + Счет("02.03").Код + " " + Счет("83.01.1").Код, ОБ_02_03__83_01_1, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "02.03", "83.01.1"));
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
			"-", "!ОБ " + Счет("83.01.1").Код + " " + Счет("02.11").Код,
			-ОБ_83_01_1__02_11, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "83.01.1", "02.11"));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
			"+", "!ОБ " + Счет("02.11").Код + " " + Счет("83.01.1").Код,
			ОБ_02_11__83_01_1, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "02.11", "83.01.1"));
		
		ИмяВПДР = "ПереоценкаВнеоборотныхАктивов";
		НаименованиеСлагаемого = "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.01";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", НаименованиеСлагаемого, -ОБ_91_02__02_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "02.01", ИмяВПДР));
		НаименованиеСлагаемого = "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.01";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", НаименованиеСлагаемого, ОБ_02_01__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "02.01", ИмяВПДР));
		
		НаименованиеСлагаемого = "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.03";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", НаименованиеСлагаемого, -ОБ_91_02__02_03_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "02.03", ИмяВПДР));
		НаименованиеСлагаемого = "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.03";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", НаименованиеСлагаемого, ОБ_02_03__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "02.03", ИмяВПДР));
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
			"-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.11",
			-ОБ_91_02__02_11_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "02.11", ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
			"+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.11",
			ОБ_02_11__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "02.11", ИмяВПДР));
		
	Иначе
		ЗначениеПоказателя = КО_02_01 + КО_02_03
		                   - ОБ_02_01__02 - ОБ_02_03__02;
		// Вычет графы 11.
		ЗначениеПоказателя = ЗначениеПоказателя
		                   - ОБ_83_01_1__02_01 + ОБ_02_01__83_01_1
		                   + ОБ_02_01__84 - ОБ_84__02_01;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """", "+", "!КО " + Счет("02.01").Код, КО_02_01, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "02.01"));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!ОБ " + Счет("83.01.1").Код + " " + Счет("02.01").Код, -ОБ_83_01_1__02_01, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "83.01.1", "02.01"));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!ОБ " + Счет("02.01").Код + " " + Счет("83.01.1").Код, ОБ_02_01__83_01_1, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "02.01", "83.01.1"));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!ОБ " + Счет("02.01").Код + " " + Счет("84").Код, ОБ_02_01__84, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "02.01", "84"));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!ОБ " + Счет("84").Код + " " + Счет("02.01").Код, -ОБ_84__02_01, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "84", "02.01"));
	КонецЕсли;
	
	Графа = "10";
	ЗаголовокГрафы = "Изменения за период - Переоценка - первоначальная стоимость";
	Если ИспользоватьАлгоритм2011Года Тогда
		ЗначениеПоказателя = ОБ_01_01__83_01_1 - ОБ_83_01_1__01_01
		                   + ОБ_01_03__83_01_1 - ОБ_83_01_1__01_03
		                   + ОБ_01_11__83_01_1 - ОБ_83_01_1__01_11
		                   - ОБ_91_02__01_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов
		                   + ОБ_01_01__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов
		                   - ОБ_91_02__01_03_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов
		                   + ОБ_01_03__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов
		                   - ОБ_91_02__01_11_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов
		                   + ОБ_01_11__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """", "+", "!ОБ " + Счет("01.01").Код + " " + Счет("83.01.1").Код, ОБ_01_01__83_01_1, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "01.01", "83.01.1"));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!ОБ " + Счет("83.01.1").Код + " " + Счет("01.01").Код, -ОБ_83_01_1__01_01, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "83.01.1", "01.01"));
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!ОБ " + Счет("01.03").Код + " " + Счет("83.01.1").Код, ОБ_01_03__83_01_1, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "01.03", "83.01.1"));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!ОБ " + Счет("83.01.1").Код + " " + Счет("01.03").Код, -ОБ_83_01_1__01_03, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "83.01.1", "01.03"));
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
			"+", "!ОБ " + Счет("01.11").Код + " " + Счет("83.01.1").Код,
			ОБ_01_11__83_01_1, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "01.11", "83.01.1"));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
			"-", "!ОБ " + Счет("83.01.1").Код + " " + Счет("01.11").Код,
			-ОБ_83_01_1__01_11, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "83.01.1", "01.11"));
		
		ИмяВПДР = "ПереоценкаВнеоборотныхАктивов";
		НаименованиеСлагаемого = "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 01.01";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", НаименованиеСлагаемого, -ОБ_91_02__01_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "01.01", ИмяВПДР));
		НаименованиеСлагаемого = "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 01.01";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", НаименованиеСлагаемого, ОБ_01_01__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "01.01", ИмяВПДР));
		
		НаименованиеСлагаемого = "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 01.03";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", НаименованиеСлагаемого, -ОБ_91_02__01_03_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "01.03", ИмяВПДР));
		НаименованиеСлагаемого = "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 01.03";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", НаименованиеСлагаемого, ОБ_01_03__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "01.03", ИмяВПДР));
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
			"-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 01.11",
			-ОБ_91_02__01_11_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "01.11", ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
			"+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 01.11",
			ОБ_01_11__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "01.11", ИмяВПДР));
		
	Иначе
		ЗначениеПоказателя = ОБ_01_01__83_01_1 - ОБ_83_01_1__01_01
		                   - ОБ_84__01_01 + ОБ_01_01__84;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """", "+", "!ОБ " + Счет("01.01").Код + " " + Счет("83.01.1").Код, ОБ_01_01__83_01_1, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "01.01", "83.01.1"));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!ОБ " + Счет("83.01.1").Код + " " + Счет("01.01").Код, -ОБ_83_01_1__01_01, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "83.01.1", "01.01"));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!ОБ " + Счет("84").Код + " " + Счет("01.01").Код, -ОБ_84__01_01, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "84", "01.01"));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!ОБ " + Счет("01.01").Код + " " + Счет("84").Код, ОБ_01_01__84, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "01.01", "84"));
	КонецЕсли;
	
	Графа = "11";
	ЗаголовокГрафы = "Изменения за период - Переоценка - накопленная амортизация";
	Если ИспользоватьАлгоритм2011Года Тогда
		ЗначениеПоказателя = ОБ_83_01_1__02_01 - ОБ_02_01__83_01_1
		                   + ОБ_83_01_1__02_03 - ОБ_02_03__83_01_1
		                   + ОБ_83_01_1__02_11 - ОБ_02_11__83_01_1
		                   + ОБ_91_02__02_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов
		                   - ОБ_02_01__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов
		                   + ОБ_91_02__02_03_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов
		                   - ОБ_02_03__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов
		                   + ОБ_91_02__02_11_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов
		                   - ОБ_02_11__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """", "+", "!ОБ " + Счет("83.01.1").Код + " " + Счет("02.01").Код, ОБ_83_01_1__02_01, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "83.01.1", "02.01"));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!ОБ " + Счет("02.01").Код + " " + Счет("83.01.1").Код, -ОБ_02_01__83_01_1, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "02.01", "83.01.1"));
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!ОБ " + Счет("83.01.1").Код + " " + Счет("02.03").Код, ОБ_83_01_1__02_03, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "83.01.1", "02.03"));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!ОБ " + Счет("02.03").Код + " " + Счет("83.01.1").Код, -ОБ_02_03__83_01_1, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "02.03", "83.01.1"));
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
			"+", "!ОБ " + Счет("83.01.1").Код + " " + Счет("02.11").Код,
			ОБ_83_01_1__02_11, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "83.01.1", "02.11"));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
			"-", "!ОБ " + Счет("02.11").Код + " " + Счет("83.01.1").Код,
			-ОБ_02_11__83_01_1, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "02.11", "83.01.1"));
		
		ИмяВПДР = "ПереоценкаВнеоборотныхАктивов";
		НаименованиеСлагаемого = "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.01";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", НаименованиеСлагаемого, ОБ_91_02__02_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "02.01", ИмяВПДР));
		НаименованиеСлагаемого = "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.01";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", НаименованиеСлагаемого, -ОБ_02_01__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "02.01", ИмяВПДР));
		
		НаименованиеСлагаемого = "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.03";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", НаименованиеСлагаемого, ОБ_91_02__02_03_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "02.03", ИмяВПДР));
		НаименованиеСлагаемого = "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.03";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", НаименованиеСлагаемого, -ОБ_02_03__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "02.03", ИмяВПДР));
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
			"+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.11",
			ОБ_91_02__02_11_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "02.11", ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
			"-", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.11",
			-ОБ_02_11__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "02.11", ИмяВПДР));
		
	Иначе
		ЗначениеПоказателя = ОБ_83_01_1__02_01 - ОБ_02_01__83_01_1
		                   - ОБ_02_01__84 + ОБ_84__02_01;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """", "+", "!ОБ " + Счет("83.01.1").Код + " " + Счет("02.01").Код, ОБ_83_01_1__02_01, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "83.01.1", "02.01"));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!ОБ " + Счет("02.01") + " " + Счет("83.01.1"), -ОБ_02_01__83_01_1, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "02.01", "83.01.1"));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!ОБ " + Счет("02.01") + " " + Счет("84"), -ОБ_02_01__84, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "02.01", "84"));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!ОБ " + Счет("84") + " " + Счет("02.01"), ОБ_84__02_01, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "84", "02.01"));
	КонецЕсли;
	
	Графа = "12";
	ЗаголовокГрафы = "На конец периода - первоначальная стоимость";
	ЗначениеПоказателя = СКД_01_01 + СКД_01_03 + СКД_01_08 + СКД_01_11;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """", "+", "!СКД " + Счет("01.01").Код, СКД_01_01, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "01.01"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!СКД " + Счет("01.03").Код, СКД_01_03, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "01.03"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!СКД " + Счет("01.08").Код, СКД_01_08, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "01.08"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", "!СКД " + Счет("01.11").Код,
		СКД_01_11, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "01.11"));
	
	Графа = "13";
	ЗаголовокГрафы = "На конец периода - накопленная амортизация";
	ЗначениеПоказателя = СКК_02_01 + СКК_02_03 + СКК_02_11;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, -ЗначениеПоказателя); // вычитаемый
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """",
		"+", "!СКК " + Счет("02.01").Код,
		СКК_02_01, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "02.01"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", "!СКК " + Счет("02.03").Код,
		СКК_02_03, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "02.03"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", "!СКК " + Счет("02.11").Код,
		СКК_02_11, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "02.11"));
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения2СведенияДопСтрок5200и5210КромеГраф10и11(КонтекстВыполнения, НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок);
	ЗаполнитьФормаОтчета2011Кв4_Пояснения2СведенияДопСтрок5200и5210ПоГрафе10(КонтекстВыполнения, НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок);
	ЗаполнитьФормаОтчета2011Кв4_Пояснения2СведенияДопСтрок5200и5210ПоГрафе11(КонтекстВыполнения, НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок);
	
	КонтекстВыполнения.Удалить("ПараметрыРасшифровки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения2СведенияДопСтрок5200и5210КромеГраф10и11(КонтекстВыполнения,
	НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок)
	
	Организация = КонтекстВыполнения.Организация;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОбъединениеДанных.ГруппаОС КАК ГруппаОС,
	               |	СУММА(ОбъединениеДанных.Значение) КАК Значение
	               |ПОМЕСТИТЬ ВТ_Графа09
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ХозрасчетныйОбороты.Субконто1.ГруппаОС КАК ГруппаОС,
	               |		ХозрасчетныйОбороты.СуммаОборотКт КАК Значение
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, Период, Счет В (&СчетаУчетаАмортизацииОС), &ВидСубконтоОС, Организация = &Организация, , ) КАК ХозрасчетныйОбороты
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
	               |		-1 * ХозрасчетныйОборотыДтКт.СуммаОборот
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&СчетаУчетаАмортизацииОС), &ВидСубконтоОС, СчетКт В (&Счет02), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт) КАК ОбъединениеДанных
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъединениеДанных.ГруппаОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Субконто1.ГруппаОС КАК ГруппаУчетаОС,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК ЗначениеГрафы04,
	               |	0 КАК ЗначениеГрафы05,
	               |	0 КАК ЗначениеГрафы06,
	               |	0 КАК ЗначениеГрафы07,
	               |	0 КАК ЗначениеГрафы08,
	               |	0 КАК ЗначениеГрафы09,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК ЗначениеГрафы12,
	               |	0 КАК ЗначениеГрафы13
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&СчетаУчетаОС_010308), &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Субконто1.ГруппаОС,
	               |	0,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&СчетаУчетаАмортизацииОС), &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&СчетаУчетаОС_010308), &ВидСубконтоОС, СчетКт В (&Счета_08), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
	               |	0,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот,
	               |	0,
	               |	0,
	               |	0,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт = &Счет_01_09, &ВидСубконтоОС, СчетКт В (&СчетаУчетаОС_0103), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот,
	               |	0,
	               |	0,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&СчетаУчетаАмортизацииОС), &ВидСубконтоОС, СчетКт = &Счет_01_09, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВТ_Графа09.ГруппаОС,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	ВТ_Графа09.Значение,
	               |	0,
	               |	0
	               |ИЗ
	               |	ВТ_Графа09 КАК ВТ_Графа09
	               |ИТОГИ
	               |	СУММА(ЗначениеГрафы04),
	               |	СУММА(ЗначениеГрафы05),
	               |	СУММА(ЗначениеГрафы06),
	               |	СУММА(ЗначениеГрафы07),
	               |	СУММА(ЗначениеГрафы08),
	               |	СУММА(ЗначениеГрафы09),
	               |	СУММА(ЗначениеГрафы12),
	               |	СУММА(ЗначениеГрафы13)
	               |ПО
	               |	ГруппаУчетаОС";
	
	Запрос.УстановитьПараметр("НачПериода",  НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода",  КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	СчетаУчетаОС_0103 = МассивСчетовВИерархииИзСписка("01.01, 01.03, 01.11");
	СчетаУчетаОС_010308 = МассивСчетовВИерархииИзСписка("01.01, 01.03, 01.11, 01.08");
	СчетаУчетаАмортизацииОС = МассивСчетовВИерархииИзСписка("02.01, 02.03, 02.11");
	Счет02 = МассивСчетовВИерархииИзСписка("02");
	
	Запрос.УстановитьПараметр("СчетаУчетаОС_0103", СчетаУчетаОС_0103);
	Запрос.УстановитьПараметр("СчетаУчетаОС_010308", СчетаУчетаОС_010308);
	Запрос.УстановитьПараметр("СчетаУчетаАмортизацииОС", СчетаУчетаАмортизацииОС);
	Запрос.УстановитьПараметр("Счет02", Счет02);
	
	Запрос.УстановитьПараметр("Счет_01_09", Счет("01.09"));
	Запрос.УстановитьПараметр("Счета_08",   БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08")));
	
	Запрос.УстановитьПараметр("ВидСубконтоОС", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		ГруппаУчетаОС = Выборка.ГруппаУчетаОС;
		Если НЕ ЗначениеЗаполнено(ГруппаУчетаОС) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицыДополнительныхСтрок = ТаблицаДополнительныхСтрок.Добавить();
		СтрокаТаблицыДополнительныхСтрок.ГруппаУчетаОС = ГруппаУчетаОС;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "04" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы04;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "05" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы05;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "06" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы06;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "07" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы07;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "08" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы08;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "09" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы09;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "12" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы12;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "13" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы13;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения2СведенияДопСтрок5200и5210ПоГрафе10(КонтекстВыполнения,
	НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок);
	
	Организация = КонтекстВыполнения.Организация;
	
	ИспользоватьАлгоритм2011Года = (ПривестиКДате(КонецПериода) >= '20110101');
	
	Графа = "10";
	Запрос = Новый Запрос;
	Если ИспользоватьАлгоритм2011Года Тогда
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС КАК ГруппаУчетаОС,
			|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК ЗначениеПоказателя
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&СчетаУчетаОС), &ВидСубконтоОС, СчетКт = &Счет_83_01_1, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ХозрасчетныйОборотыДтКт.СубконтоКт1.ГруппаОС,
			|	-ХозрасчетныйОборотыДтКт.СуммаОборот
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт = &Счет_83_01_1, , СчетКт В (&СчетаУчетаОС), &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ХозрасчетныйОборотыДтКт.СубконтоКт1.ГруппаОС,
			|	-ХозрасчетныйОборотыДтКт.СуммаОборот
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
			|			&НачПериода,
			|			&КонПериода,
			|			Период,
			|			СчетДт В (&Счета_91_02),
			|			&ВидСубконтоПрочиеДоходыИРасходы,
			|			СчетКт В (&СчетаУчетаОС),
			|			&ВидСубконтоОС,
			|			Организация = &Организация
			|				И СубконтоДт1.ВидПрочихДоходовИРасходов = &ПереоценкаВнеоборотныхАктивов) КАК ХозрасчетныйОборотыДтКт
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
			|	ХозрасчетныйОборотыДтКт.СуммаОборот
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
			|			&НачПериода,
			|			&КонПериода,
			|			Период,
			|			СчетДт В (&СчетаУчетаОС),
			|			&ВидСубконтоОС,
			|			СчетКт В (&Счета_91_01),
			|			&ВидСубконтоПрочиеДоходыИРасходы,
			|			Организация = &Организация
			|				И СубконтоКт1.ВидПрочихДоходовИРасходов = &ПереоценкаВнеоборотныхАктивов) КАК ХозрасчетныйОборотыДтКт
			|ИТОГИ
			|	СУММА(ЗначениеПоказателя)
			|ПО
			|	ГруппаУчетаОС";
	Иначе
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС КАК ГруппаУчетаОС,
			|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК ЗначениеПоказателя
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&СчетаУчетаОС), &ВидСубконтоОС, СчетКт = &Счет_83_01_1, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ХозрасчетныйОборотыДтКт.СубконтоКт1.ГруппаОС,
			|	-ХозрасчетныйОборотыДтКт.СуммаОборот
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт = &Счет_83_01_1, , СчетКт В (&СчетаУчетаОС), &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ХозрасчетныйОборотыДтКт.СубконтоКт1.ГруппаОС,
			|	-ХозрасчетныйОборотыДтКт.СуммаОборот
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счета_84), , СчетКт В (&СчетаУчетаОС), &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
			|	ХозрасчетныйОборотыДтКт.СуммаОборот
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&СчетаУчетаОС), &ВидСубконтоОС, СчетКт В (&Счета_84), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
			|ИТОГИ
			|	СУММА(ЗначениеПоказателя)
			|ПО
			|	ГруппаУчетаОС";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачПериода",  НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода",  КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	СчетаУчетаОС = МассивСчетовВИерархииИзСписка("01.01, 01.03, 01.11");
	Запрос.УстановитьПараметр("СчетаУчетаОС", СчетаУчетаОС);
	
	Запрос.УстановитьПараметр("Счет_83_01_1", Счет("83.01.1"));
	Запрос.УстановитьПараметр("Счета_84",     БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("84")));
	Запрос.УстановитьПараметр("Счета_91_01",   БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("91.01")));
	Запрос.УстановитьПараметр("Счета_91_02",   БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("91.02")));
	
	Запрос.УстановитьПараметр("ВидСубконтоОС",                   ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	Запрос.УстановитьПараметр("ВидСубконтоПрочиеДоходыИРасходы", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("ПереоценкаВнеоборотныхАктивов",   Перечисления.ВидыПрочихДоходовИРасходов.ПереоценкаВнеоборотныхАктивов);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		ГруппаУчетаОС = Выборка.ГруппаУчетаОС;
		Если НЕ ЗначениеЗаполнено(ГруппаУчетаОС) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицыДополнительныхСтрок = ТаблицаДополнительныхСтрок.Добавить();
		СтрокаТаблицыДополнительныхСтрок.ГруппаУчетаОС = ГруппаУчетаОС;
		СтрокаТаблицыДополнительныхСтрок["Графа" + Графа + "_" + НомерСтроки] = Выборка.ЗначениеПоказателя;
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения2СведенияДопСтрок5200и5210ПоГрафе11(КонтекстВыполнения,
	НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок);
	
	Организация = КонтекстВыполнения.Организация;
	
	ИспользоватьАлгоритм2011Года = (ПривестиКДате(КонецПериода) >= '20110101');
	
	Графа = "11";
	Запрос = Новый Запрос;
	Если ИспользоватьАлгоритм2011Года Тогда
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ХозрасчетныйОборотыДтКт.СубконтоКт1.ГруппаОС КАК ГруппаУчетаОС,
			|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК ЗначениеПоказателя
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт = &Счет_83_01_1, , СчетКт В (&СчетаУчетаАмортизацииОС), &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
			|	-ХозрасчетныйОборотыДтКт.СуммаОборот
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&СчетаУчетаАмортизацииОС), &ВидСубконтоОС, СчетКт = &Счет_83_01_1, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ХозрасчетныйОборотыДтКт.СубконтоКт1.ГруппаОС,
			|	ХозрасчетныйОборотыДтКт.СуммаОборот
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
			|			&НачПериода,
			|			&КонПериода,
			|			Период,
			|			СчетДт В (&Счета_91_02),
			|			&ВидСубконтоПрочиеДоходыИРасходы,
			|			СчетКт В (&СчетаУчетаАмортизацииОС),
			|			&ВидСубконтоОС,
			|			Организация = &Организация
			|				И СубконтоДт1.ВидПрочихДоходовИРасходов = &ПереоценкаВнеоборотныхАктивов) КАК ХозрасчетныйОборотыДтКт
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
			|	-ХозрасчетныйОборотыДтКт.СуммаОборот
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
			|			&НачПериода,
			|			&КонПериода,
			|			Период,
			|			СчетДт В (&СчетаУчетаАмортизацииОС),
			|			&ВидСубконтоОС,
			|			СчетКт В (&Счета_91_01),
			|			&ВидСубконтоПрочиеДоходыИРасходы,
			|			Организация = &Организация
			|				И СубконтоКт1.ВидПрочихДоходовИРасходов = &ПереоценкаВнеоборотныхАктивов) КАК ХозрасчетныйОборотыДтКт
			|ИТОГИ
			|	СУММА(ЗначениеПоказателя)
			|ПО
			|	ГруппаУчетаОС";
	Иначе
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ХозрасчетныйОборотыДтКт.СубконтоКт1.ГруппаОС КАК ГруппаУчетаОС,
			|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК ЗначениеПоказателя
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт = &Счет_83_01_1, , СчетКт В (&СчетаУчетаАмортизацииОС), &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ХозрасчетныйОборотыДтКт.СубконтоКт1.ГруппаОС,
			|	-ХозрасчетныйОборотыДтКт.СуммаОборот
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&СчетаУчетаАмортизацииОС), &ВидСубконтоОС, СчетКт = &Счет_83_01_1, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
			|	-ХозрасчетныйОборотыДтКт.СуммаОборот
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&СчетаУчетаАмортизацииОС), &ВидСубконтоОС, СчетКт В (&Счета_84), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ХозрасчетныйОборотыДтКт.СубконтоКт1.ГруппаОС,
			|	ХозрасчетныйОборотыДтКт.СуммаОборот
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счета_84), , СчетКт В (&СчетаУчетаАмортизацииОС), &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
			|ИТОГИ
			|	СУММА(ЗначениеПоказателя)
			|ПО
			|	ГруппаУчетаОС";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачПериода",  НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода",  КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	СчетаУчетаАмортизацииОС = МассивСчетовВИерархииИзСписка("02.01, 02.03, 02.11");
	Запрос.УстановитьПараметр("СчетаУчетаАмортизацииОС", СчетаУчетаАмортизацииОС);
	
	Запрос.УстановитьПараметр("Счет_83_01_1", Счет("83.01.1"));
	Запрос.УстановитьПараметр("Счета_84",     БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("84")));
	Запрос.УстановитьПараметр("Счета_91_01",  БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("91.01")));
	Запрос.УстановитьПараметр("Счета_91_02",  БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("91.02")));
	
	Запрос.УстановитьПараметр("ВидСубконтоОС",                   ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	Запрос.УстановитьПараметр("ВидСубконтоПрочиеДоходыИРасходы", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("ПереоценкаВнеоборотныхАктивов",   Перечисления.ВидыПрочихДоходовИРасходов.ПереоценкаВнеоборотныхАктивов);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		ГруппаУчетаОС = Выборка.ГруппаУчетаОС;
		Если НЕ ЗначениеЗаполнено(ГруппаУчетаОС) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицыДополнительныхСтрок = ТаблицаДополнительныхСтрок.Добавить();
		СтрокаТаблицыДополнительныхСтрок.ГруппаУчетаОС = ГруппаУчетаОС;
		СтрокаТаблицыДополнительныхСтрок["Графа" + Графа + "_" + НомерСтроки] = -Выборка.ЗначениеПоказателя;
		// Это же значение вычитается из графы 09.
		СтрокаТаблицыДополнительныхСтрок["Графа" + "09" + "_" + НомерСтроки] = -Выборка.ЗначениеПоказателя;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения2Строки5200и5210ВТомЧисле(КонтекстВыполнения, ТаблицаЗначенийДопСтрок)
	
	Если ТаблицаЗначенийДопСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИмяГруппы = "ДопСтрока5200";
	МногострочнаяЧасть = Новый ТаблицаЗначений;
	МногострочнаяЧасть.Колонки.Добавить("П100100520001", Новый ОписаниеТипов("Строка"));
	
	МногострочнаяЧасть.Колонки.Добавить("П100100520004", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100520005", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100520006", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100520007", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100520008", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100520009", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100520010", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100520011", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100520012", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100520013", Новый ОписаниеТипов("Число"));
	
	МногострочнаяЧасть.Колонки.Добавить("П100100521004", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100521005", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100521006", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100521007", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100521008", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100521009", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100521010", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100521011", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100521012", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100521013", Новый ОписаниеТипов("Число"));
	
	Для Каждого ДополнительнаяСтрока Из ТаблицаЗначенийДопСтрок Цикл
		СтрокаМногострочнойЧасти = МногострочнаяЧасть.Добавить();
		СтрокаМногострочнойЧасти.П100100520001 = ДополнительнаяСтрока.ГруппаУчетаОС;
		
		СтрокаМногострочнойЧасти.П100100520004 =  ДополнительнаяСтрока.Графа04_5200;
		СтрокаМногострочнойЧасти.П100100520005 = -ДополнительнаяСтрока.Графа05_5200;
		СтрокаМногострочнойЧасти.П100100520006 =  ДополнительнаяСтрока.Графа06_5200;
		СтрокаМногострочнойЧасти.П100100520007 = -ДополнительнаяСтрока.Графа07_5200;
		СтрокаМногострочнойЧасти.П100100520008 =  ДополнительнаяСтрока.Графа08_5200;
		СтрокаМногострочнойЧасти.П100100520009 = -ДополнительнаяСтрока.Графа09_5200;
		СтрокаМногострочнойЧасти.П100100520010 =  ДополнительнаяСтрока.Графа10_5200;
		СтрокаМногострочнойЧасти.П100100520011 =  ДополнительнаяСтрока.Графа11_5200;
		СтрокаМногострочнойЧасти.П100100520012 =  ДополнительнаяСтрока.Графа12_5200;
		СтрокаМногострочнойЧасти.П100100520013 = -ДополнительнаяСтрока.Графа13_5200;
		
		СтрокаМногострочнойЧасти.П100100521004 =  ДополнительнаяСтрока.Графа04_5210;
		СтрокаМногострочнойЧасти.П100100521005 = -ДополнительнаяСтрока.Графа05_5210;
		СтрокаМногострочнойЧасти.П100100521006 =  ДополнительнаяСтрока.Графа06_5210;
		СтрокаМногострочнойЧасти.П100100521007 = -ДополнительнаяСтрока.Графа07_5210;
		СтрокаМногострочнойЧасти.П100100521008 =  ДополнительнаяСтрока.Графа08_5210;
		СтрокаМногострочнойЧасти.П100100521009 = -ДополнительнаяСтрока.Графа09_5210;
		СтрокаМногострочнойЧасти.П100100521010 =  ДополнительнаяСтрока.Графа10_5210;
		СтрокаМногострочнойЧасти.П100100521011 =  ДополнительнаяСтрока.Графа11_5210;
		СтрокаМногострочнойЧасти.П100100521012 =  ДополнительнаяСтрока.Графа12_5210;
		СтрокаМногострочнойЧасти.П100100521013 = -ДополнительнаяСтрока.Графа13_5210;
	КонецЦикла;
	
	Если НЕ КонтекстВыполнения.МногострочныеПоказатели.Свойство("Пояснения2") Тогда
		КонтекстВыполнения.МногострочныеПоказатели.Вставить("Пояснения2", Новый Структура);
	КонецЕсли;
	
	КонтекстВыполнения.МногострочныеПоказатели.Пояснения2.Вставить(ИмяГруппы, МногострочнаяЧасть);
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения2Строки5220и5230(КонтекстВыполнения,
	НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок)
	
	ИмяРаздела = "Пояснения2";
	
	Организация = КонтекстВыполнения.Организация;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	ПараметрыРасшифровки = Новый Структура;
	ПараметрыРасшифровки.Вставить("Организация",   КонтекстВыполнения.Организация);
	ПараметрыРасшифровки.Вставить("НачалоПериода", НачалоПериода);
	ПараметрыРасшифровки.Вставить("КонецПериода",  КонецПериода);
	
	КонтекстВыполнения.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
	
	НастройкиПолученияБухитогов = Новый Структура;
	НастройкиПолученияБухитогов.Вставить("Организация",   Организация);
	НастройкиПолученияБухитогов.Вставить("НачалоПериода", НачалоПериода);
	НастройкиПолученияБухитогов.Вставить("КонецПериода",  КонецПериода);
	
	СальдоИОборотыПоСчетам = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
	ОборотыМеждуСчетами    = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетами(НастройкиПолученияБухитогов);
	
	СНД_03_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД("03.01", СальдоИОборотыПоСчетам);
	СНД_03_02 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД("03.02", СальдоИОборотыПоСчетам);
	СНД_03_03 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД("03.03", СальдоИОборотыПоСчетам);
	СНД_03_04 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД("03.04", СальдоИОборотыПоСчетам);
	
	СКД_03_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("03.01", СальдоИОборотыПоСчетам);
	СКД_03_02 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("03.02", СальдоИОборотыПоСчетам);
	СКД_03_03 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("03.03", СальдоИОборотыПоСчетам);
	СКД_03_04 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("03.04", СальдоИОборотыПоСчетам);
	
	СНК_02_02 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНК("02.02", СальдоИОборотыПоСчетам);
	СКК_02_02 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКК("02.02", СальдоИОборотыПоСчетам);
	
	КО_02_02 = ЗаполнениеБухгалтерскойОтчетностиИтоги.КО("02.02", СальдоИОборотыПоСчетам);
	
	ОБ_03__08       = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("03", "08", ОборотыМеждуСчетами);
	ОБ_03_09__03_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("03.09", "03.01", ОборотыМеждуСчетами);
	ОБ_03_09__03_02 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("03.09", "03.02", ОборотыМеждуСчетами);
	ОБ_03_09__03_03 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("03.09", "03.03", ОборотыМеждуСчетами);
	ОБ_03_09__03_04 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("03.09", "03.04", ОборотыМеждуСчетами);
	
	ОБ_02_02__03_09 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("02.02", "03.09", ОборотыМеждуСчетами);
	
	ОБ_02_02__83_01_1 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("02.02", "83.01.1", ОборотыМеждуСчетами);
	ОБ_83_01_1__02_02 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("83.01.1", "02.02", ОборотыМеждуСчетами);
	
	ОБ_03__83_01_1 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("03", "83.01.1", ОборотыМеждуСчетами);
	ОБ_83_01_1__03 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("83.01.1", "03", ОборотыМеждуСчетами);
	
	ОБ_02_02__02 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("02.02", "02", ОборотыМеждуСчетами);
	
	Обороты91ПоПереоценкеВнеоборотныхАктивов = ЗаполнениеБухгалтерскойОтчетностиИтоги.Обороты91ПоПереоценкеВнеоборотныхАктивов(НастройкиПолученияБухитогов);
	
	ОБ_91_02__02_02_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("91.02", "02.02", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	ОБ_02_02__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("02.02", "91.01", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	ОБ_91_02__03_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов    = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("91.02", "03", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	ОБ_03__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов    = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("03", "91.01", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	
	НаименованиеСтроки = "Учтено в составе доходных вложений в материальные ценности - всего";
	
	Графа = "04";
	ЗаголовокГрафы = "На начало года - первоначальная стоимость";
	
	ЗначениеПоказателя = СНД_03_01 + СНД_03_02 + СНД_03_03 + СНД_03_04;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """", "+", "!СНД " + Счет("03.01").Код, СНД_03_01, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "03.01"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!СНД " + Счет("03.02").Код, СНД_03_02, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "03.02"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!СНД " + Счет("03.03").Код, СНД_03_03, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "03.03"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!СНД " + Счет("03.04").Код, СНД_03_04, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "03.04"));
	
	Графа = "05";
	ЗаголовокГрафы = "На начало года - накопленная амортизация";
	
	ЗначениеПоказателя = СНК_02_02;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, -ЗначениеПоказателя); // вычитаемый
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """", "+", "!СНК " + Счет("02.02").Код, СНК_02_02, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "02.02"));
	
	Графа = "06";
	ЗаголовокГрафы = "Изменения за период - Поступило";
	
	ЗначениеПоказателя = ОБ_03__08;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """", "+", "!ОБ " + Счет("03").Код + " " + Счет("08").Код, ОБ_03__08, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "03", "08"));
	
	Графа = "07";
	ЗаголовокГрафы = "Изменения за период - Выбыло объектов - первоначальная стоимость";
	
	ЗначениеПоказателя = ОБ_03_09__03_01 + ОБ_03_09__03_02 + ОБ_03_09__03_03 + ОБ_03_09__03_04;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, -ЗначениеПоказателя); // вычитаемый
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """", "+", "!ОБ " + Счет("03.09").Код + " " + Счет("03.01").Код, ОБ_03_09__03_01, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "03.09", "03.01"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!ОБ " + Счет("03.09").Код + " " + Счет("03.02").Код, ОБ_03_09__03_02, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "03.09", "03.02"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!ОБ " + Счет("03.09").Код + " " + Счет("03.03").Код, ОБ_03_09__03_03, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "03.09", "03.03"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!ОБ " + Счет("03.09").Код + " " + Счет("03.04").Код, ОБ_03_09__03_04, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "03.09", "03.04"));
	
	Графа = "08";
	ЗаголовокГрафы = "Изменения за период - Выбыло объектов - накопленная амортизация";
	ЗначениеПоказателя = ОБ_02_02__03_09;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """", "+", "!ОБ " + Счет("02.02").Код + " " + Счет("03.09").Код, ОБ_02_02__03_09, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "02.02", "03.09"));
	
	Графа = "09";
	ЗаголовокГрафы = "Изменения за период - начислено амортизации";
	
	ЗначениеПоказателя = КО_02_02
	                   - ОБ_02_02__02;
	// Вычет графы 11.
	ЗначениеПоказателя = ЗначениеПоказателя
	                   - ОБ_83_01_1__02_02 + ОБ_02_02__83_01_1
	                   - ОБ_91_02__02_02_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов
	                   + ОБ_02_02__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, -ЗначениеПоказателя); // вычитаемый
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """", "+", "!КО " + Счет("02.02").Код, КО_02_02, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "02.02"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!ОБ " + Счет("02.02").Код + " " + Счет("02").Код, -ОБ_02_02__02, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "02.02", "02"));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!ОБ " + Счет("83.01.1").Код + " " + Счет("02.02").Код, -ОБ_83_01_1__02_02, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "83.01.1", "02.02"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!ОБ " + Счет("02.02").Код + " " + Счет("83.01.1").Код, ОБ_02_02__83_01_1, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "02.02", "83.01.1"));
	
	ИмяВПДР = "ПереоценкаВнеоборотныхАктивов";
	НаименованиеСлагаемого = "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.02";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", НаименованиеСлагаемого, -ОБ_91_02__02_02_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "02.02", ИмяВПДР));
	НаименованиеСлагаемого = "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.02";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", НаименованиеСлагаемого,  ОБ_02_02__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "02.02", ИмяВПДР));
	
	Графа = "10";
	ЗаголовокГрафы = "Изменения за период - Переоценка - первоначальная стоимость";
	ЗначениеПоказателя = ОБ_03__83_01_1 - ОБ_83_01_1__03
	                   - ОБ_91_02__03_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов
	                   + ОБ_03__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """", "+", "!ОБ " + Счет("03") + " " + Счет("83.01.1"), ОБ_03__83_01_1, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "03", "83.01.1"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!ОБ " + Счет("83.01.1").Код + " " + Счет("03").Код, -ОБ_83_01_1__03, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "83.01.1", "03"));
	
	ИмяВПДР = "ПереоценкаВнеоборотныхАктивов";
	НаименованиеСлагаемого = "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 03";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", НаименованиеСлагаемого, -ОБ_91_02__03_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "03", ИмяВПДР));
	НаименованиеСлагаемого = "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 03";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", НаименованиеСлагаемого,  ОБ_03__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "03", ИмяВПДР));
	
	Графа = "11";
	ЗаголовокГрафы = "Изменения за период - Переоценка - накопленная амортизация";
	ЗначениеПоказателя = ОБ_83_01_1__02_02 - ОБ_02_02__83_01_1
	                   + ОБ_91_02__02_02_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов
	                   - ОБ_02_02__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, -ЗначениеПоказателя); // вычитаемый
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """", "+", "!ОБ " + Счет("83.01.1").Код + " " + Счет("02.02").Код, ОБ_83_01_1__02_02, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "83.01.1", "02.02"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", "!ОБ " + Счет("02.02").Код + " " + Счет("83.01.1").Код, -ОБ_02_02__83_01_1, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "02.02", "83.01.1"));
	
	ИмяВПДР = "ПереоценкаВнеоборотныхАктивов";
	НаименованиеСлагаемого = "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.02";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", НаименованиеСлагаемого,  ОБ_91_02__02_02_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "02.02", ИмяВПДР));
	НаименованиеСлагаемого = "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.02";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "-", НаименованиеСлагаемого, -ОБ_02_02__91_01_ДоходыРасходыСвязанныеСПереоценкойВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "02.02", ИмяВПДР));
	
	Графа = "12";
	ЗаголовокГрафы = "На конец периода - первоначальная стоимость";
	ЗначениеПоказателя = СКД_03_01 + СКД_03_02 + СКД_03_03 + СКД_03_04;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """", "+", "!СКД " + Счет("03.01").Код, СКД_03_01, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "03.01"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!СКД " + Счет("03.02").Код, СКД_03_02, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "03.02"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!СКД " + Счет("03.03").Код, СКД_03_03, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "03.03"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "", "+", "!СКД " + Счет("03.04").Код, СКД_03_04, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "03.04"));
	
	Графа = "13";
	ЗаголовокГрафы = "На конец периода - накопленная амортизация";
	ЗначениеПоказателя = СКК_02_02;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, -ЗначениеПоказателя); // вычитаемый
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """", "+", "!СКК " + Счет("02.02").Код, СКК_02_02, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "02.02"));
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения2СведенияДопСтрок5220и5230КромеГрафы11(КонтекстВыполнения, НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок);
	ЗаполнитьФормаОтчета2011Кв4_Пояснения2СведенияДопСтрок5220и5230ПоГрафе11(КонтекстВыполнения, НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок);
	
	КонтекстВыполнения.Удалить("ПараметрыРасшифровки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения2СведенияДопСтрок5220и5230КромеГрафы11(КонтекстВыполнения,
	НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок)
	
	Организация = КонтекстВыполнения.Организация;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОбъединениеДанных.ГруппаОС КАК ГруппаОС,
	               |	СУММА(ОбъединениеДанных.Значение) КАК Значение
	               |ПОМЕСТИТЬ ВТ_Графа09
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ХозрасчетныйОбороты.Субконто1.ГруппаОС КАК ГруппаОС,
	               |		ХозрасчетныйОбороты.СуммаОборотКт КАК Значение
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, Период, Счет В (&Счет_02_02), &ВидСубконтоОС, Организация = &Организация, , ) КАК ХозрасчетныйОбороты
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
	               |		-1 * ХозрасчетныйОборотыДтКт.СуммаОборот
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счет_02_02), &ВидСубконтоОС, СчетКт В (&Счет_02), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт) КАК ОбъединениеДанных
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъединениеДанных.ГруппаОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Субконто1.ГруппаОС КАК ГруппаУчетаОС,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК ЗначениеГрафы04,
	               |	0 КАК ЗначениеГрафы05,
	               |	0 КАК ЗначениеГрафы06,
	               |	0 КАК ЗначениеГрафы07,
	               |	0 КАК ЗначениеГрафы08,
	               |	0 КАК ЗначениеГрафы09,
	               |	0 КАК ЗначениеГрафы10,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК ЗначениеГрафы12,
	               |	0 КАК ЗначениеГрафы13
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет = &Счет_03_01, &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Субконто1.ГруппаОС,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет = &Счет_03_03, &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Субконто1.ГруппаОС,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет = &Счет_03_04, &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Субконто1.ГруппаОС,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет = &Счет_03_02, &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Субконто1.ГруппаОС,
	               |	0,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счет_02_02), &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счета_03), &ВидСубконтоОС, СчетКт В (&Счета_08), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
	               |	0,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт = &Счет_03_09, &ВидСубконтоОС, СчетКт = &Счет_03_01, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
	               |	0,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт = &Счет_03_09, &ВидСубконтоОС, СчетКт = &Счет_03_02, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
	               |	0,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт = &Счет_03_09, &ВидСубконтоОС, СчетКт = &Счет_03_03, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
	               |	0,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт = &Счет_03_09, &ВидСубконтоОС, СчетКт = &Счет_03_04, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот,
	               |	0,
	               |	0,
	               |	0,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счет_02_02), &ВидСубконтоОС, СчетКт = &Счет_03_09, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВТ_Графа09.ГруппаОС,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	ВТ_Графа09.Значение,
	               |	0,
	               |	0,
	               |	0
	               |ИЗ
	               |	ВТ_Графа09 КАК ВТ_Графа09
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот,
	               |	0,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счета_03), &ВидСубконтоОС, СчетКт = &Счет_83_1_1, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоКт1.ГруппаОС,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	-ХозрасчетныйОборотыДтКт.СуммаОборот,
	               |	0,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт = &Счет_83_1_1, , СчетКт В (&Счета_03), &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоКт1.ГруппаОС,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	-ХозрасчетныйОборотыДтКт.СуммаОборот,
	               |	0,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	               |			&НачПериода,
	               |			&КонПериода,
	               |			Период,
	               |			СчетДт = &Счет_91_02,
	               |			&ВидСубконтоПрочиеДоходыИРасходы,
	               |			СчетКт В (&Счета_03),
	               |			&ВидСубконтоОС,
	               |			Организация = &Организация
	               |				И СубконтоДт1.ВидПрочихДоходовИРасходов = &ПереоценкаВнеоборотныхАктивов) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот,
	               |	0,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	               |			&НачПериода,
	               |			&КонПериода,
	               |			Период,
	               |			СчетДт В (&Счета_03),
	               |			&ВидСубконтоОС,
	               |			СчетКт = &Счет_91_01,
	               |			&ВидСубконтоПрочиеДоходыИРасходы,
	               |			Организация = &Организация
	               |				И СубконтоКт1.ВидПрочихДоходовИРасходов = &ПереоценкаВнеоборотныхАктивов) КАК ХозрасчетныйОборотыДтКт
	               |ИТОГИ
	               |	СУММА(ЗначениеГрафы04),
	               |	СУММА(ЗначениеГрафы05),
	               |	СУММА(ЗначениеГрафы06),
	               |	СУММА(ЗначениеГрафы07),
	               |	СУММА(ЗначениеГрафы08),
	               |	СУММА(ЗначениеГрафы09),
	               |	СУММА(ЗначениеГрафы10),
	               |	СУММА(ЗначениеГрафы12),
	               |	СУММА(ЗначениеГрафы13)
	               |ПО
	               |	ГруппаУчетаОС";
	
	Запрос.УстановитьПараметр("НачПериода",    НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода",    КонецПериода);
	Запрос.УстановитьПараметр("Организация",   Организация);
	
	Запрос.УстановитьПараметр("Счет_02",       БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("02")));
	Запрос.УстановитьПараметр("Счет_02_02",    БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("02.02")));
	
	Запрос.УстановитьПараметр("Счета_03",      БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("03")));
	Запрос.УстановитьПараметр("Счет_03",       Счет("03"));
	Запрос.УстановитьПараметр("Счет_03_01",    Счет("03.01"));
	Запрос.УстановитьПараметр("Счет_03_02",    Счет("03.02"));
	Запрос.УстановитьПараметр("Счет_03_03",    Счет("03.03"));
	Запрос.УстановитьПараметр("Счет_03_04",    Счет("03.04"));
	Запрос.УстановитьПараметр("Счет_03_09",    Счет("03.09"));
	
	Запрос.УстановитьПараметр("Счета_08",      БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08")));
	Запрос.УстановитьПараметр("Счет_83_1_1",   Счет("83.01.1"));
	Запрос.УстановитьПараметр("Счет_91_01",    Счет("91.01"));
	Запрос.УстановитьПараметр("Счет_91_02",    Счет("91.02"));
	Запрос.УстановитьПараметр("ВидСубконтоОС", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	Запрос.УстановитьПараметр("ВидСубконтоПрочиеДоходыИРасходы", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("ПереоценкаВнеоборотныхАктивов", Перечисления.ВидыПрочихДоходовИРасходов.ПереоценкаВнеоборотныхАктивов);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		ГруппаУчетаОС = Выборка.ГруппаУчетаОС;
		Если НЕ ЗначениеЗаполнено(ГруппаУчетаОС) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицыДополнительныхСтрок = ТаблицаДополнительныхСтрок.Добавить();
		СтрокаТаблицыДополнительныхСтрок.ГруппаУчетаОС = ГруппаУчетаОС;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "04" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы04;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "05" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы05;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "06" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы06;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "07" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы07;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "08" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы08;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "09" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы09;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "10" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы10;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "12" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы12;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "13" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы13;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения2СведенияДопСтрок5220и5230ПоГрафе11(КонтекстВыполнения,
	НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок)
	
	Организация = КонтекстВыполнения.Организация;
	
	Графа = "11";
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоКт1.ГруппаОС КАК ГруппаУчетаОС,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот КАК ЗначениеПоказателя
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт = &Счет_83_01_1, , СчетКт = &Счет_02_02, &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоКт1.ГруппаОС,
	               |	-ХозрасчетныйОборотыДтКт.СуммаОборот
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт = &Счет_02_02, &ВидСубконтоОС, СчетКт = &Счет_83_01_1, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоКт1.ГруппаОС,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	               |			&НачПериода,
	               |			&КонПериода,
	               |			Период,
	               |			СчетДт = &Счет_91_02,
	               |			&ВидСубконтоПрочиеДоходыИРасходы,
	               |			СчетКт = &Счет_02_02,
	               |			&ВидСубконтоОС,
	               |			Организация = &Организация
	               |				И СубконтоДт1.ВидПрочихДоходовИРасходов = &ПереоценкаВнеоборотныхАктивов) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
	               |	-ХозрасчетныйОборотыДтКт.СуммаОборот
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	               |			&НачПериода,
	               |			&КонПериода,
	               |			Период,
	               |			СчетДт = &Счет_02_02,
	               |			&ВидСубконтоОС,
	               |			СчетКт = &Счет_91_01,
	               |			&ВидСубконтоПрочиеДоходыИРасходы,
	               |			Организация = &Организация
	               |				И СубконтоКт1.ВидПрочихДоходовИРасходов = &ПереоценкаВнеоборотныхАктивов) КАК ХозрасчетныйОборотыДтКт
	               |ИТОГИ
	               |	СУММА(ЗначениеПоказателя)
	               |ПО
	               |	ГруппаУчетаОС";
	
	Запрос.УстановитьПараметр("НачПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода", КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Счет_02_02",   Счет("02.02"));
	Запрос.УстановитьПараметр("Счет_83_01_1", Счет("83.01.1"));
	Запрос.УстановитьПараметр("Счет_91_01",   Счет("91.01"));
	Запрос.УстановитьПараметр("Счет_91_02",   Счет("91.02"));
	Запрос.УстановитьПараметр("ВидСубконтоОС", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	Запрос.УстановитьПараметр("ВидСубконтоПрочиеДоходыИРасходы", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("ПереоценкаВнеоборотныхАктивов", Перечисления.ВидыПрочихДоходовИРасходов.ПереоценкаВнеоборотныхАктивов);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		ГруппаУчетаОС = Выборка.ГруппаУчетаОС;
		Если НЕ ЗначениеЗаполнено(ГруппаУчетаОС) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицыДополнительныхСтрок = ТаблицаДополнительныхСтрок.Добавить();
		СтрокаТаблицыДополнительныхСтрок.ГруппаУчетаОС = ГруппаУчетаОС;
		СтрокаТаблицыДополнительныхСтрок["Графа" + Графа + "_" + НомерСтроки] = Выборка.ЗначениеПоказателя;
		// Это же значение вычитается из графы 09.
		СтрокаТаблицыДополнительныхСтрок["Графа" + "09" + "_" + НомерСтроки] = -Выборка.ЗначениеПоказателя;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения2Строки5220и5230ВТомЧисле(КонтекстВыполнения, ТаблицаЗначенийДопСтрок)
	
	Если ТаблицаЗначенийДопСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИмяГруппы = "ДопСтрока5220";
	МногострочнаяЧасть = Новый ТаблицаЗначений;
	МногострочнаяЧасть.Колонки.Добавить("П100100522001", Новый ОписаниеТипов("Строка"));
	
	МногострочнаяЧасть.Колонки.Добавить("П100100522004", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100522005", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100522006", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100522007", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100522008", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100522009", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100522010", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100522011", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100522012", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100522013", Новый ОписаниеТипов("Число"));
	
	МногострочнаяЧасть.Колонки.Добавить("П100100523004", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100523005", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100523006", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100523007", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100523008", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100523009", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100523010", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100523011", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100523012", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100523013", Новый ОписаниеТипов("Число"));
	
	Для Каждого ДополнительнаяСтрока Из ТаблицаЗначенийДопСтрок Цикл
		СтрокаМногострочнойЧасти = МногострочнаяЧасть.Добавить();
		СтрокаМногострочнойЧасти.П100100522001 = ДополнительнаяСтрока.ГруппаУчетаОС;
		
		СтрокаМногострочнойЧасти.П100100522004 =  ДополнительнаяСтрока.Графа04_5220;
		СтрокаМногострочнойЧасти.П100100522005 = -ДополнительнаяСтрока.Графа05_5220;
		СтрокаМногострочнойЧасти.П100100522006 =  ДополнительнаяСтрока.Графа06_5220;
		СтрокаМногострочнойЧасти.П100100522007 = -ДополнительнаяСтрока.Графа07_5220;
		СтрокаМногострочнойЧасти.П100100522008 =  ДополнительнаяСтрока.Графа08_5220;
		СтрокаМногострочнойЧасти.П100100522009 = -ДополнительнаяСтрока.Графа09_5220;
		СтрокаМногострочнойЧасти.П100100522010 =  ДополнительнаяСтрока.Графа10_5220;
		СтрокаМногострочнойЧасти.П100100522011 =  ДополнительнаяСтрока.Графа11_5220;
		СтрокаМногострочнойЧасти.П100100522012 =  ДополнительнаяСтрока.Графа12_5220;
		СтрокаМногострочнойЧасти.П100100522013 = -ДополнительнаяСтрока.Графа13_5220;
		
		СтрокаМногострочнойЧасти.П100100523004 =  ДополнительнаяСтрока.Графа04_5230;
		СтрокаМногострочнойЧасти.П100100523005 = -ДополнительнаяСтрока.Графа05_5230;
		СтрокаМногострочнойЧасти.П100100523006 =  ДополнительнаяСтрока.Графа06_5230;
		СтрокаМногострочнойЧасти.П100100523007 = -ДополнительнаяСтрока.Графа07_5230;
		СтрокаМногострочнойЧасти.П100100523008 =  ДополнительнаяСтрока.Графа08_5230;
		СтрокаМногострочнойЧасти.П100100523009 = -ДополнительнаяСтрока.Графа09_5230;
		СтрокаМногострочнойЧасти.П100100523010 =  ДополнительнаяСтрока.Графа10_5230;
		СтрокаМногострочнойЧасти.П100100523011 =  ДополнительнаяСтрока.Графа11_5230;
		СтрокаМногострочнойЧасти.П100100523012 =  ДополнительнаяСтрока.Графа12_5230;
		СтрокаМногострочнойЧасти.П100100523013 = -ДополнительнаяСтрока.Графа13_5230;
	КонецЦикла;
	
	Если НЕ КонтекстВыполнения.МногострочныеПоказатели.Свойство("Пояснения2") Тогда
		КонтекстВыполнения.МногострочныеПоказатели.Вставить("Пояснения2", Новый Структура);
	КонецЕсли;
	
	КонтекстВыполнения.МногострочныеПоказатели.Пояснения2.Вставить(ИмяГруппы, МногострочнаяЧасть);
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения2Строки5240и5250(КонтекстВыполнения,
	НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок)
	
	Организация = КонтекстВыполнения.Организация;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	ИмяРаздела = "Пояснения2";
	
	ПараметрыРасшифровки = Новый Структура;
	ПараметрыРасшифровки.Вставить("Организация",   КонтекстВыполнения.Организация);
	ПараметрыРасшифровки.Вставить("НачалоПериода", НачалоПериода);
	ПараметрыРасшифровки.Вставить("КонецПериода",  КонецПериода);
	
	КонтекстВыполнения.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
	
	НаименованиеСтроки = "Незавершенное строительство и незаконченные операции по приобретению, модернизации и т.п основных средств - всего";
	ПараметрыРасшифровки = Новый Структура;
	ПараметрыРасшифровки.Вставить("ИмяОтчета", "Пояснения2");
	ПараметрыРасшифровки.Вставить("ДатаНачалаПериодаОтчета", НачалоПериода);
	ПараметрыРасшифровки.Вставить("ДатаКонцаПериодаОтчета", КонецПериода);
	
	НастройкиПолученияБухитогов = Новый Структура;
	НастройкиПолученияБухитогов.Вставить("Организация",   Организация);
	НастройкиПолученияБухитогов.Вставить("НачалоПериода", НачалоПериода);
	НастройкиПолученияБухитогов.Вставить("КонецПериода",  КонецПериода);
	
	СальдоИОборотыПоСчетам = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
	ОборотыМеждуСчетами    = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетами(НастройкиПолученияБухитогов);
	
	ОБ_01__08 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("01", "08", ОборотыМеждуСчетами);
	ОБ_03__08 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("03", "08", ОборотыМеждуСчетами);
	
	СНД_07 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД("07", СальдоИОборотыПоСчетам);
	ДО_07  = ЗаполнениеБухгалтерскойОтчетностиИтоги.ДО("07", СальдоИОборотыПоСчетам);
	КО_07  = ЗаполнениеБухгалтерскойОтчетностиИтоги.КО("07", СальдоИОборотыПоСчетам);
	СКД_07 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("07", СальдоИОборотыПоСчетам);
	
	СНД_08_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД("08.01", СальдоИОборотыПоСчетам);
	СНД_08_02 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД("08.02", СальдоИОборотыПоСчетам);
	СНД_08_03 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД("08.03", СальдоИОборотыПоСчетам);
	СНД_08_04 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД("08.04", СальдоИОборотыПоСчетам);
	СНД_08_06 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД("08.06", СальдоИОборотыПоСчетам);
	СНД_08_07 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД("08.07", СальдоИОборотыПоСчетам);
	СНД_08_12 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД("08.12", СальдоИОборотыПоСчетам);
	
	ДО_08_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ДО("08.01", СальдоИОборотыПоСчетам);
	ДО_08_02 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ДО("08.02", СальдоИОборотыПоСчетам);
	ДО_08_03 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ДО("08.03", СальдоИОборотыПоСчетам);
	ДО_08_04 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ДО("08.04", СальдоИОборотыПоСчетам);
	ДО_08_06 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ДО("08.06", СальдоИОборотыПоСчетам);
	ДО_08_07 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ДО("08.07", СальдоИОборотыПоСчетам);
	ДО_08_12 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ДО("08.12", СальдоИОборотыПоСчетам);
	
	КО_08_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.КО("08.01", СальдоИОборотыПоСчетам);
	КО_08_02 = ЗаполнениеБухгалтерскойОтчетностиИтоги.КО("08.02", СальдоИОборотыПоСчетам);
	КО_08_03 = ЗаполнениеБухгалтерскойОтчетностиИтоги.КО("08.03", СальдоИОборотыПоСчетам);
	КО_08_04 = ЗаполнениеБухгалтерскойОтчетностиИтоги.КО("08.04", СальдоИОборотыПоСчетам);
	КО_08_06 = ЗаполнениеБухгалтерскойОтчетностиИтоги.КО("08.06", СальдоИОборотыПоСчетам);
	КО_08_07 = ЗаполнениеБухгалтерскойОтчетностиИтоги.КО("08.07", СальдоИОборотыПоСчетам);
	КО_08_12 = ЗаполнениеБухгалтерскойОтчетностиИтоги.КО("08.12", СальдоИОборотыПоСчетам);
	
	СКД_08_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("08.01", СальдоИОборотыПоСчетам);
	СКД_08_02 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("08.02", СальдоИОборотыПоСчетам);
	СКД_08_03 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("08.03", СальдоИОборотыПоСчетам);
	СКД_08_04 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("08.04", СальдоИОборотыПоСчетам);
	СКД_08_06 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("08.06", СальдоИОборотыПоСчетам);
	СКД_08_07 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("08.07", СальдоИОборотыПоСчетам);
	СКД_08_12 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("08.12", СальдоИОборотыПоСчетам);
	
	ОБ_08_03__07 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("08.03", "07", ОборотыМеждуСчетами);
	
	Графа = "04";
	ЗаголовокГрафы = "На начало года";
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ЗначениеПоказателя = СНД_07 + СНД_08_01 + СНД_08_02 + СНД_08_03 + СНД_08_04 + СНД_08_06 + СНД_08_07 + СНД_08_12;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!СНД " + Счет("07").Код, СНД_07, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "07"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, , "+", "!СНД " + Счет("08.01").Код, СНД_08_01, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.01"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, , "+", "!СНД " + Счет("08.02").Код, СНД_08_02, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.02"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, , "+", "!СНД " + Счет("08.03").Код, СНД_08_03, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.03"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, , "+", "!СНД " + Счет("08.04").Код, СНД_08_04, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.04"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, , "+", "!СНД " + Счет("08.06").Код, СНД_08_06, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.06"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, , "+", "!СНД " + Счет("08.07").Код, СНД_08_07, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.07"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, , "+", "!СНД " + Счет("08.12").Код, СНД_08_12, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.12"));
	
	Графа = "05";
	ЗаголовокГрафы = "Изменения за период - затраты за период";
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ЗначениеПоказателя = ДО_07 - ОБ_08_03__07 + ДО_08_01 + ДО_08_02 + ДО_08_03 + ДО_08_04 + ДО_08_06 + ДО_08_07 + ДО_08_12;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ДО " + Счет("07").Код, ДО_07, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "07"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("08.03").Код + " " + Счет("07").Код, -ОБ_08_03__07, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "08.03", "07"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ДО " + Счет("08.01").Код, ДО_08_01, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.01"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ДО " + Счет("08.02").Код, ДО_08_02, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.02"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ДО " + Счет("08.03").Код, ДО_08_03, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.03"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ДО " + Счет("08.04").Код, ДО_08_04, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.04"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ДО " + Счет("08.06").Код, ДО_08_06, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.06"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ДО " + Счет("08.07").Код, ДО_08_07, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.07"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ДО " + Счет("08.12").Код, ДО_08_12, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.12"));
	
	Графа = "06";
	ЗаголовокГрафы = "Изменения за период - списано";
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ЗначениеПоказателя = КО_07 - ОБ_08_03__07
	                   + КО_08_01 + КО_08_02 + КО_08_03 + КО_08_04 + КО_08_06 + КО_08_07 + КО_08_12
	                   - (ОБ_01__08 + ОБ_03__08);
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, -ЗначениеПоказателя); // вычитаемый
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!КО " + Счет("07").Код, КО_07, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "07"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("08.03").Код + " " + Счет("07").Код, -ОБ_08_03__07, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "08.03", "07"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!КО " + Счет("08.01").Код, КО_08_01, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.01"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!КО " + Счет("08.02").Код, КО_08_02, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.02"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!КО " + Счет("08.03").Код, КО_08_03, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.03"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!КО " + Счет("08.04").Код, КО_08_04, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.04"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!КО " + Счет("08.06").Код, КО_08_06, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.06"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!КО " + Счет("08.07").Код, КО_08_07, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.07"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!КО " + Счет("08.12").Код, КО_08_12, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.12"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("01").Код + " " + Счет("08").Код, -ОБ_01__08, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "01", "08"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("03").Код + " " + Счет("08").Код, -ОБ_03__08, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "03", "08"));
	
	Графа = "07";
	ЗаголовокГрафы = "Изменения за период - принято к учету в качестве основных средств или увеличена стоимость";
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ЗначениеПоказателя = ОБ_01__08 + ОБ_03__08;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ОБ " + Счет("01").Код + " " + Счет("08").Код, ОБ_01__08, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "01", "08"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("03").Код + " " + Счет("08").Код, ОБ_03__08, ИмяРаздела, НастройкиАнализаСчета(КонтекстВыполнения, "03", "08"));
	
	Графа = "08";
	ЗаголовокГрафы = "На конец периода";
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ЗначениеПоказателя = СКД_07 + СКД_08_01 + СКД_08_02 + СКД_08_03 + СКД_08_04 + СКД_08_06 + СКД_08_07 + СКД_08_12;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!СКД " + Счет("07").Код, СКД_07, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "07"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, , "+", "!СКД " + Счет("08.01").Код, СКД_08_01, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.01"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, , "+", "!СКД " + Счет("08.02").Код, СКД_08_02, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.02"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, , "+", "!СКД " + Счет("08.03").Код, СКД_08_03, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.03"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, , "+", "!СКД " + Счет("08.04").Код, СКД_08_04, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.04"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, , "+", "!СКД " + Счет("08.06").Код, СКД_08_06, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.06"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, , "+", "!СКД " + Счет("08.07").Код, СКД_08_07, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.07"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, , "+", "!СКД " + Счет("08.12").Код, СКД_08_12, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "08.12"));
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения2СведенияДопСтрок5240и5250(КонтекстВыполнения, НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок);
	
	КонтекстВыполнения.Удалить("ПараметрыРасшифровки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения2СведенияДопСтрок5240и5250(КонтекстВыполнения,
	НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок)
	
	Организация = КонтекстВыполнения.Организация;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК ОбъектУчета,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК ЗначениеГрафы04,
	|	0 КАК ЗначениеГрафы05,
	|	0 КАК ЗначениеГрафы06,
	|	0 КАК ЗначениеГрафы07,
	|	0 КАК ЗначениеГрафы08
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_07), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_01), &ВидыСубконтоОбъектыСтроительства, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_02), &ВидыСубконтоОбъектыСтроительства, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_03), &ВидыСубконтоОбъектыСтроительства, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_04), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_04), &ВидыСубконтоОсновныеСредства, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_06), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_07), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_12), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_07), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|	0,
	|	-ХозрасчетныйОборотыДтКт.СуммаОборот,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счета_08_03), , СчетКт В (&Счета_07), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_01), &ВидыСубконтоОбъектыСтроительства, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_02), &ВидыСубконтоОбъектыСтроительства, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_03), &ВидыСубконтоОбъектыСтроительства, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_04), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_04), &ВидыСубконтоОсновныеСредства, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_06), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_07), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_12), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_07), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|	0,
	|	0,
	|	-ХозрасчетныйОборотыДтКт.СуммаОборот,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счета_08_03), , СчетКт В (&Счета_07), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_01), &ВидыСубконтоОбъектыСтроительства, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_02), &ВидыСубконтоОбъектыСтроительства, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_03), &ВидыСубконтоОбъектыСтроительства, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_04), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_04), &ВидыСубконтоОсновныеСредства, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_06), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_07), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_12), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|	0,
	|	0,
	|	-ХозрасчетныйОборотыДтКт.СуммаОборот,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счета_01), , СчетКт В (&Счета_08), &ВидыСубконтоОбъектыСтроительства, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|	0,
	|	0,
	|	-ХозрасчетныйОборотыДтКт.СуммаОборот,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счета_01), , СчетКт В (&Счета_08), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|	0,
	|	0,
	|	-ХозрасчетныйОборотыДтКт.СуммаОборот,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счета_01), , СчетКт В (&Счета_08), &ВидыСубконтоОсновныеСредства, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|	0,
	|	0,
	|	-ХозрасчетныйОборотыДтКт.СуммаОборот,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счета_03), , СчетКт В (&Счета_08), &ВидыСубконтоОбъектыСтроительства, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|	0,
	|	0,
	|	-ХозрасчетныйОборотыДтКт.СуммаОборот,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счета_03), , СчетКт В (&Счета_08), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|	0,
	|	0,
	|	-ХозрасчетныйОборотыДтКт.СуммаОборот,
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счета_03), , СчетКт В (&Счета_08), &ВидыСубконтоОсновныеСредства, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|	0,
	|	0,
	|	0,
	|	ХозрасчетныйОборотыДтКт.СуммаОборот,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счета_01), , СчетКт В (&Счета_08), &ВидыСубконтоОбъектыСтроительства, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|	0,
	|	0,
	|	0,
	|	ХозрасчетныйОборотыДтКт.СуммаОборот,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счета_01), , СчетКт В (&Счета_08), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|	0,
	|	0,
	|	0,
	|	ХозрасчетныйОборотыДтКт.СуммаОборот,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счета_01), , СчетКт В (&Счета_08), &ВидыСубконтоОсновныеСредства, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|	0,
	|	0,
	|	0,
	|	ХозрасчетныйОборотыДтКт.СуммаОборот,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счета_03), , СчетКт В (&Счета_08), &ВидыСубконтоОбъектыСтроительства, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|	0,
	|	0,
	|	0,
	|	ХозрасчетныйОборотыДтКт.СуммаОборот,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счета_03), , СчетКт В (&Счета_08), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
	|	0,
	|	0,
	|	0,
	|	ХозрасчетныйОборотыДтКт.СуммаОборот,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счета_03), , СчетКт В (&Счета_08), &ВидыСубконтоОсновныеСредства, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_07), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_01), &ВидыСубконтоОбъектыСтроительства, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_02), &ВидыСубконтоОбъектыСтроительства, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_03), &ВидыСубконтоОбъектыСтроительства, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_04), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_04), &ВидыСубконтоОсновныеСредства, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_06), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_07), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_12), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|ИТОГИ
	|	СУММА(ЗначениеГрафы04),
	|	СУММА(ЗначениеГрафы05),
	|	СУММА(ЗначениеГрафы06),
	|	СУММА(ЗначениеГрафы07),
	|	СУММА(ЗначениеГрафы08)
	|ПО
	|	ОбъектУчета";
	
	Запрос.УстановитьПараметр("НачПериода",  НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода",  КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.УстановитьПараметр("Счета_01",    БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("01")));
	Запрос.УстановитьПараметр("Счета_03",    БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("03")));
	Запрос.УстановитьПараметр("Счета_07",    БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("07")));
	Запрос.УстановитьПараметр("Счета_08",    БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08")));
	Запрос.УстановитьПараметр("Счета_08_01", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08.01")));
	Запрос.УстановитьПараметр("Счета_08_02", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08.02")));
	Запрос.УстановитьПараметр("Счета_08_03", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08.03")));
	Запрос.УстановитьПараметр("Счета_08_04", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08.04")));
	Запрос.УстановитьПараметр("Счета_08_06", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08.06")));
	Запрос.УстановитьПараметр("Счета_08_07", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08.07")));
	Запрос.УстановитьПараметр("Счета_08_12", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08.12")));
	
	Запрос.УстановитьПараметр("ВидыСубконтоНоменклатура",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Запрос.УстановитьПараметр("ВидыСубконтоОсновныеСредства",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	Запрос.УстановитьПараметр("ВидыСубконтоОбъектыСтроительства", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		ОбъектУчета = Выборка.ОбъектУчета;
		Если НЕ ЗначениеЗаполнено(ОбъектУчета) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицыДополнительныхСтрок = ТаблицаДополнительныхСтрок.Добавить();
		СтрокаТаблицыДополнительныхСтрок.ОбъектУчета = ОбъектУчета;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "04" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы04;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "05" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы05;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "06" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы06;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "07" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы07;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "08" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы08;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения2Строки5240и5250ВТомЧисле(КонтекстВыполнения, ТаблицаЗначенийДопСтрок)
	
	Если ТаблицаЗначенийДопСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИмяГруппы = "ДопСтрока5240";
	МногострочнаяЧасть = Новый ТаблицаЗначений;
	МногострочнаяЧасть.Колонки.Добавить("П100100524001", Новый ОписаниеТипов("Строка"));
	
	МногострочнаяЧасть.Колонки.Добавить("П100100524004", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100524005", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100524006", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100524007", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100524008", Новый ОписаниеТипов("Число"));
	
	МногострочнаяЧасть.Колонки.Добавить("П100100525004", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100525005", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100525006", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100525007", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100525008", Новый ОписаниеТипов("Число"));
	
	Для Каждого ДополнительнаяСтрока Из ТаблицаЗначенийДопСтрок Цикл
		СтрокаМногострочнойЧасти = МногострочнаяЧасть.Добавить();
		СтрокаМногострочнойЧасти.П100100524001 = ДополнительнаяСтрока.ОбъектУчета;
		
		СтрокаМногострочнойЧасти.П100100524004 = ДополнительнаяСтрока.Графа04_5240;
		СтрокаМногострочнойЧасти.П100100524005 = ДополнительнаяСтрока.Графа05_5240;
		СтрокаМногострочнойЧасти.П100100524006 = ДополнительнаяСтрока.Графа06_5240;
		СтрокаМногострочнойЧасти.П100100524007 = -ДополнительнаяСтрока.Графа07_5240;
		СтрокаМногострочнойЧасти.П100100524008 = ДополнительнаяСтрока.Графа08_5240;
		
		СтрокаМногострочнойЧасти.П100100525004 = ДополнительнаяСтрока.Графа04_5250;
		СтрокаМногострочнойЧасти.П100100525005 = ДополнительнаяСтрока.Графа05_5250;
		СтрокаМногострочнойЧасти.П100100525006 = ДополнительнаяСтрока.Графа06_5250;
		СтрокаМногострочнойЧасти.П100100525007 = -ДополнительнаяСтрока.Графа07_5250;
		СтрокаМногострочнойЧасти.П100100525008 = ДополнительнаяСтрока.Графа08_5250;
	КонецЦикла;
	
	Если НЕ КонтекстВыполнения.МногострочныеПоказатели.Свойство("Пояснения2") Тогда
		КонтекстВыполнения.МногострочныеПоказатели.Вставить("Пояснения2", Новый Структура);
	КонецЕсли;
	
	КонтекстВыполнения.МногострочныеПоказатели.Пояснения2.Вставить(ИмяГруппы, МногострочнаяЧасть);
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения2Строка5260(КонтекстВыполнения,
	Графа, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок)
	
	Организация = КонтекстВыполнения.Организация;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	ИмяРаздела = "Пояснения2";
	
	ПараметрыРасшифровки = Новый Структура;
	ПараметрыРасшифровки.Вставить("Организация",   КонтекстВыполнения.Организация);
	ПараметрыРасшифровки.Вставить("НачалоПериода", НачалоПериода);
	ПараметрыРасшифровки.Вставить("КонецПериода",  КонецПериода);
	
	КонтекстВыполнения.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
	
	ДополнительныеПараметрыРасшифровки = Новый Структура("Организация", Организация);
	
	ЗаголовокГрафы = "За " + Формат(ПривестиКДате(КонецПериода), "ДФ=yyyy") + " г.";
	
	НомерСтроки = "5260";
	НаименованиеСтроки = "Увеличение стоимости объектов основных средств в результате достройки, дооборудования, реконструкции – всего";
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК ОсновноеСредство,
		|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК ЗначениеПоказателя,
		|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Регистратор, СчетДт В (&Счета_01_01), &СубконтоОсновныеСредства, СчетКт В (&Счета_08_03), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДокументыМодернизацииОСПереопределяемый КАК ВТ_ДокументыМодернизацииОСПереопределяемый
		|		ПО ХозрасчетныйОборотыДтКт.Регистратор = ВТ_ДокументыМодернизацииОСПереопределяемый.МодернизацияОССсылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОборотыДтКт.СубконтоДт1,
		|	ХозрасчетныйОборотыДтКт.СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СубконтоДт1,
		|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот),
		|	ХозрасчетныйОборотыДтКт.СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Регистратор, СчетДт В (&Счета_01_01), &СубконтоОсновныеСредства, СчетКт В (&Счета_08_04), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДокументыМодернизацииОСПереопределяемый КАК ВТ_ДокументыМодернизацииОСПереопределяемый
		|		ПО ХозрасчетныйОборотыДтКт.Регистратор = ВТ_ДокументыМодернизацииОСПереопределяемый.МодернизацияОССсылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОборотыДтКт.СубконтоДт1,
		|	ХозрасчетныйОборотыДтКт.СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт";
	
	ЗаполнениеБухгалтерскойОтчетностиИтоги.ДополнитьТекстЗапросаПоВременнымТаблицам(Запрос);
	
	Запрос.УстановитьПараметр("НачПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода", КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Счета_01_01", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("01.01")));
	Запрос.УстановитьПараметр("Счета_08_03", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08.03")));
	Запрос.УстановитьПараметр("Счета_08_04", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08.04")));
	Запрос.УстановитьПараметр("СубконтоОсновныеСредства", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	
	ВидыСобытийОС = Новый Массив;
	ВидыСобытийОС.Добавить(Перечисления.ВидыСобытийОС.Модернизация);
	ВидыСобытийОС.Добавить(Перечисления.ВидыСобытийОС.Достройка);
	ВидыСобытийОС.Добавить(Перечисления.ВидыСобытийОС.Дооборудование);
	Запрос.УстановитьПараметр("ВидыСобытийОС", ВидыСобытийОС);
	
	ОБ_01_01__08_04 = 0;
	ОБ_01_01__08_03 = 0;
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		СтрокаТаблицыДополнительныхСтрок = ТаблицаДополнительныхСтрок.Добавить();
		СтрокаТаблицыДополнительныхСтрок.ОсновноеСредство = Выборка.ОсновноеСредство;
		
		ЗначениеПоказателя = Выборка.ЗначениеПоказателя;
		СтрокаТаблицыДополнительныхСтрок["Графа" + Графа + "_5260"] = ЗначениеПоказателя;
		
		Если БухгалтерскийУчетПовтИсп.СчетВИерархии(Выборка.СчетКт, Счет("08.03")) Тогда
			ОБ_01_01__08_03 = ОБ_01_01__08_03 + ЗначениеПоказателя;
		ИначеЕсли БухгалтерскийУчетПовтИсп.СчетВИерархии(Выборка.СчетКт, Счет("08.04")) Тогда
			ОБ_01_01__08_04 = ОБ_01_01__08_04 + ЗначениеПоказателя;
		Иначе
			ИмяФункции = "ЗаполнениеБухгалтерскойОтчетностиПояснения.ЗаполнитьФормаОтчета2011Кв4_Пояснения2Строка5260";
			ВызватьИсключение СтрШаблон(НСтр("ru = 'Функция %1:
				|Непредусмотренный счет кредита в выборке данных для заполнения строки 5260 пояснений 2.'"), ИмяФункции);
		КонецЕсли;
		
	КонецЦикла;
	
	ЗначениеПоказателя = ОБ_01_01__08_04 + ОБ_01_01__08_03;
	
	ПредставлениеСобытийОС = "";
	Для Каждого ВидСобытияОС Из ВидыСобытийОС Цикл
		ПредставлениеСобытийОС = ПредставлениеСобытийОС + ", """ + Строка(ВидСобытияОС) + """";
	КонецЦикла;
	ПредставлениеСобытийОС = Сред(ПредставлениеСобытийОС, 3);
	
	ШаблонРасшифровки = "Оборот с кредита счета %1 в дебет счета %2 по документам ""Модернизация ОС"" с видом события с ОС "
	                  + ПредставлениеСобытийОС;
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """",
		"+", СтрШаблон(ШаблонРасшифровки, Счет("08.03").Код , Счет("01.01").Код),
		ОБ_01_01__08_03, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", СтрШаблон(ШаблонРасшифровки, Счет("08.04").Код, Счет("01.01").Код),
		ОБ_01_01__08_04, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
	
	КонтекстВыполнения.Удалить("ПараметрыРасшифровки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения2Строка5260ВТомЧисле(КонтекстВыполнения, ТаблицаЗначенийДопСтрок)
	
	Если ТаблицаЗначенийДопСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИмяГруппы = "ДопСтрока5260";
	МногострочнаяЧасть = Новый ТаблицаЗначений;
	МногострочнаяЧасть.Колонки.Добавить("П100100526001", Новый ОписаниеТипов("Строка"));
	
	МногострочнаяЧасть.Колонки.Добавить("П100100526003", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100526004", Новый ОписаниеТипов("Число"));
	
	Для Каждого ДополнительнаяСтрока Из ТаблицаЗначенийДопСтрок Цикл
		СтрокаМногострочнойЧасти = МногострочнаяЧасть.Добавить();
		СтрокаМногострочнойЧасти.П100100526001 = ДополнительнаяСтрока.ОсновноеСредство;
		
		СтрокаМногострочнойЧасти.П100100526003 = ДополнительнаяСтрока.Графа03_5260;
		СтрокаМногострочнойЧасти.П100100526004 = ДополнительнаяСтрока.Графа04_5260;
	КонецЦикла;
	
	Если НЕ КонтекстВыполнения.МногострочныеПоказатели.Свойство("Пояснения2") Тогда
		КонтекстВыполнения.МногострочныеПоказатели.Вставить("Пояснения2", Новый Структура);
	КонецЕсли;
	
	КонтекстВыполнения.МногострочныеПоказатели.Пояснения2.Вставить(ИмяГруппы, МногострочнаяЧасть);
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения2Строки528х(КонтекстВыполнения,
	Графа, ЗаголовокГрафы, НачалоПериода, КонецПериода)
	
	Организация = КонтекстВыполнения.Организация;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	ИмяРаздела = "Пояснения2";
	
	ПараметрыРасшифровки = Новый Структура;
	ПараметрыРасшифровки.Вставить("Организация",   КонтекстВыполнения.Организация);
	ПараметрыРасшифровки.Вставить("НачалоПериода", НачалоПериода);
	ПараметрыРасшифровки.Вставить("КонецПериода",  КонецПериода);
	
	КонтекстВыполнения.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
	
	НастройкиПолученияБухитогов = Новый Структура;
	НастройкиПолученияБухитогов.Вставить("Организация",   Организация);
	НастройкиПолученияБухитогов.Вставить("НачалоПериода", НачалоПериода);
	НастройкиПолученияБухитогов.Вставить("КонецПериода",  КонецПериода);
	
	СальдоИОборотыПоСчетам = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
	
	НомерСтроки = "5281";
	НаименованиеСтроки = "Переданные в аренду основные средства, числящиеся за балансом";
	СКД_011 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("011", СальдоИОборотыПоСчетам);
	ЗначениеПоказателя = СКД_011;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """", "+", "!СКД " + Счет("011").Код, СКД_011, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "011"));
	
	НомерСтроки = "5283";
	НаименованиеСтроки = "Полученные в аренду основные средства, числящиеся за балансом";
	СКД_001 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("001", СальдоИОборотыПоСчетам);
	ЗначениеПоказателя = СКД_001;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """", "+", "!СКД " + Счет("001").Код, СКД_001, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "001"));
	
	НомерСтроки = "5284";
	НаименованиеСтроки = "Объекты недвижимости, принятые в эксплуатацию и фактически используемые, находящиеся в процессе государственной регистрации";
	СКД_01_08 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("01.08", СальдоИОборотыПоСчетам);
	ЗначениеПоказателя = СКД_01_08;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """", "+", "!СКД " + Счет("01.08").Код, СКД_01_08, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "01.08"));
	
	КонтекстВыполнения.Удалить("ПараметрыРасшифровки");
	
КонецПроцедуры

#КонецОбласти

#Область ФормаОтчета2011Кв4_Пояснения4

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения4(КонтекстВыполнения) Экспорт
	
	НачалоПериодаОтчета = КонтекстВыполнения.НачалоПериодаОтчета;
	КонецПериодаОтчета = Новый МоментВремениСУточнениемПериода(
		КонтекстВыполнения.КонецПериодаОтчета, 0);
	
	НачалоПериодаПредыдущегоГода = ДобавитьМесяц(КонтекстВыполнения.НачалоПериодаОтчета, -12);
	КонецПериодаПредыдущегоГода = Новый МоментВремениСУточнениемПериода(
		КонецГода(НачалоПериодаПредыдущегоГода), БухгалтерскийУчет.ВерхняяГраницаУточненияПериода());
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения4ЗаПериод(КонтекстВыполнения, "Отчетный", НачалоПериодаОтчета, КонецПериодаОтчета);
	
	ЗаполнятьПредыдущиеПериоды = НЕ РасширенныйПериодОтчета(НачалоПериодаОтчета);
	Если ЗаполнятьПредыдущиеПериоды Тогда
		ЗаполнитьФормаОтчета2011Кв4_Пояснения4ЗаПериод(КонтекстВыполнения, "Предыдущий", НачалоПериодаПредыдущегоГода, КонецПериодаПредыдущегоГода);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения4ЗаПериод(КонтекстВыполнения,
	ТипПериода, НачалоПериода, КонецПериода)
	
	ИмяРаздела = "Пояснения4";
	
	Организация = КонтекстВыполнения.Организация;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	Если ТипПериода = "Отчетный" Тогда
		ЭтоОтчетныйПериод = Истина;
	ИначеЕсли ТипПериода = "Предыдущий" Тогда
		ЭтоОтчетныйПериод = Ложь;
	Иначе
		ВызватьИсключение "Неверное значение параметра ТипПериода в функции ЗаполнитьАвтоПояснения4ЗаПериод()";
	КонецЕсли;
	
	ЗаголовкиГраф = Новый Соответствие;
	ЗаголовкиГраф.Вставить("04", "На начало года - себестоимость");
	ЗаголовкиГраф.Вставить("05", "На начало года - величина резерва под снижение стоимости");
	ЗаголовкиГраф.Вставить("06", "Изменения за период - поступления и затраты");
	ЗаголовкиГраф.Вставить("07", "Изменения за период - выбыло - себестоимость");
	ЗаголовкиГраф.Вставить("08", "Изменения за период - выбыло - резерв под снижение стоимости");
	ЗаголовкиГраф.Вставить("09", "Изменения за период - убытков от снижения стоимости");
	ЗаголовкиГраф.Вставить("10", "Изменения за период - оборот запасов между их группами (видами)");
	ЗаголовкиГраф.Вставить("11", "На конец периода - себестоимость");
	ЗаголовкиГраф.Вставить("12", "На конец периода - величина резерва под снижение стоимости");
	
	НастройкиПолученияБухитогов = Новый Структура;
	НастройкиПолученияБухитогов.Вставить("Организация", КонтекстВыполнения.Организация);
	НастройкиПолученияБухитогов.Вставить("НачалоПериода", НачалоПериода);
	НастройкиПолученияБухитогов.Вставить("КонецПериода",  КонецПериода);
	
	СальдоИОборотыПоСчетам = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
	ОборотыМеждуСчетами    = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетами(НастройкиПолученияБухитогов);
	
	РазделятьАвансыПоВидамАктивов = РегламентированнаяОтчетность.АвансыРазделеныПоВидамАктивов(Организация, КонтекстВыполнения.КонецОтчетногоПериода);
	
	РассчитанныеПараметры = Новый Структура;
	РассчитанныеПараметры.Вставить("ЗаголовкиГраф", ЗаголовкиГраф);
	РассчитанныеПараметры.Вставить("СальдоИОборотыПоСчетам", СальдоИОборотыПоСчетам);
	РассчитанныеПараметры.Вставить("ОборотыМеждуСчетами", ОборотыМеждуСчетами);
	РассчитанныеПараметры.Вставить("РазделятьАвансыПоВидамАктивов", РазделятьАвансыПоВидамАктивов);
	РассчитанныеПараметры.Вставить("ДатаНачалаПериодаОтчета", НачалоПериода);
	РассчитанныеПараметры.Вставить("ДатаКонцаПериодаОтчета", КонецПериода);
	
	КонтекстВыполнения.Вставить("РассчитанныеПараметры", РассчитанныеПараметры);
	
	ОбщиеИтогиПоСчетам = Новый Структура;
	ОбщиеИтогиПоСчетам.Вставить("СальдоИОборотыПоСчетам", СальдоИОборотыПоСчетам);
	ОбщиеИтогиПоСчетам.Вставить("ОборотыМеждуСчетами", ОборотыМеждуСчетами);
	
	ПроцессорПоказателя = НовыйПроцессорПоказателя();
	ПроцессорПоказателя.СчетаСРеквизитами = КонтекстВыполнения.СчетаСРеквизитами;
	ПроцессорПоказателя.ПараметрыСчетов = ПараметрыСчетов_Пояснения4();
	ПроцессорПоказателя.РассчитанныеЗначения = БухгалтерскиеИтоги2011Кв4_Пояснения4(ОбщиеИтогиПоСчетам);
	ПроцессорПоказателя.ТаблицаРасшифровки = ТаблицаРасшифровки;
	ПроцессорПоказателя.Организация = КонтекстВыполнения.Организация;
	ПроцессорПоказателя.ИмяРаздела = ИмяРаздела;
	ПроцессорПоказателя.НачалоПериода = НачалоПериода;
	ПроцессорПоказателя.КонецПериода  = КонецПериода;
	
	ДополнитьБухгалтерскиеИтогиПоВидамАктивов(ПроцессорПоказателя, КонтекстВыполнения);
	
	КонтекстОтчета = Новый Структура;
	КонтекстОтчета.Вставить("Организация", Организация);
	КонтекстОтчета.Вставить("ТаблицаРасшифровки", ТаблицаРасшифровки);
	КонтекстОтчета.Вставить("РассчитанныеПоказатели", РассчитанныеПоказатели);
	КонтекстОтчета.Вставить("РассчитанныеПараметры", РассчитанныеПараметры);
	КонтекстОтчета.Вставить("ЗаголовкиГраф", ЗаголовкиГраф);
	
	КонтекстРаздела = Новый Структура;
	КонтекстРаздела.Вставить("КонтекстОтчета", КонтекстОтчета);
	КонтекстРаздела.Вставить("ИмяРаздела", "Пояснения4");
	
	КонтекстСтроки = Новый Структура;
	КонтекстСтроки.Вставить("КонтекстРаздела", КонтекстРаздела);
	КонтекстСтроки.Вставить("ДатаНачалаПериодаОтчета", НачалоПериода);
	КонтекстСтроки.Вставить("ДатаКонцаПериодаОтчета", КонецПериода);
	КонтекстСтроки.Вставить("ПроцессорПоказателя", ПроцессорПоказателя);
	
	КонтекстСтроки.Вставить("НомерСтроки", ?(ЭтоОтчетныйПериод, "5400", "5420"));
	ЗаполнитьФормаОтчета2011Кв4_Пояснения4ЗаПериодСтрока5400и5420(КонтекстСтроки);
	
	КонтекстСтроки.Вставить("НомерСтроки", ?(ЭтоОтчетныйПериод, "5401", "5421"));
	ЗаполнитьФормаОтчета2011Кв4_Пояснения4ЗаПериодСтрока5401и5421(КонтекстСтроки);
	
	КонтекстСтроки.Вставить("НомерСтроки", ?(ЭтоОтчетныйПериод, "5402", "5422"));
	ЗаполнитьФормаОтчета2011Кв4_Пояснения4ЗаПериодСтрока5402и5422(КонтекстСтроки);
	
	КонтекстСтроки.Вставить("НомерСтроки", ?(ЭтоОтчетныйПериод, "5403", "5423"));
	ЗаполнитьФормаОтчета2011Кв4_Пояснения4ЗаПериодСтрока5403и5423(КонтекстСтроки);
	
	КонтекстСтроки.Вставить("НомерСтроки", ?(ЭтоОтчетныйПериод, "5404", "5424"));
	ЗаполнитьФормаОтчета2011Кв4_Пояснения4ЗаПериодСтрока5404и5424(КонтекстСтроки);
	
	КонтекстСтроки.Вставить("НомерСтроки", ?(ЭтоОтчетныйПериод, "5405", "5425"));
	ЗаполнитьФормаОтчета2011Кв4_Пояснения4ЗаПериодСтрока5405и5425(КонтекстСтроки);
	
	КонтекстСтроки.Вставить("НомерСтроки", ?(ЭтоОтчетныйПериод, "5406", "5426"));
	ЗаполнитьФормаОтчета2011Кв4_Пояснения4ЗаПериодСтрока5406и5426(КонтекстСтроки);
	
	КонтекстВыполнения.Удалить("РассчитанныеПараметры");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения4ЗаПериодСтрока5400и5420(КонтекстСтроки)
	
	Организация = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.Организация;
	ТаблицаРасшифровки = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.РассчитанныеПоказатели;
	РассчитанныеПараметры = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.РассчитанныеПараметры;
	ЗаголовкиГраф = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.ЗаголовкиГраф;
	
	ИмяРаздела    = КонтекстСтроки.КонтекстРаздела.ИмяРаздела;
	НомерСтроки   = КонтекстСтроки.НомерСтроки;
	НачалоПериода = КонтекстСтроки.ДатаНачалаПериодаОтчета;
	КонецПериода  = КонтекстСтроки.ДатаКонцаПериодаОтчета;
	
	ПроцессорПоказателя = КонтекстСтроки.ПроцессорПоказателя;
	Вычитаемый = Истина;
	
	РазделятьАвансыПоВидамАктивов = РассчитанныеПараметры.РазделятьАвансыПоВидамАктивов;
	
	КонтекстЗаполнения = НовыйКонтекстЗаполнения();
	КонтекстЗаполнения.НачалоПериода = НачалоПериода;
	КонтекстЗаполнения.КонецПериода  = КонецПериода;
	КонтекстЗаполнения.Организация   = Организация;
	
	ПараметрыРасшифровки = ОбщегоНазначения.СкопироватьРекурсивно(КонтекстЗаполнения);
	
	НаименованиеСтроки = "Запасы - всего";
	
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.Запасы;
	ВидАктиваДляАвансов = Перечисления.ВидыАктивовДляАвансов.Запасы;
	
	Графа = "04";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 10");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 15");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 16");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 20");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 23");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 28");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 29");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 41");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 43");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 44");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 45");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД_ПоВидуАктива 97", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "- СНК 16");
	УчестьСоставляющую(ПроцессорПоказателя, "- СНК 42");
	Если РазделятьАвансыПоВидамАктивов Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СНД_ПоВидуАктива 60.02", ВидАктиваДляАвансов);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СНД_ПоВидуАктива 60.22", ВидАктиваДляАвансов);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СНД_ПоВидуАктива 60.32", ВидАктиваДляАвансов);
	КонецЕсли;
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	Графа = "05";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНК 14");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
	Графа = "06";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 10");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 10, 10");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 15");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 10, 15");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 21");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 28");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 21");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 21, 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 21, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 23, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 23, 28");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 28");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 21");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 29");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 29, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 29, 28");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 29, 29");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 41");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 41, 41");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 41, 42");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 41, 15");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 43");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 43, 43");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 44");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 45");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО_ПоВидуАктива 97", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО_ПоВидуАктива 76.01.2", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО_ПоВидуАктива 76.01.9", ВидАктиваРБП);
	Если РазделятьАвансыПоВидамАктивов Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ ДО_ПоВидуАктива 60.02", ВидАктиваДляАвансов);
		УчестьСоставляющую(ПроцессорПоказателя, "+ ДО_ПоВидуАктива 60.22", ВидАктиваДляАвансов);
		УчестьСоставляющую(ПроцессорПоказателя, "+ ДО_ПоВидуАктива 60.32", ВидАктиваДляАвансов);
	КонецЕсли;
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	Графа = "07";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 10");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 10, 10");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 16");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 15, 16");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 21, 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 20");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 21");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 21");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 23, 21");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 21, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 23, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 29, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 28");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 28");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 23, 28");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 28");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 29");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 29, 29");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 41");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 41, 41");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 90, 42");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 43");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 43, 43");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 44");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 45");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО_ПоВидуАктива 97", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО_ПоВидуАктива 76.01.2", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО_ПоВидуАктива 76.01.9", ВидАктиваРБП);
	Если РазделятьАвансыПоВидамАктивов Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ КО_ПоВидуАктива 60.02", ВидАктиваДляАвансов);
		УчестьСоставляющую(ПроцессорПоказателя, "+ КО_ПоВидуАктива 60.22", ВидАктиваДляАвансов);
		УчестьСоставляющую(ПроцессорПоказателя, "+ КО_ПоВидуАктива 60.32", ВидАктиваДляАвансов);
	КонецЕсли;
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
	// Графы 08 и 09 - изменение обесценения за период
	СтрокаОтчета  = НовыйОписаниеСтрокиОтчета();
	СтрокаОтчета.ИмяРаздела         = ИмяРаздела;
	СтрокаОтчета.НомерСтроки        = НомерСтроки;
	СтрокаОтчета.НаименованиеСтроки = НаименованиеСтроки;
	
	ЗаполнитьИзменениеОбесценения(
		РассчитанныеПоказатели,
		ТаблицаРасшифровки,
		"14",
		СтрокаОтчета,
		КонтекстЗаполнения,
		ПараметрыРасшифровки,
		РассчитанныеПараметры);
	
	Графа = "11";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 10");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 15");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 16");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 20");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 23");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 28");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 29");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 41");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 43");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 44");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 45");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 97", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 16");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 42");
	Если РазделятьАвансыПоВидамАктивов Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 60.02", ВидАктиваДляАвансов);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 60.22", ВидАктиваДляАвансов);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 60.32", ВидАктиваДляАвансов);
	КонецЕсли;
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	Графа = "12";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 14");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения4ЗаПериодСтрока5401и5421(КонтекстСтроки)
	
	Организация = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.Организация;
	ТаблицаРасшифровки = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.РассчитанныеПоказатели;
	РассчитанныеПараметры = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.РассчитанныеПараметры;
	ЗаголовкиГраф = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.ЗаголовкиГраф;
	
	ИмяРаздела    = КонтекстСтроки.КонтекстРаздела.ИмяРаздела;
	НомерСтроки   = КонтекстСтроки.НомерСтроки;
	НачалоПериода = КонтекстСтроки.ДатаНачалаПериодаОтчета;
	КонецПериода  = КонтекстСтроки.ДатаКонцаПериодаОтчета;
	
	ПроцессорПоказателя = КонтекстСтроки.ПроцессорПоказателя;
	Вычитаемый = Истина;
	
	КонтекстЗаполнения = НовыйКонтекстЗаполнения();
	КонтекстЗаполнения.НачалоПериода = НачалоПериода;
	КонтекстЗаполнения.КонецПериода  = КонецПериода;
	КонтекстЗаполнения.Организация   = Организация;
	
	ПараметрыРасшифровки = ОбщегоНазначения.СкопироватьРекурсивно(КонтекстЗаполнения);
	
	НаименованиеСтроки = "Сырье, материалы и другие аналогичные ценности";
	
	Графа = "04";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 10");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 15.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 16.01");
	УчестьСоставляющую(ПроцессорПоказателя, "- СНК 16.01");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	Графа = "05";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНК 14.01");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
	Графа = "06";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 10");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 10, 10");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 15.01");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 10, 15.01");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	Графа = "07";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 10");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 10, 10");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 16.01");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 15.01, 16.01");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
	// Графы 08 и 09 - изменение обесценения за период
	СтрокаОтчета  = НовыйОписаниеСтрокиОтчета();
	СтрокаОтчета.ИмяРаздела         = ИмяРаздела;
	СтрокаОтчета.НомерСтроки        = НомерСтроки;
	СтрокаОтчета.НаименованиеСтроки = НаименованиеСтроки;
	
	ЗаполнитьИзменениеОбесценения(
		РассчитанныеПоказатели,
		ТаблицаРасшифровки,
		"14.01",
		СтрокаОтчета,
		КонтекстЗаполнения,
		ПараметрыРасшифровки,
		РассчитанныеПараметры);
	
	Графа = "10";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 10, 10");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	Графа = "11";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 10");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 15.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 16.01");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 16.01");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	Графа = "12";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 14.01");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения4ЗаПериодСтрока5402и5422(КонтекстСтроки)
	
	Организация = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.Организация;
	ТаблицаРасшифровки = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.РассчитанныеПоказатели;
	РассчитанныеПараметры = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.РассчитанныеПараметры;
	ЗаголовкиГраф = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.ЗаголовкиГраф;
	
	ИмяРаздела    = КонтекстСтроки.КонтекстРаздела.ИмяРаздела;
	НомерСтроки   = КонтекстСтроки.НомерСтроки;
	НачалоПериода = КонтекстСтроки.ДатаНачалаПериодаОтчета;
	КонецПериода  = КонтекстСтроки.ДатаКонцаПериодаОтчета;
	
	ПроцессорПоказателя = КонтекстСтроки.ПроцессорПоказателя;
	Вычитаемый = Истина;
	
	КонтекстЗаполнения = НовыйКонтекстЗаполнения();
	КонтекстЗаполнения.НачалоПериода = НачалоПериода;
	КонтекстЗаполнения.КонецПериода  = КонецПериода;
	КонтекстЗаполнения.Организация   = Организация;
	
	ПараметрыРасшифровки = ОбщегоНазначения.СкопироватьРекурсивно(КонтекстЗаполнения);
	
	НаименованиеСтроки = "Готовая продукция";
	
	Графа = "04";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 43");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	Графа = "05";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНК 14.03");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
	Графа = "06";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 43");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 43, 43");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	Графа = "07";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 43");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 43, 43");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
	// Графы 08 и 09 - изменение обесценения за период
	СтрокаОтчета  = НовыйОписаниеСтрокиОтчета();
	СтрокаОтчета.ИмяРаздела         = ИмяРаздела;
	СтрокаОтчета.НомерСтроки        = НомерСтроки;
	СтрокаОтчета.НаименованиеСтроки = НаименованиеСтроки;
	
	ЗаполнитьИзменениеОбесценения(
		РассчитанныеПоказатели,
		ТаблицаРасшифровки,
		"14.03",
		СтрокаОтчета,
		КонтекстЗаполнения,
		ПараметрыРасшифровки,
		РассчитанныеПараметры);
	
	Графа = "10";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 43, 43");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	Графа = "11";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 43");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	Графа = "12";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 14.03");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения4ЗаПериодСтрока5403и5423(КонтекстСтроки)
	
	Организация = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.Организация;
	ТаблицаРасшифровки = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.РассчитанныеПоказатели;
	РассчитанныеПараметры = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.РассчитанныеПараметры;
	ЗаголовкиГраф = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.ЗаголовкиГраф;
	
	ИмяРаздела    = КонтекстСтроки.КонтекстРаздела.ИмяРаздела;
	НомерСтроки   = КонтекстСтроки.НомерСтроки;
	НачалоПериода = КонтекстСтроки.ДатаНачалаПериодаОтчета;
	КонецПериода  = КонтекстСтроки.ДатаКонцаПериодаОтчета;
	
	ПроцессорПоказателя = КонтекстСтроки.ПроцессорПоказателя;
	Вычитаемый = Истина;
	
	КонтекстЗаполнения = НовыйКонтекстЗаполнения();
	КонтекстЗаполнения.НачалоПериода = НачалоПериода;
	КонтекстЗаполнения.КонецПериода  = КонецПериода;
	КонтекстЗаполнения.Организация   = Организация;
	
	ПараметрыРасшифровки = ОбщегоНазначения.СкопироватьРекурсивно(КонтекстЗаполнения);
	
	НаименованиеСтроки = "Товары для перепродажи";
	
	Графа = "04";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 41");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 15.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 16.02");
	УчестьСоставляющую(ПроцессорПоказателя, "- СНК 16.02");
	УчестьСоставляющую(ПроцессорПоказателя, "- СНК 42");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	Графа = "05";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНК 14.02");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
	Графа = "06";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 41");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 41, 42");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 41, 41");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 15.02");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 41, 15.02");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	Графа = "07";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 41");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 41, 41");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 90, 42");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 16.02");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 15.02, 16.02");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
	// Графы 08 и 09 - изменение обесценения за период
	СтрокаОтчета  = НовыйОписаниеСтрокиОтчета();
	СтрокаОтчета.ИмяРаздела         = ИмяРаздела;
	СтрокаОтчета.НомерСтроки        = НомерСтроки;
	СтрокаОтчета.НаименованиеСтроки = НаименованиеСтроки;
	
	ЗаполнитьИзменениеОбесценения(
		РассчитанныеПоказатели,
		ТаблицаРасшифровки,
		"14.02",
		СтрокаОтчета,
		КонтекстЗаполнения,
		ПараметрыРасшифровки,
		РассчитанныеПараметры);
		
	Графа = "10";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 41, 41");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	Графа = "11";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 41");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 15.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 16.02");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 42");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	Графа = "12";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 14.02");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения4ЗаПериодСтрока5404и5424(КонтекстСтроки)
	
	НомерСтроки = КонтекстСтроки.НомерСтроки;
	ЗаголовкиГраф = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.ЗаголовкиГраф;
	РассчитанныеПоказатели = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.РассчитанныеПоказатели;
	
	ПроцессорПоказателя = КонтекстСтроки.ПроцессорПоказателя;
	Вычитаемый = Истина;
	
	НаименованиеСтроки = "Товары и готовая продукция отгруженные";
	
	Графа = "04";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 45");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	Графа = "06";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 45");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	Графа = "07";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 45");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
	Графа = "11";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 45");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения4ЗаПериодСтрока5405и5425(КонтекстСтроки)
	
	Организация = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.Организация;
	ТаблицаРасшифровки = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.РассчитанныеПоказатели;
	РассчитанныеПараметры = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.РассчитанныеПараметры;
	ЗаголовкиГраф = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.ЗаголовкиГраф;
	
	ИмяРаздела    = КонтекстСтроки.КонтекстРаздела.ИмяРаздела;
	НомерСтроки   = КонтекстСтроки.НомерСтроки;
	НачалоПериода = КонтекстСтроки.ДатаНачалаПериодаОтчета;
	КонецПериода  = КонтекстСтроки.ДатаКонцаПериодаОтчета;
	
	ПроцессорПоказателя = КонтекстСтроки.ПроцессорПоказателя;
	Вычитаемый = Истина;
	
	КонтекстЗаполнения = НовыйКонтекстЗаполнения();
	КонтекстЗаполнения.НачалоПериода = НачалоПериода;
	КонтекстЗаполнения.КонецПериода  = КонецПериода;
	КонтекстЗаполнения.Организация   = Организация;
	
	ЗаголовкиГраф = РассчитанныеПараметры.ЗаголовкиГраф;
	
	ПараметрыРасшифровки = ОбщегоНазначения.СкопироватьРекурсивно(КонтекстЗаполнения);
	
	НаименованиеСтроки = "Затраты в незавершенном производстве";
	
	Графа = "04";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 20");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 23");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 28");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 29");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	Графа = "05";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНК 14.04");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
	Графа = "06";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 21");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 28");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 21");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 21, 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 21, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 23, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 23, 28");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 28");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 21");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 29");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 29, 29");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 29, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 29, 28");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	Графа = "07";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 21, 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 20");
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 21");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 21");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 23, 21");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 21");
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 23, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 21, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 29, 23");
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 28");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 28");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 23, 28");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 28");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 29, 28");
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 29");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 29, 29");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
	// Графы 08 и 09 - изменение обесценения за период
	СтрокаОтчета  = НовыйОписаниеСтрокиОтчета();
	СтрокаОтчета.ИмяРаздела         = ИмяРаздела;
	СтрокаОтчета.НомерСтроки        = НомерСтроки;
	СтрокаОтчета.НаименованиеСтроки = НаименованиеСтроки;
	
	ЗаполнитьИзменениеОбесценения(
		РассчитанныеПоказатели,
		ТаблицаРасшифровки,
		"14.04",
		СтрокаОтчета,
		КонтекстЗаполнения,
		ПараметрыРасшифровки,
		РассчитанныеПараметры);
	
	Графа = "11";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 20");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 23");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 28");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 29");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	Графа = "12";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 14.04");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения4ЗаПериодСтрока5406и5426(КонтекстСтроки)
	
	НомерСтроки = КонтекстСтроки.НомерСтроки;
	ЗаголовкиГраф = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.ЗаголовкиГраф;
	РассчитанныеПоказатели = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.РассчитанныеПоказатели;
	РассчитанныеПараметры = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.РассчитанныеПараметры;
	
	ПроцессорПоказателя = КонтекстСтроки.ПроцессорПоказателя;
	Вычитаемый = Истина;
	
	РазделятьАвансыПоВидамАктивов = РассчитанныеПараметры.РазделятьАвансыПоВидамАктивов;
	
	НаименованиеСтроки = "Прочие запасы и затраты";
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.Запасы;
	ВидАктиваДляАвансов = Перечисления.ВидыАктивовДляАвансов.Запасы;
	
	Графа = "04";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 44");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД_ПоВидуАктива 97", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
	Если РазделятьАвансыПоВидамАктивов Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СНД_ПоВидуАктива 60.02", ВидАктиваДляАвансов);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СНД_ПоВидуАктива 60.22", ВидАктиваДляАвансов);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СНД_ПоВидуАктива 60.32", ВидАктиваДляАвансов);
	КонецЕсли;
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	Графа = "06";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 44");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО_ПоВидуАктива 97", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО_ПоВидуАктива 76.01.2", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО_ПоВидуАктива 76.01.9", ВидАктиваРБП);
	Если РазделятьАвансыПоВидамАктивов Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ ДО_ПоВидуАктива 60.02", ВидАктиваДляАвансов);
		УчестьСоставляющую(ПроцессорПоказателя, "+ ДО_ПоВидуАктива 60.22", ВидАктиваДляАвансов);
		УчестьСоставляющую(ПроцессорПоказателя, "+ ДО_ПоВидуАктива 60.32", ВидАктиваДляАвансов);
	КонецЕсли;
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	Графа = "07";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 44");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО_ПоВидуАктива 97", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО_ПоВидуАктива 76.01.2", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО_ПоВидуАктива 76.01.9", ВидАктиваРБП);
	Если РазделятьАвансыПоВидамАктивов Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ КО_ПоВидуАктива 60.02", ВидАктиваДляАвансов);
		УчестьСоставляющую(ПроцессорПоказателя, "+ КО_ПоВидуАктива 60.22", ВидАктиваДляАвансов);
		УчестьСоставляющую(ПроцессорПоказателя, "+ КО_ПоВидуАктива 60.32", ВидАктиваДляАвансов);
	КонецЕсли;
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
	Графа = "11";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 44");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 97", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
	Если РазделятьАвансыПоВидамАктивов Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 60.02", ВидАктиваДляАвансов);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 60.22", ВидАктиваДляАвансов);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 60.32", ВидАктиваДляАвансов);
	КонецЕсли;
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
КонецПроцедуры

Функция БухгалтерскиеИтоги2011Кв4_Пояснения4(ИтогиПоСчетам)
	
	РассчитанныеЗначения = Новый Соответствие;
	
	РассчитанныеЗначения.Вставить("СальдоИОборотыПоСчетам", ИтогиПоСчетам.СальдоИОборотыПоСчетам);
	РассчитанныеЗначения.Вставить("ОборотыМеждуСчетами", ИтогиПоСчетам.ОборотыМеждуСчетами);
	
	Возврат РассчитанныеЗначения;
	
КонецФункции

Процедура ДополнитьБухгалтерскиеИтогиПоВидамАктивов(ПроцессорПоказателя, КонтекстВыполнения)
	
	Организация = КонтекстВыполнения.Организация;
	НачалоПериодаОтчета = КонтекстВыполнения.РассчитанныеПараметры.ДатаНачалаПериодаОтчета;
	КонецПериодаОтчета = КонтекстВыполнения.РассчитанныеПараметры.ДатаКонцаПериодаОтчета;
	
	РассчитанныеЗначения = ПроцессорПоказателя.РассчитанныеЗначения;
	
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.Запасы;
	
	Счет_97_ПоВидуАктива = ЗаполнениеБухгалтерскойОтчетностиИтоги.ДанныеСчетаПоВидуАктиваРБП(
		Счет("97"), ВидАктиваРБП, Организация, НачалоПериодаОтчета, КонецПериодаОтчета);
	Счет_76_01_2_ПоВидуАктива = ЗаполнениеБухгалтерскойОтчетностиИтоги.ДанныеСчетаПоВидуАктиваРБП(
		Счет("76.01.2"), ВидАктиваРБП, Организация, НачалоПериодаОтчета, КонецПериодаОтчета);
	Счет_76_01_9_ПоВидуАктива = ЗаполнениеБухгалтерскойОтчетностиИтоги.ДанныеСчетаПоВидуАктиваРБП(
		Счет("76.01.9"), ВидАктиваРБП, Организация, НачалоПериодаОтчета, КонецПериодаОтчета);
	
	РассчитанныеЗначения.Вставить("СНД_ПоВидуАктива_97", НовоеСоответствие(ВидАктиваРБП, Счет_97_ПоВидуАктива.СНД));
	РассчитанныеЗначения.Вставить("ДО_ПоВидуАктива_97",  НовоеСоответствие(ВидАктиваРБП, Счет_97_ПоВидуАктива.ДО));
	РассчитанныеЗначения.Вставить("КО_ПоВидуАктива_97",  НовоеСоответствие(ВидАктиваРБП, Счет_97_ПоВидуАктива.КО));
	РассчитанныеЗначения.Вставить("СКД_ПоВидуАктива_97", НовоеСоответствие(ВидАктиваРБП, Счет_97_ПоВидуАктива.СКД));
	
	РассчитанныеЗначения.Вставить("СКД_ПоВидуАктива_76_01_2", НовоеСоответствие(ВидАктиваРБП, Счет_76_01_2_ПоВидуАктива.СКД));
	РассчитанныеЗначения.Вставить("ДО_ПоВидуАктива_76_01_2",  НовоеСоответствие(ВидАктиваРБП, Счет_76_01_2_ПоВидуАктива.ДО));
	РассчитанныеЗначения.Вставить("КО_ПоВидуАктива_76_01_2",  НовоеСоответствие(ВидАктиваРБП, Счет_76_01_2_ПоВидуАктива.КО));
	РассчитанныеЗначения.Вставить("СНД_ПоВидуАктива_76_01_2", НовоеСоответствие(ВидАктиваРБП, Счет_76_01_2_ПоВидуАктива.СНД));
	
	РассчитанныеЗначения.Вставить("СКД_ПоВидуАктива_76_01_9", НовоеСоответствие(ВидАктиваРБП, Счет_76_01_9_ПоВидуАктива.СКД));
	РассчитанныеЗначения.Вставить("ДО_ПоВидуАктива_76_01_9",  НовоеСоответствие(ВидАктиваРБП, Счет_76_01_9_ПоВидуАктива.ДО));
	РассчитанныеЗначения.Вставить("КО_ПоВидуАктива_76_01_9",  НовоеСоответствие(ВидАктиваРБП, Счет_76_01_9_ПоВидуАктива.КО));
	РассчитанныеЗначения.Вставить("СНД_ПоВидуАктива_76_01_9", НовоеСоответствие(ВидАктиваРБП, Счет_76_01_9_ПоВидуАктива.СНД));
	
	ПараметрыРасчетаИтогов = ЗаполнениеБухгалтерскойОтчетностиИтоги.НовыеПараметрыСчетовУчетаАвансовПоВидамАктива();
	ПараметрыРасчетаИтогов.Организация = Организация;
	ПараметрыРасчетаИтогов.НачалоПериода = НачалоПериодаОтчета;
	ПараметрыРасчетаИтогов.КонецПериода = КонецПериодаОтчета;
	ПараметрыРасчетаИтогов.РазделятьАвансыПоВидамАктивов = КонтекстВыполнения.РассчитанныеПараметры.РазделятьАвансыПоВидамАктивов;
	ПараметрыРасчетаИтогов.СчетаУчетаАвансов.Добавить(Счет("60.02"));
	ПараметрыРасчетаИтогов.СчетаУчетаАвансов.Добавить(Счет("60.22"));
	ПараметрыРасчетаИтогов.СчетаУчетаАвансов.Добавить(Счет("60.32"));
	
	ТокеныСчетов = Новый Соответствие;
	ТокеныСчетов.Вставить(Счет("60.02"), "60_02");
	ТокеныСчетов.Вставить(Счет("60.22"), "60_22");
	ТокеныСчетов.Вставить(Счет("60.32"), "60_32");
	
	АвансыПоВидамАктива = ЗаполнениеБухгалтерскойОтчетностиИтоги.ИтогиСчетовУчетаАвансовПоВидамАктива(ПараметрыРасчетаИтогов);
	Для Каждого АвансПоВидуАктива Из АвансыПоВидамАктива Цикл
		ТокенСчета = ТокеныСчетов[АвансПоВидуАктива.Счет];
		ВидАктива = АвансПоВидуАктива.ВидАктива;
		СоздатьДополнитьСоответствие(РассчитанныеЗначения, "СНД_ПоВидуАктива_" + ТокенСчета, ВидАктива, АвансПоВидуАктива.СНД);
		СоздатьДополнитьСоответствие(РассчитанныеЗначения, "ДО_ПоВидуАктива_" + ТокенСчета,  ВидАктива, АвансПоВидуАктива.ДО);
		СоздатьДополнитьСоответствие(РассчитанныеЗначения, "КО_ПоВидуАктива_" + ТокенСчета,  ВидАктива, АвансПоВидуАктива.КО);
		СоздатьДополнитьСоответствие(РассчитанныеЗначения, "СКД_ПоВидуАктива_" + ТокенСчета, ВидАктива, АвансПоВидуАктива.СКД);
	КонецЦикла;
	
КонецПроцедуры

Процедура СоздатьДополнитьСоответствие(КонтейнерСоответствия, ИмяЭлемента, ВидАктива, Значение)
	
	Если КонтейнерСоответствия[ИмяЭлемента] = Неопределено Тогда
		КонтейнерСоответствия.Вставить(ИмяЭлемента, Новый Соответствие);
	КонецЕсли;
	КонтейнерСоответствия[ИмяЭлемента].Вставить(ВидАктива, Значение);
	
КонецПроцедуры

Функция НовоеСоответствие(Ключ, Значение)
	
	НовоеСоответствие = Новый Соответствие;
	НовоеСоответствие.Вставить(Ключ, Значение);
	
	Возврат НовоеСоответствие;
	
КонецФункции

Функция ПараметрыСчетов_Пояснения4()
	
	ПараметрыСчетов = Новый Соответствие;
	
	ПараметрыСчета = Новый Структура;
	ПараметрыСчета.Вставить("ШаблонОписания", "/по договорам с признаком отражения в балансе ""%2""/");
	ПараметрыСчета.Вставить("ОтборПоАналитике", "Субконто2.ВидАктива");
	
	ПараметрыСчетов.Вставить("60.02", ПараметрыСчета);
	ПараметрыСчетов.Вставить("60.22", ПараметрыСчета);
	ПараметрыСчетов.Вставить("60.32", ПараметрыСчета);
	
	ПараметрыСчета = Новый Структура;
	ПараметрыСчета.Вставить("ШаблонОписания", "/по договорам с признаком отражения в балансе ""%2""/");
	
	ПараметрыСчетов.Вставить("76.ВА", ПараметрыСчета);
	
	ПараметрыСчета = Новый Структура;
	ПараметрыСчета.Вставить("ОтборПоАналитике", "Субконто1.ВидАктива");
	
	ПараметрыСчетов.Вставить("97", ПараметрыСчета);
	
	ПараметрыСчета = Новый Структура;
	ПараметрыСчета.Вставить("ОтборПоАналитике", "Субконто2.ВидАктива");
	
	ПараметрыСчетов.Вставить("76.01.2", ПараметрыСчета);
	ПараметрыСчетов.Вставить("76.01.9", ПараметрыСчета);
	
	Возврат ПараметрыСчетов;
	
КонецФункции

Процедура ЗаполнитьИзменениеОбесценения(РассчитанныеПоказатели, ТаблицаРасшифровки, КодСчетаРезерва, СтрокаОтчета, Контекст, ПараметрыРасшифровки, РассчитанныеПараметры)
	
	// из РассчитанныеПараметры используются
	// - ЗаголовкиГраф
	// - СальдоИОборотыПоСчетам
	// - ОборотыМеждуСчетами
	
	ПрименяетсяФСБУ5 = (ПривестиКДате(Контекст.КонецПериода) > ДатаОбязательногоПримененияФСБУ5());
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ПроверитьПрименяетсяОбесценениеФСБУ5(
		ПрименяетсяФСБУ5,
		Контекст.Организация,
		ПривестиКДате(Контекст.КонецПериода));
	
	Если Не ПрименяетсяФСБУ5 Тогда
		ЗаполнитьИзменениеОбесцененияПБУ5(
			РассчитанныеПоказатели,
			ТаблицаРасшифровки,
			СтрокаОтчета,
			Контекст,
			ПараметрыРасшифровки,
			РассчитанныеПараметры,
			КодСчетаРезерва);
		Возврат;
	КонецЕсли;
	
	// Далее - для ФСБУ 5
	СчетРезерва = Счет(КодСчетаРезерва);
	
	// Графа 08: Выбыло - резерв под снижение стоимости
	ОписаниеПоля = ОписаниеПоля(СтрокаОтчета, "08", РассчитанныеПараметры.ЗаголовкиГраф);
	
	ВыбытиеОбесценения = Неопределено;
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.РассчитатьВыбытиеОбесцененияЗапасов(
		ВыбытиеОбесценения,
		Контекст.Организация,
		Контекст.НачалоПериода,
		ПривестиКДате(Контекст.КонецПериода),
		СчетРезерва);
		
	Если ВыбытиеОбесценения = Неопределено Тогда
		ВыбытиеОбесценения = ВключениеОбесцененияВСтоимостьЗапаса(КодСчетаРезерва, РассчитанныеПараметры);
	КонецЕсли;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, СтрокаОтчета.ИмяРаздела, ОписаниеПоля.Имя, ВыбытиеОбесценения);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ОписаниеПоля.Имя, ОписаниеПоля.Представление,
		"+", НСтр("ru = 'См. Справку-расчет ""Обесценение запасов""'", ОбщегоНазначения.КодОсновногоЯзыка()),
		ВыбытиеОбесценения, СтрокаОтчета.ИмяРаздела);
		
	// Графа 09: убытки от снижения стоимости
	ОписаниеПоля = ОписаниеПоля(СтрокаОтчета, "09", РассчитанныеПараметры.ЗаголовкиГраф);
	
	ИзменениеРезерваДт = ЗаполнениеБухгалтерскойОтчетностиИтоги.ДО(КодСчетаРезерва, РассчитанныеПараметры.СальдоИОборотыПоСчетам);
	ИзменениеРезерваКт = ЗаполнениеБухгалтерскойОтчетностиИтоги.КО(КодСчетаРезерва, РассчитанныеПараметры.СальдоИОборотыПоСчетам);
	ИзменениеРезерва = ИзменениеРезерваДт - ИзменениеРезерваКт;
	
	ПредставлениеСчетаРезерва = СчетРезерва.Код;
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ОписаниеПоля.Имя, ОписаниеПоля.Представление,
		"+", "!ДО " + ПредставлениеСчетаРезерва,
		ИзменениеРезерваДт, СтрокаОтчета.ИмяРаздела, НастройкиОСВПоСчету(ПараметрыРасшифровки, КодСчетаРезерва));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ОписаниеПоля.Имя, ОписаниеПоля.Представление,
		"-", "!КО " + ПредставлениеСчетаРезерва,
		-ИзменениеРезерваКт, СтрокаОтчета.ИмяРаздела, НастройкиОСВПоСчету(ПараметрыРасшифровки, КодСчетаРезерва));
	
	Если ВыбытиеОбесценения = Неопределено Тогда
		ЗначениеПоказателя = ИзменениеРезерва;
	Иначе
		ЗначениеПоказателя = ИзменениеРезерва - ВыбытиеОбесценения;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ОписаниеПоля.Имя, ОписаниеПоля.Представление,
			"-", НСтр("ru = 'Выбытие резерва под снижение стоимости, см. Справку-расчет ""Обесценение запасов""'", ОбщегоНазначения.КодОсновногоЯзыка()),
			-ВыбытиеОбесценения, СтрокаОтчета.ИмяРаздела);
		
	КонецЕсли;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, СтрокаОтчета.ИмяРаздела, ОписаниеПоля.Имя, ЗначениеПоказателя);
	
КонецПроцедуры

Функция ВключениеОбесцененияВСтоимостьЗапаса(КодСчетаРезерва, РассчитанныеПараметры)
	
	// В проводках может быть отражено выбытие резерва в связи с выбытием запаса
	// методом включения обесценения в стоимость запаса -
	// т.е. отнесение на балансовый счет (не счет расходов)
	
	ИзменениеРезерваДт = ЗаполнениеБухгалтерскойОтчетностиИтоги.ДО(КодСчетаРезерва, РассчитанныеПараметры.СальдоИОборотыПоСчетам);
	ИзменениеРезерваКт = ЗаполнениеБухгалтерскойОтчетностиИтоги.КО(КодСчетаРезерва, РассчитанныеПараметры.СальдоИОборотыПоСчетам);
	ИзменениеРезерва = ИзменениеРезерваДт - ИзменениеРезерваКт;
	
	Выбытие90 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ(
		КодСчетаРезерва,
		"90",
		РассчитанныеПараметры.ОборотыМеждуСчетами);
		
	Выбытие91 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ(
		КодСчетаРезерва,
		"91",
		РассчитанныеПараметры.ОборотыМеждуСчетами);
		
	Возврат ИзменениеРезерва - Выбытие90 - Выбытие91;
	
КонецФункции

Функция ДатаОбязательногоПримененияФСБУ5()
	
	Возврат '2021-01-01';
	
КонецФункции

Процедура ЗаполнитьИзменениеОбесцененияПБУ5(РассчитанныеПоказатели, ТаблицаРасшифровки, СтрокаОтчета, Контекст, ПараметрыРасшифровки, РассчитанныеПараметры, КодСчетаРезерва)
	
	ПредставлениеСчетаРезерва = Счет(КодСчетаРезерва).Код;
	
	// Графа 08: Выбыло - резерв под снижение стоимости
	ОписаниеПоля = ОписаниеПоля(СтрокаОтчета, "08", РассчитанныеПараметры.ЗаголовкиГраф);
	
	ЗначениеПоказателя = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ(КодСчетаРезерва, "91.01", РассчитанныеПараметры.ОборотыМеждуСчетами);
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, СтрокаОтчета.ИмяРаздела, ОписаниеПоля.Имя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ОписаниеПоля.Имя, ОписаниеПоля.Представление,
		"+", "!ОБ " + ПредставлениеСчетаРезерва + " " + Счет("91.01").Код,
		ЗначениеПоказателя, СтрокаОтчета.ИмяРаздела, НастройкиАнализаСчета(ПараметрыРасшифровки, КодСчетаРезерва, "91.01"));
	
	// Графа 09: убытки от снижения стоимости
	ОписаниеПоля = ОписаниеПоля(СтрокаОтчета, "09", РассчитанныеПараметры.ЗаголовкиГраф);
	
	ЗначениеПоказателя = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("91.02", КодСчетаРезерва, РассчитанныеПараметры.ОборотыМеждуСчетами);
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, СтрокаОтчета.ИмяРаздела, ОписаниеПоля.Имя, - ЗначениеПоказателя); // вычитаемый
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ОписаниеПоля.Имя, ОписаниеПоля.Представление,
		"+", "!ОБ " + Счет("91.02").Код + " " + ПредставлениеСчетаРезерва,
		ЗначениеПоказателя, СтрокаОтчета.ИмяРаздела, НастройкиАнализаСчета(ПараметрыРасшифровки, "91.02", КодСчетаРезерва));
	
КонецПроцедуры

#КонецОбласти

#Область ФормаОтчета2011Кв4_Пояснения5

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения5(КонтекстВыполнения) Экспорт
	
	// Вспомогательные значения периодов.
	НачалоПериодаОтчета = КонтекстВыполнения.НачалоПериодаОтчета;
	КонецПериодаОтчета = Новый МоментВремениСУточнениемПериода(
		КонтекстВыполнения.КонецПериодаОтчета, 0);
	
	НачалоПериодаПредыдущегоГода = ДобавитьМесяц(НачалоПериодаОтчета, -12);
	КонецПериодаПредыдущегоГода = Новый МоментВремениСУточнениемПериода(
		КонецГода(НачалоПериодаПредыдущегоГода), БухгалтерскийУчет.ВерхняяГраницаУточненияПериода());
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5ЗаПериод(КонтекстВыполнения, "Отчетный", НачалоПериодаОтчета, КонецПериодаОтчета);
	
	ЗаполнятьПредыдущиеПериоды = НЕ РасширенныйПериодОтчета(НачалоПериодаОтчета);
	Если ЗаполнятьПредыдущиеПериоды Тогда
		ЗаполнитьФормаОтчета2011Кв4_Пояснения5ЗаПериод(КонтекстВыполнения, "Предыдущий", НачалоПериодаПредыдущегоГода, КонецПериодаПредыдущегоГода);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения5ЗаПериод(КонтекстВыполнения,
	ТипПериода, НачалоПериода, КонецПериода)
	
	КонтекстРаздела = Новый Структура;
	
	ЗаголовкиГраф51 = Новый Соответствие;
	ЗаголовкиГраф51.Вставить("04", "На начало года - учтенная по условиям договора");
	ЗаголовкиГраф51.Вставить("05", "На начало года - величина резерва по сомнительным долгам");
	ЗаголовкиГраф51.Вставить("06", "Изменения за период - поступление - в результате хозяйственных операций (сумма долга по сделке, операции)");
	ЗаголовкиГраф51.Вставить("07", "Изменения за период - поступление - причитающиеся проценты, штрафы и иные начисления");
	ЗаголовкиГраф51.Вставить("08", "Изменения за период - выбыло - погашение");
	ЗаголовкиГраф51.Вставить("09", "Изменения за период - выбыло - списание на финансовый результат");
	ЗаголовкиГраф51.Вставить("10", "Изменения за период - выбыло - восстановление резерва");
	ЗаголовкиГраф51.Вставить("11", "Изменения за период - перевод из долго- в краткосрочную задолженность");
	ЗаголовкиГраф51.Вставить("12", "На конец периода - учтенная по условиям договора");
	ЗаголовкиГраф51.Вставить("13", "На конец периода - величина резерва по сомнительным долгам");
	ЗаголовкиГраф51.Вставить("21", "Изменения за период - перевод из дебиторской в кредиторскую задолженность");
	ЗаголовкиГраф51.Вставить("22", "Изменения за период - перевод из кредиторской в дебиторскую задолженность");
	
	ЗаголовкиГраф53 = Новый Соответствие;
	ЗаголовкиГраф53.Вставить("04", "Остаток на начало года");
	ЗаголовкиГраф53.Вставить("05", "Изменения за период - поступление - в результате хозяйственных операций (сумма долга по сделке, операции)");
	ЗаголовкиГраф53.Вставить("06", "Изменения за период - поступление - причитающиеся проценты, штрафы и иные начисления");
	ЗаголовкиГраф53.Вставить("07", "Изменения за период - выбыло - погашение");
	ЗаголовкиГраф53.Вставить("08", "Изменения за период - выбыло - списание на финансовый результат");
	ЗаголовкиГраф53.Вставить("09", "Изменения за период - перевод из долго- в краткосрочную задолженность");
	ЗаголовкиГраф53.Вставить("10", "Остаток на конец периода");
	
	КонтекстРаздела.Вставить("ДатаНачалаПериодаОтчета", НачалоПериода);
	КонтекстРаздела.Вставить("ДатаКонцаПериодаОтчета", КонецПериода);
	КонтекстРаздела.Вставить("ЗаголовкиГраф51", ЗаголовкиГраф51);
	КонтекстРаздела.Вставить("ЗаголовкиГраф53", ЗаголовкиГраф53);
	
	РазделятьАвансыПоВидамАктивов = РегламентированнаяОтчетность.АвансыРазделеныПоВидамАктивов(
		КонтекстВыполнения.Организация, КонтекстВыполнения.КонецОтчетногоПериода);
	КонтекстРаздела.Вставить("РазделятьАвансыПоВидамАктивов", РазделятьАвансыПоВидамАктивов);
	
	ПрименяетсяФСБУ25 = ЗаполнениеБухгалтерскойОтчетности.ПрименяетсяФСБУ25(
		КонтекстВыполнения.Организация, ПривестиКДате(КонецПериода));
	КонтекстРаздела.Вставить("ПрименяетсяФСБУ25", ПрименяетсяФСБУ25);
	
	КонтекстВыполнения.Вставить("КонтекстРаздела", КонтекстРаздела);
	
	Если ТипПериода = "Отчетный" Тогда
		ЭтоОтчетныйПериод = Истина;
	ИначеЕсли ТипПериода = "Предыдущий" Тогда
		ЭтоОтчетныйПериод = Ложь;
	Иначе
		ВызватьИсключение "Неверное значение параметра ТипПериода в функции ЗаполнитьАвтоПояснения5ЗаПериод()";
	КонецЕсли;
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5502", "5522");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5502и5522(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5503", "5523");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5503и5523(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5504", "5524");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5504и5524(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5510", "5530");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5510и5530(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5511", "5531");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5511и5531(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5512", "5532");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5512и5532(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5513", "5533");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5513и5533(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5552", "5572");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5552и5572(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5553", "5573");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5553и5573(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5554", "5574");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5554и5574(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5560", "5580");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5560и5580(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5561", "5581");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5561и5581(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5562", "5582");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5562и5582(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5563", "5583");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5563и5583(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5564", "5584");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5564и5584(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5565", "5585");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5565и5585(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5566", "5586");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5566и5586(КонтекстВыполнения, НомерСтроки);
	
	КонтекстВыполнения.Удалить("КонтекстРаздела");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5502и5522(КонтекстВыполнения, НомерСтроки)
	
	КонтекстСтроки = Новый Структура;
	
	КонтекстСтроки.Вставить("НомерСтроки", НомерСтроки);
	КонтекстСтроки.Вставить("НаименованиеСтроки", "Расчеты с покупателями и заказчиками");
	
	СчетаРасчетов = "62.01, 62.21, 62.31, 62.03, 76.06, 76.26, 76.36";
	СчетаРезервов = "63";
	СчетаПеревода = "76.06, 76.26, 76.36";
	
	СчетаГрафы04 = СчетаРасчетов;
	СчетаГрафы05 = СчетаРезервов;
	СчетаГрафы06 = СчетаРасчетов;
	СчетаГрафы08 = СчетаРасчетов;
	СчетаГрафы09 = СчетаРасчетов;
	СчетаГрафы10 = СчетаРезервов;
	СчетаГрафы12 = СчетаРасчетов;
	СчетаГрафы13 = СчетаРезервов;
	
	СчетаГрафы21 = СчетаПеревода;
	СчетаГрафы22 = СчетаПеревода;
	
	ПолныйСписокСчетов = СчетаРасчетов + ", " + СчетаРезервов;
	
	КонтекстСтроки.Вставить("СчетаГрафы04", СчетаГрафы04);
	КонтекстСтроки.Вставить("СчетаГрафы05", СчетаГрафы05);
	КонтекстСтроки.Вставить("СчетаГрафы06", СчетаГрафы06);
	КонтекстСтроки.Вставить("СчетаГрафы08", СчетаГрафы08);
	КонтекстСтроки.Вставить("СчетаГрафы09", СчетаГрафы09);
	КонтекстСтроки.Вставить("СчетаГрафы10", СчетаГрафы10);
	КонтекстСтроки.Вставить("СчетаГрафы12", СчетаГрафы12);
	КонтекстСтроки.Вставить("СчетаГрафы13", СчетаГрафы13);
	
	КонтекстСтроки.Вставить("СчетаГрафы21", СчетаГрафы21);
	КонтекстСтроки.Вставить("СчетаГрафы22", СчетаГрафы22);
	
	КонтекстСтроки.Вставить("ПолныйСписокСчетов", ПолныйСписокСчетов);
	
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения51_Долгосрочная(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5503и5523(КонтекстВыполнения, НомерСтроки)
	
	Если КонтекстВыполнения.КонтекстРаздела.РазделятьАвансыПоВидамАктивов Тогда
		// Строка не заполняется, если в учетной политике авансы, выданные поставщикам,
		// отражаются в балансе отдельными строками по видам активов.
		Возврат;
	КонецЕсли;
	
	КонтекстСтроки = Новый Структура;
	
	КонтекстСтроки.Вставить("НомерСтроки", НомерСтроки);
	КонтекстСтроки.Вставить("НаименованиеСтроки", "Авансы выданные");
	
	СчетаАвансов = "60.02, 60.22, 60.32";
	СчетаРезервов = "63";
	СчетаПеревода = "";
	СчетаНДСАвансов = "76.ВА";
	
	СчетаГрафы04 = СчетаАвансов;
	СчетаГрафы05 = СчетаРезервов;
	СчетаГрафы06 = СчетаАвансов;
	СчетаГрафы08 = СчетаАвансов;
	СчетаГрафы09 = СчетаАвансов;
	СчетаГрафы10 = СчетаРезервов;
	СчетаГрафы12 = СчетаАвансов;
	СчетаГрафы13 = СчетаРезервов;
	
	СчетаГрафы21 = СчетаПеревода;
	СчетаГрафы22 = СчетаПеревода;
	
	ПолныйСписокСчетов = СчетаАвансов + ", " + СчетаНДСАвансов + ", " + СчетаРезервов;
	
	КонтекстСтроки.Вставить("СчетаГрафы04", СчетаГрафы04);
	КонтекстСтроки.Вставить("СчетаГрафы05", СчетаГрафы05);
	КонтекстСтроки.Вставить("СчетаГрафы06", СчетаГрафы06);
	КонтекстСтроки.Вставить("СчетаГрафы08", СчетаГрафы08);
	КонтекстСтроки.Вставить("СчетаГрафы09", СчетаГрафы09);
	КонтекстСтроки.Вставить("СчетаГрафы10", СчетаГрафы10);
	КонтекстСтроки.Вставить("СчетаГрафы12", СчетаГрафы12);
	КонтекстСтроки.Вставить("СчетаГрафы13", СчетаГрафы13);
	
	КонтекстСтроки.Вставить("СчетаГрафы21", СчетаГрафы21);
	КонтекстСтроки.Вставить("СчетаГрафы22", СчетаГрафы22);
	
	КонтекстСтроки.Вставить("СчетаНДСАвансов", СчетаНДСАвансов);
	
	КонтекстСтроки.Вставить("ПолныйСписокСчетов", ПолныйСписокСчетов);
	
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения51_Долгосрочная(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5504и5524(КонтекстВыполнения, НомерСтроки)
	
	КонтекстСтроки = Новый Структура;
	
	КонтекстСтроки.Вставить("НомерСтроки", НомерСтроки);
	КонтекстСтроки.Вставить("НаименованиеСтроки", "Прочая");
	
	СчетаПрочие = "76.05, 76.25, 76.35, 76.09, 76.29, 76.39, 76.07.2, 76.27.2, 76.37.2, 76.07.9, 76.37.9, 76.13";
	СчетаРезервов = "63";
	СчетаПеревода = "76.05, 76.25, 76.35, 76.09, 76.29, 76.39, 76.07.2, 76.27.2, 76.37.2";
	
	ПрименяетсяФСБУ25 = ЗаполнениеБухгалтерскойОтчетности.ПрименяетсяФСБУ25(КонтекстВыполнения.Организация,
		ПривестиКДате(КонтекстВыполнения.КонтекстРаздела.ДатаКонцаПериодаОтчета));
	Если ПрименяетсяФСБУ25 Тогда
		СчетаПрочие = СтрЗаменить(СчетаПрочие, ", 76.07.9", "");
		СчетаПрочие = СтрЗаменить(СчетаПрочие, ", 76.37.9", "");
	КонецЕсли;
	
	СчетаГрафы04 = СчетаПрочие;
	СчетаГрафы05 = СчетаРезервов;
	СчетаГрафы06 = СчетаПрочие;
	СчетаГрафы08 = СчетаПрочие;
	СчетаГрафы09 = СчетаПеревода + ", 76.13";
	СчетаГрафы10 = СчетаРезервов;
	СчетаГрафы12 = СчетаПрочие;
	СчетаГрафы13 = СчетаРезервов;
	
	СчетаГрафы21 = СчетаПеревода;
	СчетаГрафы22 = СчетаПеревода;
	
	ПолныйСписокСчетов = СчетаПрочие + ", " + СчетаРезервов;
	
	КонтекстСтроки.Вставить("СчетаГрафы04", СчетаГрафы04);
	КонтекстСтроки.Вставить("СчетаГрафы05", СчетаГрафы05);
	КонтекстСтроки.Вставить("СчетаГрафы06", СчетаГрафы06);
	КонтекстСтроки.Вставить("СчетаГрафы08", СчетаГрафы08);
	КонтекстСтроки.Вставить("СчетаГрафы09", СчетаГрафы09);
	КонтекстСтроки.Вставить("СчетаГрафы10", СчетаГрафы10);
	КонтекстСтроки.Вставить("СчетаГрафы12", СчетаГрафы12);
	КонтекстСтроки.Вставить("СчетаГрафы13", СчетаГрафы13);
	
	КонтекстСтроки.Вставить("СчетаГрафы21", СчетаГрафы21);
	КонтекстСтроки.Вставить("СчетаГрафы22", СчетаГрафы22);
	
	КонтекстСтроки.Вставить("ПолныйСписокСчетов", ПолныйСписокСчетов);
	
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения51_Долгосрочная(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения51_Долгосрочная(КонтекстВыполнения)
	
	Организация = КонтекстВыполнения.Организация;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	КонтекстРаздела = КонтекстВыполнения.КонтекстРаздела;
	КонтекстСтроки = КонтекстВыполнения.КонтекстСтроки;
	
	ИмяРаздела = "Пояснения5";
	ДополнительныеПараметрыРасшифровки = Новый Структура("Организация", Организация);
	
	ЗаголовкиГраф = КонтекстРаздела.ЗаголовкиГраф51;
	НачалоПериода = КонтекстРаздела.ДатаНачалаПериодаОтчета;
	КонецПериода  = КонтекстРаздела.ДатаКонцаПериодаОтчета;
	
	НомерСтроки        = КонтекстСтроки.НомерСтроки;
	НаименованиеСтроки = КонтекстСтроки.НаименованиеСтроки;
	ПолныйСписокСчетов = КонтекстСтроки.ПолныйСписокСчетов;
	
	ПараметрыОбработкиСчетов = ПараметрыОбработкиСчетов();
	ПараметрыОбработкиСчетов.РазделятьАвансыПоВидамАктивов = КонтекстРаздела.РазделятьАвансыПоВидамАктивов;
	ПараметрыОбработкиСчетов.ПрименяетсяФСБУ25 = КонтекстРаздела.ПрименяетсяФСБУ25;
	
	ОбработкаСчетов = ПорядокОбработкиСчетов(ПолныйСписокСчетов, ПараметрыОбработкиСчетов);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("КороткийСрок", 365);
	
	Запрос.УстановитьПараметр("СчетаГрафы04", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы04"));
	Запрос.УстановитьПараметр("СчетаГрафы05", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы05"));
	Запрос.УстановитьПараметр("СчетаГрафы06", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы06"));
	Запрос.УстановитьПараметр("СчетаГрафы08", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы08"));
	Запрос.УстановитьПараметр("СчетаГрафы09", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы09"));
	Запрос.УстановитьПараметр("СчетаГрафы10", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы10"));
	Запрос.УстановитьПараметр("СчетаГрафы12", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы12"));
	Запрос.УстановитьПараметр("СчетаГрафы13", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы13"));
	
	Запрос.УстановитьПараметр("СчетаГрафы21", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы21"));
	Запрос.УстановитьПараметр("СчетаГрафы22", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы22"));
	
	Запрос.УстановитьПараметр("СчетаНДСАвансов", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаНДСАвансов"));
	
	Запрос.УстановитьПараметр("СчетаСписанияНаФинансовыйРезультат", СчетаИзСписка(КонтекстСтроки, "СчетаГрафы09"));
	
	Для Каждого СпособОбработки Из ОбработкаСчетов Цикл
		Запрос.УстановитьПараметр(СпособОбработки.Ключ, СпособОбработки.Значение);
	КонецЦикла;
	
	СубконтоКонтрагентыДоговоры = Новый Массив;
	СубконтоКонтрагентыДоговоры.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	СубконтоКонтрагентыДоговоры.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	Запрос.УстановитьПараметр("СубконтоКонтрагентыДоговоры", СубконтоКонтрагентыДоговоры);
	
	СубконтоКонтрагентыСФПолученные = Новый Массив;
	СубконтоКонтрагентыСФПолученные.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	СубконтоКонтрагентыСФПолученные.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СФПолученные);
	Запрос.УстановитьПараметр("СубконтоКонтрагентыСФПолученные", СубконтоКонтрагентыСФПолученные);
	
	СубконтоПрочиеДоходыРасходы = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы;
	Запрос.УстановитьПараметр("СубконтоПрочиеДоходыРасходы", СубконтоПрочиеДоходыРасходы);
	
	Запрос.УстановитьПараметр("Счет_91_02", Счет("91.02"));
	ВидПДРСписание = Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности;
	Запрос.УстановитьПараметр("ВидПДРСписание", ВидПДРСписание);
	
	УстановитьПолныйТекстЗапроса(Запрос, ТекстЗапросаПояснения51_Долгосрочная(), "СФПолученные");
	Запрос.Выполнить();
	
	ПараметрыРасшифровки = Новый Структура;
	ПараметрыРасшифровки.Вставить("ИмяОтчета", ИмяРаздела);
	ПараметрыРасшифровки.Вставить("ДатаНачалаПериодаОтчета", НачалоПериода);
	ПараметрыРасшифровки.Вставить("ДатаКонцаПериодаОтчета", КонецПериода);
	
	Графа = "04";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа04.Счет,
	               |	ВТ_Графа04.Значение
	               |ИЗ
	               |	ВТ_Графа04 КАК ВТ_Графа04";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на начало периода по дебету счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты более 365 дней";
		ИначеЕсли ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на начало периода по дебету счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты более 365 дней";
		ИначеЕсли ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на начало периода по дебету счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты более 365 дней";
		Иначе
			ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа04_НДС.Счет,
	               |	ВТ_Графа04_НДС.Значение
	               |ИЗ
	               |	ВТ_Графа04_НДС КАК ВТ_Графа04_НДС";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаименованиеСтрокиРасшифровки = "";
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		НаименованиеСоставляющей = "Сальдо на начало периода по кредиту счета " + СчетСоставляющей.Код + " по контрагентам и счетам-фактурам полученным по договорам со сроком оплаты более 365 дней";
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"-", НаименованиеСоставляющей,
			-ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя - ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	Графа = "12";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа12.Счет,
	               |	ВТ_Графа12.Значение
	               |ИЗ
	               |	ВТ_Графа12 КАК ВТ_Графа12";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на конец периода по дебету счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты более 365 дней";
		ИначеЕсли ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на конец периода по дебету счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты более 365 дней";
		ИначеЕсли ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на конец периода по дебету счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты более 365 дней";
		Иначе
			ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа12_НДС.Счет,
	               |	ВТ_Графа12_НДС.Значение
	               |ИЗ
	               |	ВТ_Графа12_НДС КАК ВТ_Графа12_НДС";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаименованиеСтрокиРасшифровки = "";
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		НаименованиеСоставляющей = "Сальдо на конец периода по кредиту счета " + СчетСоставляющей.Код + " по контрагентам и счетам-фактурам полученным по договорам со сроком оплаты более 365 дней";
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"-", НаименованиеСоставляющей,
			-ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя - ЗначениеСоставляющей;
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	Графа = "06";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа06.Счет,
	               |	ВТ_Графа06.ДО,
	               |	ВТ_Графа06.Дельта
	               |ИЗ
	               |	ВТ_Графа06 КАК ВТ_Графа06";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.ДО;
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по дебету счета " + СчетСоставляющей.Код + ", отражаемые в дебиторской задолженности, по контрагентам и договорам со сроком оплаты более 365 дней";
		ИначеЕсли ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено  Тогда
			НаименованиеСоставляющей = "Обороты по дебету счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты более 365 дней";
		Иначе
			ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
		ЗначениеСоставляющей = Выборка.Дельта;
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по кредиту счета " + СчетСоставляющей.Код + " по объектам отраженным в дебетовых оборотах в пределах суммы дебетового оборота";
		Иначе
			ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"-", НаименованиеСоставляющей,
			-ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя - ЗначениеСоставляющей;
		
	КонецЦикла;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа06_НДС.Счет,
	               |	ВТ_Графа06_НДС.КО,
	               |	ВТ_Графа06_НДС.Дельта
	               |ИЗ
	               |	ВТ_Графа06_НДС КАК ВТ_Графа06_НДС";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаименованиеСтрокиРасшифровки = "";
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.КО;
		
		НаименованиеСоставляющей = "Обороты по кредиту счета " + СчетСоставляющей.Код + " по контрагентам и счетам-фактурам по договорам со сроком оплаты более 365 дней";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"-", НаименованиеСоставляющей,
			-ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя - ЗначениеСоставляющей;
		
		ЗначениеСоставляющей = Выборка.Дельта;
		
		НаименованиеСоставляющей = "Обороты по дебету счета " + СчетСоставляющей.Код + " по объектам отраженным в кредитовых оборотах в пределах суммы кредитового оборота";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	Графа = "08";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа08.Счет,
	               |	ВТ_Графа08.КО,
	               |	ВТ_Графа08.Дельта
	               |ИЗ
	               |	ВТ_Графа08 КАК ВТ_Графа08";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.КО;
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по кредиту счета " + СчетСоставляющей.Код + ", отражаемые в дебиторской задолженности, по контрагентам и договорам со сроком оплаты более 365 дней";
		ИначеЕсли ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по кредиту счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты более 365 дней";
		Иначе
			ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
		ЗначениеСоставляющей = Выборка.Дельта;
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по кредиту счета " + СчетСоставляющей.Код + " отраженные в графе """ + ЗаголовкиГраф["06"]+ """";
		Иначе
			ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"-", НаименованиеСоставляющей,
			-ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя - ЗначениеСоставляющей;
		
	КонецЦикла;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа08_НДС.Счет,
	               |	ВТ_Графа08_НДС.ДО,
	               |	ВТ_Графа08_НДС.Дельта
	               |ИЗ
	               |	ВТ_Графа08_НДС КАК ВТ_Графа08_НДС";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаименованиеСтрокиРасшифровки = "";
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.ДО;
		
		НаименованиеСоставляющей = "Обороты по дебету счета " + СчетСоставляющей.Код + " по контрагентам и счетам-фактурам по договорам со сроком оплаты более 365 дней";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"-", НаименованиеСоставляющей,
			-ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя - ЗначениеСоставляющей;
		
		ЗначениеСоставляющей = Выборка.Дельта;
		
		НаименованиеСоставляющей = "Обороты по дебету счета " + СчетСоставляющей.Код + " отраженные в графе """ + ЗаголовкиГраф["06"]+ """";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа09.СчетДт,
	               |	ВТ_Графа09.СчетКт,
	               |	ВТ_Графа09.Значение
	               |ИЗ
	               |	ВТ_Графа09 КАК ВТ_Графа09";
	
	Выборка = Запрос.Выполнить().Выбрать();
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющейДт = Выборка.СчетДт;
		СчетСоставляющейКт = Выборка.СчетКт;
		ЗначениеСоставляющей = Выборка.Значение;
		
		НаименованиеСоставляющей = "Оборот с кредита счета " + СчетСоставляющейКт.Код + " по контрагентам и договорам со сроком оплаты более 365 дней в дебет счета "
		                         + СчетСоставляющейДт.Код + " по статьям субконто """ + СубконтоПрочиеДоходыРасходы
		                         + """ с видом """ + ВидПДРСписание + """";
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"-", НаименованиеСоставляющей,
			-ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя - ЗначениеСоставляющей;
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // Вычитаемый
	
	Графа = "09";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	
	ЗначениеПоказателя = 0;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа09.СчетДт,
	               |	ВТ_Графа09.СчетКт,
	               |	ВТ_Графа09.Значение
	               |ИЗ
	               |	ВТ_Графа09 КАК ВТ_Графа09";
	
	Выборка = Запрос.Выполнить().Выбрать();
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющейДт = Выборка.СчетДт;
		СчетСоставляющейКт = Выборка.СчетКт;
		ЗначениеСоставляющей = Выборка.Значение;
		
		НаименованиеСоставляющей = "Оборот с кредита счета " + СчетСоставляющейКт.Код + " по контрагентам и договорам со сроком оплаты более 365 дней в дебет счета "
		                         + СчетСоставляющейДт.Код + " по статьям субконто """ + СубконтоПрочиеДоходыРасходы
		                         + """ с видом """ + ВидПДРСписание + """";
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
	
	Графа = "21";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа21.Счет,
	               |	ВТ_Графа21.Значение
	               |ИЗ
	               |	ВТ_Графа21 КАК ВТ_Графа21";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		НаименованиеСоставляющей = "Переведено из дебиторской в кредиторскую задолженность по счету " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты более 365 дней";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	Графа = "22";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа22.Счет,
	               |	ВТ_Графа22.Значение
	               |ИЗ
	               |	ВТ_Графа22 КАК ВТ_Графа22";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		НаименованиеСоставляющей = "Переведено из кредиторской в дебиторскую задолженность по счету " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты более 365 дней";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	Графа = "05";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа05.Счет,
	               |	ВТ_Графа05.Значение
	               |ИЗ
	               |	ВТ_Графа05 КАК ВТ_Графа05";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		НаименованиеСоставляющей = "Сальдо на начало периода по кредиту счета " + СчетСоставляющей.Код + " по объектам отраженным в графе """ + ЗаголовкиГраф["04"]+ """";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
	
	Графа = "13";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа13.Счет,
	               |	ВТ_Графа13.Значение
	               |ИЗ
	               |	ВТ_Графа13 КАК ВТ_Графа13";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		НаименованиеСоставляющей = "Сальдо на конец периода по кредиту счета " + СчетСоставляющей.Код + " по объектам отраженным в графе """ + ЗаголовкиГраф["12"]+ """";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
	
	Графа = "10";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа10.Счет,
	               |	ВТ_Графа10.Значение
	               |ИЗ
	               |	ВТ_Графа10 КАК ВТ_Графа10";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		НаименованиеСоставляющей = "Обороты по дебету счета " + СчетСоставляющей.Код + " по объектам отраженным в графах """ + ЗаголовкиГраф["08"]+ """ и """ + ЗаголовкиГраф["09"]+ """";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
	
КонецПроцедуры

Функция ТекстЗапросаПояснения51_Долгосрочная() Экспорт
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	СчетаГрафы04.Счет КАК Счет
	               |ПОМЕСТИТЬ ВТ_СчетаГрафы04
	               |ИЗ
	               |	&СчетаГрафы04 КАК СчетаГрафы04
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СчетаГрафы05.Счет КАК Счет
	               |ПОМЕСТИТЬ ВТ_СчетаГрафы05
	               |ИЗ
	               |	&СчетаГрафы05 КАК СчетаГрафы05
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СчетаГрафы06.Счет КАК Счет
	               |ПОМЕСТИТЬ ВТ_СчетаГрафы06
	               |ИЗ
	               |	&СчетаГрафы06 КАК СчетаГрафы06
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СчетаГрафы08.Счет КАК Счет
	               |ПОМЕСТИТЬ ВТ_СчетаГрафы08
	               |ИЗ
	               |	&СчетаГрафы08 КАК СчетаГрафы08
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СчетаГрафы09.Счет КАК Счет
	               |ПОМЕСТИТЬ ВТ_СчетаГрафы09
	               |ИЗ
	               |	&СчетаГрафы09 КАК СчетаГрафы09
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СчетаГрафы10.Счет КАК Счет
	               |ПОМЕСТИТЬ ВТ_СчетаГрафы10
	               |ИЗ
	               |	&СчетаГрафы10 КАК СчетаГрафы10
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СчетаГрафы12.Счет КАК Счет
	               |ПОМЕСТИТЬ ВТ_СчетаГрафы12
	               |ИЗ
	               |	&СчетаГрафы12 КАК СчетаГрафы12
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СчетаГрафы13.Счет КАК Счет
	               |ПОМЕСТИТЬ ВТ_СчетаГрафы13
	               |ИЗ
	               |	&СчетаГрафы13 КАК СчетаГрафы13
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СчетаГрафы21.Счет КАК Счет
	               |ПОМЕСТИТЬ ВТ_СчетаГрафы21
	               |ИЗ
	               |	&СчетаГрафы21 КАК СчетаГрафы21
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СчетаГрафы22.Счет КАК Счет
	               |ПОМЕСТИТЬ ВТ_СчетаГрафы22
	               |ИЗ
	               |	&СчетаГрафы22 КАК СчетаГрафы22
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СчетаНДСАвансов.Счет КАК Счет
	               |ПОМЕСТИТЬ ВТ_СчетаНДСАвансов
	               |ИЗ
	               |	&СчетаНДСАвансов КАК СчетаНДСАвансов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВЫРАЗИТЬ(ДоговорыКонтрагентов.Владелец КАК Справочник.Контрагенты) КАК Контрагент,
	               |	ВЫРАЗИТЬ(ДоговорыКонтрагентов.Ссылка КАК Справочник.ДоговорыКонтрагентов) КАК Договор
	               |ПОМЕСТИТЬ ВТ_ДолгосрочныеДоговоры
	               |ИЗ
	               |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	               |ГДЕ
	               |	ДоговорыКонтрагентов.УстановленСрокОплаты
	               |	И ДоговорыКонтрагентов.СрокОплаты > &КороткийСрок
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Контрагент,
	               |	Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СНД,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт КАК СНК,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СКД,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СКК,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
	               |				И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
	               |						И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
	               |					ТОГДА ЛОЖЬ
	               |				ИНАЧЕ ВЫБОР
	               |						КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
	               |								ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
	               |							ТОГДА ИСТИНА
	               |						ИНАЧЕ ВЫБОР
	               |								КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
	               |										ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
	               |									ТОГДА ЛОЖЬ
	               |								ИНАЧЕ ИСТИНА
	               |							КОНЕЦ
	               |					КОНЕЦ
	               |			КОНЕЦ
	               |	КОНЕЦ КАК ОтражатьВДебиторской,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
	               |				И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
	               |			ТОГДА ВЫБОР
	               |					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |						ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |					ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |				КОНЕЦ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
	               |						И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
	               |					ТОГДА ВЫБОР
	               |							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |								ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |							ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |						КОНЕЦ
	               |				ИНАЧЕ 0
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Дельта,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт <> 0
	               |				И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт <> 0
	               |			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ПереводДвК,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт <> 0
	               |				И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт <> 0
	               |			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ПереводКвД
	               |ПОМЕСТИТЬ ВТ_ВсеДанныеАПСчетовПоСрочности
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&АПСчетаПоСрочности), &СубконтоКонтрагентыДоговоры, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Контрагент,
	               |	Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВсеДанныеАПСчетовПоСрочности.Счет КАК Счет,
	               |	ВТ_ВсеДанныеАПСчетовПоСрочности.Контрагент КАК Контрагент,
	               |	ВТ_ВсеДанныеАПСчетовПоСрочности.Договор КАК Договор,
	               |	ВТ_ВсеДанныеАПСчетовПоСрочности.СНД КАК СНД,
	               |	ВТ_ВсеДанныеАПСчетовПоСрочности.СНК КАК СНК,
	               |	ВЫБОР
	               |		КОГДА ВТ_ВсеДанныеАПСчетовПоСрочности.ОтражатьВДебиторской
	               |			ТОГДА ВТ_ВсеДанныеАПСчетовПоСрочности.ДО
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ДО,
	               |	ВЫБОР
	               |		КОГДА ВТ_ВсеДанныеАПСчетовПоСрочности.ОтражатьВДебиторской
	               |			ТОГДА ВТ_ВсеДанныеАПСчетовПоСрочности.КО
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК КО,
	               |	ВТ_ВсеДанныеАПСчетовПоСрочности.СКД КАК СКД,
	               |	ВТ_ВсеДанныеАПСчетовПоСрочности.СКК КАК СКК,
	               |	ВЫБОР
	               |		КОГДА ВТ_ВсеДанныеАПСчетовПоСрочности.ОтражатьВДебиторской
	               |			ТОГДА ВТ_ВсеДанныеАПСчетовПоСрочности.Дельта
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Дельта,
	               |	ВТ_ВсеДанныеАПСчетовПоСрочности.ПереводДвК КАК ПереводДвК,
	               |	ВТ_ВсеДанныеАПСчетовПоСрочности.ПереводКвД КАК ПереводКвД
	               |ПОМЕСТИТЬ ВТ_ДанныеАПСчетовПоСрочности
	               |ИЗ
	               |	ВТ_ДолгосрочныеДоговоры КАК ВТ_ДолгосрочныеДоговоры
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВсеДанныеАПСчетовПоСрочности КАК ВТ_ВсеДанныеАПСчетовПоСрочности
	               |		ПО ВТ_ДолгосрочныеДоговоры.Контрагент = ВТ_ВсеДанныеАПСчетовПоСрочности.Контрагент
	               |			И ВТ_ДолгосрочныеДоговоры.Договор = ВТ_ВсеДанныеАПСчетовПоСрочности.Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СНД,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СКД,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
	               |				И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
	               |			ТОГДА ВЫБОР
	               |					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |						ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |					ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |				КОНЕЦ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
	               |						И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
	               |					ТОГДА ВЫБОР
	               |							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |								ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |							ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |						КОНЕЦ
	               |				ИНАЧЕ 0
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Дельта
	               |ПОМЕСТИТЬ ВТ_ВсеДанныеОсобыхСчетовПоСрочности
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&ОсобыеСчетаПоСрочности), &СубконтоКонтрагентыДоговоры, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Контрагент,
	               |	Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.Счет КАК Счет,
	               |	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.Контрагент КАК Контрагент,
	               |	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.Договор КАК Договор,
	               |	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.СНД КАК СНД,
	               |	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.ДО КАК ДО,
	               |	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.КО КАК КО,
	               |	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.СКД КАК СКД,
	               |	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.Дельта КАК Дельта
	               |ПОМЕСТИТЬ ВТ_ДанныеОсобыхСчетовПоСрочности
	               |ИЗ
	               |	ВТ_ДолгосрочныеДоговоры КАК ВТ_ДолгосрочныеДоговоры
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВсеДанныеОсобыхСчетовПоСрочности КАК ВТ_ВсеДанныеОсобыхСчетовПоСрочности
	               |		ПО ВТ_ДолгосрочныеДоговоры.Контрагент = ВТ_ВсеДанныеОсобыхСчетовПоСрочности.Контрагент
	               |			И ВТ_ДолгосрочныеДоговоры.Договор = ВТ_ВсеДанныеОсобыхСчетовПоСрочности.Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СНД,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СКД,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
	               |				И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
	               |			ТОГДА ВЫБОР
	               |					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |						ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |					ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |				КОНЕЦ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
	               |						И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
	               |					ТОГДА ВЫБОР
	               |							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |								ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |							ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |						КОНЕЦ
	               |				ИНАЧЕ 0
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Дельта
	               |ПОМЕСТИТЬ ВТ_ВсеДанныеСчетовПоСрочности
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаПоСрочности), &СубконтоКонтрагентыДоговоры, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Контрагент,
	               |	Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВсеДанныеСчетовПоСрочности.Счет КАК Счет,
	               |	ВТ_ВсеДанныеСчетовПоСрочности.Контрагент КАК Контрагент,
	               |	ВТ_ВсеДанныеСчетовПоСрочности.Договор КАК Договор,
	               |	ВТ_ВсеДанныеСчетовПоСрочности.СНД КАК СНД,
	               |	ВТ_ВсеДанныеСчетовПоСрочности.ДО КАК ДО,
	               |	ВТ_ВсеДанныеСчетовПоСрочности.КО КАК КО,
	               |	ВТ_ВсеДанныеСчетовПоСрочности.СКД КАК СКД,
	               |	ВТ_ВсеДанныеСчетовПоСрочности.Дельта КАК Дельта
	               |ПОМЕСТИТЬ ВТ_ДанныеСчетовПоСрочности
	               |ИЗ
	               |	ВТ_ДолгосрочныеДоговоры КАК ВТ_ДолгосрочныеДоговоры
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВсеДанныеСчетовПоСрочности КАК ВТ_ВсеДанныеСчетовПоСрочности
	               |		ПО ВТ_ДолгосрочныеДоговоры.Контрагент = ВТ_ВсеДанныеСчетовПоСрочности.Контрагент
	               |			И ВТ_ДолгосрочныеДоговоры.Договор = ВТ_ВсеДанныеСчетовПоСрочности.Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗНАЧЕНИЕ(документ.ДокументРасчетовСКонтрагентом.ПустаяСсылка) КАК СФПолученный,
	               |	ЗНАЧЕНИЕ(справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	               |	ЗНАЧЕНИЕ(справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор
	               |ПОМЕСТИТЬ ВТ_ВсеСФПолученные
	               |ГДЕ
	               |	ЛОЖЬ
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Контрагент,
	               |	Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВсеСФПолученные.СФПолученный КАК СФПолученный
	               |ПОМЕСТИТЬ ВТ_СФПолученные
	               |ИЗ
	               |	ВТ_ДолгосрочныеДоговоры КАК ВТ_ДолгосрочныеДоговоры
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВсеСФПолученные КАК ВТ_ВсеСФПолученные
	               |		ПО ВТ_ДолгосрочныеДоговоры.Контрагент = ВТ_ВсеСФПолученные.Контрагент
	               |			И ВТ_ДолгосрочныеДоговоры.Договор = ВТ_ВсеСФПолученные.Договор
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	СФПолученный
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
	               |	ХозрасчетныйОстаткиИОбороты.Субконто2 КАК СФПолученный,
	               |	-1 * ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СНК,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
	               |	-1 * ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СКК,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
	               |				И ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
	               |			ТОГДА ВЫБОР
	               |					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |						ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |					ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |				КОНЕЦ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
	               |						И ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
	               |					ТОГДА ВЫБОР
	               |							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |								ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |							ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |						КОНЕЦ
	               |				ИНАЧЕ 0
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Дельта
	               |ПОМЕСТИТЬ ВТ_ВсеДанныеНДСАвансов
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаПоНДСАвансов), &СубконтоКонтрагентыСФПолученные, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	СФПолученный
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВсеДанныеНДСАвансов.Счет КАК Счет,
	               |	СУММА(ВТ_ВсеДанныеНДСАвансов.СНК) КАК СНК,
	               |	СУММА(ВТ_ВсеДанныеНДСАвансов.ДО) КАК ДО,
	               |	СУММА(ВТ_ВсеДанныеНДСАвансов.КО) КАК КО,
	               |	СУММА(ВТ_ВсеДанныеНДСАвансов.СКК) КАК СКК,
	               |	СУММА(ВТ_ВсеДанныеНДСАвансов.Дельта) КАК Дельта
	               |ПОМЕСТИТЬ ВТ_ДанныеНДСАвансов
	               |ИЗ
	               |	ВТ_СФПолученные КАК ВТ_СФПолученные
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВсеДанныеНДСАвансов КАК ВТ_ВсеДанныеНДСАвансов
	               |		ПО ВТ_СФПолученные.СФПолученный = ВТ_ВсеДанныеНДСАвансов.СФПолученный
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ВсеДанныеНДСАвансов.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
	               |	-1 * ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СНК,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
	               |	-1 * ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СКК
	               |ПОМЕСТИТЬ ВТ_ВсеДанныеРезервов
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаПоРезервам), &СубконтоКонтрагентыДоговоры, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Контрагент,
	               |	Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
	               |	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.Контрагенты) КАК Контрагент,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот КАК ОБ
	               |ПОМЕСТИТЬ ВТ_ВсеДанныеСписанияЗадолженности
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			Период,
	               |			СчетДт = &Счет_91_02,
	               |			&СубконтоПрочиеДоходыРасходы,
	               |			СчетКт В (&СчетаСписанияНаФинансовыйРезультат),
	               |			&СубконтоКонтрагентыДоговоры,
	               |			Организация = &Организация
	               |				И СубконтоДт1.ВидПрочихДоходовИРасходов = &ВидПДРСписание) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Контрагент,
	               |	Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВсеДанныеСписанияЗадолженности.СчетДт КАК СчетДт,
	               |	ВТ_ВсеДанныеСписанияЗадолженности.СчетКт КАК СчетКт,
	               |	ВТ_ВсеДанныеСписанияЗадолженности.Контрагент КАК Контрагент,
	               |	ВТ_ВсеДанныеСписанияЗадолженности.Договор КАК Договор,
	               |	ВТ_ВсеДанныеСписанияЗадолженности.ОБ КАК ОБ
	               |ПОМЕСТИТЬ ВТ_ДанныеСписанияЗадолженности
	               |ИЗ
	               |	ВТ_ДолгосрочныеДоговоры КАК ВТ_ДолгосрочныеДоговоры
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВсеДанныеСписанияЗадолженности КАК ВТ_ВсеДанныеСписанияЗадолженности
	               |		ПО ВТ_ДолгосрочныеДоговоры.Контрагент = ВТ_ВсеДанныеСписанияЗадолженности.Контрагент
	               |			И ВТ_ДолгосрочныеДоговоры.Договор = ВТ_ВсеДанныеСписанияЗадолженности.Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъединениеДанных.Счет КАК Счет,
	               |	ОбъединениеДанных.Контрагент КАК Контрагент,
	               |	ОбъединениеДанных.Договор КАК Договор,
	               |	ОбъединениеДанных.СНД КАК СНД
	               |ПОМЕСТИТЬ ВТ_Графа04_Все
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВТ_ДанныеАПСчетовПоСрочности.Счет КАК Счет,
	               |		ВТ_ДанныеАПСчетовПоСрочности.Контрагент КАК Контрагент,
	               |		ВТ_ДанныеАПСчетовПоСрочности.Договор КАК Договор,
	               |		ВТ_ДанныеАПСчетовПоСрочности.СНД КАК СНД
	               |	ИЗ
	               |		ВТ_ДанныеАПСчетовПоСрочности КАК ВТ_ДанныеАПСчетовПоСрочности
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.Счет,
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.Контрагент,
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.Договор,
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.СНД
	               |	ИЗ
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности КАК ВТ_ДанныеОсобыхСчетовПоСрочности
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовПоСрочности.Счет,
	               |		ВТ_ДанныеСчетовПоСрочности.Контрагент,
	               |		ВТ_ДанныеСчетовПоСрочности.Договор,
	               |		ВТ_ДанныеСчетовПоСрочности.СНД
	               |	ИЗ
	               |		ВТ_ДанныеСчетовПоСрочности КАК ВТ_ДанныеСчетовПоСрочности) КАК ОбъединениеДанных
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Графа04_Все.Счет КАК Счет,
	               |	СУММА(ВТ_Графа04_Все.СНД) КАК СНД
	               |ПОМЕСТИТЬ ВТ_Графа04_Итог
	               |ИЗ
	               |	ВТ_Графа04_Все КАК ВТ_Графа04_Все
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_Графа04_Все.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаГрафы04.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_Графа04_Итог.СНД, 0) КАК Значение
	               |ПОМЕСТИТЬ ВТ_Графа04
	               |ИЗ
	               |	ВТ_СчетаГрафы04 КАК ВТ_СчетаГрафы04
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа04_Итог КАК ВТ_Графа04_Итог
	               |		ПО ВТ_СчетаГрафы04.Счет = ВТ_Графа04_Итог.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаНДСАвансов.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_ДанныеНДСАвансов.СНК, 0) КАК Значение
	               |ПОМЕСТИТЬ ВТ_Графа04_НДС
	               |ИЗ
	               |	ВТ_СчетаНДСАвансов КАК ВТ_СчетаНДСАвансов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеНДСАвансов КАК ВТ_ДанныеНДСАвансов
	               |		ПО ВТ_СчетаНДСАвансов.Счет = ВТ_ДанныеНДСАвансов.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъединениеДанных.Счет КАК Счет,
	               |	ОбъединениеДанных.Контрагент КАК Контрагент,
	               |	ОбъединениеДанных.Договор КАК Договор,
	               |	ОбъединениеДанных.СКД КАК СКД
	               |ПОМЕСТИТЬ ВТ_Графа12_Все
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВТ_ДанныеАПСчетовПоСрочности.Счет КАК Счет,
	               |		ВТ_ДанныеАПСчетовПоСрочности.Контрагент КАК Контрагент,
	               |		ВТ_ДанныеАПСчетовПоСрочности.Договор КАК Договор,
	               |		ВТ_ДанныеАПСчетовПоСрочности.СКД КАК СКД
	               |	ИЗ
	               |		ВТ_ДанныеАПСчетовПоСрочности КАК ВТ_ДанныеАПСчетовПоСрочности
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.Счет,
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.Контрагент,
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.Договор,
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.СКД
	               |	ИЗ
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности КАК ВТ_ДанныеОсобыхСчетовПоСрочности
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовПоСрочности.Счет,
	               |		ВТ_ДанныеСчетовПоСрочности.Контрагент,
	               |		ВТ_ДанныеСчетовПоСрочности.Договор,
	               |		ВТ_ДанныеСчетовПоСрочности.СКД
	               |	ИЗ
	               |		ВТ_ДанныеСчетовПоСрочности КАК ВТ_ДанныеСчетовПоСрочности) КАК ОбъединениеДанных
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(ВТ_Графа12_Все.СКД) КАК СКД,
	               |	ВТ_Графа12_Все.Счет КАК Счет
	               |ПОМЕСТИТЬ ВТ_Графа12_Итог
	               |ИЗ
	               |	ВТ_Графа12_Все КАК ВТ_Графа12_Все
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_Графа12_Все.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаГрафы12.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_Графа12_Итог.СКД, 0) КАК Значение
	               |ПОМЕСТИТЬ ВТ_Графа12
	               |ИЗ
	               |	ВТ_СчетаГрафы12 КАК ВТ_СчетаГрафы12
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа12_Итог КАК ВТ_Графа12_Итог
	               |		ПО ВТ_СчетаГрафы12.Счет = ВТ_Графа12_Итог.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаНДСАвансов.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_ДанныеНДСАвансов.СКК, 0) КАК Значение
	               |ПОМЕСТИТЬ ВТ_Графа12_НДС
	               |ИЗ
	               |	ВТ_СчетаНДСАвансов КАК ВТ_СчетаНДСАвансов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеНДСАвансов КАК ВТ_ДанныеНДСАвансов
	               |		ПО ВТ_СчетаНДСАвансов.Счет = ВТ_ДанныеНДСАвансов.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъединениеДанных.Счет КАК Счет,
	               |	СУММА(ОбъединениеДанных.ДО) КАК ДО,
	               |	СУММА(ОбъединениеДанных.Дельта) КАК Дельта
	               |ПОМЕСТИТЬ ВТ_Графа06_Итог
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВТ_ДанныеАПСчетовПоСрочности.Счет КАК Счет,
	               |		ВТ_ДанныеАПСчетовПоСрочности.ДО КАК ДО,
	               |		ВТ_ДанныеАПСчетовПоСрочности.Дельта КАК Дельта
	               |	ИЗ
	               |		ВТ_ДанныеАПСчетовПоСрочности КАК ВТ_ДанныеАПСчетовПоСрочности
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.Счет,
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.ДО,
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.Дельта
	               |	ИЗ
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности КАК ВТ_ДанныеОсобыхСчетовПоСрочности
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовПоСрочности.Счет,
	               |		ВТ_ДанныеСчетовПоСрочности.ДО,
	               |		ВТ_ДанныеСчетовПоСрочности.Дельта
	               |	ИЗ
	               |		ВТ_ДанныеСчетовПоСрочности КАК ВТ_ДанныеСчетовПоСрочности) КАК ОбъединениеДанных
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъединениеДанных.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаГрафы06.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_Графа06_Итог.ДО, 0) КАК ДО,
	               |	ЕСТЬNULL(ВТ_Графа06_Итог.Дельта, 0) КАК Дельта
	               |ПОМЕСТИТЬ ВТ_Графа06
	               |ИЗ
	               |	ВТ_СчетаГрафы06 КАК ВТ_СчетаГрафы06
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа06_Итог КАК ВТ_Графа06_Итог
	               |		ПО ВТ_СчетаГрафы06.Счет = ВТ_Графа06_Итог.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаНДСАвансов.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_ДанныеНДСАвансов.КО, 0) КАК КО,
	               |	ЕСТЬNULL(ВТ_ДанныеНДСАвансов.Дельта, 0) КАК Дельта
	               |ПОМЕСТИТЬ ВТ_Графа06_НДС
	               |ИЗ
	               |	ВТ_СчетаНДСАвансов КАК ВТ_СчетаНДСАвансов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеНДСАвансов КАК ВТ_ДанныеНДСАвансов
	               |		ПО ВТ_СчетаНДСАвансов.Счет = ВТ_ДанныеНДСАвансов.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъединениеДанных.Счет КАК Счет,
	               |	ОбъединениеДанных.Контрагент КАК Контрагент,
	               |	ОбъединениеДанных.Договор КАК Договор,
	               |	ОбъединениеДанных.КО КАК КО,
	               |	ОбъединениеДанных.Дельта КАК Дельта
	               |ПОМЕСТИТЬ ВТ_Графа08_Все
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВТ_ДанныеАПСчетовПоСрочности.Счет КАК Счет,
	               |		ВТ_ДанныеАПСчетовПоСрочности.Контрагент КАК Контрагент,
	               |		ВТ_ДанныеАПСчетовПоСрочности.Договор КАК Договор,
	               |		ВТ_ДанныеАПСчетовПоСрочности.КО КАК КО,
	               |		ВТ_ДанныеАПСчетовПоСрочности.Дельта КАК Дельта
	               |	ИЗ
	               |		ВТ_ДанныеАПСчетовПоСрочности КАК ВТ_ДанныеАПСчетовПоСрочности
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.Счет,
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.Контрагент,
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.Договор,
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.КО,
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.Дельта
	               |	ИЗ
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности КАК ВТ_ДанныеОсобыхСчетовПоСрочности
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовПоСрочности.Счет,
	               |		ВТ_ДанныеСчетовПоСрочности.Контрагент,
	               |		ВТ_ДанныеСчетовПоСрочности.Договор,
	               |		ВТ_ДанныеСчетовПоСрочности.КО,
	               |		ВТ_ДанныеСчетовПоСрочности.Дельта
	               |	ИЗ
	               |		ВТ_ДанныеСчетовПоСрочности КАК ВТ_ДанныеСчетовПоСрочности) КАК ОбъединениеДанных
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Графа08_Все.Счет КАК Счет,
	               |	СУММА(ВТ_Графа08_Все.КО) КАК КО,
	               |	СУММА(ВТ_Графа08_Все.Дельта) КАК Дельта
	               |ПОМЕСТИТЬ ВТ_Графа08_Итог
	               |ИЗ
	               |	ВТ_Графа08_Все КАК ВТ_Графа08_Все
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_Графа08_Все.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаГрафы08.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_Графа08_Итог.КО, 0) КАК КО,
	               |	ЕСТЬNULL(ВТ_Графа08_Итог.Дельта, 0) КАК Дельта
	               |ПОМЕСТИТЬ ВТ_Графа08
	               |ИЗ
	               |	ВТ_СчетаГрафы08 КАК ВТ_СчетаГрафы08
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа08_Итог КАК ВТ_Графа08_Итог
	               |		ПО ВТ_СчетаГрафы08.Счет = ВТ_Графа08_Итог.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаНДСАвансов.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_ДанныеНДСАвансов.ДО, 0) КАК ДО,
	               |	ЕСТЬNULL(ВТ_ДанныеНДСАвансов.Дельта, 0) КАК Дельта
	               |ПОМЕСТИТЬ ВТ_Графа08_НДС
	               |ИЗ
	               |	ВТ_СчетаНДСАвансов КАК ВТ_СчетаНДСАвансов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеНДСАвансов КАК ВТ_ДанныеНДСАвансов
	               |		ПО ВТ_СчетаНДСАвансов.Счет = ВТ_ДанныеНДСАвансов.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ДанныеСписанияЗадолженности.СчетДт КАК СчетДт,
	               |	ВТ_ДанныеСписанияЗадолженности.СчетКт КАК СчетКт,
	               |	СУММА(ВТ_ДанныеСписанияЗадолженности.ОБ) КАК ОБ
	               |ПОМЕСТИТЬ ВТ_Графа09_Итог
	               |ИЗ
	               |	ВТ_ДанныеСписанияЗадолженности КАК ВТ_ДанныеСписанияЗадолженности
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ДанныеСписанияЗадолженности.СчетДт,
	               |	ВТ_ДанныеСписанияЗадолженности.СчетКт
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	&Счет_91_02 КАК СчетДт,
	               |	ВТ_СчетаГрафы09.Счет КАК СчетКт,
	               |	ЕСТЬNULL(ВТ_Графа09_Итог.ОБ, 0) КАК Значение
	               |ПОМЕСТИТЬ ВТ_Графа09
	               |ИЗ
	               |	ВТ_СчетаГрафы09 КАК ВТ_СчетаГрафы09
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа09_Итог КАК ВТ_Графа09_Итог
	               |		ПО ВТ_СчетаГрафы09.Счет = ВТ_Графа09_Итог.СчетКт
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъединениеДанных.Счет КАК Счет,
	               |	СУММА(ОбъединениеДанных.ПереводДвК) КАК Перевод
	               |ПОМЕСТИТЬ ВТ_Графа21_Итог
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВТ_ДанныеАПСчетовПоСрочности.Счет КАК Счет,
	               |		ВТ_ДанныеАПСчетовПоСрочности.ПереводДвК КАК ПереводДвК
	               |	ИЗ
	               |		ВТ_ДанныеАПСчетовПоСрочности КАК ВТ_ДанныеАПСчетовПоСрочности) КАК ОбъединениеДанных
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъединениеДанных.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаГрафы21.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_Графа21_Итог.Перевод, 0) КАК Значение
	               |ПОМЕСТИТЬ ВТ_Графа21
	               |ИЗ
	               |	ВТ_СчетаГрафы21 КАК ВТ_СчетаГрафы21
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа21_Итог КАК ВТ_Графа21_Итог
	               |		ПО ВТ_СчетаГрафы21.Счет = ВТ_Графа21_Итог.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъединениеДанных.Счет КАК Счет,
	               |	СУММА(ОбъединениеДанных.ПереводКвД) КАК Перевод
	               |ПОМЕСТИТЬ ВТ_Графа22_Итог
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВТ_ДанныеАПСчетовПоСрочности.Счет КАК Счет,
	               |		ВТ_ДанныеАПСчетовПоСрочности.ПереводКвД КАК ПереводКвД
	               |	ИЗ
	               |		ВТ_ДанныеАПСчетовПоСрочности КАК ВТ_ДанныеАПСчетовПоСрочности) КАК ОбъединениеДанных
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъединениеДанных.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаГрафы22.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_Графа22_Итог.Перевод, 0) КАК Значение
	               |ПОМЕСТИТЬ ВТ_Графа22
	               |ИЗ
	               |	ВТ_СчетаГрафы22 КАК ВТ_СчетаГрафы22
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа22_Итог КАК ВТ_Графа22_Итог
	               |		ПО ВТ_СчетаГрафы22.Счет = ВТ_Графа22_Итог.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Графа04_Все.Контрагент КАК Контрагент,
	               |	ВТ_Графа04_Все.Договор КАК Договор
	               |ПОМЕСТИТЬ ВТ_ОбъектыГрафы04
	               |ИЗ
	               |	ВТ_Графа04_Все КАК ВТ_Графа04_Все
	               |ГДЕ
	               |	ВТ_Графа04_Все.СНД <> 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_Графа04_Все.Контрагент,
	               |	ВТ_Графа04_Все.Договор
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Контрагент,
	               |	Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВсеДанныеРезервов.Счет КАК Счет,
	               |	СУММА(ВТ_ВсеДанныеРезервов.СНК) КАК СНК
	               |ПОМЕСТИТЬ ВТ_Графа05_Итог
	               |ИЗ
	               |	ВТ_ВсеДанныеРезервов КАК ВТ_ВсеДанныеРезервов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОбъектыГрафы04 КАК ВТ_ОбъектыГрафы04
	               |		ПО ВТ_ВсеДанныеРезервов.Контрагент = ВТ_ОбъектыГрафы04.Контрагент
	               |			И ВТ_ВсеДанныеРезервов.Договор = ВТ_ОбъектыГрафы04.Договор
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ВсеДанныеРезервов.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаГрафы05.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_Графа05_Итог.СНК, 0) КАК Значение
	               |ПОМЕСТИТЬ ВТ_Графа05
	               |ИЗ
	               |	ВТ_СчетаГрафы05 КАК ВТ_СчетаГрафы05
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа05_Итог КАК ВТ_Графа05_Итог
	               |		ПО ВТ_СчетаГрафы05.Счет = ВТ_Графа05_Итог.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Графа12_Все.Контрагент КАК Контрагент,
	               |	ВТ_Графа12_Все.Договор КАК Договор
	               |ПОМЕСТИТЬ ВТ_ОбъектыГрафы12
	               |ИЗ
	               |	ВТ_Графа12_Все КАК ВТ_Графа12_Все
	               |ГДЕ
	               |	ВТ_Графа12_Все.СКД <> 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_Графа12_Все.Контрагент,
	               |	ВТ_Графа12_Все.Договор
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Контрагент,
	               |	Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВсеДанныеРезервов.Счет КАК Счет,
	               |	СУММА(ВТ_ВсеДанныеРезервов.СКК) КАК СКК
	               |ПОМЕСТИТЬ ВТ_Графа13_Итог
	               |ИЗ
	               |	ВТ_ВсеДанныеРезервов КАК ВТ_ВсеДанныеРезервов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОбъектыГрафы12 КАК ВТ_ОбъектыГрафы12
	               |		ПО ВТ_ВсеДанныеРезервов.Контрагент = ВТ_ОбъектыГрафы12.Контрагент
	               |			И ВТ_ВсеДанныеРезервов.Договор = ВТ_ОбъектыГрафы12.Договор
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ВсеДанныеРезервов.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаГрафы13.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_Графа13_Итог.СКК, 0) КАК Значение
	               |ПОМЕСТИТЬ ВТ_Графа13
	               |ИЗ
	               |	ВТ_СчетаГрафы13 КАК ВТ_СчетаГрафы13
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа13_Итог КАК ВТ_Графа13_Итог
	               |		ПО ВТ_СчетаГрафы13.Счет = ВТ_Графа13_Итог.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъединениеДанных.Контрагент КАК Контрагент,
	               |	ОбъединениеДанных.Договор КАК Договор
	               |ПОМЕСТИТЬ ВТ_ОбъектыГраф0809
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВТ_Графа08_Все.Контрагент КАК Контрагент,
	               |		ВТ_Графа08_Все.Договор КАК Договор
	               |	ИЗ
	               |		ВТ_Графа08_Все КАК ВТ_Графа08_Все
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСписанияЗадолженности.Контрагент,
	               |		ВТ_ДанныеСписанияЗадолженности.Договор
	               |	ИЗ
	               |		ВТ_ДанныеСписанияЗадолженности КАК ВТ_ДанныеСписанияЗадолженности) КАК ОбъединениеДанных
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъединениеДанных.Контрагент,
	               |	ОбъединениеДанных.Договор
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Договор,
	               |	Контрагент
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВсеДанныеРезервов.Счет КАК Счет,
	               |	СУММА(ВТ_ВсеДанныеРезервов.ДО) КАК ДО
	               |ПОМЕСТИТЬ ВТ_Графа10_Итог
	               |ИЗ
	               |	ВТ_ВсеДанныеРезервов КАК ВТ_ВсеДанныеРезервов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОбъектыГраф0809 КАК ВТ_ОбъектыГраф0809
	               |		ПО ВТ_ВсеДанныеРезервов.Контрагент = ВТ_ОбъектыГраф0809.Контрагент
	               |			И ВТ_ВсеДанныеРезервов.Договор = ВТ_ОбъектыГраф0809.Договор
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ВсеДанныеРезервов.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаГрафы10.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_Графа10_Итог.ДО, 0) КАК Значение
	               |ПОМЕСТИТЬ ВТ_Графа10
	               |ИЗ
	               |	ВТ_СчетаГрафы10 КАК ВТ_СчетаГрафы10
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа10_Итог КАК ВТ_Графа10_Итог
	               |		ПО ВТ_СчетаГрафы10.Счет = ВТ_Графа10_Итог.Счет";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5510и5530(КонтекстВыполнения, НомерСтроки)
	
	С2018 = (ПривестиКДате(КонтекстВыполнения.КонтекстРаздела.ДатаКонцаПериодаОтчета) >= '2018-01-01');
	
	УчитыватьСчетаИП2015 = НЕ РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(КонтекстВыполнения.Организация)
	                     И КонтекстВыполнения.Свойство("КонецОтчетногоПериода")
	                     И КонтекстВыполнения.КонецОтчетногоПериода >= '2015-01-01';
	
	КонтекстСтроки = Новый Структура;
	
	КонтекстСтроки.Вставить("НомерСтроки", НомерСтроки);
	КонтекстСтроки.Вставить("НаименованиеСтроки", "Краткосрочная дебиторская задолженность - всего");
	
	СчетаРасчетов = "46, 62.01, 62.21, 62.31, 62.03, 76.06, 76.26, 76.36";
	СчетаАвансов  = "60.02, 60.22, 60.32";
	СчетаНДСАвансов = "76.ВА";
	СчетаПрочие   = "68.01.1, 68.01.2, 68.02, 68.03, 68.04.1, 68.06, 68.07, 68.08, 68.09, 68.10, 68.11, 68.12, 68.13, 68.22,
	                |69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7, 69.03.1, 69.03.2, 69.04, 69.05.1, 69.05.2,
	                |69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.11, 69.12, 69.13.1, 69.13.2, 70, 71.01, 71.21, 73.01, 73.02, 73.03,
	                |75.01, 76.01.1, 97.01, 97.02, 97.21, 76.01.2, 76.01.9, 76.21, 76.02, 76.22, 76.32, 76.03, 76.05, 76.25, 76.35, 76.09, 76.29, 76.39, 76.10, 76.49,
	                |76.41, 76.НА, 76.ОТ, 76.07.2, 76.27.2, 76.37.2, 76.07.9, 76.37.9, 76.13, 76.14";
	СчетаРезервов = "63";
	
	СчетаПеревода = "76.01.1, 76.06, 76.21, 76.26, 76.36, 68.01.1, 68.01.2, 68.02, 68.03, 68.04.1, 68.06, 68.07, 68.08, 68.09, 68.10, 68.11, 68.12, 68.13,
	                |69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7, 69.03.1, 69.03.2, 69.04, 69.05.1, 69.05.2,
	                |69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.11, 69.12, 69.13.1, 69.13.2, 70, 71.01, 71.21, 73.03, 76.03, 76.05, 76.25, 76.35,
	                |76.09, 76.29, 76.39, 76.10, 76.49, 76.41, 76.НА, 76.07.2, 76.27.2, 76.37.2";
	
	Если С2018 Тогда
		СчетаПрочие = СтрЗаменить(СчетаПрочие, "68.13", "68.13, 68.34, 68.52");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, "68.13", "68.13, 68.34, 68.52");
	КонецЕсли;
	
	Если УчитыватьСчетаИП2015 Тогда
		СчетаПрочие = СтрЗаменить(СчетаПрочие, "68.01.2", "68.01.2, 68.21.1, 68.21.2");
		СчетаПрочие = СтрЗаменить(СчетаПрочие, "68.13", "68.13, 68.14");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, "68.01.2", "68.01.2, 68.21.1, 68.21.2");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, "68.13", "68.13, 68.14");
	КонецЕсли;
	
	ПрименяетсяФСБУ25 = ЗаполнениеБухгалтерскойОтчетности.ПрименяетсяФСБУ25(КонтекстВыполнения.Организация,
		ПривестиКДате(КонтекстВыполнения.КонтекстРаздела.ДатаКонцаПериодаОтчета));
	Если ПрименяетсяФСБУ25 Тогда
		СчетаПрочие = СтрЗаменить(СчетаПрочие, ", 76.07.9", "");
		СчетаПрочие = СтрЗаменить(СчетаПрочие, ", 76.37.9", "");
	КонецЕсли;
	
	СчетаГрафы04 = СчетаРасчетов + ", " + СчетаАвансов + ", " + СчетаПрочие;
	СчетаГрафы05 = СчетаРезервов;
	СчетаГрафы06 = СчетаРасчетов + ", " + СчетаАвансов + ", " + СчетаПрочие;
	СчетаГрафы07 = "62.01, 62.21, 62.31, 62.03, 76.06, 76.26, 76.36, 60.02, 60.22, 60.32, 73.01, 73.02, 73.03,
	               |76.01.1, 97.01, 97.02, 97.21, 76.01.2, 76.01.9, 76.21, 76.02, 76.22, 76.32, 76.03, 76.05, 76.25, 76.35, 76.09, 76.29, 76.39, 76.13, 76.14";
	СчетаГрафы08 = СчетаРасчетов + ", " + СчетаАвансов + ", " + СчетаПрочие;
	СчетаГрафы09 = "62.01, 62.21, 62.31, 62.03, 76.06, 76.26, 76.36, 60.02, 60.22, 60.32, 71.01, 71.21, 73.01, 73.02, 73.03,
	               |76.02, 76.22, 76.32, 76.03, 76.05, 76.25, 76.35, 76.09, 76.29, 76.39, 76.10, 76.07.2, 76.27.2, 76.37.2, 76.13, 76.14";
	СчетаГрафы10 = СчетаРезервов;
	СчетаГрафы12 = СчетаРасчетов + ", " + СчетаАвансов + ", " + СчетаПрочие;
	СчетаГрафы13 = СчетаРезервов;
	
	СчетаГрафы21 = СчетаПеревода;
	СчетаГрафы22 = СчетаПеревода;
	
	ПолныйСписокСчетов =  СчетаРасчетов + ", " + СчетаАвансов + ", " + СчетаНДСАвансов + ", " + СчетаПрочие + ", " + СчетаРезервов;
	
	КонтекстСтроки.Вставить("СчетаГрафы04", СчетаГрафы04);
	КонтекстСтроки.Вставить("СчетаГрафы05", СчетаГрафы05);
	КонтекстСтроки.Вставить("СчетаГрафы06", СчетаГрафы06);
	КонтекстСтроки.Вставить("СчетаГрафы07", СчетаГрафы07);
	КонтекстСтроки.Вставить("СчетаГрафы08", СчетаГрафы08);
	КонтекстСтроки.Вставить("СчетаГрафы09", СчетаГрафы09);
	КонтекстСтроки.Вставить("СчетаГрафы10", СчетаГрафы10);
	КонтекстСтроки.Вставить("СчетаГрафы12", СчетаГрафы12);
	КонтекстСтроки.Вставить("СчетаГрафы13", СчетаГрафы13);
	
	КонтекстСтроки.Вставить("СчетаГрафы21", СчетаГрафы21);
	КонтекстСтроки.Вставить("СчетаГрафы22", СчетаГрафы22);
	
	КонтекстСтроки.Вставить("СчетаНДСАвансов", СчетаНДСАвансов);
	
	КонтекстСтроки.Вставить("ПолныйСписокСчетов", ПолныйСписокСчетов);
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьБО2011Кв4Пояснения5_Строки5510и5530(КонтекстСтроки);
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения51_Краткосрочная(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5511и5531(КонтекстВыполнения, НомерСтроки)
	
	КонтекстСтроки = Новый Структура;
	
	КонтекстСтроки.Вставить("НомерСтроки", НомерСтроки);
	КонтекстСтроки.Вставить("НаименованиеСтроки", "Расчеты с покупателями и заказчиками");
	
	СчетаРасчетов = "46, 62.01, 62.21, 62.31, 62.03, 76.06, 76.26, 76.36";
	СчетаРезервов = "63";
	СчетаПеревода = "76.06, 76.26, 76.36";
	
	СчетаГрафы04 = СчетаРасчетов;
	СчетаГрафы05 = СчетаРезервов;
	СчетаГрафы06 = СчетаРасчетов;
	СчетаГрафы07 = "62.01, 62.21, 62.31, 62.03, 76.06, 76.26, 76.36";
	СчетаГрафы08 = СчетаРасчетов;
	СчетаГрафы09 = "62.01, 62.21, 62.31, 62.03, 76.06, 76.26, 76.36";
	СчетаГрафы10 = СчетаРезервов;
	СчетаГрафы12 = СчетаРасчетов;
	СчетаГрафы13 = СчетаРезервов;
	
	СчетаГрафы21 = СчетаПеревода;
	СчетаГрафы22 = СчетаПеревода;
	
	ПолныйСписокСчетов = СчетаРасчетов + ", " + СчетаРезервов;
	
	КонтекстСтроки.Вставить("СчетаГрафы04", СчетаГрафы04);
	КонтекстСтроки.Вставить("СчетаГрафы05", СчетаГрафы05);
	КонтекстСтроки.Вставить("СчетаГрафы06", СчетаГрафы06);
	КонтекстСтроки.Вставить("СчетаГрафы07", СчетаГрафы07);
	КонтекстСтроки.Вставить("СчетаГрафы08", СчетаГрафы08);
	КонтекстСтроки.Вставить("СчетаГрафы09", СчетаГрафы09);
	КонтекстСтроки.Вставить("СчетаГрафы10", СчетаГрафы10);
	КонтекстСтроки.Вставить("СчетаГрафы12", СчетаГрафы12);
	КонтекстСтроки.Вставить("СчетаГрафы13", СчетаГрафы13);
	
	КонтекстСтроки.Вставить("СчетаГрафы21", СчетаГрафы21);
	КонтекстСтроки.Вставить("СчетаГрафы22", СчетаГрафы22);
	
	КонтекстСтроки.Вставить("ПолныйСписокСчетов", ПолныйСписокСчетов);
	
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения51_Краткосрочная(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5512и5532(КонтекстВыполнения, НомерСтроки)
	
	КонтекстСтроки = Новый Структура;
	
	КонтекстСтроки.Вставить("НомерСтроки", НомерСтроки);
	КонтекстСтроки.Вставить("НаименованиеСтроки", "Авансы выданные");
	
	СчетаАвансов = "60.02, 60.22, 60.32";
	СчетаРезервов = "63";
	СчетаПеревода = "";
	СчетаНДСАвансов = "76.ВА";
	
	СчетаГрафы04 = СчетаАвансов;
	СчетаГрафы05 = СчетаРезервов;
	СчетаГрафы06 = СчетаАвансов;
	СчетаГрафы07 = СчетаАвансов;
	СчетаГрафы08 = СчетаАвансов;
	СчетаГрафы09 = СчетаАвансов;
	СчетаГрафы10 = СчетаРезервов;
	СчетаГрафы12 = СчетаАвансов;
	СчетаГрафы13 = СчетаРезервов;
	
	СчетаГрафы21 = СчетаПеревода;
	СчетаГрафы22 = СчетаПеревода;
	
	ПолныйСписокСчетов = СчетаАвансов + ", " + СчетаНДСАвансов + ", " + СчетаРезервов;
	
	КонтекстСтроки.Вставить("СчетаГрафы04", СчетаГрафы04);
	КонтекстСтроки.Вставить("СчетаГрафы05", СчетаГрафы05);
	КонтекстСтроки.Вставить("СчетаГрафы06", СчетаГрафы06);
	КонтекстСтроки.Вставить("СчетаГрафы07", СчетаГрафы07);
	КонтекстСтроки.Вставить("СчетаГрафы08", СчетаГрафы08);
	КонтекстСтроки.Вставить("СчетаГрафы09", СчетаГрафы09);
	КонтекстСтроки.Вставить("СчетаГрафы10", СчетаГрафы10);
	КонтекстСтроки.Вставить("СчетаГрафы12", СчетаГрафы12);
	КонтекстСтроки.Вставить("СчетаГрафы13", СчетаГрафы13);
	
	КонтекстСтроки.Вставить("СчетаГрафы21", СчетаГрафы21);
	КонтекстСтроки.Вставить("СчетаГрафы22", СчетаГрафы22);
	
	КонтекстСтроки.Вставить("СчетаНДСАвансов", СчетаНДСАвансов);
	
	КонтекстСтроки.Вставить("ПолныйСписокСчетов", ПолныйСписокСчетов);
	
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения51_Краткосрочная(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5513и5533(КонтекстВыполнения, НомерСтроки)
	
	С2018 = (ПривестиКДате(КонтекстВыполнения.КонтекстРаздела.ДатаКонцаПериодаОтчета) >= '2018-01-01');
	
	УчитыватьСчетаИП2015 = НЕ РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(КонтекстВыполнения.Организация)
	                     И КонтекстВыполнения.Свойство("КонецОтчетногоПериода")
	                     И КонтекстВыполнения.КонецОтчетногоПериода >= '2015-01-01';
	
	КонтекстСтроки = Новый Структура;
	
	КонтекстСтроки.Вставить("НомерСтроки", НомерСтроки);
	КонтекстСтроки.Вставить("НаименованиеСтроки", "Прочая");
	
	СчетаПрочие   = "68.01.1, 68.01.2, 68.02, 68.03, 68.04.1, 68.06, 68.07, 68.08, 68.09, 68.10, 68.11, 68.12, 68.13, 68.22,
	                |69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7, 69.03.1, 69.03.2, 69.04, 69.05.1, 69.05.2,
	                |69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.11, 69.12, 69.13.1, 69.13.2, 70, 71.01, 71.21, 73.01, 73.02, 73.03,
	                |75.01, 76.01.1, 97.01, 97.02, 97.21, 76.01.2, 76.01.9, 76.21, 76.02, 76.22, 76.32, 76.03, 76.05, 76.25, 76.35, 76.09, 76.29, 76.39, 76.10, 76.49,
	                |76.41, 76.НА, 76.ОТ, 76.07.2, 76.27.2, 76.37.2, 76.07.9, 76.37.9, 76.13, 76.14";
	СчетаРезервов = "63";
	
	СчетаПеревода = "68.01.1, 68.01.2, 68.02, 68.03, 68.04.1, 68.06, 68.07, 68.08, 68.09, 68.10, 68.11, 68.12, 68.13,
	                |69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7, 69.03.1, 69.03.2, 69.04, 69.05.1, 69.05.2,
	                |69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.11, 69.12, 69.13.1, 69.13.2,
	                |70, 71.01, 71.21, 73.03, 76.01.1, 76.03, 76.21, 76.05, 76.25, 76.35,
	                |76.09, 76.29, 76.39, 76.10, 76.49, 76.41, 76.НА, 76.07.2, 76.27.2, 76.37.2";
	
	Если С2018 Тогда
		СчетаПрочие = СтрЗаменить(СчетаПрочие, "68.13", "68.13, 68.34, 68.52");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, "68.13", "68.13, 68.34, 68.52");
	КонецЕсли;
	
	Если УчитыватьСчетаИП2015 Тогда
		СчетаПрочие = СтрЗаменить(СчетаПрочие, "68.01.2", "68.01.2, 68.21.1, 68.21.2");
		СчетаПрочие = СтрЗаменить(СчетаПрочие, "68.13", "68.13, 68.14");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, "68.01.2", "68.01.2, 68.21.1, 68.21.2");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, "68.13", "68.13, 68.14");
	КонецЕсли;
	
	ПрименяетсяФСБУ25 = ЗаполнениеБухгалтерскойОтчетности.ПрименяетсяФСБУ25(КонтекстВыполнения.Организация,
		ПривестиКДате(КонтекстВыполнения.КонтекстРаздела.ДатаКонцаПериодаОтчета));
	Если ПрименяетсяФСБУ25 Тогда
		СчетаПрочие = СтрЗаменить(СчетаПрочие, ", 76.07.9", "");
		СчетаПрочие = СтрЗаменить(СчетаПрочие, ", 76.37.9", "");
	КонецЕсли;
	
	СчетаГрафы04 = СчетаПрочие;
	СчетаГрафы05 = СчетаРезервов;
	СчетаГрафы06 = СчетаПрочие;
	СчетаГрафы07 = "73.01, 73.02, 73.03, 76.01.1, 97.01, 97.02, 97.21, 76.01.2, 76.01.9, 76.21, 76.02, 76.22, 76.32, 76.03, 76.05, 76.25, 76.35,
	               |76.09, 76.29, 76.39, 76.13, 76.14";
	СчетаГрафы08 = СчетаПрочие;
	СчетаГрафы09 = "71.01, 71.21, 73.01, 73.02, 73.03, 76.02, 76.22, 76.32, 76.03, 76.05, 76.25, 76.35,
	               |76.09, 76.29, 76.39, 76.10, 76.07.2, 76.27.2, 76.37.2, 76.13, 76.14";
	СчетаГрафы10 = СчетаРезервов;
	СчетаГрафы12 = СчетаПрочие;
	СчетаГрафы13 = СчетаРезервов;
	
	СчетаГрафы21 = СчетаПеревода;
	СчетаГрафы22 = СчетаПеревода;
	
	ПолныйСписокСчетов = СчетаПрочие + ", " + СчетаРезервов;
	
	КонтекстСтроки.Вставить("СчетаГрафы04", СчетаГрафы04);
	КонтекстСтроки.Вставить("СчетаГрафы05", СчетаГрафы05);
	КонтекстСтроки.Вставить("СчетаГрафы06", СчетаГрафы06);
	КонтекстСтроки.Вставить("СчетаГрафы07", СчетаГрафы07);
	КонтекстСтроки.Вставить("СчетаГрафы08", СчетаГрафы08);
	КонтекстСтроки.Вставить("СчетаГрафы09", СчетаГрафы09);
	КонтекстСтроки.Вставить("СчетаГрафы10", СчетаГрафы10);
	КонтекстСтроки.Вставить("СчетаГрафы12", СчетаГрафы12);
	КонтекстСтроки.Вставить("СчетаГрафы13", СчетаГрафы13);
	
	КонтекстСтроки.Вставить("СчетаГрафы21", СчетаГрафы21);
	КонтекстСтроки.Вставить("СчетаГрафы22", СчетаГрафы22);
	
	КонтекстСтроки.Вставить("ПолныйСписокСчетов", ПолныйСписокСчетов);
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьБО2011Кв4Пояснения5_Строки5513и5533(КонтекстСтроки);
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения51_Краткосрочная(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения51_Краткосрочная(КонтекстВыполнения)
	
	Организация = КонтекстВыполнения.Организация;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	КонтекстРаздела = КонтекстВыполнения.КонтекстРаздела;
	КонтекстСтроки = КонтекстВыполнения.КонтекстСтроки;
	
	ИмяРаздела = "Пояснения5";
	
	ДополнительныеПараметрыРасшифровки = Новый Структура("Организация", Организация);
	
	ЗаголовкиГраф = КонтекстРаздела.ЗаголовкиГраф51;
	НачалоПериода = КонтекстРаздела.ДатаНачалаПериодаОтчета;
	КонецПериода  = КонтекстРаздела.ДатаКонцаПериодаОтчета;
	
	НомерСтроки        = КонтекстСтроки.НомерСтроки;
	НаименованиеСтроки = КонтекстСтроки.НаименованиеСтроки;
	ПолныйСписокСчетов = КонтекстСтроки.ПолныйСписокСчетов;
	
	СоответствиеЛогическихНомеровФактическим = Новый Соответствие;
	СоответствиеЛогическихНомеровФактическим.Вставить("5510", "5511");
	СоответствиеЛогическихНомеровФактическим.Вставить("5530", "5531");
	СоответствиеЛогическихНомеровФактическим.Вставить("5511", "5512");
	СоответствиеЛогическихНомеровФактическим.Вставить("5531", "5532");
	СоответствиеЛогическихНомеровФактическим.Вставить("5512", "5513");
	СоответствиеЛогическихНомеровФактическим.Вставить("5532", "5533");
	СоответствиеЛогическихНомеровФактическим.Вставить("5513", "5514");
	СоответствиеЛогическихНомеровФактическим.Вставить("5533", "5534");
	
	НомерСтрокиМакет = СоответствиеЛогическихНомеровФактическим[НомерСтроки];
	Если НомерСтрокиМакет = Неопределено Тогда
		НомерСтрокиМакет = НомерСтроки;
	КонецЕсли;
	
	РазделятьАвансыПоВидамАктивов = КонтекстРаздела.РазделятьАвансыПоВидамАктивов;
	
	ПараметрыОбработкиСчетов = ПараметрыОбработкиСчетов();
	ПараметрыОбработкиСчетов.РазделятьАвансыПоВидамАктивов = РазделятьАвансыПоВидамАктивов;
	ПараметрыОбработкиСчетов.ПрименяетсяФСБУ25 = КонтекстРаздела.ПрименяетсяФСБУ25;
	
	ОбработкаСчетов = ПорядокОбработкиСчетов(ПолныйСписокСчетов, ПараметрыОбработкиСчетов);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("КороткийСрок", 365);
	
	Запрос.УстановитьПараметр("СчетаГрафы04", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы04"));
	Запрос.УстановитьПараметр("СчетаГрафы05", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы05"));
	Запрос.УстановитьПараметр("СчетаГрафы06", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы06"));
	Запрос.УстановитьПараметр("СчетаГрафы07", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы07"));
	Запрос.УстановитьПараметр("СчетаГрафы08", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы08"));
	Запрос.УстановитьПараметр("СчетаГрафы09", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы09"));
	Запрос.УстановитьПараметр("СчетаГрафы10", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы10"));
	Запрос.УстановитьПараметр("СчетаГрафы12", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы12"));
	Запрос.УстановитьПараметр("СчетаГрафы13", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы13"));
	
	Запрос.УстановитьПараметр("СчетаГрафы21", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы21"));
	Запрос.УстановитьПараметр("СчетаГрафы22", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы22"));
	
	Запрос.УстановитьПараметр("СчетаНДСАвансов", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаНДСАвансов"));
	
	Для Каждого СпособОбработки Из ОбработкаСчетов Цикл
		Запрос.УстановитьПараметр(СпособОбработки.Ключ, СпособОбработки.Значение);
	КонецЦикла;
	
	СубконтоВидыПлатежей = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет;
	Запрос.УстановитьПараметр("СубконтоВидыПлатежей", СубконтоВидыПлатежей);
	
	СубконтоВидыПлатежейУровни = Новый Массив;
	СубконтоВидыПлатежейУровни.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет);
	СубконтоВидыПлатежейУровни.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.УровниБюджетов);
	Запрос.УстановитьПараметр("СубконтоВидыПлатежейУровни", СубконтоВидыПлатежейУровни);
	
	СубконтоРаботники = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций;
	Запрос.УстановитьПараметр("СубконтоРаботники", СубконтоРаботники);
	
	СубконтоКонтрагенты = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты;
	Запрос.УстановитьПараметр("СубконтоКонтрагенты", СубконтоКонтрагенты);
	
	СубконтоКонтрагентыДоговоры = Новый Массив;
	СубконтоКонтрагентыДоговоры.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	СубконтоКонтрагентыДоговоры.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	Запрос.УстановитьПараметр("СубконтоКонтрагентыДоговоры", СубконтоКонтрагентыДоговоры);
	
	СубконтоКонтрагентыСФПолученные = Новый Массив;
	СубконтоКонтрагентыСФПолученные.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	СубконтоКонтрагентыСФПолученные.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СФПолученные);
	Запрос.УстановитьПараметр("СубконтоКонтрагентыСФПолученные", СубконтоКонтрагентыСФПолученные);
	
	СубконтоПрочиеДоходыРасходы = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы;
	Запрос.УстановитьПараметр("СубконтоПрочиеДоходыРасходы", СубконтоПрочиеДоходыРасходы);
	
	СубконтоРасходыБудущихПериодов = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов;
	Запрос.УстановитьПараметр("СубконтоРасходыБудущихПериодов", СубконтоРасходыБудущихПериодов);
	
	Запрос.УстановитьПараметр("Счет_91_01", Счет("91.01"));
	ВидПДРНачисление = Перечисления.ВидыПрочихДоходовИРасходов.ШтрафыПениНеустойкиКПолучениюУплате;
	Запрос.УстановитьПараметр("ВидПДРНачисление", ВидПДРНачисление);
	
	Запрос.УстановитьПараметр("Счет_91_02", Счет("91.02"));
	ВидПДРСписание = Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности;
	Запрос.УстановитьПараметр("ВидПДРСписание", ВидПДРСписание);
	
	ИсключаемыеВидыАктиваАвансов = Новый Массив;
	Если РазделятьАвансыПоВидамАктивов Тогда
		ИсключаемыеВидыАктиваАвансов.Добавить(Перечисления.ВидыАктивовДляАвансов.ОсновныеСредства);
		ИсключаемыеВидыАктиваАвансов.Добавить(Перечисления.ВидыАктивовДляАвансов.Запасы);
		ИсключаемыеВидыАктиваАвансов.Добавить(Перечисления.ВидыАктивовДляАвансов.ПрочиеОборотные);
	КонецЕсли;
	Запрос.УстановитьПараметр("ИсключаемыеВидыАктиваАвансов", ИсключаемыеВидыАктиваАвансов);
	
	ДополнительныйТекстЗапроса = "";
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьТекстЗапросаПоПереопределяемымТаблицамПояснения51Краткосрочная(
		ДополнительныйТекстЗапроса);
	Если НЕ ЗначениеЗаполнено(ДополнительныйТекстЗапроса) Тогда
		ДополнительныйТекстЗапроса = ТекстЗапросаПоПереопределяемымТаблицамПояснения51_Краткосрочная();
	КонецЕсли;
	ТекстЗапроса = ОбщийТекстЗапросов(ТекстЗапросаПояснения51_Краткосрочная(), ДополнительныйТекстЗапроса);
	
	УстановитьПолныйТекстЗапроса(Запрос, ТекстЗапроса, "СФПолученные");
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьПараметрыЗапросаПояснения51Краткосрочная(Запрос);
	Запрос.Выполнить();
	
	ПараметрыРасшифровки = Новый Структура;
	ПараметрыРасшифровки.Вставить("ИмяОтчета", ИмяРаздела);
	ПараметрыРасшифровки.Вставить("ДатаНачалаПериодаОтчета", НачалоПериода);
	ПараметрыРасшифровки.Вставить("ДатаКонцаПериодаОтчета", КонецПериода);
	
	ПараметрыСоставляющих = Новый Структура;
	ПараметрыСоставляющих.Вставить("ИмяТаблицыПояснений", "Пояснения51");
	ПараметрыСоставляющих.Вставить("ОбработкаСчетов", ОбработкаСчетов);
	ПараметрыСоставляющих.Вставить("ЗаголовкиГраф", ЗаголовкиГраф);
	
	Графа = "04";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтрокиМакет + Графа;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа04.Счет,
	               |	ВТ_Графа04.Значение
	               |ИЗ
	               |	ВТ_Графа04 КАК ВТ_Графа04";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на начало периода по дебету счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней";
		ИначеЕсли ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на начало периода по дебету счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней";
		ИначеЕсли ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на начало периода по дебету счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней";
		ИначеЕсли ОбработкаСчетов.СчетаБезОбработки.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на начало периода по дебету счета " + СчетСоставляющей.Код;
		ИначеЕсли ОбработкаСчетов.СчетаПоВидамПлатежей.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на начало периода по дебету счета " + СчетСоставляющей.Код + " по видам платежей в бюджет (фонды)";
		ИначеЕсли ОбработкаСчетов.СчетаПоВидамПлатежейУровням.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на начало периода по дебету счета " + СчетСоставляющей.Код + " по видам платежей в бюджет (фонды) и уровням бюджетов";
		ИначеЕсли ОбработкаСчетов.СчетаПоРаботникам.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на начало периода по дебету счета " + СчетСоставляющей.Код + " по работникам";
		ИначеЕсли ОбработкаСчетов.СчетаПоКонтрагентам.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на начало периода по дебету счета " + СчетСоставляющей.Код + " по контрагентам";
		ИначеЕсли ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на начало периода по дебету счета " + СчетСоставляющей.Код + " по контрагентам и договорам";
		ИначеЕсли ОбработкаСчетов.АПСчетаБезРазвертки.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на начало периода по дебету счета " + СчетСоставляющей.Код;
		ИначеЕсли ОбработкаСчетов.СчетаВидуАктива.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на начало периода по дебету счета " + СчетСоставляющей.Код + " по """ + СубконтоРасходыБудущихПериодов
			                         + """ с видом актива в балансе """ + Перечисления.ВидыАктивовДляРБП.ДебиторскаяЗадолженность + """";
		ИначеЕсли ОбработкаСчетов.СчетаАвансовПоВидуАктива.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(
				"Сальдо на начало периода по дебету счета %1 по договорам, с признаком отражения в балансе не отнесенным к ""Прочим активам"", ""Запасам"" или ""Основным средствам""",
				СчетСоставляющей.Код);
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа04", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа04_НДС.Счет,
	               |	ВТ_Графа04_НДС.Значение
	               |ИЗ
	               |	ВТ_Графа04_НДС КАК ВТ_Графа04_НДС";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаименованиеСтрокиРасшифровки = "";
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		Если ОбработкаСчетов.СчетаПоНДСАвансов.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(
				"Сальдо на начало периода по кредиту счета %1 по контрагентам и счетам-фактурам полученным по договорам со сроком оплаты не превышающим 365 дней",
				СчетСоставляющей.Код);
		ИначеЕсли ОбработкаСчетов.СчетаНДСАвансовПоВидуАктива.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(
				"Сальдо на начало периода по кредиту счета %1 по контрагентам и счетам-фактурам полученным по договорам, с признаком отражения в балансе не отнесенным к ""Прочим активам"", ""Запасам"" или ""Основным средствам""",
				СчетСоставляющей.Код);
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа04_НДС", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"-", НаименованиеСоставляющей,
			-ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя - ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	Графа = "12";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтрокиМакет + Графа;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа12.Счет,
	               |	ВТ_Графа12.Значение
	               |ИЗ
	               |	ВТ_Графа12 КАК ВТ_Графа12";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на конец периода по дебету счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней";
		ИначеЕсли ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на конец периода по дебету счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней";
		ИначеЕсли ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на конец периода по дебету счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней";
		ИначеЕсли ОбработкаСчетов.СчетаБезОбработки.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на конец периода по дебету счета " + СчетСоставляющей.Код;
		ИначеЕсли ОбработкаСчетов.СчетаПоВидамПлатежей.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на конец периода по дебету счета " + СчетСоставляющей.Код + " по видам платежей в бюджет (фонды)";
		ИначеЕсли ОбработкаСчетов.СчетаПоВидамПлатежейУровням.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на конец периода по дебету счета " + СчетСоставляющей.Код + " по видам платежей в бюджет (фонды) и уровням бюджетов";
		ИначеЕсли ОбработкаСчетов.СчетаПоРаботникам.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на конец периода по дебету счета " + СчетСоставляющей.Код + " по работникам";
		ИначеЕсли ОбработкаСчетов.СчетаПоКонтрагентам.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на конец периода по дебету счета " + СчетСоставляющей.Код + " по контрагентам";
		ИначеЕсли ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на конец периода по дебету счета " + СчетСоставляющей.Код + " по контрагентам и договорам";
		ИначеЕсли ОбработкаСчетов.АПСчетаБезРазвертки.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на конец периода по дебету счета " + СчетСоставляющей.Код;
		ИначеЕсли ОбработкаСчетов.СчетаВидуАктива.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на конец периода по дебету счета " + СчетСоставляющей.Код + " по статьям субконто """ + СубконтоРасходыБудущихПериодов
			                         + """ с видом актива в балансе """ + Перечисления.ВидыАктивовДляРБП.ДебиторскаяЗадолженность + """";
		ИначеЕсли ОбработкаСчетов.СчетаАвансовПоВидуАктива.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(
				"Сальдо на конец периода по дебету счета %1 по договорам, с признаком отражения в балансе не отнесенным к ""Прочим активам"", ""Запасам"" или ""Основным средствам""",
				СчетСоставляющей.Код);
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа12", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа12_НДС.Счет,
	               |	ВТ_Графа12_НДС.Значение
	               |ИЗ
	               |	ВТ_Графа12_НДС КАК ВТ_Графа12_НДС";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаименованиеСтрокиРасшифровки = "";
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		Если ОбработкаСчетов.СчетаПоНДСАвансов.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(
				"Сальдо на конец периода по кредиту счета %1 по контрагентам и счетам-фактурам полученным по договорам со сроком оплаты не превышающим 365 дней",
				СчетСоставляющей.Код);
		ИначеЕсли ОбработкаСчетов.СчетаНДСАвансовПоВидуАктива.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(
				"Сальдо на конец периода по кредиту счета %1 по контрагентам и счетам-фактурам полученным по договорам, с признаком отражения в балансе не отнесенным к ""Прочим активам"", ""Запасам"" или ""Основным средствам""",
				СчетСоставляющей.Код);
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа12_НДС", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"-", НаименованиеСоставляющей,
			-ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя - ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	Графа = "06";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтрокиМакет + Графа;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа06.Счет,
	               |	ВТ_Графа06.ДО,
	               |	ВТ_Графа06.Дельта
	               |ИЗ
	               |	ВТ_Графа06 КАК ВТ_Графа06";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.ДО;
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по дебету счета " + СчетСоставляющей.Код + ", отражаемые в дебиторской задолженности, по контрагентам и договорам со сроком оплаты не превышающим 365 дней";
		ИначеЕсли ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по дебету счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней";
		ИначеЕсли ОбработкаСчетов.СчетаВидуАктива.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по дебету счета " + СчетСоставляющей.Код + " по статьям субконто """ + СубконтоРасходыБудущихПериодов
			                         + """ с видом актива в балансе """ + Перечисления.ВидыАктивовДляРБП.ДебиторскаяЗадолженность + """";
		ИначеЕсли ОбработкаСчетов.СчетаПоВидамПлатежей.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоВидамПлатежейУровням.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоРаботникам.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентам.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.АПСчетаБезРазвертки.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаБезОбработки.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по дебету счета " + СчетСоставляющей.Код;
		ИначеЕсли ОбработкаСчетов.СчетаАвансовПоВидуАктива.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(
				"Обороты по дебету счета %1 по договорам, с признаком отражения в балансе не отнесенным к ""Прочим активам"", ""Запасам"" или ""Основным средствам""",
				СчетСоставляющей.Код);
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа06_Дт", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
		ЗначениеСоставляющей = Выборка.Дельта;
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоВидамПлатежей.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоВидамПлатежейУровням.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоРаботникам.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоКонтрагентам.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.АПСчетаБезРазвертки.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаВидуАктива.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаБезОбработки.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаАвансовПоВидуАктива.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(
				"Обороты по кредиту счета %1 по объектам отраженным в дебетовых оборотах в пределах суммы дебетового оборота",
				СчетСоставляющей.Код);
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа06_Кт", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"-", НаименованиеСоставляющей,
			-ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя - ЗначениеСоставляющей;
		
	КонецЦикла;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа06_НДС.Счет,
	               |	ВТ_Графа06_НДС.КО,
	               |	ВТ_Графа06_НДС.Дельта
	               |ИЗ
	               |	ВТ_Графа06_НДС КАК ВТ_Графа06_НДС";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаименованиеСтрокиРасшифровки = "";
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.КО;
		
		Если ОбработкаСчетов.СчетаПоНДСАвансов.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(
				"Обороты по кредиту счета %1 по контрагентам и счетам-фактурам по договорам со сроком оплаты не превышающим 365 дней",
				СчетСоставляющей.Код);
		ИначеЕсли ОбработкаСчетов.СчетаНДСАвансовПоВидуАктива.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(
				"Обороты по кредиту счета %1 по контрагентам и счетам-фактурам по договорам, с признаком отражения в балансе не отнесенным к ""Прочим активам"", ""Запасам"" или ""Основным средствам""",
				СчетСоставляющей.Код);
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа06_НДС_Кт", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"-", НаименованиеСоставляющей,
			-ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя - ЗначениеСоставляющей;
		
		ЗначениеСоставляющей = Выборка.Дельта;
		
		Если ОбработкаСчетов.СчетаПоНДСАвансов.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаНДСАвансовПоВидуАктива.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(
				"Обороты по дебету счета %1 по объектам отраженным в кредитовых оборотах в пределах суммы кредитового оборота",
				СчетСоставляющей.Код);
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа06_НДС_Дт", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа07.СчетДт,
	               |	ВТ_Графа07.СчетКт,
	               |	ВТ_Графа07.Значение
	               |ИЗ
	               |	ВТ_Графа07 КАК ВТ_Графа07";
	
	Выборка = Запрос.Выполнить().Выбрать();
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	
	Пока Выборка.Следующий() Цикл
		НаименованиеСтрокиРасшифровки = "";
		
		СчетСоставляющейДт = Выборка.СчетДт;
		СчетСоставляющейКт = Выборка.СчетКт;
		ЗначениеСоставляющей = Выборка.Значение;
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющейДт) <> Неопределено
		 ИЛИ ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющейДт) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющейДт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот с дебета счета " + СчетСоставляющейДт.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней в кредит счета "
			                         + СчетСоставляющейКт.Код + " по статьям субконто """ + СубконтоПрочиеДоходыРасходы
			                         + """ с видом """ + ВидПДРНачисление + """";
		ИначеЕсли ОбработкаСчетов.СчетаБезОбработки.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоРаботникам.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющейДт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот с дебета счета " + СчетСоставляющейДт.Код + " в кредит счета "
			                         + СчетСоставляющейКт.Код + " по статьям субконто """ + СубконтоПрочиеДоходыРасходы
			                         + """ с видом """ + ВидПДРНачисление + """";
		ИначеЕсли ОбработкаСчетов.СчетаВидуАктива.Найти(СчетСоставляющейДт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот с дебета счета " + СчетСоставляющейДт.Код + " в кредит счета "
			                         + СчетСоставляющейКт.Код + " по статьям субконто """ + СубконтоРасходыБудущихПериодов
			                         + """ с видом актива в балансе """ + Перечисления.ВидыАктивовДляРБП.ДебиторскаяЗадолженность + """";
		ИначеЕсли ОбработкаСчетов.СчетаАвансовПоВидуАктива.Найти(СчетСоставляющейДт) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(
				"Оборот с дебета счета %1 в кредит счета %2 по статьям субконто ""%3"" по договорам, с признаком отражения в балансе не отнесенным к ""Прочим активам"", ""Запасам"" или ""Основным средствам""",
				СчетСоставляющейДт.Код, СчетСоставляющейКт.Код, СубконтоПрочиеДоходыРасходы);
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа07", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющейДт.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"-", НаименованиеСоставляющей,
			-ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя - ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	Графа = "08";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтрокиМакет + Графа;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа08.Счет,
	               |	ВТ_Графа08.КО,
	               |	ВТ_Графа08.Дельта
	               |ИЗ
	               |	ВТ_Графа08 КАК ВТ_Графа08";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.КО;
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по кредиту счета " + СчетСоставляющей.Код + ", отражаемые в дебиторской задолженности, по контрагентам и договорам со сроком оплаты не превышающим 365 дней";
		ИначеЕсли ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по кредиту счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней";
		ИначеЕсли ОбработкаСчетов.СчетаВидуАктива.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по кредиту счета " + СчетСоставляющей.Код + " по статьям субконто """ + СубконтоРасходыБудущихПериодов
			                         + """ с видом актива в балансе """ + Перечисления.ВидыАктивовДляРБП.ДебиторскаяЗадолженность + """";
		ИначеЕсли ОбработкаСчетов.СчетаПоВидамПлатежей.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоВидамПлатежейУровням.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоРаботникам.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентам.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.АПСчетаБезРазвертки.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаБезОбработки.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по кредиту счета " + СчетСоставляющей.Код;
		ИначеЕсли ОбработкаСчетов.СчетаАвансовПоВидуАктива.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(
				"Обороты по кредиту счета счета %1 по договорам, с признаком отражения в балансе не отнесенным к ""Прочим активам"", ""Запасам"" или ""Основным средствам""",
				СчетСоставляющей.Код);
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа08_Кт", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
		ЗначениеСоставляющей = Выборка.Дельта;
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоВидамПлатежей.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоВидамПлатежейУровням.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоРаботникам.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоКонтрагентам.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.АПСчетаБезРазвертки.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаВидуАктива.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаБезОбработки.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаАвансовПоВидуАктива.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по кредиту счета " + СчетСоставляющей.Код + " отраженные в графе """ + ЗаголовкиГраф["06"]+ """";
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа08_Кт_Гр06", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"-", НаименованиеСоставляющей,
			-ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя - ЗначениеСоставляющей;
		
	КонецЦикла;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа08_НДС.Счет,
	               |	ВТ_Графа08_НДС.ДО,
	               |	ВТ_Графа08_НДС.Дельта
	               |ИЗ
	               |	ВТ_Графа08_НДС КАК ВТ_Графа08_НДС";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаименованиеСтрокиРасшифровки = "";
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.ДО;
		
		Если ОбработкаСчетов.СчетаПоНДСАвансов.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(
				"Обороты по дебету счета %1 по контрагентам и счетам-фактурам по договорам со сроком оплаты не превышающим 365 дней",
				СчетСоставляющей.Код);
		ИначеЕсли ОбработкаСчетов.СчетаНДСАвансовПоВидуАктива.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(
				"Обороты по дебету счета %1 по контрагентам и счетам-фактурам по договорам, с признаком отражения в балансе не отнесенным к ""Прочим активам"", ""Запасам"" или ""Основным средствам""",
				СчетСоставляющей.Код);
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа08_НДС_Дт", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"-", НаименованиеСоставляющей,
			-ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя - ЗначениеСоставляющей;
		
		ЗначениеСоставляющей = Выборка.Дельта;
		
		Если ОбработкаСчетов.СчетаПоНДСАвансов.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаНДСАвансовПоВидуАктива.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(
				"Обороты по дебету счета %1 отраженные в графе ""%2""",
				СчетСоставляющей.Код, ЗаголовкиГраф["06"]);
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа08_НДС_Дт_Гр06", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа09.СчетДт,
	               |	ВТ_Графа09.СчетКт,
	               |	ВТ_Графа09.Значение
	               |ИЗ
	               |	ВТ_Графа09 КАК ВТ_Графа09";
	
	Выборка = Запрос.Выполнить().Выбрать();
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющейДт = Выборка.СчетДт;
		СчетСоставляющейКт = Выборка.СчетКт;
		ЗначениеСоставляющей = Выборка.Значение;
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющейКт) <> Неопределено
		 ИЛИ ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющейКт) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющейКт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот с кредита счета " + СчетСоставляющейКт.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней в дебет счета "
			                         + СчетСоставляющейДт.Код + " по статьям субконто """ + СубконтоПрочиеДоходыРасходы
			                         + """ с видом """ + ВидПДРСписание + """";
		ИначеЕсли ОбработкаСчетов.СчетаБезОбработки.Найти(СчетСоставляющейКт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоРаботникам.Найти(СчетСоставляющейКт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющейКт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентам.Найти(СчетСоставляющейКт) <> Неопределено
		      ИЛИ ОбработкаСчетов.АПСчетаБезРазвертки.Найти(СчетСоставляющейКт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот с кредита счета " + СчетСоставляющейКт.Код + " в дебет счета "
			                         + СчетСоставляющейДт.Код + " по статьям субконто """ + СубконтоПрочиеДоходыРасходы
			                         + """ с видом """ + ВидПДРСписание + """";
		ИначеЕсли ОбработкаСчетов.СчетаАвансовПоВидуАктива.Найти(СчетСоставляющейКт) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(
				"Оборот с кредита счета %1 в дебет счета %2 по статьям субконто ""%3"" по договорам, с признаком отражения в балансе не отнесенным к ""Прочим активам"", ""Запасам"" или ""Основным средствам""",
				СчетСоставляющейКт.Код, СчетСоставляющейДт.Код, СубконтоПрочиеДоходыРасходы);
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа09", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющейКт.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"-", НаименованиеСоставляющей,
			-ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя - ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
	
	Графа = "07";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтрокиМакет + Графа;
	
	ЗначениеПоказателя = 0;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа07.СчетДт,
	               |	ВТ_Графа07.СчетКт,
	               |	ВТ_Графа07.Значение
	               |ИЗ
	               |	ВТ_Графа07 КАК ВТ_Графа07";
	
	Выборка = Запрос.Выполнить().Выбрать();
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющейДт = Выборка.СчетДт;
		СчетСоставляющейКт = Выборка.СчетКт;
		ЗначениеСоставляющей = Выборка.Значение;
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющейДт) <> Неопределено
		 ИЛИ ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющейДт) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющейДт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот с дебета счета " + СчетСоставляющейДт.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней в кредит счета "
			                         + СчетСоставляющейКт.Код + " по статьям субконто """ + СубконтоПрочиеДоходыРасходы
			                         + """ с видом """ + ВидПДРНачисление + """";
		ИначеЕсли ОбработкаСчетов.СчетаБезОбработки.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоРаботникам.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющейДт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот с дебета счета " + СчетСоставляющейДт.Код + " в кредит счета "
			                         + СчетСоставляющейКт.Код + " по статьям субконто """ + СубконтоПрочиеДоходыРасходы
			                         + """ с видом """ + ВидПДРНачисление + """";
		ИначеЕсли ОбработкаСчетов.СчетаВидуАктива.Найти(СчетСоставляющейДт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот с дебета счета " + СчетСоставляющейДт.Код + " в кредит счета "
			                         + СчетСоставляющейКт.Код + " по статьям субконто """ + СубконтоРасходыБудущихПериодов
			                         + """ с видом актива в балансе """ + Перечисления.ВидыАктивовДляРБП.ДебиторскаяЗадолженность + """";
		ИначеЕсли ОбработкаСчетов.СчетаАвансовПоВидуАктива.Найти(СчетСоставляющейДт) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(
				"Оборот с дебета счета %1 в кредит счета %2 по статьям субконто ""%3"" по договорам, с признаком отражения в балансе не отнесенным к ""Прочим активам"", ""Запасам"" или ""Основным средствам""",
				СчетСоставляющейДт.Код, СчетСоставляющейКт.Код, СубконтоПрочиеДоходыРасходы);
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа07", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющейДт.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	Графа = "09";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтрокиМакет + Графа;
	
	ЗначениеПоказателя = 0;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа09.СчетДт,
	               |	ВТ_Графа09.СчетКт,
	               |	ВТ_Графа09.Значение
	               |ИЗ
	               |	ВТ_Графа09 КАК ВТ_Графа09";
	
	Выборка = Запрос.Выполнить().Выбрать();
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющейДт = Выборка.СчетДт;
		СчетСоставляющейКт = Выборка.СчетКт;
		ЗначениеСоставляющей = Выборка.Значение;
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющейКт) <> Неопределено
		 ИЛИ ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющейКт) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющейКт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот с кредита счета " + СчетСоставляющейКт.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней в дебет счета "
			                         + СчетСоставляющейДт.Код + " по статьям субконто """ + СубконтоПрочиеДоходыРасходы
			                         + """ с видом """ + ВидПДРСписание + """";
		ИначеЕсли ОбработкаСчетов.СчетаБезОбработки.Найти(СчетСоставляющейКт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоРаботникам.Найти(СчетСоставляющейКт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющейКт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентам.Найти(СчетСоставляющейКт) <> Неопределено
		      ИЛИ ОбработкаСчетов.АПСчетаБезРазвертки.Найти(СчетСоставляющейКт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот с кредита счета " + СчетСоставляющейКт.Код + " в дебет счета "
			                         + СчетСоставляющейДт.Код + " по статьям субконто """ + СубконтоПрочиеДоходыРасходы
			                         + """ с видом """ + ВидПДРСписание + """";
		ИначеЕсли ОбработкаСчетов.СчетаАвансовПоВидуАктива.Найти(СчетСоставляющейКт) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(
				"Оборот с кредита счета %1 в дебет счета %2 по статьям субконто ""%3"" по договорам, с признаком отражения в балансе не отнесенным к ""Прочим активам"", ""Запасам"" или ""Основным средствам""",
				СчетСоставляющейКт.Код, СчетСоставляющейДт.Код, СубконтоПрочиеДоходыРасходы);
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа09", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющейКт.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
	
	Графа = "21";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтрокиМакет + Графа;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа21.Счет,
	               |	ВТ_Графа21.Значение
	               |ИЗ
	               |	ВТ_Графа21 КАК ВТ_Графа21";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Переведено из дебиторской в кредиторскую задолженность по счету " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней";
		ИначеЕсли ОбработкаСчетов.СчетаПоВидамПлатежей.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоВидамПлатежейУровням.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоРаботникам.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентам.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.АПСчетаБезРазвертки.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Переведено из дебиторской в кредиторскую задолженность по счету " + СчетСоставляющей.Код;
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа21", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	Графа = "22";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтрокиМакет + Графа;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа22.Счет,
	               |	ВТ_Графа22.Значение
	               |ИЗ
	               |	ВТ_Графа22 КАК ВТ_Графа22";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Переведено из кредиторской в дебиторскую задолженность по счету " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней";
		ИначеЕсли ОбработкаСчетов.СчетаПоВидамПлатежей.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоВидамПлатежейУровням.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоРаботникам.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентам.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.АПСчетаБезРазвертки.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Переведено из кредиторской в дебиторскую задолженность по счету " + СчетСоставляющей.Код;
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа22", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	Графа = "05";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтрокиМакет + Графа;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа05.Счет,
	               |	ВТ_Графа05.Значение
	               |ИЗ
	               |	ВТ_Графа05 КАК ВТ_Графа05";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		НаименованиеСоставляющей = "Сальдо на начало периода по кредиту счета " + СчетСоставляющей.Код + " по объектам отраженным в графе """ + ЗаголовкиГраф["04"]+ """";
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
	
	Графа = "13";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтрокиМакет + Графа;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа13.Счет,
	               |	ВТ_Графа13.Значение
	               |ИЗ
	               |	ВТ_Графа13 КАК ВТ_Графа13";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		НаименованиеСоставляющей = "Сальдо на конец периода по кредиту счета " + СчетСоставляющей.Код + " по объектам отраженным в графе """ + ЗаголовкиГраф["12"]+ """";
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
	
	Графа = "10";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтрокиМакет + Графа;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа10.Счет,
	               |	ВТ_Графа10.Значение
	               |ИЗ
	               |	ВТ_Графа10 КАК ВТ_Графа10";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		НаименованиеСоставляющей = "Обороты по дебету счета " + СчетСоставляющей.Код + " по объектам отраженным в графах """ + ЗаголовкиГраф["08"]+ """ и """ + ЗаголовкиГраф["09"]+ """";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
	
КонецПроцедуры

Функция ТекстЗапросаПоПереопределяемымТаблицамПояснения51_Краткосрочная() Экспорт
	
	ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет,
		|	НЕОПРЕДЕЛЕНО КАК Субконто1,
		|	НЕОПРЕДЕЛЕНО КАК Субконто2,
		|	0 КАК СНД,
		|	0 КАК СНК,
		|	0 КАК ДО,
		|	0 КАК КО,
		|	0 КАК СКД,
		|	0 КАК СКК,
		|	ЛОЖЬ КАК ОтражатьВДебиторской,
		|	0 КАК Дельта,
		|	0 КАК ПереводДвК,
		|	0 КАК ПереводКвД
		|ПОМЕСТИТЬ ВТ_ДанныеСчетовРазвернутоПереопределяемый";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПояснения51_Краткосрочная() Экспорт
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	СчетаГрафы04.Счет КАК Счет
	               |ПОМЕСТИТЬ ВТ_СчетаГрафы04
	               |ИЗ
	               |	&СчетаГрафы04 КАК СчетаГрафы04
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СчетаГрафы05.Счет КАК Счет
	               |ПОМЕСТИТЬ ВТ_СчетаГрафы05
	               |ИЗ
	               |	&СчетаГрафы05 КАК СчетаГрафы05
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СчетаГрафы06.Счет КАК Счет
	               |ПОМЕСТИТЬ ВТ_СчетаГрафы06
	               |ИЗ
	               |	&СчетаГрафы06 КАК СчетаГрафы06
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СчетаГрафы07.Счет КАК Счет
	               |ПОМЕСТИТЬ ВТ_СчетаГрафы07
	               |ИЗ
	               |	&СчетаГрафы07 КАК СчетаГрафы07
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СчетаГрафы08.Счет КАК Счет
	               |ПОМЕСТИТЬ ВТ_СчетаГрафы08
	               |ИЗ
	               |	&СчетаГрафы08 КАК СчетаГрафы08
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СчетаГрафы09.Счет КАК Счет
	               |ПОМЕСТИТЬ ВТ_СчетаГрафы09
	               |ИЗ
	               |	&СчетаГрафы09 КАК СчетаГрафы09
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СчетаГрафы10.Счет КАК Счет
	               |ПОМЕСТИТЬ ВТ_СчетаГрафы10
	               |ИЗ
	               |	&СчетаГрафы10 КАК СчетаГрафы10
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СчетаГрафы12.Счет КАК Счет
	               |ПОМЕСТИТЬ ВТ_СчетаГрафы12
	               |ИЗ
	               |	&СчетаГрафы12 КАК СчетаГрафы12
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СчетаГрафы13.Счет КАК Счет
	               |ПОМЕСТИТЬ ВТ_СчетаГрафы13
	               |ИЗ
	               |	&СчетаГрафы13 КАК СчетаГрафы13
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СчетаГрафы21.Счет КАК Счет
	               |ПОМЕСТИТЬ ВТ_СчетаГрафы21
	               |ИЗ
	               |	&СчетаГрафы21 КАК СчетаГрафы21
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СчетаГрафы22.Счет КАК Счет
	               |ПОМЕСТИТЬ ВТ_СчетаГрафы22
	               |ИЗ
	               |	&СчетаГрафы22 КАК СчетаГрафы22
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СчетаНДСАвансов.Счет КАК Счет
	               |ПОМЕСТИТЬ ВТ_СчетаНДСАвансов
	               |ИЗ
	               |	&СчетаНДСАвансов КАК СчетаНДСАвансов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВЫРАЗИТЬ(ДоговорыКонтрагентов.Владелец КАК Справочник.Контрагенты) КАК Контрагент,
	               |	ВЫРАЗИТЬ(ДоговорыКонтрагентов.Ссылка КАК Справочник.ДоговорыКонтрагентов) КАК Договор
	               |ПОМЕСТИТЬ ВТ_ДолгосрочныеДоговоры
	               |ИЗ
	               |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	               |ГДЕ
	               |	ДоговорыКонтрагентов.УстановленСрокОплаты
	               |	И ДоговорыКонтрагентов.СрокОплаты > &КороткийСрок
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Контрагент,
	               |	Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВЫРАЗИТЬ(ДоговорыКонтрагентов.Владелец КАК Справочник.Контрагенты) КАК Контрагент,
	               |	ВЫРАЗИТЬ(ДоговорыКонтрагентов.Ссылка КАК Справочник.ДоговорыКонтрагентов) КАК Договор
	               |ПОМЕСТИТЬ ВТ_ДоговорыПоВидамАктивов
	               |ИЗ
	               |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	               |ГДЕ
	               |	ДоговорыКонтрагентов.ВидАктива В(&ИсключаемыеВидыАктиваАвансов)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Контрагент,
	               |	Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СНД,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт КАК СНК,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СКД,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СКК,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
	               |				И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
	               |						И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
	               |					ТОГДА ЛОЖЬ
	               |				ИНАЧЕ ВЫБОР
	               |						КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
	               |								ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
	               |							ТОГДА ИСТИНА
	               |						ИНАЧЕ ВЫБОР
	               |								КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
	               |										ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
	               |									ТОГДА ЛОЖЬ
	               |								ИНАЧЕ ИСТИНА
	               |							КОНЕЦ
	               |					КОНЕЦ
	               |			КОНЕЦ
	               |	КОНЕЦ КАК ОтражатьВДебиторской,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
	               |				И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
	               |			ТОГДА ВЫБОР
	               |					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |						ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |					ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |				КОНЕЦ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
	               |						И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
	               |					ТОГДА ВЫБОР
	               |							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |								ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |							ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |						КОНЕЦ
	               |				ИНАЧЕ 0
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Дельта,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт <> 0
	               |				И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт <> 0
	               |			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ПереводДвК,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт <> 0
	               |				И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт <> 0
	               |			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ПереводКвД
	               |ПОМЕСТИТЬ ВТ_ВсеДанныеАПСчетовПоСрочности
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&АПСчетаПоСрочности), &СубконтоКонтрагентыДоговоры, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Контрагент,
	               |	Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВсеДанныеАПСчетовПоСрочности.Счет КАК Счет,
	               |	ВТ_ВсеДанныеАПСчетовПоСрочности.Контрагент КАК Контрагент,
	               |	ВТ_ВсеДанныеАПСчетовПоСрочности.Договор КАК Договор,
	               |	ВТ_ВсеДанныеАПСчетовПоСрочности.СНД КАК СНД,
	               |	ВТ_ВсеДанныеАПСчетовПоСрочности.СНК КАК СНК,
	               |	ВЫБОР
	               |		КОГДА ВТ_ВсеДанныеАПСчетовПоСрочности.ОтражатьВДебиторской
	               |			ТОГДА ВТ_ВсеДанныеАПСчетовПоСрочности.ДО
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ДО,
	               |	ВЫБОР
	               |		КОГДА ВТ_ВсеДанныеАПСчетовПоСрочности.ОтражатьВДебиторской
	               |			ТОГДА ВТ_ВсеДанныеАПСчетовПоСрочности.КО
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК КО,
	               |	ВТ_ВсеДанныеАПСчетовПоСрочности.СКД КАК СКД,
	               |	ВТ_ВсеДанныеАПСчетовПоСрочности.СКК КАК СКК,
	               |	ВЫБОР
	               |		КОГДА ВТ_ВсеДанныеАПСчетовПоСрочности.ОтражатьВДебиторской
	               |			ТОГДА ВТ_ВсеДанныеАПСчетовПоСрочности.Дельта
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Дельта,
	               |	ВТ_ВсеДанныеАПСчетовПоСрочности.ПереводДвК КАК ПереводДвК,
	               |	ВТ_ВсеДанныеАПСчетовПоСрочности.ПереводКвД КАК ПереводКвД
	               |ПОМЕСТИТЬ ВТ_ДанныеАПСчетовПоСрочности
	               |ИЗ
	               |	ВТ_ВсеДанныеАПСчетовПоСрочности КАК ВТ_ВсеДанныеАПСчетовПоСрочности
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДолгосрочныеДоговоры КАК ВТ_ДолгосрочныеДоговоры
	               |		ПО (ВТ_ДолгосрочныеДоговоры.Контрагент = ВТ_ВсеДанныеАПСчетовПоСрочности.Контрагент)
	               |			И (ВТ_ДолгосрочныеДоговоры.Договор = ВТ_ВсеДанныеАПСчетовПоСрочности.Договор)
	               |ГДЕ
	               |	ВТ_ДолгосрочныеДоговоры.Договор ЕСТЬ NULL
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СНД,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СКД,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
	               |				И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
	               |			ТОГДА ВЫБОР
	               |					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |						ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |					ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |				КОНЕЦ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
	               |						И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
	               |					ТОГДА ВЫБОР
	               |							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |								ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |							ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |						КОНЕЦ
	               |				ИНАЧЕ 0
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Дельта
	               |ПОМЕСТИТЬ ВТ_ВсеДанныеОсобыхСчетовПоСрочности
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&ОсобыеСчетаПоСрочности), &СубконтоКонтрагентыДоговоры, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Контрагент,
	               |	Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.Счет КАК Счет,
	               |	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.Контрагент КАК Контрагент,
	               |	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.Договор КАК Договор,
	               |	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.СНД КАК СНД,
	               |	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.ДО КАК ДО,
	               |	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.КО КАК КО,
	               |	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.СКД КАК СКД,
	               |	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.Дельта КАК Дельта
	               |ПОМЕСТИТЬ ВТ_ДанныеОсобыхСчетовПоСрочности
	               |ИЗ
	               |	ВТ_ВсеДанныеОсобыхСчетовПоСрочности КАК ВТ_ВсеДанныеОсобыхСчетовПоСрочности
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДолгосрочныеДоговоры КАК ВТ_ДолгосрочныеДоговоры
	               |		ПО (ВТ_ДолгосрочныеДоговоры.Контрагент = ВТ_ВсеДанныеОсобыхСчетовПоСрочности.Контрагент)
	               |			И (ВТ_ДолгосрочныеДоговоры.Договор = ВТ_ВсеДанныеОсобыхСчетовПоСрочности.Договор)
	               |ГДЕ
	               |	ВТ_ДолгосрочныеДоговоры.Договор ЕСТЬ NULL
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СНД,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СКД,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
	               |				И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
	               |			ТОГДА ВЫБОР
	               |					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |						ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |					ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |				КОНЕЦ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
	               |						И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
	               |					ТОГДА ВЫБОР
	               |							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |								ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |							ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |						КОНЕЦ
	               |				ИНАЧЕ 0
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Дельта
	               |ПОМЕСТИТЬ ВТ_ВсеДанныеСчетовПоСрочности
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаПоСрочности), &СубконтоКонтрагентыДоговоры, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Контрагент,
	               |	Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВсеДанныеСчетовПоСрочности.Счет КАК Счет,
	               |	ВТ_ВсеДанныеСчетовПоСрочности.Контрагент КАК Контрагент,
	               |	ВТ_ВсеДанныеСчетовПоСрочности.Договор КАК Договор,
	               |	ВТ_ВсеДанныеСчетовПоСрочности.СНД КАК СНД,
	               |	ВТ_ВсеДанныеСчетовПоСрочности.ДО КАК ДО,
	               |	ВТ_ВсеДанныеСчетовПоСрочности.КО КАК КО,
	               |	ВТ_ВсеДанныеСчетовПоСрочности.СКД КАК СКД,
	               |	ВТ_ВсеДанныеСчетовПоСрочности.Дельта КАК Дельта
	               |ПОМЕСТИТЬ ВТ_ДанныеСчетовПоСрочности
	               |ИЗ
	               |	ВТ_ВсеДанныеСчетовПоСрочности КАК ВТ_ВсеДанныеСчетовПоСрочности
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДолгосрочныеДоговоры КАК ВТ_ДолгосрочныеДоговоры
	               |		ПО (ВТ_ДолгосрочныеДоговоры.Контрагент = ВТ_ВсеДанныеСчетовПоСрочности.Контрагент)
	               |			И (ВТ_ДолгосрочныеДоговоры.Договор = ВТ_ВсеДанныеСчетовПоСрочности.Договор)
	               |ГДЕ
	               |	ВТ_ДолгосрочныеДоговоры.Договор ЕСТЬ NULL
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъединениеДанных.Счет КАК Счет,
	               |	СУММА(ОбъединениеДанных.СНД) КАК СНД,
	               |	СУММА(ОбъединениеДанных.СНК) КАК СНК,
	               |	СУММА(ВЫБОР
	               |			КОГДА ОбъединениеДанных.ОтражатьВДебиторской
	               |				ТОГДА ОбъединениеДанных.ДО
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК ДО,
	               |	СУММА(ВЫБОР
	               |			КОГДА ОбъединениеДанных.ОтражатьВДебиторской
	               |				ТОГДА ОбъединениеДанных.КО
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК КО,
	               |	СУММА(ОбъединениеДанных.СКД) КАК СКД,
	               |	СУММА(ОбъединениеДанных.СКК) КАК СКК,
	               |	СУММА(ВЫБОР
	               |			КОГДА ОбъединениеДанных.ОтражатьВДебиторской
	               |				ТОГДА ОбъединениеДанных.Дельта
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК Дельта,
	               |	СУММА(ОбъединениеДанных.ПереводДвК) КАК ПереводДвК,
	               |	СУММА(ОбъединениеДанных.ПереводКвД) КАК ПереводКвД
	               |ПОМЕСТИТЬ ВТ_ДанныеСчетовРазвернуто
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
	               |		ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Перечисление.ВидыПлатежейВГосБюджет) КАК Субконто1,
	               |		NULL КАК Субконто2,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СНД,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт КАК СНК,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СКД,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СКК,
	               |		ВЫБОР
	               |			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
	               |					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
	               |							И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
	               |						ТОГДА ЛОЖЬ
	               |					ИНАЧЕ ВЫБОР
	               |							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
	               |									ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
	               |								ТОГДА ИСТИНА
	               |							ИНАЧЕ ВЫБОР
	               |									КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
	               |											ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
	               |										ТОГДА ЛОЖЬ
	               |									ИНАЧЕ ИСТИНА
	               |								КОНЕЦ
	               |						КОНЕЦ
	               |				КОНЕЦ
	               |		КОНЕЦ КАК ОтражатьВДебиторской,
	               |		ВЫБОР
	               |			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
	               |					И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
	               |				ТОГДА ВЫБОР
	               |						КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |							ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |						ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |					КОНЕЦ
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
	               |							И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
	               |						ТОГДА ВЫБОР
	               |								КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |									ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |								ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |							КОНЕЦ
	               |					ИНАЧЕ 0
	               |				КОНЕЦ
	               |		КОНЕЦ КАК Дельта,
	               |		ВЫБОР
	               |			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт <> 0
	               |					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт <> 0
	               |				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
	               |			ИНАЧЕ 0
	               |		КОНЕЦ КАК ПереводДвК,
	               |		ВЫБОР
	               |			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт <> 0
	               |					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт <> 0
	               |				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
	               |			ИНАЧЕ 0
	               |		КОНЕЦ КАК ПереводКвД
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаПоВидамПлатежей), &СубконтоВидыПлатежей, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ХозрасчетныйОстаткиИОбороты.Счет,
	               |		ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Перечисление.ВидыПлатежейВГосБюджет),
	               |		ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Перечисление.УровниБюджетов),
	               |		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаОборотКт,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт,
	               |		ВЫБОР
	               |			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
	               |					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
	               |							И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
	               |						ТОГДА ЛОЖЬ
	               |					ИНАЧЕ ВЫБОР
	               |							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
	               |									ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
	               |								ТОГДА ИСТИНА
	               |							ИНАЧЕ ВЫБОР
	               |									КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
	               |											ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
	               |										ТОГДА ЛОЖЬ
	               |									ИНАЧЕ ИСТИНА
	               |								КОНЕЦ
	               |						КОНЕЦ
	               |				КОНЕЦ
	               |		КОНЕЦ,
	               |		ВЫБОР
	               |			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
	               |					И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
	               |				ТОГДА ВЫБОР
	               |						КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |							ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |						ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |					КОНЕЦ
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
	               |							И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
	               |						ТОГДА ВЫБОР
	               |								КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |									ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |								ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |							КОНЕЦ
	               |					ИНАЧЕ 0
	               |				КОНЕЦ
	               |		КОНЕЦ,
	               |		ВЫБОР
	               |			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт <> 0
	               |					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт <> 0
	               |				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
	               |			ИНАЧЕ 0
	               |		КОНЕЦ,
	               |		ВЫБОР
	               |			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт <> 0
	               |					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт <> 0
	               |				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
	               |			ИНАЧЕ 0
	               |		КОНЕЦ
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаПоВидамПлатежейУровням), &СубконтоВидыПлатежейУровни, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ХозрасчетныйОстаткиИОбороты.Счет,
	               |		ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.ФизическиеЛица),
	               |		NULL,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаОборотКт,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт,
	               |		ВЫБОР
	               |			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
	               |					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
	               |							И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
	               |						ТОГДА ЛОЖЬ
	               |					ИНАЧЕ ВЫБОР
	               |							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
	               |									ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
	               |								ТОГДА ИСТИНА
	               |							ИНАЧЕ ВЫБОР
	               |									КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
	               |											ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
	               |										ТОГДА ЛОЖЬ
	               |									ИНАЧЕ ИСТИНА
	               |								КОНЕЦ
	               |						КОНЕЦ
	               |				КОНЕЦ
	               |		КОНЕЦ,
	               |		ВЫБОР
	               |			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
	               |					И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
	               |				ТОГДА ВЫБОР
	               |						КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |							ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |						ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |					КОНЕЦ
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
	               |							И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
	               |						ТОГДА ВЫБОР
	               |								КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |									ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |								ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |							КОНЕЦ
	               |					ИНАЧЕ 0
	               |				КОНЕЦ
	               |		КОНЕЦ,
	               |		ВЫБОР
	               |			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт <> 0
	               |					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт <> 0
	               |				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
	               |			ИНАЧЕ 0
	               |		КОНЕЦ,
	               |		ВЫБОР
	               |			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт <> 0
	               |					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт <> 0
	               |				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
	               |			ИНАЧЕ 0
	               |		КОНЕЦ
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаПоРаботникам), &СубконтоРаботники, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ХозрасчетныйОстаткиИОбороты.Счет,
	               |		ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты),
	               |		NULL,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаОборотКт,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт,
	               |		ВЫБОР
	               |			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
	               |					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
	               |							И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
	               |						ТОГДА ЛОЖЬ
	               |					ИНАЧЕ ВЫБОР
	               |							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
	               |									ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
	               |								ТОГДА ИСТИНА
	               |							ИНАЧЕ ВЫБОР
	               |									КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
	               |											ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
	               |										ТОГДА ЛОЖЬ
	               |									ИНАЧЕ ИСТИНА
	               |								КОНЕЦ
	               |						КОНЕЦ
	               |				КОНЕЦ
	               |		КОНЕЦ,
	               |		ВЫБОР
	               |			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
	               |					И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
	               |				ТОГДА ВЫБОР
	               |						КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |							ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |						ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |					КОНЕЦ
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
	               |							И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
	               |						ТОГДА ВЫБОР
	               |								КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |									ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |								ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |							КОНЕЦ
	               |					ИНАЧЕ 0
	               |				КОНЕЦ
	               |		КОНЕЦ,
	               |		ВЫБОР
	               |			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт <> 0
	               |					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт <> 0
	               |				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
	               |			ИНАЧЕ 0
	               |		КОНЕЦ,
	               |		ВЫБОР
	               |			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт <> 0
	               |					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт <> 0
	               |				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
	               |			ИНАЧЕ 0
	               |		КОНЕЦ
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаПоКонтрагентам), &СубконтоКонтрагенты, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ХозрасчетныйОстаткиИОбороты.Счет,
	               |		ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты),
	               |		ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Справочник.ДоговорыКонтрагентов),
	               |		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаОборотКт,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт,
	               |		ВЫБОР
	               |			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
	               |					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
	               |							И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
	               |						ТОГДА ЛОЖЬ
	               |					ИНАЧЕ ВЫБОР
	               |							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
	               |									ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
	               |								ТОГДА ИСТИНА
	               |							ИНАЧЕ ВЫБОР
	               |									КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
	               |											ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
	               |										ТОГДА ЛОЖЬ
	               |									ИНАЧЕ ИСТИНА
	               |								КОНЕЦ
	               |						КОНЕЦ
	               |				КОНЕЦ
	               |		КОНЕЦ,
	               |		ВЫБОР
	               |			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
	               |					И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
	               |				ТОГДА ВЫБОР
	               |						КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |							ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |						ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |					КОНЕЦ
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
	               |							И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
	               |						ТОГДА ВЫБОР
	               |								КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |									ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |								ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |							КОНЕЦ
	               |					ИНАЧЕ 0
	               |				КОНЕЦ
	               |		КОНЕЦ,
	               |		ВЫБОР
	               |			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт <> 0
	               |					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт <> 0
	               |				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
	               |			ИНАЧЕ 0
	               |		КОНЕЦ,
	               |		ВЫБОР
	               |			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт <> 0
	               |					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт <> 0
	               |				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
	               |			ИНАЧЕ 0
	               |		КОНЕЦ
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаПоКонтрагентамДоговорам), &СубконтоКонтрагентыДоговоры, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ХозрасчетныйОстаткиИОбороты.Счет,
	               |		NULL,
	               |		NULL,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаОборотКт,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт,
	               |		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт,
	               |		ВЫБОР
	               |			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
	               |					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
	               |							И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
	               |						ТОГДА ЛОЖЬ
	               |					ИНАЧЕ ВЫБОР
	               |							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
	               |									ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
	               |								ТОГДА ИСТИНА
	               |							ИНАЧЕ ВЫБОР
	               |									КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
	               |											ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
	               |										ТОГДА ЛОЖЬ
	               |									ИНАЧЕ ИСТИНА
	               |								КОНЕЦ
	               |						КОНЕЦ
	               |				КОНЕЦ
	               |		КОНЕЦ,
	               |		ВЫБОР
	               |			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
	               |					И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
	               |				ТОГДА ВЫБОР
	               |						КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |							ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |						ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |					КОНЕЦ
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
	               |							И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
	               |						ТОГДА ВЫБОР
	               |								КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |									ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |								ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |							КОНЕЦ
	               |					ИНАЧЕ 0
	               |				КОНЕЦ
	               |		КОНЕЦ,
	               |		ВЫБОР
	               |			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт <> 0
	               |					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт <> 0
	               |				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
	               |			ИНАЧЕ 0
	               |		КОНЕЦ,
	               |		ВЫБОР
	               |			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт <> 0
	               |					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт <> 0
	               |				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
	               |			ИНАЧЕ 0
	               |		КОНЕЦ
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&АПСчетаБезРазвертки), , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовРазвернутоПереопределяемый.Счет,
	               |		ВТ_ДанныеСчетовРазвернутоПереопределяемый.Субконто1,
	               |		ВТ_ДанныеСчетовРазвернутоПереопределяемый.Субконто2,
	               |		ВТ_ДанныеСчетовРазвернутоПереопределяемый.СНД,
	               |		ВТ_ДанныеСчетовРазвернутоПереопределяемый.СНК,
	               |		ВТ_ДанныеСчетовРазвернутоПереопределяемый.ДО,
	               |		ВТ_ДанныеСчетовРазвернутоПереопределяемый.КО,
	               |		ВТ_ДанныеСчетовРазвернутоПереопределяемый.СКД,
	               |		ВТ_ДанныеСчетовРазвернутоПереопределяемый.СКК,
	               |		ВТ_ДанныеСчетовРазвернутоПереопределяемый.ОтражатьВДебиторской,
	               |		ВТ_ДанныеСчетовРазвернутоПереопределяемый.Дельта,
	               |		ВТ_ДанныеСчетовРазвернутоПереопределяемый.ПереводДвК,
	               |		ВТ_ДанныеСчетовРазвернутоПереопределяемый.ПереводКвД
	               |	ИЗ
	               |		ВТ_ДанныеСчетовРазвернутоПереопределяемый КАК ВТ_ДанныеСчетовРазвернутоПереопределяемый) КАК ОбъединениеДанных
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъединениеДанных.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СНД,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СКД,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
	               |				И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
	               |			ТОГДА ВЫБОР
	               |					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |						ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |					ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |				КОНЕЦ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
	               |						И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
	               |					ТОГДА ВЫБОР
	               |							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |								ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |							ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |						КОНЕЦ
	               |				ИНАЧЕ 0
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Дельта
	               |ПОМЕСТИТЬ ВТ_ДанныеСчетовБезОбработки
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаБезОбработки), , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СНД,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СКД,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
	               |				И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
	               |			ТОГДА ВЫБОР
	               |					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |						ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |					ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |				КОНЕЦ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
	               |						И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
	               |					ТОГДА ВЫБОР
	               |							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |								ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |							ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |						КОНЕЦ
	               |				ИНАЧЕ 0
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Дельта
	               |ПОМЕСТИТЬ ВТ_ДанныеСчетовПоВидуАктива
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			Период,
	               |			,
	               |			Счет В (&СчетаВидуАктива),
	               |			&СубконтоРасходыБудущихПериодов,
	               |			Организация = &Организация
	               |				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.РасходыБудущихПериодов).ВидАктива = ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ДебиторскаяЗадолженность)) КАК ХозрасчетныйОстаткиИОбороты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СНД,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СКД,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
	               |				И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
	               |			ТОГДА ВЫБОР
	               |					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |						ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |					ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |				КОНЕЦ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
	               |						И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
	               |					ТОГДА ВЫБОР
	               |							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |								ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |							ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |						КОНЕЦ
	               |				ИНАЧЕ 0
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Дельта
	               |ПОМЕСТИТЬ ВТ_ДанныеСчетовАвансовБезВидовАктива
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			Период,
	               |			,
	               |			Счет В (&СчетаАвансовПоВидуАктива),
	               |			&СубконтоКонтрагентыДоговоры,
	               |			Организация = &Организация
	               |				И НЕ ВЫРАЗИТЬ(Субконто2 КАК Справочник.ДоговорыКонтрагентов).ВидАктива В (&ИсключаемыеВидыАктиваАвансов)) КАК ХозрасчетныйОстаткиИОбороты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗНАЧЕНИЕ(документ.ДокументРасчетовСКонтрагентом.ПустаяСсылка) КАК СФПолученный,
	               |	ЗНАЧЕНИЕ(справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	               |	ЗНАЧЕНИЕ(справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор
	               |ПОМЕСТИТЬ ВТ_ВсеСФПолученные
	               |ГДЕ
	               |	ЛОЖЬ
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Контрагент,
	               |	Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВсеСФПолученные.СФПолученный КАК СФПолученный
	               |ПОМЕСТИТЬ ВТ_СФПолученные
	               |ИЗ
	               |	ВТ_ВсеСФПолученные КАК ВТ_ВсеСФПолученные
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДолгосрочныеДоговоры КАК ВТ_ДолгосрочныеДоговоры
	               |		ПО (ВТ_ДолгосрочныеДоговоры.Контрагент = ВТ_ВсеСФПолученные.Контрагент)
	               |			И (ВТ_ДолгосрочныеДоговоры.Договор = ВТ_ВсеСФПолученные.Договор)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	СФПолученный
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВсеСФПолученные.СФПолученный КАК СФПолученный
	               |ПОМЕСТИТЬ ВТ_СФПолученныеПоВидуАктивов
	               |ИЗ
	               |	ВТ_ВсеСФПолученные КАК ВТ_ВсеСФПолученные
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДоговорыПоВидамАктивов КАК ВТ_ДоговорыПоВидамАктивов
	               |		ПО (ВТ_ДоговорыПоВидамАктивов.Контрагент = ВТ_ВсеСФПолученные.Контрагент)
	               |			И (ВТ_ДоговорыПоВидамАктивов.Договор = ВТ_ВсеСФПолученные.Договор)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	СФПолученный
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
	               |	ХозрасчетныйОстаткиИОбороты.Субконто2 КАК СФПолученный,
	               |	-1 * ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СНК,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
	               |	-1 * ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СКК,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
	               |				И ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
	               |			ТОГДА ВЫБОР
	               |					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |						ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |					ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |				КОНЕЦ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
	               |						И ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
	               |					ТОГДА ВЫБОР
	               |							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |								ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |							ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |						КОНЕЦ
	               |				ИНАЧЕ 0
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Дельта
	               |ПОМЕСТИТЬ ВТ_ВсеДанныеНДСАвансов
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаПоНДСАвансов), &СубконтоКонтрагентыСФПолученные, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	СФПолученный
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
	               |	ХозрасчетныйОстаткиИОбороты.Субконто2 КАК СФПолученный,
	               |	-1 * ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СНК,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
	               |	-1 * ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СКК,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
	               |				И ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
	               |			ТОГДА ВЫБОР
	               |					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |						ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |					ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |				КОНЕЦ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
	               |						И ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
	               |					ТОГДА ВЫБОР
	               |							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |								ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
	               |							ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
	               |						КОНЕЦ
	               |				ИНАЧЕ 0
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Дельта
	               |ПОМЕСТИТЬ ВТ_ВсеДанныеНДСАвансовПоВидамАктивов
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаНДСАвансовПоВидуАктива), &СубконтоКонтрагентыСФПолученные, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	СФПолученный
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВсеДанныеНДСАвансов.Счет КАК Счет,
	               |	СУММА(ВТ_ВсеДанныеНДСАвансов.СНК) КАК СНК,
	               |	СУММА(ВТ_ВсеДанныеНДСАвансов.ДО) КАК ДО,
	               |	СУММА(ВТ_ВсеДанныеНДСАвансов.КО) КАК КО,
	               |	СУММА(ВТ_ВсеДанныеНДСАвансов.СКК) КАК СКК,
	               |	СУММА(ВТ_ВсеДанныеНДСАвансов.Дельта) КАК Дельта
	               |ПОМЕСТИТЬ ВТ_ДанныеНДСАвансов
	               |ИЗ
	               |	ВТ_ВсеДанныеНДСАвансов КАК ВТ_ВсеДанныеНДСАвансов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СФПолученные КАК ВТ_СФПолученные
	               |		ПО ВТ_ВсеДанныеНДСАвансов.СФПолученный = ВТ_СФПолученные.СФПолученный
	               |ГДЕ
	               |	ВТ_СФПолученные.СФПолученный ЕСТЬ NULL
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ВсеДанныеНДСАвансов.Счет
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВТ_ВсеДанныеНДСАвансовПоВидамАктивов.Счет,
	               |	СУММА(ВТ_ВсеДанныеНДСАвансовПоВидамАктивов.СНК),
	               |	СУММА(ВТ_ВсеДанныеНДСАвансовПоВидамАктивов.ДО),
	               |	СУММА(ВТ_ВсеДанныеНДСАвансовПоВидамАктивов.КО),
	               |	СУММА(ВТ_ВсеДанныеНДСАвансовПоВидамАктивов.СКК),
	               |	СУММА(ВТ_ВсеДанныеНДСАвансовПоВидамАктивов.Дельта)
	               |ИЗ
	               |	ВТ_ВсеДанныеНДСАвансовПоВидамАктивов КАК ВТ_ВсеДанныеНДСАвансовПоВидамАктивов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СФПолученныеПоВидуАктивов КАК ВТ_СФПолученныеПоВидуАктивов
	               |		ПО ВТ_ВсеДанныеНДСАвансовПоВидамАктивов.СФПолученный = ВТ_СФПолученныеПоВидуАктивов.СФПолученный
	               |ГДЕ
	               |	ВТ_СФПолученныеПоВидуАктивов.СФПолученный ЕСТЬ NULL
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ВсеДанныеНДСАвансовПоВидамАктивов.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
	               |	-1 * ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СНК,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
	               |	-1 * ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СКК
	               |ПОМЕСТИТЬ ВТ_ВсеДанныеРезервов
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаПоРезервам), &СубконтоКонтрагентыДоговоры, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Контрагент,
	               |	Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
	               |	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.Контрагенты) КАК Контрагент,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот КАК ОБ
	               |ПОМЕСТИТЬ ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			Период,
	               |			СчетДт = &Счет_91_02,
	               |			&СубконтоПрочиеДоходыРасходы,
	               |			СчетКт В (&АПСчетаПоСрочности)
	               |				ИЛИ СчетКт В (&ОсобыеСчетаПоСрочности)
	               |				ИЛИ СчетКт В (&СчетаПоСрочности),
	               |			&СубконтоКонтрагентыДоговоры,
	               |			Организация = &Организация
	               |				И СубконтоДт1.ВидПрочихДоходовИРасходов = &ВидПДРСписание) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Контрагент,
	               |	Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности.СчетДт КАК СчетДт,
	               |	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности.СчетКт КАК СчетКт,
	               |	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности.Контрагент КАК Контрагент,
	               |	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности.Договор КАК Договор,
	               |	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности.ОБ КАК ОБ
	               |ПОМЕСТИТЬ ВТ_ДанныеСписанияЗадолженностиПоСрочности
	               |ИЗ
	               |	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности КАК ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДолгосрочныеДоговоры КАК ВТ_ДолгосрочныеДоговоры
	               |		ПО (ВТ_ДолгосрочныеДоговоры.Контрагент = ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности.Контрагент)
	               |			И (ВТ_ДолгосрочныеДоговоры.Договор = ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности.Договор)
	               |ГДЕ
	               |	ВТ_ДолгосрочныеДоговоры.Договор ЕСТЬ NULL
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
	               |	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот КАК ОБ
	               |ПОМЕСТИТЬ ВТ_ДанныеСписанияЗадолженности
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			Период,
	               |			СчетДт = &Счет_91_02,
	               |			&СубконтоПрочиеДоходыРасходы,
	               |			СчетКт В (&СчетаБезОбработки)
	               |				ИЛИ СчетКт В (&СчетаПоКонтрагентам)
	               |				ИЛИ СчетКт В (&СчетаПоРаботникам)
	               |				ИЛИ СчетКт В (&АПСчетаБезРазвертки),
	               |			,
	               |			Организация = &Организация
	               |				И СубконтоДт1.ВидПрочихДоходовИРасходов = &ВидПДРСписание) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СчетДт,
	               |	ХозрасчетныйОборотыДтКт.СчетКт,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			Период,
	               |			СчетДт = &Счет_91_02,
	               |			&СубконтоПрочиеДоходыРасходы,
	               |			СчетКт В (&СчетаАвансовПоВидуАктива),
	               |			&СубконтоКонтрагентыДоговоры,
	               |			Организация = &Организация
	               |				И ВЫРАЗИТЬ(СубконтоДт1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности)
	               |				И НЕ ВЫРАЗИТЬ(СубконтоКт2 КАК Справочник.ДоговорыКонтрагентов).ВидАктива В (&ИсключаемыеВидыАктиваАвансов)) КАК ХозрасчетныйОборотыДтКт
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
	               |	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.Контрагенты) КАК Контрагент,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот КАК ОБ
	               |ПОМЕСТИТЬ ВТ_ВсеДанныеНачисленияПроцентовШтрафовПоСрочности
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			Период,
	               |			СчетДт В (&АПСчетаПоСрочности)
	               |				ИЛИ СчетДт В (&ОсобыеСчетаПоСрочности)
	               |				ИЛИ СчетДт В (&СчетаПоСрочности),
	               |			&СубконтоКонтрагентыДоговоры,
	               |			СчетКт = &Счет_91_01,
	               |			&СубконтоПрочиеДоходыРасходы,
	               |			Организация = &Организация
	               |				И СубконтоКт1.ВидПрочихДоходовИРасходов = &ВидПДРНачисление) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Контрагент,
	               |	Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВсеДанныеНачисленияПроцентовШтрафовПоСрочности.СчетДт КАК СчетДт,
	               |	ВТ_ВсеДанныеНачисленияПроцентовШтрафовПоСрочности.СчетКт КАК СчетКт,
	               |	ВТ_ВсеДанныеНачисленияПроцентовШтрафовПоСрочности.Контрагент КАК Контрагент,
	               |	ВТ_ВсеДанныеНачисленияПроцентовШтрафовПоСрочности.Договор КАК Договор,
	               |	ВТ_ВсеДанныеНачисленияПроцентовШтрафовПоСрочности.ОБ КАК ОБ
	               |ПОМЕСТИТЬ ВТ_ДанныеНачисленияПроцентовШтрафовПоСрочности
	               |ИЗ
	               |	ВТ_ВсеДанныеНачисленияПроцентовШтрафовПоСрочности КАК ВТ_ВсеДанныеНачисленияПроцентовШтрафовПоСрочности
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДолгосрочныеДоговоры КАК ВТ_ДолгосрочныеДоговоры
	               |		ПО (ВТ_ДолгосрочныеДоговоры.Контрагент = ВТ_ВсеДанныеНачисленияПроцентовШтрафовПоСрочности.Контрагент)
	               |			И (ВТ_ДолгосрочныеДоговоры.Договор = ВТ_ВсеДанныеНачисленияПроцентовШтрафовПоСрочности.Договор)
	               |ГДЕ
	               |	ВТ_ДолгосрочныеДоговоры.Договор ЕСТЬ NULL
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
	               |	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот КАК ОБ
	               |ПОМЕСТИТЬ ВТ_ДанныеНачисленияПроцентовШтрафовПоВидуАктива
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			Период,
	               |			СчетДт В (&СчетаВидуАктива),
	               |			&СубконтоРасходыБудущихПериодов,
	               |			СчетКт = &Счет_91_01,
	               |			,
	               |			Организация = &Организация
	               |				И ВЫРАЗИТЬ(СубконтоДт1 КАК Справочник.РасходыБудущихПериодов).ВидАктива = ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ДебиторскаяЗадолженность)) КАК ХозрасчетныйОборотыДтКт
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
	               |	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот КАК ОБ
	               |ПОМЕСТИТЬ ВТ_ДанныеНачисленияПроцентовШтрафов
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			Период,
	               |			СчетДт В (&СчетаБезОбработки)
	               |				ИЛИ СчетДт В (&СчетаПоРаботникам)
	               |				ИЛИ СчетДт В (&СчетаПоКонтрагентамДоговорам),
	               |			,
	               |			СчетКт = &Счет_91_01,
	               |			&СубконтоПрочиеДоходыРасходы,
	               |			Организация = &Организация
	               |				И СубконтоКт1.ВидПрочихДоходовИРасходов = &ВидПДРНачисление) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СчетДт,
	               |	ХозрасчетныйОборотыДтКт.СчетКт,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			Период,
	               |			СчетДт В (&СчетаАвансовПоВидуАктива),
	               |			&СубконтоКонтрагентыДоговоры,
	               |			СчетКт = &Счет_91_01,
	               |			&СубконтоПрочиеДоходыРасходы,
	               |			Организация = &Организация
	               |				И ВЫРАЗИТЬ(СубконтоКт1 КАК Справочник.ПрочиеДоходыИРасходы).ВидПрочихДоходовИРасходов = &ВидПДРНачисление
	               |				И НЕ ВЫРАЗИТЬ(СубконтоДт2 КАК Справочник.ДоговорыКонтрагентов).ВидАктива В (&ИсключаемыеВидыАктиваАвансов)) КАК ХозрасчетныйОборотыДтКт
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъединениеДанных.Счет КАК Счет,
	               |	ОбъединениеДанных.Контрагент КАК Контрагент,
	               |	ОбъединениеДанных.Договор КАК Договор,
	               |	ОбъединениеДанных.СНД КАК СНД
	               |ПОМЕСТИТЬ ВТ_Графа04_КонтрагентыДоговоры
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВТ_ДанныеАПСчетовПоСрочности.Счет КАК Счет,
	               |		ВТ_ДанныеАПСчетовПоСрочности.Контрагент КАК Контрагент,
	               |		ВТ_ДанныеАПСчетовПоСрочности.Договор КАК Договор,
	               |		ВТ_ДанныеАПСчетовПоСрочности.СНД КАК СНД
	               |	ИЗ
	               |		ВТ_ДанныеАПСчетовПоСрочности КАК ВТ_ДанныеАПСчетовПоСрочности
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.Счет,
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.Контрагент,
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.Договор,
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.СНД
	               |	ИЗ
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности КАК ВТ_ДанныеОсобыхСчетовПоСрочности
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовПоСрочности.Счет,
	               |		ВТ_ДанныеСчетовПоСрочности.Контрагент,
	               |		ВТ_ДанныеСчетовПоСрочности.Договор,
	               |		ВТ_ДанныеСчетовПоСрочности.СНД
	               |	ИЗ
	               |		ВТ_ДанныеСчетовПоСрочности КАК ВТ_ДанныеСчетовПоСрочности) КАК ОбъединениеДанных
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъединениеДанных.Счет КАК Счет,
	               |	СУММА(ОбъединениеДанных.СНД) КАК СНД
	               |ПОМЕСТИТЬ ВТ_Графа04_Итог
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВТ_Графа04_КонтрагентыДоговоры.Счет КАК Счет,
	               |		ВТ_Графа04_КонтрагентыДоговоры.СНД КАК СНД
	               |	ИЗ
	               |		ВТ_Графа04_КонтрагентыДоговоры КАК ВТ_Графа04_КонтрагентыДоговоры
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовРазвернуто.Счет,
	               |		ВТ_ДанныеСчетовРазвернуто.СНД
	               |	ИЗ
	               |		ВТ_ДанныеСчетовРазвернуто КАК ВТ_ДанныеСчетовРазвернуто
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовПоВидуАктива.Счет,
	               |		ВТ_ДанныеСчетовПоВидуАктива.СНД
	               |	ИЗ
	               |		ВТ_ДанныеСчетовПоВидуАктива КАК ВТ_ДанныеСчетовПоВидуАктива
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовБезОбработки.Счет,
	               |		ВТ_ДанныеСчетовБезОбработки.СНД
	               |	ИЗ
	               |		ВТ_ДанныеСчетовБезОбработки КАК ВТ_ДанныеСчетовБезОбработки
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовАвансовБезВидовАктива.Счет,
	               |		ВТ_ДанныеСчетовАвансовБезВидовАктива.СНД
	               |	ИЗ
	               |		ВТ_ДанныеСчетовАвансовБезВидовАктива КАК ВТ_ДанныеСчетовАвансовБезВидовАктива) КАК ОбъединениеДанных
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъединениеДанных.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаГрафы04.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_Графа04_Итог.СНД, 0) КАК Значение
	               |ПОМЕСТИТЬ ВТ_Графа04
	               |ИЗ
	               |	ВТ_СчетаГрафы04 КАК ВТ_СчетаГрафы04
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа04_Итог КАК ВТ_Графа04_Итог
	               |		ПО ВТ_СчетаГрафы04.Счет = ВТ_Графа04_Итог.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаНДСАвансов.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_ДанныеНДСАвансов.СНК, 0) КАК Значение
	               |ПОМЕСТИТЬ ВТ_Графа04_НДС
	               |ИЗ
	               |	ВТ_СчетаНДСАвансов КАК ВТ_СчетаНДСАвансов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеНДСАвансов КАК ВТ_ДанныеНДСАвансов
	               |		ПО ВТ_СчетаНДСАвансов.Счет = ВТ_ДанныеНДСАвансов.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъединениеДанных.Счет КАК Счет,
	               |	ОбъединениеДанных.Контрагент КАК Контрагент,
	               |	ОбъединениеДанных.Договор КАК Договор,
	               |	ОбъединениеДанных.СКД КАК СКД
	               |ПОМЕСТИТЬ ВТ_Графа12_КонтрагентыДоговоры
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВТ_ДанныеАПСчетовПоСрочности.Счет КАК Счет,
	               |		ВТ_ДанныеАПСчетовПоСрочности.Контрагент КАК Контрагент,
	               |		ВТ_ДанныеАПСчетовПоСрочности.Договор КАК Договор,
	               |		ВТ_ДанныеАПСчетовПоСрочности.СКД КАК СКД
	               |	ИЗ
	               |		ВТ_ДанныеАПСчетовПоСрочности КАК ВТ_ДанныеАПСчетовПоСрочности
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.Счет,
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.Контрагент,
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.Договор,
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.СКД
	               |	ИЗ
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности КАК ВТ_ДанныеОсобыхСчетовПоСрочности
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовПоСрочности.Счет,
	               |		ВТ_ДанныеСчетовПоСрочности.Контрагент,
	               |		ВТ_ДанныеСчетовПоСрочности.Договор,
	               |		ВТ_ДанныеСчетовПоСрочности.СКД
	               |	ИЗ
	               |		ВТ_ДанныеСчетовПоСрочности КАК ВТ_ДанныеСчетовПоСрочности) КАК ОбъединениеДанных
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъединениеДанных.Счет КАК Счет,
	               |	СУММА(ОбъединениеДанных.СКД) КАК СКД
	               |ПОМЕСТИТЬ ВТ_Графа12_Итог
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВТ_Графа12_КонтрагентыДоговоры.Счет КАК Счет,
	               |		ВТ_Графа12_КонтрагентыДоговоры.СКД КАК СКД
	               |	ИЗ
	               |		ВТ_Графа12_КонтрагентыДоговоры КАК ВТ_Графа12_КонтрагентыДоговоры
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовРазвернуто.Счет,
	               |		ВТ_ДанныеСчетовРазвернуто.СКД
	               |	ИЗ
	               |		ВТ_ДанныеСчетовРазвернуто КАК ВТ_ДанныеСчетовРазвернуто
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовПоВидуАктива.Счет,
	               |		ВТ_ДанныеСчетовПоВидуАктива.СКД
	               |	ИЗ
	               |		ВТ_ДанныеСчетовПоВидуАктива КАК ВТ_ДанныеСчетовПоВидуАктива
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовБезОбработки.Счет,
	               |		ВТ_ДанныеСчетовБезОбработки.СКД
	               |	ИЗ
	               |		ВТ_ДанныеСчетовБезОбработки КАК ВТ_ДанныеСчетовБезОбработки
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовАвансовБезВидовАктива.Счет,
	               |		ВТ_ДанныеСчетовАвансовБезВидовАктива.СКД
	               |	ИЗ
	               |		ВТ_ДанныеСчетовАвансовБезВидовАктива КАК ВТ_ДанныеСчетовАвансовБезВидовАктива) КАК ОбъединениеДанных
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъединениеДанных.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаГрафы12.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_Графа12_Итог.СКД, 0) КАК Значение
	               |ПОМЕСТИТЬ ВТ_Графа12
	               |ИЗ
	               |	ВТ_СчетаГрафы12 КАК ВТ_СчетаГрафы12
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа12_Итог КАК ВТ_Графа12_Итог
	               |		ПО ВТ_СчетаГрафы12.Счет = ВТ_Графа12_Итог.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаНДСАвансов.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_ДанныеНДСАвансов.СКК, 0) КАК Значение
	               |ПОМЕСТИТЬ ВТ_Графа12_НДС
	               |ИЗ
	               |	ВТ_СчетаНДСАвансов КАК ВТ_СчетаНДСАвансов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеНДСАвансов КАК ВТ_ДанныеНДСАвансов
	               |		ПО ВТ_СчетаНДСАвансов.Счет = ВТ_ДанныеНДСАвансов.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъединениеДанных.Счет КАК Счет,
	               |	СУММА(ОбъединениеДанных.ДО) КАК ДО,
	               |	СУММА(ОбъединениеДанных.Дельта) КАК Дельта
	               |ПОМЕСТИТЬ ВТ_Графа06_Итог
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВТ_ДанныеАПСчетовПоСрочности.Счет КАК Счет,
	               |		ВТ_ДанныеАПСчетовПоСрочности.ДО КАК ДО,
	               |		ВТ_ДанныеАПСчетовПоСрочности.Дельта КАК Дельта
	               |	ИЗ
	               |		ВТ_ДанныеАПСчетовПоСрочности КАК ВТ_ДанныеАПСчетовПоСрочности
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.Счет,
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.ДО,
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.Дельта
	               |	ИЗ
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности КАК ВТ_ДанныеОсобыхСчетовПоСрочности
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовПоСрочности.Счет,
	               |		ВТ_ДанныеСчетовПоСрочности.ДО,
	               |		ВТ_ДанныеСчетовПоСрочности.Дельта
	               |	ИЗ
	               |		ВТ_ДанныеСчетовПоСрочности КАК ВТ_ДанныеСчетовПоСрочности
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовРазвернуто.Счет,
	               |		ВТ_ДанныеСчетовРазвернуто.ДО,
	               |		ВТ_ДанныеСчетовРазвернуто.Дельта
	               |	ИЗ
	               |		ВТ_ДанныеСчетовРазвернуто КАК ВТ_ДанныеСчетовРазвернуто
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовПоВидуАктива.Счет,
	               |		ВТ_ДанныеСчетовПоВидуАктива.ДО,
	               |		ВТ_ДанныеСчетовПоВидуАктива.Дельта
	               |	ИЗ
	               |		ВТ_ДанныеСчетовПоВидуАктива КАК ВТ_ДанныеСчетовПоВидуАктива
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовБезОбработки.Счет,
	               |		ВТ_ДанныеСчетовБезОбработки.ДО,
	               |		ВТ_ДанныеСчетовБезОбработки.Дельта
	               |	ИЗ
	               |		ВТ_ДанныеСчетовБезОбработки КАК ВТ_ДанныеСчетовБезОбработки
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовАвансовБезВидовАктива.Счет,
	               |		ВТ_ДанныеСчетовАвансовБезВидовАктива.ДО,
	               |		ВТ_ДанныеСчетовАвансовБезВидовАктива.Дельта
	               |	ИЗ
	               |		ВТ_ДанныеСчетовАвансовБезВидовАктива КАК ВТ_ДанныеСчетовАвансовБезВидовАктива) КАК ОбъединениеДанных
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъединениеДанных.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаГрафы06.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_Графа06_Итог.ДО, 0) КАК ДО,
	               |	ЕСТЬNULL(ВТ_Графа06_Итог.Дельта, 0) КАК Дельта
	               |ПОМЕСТИТЬ ВТ_Графа06
	               |ИЗ
	               |	ВТ_СчетаГрафы06 КАК ВТ_СчетаГрафы06
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа06_Итог КАК ВТ_Графа06_Итог
	               |		ПО ВТ_СчетаГрафы06.Счет = ВТ_Графа06_Итог.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаНДСАвансов.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_ДанныеНДСАвансов.КО, 0) КАК КО,
	               |	ЕСТЬNULL(ВТ_ДанныеНДСАвансов.Дельта, 0) КАК Дельта
	               |ПОМЕСТИТЬ ВТ_Графа06_НДС
	               |ИЗ
	               |	ВТ_СчетаНДСАвансов КАК ВТ_СчетаНДСАвансов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеНДСАвансов КАК ВТ_ДанныеНДСАвансов
	               |		ПО ВТ_СчетаНДСАвансов.Счет = ВТ_ДанныеНДСАвансов.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъединениеДанных.Счет КАК Счет,
	               |	ОбъединениеДанных.Контрагент КАК Контрагент,
	               |	ОбъединениеДанных.Договор КАК Договор,
	               |	ОбъединениеДанных.КО КАК КО,
	               |	ОбъединениеДанных.Дельта КАК Дельта
	               |ПОМЕСТИТЬ ВТ_Графа08_КонтрагентыДоговоры
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВТ_ДанныеАПСчетовПоСрочности.Счет КАК Счет,
	               |		ВТ_ДанныеАПСчетовПоСрочности.Контрагент КАК Контрагент,
	               |		ВТ_ДанныеАПСчетовПоСрочности.Договор КАК Договор,
	               |		ВТ_ДанныеАПСчетовПоСрочности.КО КАК КО,
	               |		ВТ_ДанныеАПСчетовПоСрочности.Дельта КАК Дельта
	               |	ИЗ
	               |		ВТ_ДанныеАПСчетовПоСрочности КАК ВТ_ДанныеАПСчетовПоСрочности
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.Счет,
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.Контрагент,
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.Договор,
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.КО,
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности.Дельта
	               |	ИЗ
	               |		ВТ_ДанныеОсобыхСчетовПоСрочности КАК ВТ_ДанныеОсобыхСчетовПоСрочности
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовПоСрочности.Счет,
	               |		ВТ_ДанныеСчетовПоСрочности.Контрагент,
	               |		ВТ_ДанныеСчетовПоСрочности.Договор,
	               |		ВТ_ДанныеСчетовПоСрочности.КО,
	               |		ВТ_ДанныеСчетовПоСрочности.Дельта
	               |	ИЗ
	               |		ВТ_ДанныеСчетовПоСрочности КАК ВТ_ДанныеСчетовПоСрочности) КАК ОбъединениеДанных
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъединениеДанных.Счет КАК Счет,
	               |	СУММА(ОбъединениеДанных.КО) КАК КО,
	               |	СУММА(ОбъединениеДанных.Дельта) КАК Дельта
	               |ПОМЕСТИТЬ ВТ_Графа08_Итог
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВТ_Графа08_КонтрагентыДоговоры.Счет КАК Счет,
	               |		ВТ_Графа08_КонтрагентыДоговоры.КО КАК КО,
	               |		ВТ_Графа08_КонтрагентыДоговоры.Дельта КАК Дельта
	               |	ИЗ
	               |		ВТ_Графа08_КонтрагентыДоговоры КАК ВТ_Графа08_КонтрагентыДоговоры
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовРазвернуто.Счет,
	               |		ВТ_ДанныеСчетовРазвернуто.КО,
	               |		ВТ_ДанныеСчетовРазвернуто.Дельта
	               |	ИЗ
	               |		ВТ_ДанныеСчетовРазвернуто КАК ВТ_ДанныеСчетовРазвернуто
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовПоВидуАктива.Счет,
	               |		ВТ_ДанныеСчетовПоВидуАктива.КО,
	               |		ВТ_ДанныеСчетовПоВидуАктива.Дельта
	               |	ИЗ
	               |		ВТ_ДанныеСчетовПоВидуАктива КАК ВТ_ДанныеСчетовПоВидуАктива
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовБезОбработки.Счет,
	               |		ВТ_ДанныеСчетовБезОбработки.КО,
	               |		ВТ_ДанныеСчетовБезОбработки.Дельта
	               |	ИЗ
	               |		ВТ_ДанныеСчетовБезОбработки КАК ВТ_ДанныеСчетовБезОбработки
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовАвансовБезВидовАктива.Счет,
	               |		ВТ_ДанныеСчетовАвансовБезВидовАктива.КО,
	               |		ВТ_ДанныеСчетовАвансовБезВидовАктива.Дельта
	               |	ИЗ
	               |		ВТ_ДанныеСчетовАвансовБезВидовАктива КАК ВТ_ДанныеСчетовАвансовБезВидовАктива) КАК ОбъединениеДанных
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъединениеДанных.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаГрафы08.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_Графа08_Итог.КО, 0) КАК КО,
	               |	ЕСТЬNULL(ВТ_Графа08_Итог.Дельта, 0) КАК Дельта
	               |ПОМЕСТИТЬ ВТ_Графа08
	               |ИЗ
	               |	ВТ_СчетаГрафы08 КАК ВТ_СчетаГрафы08
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа08_Итог КАК ВТ_Графа08_Итог
	               |		ПО ВТ_СчетаГрафы08.Счет = ВТ_Графа08_Итог.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаНДСАвансов.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_ДанныеНДСАвансов.ДО, 0) КАК ДО,
	               |	ЕСТЬNULL(ВТ_ДанныеНДСАвансов.Дельта, 0) КАК Дельта
	               |ПОМЕСТИТЬ ВТ_Графа08_НДС
	               |ИЗ
	               |	ВТ_СчетаНДСАвансов КАК ВТ_СчетаНДСАвансов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеНДСАвансов КАК ВТ_ДанныеНДСАвансов
	               |		ПО ВТ_СчетаНДСАвансов.Счет = ВТ_ДанныеНДСАвансов.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ДанныеНачисленияПроцентовШтрафовПоСрочности.СчетДт КАК СчетДт,
	               |	ВТ_ДанныеНачисленияПроцентовШтрафовПоСрочности.СчетКт КАК СчетКт,
	               |	СУММА(ВТ_ДанныеНачисленияПроцентовШтрафовПоСрочности.ОБ) КАК ОБ
	               |ПОМЕСТИТЬ ВТ_Графа07_Итог
	               |ИЗ
	               |	ВТ_ДанныеНачисленияПроцентовШтрафовПоСрочности КАК ВТ_ДанныеНачисленияПроцентовШтрафовПоСрочности
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ДанныеНачисленияПроцентовШтрафовПоСрочности.СчетДт,
	               |	ВТ_ДанныеНачисленияПроцентовШтрафовПоСрочности.СчетКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВТ_ДанныеНачисленияПроцентовШтрафовПоВидуАктива.СчетДт,
	               |	ВТ_ДанныеНачисленияПроцентовШтрафовПоВидуАктива.СчетКт,
	               |	ВТ_ДанныеНачисленияПроцентовШтрафовПоВидуАктива.ОБ
	               |ИЗ
	               |	ВТ_ДанныеНачисленияПроцентовШтрафовПоВидуАктива КАК ВТ_ДанныеНачисленияПроцентовШтрафовПоВидуАктива
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВТ_ДанныеНачисленияПроцентовШтрафов.СчетДт,
	               |	ВТ_ДанныеНачисленияПроцентовШтрафов.СчетКт,
	               |	ВТ_ДанныеНачисленияПроцентовШтрафов.ОБ
	               |ИЗ
	               |	ВТ_ДанныеНачисленияПроцентовШтрафов КАК ВТ_ДанныеНачисленияПроцентовШтрафов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаГрафы07.Счет КАК СчетДт,
	               |	&Счет_91_01 КАК СчетКт,
	               |	ЕСТЬNULL(ВТ_Графа07_Итог.ОБ, 0) КАК Значение
	               |ПОМЕСТИТЬ ВТ_Графа07
	               |ИЗ
	               |	ВТ_СчетаГрафы07 КАК ВТ_СчетаГрафы07
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа07_Итог КАК ВТ_Графа07_Итог
	               |		ПО ВТ_СчетаГрафы07.Счет = ВТ_Графа07_Итог.СчетДт
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъединениеДанных.СчетДт КАК СчетДт,
	               |	ОбъединениеДанных.СчетКт КАК СчетКт,
	               |	СУММА(ОбъединениеДанных.ОБ) КАК ОБ
	               |ПОМЕСТИТЬ ВТ_Графа09_Итог
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВТ_ДанныеСписанияЗадолженностиПоСрочности.СчетДт КАК СчетДт,
	               |		ВТ_ДанныеСписанияЗадолженностиПоСрочности.СчетКт КАК СчетКт,
	               |		ВТ_ДанныеСписанияЗадолженностиПоСрочности.ОБ КАК ОБ
	               |	ИЗ
	               |		ВТ_ДанныеСписанияЗадолженностиПоСрочности КАК ВТ_ДанныеСписанияЗадолженностиПоСрочности
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСписанияЗадолженности.СчетДт,
	               |		ВТ_ДанныеСписанияЗадолженности.СчетКт,
	               |		ВТ_ДанныеСписанияЗадолженности.ОБ
	               |	ИЗ
	               |		ВТ_ДанныеСписанияЗадолженности КАК ВТ_ДанныеСписанияЗадолженности) КАК ОбъединениеДанных
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъединениеДанных.СчетДт,
	               |	ОбъединениеДанных.СчетКт
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	&Счет_91_02 КАК СчетДт,
	               |	ВТ_СчетаГрафы09.Счет КАК СчетКт,
	               |	ЕСТЬNULL(ВТ_Графа09_Итог.ОБ, 0) КАК Значение
	               |ПОМЕСТИТЬ ВТ_Графа09
	               |ИЗ
	               |	ВТ_СчетаГрафы09 КАК ВТ_СчетаГрафы09
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа09_Итог КАК ВТ_Графа09_Итог
	               |		ПО ВТ_СчетаГрафы09.Счет = ВТ_Графа09_Итог.СчетКт
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъединениеДанных.Счет КАК Счет,
	               |	СУММА(ОбъединениеДанных.ПереводДвК) КАК Перевод
	               |ПОМЕСТИТЬ ВТ_Графа21_Итог
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВТ_ДанныеАПСчетовПоСрочности.Счет КАК Счет,
	               |		ВТ_ДанныеАПСчетовПоСрочности.ПереводДвК КАК ПереводДвК
	               |	ИЗ
	               |		ВТ_ДанныеАПСчетовПоСрочности КАК ВТ_ДанныеАПСчетовПоСрочности
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовРазвернуто.Счет,
	               |		ВТ_ДанныеСчетовРазвернуто.ПереводДвК
	               |	ИЗ
	               |		ВТ_ДанныеСчетовРазвернуто КАК ВТ_ДанныеСчетовРазвернуто) КАК ОбъединениеДанных
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъединениеДанных.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаГрафы21.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_Графа21_Итог.Перевод, 0) КАК Значение
	               |ПОМЕСТИТЬ ВТ_Графа21
	               |ИЗ
	               |	ВТ_СчетаГрафы21 КАК ВТ_СчетаГрафы21
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа21_Итог КАК ВТ_Графа21_Итог
	               |		ПО ВТ_СчетаГрафы21.Счет = ВТ_Графа21_Итог.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъединениеДанных.Счет КАК Счет,
	               |	СУММА(ОбъединениеДанных.ПереводКвД) КАК Перевод
	               |ПОМЕСТИТЬ ВТ_Графа22_Итог
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВТ_ДанныеАПСчетовПоСрочности.Счет КАК Счет,
	               |		ВТ_ДанныеАПСчетовПоСрочности.ПереводКвД КАК ПереводКвД
	               |	ИЗ
	               |		ВТ_ДанныеАПСчетовПоСрочности КАК ВТ_ДанныеАПСчетовПоСрочности
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСчетовРазвернуто.Счет,
	               |		ВТ_ДанныеСчетовРазвернуто.ПереводКвД
	               |	ИЗ
	               |		ВТ_ДанныеСчетовРазвернуто КАК ВТ_ДанныеСчетовРазвернуто) КАК ОбъединениеДанных
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъединениеДанных.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаГрафы22.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_Графа22_Итог.Перевод, 0) КАК Значение
	               |ПОМЕСТИТЬ ВТ_Графа22
	               |ИЗ
	               |	ВТ_СчетаГрафы22 КАК ВТ_СчетаГрафы22
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа22_Итог КАК ВТ_Графа22_Итог
	               |		ПО ВТ_СчетаГрафы22.Счет = ВТ_Графа22_Итог.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Графа04_КонтрагентыДоговоры.Контрагент КАК Контрагент,
	               |	ВТ_Графа04_КонтрагентыДоговоры.Договор КАК Договор
	               |ПОМЕСТИТЬ ВТ_ОбъектыГрафы04
	               |ИЗ
	               |	ВТ_Графа04_КонтрагентыДоговоры КАК ВТ_Графа04_КонтрагентыДоговоры
	               |ГДЕ
	               |	ВТ_Графа04_КонтрагентыДоговоры.СНД <> 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_Графа04_КонтрагентыДоговоры.Контрагент,
	               |	ВТ_Графа04_КонтрагентыДоговоры.Договор
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Контрагент,
	               |	Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВсеДанныеРезервов.Счет КАК Счет,
	               |	СУММА(ВТ_ВсеДанныеРезервов.СНК) КАК СНК
	               |ПОМЕСТИТЬ ВТ_Графа05_Итог
	               |ИЗ
	               |	ВТ_ВсеДанныеРезервов КАК ВТ_ВсеДанныеРезервов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОбъектыГрафы04 КАК ВТ_ОбъектыГрафы04
	               |		ПО ВТ_ВсеДанныеРезервов.Контрагент = ВТ_ОбъектыГрафы04.Контрагент
	               |			И ВТ_ВсеДанныеРезервов.Договор = ВТ_ОбъектыГрафы04.Договор
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ВсеДанныеРезервов.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаГрафы05.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_Графа05_Итог.СНК, 0) КАК Значение
	               |ПОМЕСТИТЬ ВТ_Графа05
	               |ИЗ
	               |	ВТ_СчетаГрафы05 КАК ВТ_СчетаГрафы05
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа05_Итог КАК ВТ_Графа05_Итог
	               |		ПО ВТ_СчетаГрафы05.Счет = ВТ_Графа05_Итог.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Графа12_КонтрагентыДоговоры.Контрагент КАК Контрагент,
	               |	ВТ_Графа12_КонтрагентыДоговоры.Договор КАК Договор
	               |ПОМЕСТИТЬ ВТ_ОбъектыГрафы12
	               |ИЗ
	               |	ВТ_Графа12_КонтрагентыДоговоры КАК ВТ_Графа12_КонтрагентыДоговоры
	               |ГДЕ
	               |	ВТ_Графа12_КонтрагентыДоговоры.СКД <> 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_Графа12_КонтрагентыДоговоры.Контрагент,
	               |	ВТ_Графа12_КонтрагентыДоговоры.Договор
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Контрагент,
	               |	Договор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВсеДанныеРезервов.Счет КАК Счет,
	               |	СУММА(ВТ_ВсеДанныеРезервов.СКК) КАК СКК
	               |ПОМЕСТИТЬ ВТ_Графа13_Итог
	               |ИЗ
	               |	ВТ_ВсеДанныеРезервов КАК ВТ_ВсеДанныеРезервов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОбъектыГрафы12 КАК ВТ_ОбъектыГрафы12
	               |		ПО ВТ_ВсеДанныеРезервов.Контрагент = ВТ_ОбъектыГрафы12.Контрагент
	               |			И ВТ_ВсеДанныеРезервов.Договор = ВТ_ОбъектыГрафы12.Договор
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ВсеДанныеРезервов.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаГрафы13.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_Графа13_Итог.СКК, 0) КАК Значение
	               |ПОМЕСТИТЬ ВТ_Графа13
	               |ИЗ
	               |	ВТ_СчетаГрафы13 КАК ВТ_СчетаГрафы13
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа13_Итог КАК ВТ_Графа13_Итог
	               |		ПО ВТ_СчетаГрафы13.Счет = ВТ_Графа13_Итог.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъединениеДанных.Контрагент КАК Контрагент,
	               |	ОбъединениеДанных.Договор КАК Договор
	               |ПОМЕСТИТЬ ВТ_ОбъектыГраф0809
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВТ_Графа08_КонтрагентыДоговоры.Контрагент КАК Контрагент,
	               |		ВТ_Графа08_КонтрагентыДоговоры.Договор КАК Договор
	               |	ИЗ
	               |		ВТ_Графа08_КонтрагентыДоговоры КАК ВТ_Графа08_КонтрагентыДоговоры
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_ДанныеСписанияЗадолженностиПоСрочности.Контрагент,
	               |		ВТ_ДанныеСписанияЗадолженностиПоСрочности.Договор
	               |	ИЗ
	               |		ВТ_ДанныеСписанияЗадолженностиПоСрочности КАК ВТ_ДанныеСписанияЗадолженностиПоСрочности) КАК ОбъединениеДанных
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъединениеДанных.Контрагент,
	               |	ОбъединениеДанных.Договор
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Договор,
	               |	Контрагент
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВсеДанныеРезервов.Счет КАК Счет,
	               |	СУММА(ВТ_ВсеДанныеРезервов.ДО) КАК ДО
	               |ПОМЕСТИТЬ ВТ_Графа10_Итог
	               |ИЗ
	               |	ВТ_ВсеДанныеРезервов КАК ВТ_ВсеДанныеРезервов
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОбъектыГраф0809 КАК ВТ_ОбъектыГраф0809
	               |		ПО ВТ_ВсеДанныеРезервов.Контрагент = ВТ_ОбъектыГраф0809.Контрагент
	               |			И ВТ_ВсеДанныеРезервов.Договор = ВТ_ОбъектыГраф0809.Договор
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ВсеДанныеРезервов.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_СчетаГрафы10.Счет КАК Счет,
	               |	ЕСТЬNULL(ВТ_Графа10_Итог.ДО, 0) КАК Значение
	               |ПОМЕСТИТЬ ВТ_Графа10
	               |ИЗ
	               |	ВТ_СчетаГрафы10 КАК ВТ_СчетаГрафы10
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа10_Итог КАК ВТ_Графа10_Итог
	               |		ПО ВТ_СчетаГрафы10.Счет = ВТ_Графа10_Итог.Счет";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5552и5572(КонтекстВыполнения, НомерСтроки)
	
	КонтекстСтроки = Новый Структура;
	
	КонтекстСтроки.Вставить("НомерСтроки", НомерСтроки);
	КонтекстСтроки.Вставить("НаименованиеСтроки", "Кредиты");
	
	СчетаКредитов = "67.01, 67.21";
	
	СчетаГрафы04 = СчетаКредитов;
	СчетаГрафы05 = СчетаКредитов;
	СчетаГрафы07 = СчетаКредитов;
	СчетаГрафы08 = СчетаКредитов;
	СчетаГрафы10 = СчетаКредитов;
	
	ПолныйСписокСчетов = СчетаКредитов;
	
	КонтекстСтроки.Вставить("СчетаГрафы04", СчетаГрафы04);
	КонтекстСтроки.Вставить("СчетаГрафы05", СчетаГрафы05);
	КонтекстСтроки.Вставить("СчетаГрафы07", СчетаГрафы07);
	КонтекстСтроки.Вставить("СчетаГрафы08", СчетаГрафы08);
	КонтекстСтроки.Вставить("СчетаГрафы10", СчетаГрафы10);
	
	КонтекстСтроки.Вставить("ПолныйСписокСчетов", ПолныйСписокСчетов);
	
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения53_Долгосрочная(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5553и5573(КонтекстВыполнения, НомерСтроки)
	
	КонтекстСтроки = Новый Структура;
	
	КонтекстСтроки.Вставить("НомерСтроки", НомерСтроки);
	КонтекстСтроки.Вставить("НаименованиеСтроки", "Займы");
	
	СчетаЗаймов = "67.03, 67.23";
	СчетаЦенныхБумаг = "67.05, 67.25";
	
	СчетаГрафы04 = СчетаЗаймов;
	СчетаГрафы05 = СчетаЗаймов;
	СчетаГрафы07 = СчетаЗаймов;
	СчетаГрафы08 = СчетаЗаймов;
	СчетаГрафы10 = СчетаЗаймов;
	
	ПолныйСписокСчетов = СчетаЗаймов;
	
	Если КонтекстВыполнения.КонтекстРаздела.ДатаНачалаПериодаОтчета >= '2015-10-01' Тогда
		СчетаГрафы04 = СчетаГрафы04 + ", " + СчетаЦенныхБумаг;
		СчетаГрафы05 = СчетаГрафы05 + ", " + СчетаЦенныхБумаг;
		СчетаГрафы07 = СчетаГрафы07 + ", " + СчетаЦенныхБумаг;
		СчетаГрафы08 = СчетаГрафы08 + ", " + СчетаЦенныхБумаг;
		СчетаГрафы10 = СчетаГрафы10 + ", " + СчетаЦенныхБумаг;
		
		ПолныйСписокСчетов = ПолныйСписокСчетов + ", " + СчетаЦенныхБумаг;
		
	КонецЕсли;
	
	КонтекстСтроки.Вставить("СчетаГрафы04", СчетаГрафы04);
	КонтекстСтроки.Вставить("СчетаГрафы05", СчетаГрафы05);
	КонтекстСтроки.Вставить("СчетаГрафы07", СчетаГрафы07);
	КонтекстСтроки.Вставить("СчетаГрафы08", СчетаГрафы08);
	КонтекстСтроки.Вставить("СчетаГрафы10", СчетаГрафы10);
	
	КонтекстСтроки.Вставить("ПолныйСписокСчетов", ПолныйСписокСчетов);
	
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения53_Долгосрочная(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5554и5574(КонтекстВыполнения, НомерСтроки)
	
	КонтекстСтроки = Новый Структура;
	
	КонтекстСтроки.Вставить("НомерСтроки", НомерСтроки);
	КонтекстСтроки.Вставить("НаименованиеСтроки", "Прочая");
	
	СчетаПрочие = "60.01, 60.21, 60.31, 60.03, 62.02, 62.22, 62.32, 62.ОТ.1, 62.ОТ.2, 62.ОТ.3, 76.05, 76.25, 76.35, 76.06, 76.26, 76.36, 76.09, 76.29, 76.39, 76.07.2, 76.27.2, 76.37.2, 76.07.1, 76.27.1, 76.37.1";
	СчетаНДСАвансов = "76.АВ";
	
	СчетаПеревода = "76.05, 76.25, 76.35, 76.06, 76.26, 76.36, 76.09, 76.29, 76.39, 76.07.2, 76.27.2, 76.37.2";
	
	СчетаГрафы04 = СчетаПрочие;
	СчетаГрафы05 = СчетаПрочие;
	СчетаГрафы07 = СчетаПрочие;
	СчетаГрафы08 = СчетаПрочие;
	СчетаГрафы10 = СчетаПрочие;
	
	СчетаГрафы21 = СчетаПеревода;
	СчетаГрафы22 = СчетаПеревода;
	
	ПолныйСписокСчетов = СчетаПрочие + ", " + СчетаНДСАвансов;
	
	КонтекстСтроки.Вставить("СчетаГрафы04", СчетаГрафы04);
	КонтекстСтроки.Вставить("СчетаГрафы05", СчетаГрафы05);
	КонтекстСтроки.Вставить("СчетаГрафы07", СчетаГрафы07);
	КонтекстСтроки.Вставить("СчетаГрафы08", СчетаГрафы08);
	КонтекстСтроки.Вставить("СчетаГрафы10", СчетаГрафы10);
	
	КонтекстСтроки.Вставить("СчетаГрафы21", СчетаГрафы21);
	КонтекстСтроки.Вставить("СчетаГрафы22", СчетаГрафы22);
	
 	КонтекстСтроки.Вставить("СчетаНДСАвансов", СчетаНДСАвансов);
	
	КонтекстСтроки.Вставить("ПолныйСписокСчетов", ПолныйСписокСчетов);
	
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения53_Долгосрочная(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения53_Долгосрочная(КонтекстВыполнения)
	
	Организация = КонтекстВыполнения.Организация;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	КонтекстРаздела = КонтекстВыполнения.КонтекстРаздела;
	КонтекстСтроки = КонтекстВыполнения.КонтекстСтроки;
	
	ИмяРаздела = "Пояснения5";
	ДополнительныеПараметрыРасшифровки = Новый Структура("Организация", Организация);
	
	ЗаголовкиГраф = КонтекстРаздела.ЗаголовкиГраф53;
	НачалоПериода = КонтекстРаздела.ДатаНачалаПериодаОтчета;
	КонецПериода  = КонтекстРаздела.ДатаКонцаПериодаОтчета;
	
	НомерСтроки        = КонтекстСтроки.НомерСтроки;
	НаименованиеСтроки = КонтекстСтроки.НаименованиеСтроки;
	ПолныйСписокСчетов = КонтекстСтроки.ПолныйСписокСчетов;
	
	ПараметрыОбработкиСчетов = ПараметрыОбработкиСчетов();
	ПараметрыОбработкиСчетов.РазделятьАвансыПоВидамАктивов = КонтекстРаздела.РазделятьАвансыПоВидамАктивов;
	ПараметрыОбработкиСчетов.ПрименяетсяФСБУ25 = КонтекстРаздела.ПрименяетсяФСБУ25;
	
	ОбработкаСчетов = ПорядокОбработкиСчетов(ПолныйСписокСчетов, ПараметрыОбработкиСчетов);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("КороткийСрок", 365);
	
	Запрос.УстановитьПараметр("СчетаГрафы04", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы04"));
	Запрос.УстановитьПараметр("СчетаГрафы05", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы05"));
	Запрос.УстановитьПараметр("СчетаГрафы07", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы07"));
	Запрос.УстановитьПараметр("СчетаГрафы08", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы08"));
	Запрос.УстановитьПараметр("СчетаГрафы10", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы10"));
	
	Запрос.УстановитьПараметр("СчетаГрафы21", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы21"));
	Запрос.УстановитьПараметр("СчетаГрафы22", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы22"));
	
	Запрос.УстановитьПараметр("СчетаНДСАвансов", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаНДСАвансов"));
	
	Для Каждого СпособОбработки Из ОбработкаСчетов Цикл
		Запрос.УстановитьПараметр(СпособОбработки.Ключ, СпособОбработки.Значение);
	КонецЦикла;
	
	СубконтоВидыПлатежей = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет;
	Запрос.УстановитьПараметр("СубконтоВидыПлатежей", СубконтоВидыПлатежей);
	
	СубконтоВидыПлатежейУровни = Новый Массив;
	СубконтоВидыПлатежейУровни.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет);
	СубконтоВидыПлатежейУровни.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.УровниБюджетов);
	Запрос.УстановитьПараметр("СубконтоВидыПлатежейУровни", СубконтоВидыПлатежейУровни);
	
	СубконтоРаботники = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций;
	Запрос.УстановитьПараметр("СубконтоРаботники", СубконтоРаботники);
	
	СубконтоКонтрагенты = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты;
	Запрос.УстановитьПараметр("СубконтоКонтрагенты", СубконтоКонтрагенты);
	
	СубконтоКонтрагентыДоговоры = Новый Массив;
	СубконтоКонтрагентыДоговоры.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	СубконтоКонтрагентыДоговоры.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	Запрос.УстановитьПараметр("СубконтоКонтрагентыДоговоры", СубконтоКонтрагентыДоговоры);
	
	СубконтоКонтрагентыСФВыданные = Новый Массив;
	СубконтоКонтрагентыСФВыданные.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	СубконтоКонтрагентыСФВыданные.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СФВыданные);
	Запрос.УстановитьПараметр("СубконтоКонтрагентыСФВыданные", СубконтоКонтрагентыСФВыданные);
	
	СубконтоПрочиеДоходыРасходы = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы;
	Запрос.УстановитьПараметр("СубконтоПрочиеДоходыРасходы", СубконтоПрочиеДоходыРасходы);
	
	Запрос.УстановитьПараметр("Счет_67_01", Счет("67.01"));
	Запрос.УстановитьПараметр("Счет_66_01", Счет("66.01"));
	
	Запрос.УстановитьПараметр("Счет_67_21", Счет("67.21"));
	Запрос.УстановитьПараметр("Счет_66_21", Счет("66.21"));
	
	Запрос.УстановитьПараметр("Счет_67_03", Счет("67.03"));
	Запрос.УстановитьПараметр("Счет_66_03", Счет("66.03"));
	
	Запрос.УстановитьПараметр("Счет_67_23", Счет("67.23"));
	Запрос.УстановитьПараметр("Счет_66_23", Счет("66.23"));
	
	Запрос.УстановитьПараметр("Счет_91_02", Счет("91.02"));
	Запрос.УстановитьПараметр("Счет_91_01", Счет("91.01"));
	
	ВидПлатежейШтрафыПени = Новый Массив;
	ВидПлатежейШтрафыПени.Добавить(Перечисления.ВидыПлатежейВГосБюджет.ПениСам);
	ВидПлатежейШтрафыПени.Добавить(Перечисления.ВидыПлатежейВГосБюджет.ПениАкт);
	ВидПлатежейШтрафыПени.Добавить(Перечисления.ВидыПлатежейВГосБюджет.Штраф);
	Запрос.УстановитьПараметр("ВидПлатежейШтрафыПени", ВидПлатежейШтрафыПени);
	
	ВидПДРНачисление = Перечисления.ВидыПрочихДоходовИРасходов.ШтрафыПениНеустойкиКПолучениюУплате;
	Запрос.УстановитьПараметр("ВидПДРНачисление", ВидПДРНачисление);
	
	ВидПДРСписание = Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности;
	Запрос.УстановитьПараметр("ВидПДРСписание", ВидПДРСписание);
	
	СубконтоКонтрагентыСФВыданные = Новый Массив;
	СубконтоКонтрагентыСФВыданные.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	СубконтоКонтрагентыСФВыданные.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СФВыданные);
	Запрос.УстановитьПараметр("СубконтоКонтрагентыСФВыданные", СубконтоКонтрагентыСФВыданные);
	
	УстановитьПолныйТекстЗапроса(Запрос, ТекстЗапросаПояснения53_Долгосрочная(), "СФВыданные");
	Запрос.Выполнить();
	
	ПараметрыРасшифровки = Новый Структура;
	ПараметрыРасшифровки.Вставить("ИмяОтчета", ИмяРаздела);
	ПараметрыРасшифровки.Вставить("ДатаНачалаПериодаОтчета", НачалоПериода);
	ПараметрыРасшифровки.Вставить("ДатаКонцаПериодаОтчета", КонецПериода);
	
	Графа = "04";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВТ_Графа04.Счет КАК Счет,
		|	ВТ_Графа04.Значение КАК Значение,
		|	ВТ_Графа04.СНД КАК СНД
		|ИЗ
		|	ВТ_Графа04 КАК ВТ_Графа04";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		ЗнакСоставляющей = "+";
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на начало периода по кредиту счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты более 365 дней";
		ИначеЕсли ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на начало периода по кредиту счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты более 365 дней";
		ИначеЕсли ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на начало периода по кредиту счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты более 365 дней";
		ИначеЕсли ОбработкаСчетов.СчетаПоКредитамЗаймамПеревод.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамПереводКЦБ.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на начало периода по кредиту счета " + СчетСоставляющей.Код;
		ИначеЕсли ОбработкаСчетов.СчетаПоСрочностиВычет.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(НСтр("ru = 'Сальдо на начало периода по дебету счета %1 по контрагентам и договорам со сроком оплаты более 365 дней'"),
				СчетСоставляющей.Код);
			ЗнакСоставляющей = "-";
			ЗначениеСоставляющей = -Выборка.СНД;
		Иначе
			ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			ЗнакСоставляющей, НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВТ_Графа04_НДС.Счет КАК Счет,
		|	ВТ_Графа04_НДС.Значение КАК Значение
		|ИЗ
		|	ВТ_Графа04_НДС КАК ВТ_Графа04_НДС";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаименованиеСтрокиРасшифровки = "";
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		НаименованиеСоставляющей = "Сальдо на начало периода по дебету счета " + СчетСоставляющей.Код + " по контрагентам и счетам-фактурам выданным по договорам со сроком оплаты более 365 дней";
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"-", НаименованиеСоставляющей,
			-ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя - ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	Графа = "10";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВТ_Графа10.Счет КАК Счет,
		|	ВТ_Графа10.Значение КАК Значение,
		|	ВТ_Графа10.СКД КАК СКД
		|ИЗ
		|	ВТ_Графа10 КАК ВТ_Графа10";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		ЗнакСоставляющей = "+";
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на конец периода по кредиту счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты более 365 дней";
		ИначеЕсли ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на конец периода по кредиту счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты более 365 дней";
		ИначеЕсли ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на конец периода по кредиту счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты более 365 дней";
		ИначеЕсли ОбработкаСчетов.СчетаПоКредитамЗаймамПеревод.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамПереводКЦБ.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на конец периода по кредиту счета " + СчетСоставляющей.Код;
		ИначеЕсли ОбработкаСчетов.СчетаПоСрочностиВычет.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(НСтр("ru = 'Сальдо на конец периода по дебету счета %1 по контрагентам и договорам со сроком оплаты более 365 дней'"),
				СчетСоставляющей.Код);
			ЗнакСоставляющей = "-";
			ЗначениеСоставляющей = -Выборка.СКД;
		Иначе
			ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			ЗнакСоставляющей, НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВТ_Графа10_НДС.Счет КАК Счет,
		|	ВТ_Графа10_НДС.Значение КАК Значение
		|ИЗ
		|	ВТ_Графа10_НДС КАК ВТ_Графа10_НДС";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаименованиеСтрокиРасшифровки = "";
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		НаименованиеСоставляющей = "Сальдо на конец периода по дебету счета " + СчетСоставляющей.Код + " по контрагентам и счетам-фактурам выданным по договорам со сроком оплаты более 365 дней";
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"-", НаименованиеСоставляющей,
			-ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя - ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	Графа = "05";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВТ_Графа05.Счет КАК Счет,
		|	ВТ_Графа05.КО КАК КО,
		|	ВТ_Графа05.Дельта КАК Дельта,
		|	ВТ_Графа05.ДО КАК ДО,
		|	ВТ_Графа05.КОвДО КАК КОвДО
		|ИЗ
		|	ВТ_Графа05 КАК ВТ_Графа05";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.КО;
		ЗнакСоставляющей = "+";
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по кредиту счета " + СчетСоставляющей.Код + ", отражаемые в кредиторской задолженности, по контрагентам и договорам со сроком оплаты более 365 дней";
		ИначеЕсли ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по кредиту счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты более 365 дней";
		ИначеЕсли ОбработкаСчетов.СчетаПоКредитамЗаймамПеревод.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамПереводКЦБ.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по кредиту счета " + СчетСоставляющей.Код;
		ИначеЕсли ОбработкаСчетов.СчетаПоСрочностиВычет.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(НСтр("ru = 'Обороты по дебету счета %1 по контрагентам и договорам со сроком оплаты более 365 дней'"),
				СчетСоставляющей.Код);
			ЗнакСоставляющей = "-";
			ЗначениеСоставляющей = -Выборка.ДО;
		Иначе
			ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			ЗнакСоставляющей, НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
		ЗначениеСоставляющей = -Выборка.Дельта;
		ЗнакСоставляющей = "-";
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по дебету счета " + СчетСоставляющей.Код + " по объектам отраженным в кредитовых оборотах в пределах суммы кредитового оборота";
		ИначеЕсли ОбработкаСчетов.СчетаПоКредитамЗаймамПеревод.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамПереводКЦБ.Найти(СчетСоставляющей) <> Неопределено Тогда
			Продолжить;
		ИначеЕсли ОбработкаСчетов.СчетаПоСрочностиВычет.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(НСтр("ru = 'Обороты по кредиту счета %1 по объектам отраженным в дебетовых оборотах в пределах суммы кредитового оборота'"),
				СчетСоставляющей.Код);
			ЗнакСоставляющей = "+";
			ЗначениеСоставляющей = Выборка.КОвДО;
		Иначе
			ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			ЗнакСоставляющей, НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВТ_Графа05_НДС.Счет КАК Счет,
		|	ВТ_Графа05_НДС.ДО КАК ДО,
		|	ВТ_Графа05_НДС.Дельта КАК Дельта
		|ИЗ
		|	ВТ_Графа05_НДС КАК ВТ_Графа05_НДС";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаименованиеСтрокиРасшифровки = "";
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.ДО;
		
		НаименованиеСоставляющей = "Обороты по дебету счета " + СчетСоставляющей.Код + " по контрагентам и счетам-фактурам по договорам со сроком оплаты более 365 дней";
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"-", НаименованиеСоставляющей,
			-ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя - ЗначениеСоставляющей;
		
		ЗначениеСоставляющей = Выборка.Дельта;
		
		НаименованиеСоставляющей = "Обороты по кредиту счета " + СчетСоставляющей.Код + " по объектам отраженным в дебетовых оборотах в пределах суммы дебетового оборота";
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	Графа = "07";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВТ_Графа07.Счет КАК Счет,
		|	ВТ_Графа07.ДО КАК ДО,
		|	ВТ_Графа07.Дельта КАК Дельта,
		|	ВТ_Графа07.КО КАК КО,
		|	ВТ_Графа07.КОвДО КАК КОвДО
		|ИЗ
		|	ВТ_Графа07 КАК ВТ_Графа07";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.ДО;
		ЗнакСоставляющей = "+";
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по дебету счета " + СчетСоставляющей.Код + ", отражаемые в кредиторской задолженности, по контрагентам и договорам со сроком оплаты более 365 дней";
		ИначеЕсли ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по дебету счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты более 365 дней";
		ИначеЕсли ОбработкаСчетов.СчетаПоКредитамЗаймамПеревод.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамПереводКЦБ.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по дебету счета " + СчетСоставляющей.Код;
		ИначеЕсли ОбработкаСчетов.СчетаПоСрочностиВычет.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(НСтр("ru = 'Обороты по кредиту счета %1 по контрагентам и договорам со сроком оплаты более 365 дней'"),
				СчетСоставляющей.Код);
			ЗнакСоставляющей = "-";
			ЗначениеСоставляющей = -Выборка.КО;
		Иначе
			ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			ЗнакСоставляющей, НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
		ЗначениеСоставляющей = -Выборка.Дельта;
		ЗнакСоставляющей = "-";
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по дебету счета " + СчетСоставляющей.Код + " отраженные в графе """ + ЗаголовкиГраф["05"]+ """";
		ИначеЕсли ОбработкаСчетов.СчетаПоКредитамЗаймамПеревод.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамПереводКЦБ.Найти(СчетСоставляющей) <> Неопределено Тогда
			Продолжить;
		ИначеЕсли ОбработкаСчетов.СчетаПоСрочностиВычет.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(НСтр("ru = 'Обороты по кредиту счета %1 отраженные в графе ""%2""'"),
				СчетСоставляющей.Код, ЗаголовкиГраф["05"]);
			ЗнакСоставляющей = "+";
			ЗначениеСоставляющей = Выборка.КОвДО;
		Иначе
			ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			ЗнакСоставляющей, НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВТ_Графа07_НДС.Счет КАК Счет,
		|	ВТ_Графа07_НДС.КО КАК КО,
		|	ВТ_Графа07_НДС.Дельта КАК Дельта
		|ИЗ
		|	ВТ_Графа07_НДС КАК ВТ_Графа07_НДС";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаименованиеСтрокиРасшифровки = "";
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.КО;
		
		НаименованиеСоставляющей = "Обороты по кредиту счета " + СчетСоставляющей.Код + " по контрагентам и счетам-фактурам по договорам со сроком оплаты более 365 дней";
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"-", НаименованиеСоставляющей,
			-ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя - ЗначениеСоставляющей;
		
		ЗначениеСоставляющей = Выборка.Дельта;
		
		НаименованиеСоставляющей = "Обороты по кредиту счета " + СчетСоставляющей.Код + " отраженные в графе """ + ЗаголовкиГраф["05"]+ """";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	// Вычет графы 8.
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВТ_Графа08.СчетДт КАК СчетДт,
		|	ВТ_Графа08.СчетКт КАК СчетКт,
		|	ВТ_Графа08.Значение КАК Значение
		|ИЗ
		|	ВТ_Графа08 КАК ВТ_Графа08";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаименованиеСтрокиРасшифровки = "";
		
		СчетСоставляющейДт = Выборка.СчетДт;
		СчетСоставляющейКт = Выборка.СчетКт;
		ЗначениеСоставляющей = -Выборка.Значение;
		ЗнакСоставляющей = "-";
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющейДт) <> Неопределено
		 ИЛИ ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющейДт) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющейДт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот с дебета счета " + СчетСоставляющейДт.Код + " по контрагентам и договорам со сроком оплаты более 365 дней в кредит счета "
			                         + СчетСоставляющейКт.Код + " по статьям субконто """ + СубконтоПрочиеДоходыРасходы
			                         + """ с видом """ + ВидПДРСписание + """";
		ИначеЕсли ОбработкаСчетов.СчетаПоКредитамЗаймамПеревод.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамПереводКЦБ.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющейДт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот с дебета счета " + СчетСоставляющейДт.Код + " в кредит счета "
			                         + СчетСоставляющейКт.Код + " по статьям субконто """ + СубконтоПрочиеДоходыРасходы
			                         + """ с видом """ + ВидПДРСписание + """";
		ИначеЕсли ОбработкаСчетов.СчетаПоСрочностиВычет.Найти(СчетСоставляющейКт) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(НСтр("ru = 'Оборот с кредита счета %1 по контрагентам и договорам со сроком оплаты более 365 дней в дебет счета %2 по статьям субконто ""%3"" с видом ""%4""'"),
				СчетСоставляющейКт.Код, СчетСоставляющейДт.Код, СубконтоПрочиеДоходыРасходы, ВидПДРСписание);
			ЗнакСоставляющей = "+";
			ЗначениеСоставляющей = Выборка.Значение;
		Иначе
			ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющейДт.Код + " в графе " + Графа + " строки "+ НомерСтроки;
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			ЗнакСоставляющей, НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // Вычитаемый
	
	Графа = "08";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	
	ЗначениеПоказателя = 0;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВТ_Графа08.СчетДт КАК СчетДт,
		|	ВТ_Графа08.СчетКт КАК СчетКт,
		|	ВТ_Графа08.Значение КАК Значение
		|ИЗ
		|	ВТ_Графа08 КАК ВТ_Графа08";
	
	Выборка = Запрос.Выполнить().Выбрать();
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющейДт = Выборка.СчетДт;
		СчетСоставляющейКт = Выборка.СчетКт;
		ЗначениеСоставляющей = Выборка.Значение;
		ЗнакСоставляющей = "+";
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющейДт) <> Неопределено
		 ИЛИ ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющейДт) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющейДт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот с дебета счета " + СчетСоставляющейДт.Код + " по контрагентам и договорам со сроком оплаты более 365 дней в кредит счета "
			                         + СчетСоставляющейКт.Код + " по статьям субконто """ + СубконтоПрочиеДоходыРасходы
			                         + """ с видом """ + ВидПДРСписание + """";
		ИначеЕсли ОбработкаСчетов.СчетаПоКредитамЗаймамПеревод.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамПереводКЦБ.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющейДт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот с дебета счета " + СчетСоставляющейДт.Код + " в кредит счета "
			                         + СчетСоставляющейКт.Код + " по статьям субконто """ + СубконтоПрочиеДоходыРасходы
			                         + """ с видом """ + ВидПДРСписание + """";
		ИначеЕсли ОбработкаСчетов.СчетаПоСрочностиВычет.Найти(СчетСоставляющейКт) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(НСтр("ru = 'Оборот с кредита счета %1 по контрагентам и договорам со сроком оплаты более 365 дней в дебет счета %2 по статьям субконто ""%3"" с видом ""%4""'"),
				СчетСоставляющейКт.Код, СчетСоставляющейДт.Код, СубконтоПрочиеДоходыРасходы, ВидПДРСписание);
			ЗнакСоставляющей = "-";
			ЗначениеСоставляющей = -Выборка.Значение;
		Иначе
			ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющейДт.Код + " в графе " + Графа + " строки "+ НомерСтроки;
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			ЗнакСоставляющей, НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
	
	Графа = "21";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа21.Счет,
	               |	ВТ_Графа21.Значение
	               |ИЗ
	               |	ВТ_Графа21 КАК ВТ_Графа21";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Переведено из дебиторской в кредиторскую задолженность по счету " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты более 365 дней";
		Иначе
			ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	Графа = "22";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа22.Счет,
	               |	ВТ_Графа22.Значение
	               |ИЗ
	               |	ВТ_Графа22 КАК ВТ_Графа22";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Переведено из кредиторской в дебиторскую задолженность по счету " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты более 365 дней";
		Иначе
			ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
КонецПроцедуры

Функция ТекстЗапросаПояснения53_Долгосрочная()
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	СчетаГрафы04.Счет КАК Счет
		|ПОМЕСТИТЬ ВТ_СчетаГрафы04
		|ИЗ
		|	&СчетаГрафы04 КАК СчетаГрафы04
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаГрафы05.Счет КАК Счет
		|ПОМЕСТИТЬ ВТ_СчетаГрафы05
		|ИЗ
		|	&СчетаГрафы05 КАК СчетаГрафы05
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаГрафы07.Счет КАК Счет
		|ПОМЕСТИТЬ ВТ_СчетаГрафы07
		|ИЗ
		|	&СчетаГрафы07 КАК СчетаГрафы07
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаГрафы08.Счет КАК Счет
		|ПОМЕСТИТЬ ВТ_СчетаГрафы08
		|ИЗ
		|	&СчетаГрафы08 КАК СчетаГрафы08
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаГрафы10.Счет КАК Счет
		|ПОМЕСТИТЬ ВТ_СчетаГрафы10
		|ИЗ
		|	&СчетаГрафы10 КАК СчетаГрафы10
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаГрафы21.Счет КАК Счет
		|ПОМЕСТИТЬ ВТ_СчетаГрафы21
		|ИЗ
		|	&СчетаГрафы21 КАК СчетаГрафы21
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаГрафы22.Счет КАК Счет
		|ПОМЕСТИТЬ ВТ_СчетаГрафы22
		|ИЗ
		|	&СчетаГрафы22 КАК СчетаГрафы22
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаНДСАвансов.Счет КАК Счет
		|ПОМЕСТИТЬ ВТ_СчетаНДСАвансов
		|ИЗ
		|	&СчетаНДСАвансов КАК СчетаНДСАвансов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ДоговорыКонтрагентов.Владелец КАК Справочник.Контрагенты) КАК Контрагент,
		|	ВЫРАЗИТЬ(ДоговорыКонтрагентов.Ссылка КАК Справочник.ДоговорыКонтрагентов) КАК Договор
		|ПОМЕСТИТЬ ВТ_ДолгосрочныеДоговоры
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.УстановленСрокОплаты
		|	И ДоговорыКонтрагентов.СрокОплаты > &КороткийСрок
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СНД,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт КАК СНК,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СКД,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СКК,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
		|				И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
		|						И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
		|								ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
		|							ТОГДА ЛОЖЬ
		|						ИНАЧЕ ВЫБОР
		|								КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
		|										ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
		|									ТОГДА ИСТИНА
		|								ИНАЧЕ ЛОЖЬ
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ОтражатьВКредиторской,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
		|				И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
		|			ТОГДА ВЫБОР
		|					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|						ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|					ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
		|						И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
		|					ТОГДА ВЫБОР
		|							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|								ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|							ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|	КОНЕЦ КАК Дельта,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт <> 0
		|				И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт <> 0
		|			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПереводДвК,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт <> 0
		|				И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт <> 0
		|			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПереводКвД
		|ПОМЕСТИТЬ ВТ_ВсеДанныеАПСчетовПоСрочности
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&АПСчетаПоСрочности), &СубконтоКонтрагентыДоговоры, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеДанныеАПСчетовПоСрочности.Счет КАК Счет,
		|	ВТ_ВсеДанныеАПСчетовПоСрочности.Контрагент КАК Контрагент,
		|	ВТ_ВсеДанныеАПСчетовПоСрочности.Договор КАК Договор,
		|	ВТ_ВсеДанныеАПСчетовПоСрочности.СНД КАК СНД,
		|	ВТ_ВсеДанныеАПСчетовПоСрочности.СНК КАК СНК,
		|	ВЫБОР
		|		КОГДА ВТ_ВсеДанныеАПСчетовПоСрочности.ОтражатьВКредиторской
		|			ТОГДА ВТ_ВсеДанныеАПСчетовПоСрочности.ДО
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ДО,
		|	ВЫБОР
		|		КОГДА ВТ_ВсеДанныеАПСчетовПоСрочности.ОтражатьВКредиторской
		|			ТОГДА ВТ_ВсеДанныеАПСчетовПоСрочности.КО
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КО,
		|	ВЫБОР
		|		КОГДА ВТ_ВсеДанныеАПСчетовПоСрочности.ОтражатьВКредиторской
		|			ТОГДА ВТ_ВсеДанныеАПСчетовПоСрочности.Дельта
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Дельта,
		|	ВТ_ВсеДанныеАПСчетовПоСрочности.СКД КАК СКД,
		|	ВТ_ВсеДанныеАПСчетовПоСрочности.СКК КАК СКК,
		|	ВТ_ВсеДанныеАПСчетовПоСрочности.ПереводДвК КАК ПереводДвК,
		|	ВТ_ВсеДанныеАПСчетовПоСрочности.ПереводКвД КАК ПереводКвД
		|ПОМЕСТИТЬ ВТ_ДанныеАПСчетовПоСрочности
		|ИЗ
		|	ВТ_ВсеДанныеАПСчетовПоСрочности КАК ВТ_ВсеДанныеАПСчетовПоСрочности
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДолгосрочныеДоговоры КАК ВТ_ДолгосрочныеДоговоры
		|		ПО (ВТ_ДолгосрочныеДоговоры.Контрагент = ВТ_ВсеДанныеАПСчетовПоСрочности.Контрагент)
		|			И (ВТ_ДолгосрочныеДоговоры.Договор = ВТ_ВсеДанныеАПСчетовПоСрочности.Договор)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт КАК СНК,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СКК,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
		|				И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
		|			ТОГДА ВЫБОР
		|					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|						ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|					ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
		|						И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
		|					ТОГДА ВЫБОР
		|							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|								ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|							ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|	КОНЕЦ КАК Дельта
		|ПОМЕСТИТЬ ВТ_ВсеДанныеОсобыхСчетовПоСрочности
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&ОсобыеСчетаПоСрочности), &СубконтоКонтрагентыДоговоры, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.Счет КАК Счет,
		|	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.Контрагент КАК Контрагент,
		|	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.Договор КАК Договор,
		|	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.СНК КАК СНК,
		|	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.ДО КАК ДО,
		|	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.КО КАК КО,
		|	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.СКК КАК СКК,
		|	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.Дельта КАК Дельта
		|ПОМЕСТИТЬ ВТ_ДанныеОсобыхСчетовПоСрочности
		|ИЗ
		|	ВТ_ВсеДанныеОсобыхСчетовПоСрочности КАК ВТ_ВсеДанныеОсобыхСчетовПоСрочности
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДолгосрочныеДоговоры КАК ВТ_ДолгосрочныеДоговоры
		|		ПО (ВТ_ДолгосрочныеДоговоры.Контрагент = ВТ_ВсеДанныеОсобыхСчетовПоСрочности.Контрагент)
		|			И (ВТ_ДолгосрочныеДоговоры.Договор = ВТ_ВсеДанныеОсобыхСчетовПоСрочности.Договор)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
		|	-1 * ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СНК,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
		|	-1 * ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СКК,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
		|				И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
		|			ТОГДА ВЫБОР
		|					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|						ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|					ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
		|						И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
		|					ТОГДА ВЫБОР
		|							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|								ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|							ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|	КОНЕЦ КАК Дельта,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СНД,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СКД,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
		|				И ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
		|			ТОГДА ВЫБОР
		|					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|						ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|					ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
		|						И ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
		|					ТОГДА ВЫБОР
		|							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|								ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|							ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|	КОНЕЦ КАК КОвДО
		|ПОМЕСТИТЬ ВТ_ВсеДанныеСчетовПоСрочности
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Период,
		|			,
		|			Счет В (&СчетаПоСрочности)
		|				ИЛИ Счет В (&СчетаПоСрочностиВычет),
		|			&СубконтоКонтрагентыДоговоры,
		|			Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеДанныеСчетовПоСрочности.Счет КАК Счет,
		|	ВТ_ВсеДанныеСчетовПоСрочности.Контрагент КАК Контрагент,
		|	ВТ_ВсеДанныеСчетовПоСрочности.Договор КАК Договор,
		|	ВТ_ВсеДанныеСчетовПоСрочности.СНК КАК СНК,
		|	ВТ_ВсеДанныеСчетовПоСрочности.ДО КАК ДО,
		|	ВТ_ВсеДанныеСчетовПоСрочности.КО КАК КО,
		|	ВТ_ВсеДанныеСчетовПоСрочности.СКК КАК СКК,
		|	ВТ_ВсеДанныеСчетовПоСрочности.Дельта КАК Дельта,
		|	ВТ_ВсеДанныеСчетовПоСрочности.СНД КАК СНД,
		|	ВТ_ВсеДанныеСчетовПоСрочности.СКД КАК СКД,
		|	ВТ_ВсеДанныеСчетовПоСрочности.КОвДО КАК КОвДО
		|ПОМЕСТИТЬ ВТ_ДанныеСчетовПоСрочности
		|ИЗ
		|	ВТ_ВсеДанныеСчетовПоСрочности КАК ВТ_ВсеДанныеСчетовПоСрочности
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДолгосрочныеДоговоры КАК ВТ_ДолгосрочныеДоговоры
		|		ПО (ВТ_ДолгосрочныеДоговоры.Контрагент = ВТ_ВсеДанныеСчетовПоСрочности.Контрагент)
		|			И (ВТ_ДолгосрочныеДоговоры.Договор = ВТ_ВсеДанныеСчетовПоСрочности.Договор)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
		|	-1 * ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СНК,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
		|	-1 * ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СКК,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
		|				И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
		|			ТОГДА ВЫБОР
		|					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|						ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|					ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
		|						И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
		|					ТОГДА ВЫБОР
		|							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|								ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|							ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|	КОНЕЦ КАК Дельта
		|ПОМЕСТИТЬ ВТ_ДанныеСчетовПоКонтрагентамДоговорам
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаПоКонтрагентамДоговорам), &СубконтоКонтрагентыДоговоры, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт КАК СНК,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СКК,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
		|				И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
		|			ТОГДА ВЫБОР
		|					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|						ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|					ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
		|						И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
		|					ТОГДА ВЫБОР
		|							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|								ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|							ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|	КОНЕЦ КАК Дельта
		|ПОМЕСТИТЬ ВТ_ДанныеСчетовБезОбработки
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Период,
		|			,
		|			Счет В (&СчетаПоКредитамЗаймамПеревод)
		|				ИЛИ Счет В (&СчетаПоКредитамЗаймамПереводКЦБ),
		|			,
		|			Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеДанных.Счет КАК Счет,
		|	СУММА(ОбъединениеДанных.СНК) КАК СНК,
		|	СУММА(ОбъединениеДанных.СНД) КАК СНД
		|ПОМЕСТИТЬ ВТ_Графа04_Итог
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_ДанныеАПСчетовПоСрочности.Счет КАК Счет,
		|		ВТ_ДанныеАПСчетовПоСрочности.СНК КАК СНК,
		|		0 КАК СНД
		|	ИЗ
		|		ВТ_ДанныеАПСчетовПоСрочности КАК ВТ_ДанныеАПСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеОсобыхСчетовПоСрочности.Счет,
		|		ВТ_ДанныеОсобыхСчетовПоСрочности.СНК,
		|		0
		|	ИЗ
		|		ВТ_ДанныеОсобыхСчетовПоСрочности КАК ВТ_ДанныеОсобыхСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовПоСрочности.Счет,
		|		ВТ_ДанныеСчетовПоСрочности.СНК,
		|		ВТ_ДанныеСчетовПоСрочности.СНД
		|	ИЗ
		|		ВТ_ДанныеСчетовПоСрочности КАК ВТ_ДанныеСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовБезОбработки.Счет,
		|		ВТ_ДанныеСчетовБезОбработки.СНК,
		|		0
		|	ИЗ
		|		ВТ_ДанныеСчетовБезОбработки КАК ВТ_ДанныеСчетовБезОбработки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовПоКонтрагентамДоговорам.Счет,
		|		ВТ_ДанныеСчетовПоКонтрагентамДоговорам.СНК,
		|		0
		|	ИЗ
		|		ВТ_ДанныеСчетовПоКонтрагентамДоговорам КАК ВТ_ДанныеСчетовПоКонтрагентамДоговорам) КАК ОбъединениеДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеДанных.Счет
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СчетаГрафы04.Счет КАК Счет,
		|	ЕСТЬNULL(ВТ_Графа04_Итог.СНК, 0) КАК Значение,
		|	ЕСТЬNULL(ВТ_Графа04_Итог.СНД, 0) КАК СНД
		|ПОМЕСТИТЬ ВТ_Графа04
		|ИЗ
		|	ВТ_СчетаГрафы04 КАК ВТ_СчетаГрафы04
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа04_Итог КАК ВТ_Графа04_Итог
		|		ПО ВТ_СчетаГрафы04.Счет = ВТ_Графа04_Итог.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеДанных.Счет КАК Счет,
		|	СУММА(ОбъединениеДанных.СКК) КАК СКК,
		|	СУММА(ОбъединениеДанных.СКД) КАК СКД
		|ПОМЕСТИТЬ ВТ_Графа10_Итог
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_ДанныеАПСчетовПоСрочности.Счет КАК Счет,
		|		ВТ_ДанныеАПСчетовПоСрочности.СКК КАК СКК,
		|		0 КАК СКД
		|	ИЗ
		|		ВТ_ДанныеАПСчетовПоСрочности КАК ВТ_ДанныеАПСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеОсобыхСчетовПоСрочности.Счет,
		|		ВТ_ДанныеОсобыхСчетовПоСрочности.СКК,
		|		0
		|	ИЗ
		|		ВТ_ДанныеОсобыхСчетовПоСрочности КАК ВТ_ДанныеОсобыхСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовПоСрочности.Счет,
		|		ВТ_ДанныеСчетовПоСрочности.СКК,
		|		ВТ_ДанныеСчетовПоСрочности.СКД
		|	ИЗ
		|		ВТ_ДанныеСчетовПоСрочности КАК ВТ_ДанныеСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовБезОбработки.Счет,
		|		ВТ_ДанныеСчетовБезОбработки.СКК,
		|		0
		|	ИЗ
		|		ВТ_ДанныеСчетовБезОбработки КАК ВТ_ДанныеСчетовБезОбработки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовПоКонтрагентамДоговорам.Счет,
		|		ВТ_ДанныеСчетовПоКонтрагентамДоговорам.СКК,
		|		0
		|	ИЗ
		|		ВТ_ДанныеСчетовПоКонтрагентамДоговорам КАК ВТ_ДанныеСчетовПоКонтрагентамДоговорам) КАК ОбъединениеДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеДанных.Счет
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СчетаГрафы10.Счет КАК Счет,
		|	ЕСТЬNULL(ВТ_Графа10_Итог.СКК, 0) КАК Значение,
		|	ЕСТЬNULL(ВТ_Графа10_Итог.СКД, 0) КАК СКД
		|ПОМЕСТИТЬ ВТ_Графа10
		|ИЗ
		|	ВТ_СчетаГрафы10 КАК ВТ_СчетаГрафы10
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа10_Итог КАК ВТ_Графа10_Итог
		|		ПО ВТ_СчетаГрафы10.Счет = ВТ_Графа10_Итог.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеДанных.Счет КАК Счет,
		|	СУММА(ОбъединениеДанных.ПереводДвК) КАК Перевод
		|ПОМЕСТИТЬ ВТ_Графа21_Итог
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_ДанныеАПСчетовПоСрочности.Счет КАК Счет,
		|		ВТ_ДанныеАПСчетовПоСрочности.ПереводДвК КАК ПереводДвК
		|	ИЗ
		|		ВТ_ДанныеАПСчетовПоСрочности КАК ВТ_ДанныеАПСчетовПоСрочности) КАК ОбъединениеДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеДанных.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СчетаГрафы21.Счет КАК Счет,
		|	ЕСТЬNULL(ВТ_Графа21_Итог.Перевод, 0) КАК Значение
		|ПОМЕСТИТЬ ВТ_Графа21
		|ИЗ
		|	ВТ_СчетаГрафы21 КАК ВТ_СчетаГрафы21
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа21_Итог КАК ВТ_Графа21_Итог
		|		ПО ВТ_СчетаГрафы21.Счет = ВТ_Графа21_Итог.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеДанных.Счет КАК Счет,
		|	СУММА(ОбъединениеДанных.ПереводКвД) КАК Перевод
		|ПОМЕСТИТЬ ВТ_Графа22_Итог
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_ДанныеАПСчетовПоСрочности.Счет КАК Счет,
		|		ВТ_ДанныеАПСчетовПоСрочности.ПереводКвД КАК ПереводКвД
		|	ИЗ
		|		ВТ_ДанныеАПСчетовПоСрочности КАК ВТ_ДанныеАПСчетовПоСрочности) КАК ОбъединениеДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеДанных.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СчетаГрафы22.Счет КАК Счет,
		|	ЕСТЬNULL(ВТ_Графа22_Итог.Перевод, 0) КАК Значение
		|ПОМЕСТИТЬ ВТ_Графа22
		|ИЗ
		|	ВТ_СчетаГрафы22 КАК ВТ_СчетаГрафы22
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа22_Итог КАК ВТ_Графа22_Итог
		|		ПО ВТ_СчетаГрафы22.Счет = ВТ_Графа22_Итог.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеДанных.Счет КАК Счет,
		|	СУММА(ОбъединениеДанных.КО) КАК КО,
		|	СУММА(ОбъединениеДанных.Дельта) КАК Дельта,
		|	СУММА(ОбъединениеДанных.ДО) КАК ДО,
		|	СУММА(ОбъединениеДанных.КОвДО) КАК КОвДО
		|ПОМЕСТИТЬ ВТ_Графа05_Итог
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_ДанныеАПСчетовПоСрочности.Счет КАК Счет,
		|		ВТ_ДанныеАПСчетовПоСрочности.КО КАК КО,
		|		ВТ_ДанныеАПСчетовПоСрочности.Дельта КАК Дельта,
		|		0 КАК ДО,
		|		0 КАК КОвДО
		|	ИЗ
		|		ВТ_ДанныеАПСчетовПоСрочности КАК ВТ_ДанныеАПСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеОсобыхСчетовПоСрочности.Счет,
		|		ВТ_ДанныеОсобыхСчетовПоСрочности.КО,
		|		ВТ_ДанныеОсобыхСчетовПоСрочности.Дельта,
		|		0,
		|		0
		|	ИЗ
		|		ВТ_ДанныеОсобыхСчетовПоСрочности КАК ВТ_ДанныеОсобыхСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовПоСрочности.Счет,
		|		ВТ_ДанныеСчетовПоСрочности.КО,
		|		ВТ_ДанныеСчетовПоСрочности.Дельта,
		|		ВТ_ДанныеСчетовПоСрочности.ДО,
		|		ВТ_ДанныеСчетовПоСрочности.КОвДО
		|	ИЗ
		|		ВТ_ДанныеСчетовПоСрочности КАК ВТ_ДанныеСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовБезОбработки.Счет,
		|		ВТ_ДанныеСчетовБезОбработки.КО,
		|		ВТ_ДанныеСчетовБезОбработки.Дельта,
		|		0,
		|		0
		|	ИЗ
		|		ВТ_ДанныеСчетовБезОбработки КАК ВТ_ДанныеСчетовБезОбработки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовПоКонтрагентамДоговорам.Счет,
		|		ВТ_ДанныеСчетовПоКонтрагентамДоговорам.КО,
		|		ВТ_ДанныеСчетовПоКонтрагентамДоговорам.Дельта,
		|		0,
		|		0
		|	ИЗ
		|		ВТ_ДанныеСчетовПоКонтрагентамДоговорам КАК ВТ_ДанныеСчетовПоКонтрагентамДоговорам) КАК ОбъединениеДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеДанных.Счет
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СчетаГрафы05.Счет КАК Счет,
		|	ЕСТЬNULL(ВТ_Графа05_Итог.КО, 0) КАК КО,
		|	ЕСТЬNULL(ВТ_Графа05_Итог.Дельта, 0) КАК Дельта,
		|	ЕСТЬNULL(ВТ_Графа05_Итог.ДО, 0) КАК ДО,
		|	ЕСТЬNULL(ВТ_Графа05_Итог.КОвДО, 0) КАК КОвДО
		|ПОМЕСТИТЬ ВТ_Графа05
		|ИЗ
		|	ВТ_СчетаГрафы05 КАК ВТ_СчетаГрафы05
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа05_Итог КАК ВТ_Графа05_Итог
		|		ПО ВТ_СчетаГрафы05.Счет = ВТ_Графа05_Итог.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеДанных.Счет КАК Счет,
		|	СУММА(ОбъединениеДанных.ДО) КАК ДО,
		|	СУММА(ОбъединениеДанных.Дельта) КАК Дельта,
		|	СУММА(ОбъединениеДанных.КО) КАК КО,
		|	СУММА(ОбъединениеДанных.КОвДО) КАК КОвДО
		|ПОМЕСТИТЬ ВТ_Графа07_Итог
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_ДанныеАПСчетовПоСрочности.Счет КАК Счет,
		|		ВТ_ДанныеАПСчетовПоСрочности.ДО КАК ДО,
		|		ВТ_ДанныеАПСчетовПоСрочности.Дельта КАК Дельта,
		|		0 КАК КО,
		|		0 КАК КОвДО
		|	ИЗ
		|		ВТ_ДанныеАПСчетовПоСрочности КАК ВТ_ДанныеАПСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеОсобыхСчетовПоСрочности.Счет,
		|		ВТ_ДанныеОсобыхСчетовПоСрочности.ДО,
		|		ВТ_ДанныеОсобыхСчетовПоСрочности.Дельта,
		|		0,
		|		0
		|	ИЗ
		|		ВТ_ДанныеОсобыхСчетовПоСрочности КАК ВТ_ДанныеОсобыхСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовПоСрочности.Счет,
		|		ВТ_ДанныеСчетовПоСрочности.ДО,
		|		ВТ_ДанныеСчетовПоСрочности.Дельта,
		|		ВТ_ДанныеСчетовПоСрочности.КО,
		|		ВТ_ДанныеСчетовПоСрочности.КОвДО
		|	ИЗ
		|		ВТ_ДанныеСчетовПоСрочности КАК ВТ_ДанныеСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовБезОбработки.Счет,
		|		ВТ_ДанныеСчетовБезОбработки.ДО,
		|		ВТ_ДанныеСчетовБезОбработки.Дельта,
		|		0,
		|		0
		|	ИЗ
		|		ВТ_ДанныеСчетовБезОбработки КАК ВТ_ДанныеСчетовБезОбработки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовПоКонтрагентамДоговорам.Счет,
		|		ВТ_ДанныеСчетовПоКонтрагентамДоговорам.ДО,
		|		ВТ_ДанныеСчетовПоКонтрагентамДоговорам.Дельта,
		|		0,
		|		0
		|	ИЗ
		|		ВТ_ДанныеСчетовПоКонтрагентамДоговорам КАК ВТ_ДанныеСчетовПоКонтрагентамДоговорам) КАК ОбъединениеДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеДанных.Счет
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СчетаГрафы07.Счет КАК Счет,
		|	ЕСТЬNULL(ВТ_Графа07_Итог.ДО, 0) КАК ДО,
		|	ЕСТЬNULL(ВТ_Графа07_Итог.Дельта, 0) КАК Дельта,
		|	ЕСТЬNULL(ВТ_Графа07_Итог.КО, 0) КАК КО,
		|	ЕСТЬNULL(ВТ_Графа07_Итог.КОвДО, 0) КАК КОвДО
		|ПОМЕСТИТЬ ВТ_Графа07
		|ИЗ
		|	ВТ_СчетаГрафы07 КАК ВТ_СчетаГрафы07
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа07_Итог КАК ВТ_Графа07_Итог
		|		ПО ВТ_СчетаГрафы07.Счет = ВТ_Графа07_Итог.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.Контрагенты) КАК Контрагент,
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК ОБ
		|ПОМЕСТИТЬ ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Период,
		|			СчетДт В (&АПСчетаПоСрочности)
		|				ИЛИ СчетДт В (&ОсобыеСчетаПоСрочности)
		|				ИЛИ СчетДт В (&СчетаПоСрочности),
		|			&СубконтоКонтрагентыДоговоры,
		|			СчетКт = &Счет_91_01,
		|			&СубконтоПрочиеДоходыРасходы,
		|			Организация = &Организация
		|				И СубконтоКт1.ВидПрочихДоходовИРасходов = &ВидПДРСписание) КАК ХозрасчетныйОборотыДтКт
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.Контрагенты) КАК Контрагент,
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК ОБ
		|ПОМЕСТИТЬ ВТ_ВсеДанныеСписанияЗадолженностиПоСрочностиВычет
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Период,
		|			СчетДт = &Счет_91_02,
		|			&СубконтоПрочиеДоходыРасходы,
		|			СчетКт В (&СчетаПоСрочностиВычет),
		|			&СубконтоКонтрагентыДоговоры,
		|			Организация = &Организация
		|				И СубконтоДт1.ВидПрочихДоходовИРасходов = &ВидПДРСписание) КАК ХозрасчетныйОборотыДтКт
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности.СчетДт КАК СчетДт,
		|	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности.СчетКт КАК СчетКт,
		|	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности.Контрагент КАК Контрагент,
		|	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности.Договор КАК Договор,
		|	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности.ОБ КАК ОБ
		|ПОМЕСТИТЬ ВТ_ДанныеСписанияЗадолженностиПоСрочности
		|ИЗ
		|	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности КАК ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДолгосрочныеДоговоры КАК ВТ_ДолгосрочныеДоговоры
		|		ПО (ВТ_ДолгосрочныеДоговоры.Контрагент = ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности.Контрагент)
		|			И (ВТ_ДолгосрочныеДоговоры.Договор = ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности.Договор)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочностиВычет.СчетДт КАК СчетДт,
		|	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочностиВычет.СчетКт КАК СчетКт,
		|	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочностиВычет.Контрагент КАК Контрагент,
		|	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочностиВычет.Договор КАК Договор,
		|	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочностиВычет.ОБ КАК ОБ
		|ПОМЕСТИТЬ ВТ_ДанныеСписанияЗадолженностиПоСрочностиВычет
		|ИЗ
		|	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочностиВычет КАК ВТ_ВсеДанныеСписанияЗадолженностиПоСрочностиВычет
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДолгосрочныеДоговоры КАК ВТ_ДолгосрочныеДоговоры
		|		ПО (ВТ_ДолгосрочныеДоговоры.Контрагент = ВТ_ВсеДанныеСписанияЗадолженностиПоСрочностиВычет.Контрагент)
		|			И (ВТ_ДолгосрочныеДоговоры.Договор = ВТ_ВсеДанныеСписанияЗадолженностиПоСрочностиВычет.Договор)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК ОБ
		|ПОМЕСТИТЬ ВТ_ДанныеСписанияЗадолженностиБезОбработки
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Период,
		|			СчетДт В (&СчетаПоКредитамЗаймамПеревод)
		|				ИЛИ СчетДт В (&СчетаПоКредитамЗаймамПереводКЦБ)
		|				ИЛИ СчетДт В (&СчетаПоКонтрагентамДоговорам),
		|			,
		|			СчетКт = &Счет_91_01,
		|			&СубконтоПрочиеДоходыРасходы,
		|			Организация = &Организация
		|				И СубконтоКт1.ВидПрочихДоходовИРасходов = &ВидПДРСписание) КАК ХозрасчетныйОборотыДтКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеДанных.СчетДт КАК СчетДт,
		|	ОбъединениеДанных.СчетКт КАК СчетКт,
		|	СУММА(ОбъединениеДанных.ОБ) КАК ОБ
		|ПОМЕСТИТЬ ВТ_Графа08_Итог
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_ДанныеСписанияЗадолженностиПоСрочности.СчетДт КАК СчетДт,
		|		ВТ_ДанныеСписанияЗадолженностиПоСрочности.СчетКт КАК СчетКт,
		|		ВТ_ДанныеСписанияЗадолженностиПоСрочности.ОБ КАК ОБ
		|	ИЗ
		|		ВТ_ДанныеСписанияЗадолженностиПоСрочности КАК ВТ_ДанныеСписанияЗадолженностиПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСписанияЗадолженностиБезОбработки.СчетДт,
		|		ВТ_ДанныеСписанияЗадолженностиБезОбработки.СчетКт,
		|		ВТ_ДанныеСписанияЗадолженностиБезОбработки.ОБ
		|	ИЗ
		|		ВТ_ДанныеСписанияЗадолженностиБезОбработки КАК ВТ_ДанныеСписанияЗадолженностиБезОбработки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСписанияЗадолженностиПоСрочностиВычет.СчетДт,
		|		ВТ_ДанныеСписанияЗадолженностиПоСрочностиВычет.СчетКт,
		|		ВТ_ДанныеСписанияЗадолженностиПоСрочностиВычет.ОБ
		|	ИЗ
		|		ВТ_ДанныеСписанияЗадолженностиПоСрочностиВычет КАК ВТ_ДанныеСписанияЗадолженностиПоСрочностиВычет) КАК ОбъединениеДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеДанных.СчетДт,
		|	ОбъединениеДанных.СчетКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СчетаГрафы08.Счет КАК Счета,
		|	ВЫБОР
		|		КОГДА НЕ ВТ_СчетаГрафы08.Счет В (&СчетаПоСрочностиВычет)
		|			ТОГДА ВТ_СчетаГрафы08.Счет
		|		ИНАЧЕ &Счет_91_02
		|	КОНЕЦ КАК СчетДт,
		|	ВЫБОР
		|		КОГДА ВТ_СчетаГрафы08.Счет В (&СчетаПоСрочностиВычет)
		|			ТОГДА ВТ_СчетаГрафы08.Счет
		|		ИНАЧЕ &Счет_91_01
		|	КОНЕЦ КАК СчетКт,
		|	ЕСТЬNULL(ВТ_Графа08_Итог.ОБ, 0) КАК Значение
		|ПОМЕСТИТЬ ВТ_Графа08
		|ИЗ
		|	ВТ_СчетаГрафы08 КАК ВТ_СчетаГрафы08
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа08_Итог КАК ВТ_Графа08_Итог
		|		ПО (ВТ_СчетаГрафы08.Счет = ВТ_Графа08_Итог.СчетДт
		|				ИЛИ ВТ_СчетаГрафы08.Счет = ВТ_Графа08_Итог.СчетКт)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(документ.ДокументРасчетовСКонтрагентом.ПустаяСсылка) КАК СФВыданный,
		|	ЗНАЧЕНИЕ(справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
		|	ЗНАЧЕНИЕ(справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор
		|ПОМЕСТИТЬ ВТ_ВсеСФВыданные
		|ГДЕ
		|	ЛОЖЬ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеСФВыданные.СФВыданный КАК СФВыданный
		|ПОМЕСТИТЬ ВТ_СФВыданные
		|ИЗ
		|	ВТ_ВсеСФВыданные КАК ВТ_ВсеСФВыданные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДолгосрочныеДоговоры КАК ВТ_ДолгосрочныеДоговоры
		|		ПО (ВТ_ДолгосрочныеДоговоры.Контрагент = ВТ_ВсеСФВыданные.Контрагент)
		|			И (ВТ_ДолгосрочныеДоговоры.Договор = ВТ_ВсеСФВыданные.Договор)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СФВыданный
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
		|	ХозрасчетныйОстаткиИОбороты.Субконто2 КАК СФВыданный,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СНД,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СКД,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
		|				И ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
		|			ТОГДА ВЫБОР
		|					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|						ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|					ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
		|						И ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
		|					ТОГДА ВЫБОР
		|							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|								ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|							ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|	КОНЕЦ КАК Дельта
		|ПОМЕСТИТЬ ВТ_ВсеДанныеНДСАвансов
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаПоНДСАвансов), &СубконтоКонтрагентыСФВыданные, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СФВыданный
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеДанныеНДСАвансов.Счет КАК Счет,
		|	СУММА(ВТ_ВсеДанныеНДСАвансов.СНД) КАК СНД,
		|	СУММА(ВТ_ВсеДанныеНДСАвансов.ДО) КАК ДО,
		|	СУММА(ВТ_ВсеДанныеНДСАвансов.КО) КАК КО,
		|	СУММА(ВТ_ВсеДанныеНДСАвансов.СКД) КАК СКД,
		|	СУММА(ВТ_ВсеДанныеНДСАвансов.Дельта) КАК Дельта
		|ПОМЕСТИТЬ ВТ_ДанныеНДСАвансов
		|ИЗ
		|	ВТ_СФВыданные КАК ВТ_СФВыданные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВсеДанныеНДСАвансов КАК ВТ_ВсеДанныеНДСАвансов
		|		ПО ВТ_СФВыданные.СФВыданный = ВТ_ВсеДанныеНДСАвансов.СФВыданный
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ВсеДанныеНДСАвансов.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СчетаНДСАвансов.Счет КАК Счет,
		|	ЕСТЬNULL(ВТ_ДанныеНДСАвансов.СНД, 0) КАК Значение
		|ПОМЕСТИТЬ ВТ_Графа04_НДС
		|ИЗ
		|	ВТ_СчетаНДСАвансов КАК ВТ_СчетаНДСАвансов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеНДСАвансов КАК ВТ_ДанныеНДСАвансов
		|		ПО ВТ_СчетаНДСАвансов.Счет = ВТ_ДанныеНДСАвансов.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СчетаНДСАвансов.Счет КАК Счет,
		|	ЕСТЬNULL(ВТ_ДанныеНДСАвансов.СКД, 0) КАК Значение
		|ПОМЕСТИТЬ ВТ_Графа10_НДС
		|ИЗ
		|	ВТ_СчетаНДСАвансов КАК ВТ_СчетаНДСАвансов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеНДСАвансов КАК ВТ_ДанныеНДСАвансов
		|		ПО ВТ_СчетаНДСАвансов.Счет = ВТ_ДанныеНДСАвансов.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СчетаНДСАвансов.Счет КАК Счет,
		|	ЕСТЬNULL(ВТ_ДанныеНДСАвансов.ДО, 0) КАК ДО,
		|	ЕСТЬNULL(ВТ_ДанныеНДСАвансов.Дельта, 0) КАК Дельта
		|ПОМЕСТИТЬ ВТ_Графа05_НДС
		|ИЗ
		|	ВТ_СчетаНДСАвансов КАК ВТ_СчетаНДСАвансов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеНДСАвансов КАК ВТ_ДанныеНДСАвансов
		|		ПО ВТ_СчетаНДСАвансов.Счет = ВТ_ДанныеНДСАвансов.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СчетаНДСАвансов.Счет КАК Счет,
		|	ЕСТЬNULL(ВТ_ДанныеНДСАвансов.КО, 0) КАК КО,
		|	ЕСТЬNULL(ВТ_ДанныеНДСАвансов.Дельта, 0) КАК Дельта
		|ПОМЕСТИТЬ ВТ_Графа07_НДС
		|ИЗ
		|	ВТ_СчетаНДСАвансов КАК ВТ_СчетаНДСАвансов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеНДСАвансов КАК ВТ_ДанныеНДСАвансов
		|		ПО ВТ_СчетаНДСАвансов.Счет = ВТ_ДанныеНДСАвансов.Счет";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5560и5580(КонтекстВыполнения, НомерСтроки)
	
	С2018 = (ПривестиКДате(КонтекстВыполнения.КонтекстРаздела.ДатаКонцаПериодаОтчета) >= '2018-01-01');
	
	УчитыватьСчетаИП2015 = НЕ РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(КонтекстВыполнения.Организация)
	                   И КонтекстВыполнения.Свойство("КонецОтчетногоПериода")
	                   И КонтекстВыполнения.КонецОтчетногоПериода >= '2015-01-01';
	
	КонтекстСтроки = Новый Структура;
	
	КонтекстСтроки.Вставить("НомерСтроки", НомерСтроки);
	КонтекстСтроки.Вставить("НаименованиеСтроки", "Краткосрочная кредиторская задолженность - всего");
	
	СчетаРасчетов = "60.01, 60.21, 60.31, 60.03, 76.16, 76.05, 76.25, 76.35, 76.06, 76.26, 76.36";
	СчетаАвансов  = "62.02, 62.22, 62.32, 62.ОТ.1, 62.ОТ.2, 62.ОТ.3";
	СчетаНДСАвансов = "76.АВ";
	СчетаРасчетовПоНалогам = "68.01.1, 68.01.2, 68.02, 68.03, 68.04.1, 68.06, 68.07, 68.08, 68.09, 68.10, 68.11, 68.12, 68.13, 68.32, 68.42,
	                         |69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7, 69.03.1, 69.03.2,
	                         |69.04, 69.05.1, 69.05.2, 69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.11, 69.12, 69.13.1, 69.13.2";
	СчетаШтрафыПени = "68.01.1, 68.01.2, 68.02, 68.03, 68.04.1, 68.06, 68.07, 68.08, 68.09, 68.10, 68.11, 68.12, 68.13, 68.32, 68.42,
	                  |69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7, 69.03.1, 69.03.2, 69.04,
	                  |69.05.1, 69.05.2, 69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.11, 69.12";
	СчетаКредитов = "66.01, 66.02, 66.21, 66.22, 67.01, 67.02, 67.21, 67.22";
	СчетаЗаймов = "66.03, 66.23, 66.04, 66.24, 67.03, 67.04, 67.23, 67.24";
	СчетаЦенныхБумаг = "67.05, 67.25, 66.05, 66.06, 66.25, 66.26, 67.06, 67.26";
	СчетаПрочие = "70, 71.01, 71.21, 73.03, 75.02, 76.01.1, 76.21, 76.03, 76.04, 76.09, 76.29, 76.39, 76.10, 76.49, 76.41, 76.НА,
	              |76.07.2, 76.27.2, 76.37.2";
	
	СчетаПеревода = "76.01.1, 76.03, 76.21, 76.05, 76.25, 76.35, 76.06, 76.26, 76.36, 68.01.1, 68.01.2, 68.02, 68.03, 68.04.1, 68.06, 68.07, 68.08, 68.09, 68.10, 68.11, 68.12, 68.13,
	                |69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7, 69.03.1, 69.03.2, 69.04, 69.05.1, 69.05.2,
	                |69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.11, 69.12, 69.13.1, 69.13.2,
	                |70, 71.01, 71.21, 73.03, 76.09, 76.29, 76.39, 76.10, 76.49, 76.41, 76.НА, 76.07.2, 76.27.2, 76.37.2";
	
	Если С2018 Тогда
		СчетаРасчетовПоНалогам = СтрЗаменить(СчетаРасчетовПоНалогам, "68.13", "68.13, 68.34, 68.52");
		СчетаШтрафыПени = СтрЗаменить(СчетаШтрафыПени, "68.13", "68.13, 68.34, 68.52");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, "68.13", "68.13, 68.34, 68.52");
	КонецЕсли;
	
	Если УчитыватьСчетаИП2015 Тогда
		СчетаРасчетовПоНалогам = СтрЗаменить(СчетаРасчетовПоНалогам, "68.01.2", "68.01.2, 68.21.1, 68.21.2");
		СчетаРасчетовПоНалогам = СтрЗаменить(СчетаРасчетовПоНалогам, "68.13", "68.13, 68.14");
		СчетаШтрафыПени = СтрЗаменить(СчетаШтрафыПени, "68.01.2", "68.01.2, 68.21.1, 68.21.2");
		СчетаШтрафыПени = СтрЗаменить(СчетаШтрафыПени, "68.13", "68.13, 68.14");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, "68.01.2", "68.01.2, 68.21.1, 68.21.2");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, "68.13", "68.13, 68.14");
	КонецЕсли;
	
	СчетаГрафы04 = СчетаРасчетов + ", "
	             + СчетаАвансов + ", "
	             + СчетаРасчетовПоНалогам + ", "
	             + СчетаКредитов + ", "
	             + СчетаЗаймов + ", "
	             + ?(КонтекстВыполнения.КонтекстРаздела.ДатаНачалаПериодаОтчета >= '2015-10-01', СчетаЦенныхБумаг + ", ", "")
	             + СчетаПрочие;
	СчетаГрафы05 = СчетаРасчетов + ", "
	             + СчетаАвансов + ", "
	             + СчетаРасчетовПоНалогам + ", "
	             + "66.01, 66.21" + ", "
	             + "66.03, 66.23" + ", "
	             + ?(КонтекстВыполнения.КонтекстРаздела.ДатаНачалаПериодаОтчета >= '2015-10-01', "66.05, 66.25" + ", ", "")
	             + СчетаПрочие;
	СчетаГрафы06 = СчетаРасчетов + ", "
	             + СчетаАвансов + ", "
	             + СчетаШтрафыПени + ", "
	             + "66.02, 66.22, 67.02, 67.22" + ", "
	             + "66.04, 66.24, 67.04, 67.24" + ", "
	             + ?(КонтекстВыполнения.КонтекстРаздела.ДатаНачалаПериодаОтчета >= '2015-10-01', "66.06, 66.26, 67.06, 67.26" + ", ", "")
	             + "70, 76.09, 76.29, 76.39, 76.10, 76.07.2, 76.27.2, 76.37.2";
	СчетаГрафы07 = СчетаРасчетов + ", "
	             + СчетаАвансов + ", "
	             + СчетаРасчетовПоНалогам + ", "
	             + СчетаКредитов + ", "
	             + СчетаЗаймов + ", "
	             + ?(КонтекстВыполнения.КонтекстРаздела.ДатаНачалаПериодаОтчета >= '2015-10-01', СчетаЦенныхБумаг + ", ", "")
	             + СчетаПрочие;
	СчетаГрафы08 = СчетаРасчетов + ", "
	             + СчетаАвансов + ", "
	             + СчетаРасчетовПоНалогам + ", "
	             + СчетаКредитов + ", "
	             + "66.03, 66.23, 66.04, 66.24, 67.04, 67.24" + ", "
	             + ?(КонтекстВыполнения.КонтекстРаздела.ДатаНачалаПериодаОтчета >= '2015-10-01', "66.05, 66.06, 66.25, 66.26, 67.06, 67.26" + ", ", "")
	             + "70, 71.01, 71.21, 73.03, 75.02, 76.01.1, 76.21, 76.04, 76.09, 76.29, 76.39, 76.10, 76.07.2, 76.27.2, 76.37.2";
	СчетаГрафы10 = СчетаРасчетов + ", "
	             + СчетаАвансов + ", "
	             + СчетаРасчетовПоНалогам + ", "
	             + СчетаКредитов + ", "
	             + СчетаЗаймов + ", "
	             + ?(КонтекстВыполнения.КонтекстРаздела.ДатаНачалаПериодаОтчета >= '2015-10-01', СчетаЦенныхБумаг + ", ", "")
	             + СчетаПрочие;
	
	СчетаГрафы21 = СчетаПеревода;
	СчетаГрафы22 = СчетаПеревода;
	
	ПолныйСписокСчетов = СчетаРасчетов + ", " + СчетаАвансов + ", " + СчетаНДСАвансов + ", "
	                   + СчетаКредитов + ", " + СчетаЗаймов + ", "
	                   + ?(КонтекстВыполнения.КонтекстРаздела.ДатаНачалаПериодаОтчета >= '2015-10-01' ,СчетаЦенныхБумаг + ", ", "")
	                   + СчетаРасчетовПоНалогам + ", " + СчетаПрочие;
	
	КонтекстСтроки.Вставить("СчетаГрафы04", СчетаГрафы04);
	КонтекстСтроки.Вставить("СчетаГрафы05", СчетаГрафы05);
	КонтекстСтроки.Вставить("СчетаГрафы06", СчетаГрафы06);
	КонтекстСтроки.Вставить("СчетаГрафы07", СчетаГрафы07);
	КонтекстСтроки.Вставить("СчетаГрафы08", СчетаГрафы08);
	КонтекстСтроки.Вставить("СчетаГрафы10", СчетаГрафы10);
	
	КонтекстСтроки.Вставить("СчетаГрафы21", СчетаГрафы21);
	КонтекстСтроки.Вставить("СчетаГрафы22", СчетаГрафы22);
	
	КонтекстСтроки.Вставить("СчетаНДСАвансов", СчетаНДСАвансов);
	
	КонтекстСтроки.Вставить("ПолныйСписокСчетов", ПолныйСписокСчетов);
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьБО2011Кв4Пояснения5_Строки5560и5580(КонтекстСтроки);
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения53_Краткосрочная(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5561и5581(КонтекстВыполнения, НомерСтроки)
	
	КонтекстСтроки = Новый Структура;
	
	КонтекстСтроки.Вставить("НомерСтроки", НомерСтроки);
	КонтекстСтроки.Вставить("НаименованиеСтроки", "Расчеты с поставщиками и подрядчиками");
	
	СчетаРасчетов = "60.01, 60.21, 60.31, 60.03, 76.16, 76.05, 76.25, 76.35";
	
	СчетаПеревода = "76.05, 76.25, 76.35";
	
	СчетаГрафы04 = СчетаРасчетов;
	СчетаГрафы05 = СчетаРасчетов;
	СчетаГрафы06 = СчетаРасчетов;
	СчетаГрафы07 = СчетаРасчетов;
	СчетаГрафы08 = СчетаРасчетов;
	СчетаГрафы10 = СчетаРасчетов;
	
	СчетаГрафы21 = СчетаПеревода;
	СчетаГрафы22 = СчетаПеревода;
	
	ПолныйСписокСчетов = СчетаРасчетов;
	
	КонтекстСтроки.Вставить("СчетаГрафы04", СчетаГрафы04);
	КонтекстСтроки.Вставить("СчетаГрафы05", СчетаГрафы05);
	КонтекстСтроки.Вставить("СчетаГрафы06", СчетаГрафы06);
	КонтекстСтроки.Вставить("СчетаГрафы07", СчетаГрафы07);
	КонтекстСтроки.Вставить("СчетаГрафы08", СчетаГрафы08);
	КонтекстСтроки.Вставить("СчетаГрафы10", СчетаГрафы10);
	
	КонтекстСтроки.Вставить("СчетаГрафы21", СчетаГрафы21);
	КонтекстСтроки.Вставить("СчетаГрафы22", СчетаГрафы22);
	
	КонтекстСтроки.Вставить("ПолныйСписокСчетов", ПолныйСписокСчетов);
	
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения53_Краткосрочная(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5562и5582(КонтекстВыполнения, НомерСтроки)
	
	КонтекстСтроки = Новый Структура;
	
	КонтекстСтроки.Вставить("НомерСтроки", НомерСтроки);
	КонтекстСтроки.Вставить("НаименованиеСтроки", "Авансы полученные");
	
	СчетаАвансов  = "62.02, 62.22, 62.32, 62.ОТ.1, 62.ОТ.2, 62.ОТ.3, 76.06, 76.26, 76.36";
	СчетаНДСАвансов = "76.АВ";
	СчетаПеревода = "76.06, 76.26, 76.36";
	
	СчетаГрафы04 = СчетаАвансов;
	СчетаГрафы05 = СчетаАвансов;
	СчетаГрафы06 = СчетаАвансов;
	СчетаГрафы07 = СчетаАвансов;
	СчетаГрафы08 = СчетаАвансов;
	СчетаГрафы10 = СчетаАвансов;
	
	СчетаГрафы21 = СчетаПеревода;
	СчетаГрафы22 = СчетаПеревода;
	
	ПолныйСписокСчетов = СчетаАвансов + ", " + СчетаНДСАвансов;
	
	КонтекстСтроки.Вставить("СчетаГрафы04", СчетаГрафы04);
	КонтекстСтроки.Вставить("СчетаГрафы05", СчетаГрафы05);
	КонтекстСтроки.Вставить("СчетаГрафы06", СчетаГрафы06);
	КонтекстСтроки.Вставить("СчетаГрафы07", СчетаГрафы07);
	КонтекстСтроки.Вставить("СчетаГрафы08", СчетаГрафы08);
	КонтекстСтроки.Вставить("СчетаГрафы10", СчетаГрафы10);
	
	КонтекстСтроки.Вставить("СчетаГрафы21", СчетаГрафы21);
	КонтекстСтроки.Вставить("СчетаГрафы22", СчетаГрафы22);
	
	КонтекстСтроки.Вставить("СчетаНДСАвансов", СчетаНДСАвансов);
	
	КонтекстСтроки.Вставить("ПолныйСписокСчетов", ПолныйСписокСчетов);
	
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения53_Краткосрочная(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5563и5583(КонтекстВыполнения, НомерСтроки)
	
	С2018 = (ПривестиКДате(КонтекстВыполнения.КонтекстРаздела.ДатаКонцаПериодаОтчета) >= '2018-01-01');
	
	УчитыватьСчетаИП2015 = НЕ РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(КонтекстВыполнения.Организация)
	                   И КонтекстВыполнения.Свойство("КонецОтчетногоПериода")
	                   И КонтекстВыполнения.КонецОтчетногоПериода >= '2015-01-01';
	
	КонтекстСтроки = Новый Структура;
	
	КонтекстСтроки.Вставить("НомерСтроки", НомерСтроки);
	КонтекстСтроки.Вставить("НаименованиеСтроки", "Расчеты по налогам и взносам");
	
	СчетаРасчетовПоНалогам = "68.01.1, 68.01.2, 68.02, 68.03, 68.04.1, 68.06, 68.07, 68.08, 68.09, 68.10, 68.11, 68.12, 68.13, 68.32, 68.42,
	                         |69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7, 69.03.1, 69.03.2,
	                         |69.04, 69.05.1, 69.05.2, 69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.11, 69.12, 69.13.1, 69.13.2";
	СчетаШтрафыПени = "68.01.1, 68.01.2, 68.02, 68.03, 68.04.1, 68.06, 68.07, 68.08, 68.09, 68.10, 68.11, 68.12, 68.13, 68.32, 68.42,
	                  |69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7, 69.03.1, 69.03.2, 69.04,
	                  |69.05.1, 69.05.2, 69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.11, 69.12";
	
	СчетаПеревода = "68.01.1, 68.01.2, 68.02, 68.03, 68.04.1, 68.06, 68.07, 68.08, 68.09, 68.10, 68.11, 68.12, 68.13,
	                |69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7, 69.03.1, 69.03.2, 69.04, 69.05.1, 69.05.2,
	                |69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.11, 69.12, 69.13.1, 69.13.2";
	
	Если С2018 Тогда
		СчетаРасчетовПоНалогам = СтрЗаменить(СчетаРасчетовПоНалогам, "68.13", "68.13, 68.34, 68.52");
		СчетаШтрафыПени = СтрЗаменить(СчетаШтрафыПени, "68.13", "68.13, 68.34, 68.52");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, "68.13", "68.13, 68.34, 68.52");
	КонецЕсли;
	
	Если УчитыватьСчетаИП2015 Тогда
		СчетаРасчетовПоНалогам = СтрЗаменить(СчетаРасчетовПоНалогам, "68.01.2", "68.01.2, 68.21.1, 68.21.2");
		СчетаРасчетовПоНалогам = СтрЗаменить(СчетаРасчетовПоНалогам, "68.13", "68.13, 68.14");
		СчетаШтрафыПени = СтрЗаменить(СчетаШтрафыПени, "68.01.2", "68.01.2, 68.21.1, 68.21.2");
		СчетаШтрафыПени = СтрЗаменить(СчетаШтрафыПени, "68.13", "68.13, 68.14");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, "68.01.2", "68.01.2, 68.21.1, 68.21.2");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, "68.13", "68.13, 68.14");
	КонецЕсли;
	
	СчетаГрафы04 = СчетаРасчетовПоНалогам;
	СчетаГрафы05 = СчетаРасчетовПоНалогам;
	СчетаГрафы06 = СчетаШтрафыПени;
	СчетаГрафы07 = СчетаРасчетовПоНалогам;
	СчетаГрафы08 = СчетаРасчетовПоНалогам;
	СчетаГрафы10 = СчетаРасчетовПоНалогам;
	
	СчетаГрафы21 = СчетаПеревода;
	СчетаГрафы22 = СчетаПеревода;
	
	ПолныйСписокСчетов = СчетаРасчетовПоНалогам;
	
	КонтекстСтроки.Вставить("СчетаГрафы04", СчетаГрафы04);
	КонтекстСтроки.Вставить("СчетаГрафы05", СчетаГрафы05);
	КонтекстСтроки.Вставить("СчетаГрафы06", СчетаГрафы06);
	КонтекстСтроки.Вставить("СчетаГрафы07", СчетаГрафы07);
	КонтекстСтроки.Вставить("СчетаГрафы08", СчетаГрафы08);
	КонтекстСтроки.Вставить("СчетаГрафы10", СчетаГрафы10);
	
	КонтекстСтроки.Вставить("СчетаГрафы21", СчетаГрафы21);
	КонтекстСтроки.Вставить("СчетаГрафы22", СчетаГрафы22);
	
	КонтекстСтроки.Вставить("ПолныйСписокСчетов", ПолныйСписокСчетов);
	
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения53_Краткосрочная(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5564и5584(КонтекстВыполнения, НомерСтроки)
	
	КонтекстСтроки = Новый Структура;
	
	КонтекстСтроки.Вставить("НомерСтроки", НомерСтроки);
	КонтекстСтроки.Вставить("НаименованиеСтроки", "Кредиты");
	
	СчетаКредитов = "66.01, 66.02, 66.21, 66.22, 67.01, 67.02, 67.21, 67.22";
	
	СчетаГрафы04 = СчетаКредитов;
	СчетаГрафы05 = "66.01, 66.21";
	СчетаГрафы06 = "66.02, 66.22, 67.02, 67.22";
	СчетаГрафы07 = СчетаКредитов;
	СчетаГрафы08 = СчетаКредитов;
	СчетаГрафы10 = СчетаКредитов;
	
	ПолныйСписокСчетов = СчетаКредитов;
	
	КонтекстСтроки.Вставить("СчетаГрафы04", СчетаГрафы04);
	КонтекстСтроки.Вставить("СчетаГрафы05", СчетаГрафы05);
	КонтекстСтроки.Вставить("СчетаГрафы06", СчетаГрафы06);
	КонтекстСтроки.Вставить("СчетаГрафы07", СчетаГрафы07);
	КонтекстСтроки.Вставить("СчетаГрафы08", СчетаГрафы08);
	КонтекстСтроки.Вставить("СчетаГрафы10", СчетаГрафы10);
	
	КонтекстСтроки.Вставить("ПолныйСписокСчетов", ПолныйСписокСчетов);
	
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения53_Краткосрочная(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5565и5585(КонтекстВыполнения, НомерСтроки)
	
	КонтекстСтроки = Новый Структура;
	
	КонтекстСтроки.Вставить("НомерСтроки", НомерСтроки);
	КонтекстСтроки.Вставить("НаименованиеСтроки", "Займы");
	
	СчетаЗаймов = "66.03, 66.23, 66.04, 66.24, 67.03, 67.04, 67.23, 67.24";
	СчетаЦенныхБумаг = "67.05, 67.25, 66.05, 66.06, 66.25, 66.26, 67.06, 67.26";
	
	СчетаГрафы04 = СчетаЗаймов;
	СчетаГрафы05 = "66.03, 66.23";
	СчетаГрафы06 = "66.04, 66.24, 67.04, 67.24";
	СчетаГрафы07 = СчетаЗаймов;
	СчетаГрафы08 = "66.03, 66.23, 66.04, 66.24, 67.04, 67.24";
	СчетаГрафы10 = СчетаЗаймов;
	
	ПолныйСписокСчетов = СчетаЗаймов;
	
	Если КонтекстВыполнения.КонтекстРаздела.ДатаНачалаПериодаОтчета >= '2015-10-01' Тогда
		СчетаГрафы04 = СчетаГрафы04 + ", " + СчетаЦенныхБумаг;
		СчетаГрафы05 = СчетаГрафы05 + ", 66.05, 66.25";
		СчетаГрафы06 = СчетаГрафы06 + ", 66.06, 66.26, 67.06, 67.26";
		СчетаГрафы07 = СчетаГрафы07 + ", " + СчетаЦенныхБумаг;
		СчетаГрафы08 = СчетаГрафы08 + ", 66.05, 66.06, 66.25, 66.26, 67.06, 67.26";
		СчетаГрафы10 = СчетаГрафы10 + ", " + СчетаЦенныхБумаг;
		
		ПолныйСписокСчетов = ПолныйСписокСчетов + ", " + СчетаЦенныхБумаг;
		
	КонецЕсли;
	
	КонтекстСтроки.Вставить("СчетаГрафы04", СчетаГрафы04);
	КонтекстСтроки.Вставить("СчетаГрафы05", СчетаГрафы05);
	КонтекстСтроки.Вставить("СчетаГрафы06", СчетаГрафы06);
	КонтекстСтроки.Вставить("СчетаГрафы07", СчетаГрафы07);
	КонтекстСтроки.Вставить("СчетаГрафы08", СчетаГрафы08);
	КонтекстСтроки.Вставить("СчетаГрафы10", СчетаГрафы10);
	
	КонтекстСтроки.Вставить("ПолныйСписокСчетов", ПолныйСписокСчетов);
	
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения53_Краткосрочная(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5566и5586(КонтекстВыполнения, НомерСтроки)
	
	КонтекстСтроки = Новый Структура;
	
	КонтекстСтроки.Вставить("НомерСтроки", НомерСтроки);
	КонтекстСтроки.Вставить("НаименованиеСтроки", "Прочая");
	
	СчетаПрочие = "70, 71.01, 71.21, 73.03, 75.02, 76.01.1, 76.21, 76.03, 76.04, 76.09, 76.29, 76.39, 76.10, 76.49, 76.41, 76.НА,
	              |76.07.2, 76.27.2, 76.37.2";
	
	СчетаПеревода = "70, 71.01, 71.21, 73.03, 76.01.1, 76.03, 76.21, 76.09, 76.29, 76.39, 76.10, 76.49, 76.41, 76.НА, 76.07.2, 76.27.2, 76.37.2";
	
	СчетаГрафы04 = СчетаПрочие;
	СчетаГрафы05 = СчетаПрочие;
	СчетаГрафы06 = "70, 76.09, 76.29, 76.39, 76.10, 76.07.2, 76.27.2, 76.37.2";
	СчетаГрафы07 = СчетаПрочие;
	СчетаГрафы08 = "70, 71.01, 71.21, 73.03, 75.02, 76.01.1, 76.21, 76.04, 76.09, 76.29, 76.39, 76.10, 76.07.2, 76.27.2, 76.37.2";
	СчетаГрафы10 = СчетаПрочие;
	
	СчетаГрафы21 = СчетаПеревода;
	СчетаГрафы22 = СчетаПеревода;
	
	ПолныйСписокСчетов = СчетаПрочие;
	
	КонтекстСтроки.Вставить("СчетаГрафы04", СчетаГрафы04);
	КонтекстСтроки.Вставить("СчетаГрафы05", СчетаГрафы05);
	КонтекстСтроки.Вставить("СчетаГрафы06", СчетаГрафы06);
	КонтекстСтроки.Вставить("СчетаГрафы07", СчетаГрафы07);
	КонтекстСтроки.Вставить("СчетаГрафы08", СчетаГрафы08);
	КонтекстСтроки.Вставить("СчетаГрафы10", СчетаГрафы10);
	
	КонтекстСтроки.Вставить("СчетаГрафы21", СчетаГрафы21);
	КонтекстСтроки.Вставить("СчетаГрафы22", СчетаГрафы22);
	
	КонтекстСтроки.Вставить("ПолныйСписокСчетов", ПолныйСписокСчетов);
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьБО2011Кв4Пояснения5_Строки5566и5586(КонтекстСтроки);
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения53_Краткосрочная(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения53_Краткосрочная(КонтекстВыполнения)
	
	Организация = КонтекстВыполнения.Организация;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	КонтекстРаздела = КонтекстВыполнения.КонтекстРаздела;
	КонтекстСтроки = КонтекстВыполнения.КонтекстСтроки;
	
	ИмяРаздела = "Пояснения5";
	ДополнительныеПараметрыРасшифровки = Новый Структура("Организация", Организация);
	
	ЗаголовкиГраф = КонтекстРаздела.ЗаголовкиГраф53;
	НачалоПериода = КонтекстРаздела.ДатаНачалаПериодаОтчета;
	КонецПериода  = КонтекстРаздела.ДатаКонцаПериодаОтчета;
	
	НомерСтроки        = КонтекстСтроки.НомерСтроки;
	НаименованиеСтроки = КонтекстСтроки.НаименованиеСтроки;
	ПолныйСписокСчетов = КонтекстСтроки.ПолныйСписокСчетов;
	
	ПараметрыОбработкиСчетов = ПараметрыОбработкиСчетов();
	ПараметрыОбработкиСчетов.РазделятьАвансыПоВидамАктивов = КонтекстРаздела.РазделятьАвансыПоВидамАктивов;
	ПараметрыОбработкиСчетов.ПрименяетсяФСБУ25 = КонтекстРаздела.ПрименяетсяФСБУ25;
	
	ОбработкаСчетов = ПорядокОбработкиСчетов(ПолныйСписокСчетов, ПараметрыОбработкиСчетов);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("КороткийСрок", 365);
	
	Запрос.УстановитьПараметр("СчетаГрафы04", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы04"));
	Запрос.УстановитьПараметр("СчетаГрафы05", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы05"));
	Запрос.УстановитьПараметр("СчетаГрафы06", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы06"));
	Запрос.УстановитьПараметр("СчетаГрафы07", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы07"));
	Запрос.УстановитьПараметр("СчетаГрафы08", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы08"));
	Запрос.УстановитьПараметр("СчетаГрафы10", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы10"));
	
	Запрос.УстановитьПараметр("СчетаГрафы21", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы21"));
	Запрос.УстановитьПараметр("СчетаГрафы22", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаГрафы22"));
	
	Запрос.УстановитьПараметр("СчетаНДСАвансов", СчетаДляДанныхЗапроса(КонтекстСтроки, "СчетаНДСАвансов"));
	
	Для Каждого СпособОбработки Из ОбработкаСчетов Цикл
		Запрос.УстановитьПараметр(СпособОбработки.Ключ, СпособОбработки.Значение);
	КонецЦикла;
	
	СубконтоВидыПлатежей = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет;
	Запрос.УстановитьПараметр("СубконтоВидыПлатежей", СубконтоВидыПлатежей);
	
	СубконтоВидыПлатежейУровни = Новый Массив;
	СубконтоВидыПлатежейУровни.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет);
	СубконтоВидыПлатежейУровни.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.УровниБюджетов);
	Запрос.УстановитьПараметр("СубконтоВидыПлатежейУровни", СубконтоВидыПлатежейУровни);
	
	СубконтоРаботники = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизаций;
	Запрос.УстановитьПараметр("СубконтоРаботники", СубконтоРаботники);
	
	СубконтоКонтрагенты = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты;
	Запрос.УстановитьПараметр("СубконтоКонтрагенты", СубконтоКонтрагенты);
	
	СубконтоКонтрагентыДоговоры = Новый Массив;
	СубконтоКонтрагентыДоговоры.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	СубконтоКонтрагентыДоговоры.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	Запрос.УстановитьПараметр("СубконтоКонтрагентыДоговоры", СубконтоКонтрагентыДоговоры);
	
	СубконтоКонтрагентыДоговоры = Новый Массив;
	СубконтоКонтрагентыДоговоры.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	СубконтоКонтрагентыДоговоры.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ЦенныеБумаги);
	Запрос.УстановитьПараметр("СубконтоКонтрагентыЦенныеБумаги", СубконтоКонтрагентыДоговоры);
	
	СубконтоКонтрагентыСФВыданные = Новый Массив;
	СубконтоКонтрагентыСФВыданные.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	СубконтоКонтрагентыСФВыданные.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СФВыданные);
	Запрос.УстановитьПараметр("СубконтоКонтрагентыСФВыданные", СубконтоКонтрагентыСФВыданные);
	
	СубконтоПрочиеДоходыРасходы = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы;
	Запрос.УстановитьПараметр("СубконтоПрочиеДоходыРасходы", СубконтоПрочиеДоходыРасходы);
	
	Запрос.УстановитьПараметр("Счет_67_01", Счет("67.01"));
	Запрос.УстановитьПараметр("Счет_66_01", Счет("66.01"));
	
	Запрос.УстановитьПараметр("Счет_67_21", Счет("67.21"));
	Запрос.УстановитьПараметр("Счет_66_21", Счет("66.21"));
	
	Запрос.УстановитьПараметр("Счет_67_03", Счет("67.03"));
	Запрос.УстановитьПараметр("Счет_66_03", Счет("66.03"));
	
	Запрос.УстановитьПараметр("Счет_67_23", Счет("67.23"));
	Запрос.УстановитьПараметр("Счет_66_23", Счет("66.23"));
	
	Запрос.УстановитьПараметр("Счет_67_05", Счет("67.05"));
	Запрос.УстановитьПараметр("Счет_66_05", Счет("66.05"));
	
	Запрос.УстановитьПараметр("Счет_67_25", Счет("67.25"));
	Запрос.УстановитьПараметр("Счет_66_25", Счет("66.25"));
	
	Запрос.УстановитьПараметр("Счет_91_02", Счет("91.02"));
	Запрос.УстановитьПараметр("Счет_91_01", Счет("91.01"));
	
	ВидПлатежейШтрафыПени = Новый Массив;
	ВидПлатежейШтрафыПени.Добавить(Перечисления.ВидыПлатежейВГосБюджет.ПениСам);
	ВидПлатежейШтрафыПени.Добавить(Перечисления.ВидыПлатежейВГосБюджет.ПениАкт);
	ВидПлатежейШтрафыПени.Добавить(Перечисления.ВидыПлатежейВГосБюджет.Штраф);
	Запрос.УстановитьПараметр("ВидПлатежейШтрафыПени", ВидПлатежейШтрафыПени);
	
	ВидПДРНачисление = Перечисления.ВидыПрочихДоходовИРасходов.ШтрафыПениНеустойкиКПолучениюУплате;
	Запрос.УстановитьПараметр("ВидПДРНачисление", ВидПДРНачисление);
	
	ВидПДРСписание = Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности;
	Запрос.УстановитьПараметр("ВидПДРСписание", ВидПДРСписание);
	
	СубконтоКонтрагентыСФВыданные = Новый Массив;
	СубконтоКонтрагентыСФВыданные.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	СубконтоКонтрагентыСФВыданные.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СФВыданные);
	Запрос.УстановитьПараметр("СубконтоКонтрагентыСФВыданные", СубконтоКонтрагентыСФВыданные);
	
	ДополнительныйТекстЗапроса = "";
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьТекстЗапросаПоПереопределяемымТаблицамПояснения53Краткосрочная(
		ДополнительныйТекстЗапроса);
	Если НЕ ЗначениеЗаполнено(ДополнительныйТекстЗапроса) Тогда
		ДополнительныйТекстЗапроса = ТекстЗапросаПоПереопределяемымТаблицамПояснения53_Краткосрочная();
	КонецЕсли;
	ТекстЗапроса = ОбщийТекстЗапросов(ТекстЗапросаПояснения53_Краткосрочная(), ДополнительныйТекстЗапроса);
	
	УстановитьПолныйТекстЗапроса(Запрос, ТекстЗапроса, "СФВыданные");
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьПараметрыЗапросаПояснения53Краткосрочная(Запрос);
	Запрос.Выполнить();
	
	ПараметрыРасшифровки = Новый Структура;
	ПараметрыРасшифровки.Вставить("ИмяОтчета", ИмяРаздела);
	ПараметрыРасшифровки.Вставить("ДатаНачалаПериодаОтчета", НачалоПериода);
	ПараметрыРасшифровки.Вставить("ДатаКонцаПериодаОтчета", КонецПериода);
	
	ПараметрыСоставляющих = Новый Структура;
	ПараметрыСоставляющих.Вставить("ИмяТаблицыПояснений", "Пояснения53");
	ПараметрыСоставляющих.Вставить("ОбработкаСчетов", ОбработкаСчетов);
	ПараметрыСоставляющих.Вставить("ЗаголовкиГраф", ЗаголовкиГраф);
	
	Графа = "04";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВТ_Графа04.Счет КАК Счет,
		|	ВТ_Графа04.Значение КАК Значение,
		|	ВТ_Графа04.СНД КАК СНД
		|ИЗ
		|	ВТ_Графа04 КАК ВТ_Графа04";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		ЗнакСоставляющей = "+";
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на начало периода по кредиту счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней";
		ИначеЕсли ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на начало периода по кредиту счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней";
		ИначеЕсли ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на начало периода по кредиту счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней";
		ИначеЕсли ОбработкаСчетов.СчетаПоВидамПлатежей.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на начало периода по кредиту счета " + СчетСоставляющей.Код + " по видам платежей в бюджет (фонды)";
		ИначеЕсли ОбработкаСчетов.СчетаПоВидамПлатежейУровням.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на начало периода по кредиту счета " + СчетСоставляющей.Код + " по видам платежей в бюджет (фонды) и уровням бюджетов";
		ИначеЕсли ОбработкаСчетов.СчетаБезОбработки.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.АПСчетаБезРазвертки.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамБезОбработки.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на начало периода по кредиту счета " + СчетСоставляющей.Код;
		ИначеЕсли ОбработкаСчетов.СчетаПоКредитамЗаймамПеревод.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамПереводКЦБ.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на начало периода по кредиту счета " + СчетСоставляющей.Код + " в части задолженности, переведеной из долго- в краткосрочную";
		ИначеЕсли ОбработкаСчетов.СчетаПоРаботникам.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на начало периода по кредиту счета " + СчетСоставляющей.Код + " по работникам";
		ИначеЕсли ОбработкаСчетов.СчетаПоКонтрагентам.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на начало периода по кредиту счета " + СчетСоставляющей.Код + " по контрагентам";
		ИначеЕсли ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на начало периода по кредиту счета " + СчетСоставляющей.Код + " по контрагентам и договорам";
		ИначеЕсли ОбработкаСчетов.СчетаПоСрочностиВычет.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(НСтр("ru = 'Сальдо на начало периода по дебету счета %1 по контрагентам и договорам со сроком оплаты не превышающим 365 дней'"),
				СчетСоставляющей.Код);
			ЗнакСоставляющей = "-";
			ЗначениеСоставляющей = -Выборка.СНД;
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа04", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			ЗнакСоставляющей, НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВТ_Графа04_НДС.Счет КАК Счет,
		|	ВТ_Графа04_НДС.Значение КАК Значение
		|ИЗ
		|	ВТ_Графа04_НДС КАК ВТ_Графа04_НДС";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаименованиеСтрокиРасшифровки = "";
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		НаименованиеСоставляющей = "Сальдо на начало периода по дебету счета " + СчетСоставляющей.Код + " по контрагентам и счетам-фактурам выданным по договорам со сроком оплаты не превышающим 365 дней";
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"-", НаименованиеСоставляющей,
			-ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя - ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	Графа = "10";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВТ_Графа10.Счет КАК Счет,
		|	ВТ_Графа10.Значение КАК Значение,
		|	ВТ_Графа10.СКД КАК СКД
		|ИЗ
		|	ВТ_Графа10 КАК ВТ_Графа10";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		ЗнакСоставляющей = "+";
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на конец периода по кредиту счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней";
		ИначеЕсли ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на конец периода по кредиту счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней";
		ИначеЕсли ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на конец периода по кредиту счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней";
		ИначеЕсли ОбработкаСчетов.СчетаПоВидамПлатежей.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на конец периода по кредиту счета " + СчетСоставляющей.Код + " по видам платежей в бюджет (фонды)";
		ИначеЕсли ОбработкаСчетов.СчетаПоВидамПлатежейУровням.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на конец периода по кредиту счета " + СчетСоставляющей.Код + " по видам платежей в бюджет (фонды) и уровням бюджетов";
		ИначеЕсли ОбработкаСчетов.СчетаБезОбработки.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.АПСчетаБезРазвертки.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамБезОбработки.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на конец периода по кредиту счета " + СчетСоставляющей.Код;
		ИначеЕсли ОбработкаСчетов.СчетаПоКредитамЗаймамПеревод.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамПереводКЦБ.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Сальдо на конец периода по кредиту счета " + СчетСоставляющей.Код + " в части задолженности, переведеной из долго- в краткосрочную";
		ИначеЕсли ОбработкаСчетов.СчетаПоРаботникам.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на конец периода по кредиту счета " + СчетСоставляющей.Код + " по работникам";
		ИначеЕсли ОбработкаСчетов.СчетаПоКонтрагентам.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на конец периода по кредиту счета " + СчетСоставляющей.Код + " по контрагентам";
		ИначеЕсли ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Развернутое сальдо на конец периода по кредиту счета " + СчетСоставляющей.Код + " по контрагентам и договорам";
		ИначеЕсли ОбработкаСчетов.СчетаПоСрочностиВычет.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(НСтр("ru = 'Сальдо на конец периода по дебету счета %1 по контрагентам и договорам со сроком оплаты не превышающим 365 дней'"),
				СчетСоставляющей.Код);
			ЗнакСоставляющей = "-";
			ЗначениеСоставляющей = -Выборка.СКД;
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа10", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			ЗнакСоставляющей, НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВТ_Графа10_НДС.Счет КАК Счет,
	|	ВТ_Графа10_НДС.Значение КАК Значение
	|ИЗ
	|	ВТ_Графа10_НДС КАК ВТ_Графа10_НДС";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаименованиеСтрокиРасшифровки = "";
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		НаименованиеСоставляющей = "Сальдо на конец периода по дебету счета " + СчетСоставляющей.Код + " по контрагентам и счетам-фактурам выданным по договорам со сроком оплаты не превышающим 365 дней";
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"-", НаименованиеСоставляющей,
			-ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя - ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	Графа = "05";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВТ_Графа05.Счет КАК Счет,
		|	ВТ_Графа05.КО КАК КО,
		|	ВТ_Графа05.Дельта КАК Дельта,
		|	ВТ_Графа05.ДО КАК ДО,
		|	ВТ_Графа05.КОвДО КАК КОвДО
		|ИЗ
		|	ВТ_Графа05 КАК ВТ_Графа05";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.КО;
		ЗнакСоставляющей = "+";
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по кредиту счета " + СчетСоставляющей.Код + ", отражаемые в кредиторской задолженности, по контрагентам и договорам со сроком оплаты не превышающим 365 дней";
		ИначеЕсли ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
			  ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по кредиту счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней";
		ИначеЕсли ОбработкаСчетов.СчетаПоВидамПлатежей.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоВидамПлатежейУровням.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоРаботникам.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентам.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.АПСчетаБезРазвертки.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по кредиту счета " + СчетСоставляющей.Код + ", отражаемые в кредиторской задолженности";
		ИначеЕсли ОбработкаСчетов.СчетаБезОбработки.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамБезОбработки.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по кредиту счета " + СчетСоставляющей.Код;
		ИначеЕсли ОбработкаСчетов.СчетаПоСрочностиВычет.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(НСтр("ru = 'Обороты по дебету счета %1 по контрагентам и договорам со сроком оплаты не превышающим 365 дней'"),
				СчетСоставляющей.Код);
			ЗнакСоставляющей = "-";
			ЗначениеСоставляющей = -Выборка.ДО;
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа05_Кт", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			ЗнакСоставляющей, НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
		ЗначениеСоставляющей = -Выборка.Дельта;
		ЗнакСоставляющей = "-";
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоВидамПлатежей.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоВидамПлатежейУровням.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоРаботникам.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоКонтрагентам.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.АПСчетаБезРазвертки.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаБезОбработки.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по дебету счета " + СчетСоставляющей.Код + " по объектам отраженным в кредитовых оборотах в пределах суммы кредитового оборота";
		ИначеЕсли ОбработкаСчетов.СчетаПоКредитамЗаймамБезОбработки.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамПеревод.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамПереводКЦБ.Найти(СчетСоставляющей) <> Неопределено Тогда
			Продолжить;
		ИначеЕсли ОбработкаСчетов.СчетаПоСрочностиВычет.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(НСтр("ru = 'Обороты по кредиту счета %1 по объектам отраженным в дебетовых оборотах в пределах суммы дебетового оборота'"),
				СчетСоставляющей.Код);
			ЗнакСоставляющей = "+";
			ЗначениеСоставляющей = Выборка.КОвДО;
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа05_Дт", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			ЗнакСоставляющей, НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВТ_Графа05_НДС.Счет КАК Счет,
		|	ВТ_Графа05_НДС.ДО КАК ДО,
		|	ВТ_Графа05_НДС.Дельта КАК Дельта
		|ИЗ
		|	ВТ_Графа05_НДС КАК ВТ_Графа05_НДС";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаименованиеСтрокиРасшифровки = "";
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.ДО;
		
		НаименованиеСоставляющей = "Обороты по дебету счета " + СчетСоставляющей.Код + " по контрагентам и счетам-фактурам по договорам со сроком оплаты не превышающим 365 дней";
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"-", НаименованиеСоставляющей,
			-ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя - ЗначениеСоставляющей;
		
		ЗначениеСоставляющей = Выборка.Дельта;
		
		НаименованиеСоставляющей = "Обороты по кредиту счета " + СчетСоставляющей.Код + " по объектам отраженным в дебетовых оборотах в пределах суммы дебетового оборота";
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа06.СчетДт,
	               |	ВТ_Графа06.СчетКт,
	               |	ВТ_Графа06.Значение
	               |ИЗ
	               |	ВТ_Графа06 КАК ВТ_Графа06";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СчетаИсключения = СчетаИзСписка("66.02, 66.22, 67.02, 67.22, 66.04, 66.24, 67.04, 67.24, 66.06, 66.26, 67.06, 67.26");
	
	Пока Выборка.Следующий() Цикл
		НаименованиеСтрокиРасшифровки = "";
		
		СчетСоставляющейДт = Выборка.СчетДт;
		СчетСоставляющейКт = Выборка.СчетКт;
		ЗначениеСоставляющей = Выборка.Значение;
		
		Если СчетаИсключения.Найти(СчетСоставляющейКт) <> Неопределено Тогда
			// Счета входящие в список исключений при вычете графы 6 не учтываются.
			Продолжить;
		КонецЕсли;
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющейКт) <> Неопределено
		 ИЛИ ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющейКт) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющейКт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот с кредита счета " + СчетСоставляющейКт.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней в дебет счета "
			                         + СчетСоставляющейДт.Код + " по статьям субконто """ + СубконтоПрочиеДоходыРасходы
			                         + """ с видом """ + ВидПДРНачисление + """";
		ИначеЕсли ОбработкаСчетов.СчетаПоВидамПлатежей.Найти(СчетСоставляющейКт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоВидамПлатежейУровням.Найти(СчетСоставляющейКт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот по кредиту счета " + СчетСоставляющейКт.Код + " по статьям субконто """
			                         + СубконтоВидыПлатежей + """ с видом";
			Для Каждого ВидПлатежа Из ВидПлатежейШтрафыПени Цикл
				НаименованиеСоставляющей = НаименованиеСоставляющей + " """ + ВидПлатежа +""",";
			КонецЦикла;
			НаименованиеСоставляющей = Лев(НаименованиеСоставляющей, СтрДлина(НаименованиеСоставляющей) - 1);
		ИначеЕсли ОбработкаСчетов.СчетаБезОбработки.Найти(СчетСоставляющейКт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоРаботникам.Найти(СчетСоставляющейКт) <> Неопределено
		      ИЛИ ОбработкаСчетов.АПСчетаБезРазвертки.Найти(СчетСоставляющейКт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот с кредита счета " + СчетСоставляющейКт.Код + " в дебет счета "
			                         + СчетСоставляющейДт.Код + " по статьям субконто """ + СубконтоПрочиеДоходыРасходы
			                         + """ с видом """ + ВидПДРНачисление + """";
		ИначеЕсли ОбработкаСчетов.СчетаПоКредитамЗаймамБезОбработки.Найти(СчетСоставляющейКт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамПеревод.Найти(СчетСоставляющейКт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамПереводКЦБ.Найти(СчетСоставляющейКт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот по кредиту счета " + СчетСоставляющейКт.Код;
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа06", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющейКт.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"-", НаименованиеСоставляющей,
			-ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя - ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	Графа = "07";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВТ_Графа07.Счет КАК Счет,
		|	ВТ_Графа07.ДО КАК ДО,
		|	ВТ_Графа07.Дельта КАК Дельта,
		|	ВТ_Графа07.КО КАК КО,
		|	ВТ_Графа07.КОвДО КАК КОвДО
		|ИЗ
		|	ВТ_Графа07 КАК ВТ_Графа07";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.ДО;
		ЗнакСоставляющей = "+";
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по дебету счета " + СчетСоставляющей.Код + ", отражаемые в кредиторской задолженности, по контрагентам и договорам со сроком оплаты не превышающим 365 дней";
		ИначеЕсли ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по дебету счета " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней";
		ИначеЕсли ОбработкаСчетов.СчетаПоВидамПлатежей.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоВидамПлатежейУровням.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоРаботникам.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентам.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.АПСчетаБезРазвертки.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по дебету счета " + СчетСоставляющей.Код + ", отражаемые в кредиторской задолженности";
		ИначеЕсли ОбработкаСчетов.СчетаБезОбработки.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамБезОбработки.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамПеревод.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамПереводКЦБ.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по дебету счета " + СчетСоставляющей.Код;
		ИначеЕсли ОбработкаСчетов.СчетаПоСрочностиВычет.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(НСтр("ru = 'Обороты по кредиту счета %1 по контрагентам и договорам со сроком оплаты не превышающим 365 дней'"),
				СчетСоставляющей.Код);
			ЗнакСоставляющей = "-";
			ЗначениеСоставляющей = -Выборка.КО;
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа07_Дт", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			ЗнакСоставляющей, НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
		ЗначениеСоставляющей = -Выборка.Дельта;
		ЗнакСоставляющей = "-";
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоВидамПлатежей.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоВидамПлатежейУровням.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоРаботникам.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоКонтрагентам.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.АПСчетаБезРазвертки.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаБезОбработки.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Обороты по дебету счета " + СчетСоставляющей.Код + " отраженные в графе """ + ЗаголовкиГраф["05"] + """";
		ИначеЕсли ОбработкаСчетов.СчетаПоКредитамЗаймамБезОбработки.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамПеревод.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамПереводКЦБ.Найти(СчетСоставляющей) <> Неопределено Тогда
			Продолжить;
		ИначеЕсли ОбработкаСчетов.СчетаПоСрочностиВычет.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(НСтр("ru = 'Обороты по кредиту счета %1 отраженные в графе ""%2""'"),
				СчетСоставляющей.Код, ЗаголовкиГраф["05"]);
			ЗнакСоставляющей = "+";
			ЗначениеСоставляющей = Выборка.КОвДО;
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа07_Дт_Гр05", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			ЗнакСоставляющей, НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа07_НДС.Счет,
	               |	ВТ_Графа07_НДС.КО,
	               |	ВТ_Графа07_НДС.Дельта
	               |ИЗ
	               |	ВТ_Графа07_НДС КАК ВТ_Графа07_НДС";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаименованиеСтрокиРасшифровки = "";
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.КО;
		
		НаименованиеСоставляющей = "Обороты по кредиту счета " + СчетСоставляющей.Код + " по контрагентам и счетам-фактурам по договорам со сроком оплаты не превышающим 365 дней";
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"-", НаименованиеСоставляющей,
			-ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя - ЗначениеСоставляющей;
		
		ЗначениеСоставляющей = Выборка.Дельта;
		
		НаименованиеСоставляющей = "Обороты по кредиту счета " + СчетСоставляющей.Код + " отраженные в графе """ + ЗаголовкиГраф["05"]+ """";
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	// Вычет графы 8.
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВТ_Графа08.СчетДт КАК СчетДт,
		|	ВТ_Графа08.СчетКт КАК СчетКт,
		|	ВТ_Графа08.Значение КАК Значение
		|ИЗ
		|	ВТ_Графа08 КАК ВТ_Графа08";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаименованиеСтрокиРасшифровки = "";
		
		СчетСоставляющейДт = Выборка.СчетДт;
		СчетСоставляющейКт = Выборка.СчетКт;
		ЗначениеСоставляющей = -Выборка.Значение;
		ЗнакСоставляющей = "-";
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющейДт) <> Неопределено
		 ИЛИ ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющейДт) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющейДт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот с дебета счета " + СчетСоставляющейДт.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней в кредит счета "
			                         + СчетСоставляющейКт.Код + " по статьям субконто """ + СубконтоПрочиеДоходыРасходы
			                         + """ с видом """ + ВидПДРСписание + """";
		ИначеЕсли ОбработкаСчетов.СчетаПоВидамПлатежей.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоВидамПлатежейУровням.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоРаботникам.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентам.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.АПСчетаБезРазвертки.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаБезОбработки.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамБезОбработки.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамПеревод.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамПереводКЦБ.Найти(СчетСоставляющейДт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот с дебета счета " + СчетСоставляющейДт.Код + " в кредит счета "
			                         + СчетСоставляющейКт.Код + " по статьям субконто """ + СубконтоПрочиеДоходыРасходы
			                         + """ с видом """ + ВидПДРСписание + """";
		ИначеЕсли ОбработкаСчетов.СчетаПоСрочностиВычет.Найти(СчетСоставляющейКт) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(НСтр("ru = 'Оборот с кредита счета %1 по контрагентам и договорам со сроком оплаты не превышающим 365 дней в дебет счета %2 по статьям субконто ""%3"" с видом ""%4""'"),
				СчетСоставляющейКт.Код, СчетСоставляющейДт.Код, СубконтоПрочиеДоходыРасходы, ВидПДРСписание);
			ЗнакСоставляющей = "+";
			ЗначениеСоставляющей = Выборка.Значение;
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа08", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющейДт.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			ЗнакСоставляющей, НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // Вычитаемый
	
	Графа = "06";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	
	ЗначениеПоказателя = 0;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа06.СчетДт,
	               |	ВТ_Графа06.СчетКт,
	               |	ВТ_Графа06.Значение
	               |ИЗ
	               |	ВТ_Графа06 КАК ВТ_Графа06";
	
	Выборка = Запрос.Выполнить().Выбрать();
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющейДт = Выборка.СчетДт;
		СчетСоставляющейКт = Выборка.СчетКт;
		ЗначениеСоставляющей = Выборка.Значение;
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющейКт) <> Неопределено
		 ИЛИ ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющейКт) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющейКт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот с кредита счета " + СчетСоставляющейКт.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней в дебет счета "
			                         + СчетСоставляющейДт.Код + " по статьям субконто """ + СубконтоПрочиеДоходыРасходы
			                         + """ с видом """ + ВидПДРНачисление + """";
		ИначеЕсли ОбработкаСчетов.СчетаПоВидамПлатежей.Найти(СчетСоставляющейКт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоВидамПлатежейУровням.Найти(СчетСоставляющейКт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот по кредиту счета " + СчетСоставляющейКт.Код + " по статьям субконто """
			                         + СубконтоВидыПлатежей + """ с видом";
			Для Каждого ВидПлатежа Из ВидПлатежейШтрафыПени Цикл
				НаименованиеСоставляющей = НаименованиеСоставляющей + " """ + ВидПлатежа +""",";
			КонецЦикла;
			НаименованиеСоставляющей = Лев(НаименованиеСоставляющей, СтрДлина(НаименованиеСоставляющей) - 1);
		ИначеЕсли ОбработкаСчетов.СчетаБезОбработки.Найти(СчетСоставляющейКт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоРаботникам.Найти(СчетСоставляющейКт) <> Неопределено
		      ИЛИ ОбработкаСчетов.АПСчетаБезРазвертки.Найти(СчетСоставляющейКт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот с кредита счета " + СчетСоставляющейКт.Код + " в дебет счета "
			                         + СчетСоставляющейДт.Код + " по статьям субконто """ + СубконтоПрочиеДоходыРасходы
			                         + """ с видом """ + ВидПДРНачисление + """";
		ИначеЕсли ОбработкаСчетов.СчетаПоКредитамЗаймамБезОбработки.Найти(СчетСоставляющейКт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамПеревод.Найти(СчетСоставляющейКт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамПереводКЦБ.Найти(СчетСоставляющейКт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот по кредиту счета " + СчетСоставляющейКт.Код;
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа06", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющейКт.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	Графа = "08";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	
	ЗначениеПоказателя = 0;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВТ_Графа08.СчетДт КАК СчетДт,
		|	ВТ_Графа08.СчетКт КАК СчетКт,
		|	ВТ_Графа08.Значение КАК Значение
		|ИЗ
		|	ВТ_Графа08 КАК ВТ_Графа08";
	
	Выборка = Запрос.Выполнить().Выбрать();
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющейДт = Выборка.СчетДт;
		СчетСоставляющейКт = Выборка.СчетКт;
		ЗначениеСоставляющей = Выборка.Значение;
		ЗнакСоставляющей = "+";
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющейДт) <> Неопределено
		 ИЛИ ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющейДт) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющейДт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот с дебета счета " + СчетСоставляющейДт.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней в кредит счета "
			                         + СчетСоставляющейКт.Код + " по статьям субконто """ + СубконтоПрочиеДоходыРасходы
			                         + """ с видом """ + ВидПДРСписание + """";
		ИначеЕсли ОбработкаСчетов.СчетаПоВидамПлатежей.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоВидамПлатежейУровням.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоРаботникам.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.АПСчетаБезРазвертки.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентам.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаБезОбработки.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамБезОбработки.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамПеревод.Найти(СчетСоставляющейДт) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКредитамЗаймамПереводКЦБ.Найти(СчетСоставляющейДт) <> Неопределено Тогда
			НаименованиеСоставляющей = "Оборот с дебета счета " + СчетСоставляющейДт.Код + " в кредит счета "
			                         + СчетСоставляющейКт.Код + " по статьям субконто """ + СубконтоПрочиеДоходыРасходы
			                         + """ с видом """ + ВидПДРСписание + """";
		ИначеЕсли ОбработкаСчетов.СчетаПоСрочностиВычет.Найти(СчетСоставляющейКт) <> Неопределено Тогда
			НаименованиеСоставляющей = СтрШаблон(НСтр("ru = 'Оборот с кредита счета %1 по контрагентам и договорам со сроком оплаты не превышающим 365 дней в дебет счета %2 по статьям субконто ""%3"" с видом ""%4""'"),
				СчетСоставляющейКт.Код, СчетСоставляющейДт.Код, СубконтоПрочиеДоходыРасходы, ВидПДРСписание);
			ЗнакСоставляющей = "-";
			ЗначениеСоставляющей = -ЗначениеСоставляющей;
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа08", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющейДт.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			ЗнакСоставляющей, НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
	
	Графа = "21";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа21.Счет,
	               |	ВТ_Графа21.Значение
	               |ИЗ
	               |	ВТ_Графа21 КАК ВТ_Графа21";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Переведено из дебиторской в кредиторскую задолженность по счету " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней";
		ИначеЕсли ОбработкаСчетов.СчетаПоВидамПлатежей.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоВидамПлатежейУровням.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоРаботникам.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентам.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.АПСчетаБезРазвертки.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Переведено из дебиторской в кредиторскую задолженность по счету " + СчетСоставляющей.Код;
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа21", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	Графа = "22";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_Графа22.Счет,
	               |	ВТ_Графа22.Значение
	               |ИЗ
	               |	ВТ_Графа22 КАК ВТ_Графа22";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЗначениеПоказателя = 0;
	ВыведенаПерваяСтрокаРасшифровки = Ложь;
	Пока Выборка.Следующий() Цикл
		Если Не ВыведенаПерваяСтрокаРасшифровки Тогда
			НаименованиеСтрокиРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
			ВыведенаПерваяСтрокаРасшифровки = Истина;
		Иначе
			НаименованиеСтрокиРасшифровки = "";
		КонецЕсли;
		
		СчетСоставляющей = Выборка.Счет;
		ЗначениеСоставляющей = Выборка.Значение;
		
		Если ОбработкаСчетов.АПСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.ОсобыеСчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено
		 ИЛИ ОбработкаСчетов.СчетаПоСрочности.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Переведено из кредиторской в дебиторскую задолженность по счету " + СчетСоставляющей.Код + " по контрагентам и договорам со сроком оплаты не превышающим 365 дней";
		ИначеЕсли ОбработкаСчетов.СчетаПоВидамПлатежей.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоВидамПлатежейУровням.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоРаботникам.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентам.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.СчетаПоКонтрагентамДоговорам.Найти(СчетСоставляющей) <> Неопределено
		      ИЛИ ОбработкаСчетов.АПСчетаБезРазвертки.Найти(СчетСоставляющей) <> Неопределено Тогда
			НаименованиеСоставляющей = "Переведено из кредиторской в дебиторскую задолженность по счету " + СчетСоставляющей.Код;
		Иначе
			НаименованиеСоставляющейДополнительногоСчета = "";
				ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.УстановитьНаименованиеСоставляющейДополнительногоСчета(
					НаименованиеСоставляющейДополнительногоСчета, ПараметрыСоставляющих, "ВТ_Графа22", СчетСоставляющей);
			
			Если ЗначениеЗаполнено(НаименованиеСоставляющейДополнительногоСчета) Тогда
				НаименованиеСоставляющей = НаименованиеСоставляющейДополнительногоСчета;
			Иначе
				ВызватьИсключение "Не предусмотренный расшифровкой счет " + СчетСоставляющей.Код + " в графе " + Графа + " строки "+ НомерСтроки;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, НаименованиеСтрокиРасшифровки,
			"+", НаименованиеСоставляющей,
			ЗначениеСоставляющей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
		
		ЗначениеПоказателя = ЗначениеПоказателя + ЗначениеСоставляющей;
		
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
КонецПроцедуры

Функция ТекстЗапросаПоПереопределяемымТаблицамПояснения53_Краткосрочная() Экспорт
	
	ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК Счет,
		|	НЕОПРЕДЕЛЕНО КАК Субконто1,
		|	НЕОПРЕДЕЛЕНО КАК Субконто2,
		|	0 КАК СНД,
		|	0 КАК СНК,
		|	0 КАК ДО,
		|	0 КАК КО,
		|	0 КАК СКД,
		|	0 КАК СКК,
		|	ЛОЖЬ КАК ОтражатьВКредиторской,
		|	0 КАК Дельта,
		|	0 КАК ПереводДвК,
		|	0 КАК ПереводКвД
		|ПОМЕСТИТЬ ВТ_ДанныеСчетовРазвернутоПереопределяемый";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПояснения53_Краткосрочная() Экспорт
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	СчетаГрафы04.Счет КАК Счет
		|ПОМЕСТИТЬ ВТ_СчетаГрафы04
		|ИЗ
		|	&СчетаГрафы04 КАК СчетаГрафы04
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаГрафы05.Счет КАК Счет
		|ПОМЕСТИТЬ ВТ_СчетаГрафы05
		|ИЗ
		|	&СчетаГрафы05 КАК СчетаГрафы05
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаГрафы06.Счет КАК Счет
		|ПОМЕСТИТЬ ВТ_СчетаГрафы06
		|ИЗ
		|	&СчетаГрафы06 КАК СчетаГрафы06
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаГрафы07.Счет КАК Счет
		|ПОМЕСТИТЬ ВТ_СчетаГрафы07
		|ИЗ
		|	&СчетаГрафы07 КАК СчетаГрафы07
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаГрафы08.Счет КАК Счет
		|ПОМЕСТИТЬ ВТ_СчетаГрафы08
		|ИЗ
		|	&СчетаГрафы08 КАК СчетаГрафы08
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаГрафы10.Счет КАК Счет
		|ПОМЕСТИТЬ ВТ_СчетаГрафы10
		|ИЗ
		|	&СчетаГрафы10 КАК СчетаГрафы10
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаГрафы21.Счет КАК Счет
		|ПОМЕСТИТЬ ВТ_СчетаГрафы21
		|ИЗ
		|	&СчетаГрафы21 КАК СчетаГрафы21
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаГрафы22.Счет КАК Счет
		|ПОМЕСТИТЬ ВТ_СчетаГрафы22
		|ИЗ
		|	&СчетаГрафы22 КАК СчетаГрафы22
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетаНДСАвансов.Счет КАК Счет
		|ПОМЕСТИТЬ ВТ_СчетаНДСАвансов
		|ИЗ
		|	&СчетаНДСАвансов КАК СчетаНДСАвансов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ДоговорыКонтрагентов.Владелец КАК Справочник.Контрагенты) КАК Контрагент,
		|	ВЫРАЗИТЬ(ДоговорыКонтрагентов.Ссылка КАК Справочник.ДоговорыКонтрагентов) КАК Договор
		|ПОМЕСТИТЬ ВТ_ДолгосрочныеДоговоры
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.УстановленСрокОплаты
		|	И ДоговорыКонтрагентов.СрокОплаты > &КороткийСрок
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПереводыВКраткосрочные.Счет КАК Счет,
		|	ПереводыВКраткосрочные.Контрагент КАК Контрагент,
		|	ПереводыВКраткосрочные.Договор КАК Договор
		|ПОМЕСТИТЬ ВТ_ПереведеныВКраткосрочные
		|ИЗ
		|	(ВЫБРАТЬ
		|		ХозрасчетныйОборотыДтКт.СчетДт КАК Счет,
		|		ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.Контрагенты) КАК Контрагент,
		|		ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Период, СчетДт = &Счет_67_01, &СубконтоКонтрагентыДоговоры, СчетКт = &Счет_66_01, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОборотыДтКт.СчетДт,
		|		ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.Контрагенты),
		|		ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт2 КАК Справочник.ДоговорыКонтрагентов)
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Период, СчетДт = &Счет_67_21, &СубконтоКонтрагентыДоговоры, СчетКт = &Счет_66_21, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОборотыДтКт.СчетДт,
		|		ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.Контрагенты),
		|		ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт2 КАК Справочник.ДоговорыКонтрагентов)
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Период, СчетДт = &Счет_67_03, &СубконтоКонтрагентыДоговоры, СчетКт = &Счет_66_03, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОборотыДтКт.СчетДт,
		|		ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.Контрагенты),
		|		ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт2 КАК Справочник.ДоговорыКонтрагентов)
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Период, СчетДт = &Счет_67_23, &СубконтоКонтрагентыДоговоры, СчетКт = &Счет_66_23, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт) КАК ПереводыВКраткосрочные
		|
		|СГРУППИРОВАТЬ ПО
		|	ПереводыВКраткосрочные.Контрагент,
		|	ПереводыВКраткосрочные.Договор,
		|	ПереводыВКраткосрочные.Счет
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Счет,
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПереводыВКраткосрочные.Счет КАК Счет,
		|	ПереводыВКраткосрочные.Контрагент КАК Контрагент,
		|	ПереводыВКраткосрочные.ЦенныеБумаги КАК ЦенныеБумаги
		|ПОМЕСТИТЬ ВТ_ПереведеныВКраткосрочныеКЦБ
		|ИЗ
		|	(ВЫБРАТЬ
		|		ХозрасчетныйОборотыДтКт.СчетДт КАК Счет,
		|		ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.Контрагенты) КАК Контрагент,
		|		ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт2 КАК Справочник.ЦенныеБумаги) КАК ЦенныеБумаги
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Период, СчетДт = &Счет_67_05, &СубконтоКонтрагентыЦенныеБумаги, СчетКт = &Счет_66_05, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОборотыДтКт.СчетДт,
		|		ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.Контрагенты),
		|		ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт2 КАК Справочник.ЦенныеБумаги)
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Период, СчетДт = &Счет_67_25, &СубконтоКонтрагентыЦенныеБумаги, СчетКт = &Счет_66_25, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт) КАК ПереводыВКраткосрочные
		|
		|СГРУППИРОВАТЬ ПО
		|	ПереводыВКраткосрочные.Контрагент,
		|	ПереводыВКраткосрочные.Счет,
		|	ПереводыВКраткосрочные.ЦенныеБумаги
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Счет,
		|	Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СНД,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт КАК СНК,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СКД,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СКК,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
		|				И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
		|						И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
		|								ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
		|							ТОГДА ЛОЖЬ
		|						ИНАЧЕ ВЫБОР
		|								КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
		|										ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
		|									ТОГДА ИСТИНА
		|								ИНАЧЕ ЛОЖЬ
		|							КОНЕЦ
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ОтражатьВКредиторской,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
		|				И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
		|			ТОГДА ВЫБОР
		|					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|						ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|					ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
		|						И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
		|					ТОГДА ВЫБОР
		|							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|								ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|							ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|	КОНЕЦ КАК Дельта,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт <> 0
		|				И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт <> 0
		|			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПереводДвК,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт <> 0
		|				И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт <> 0
		|			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПереводКвД
		|ПОМЕСТИТЬ ВТ_ВсеДанныеАПСчетовПоСрочности
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&АПСчетаПоСрочности), &СубконтоКонтрагентыДоговоры, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеДанныеАПСчетовПоСрочности.Счет КАК Счет,
		|	ВТ_ВсеДанныеАПСчетовПоСрочности.Контрагент КАК Контрагент,
		|	ВТ_ВсеДанныеАПСчетовПоСрочности.Договор КАК Договор,
		|	ВТ_ВсеДанныеАПСчетовПоСрочности.СНД КАК СНД,
		|	ВТ_ВсеДанныеАПСчетовПоСрочности.СНК КАК СНК,
		|	ВЫБОР
		|		КОГДА ВТ_ВсеДанныеАПСчетовПоСрочности.ОтражатьВКредиторской
		|			ТОГДА ВТ_ВсеДанныеАПСчетовПоСрочности.ДО
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ДО,
		|	ВЫБОР
		|		КОГДА ВТ_ВсеДанныеАПСчетовПоСрочности.ОтражатьВКредиторской
		|			ТОГДА ВТ_ВсеДанныеАПСчетовПоСрочности.КО
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КО,
		|	ВЫБОР
		|		КОГДА ВТ_ВсеДанныеАПСчетовПоСрочности.ОтражатьВКредиторской
		|			ТОГДА ВТ_ВсеДанныеАПСчетовПоСрочности.Дельта
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Дельта,
		|	ВТ_ВсеДанныеАПСчетовПоСрочности.СКД КАК СКД,
		|	ВТ_ВсеДанныеАПСчетовПоСрочности.СКК КАК СКК,
		|	ВТ_ВсеДанныеАПСчетовПоСрочности.ПереводДвК КАК ПереводДвК,
		|	ВТ_ВсеДанныеАПСчетовПоСрочности.ПереводКвД КАК ПереводКвД
		|ПОМЕСТИТЬ ВТ_ДанныеАПСчетовПоСрочности
		|ИЗ
		|	ВТ_ВсеДанныеАПСчетовПоСрочности КАК ВТ_ВсеДанныеАПСчетовПоСрочности
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДолгосрочныеДоговоры КАК ВТ_ДолгосрочныеДоговоры
		|		ПО (ВТ_ДолгосрочныеДоговоры.Контрагент = ВТ_ВсеДанныеАПСчетовПоСрочности.Контрагент)
		|			И (ВТ_ДолгосрочныеДоговоры.Договор = ВТ_ВсеДанныеАПСчетовПоСрочности.Договор)
		|ГДЕ
		|	ВТ_ДолгосрочныеДоговоры.Договор ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт КАК СНК,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СКК,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
		|				И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
		|			ТОГДА ВЫБОР
		|					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|						ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|					ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
		|						И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
		|					ТОГДА ВЫБОР
		|							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|								ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|							ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|	КОНЕЦ КАК Дельта
		|ПОМЕСТИТЬ ВТ_ВсеДанныеОсобыхСчетовПоСрочности
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&ОсобыеСчетаПоСрочности), &СубконтоКонтрагентыДоговоры, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.Счет КАК Счет,
		|	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.Контрагент КАК Контрагент,
		|	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.Договор КАК Договор,
		|	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.СНК КАК СНК,
		|	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.ДО КАК ДО,
		|	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.КО КАК КО,
		|	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.СКК КАК СКК,
		|	ВТ_ВсеДанныеОсобыхСчетовПоСрочности.Дельта КАК Дельта
		|ПОМЕСТИТЬ ВТ_ДанныеОсобыхСчетовПоСрочности
		|ИЗ
		|	ВТ_ВсеДанныеОсобыхСчетовПоСрочности КАК ВТ_ВсеДанныеОсобыхСчетовПоСрочности
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДолгосрочныеДоговоры КАК ВТ_ДолгосрочныеДоговоры
		|		ПО (ВТ_ДолгосрочныеДоговоры.Контрагент = ВТ_ВсеДанныеОсобыхСчетовПоСрочности.Контрагент)
		|			И (ВТ_ДолгосрочныеДоговоры.Договор = ВТ_ВсеДанныеОсобыхСчетовПоСрочности.Договор)
		|ГДЕ
		|	ВТ_ДолгосрочныеДоговоры.Договор ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
		|	-1 * ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СНК,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
		|	-1 * ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СКК,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
		|				И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
		|			ТОГДА ВЫБОР
		|					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|						ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|					ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
		|						И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
		|					ТОГДА ВЫБОР
		|							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|								ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|							ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|	КОНЕЦ КАК Дельта,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СНД,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СКД,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
		|				И ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
		|			ТОГДА ВЫБОР
		|					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|						ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|					ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
		|						И ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
		|					ТОГДА ВЫБОР
		|							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|								ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|							ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|	КОНЕЦ КАК КОвДО
		|ПОМЕСТИТЬ ВТ_ВсеДанныеСчетовПоСрочности
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Период,
		|			,
		|			Счет В (&СчетаПоСрочности)
		|				ИЛИ Счет В (&СчетаПоСрочностиВычет),
		|			&СубконтоКонтрагентыДоговоры,
		|			Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеДанныеСчетовПоСрочности.Счет КАК Счет,
		|	ВТ_ВсеДанныеСчетовПоСрочности.Контрагент КАК Контрагент,
		|	ВТ_ВсеДанныеСчетовПоСрочности.Договор КАК Договор,
		|	ВТ_ВсеДанныеСчетовПоСрочности.СНК КАК СНК,
		|	ВТ_ВсеДанныеСчетовПоСрочности.ДО КАК ДО,
		|	ВТ_ВсеДанныеСчетовПоСрочности.КО КАК КО,
		|	ВТ_ВсеДанныеСчетовПоСрочности.СКК КАК СКК,
		|	ВТ_ВсеДанныеСчетовПоСрочности.Дельта КАК Дельта,
		|	ВТ_ВсеДанныеСчетовПоСрочности.СНД КАК СНД,
		|	ВТ_ВсеДанныеСчетовПоСрочности.СКД КАК СКД,
		|	ВТ_ВсеДанныеСчетовПоСрочности.КОвДО КАК КОвДО
		|ПОМЕСТИТЬ ВТ_ДанныеСчетовПоСрочности
		|ИЗ
		|	ВТ_ВсеДанныеСчетовПоСрочности КАК ВТ_ВсеДанныеСчетовПоСрочности
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДолгосрочныеДоговоры КАК ВТ_ДолгосрочныеДоговоры
		|		ПО (ВТ_ДолгосрочныеДоговоры.Контрагент = ВТ_ВсеДанныеСчетовПоСрочности.Контрагент)
		|			И (ВТ_ДолгосрочныеДоговоры.Договор = ВТ_ВсеДанныеСчетовПоСрочности.Договор)
		|ГДЕ
		|	ВТ_ДолгосрочныеДоговоры.Договор ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеДанных.Счет КАК Счет,
		|	СУММА(ОбъединениеДанных.СНД) КАК СНД,
		|	СУММА(ОбъединениеДанных.СНК) КАК СНК,
		|	СУММА(ВЫБОР
		|			КОГДА ОбъединениеДанных.ОтражатьВКредиторской
		|				ТОГДА ОбъединениеДанных.ДО
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДО,
		|	СУММА(ВЫБОР
		|			КОГДА ОбъединениеДанных.ОтражатьВКредиторской
		|				ТОГДА ОбъединениеДанных.КО
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КО,
		|	СУММА(ОбъединениеДанных.СКД) КАК СКД,
		|	СУММА(ОбъединениеДанных.СКК) КАК СКК,
		|	СУММА(ВЫБОР
		|			КОГДА ОбъединениеДанных.ОтражатьВКредиторской
		|				ТОГДА ОбъединениеДанных.Дельта
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Дельта,
		|	СУММА(ОбъединениеДанных.ПереводДвК) КАК ПереводДвК,
		|	СУММА(ОбъединениеДанных.ПереводКвД) КАК ПереводКвД
		|ПОМЕСТИТЬ ВТ_ДанныеСчетовРазвернуто
		|ИЗ
		|	(ВЫБРАТЬ
		|		ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
		|		ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Перечисление.ВидыПлатежейВГосБюджет) КАК Субконто1,
		|		NULL КАК Субконто2,
		|		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СНД,
		|		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт КАК СНК,
		|		ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
		|		ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
		|		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СКД,
		|		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СКК,
		|		ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
		|					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
		|							И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ВЫБОР
		|							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
		|									ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
		|								ТОГДА ЛОЖЬ
		|							ИНАЧЕ ВЫБОР
		|									КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
		|											ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
		|										ТОГДА ИСТИНА
		|									ИНАЧЕ ЛОЖЬ
		|								КОНЕЦ
		|						КОНЕЦ
		|				КОНЕЦ
		|		КОНЕЦ КАК ОтражатьВКредиторской,
		|		ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
		|					И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
		|				ТОГДА ВЫБОР
		|						КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|							ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|						ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|					КОНЕЦ
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
		|							И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
		|						ТОГДА ВЫБОР
		|								КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|									ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|								ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|							КОНЕЦ
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОНЕЦ КАК Дельта,
		|		ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт <> 0
		|					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт <> 0
		|				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ПереводДвК,
		|		ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт <> 0
		|					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт <> 0
		|				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ПереводКвД
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаПоВидамПлатежей), &СубконтоВидыПлатежей, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОстаткиИОбороты.Счет,
		|		ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Перечисление.ВидыПлатежейВГосБюджет),
		|		ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Перечисление.УровниБюджетов),
		|		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаОборотКт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт,
		|		ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
		|					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
		|							И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ВЫБОР
		|							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
		|									ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
		|								ТОГДА ЛОЖЬ
		|							ИНАЧЕ ВЫБОР
		|									КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
		|											ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
		|										ТОГДА ИСТИНА
		|									ИНАЧЕ ЛОЖЬ
		|								КОНЕЦ
		|						КОНЕЦ
		|				КОНЕЦ
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
		|					И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
		|				ТОГДА ВЫБОР
		|						КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|							ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|						ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|					КОНЕЦ
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
		|							И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
		|						ТОГДА ВЫБОР
		|								КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|									ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|								ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|							КОНЕЦ
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт <> 0
		|					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт <> 0
		|				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт <> 0
		|					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт <> 0
		|				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
		|			ИНАЧЕ 0
		|		КОНЕЦ
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаПоВидамПлатежейУровням), &СубконтоВидыПлатежейУровни, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОстаткиИОбороты.Счет,
		|		ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.ФизическиеЛица),
		|		NULL,
		|		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаОборотКт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт,
		|		ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
		|					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
		|							И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ВЫБОР
		|							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
		|									ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
		|								ТОГДА ЛОЖЬ
		|							ИНАЧЕ ВЫБОР
		|									КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
		|											ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
		|										ТОГДА ИСТИНА
		|									ИНАЧЕ ЛОЖЬ
		|								КОНЕЦ
		|						КОНЕЦ
		|				КОНЕЦ
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
		|					И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
		|				ТОГДА ВЫБОР
		|						КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|							ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|						ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|					КОНЕЦ
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
		|							И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
		|						ТОГДА ВЫБОР
		|								КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|									ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|								ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|							КОНЕЦ
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт <> 0
		|					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт <> 0
		|				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт <> 0
		|					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт <> 0
		|				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
		|			ИНАЧЕ 0
		|		КОНЕЦ
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаПоРаботникам), &СубконтоРаботники, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОстаткиИОбороты.Счет,
		|		ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты),
		|		NULL,
		|		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаОборотКт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт,
		|		ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
		|					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
		|							И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ВЫБОР
		|							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
		|									ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
		|								ТОГДА ЛОЖЬ
		|							ИНАЧЕ ВЫБОР
		|									КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
		|											ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
		|										ТОГДА ИСТИНА
		|									ИНАЧЕ ЛОЖЬ
		|								КОНЕЦ
		|						КОНЕЦ
		|				КОНЕЦ
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
		|					И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
		|				ТОГДА ВЫБОР
		|						КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|							ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|						ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|					КОНЕЦ
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
		|							И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
		|						ТОГДА ВЫБОР
		|								КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|									ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|								ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|							КОНЕЦ
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт <> 0
		|					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт <> 0
		|				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт <> 0
		|					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт <> 0
		|				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
		|			ИНАЧЕ 0
		|		КОНЕЦ
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаПоКонтрагентам), &СубконтоКонтрагенты, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОстаткиИОбороты.Счет,
		|		ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты),
		|		ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Справочник.ДоговорыКонтрагентов),
		|		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаОборотКт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт,
		|		ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
		|					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
		|							И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ВЫБОР
		|							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
		|									ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
		|								ТОГДА ЛОЖЬ
		|							ИНАЧЕ ВЫБОР
		|									КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
		|											ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
		|										ТОГДА ИСТИНА
		|									ИНАЧЕ ЛОЖЬ
		|								КОНЕЦ
		|						КОНЕЦ
		|				КОНЕЦ
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
		|					И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
		|				ТОГДА ВЫБОР
		|						КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|							ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|						ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|					КОНЕЦ
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
		|							И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
		|						ТОГДА ВЫБОР
		|								КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|									ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|								ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|							КОНЕЦ
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт <> 0
		|					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт <> 0
		|				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт <> 0
		|					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт <> 0
		|				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
		|			ИНАЧЕ 0
		|		КОНЕЦ
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаПоКонтрагентамДоговорам), &СубконтоКонтрагентыДоговоры, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОстаткиИОбороты.Счет,
		|		NULL,
		|		NULL,
		|		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаОборотКт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт,
		|		ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт,
		|		ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
		|					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
		|							И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ ВЫБОР
		|							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт > 0
		|									ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт > 0
		|								ТОГДА ЛОЖЬ
		|							ИНАЧЕ ВЫБОР
		|									КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт > 0
		|											ИЛИ ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт > 0
		|										ТОГДА ИСТИНА
		|									ИНАЧЕ ЛОЖЬ
		|								КОНЕЦ
		|						КОНЕЦ
		|				КОНЕЦ
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
		|					И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
		|				ТОГДА ВЫБОР
		|						КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|							ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|						ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|					КОНЕЦ
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
		|							И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
		|						ТОГДА ВЫБОР
		|								КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|									ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|								ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|							КОНЕЦ
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт <> 0
		|					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт <> 0
		|				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт <> 0
		|					И ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт <> 0
		|				ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
		|			ИНАЧЕ 0
		|		КОНЕЦ
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&АПСчетаБезРазвертки), , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовРазвернутоПереопределяемый.Счет,
		|		ВТ_ДанныеСчетовРазвернутоПереопределяемый.Субконто1,
		|		ВТ_ДанныеСчетовРазвернутоПереопределяемый.Субконто2,
		|		ВТ_ДанныеСчетовРазвернутоПереопределяемый.СНД,
		|		ВТ_ДанныеСчетовРазвернутоПереопределяемый.СНК,
		|		ВТ_ДанныеСчетовРазвернутоПереопределяемый.ДО,
		|		ВТ_ДанныеСчетовРазвернутоПереопределяемый.КО,
		|		ВТ_ДанныеСчетовРазвернутоПереопределяемый.СКД,
		|		ВТ_ДанныеСчетовРазвернутоПереопределяемый.СКК,
		|		ВТ_ДанныеСчетовРазвернутоПереопределяемый.ОтражатьВКредиторской,
		|		ВТ_ДанныеСчетовРазвернутоПереопределяемый.Дельта,
		|		ВТ_ДанныеСчетовРазвернутоПереопределяемый.ПереводДвК,
		|		ВТ_ДанныеСчетовРазвернутоПереопределяемый.ПереводКвД
		|	ИЗ
		|		ВТ_ДанныеСчетовРазвернутоПереопределяемый КАК ВТ_ДанныеСчетовРазвернутоПереопределяемый) КАК ОбъединениеДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеДанных.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт КАК СНК,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СКК,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
		|				И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
		|			ТОГДА ВЫБОР
		|					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|						ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|					ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
		|						И ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
		|					ТОГДА ВЫБОР
		|							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|								ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|							ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|	КОНЕЦ КАК Дельта
		|ПОМЕСТИТЬ ВТ_ДанныеСчетовБезОбработки
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Период,
		|			,
		|			Счет В (&СчетаБезОбработки)
		|				ИЛИ Счет В (&СчетаПоКредитамЗаймамБезОбработки),
		|			,
		|			Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
		|	-1 * ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СНК,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
		|	-1 * ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СКК,
		|	0 КАК Дельта
		|ПОМЕСТИТЬ ВТ_ВсеДанныеСчетовПеревода
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаПоКредитамЗаймамПеревод), &СубконтоКонтрагентыДоговоры, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеДанныеСчетовПеревода.Счет КАК Счет,
		|	ВТ_ВсеДанныеСчетовПеревода.Контрагент КАК Контрагент,
		|	ВТ_ВсеДанныеСчетовПеревода.Договор КАК Договор,
		|	ВТ_ВсеДанныеСчетовПеревода.СНК КАК СНК,
		|	ВТ_ВсеДанныеСчетовПеревода.ДО КАК ДО,
		|	ВТ_ВсеДанныеСчетовПеревода.КО КАК КО,
		|	ВТ_ВсеДанныеСчетовПеревода.СКК КАК СКК,
		|	ВТ_ВсеДанныеСчетовПеревода.Дельта КАК Дельта
		|ПОМЕСТИТЬ ВТ_ДанныеСчетовПеревода
		|ИЗ
		|	ВТ_ВсеДанныеСчетовПеревода КАК ВТ_ВсеДанныеСчетовПеревода
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПереведеныВКраткосрочные КАК ВТ_ПереведеныВКраткосрочные
		|		ПО ВТ_ВсеДанныеСчетовПеревода.Счет = ВТ_ПереведеныВКраткосрочные.Счет
		|			И ВТ_ВсеДанныеСчетовПеревода.Контрагент = ВТ_ПереведеныВКраткосрочные.Контрагент
		|			И ВТ_ВсеДанныеСчетовПеревода.Договор = ВТ_ПереведеныВКраткосрочные.Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Справочник.ЦенныеБумаги) КАК ЦенныеБумаги,
		|	-1 * ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СНК,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
		|	-1 * ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СКК,
		|	0 КАК Дельта
		|ПОМЕСТИТЬ ВТ_ВсеДанныеСчетовПереводаКЦБ
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаПоКредитамЗаймамПереводКЦБ), &СубконтоКонтрагентыЦенныеБумаги, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеДанныеСчетовПереводаКЦБ.Счет КАК Счет,
		|	ВТ_ВсеДанныеСчетовПереводаКЦБ.Контрагент КАК Контрагент,
		|	ВТ_ВсеДанныеСчетовПереводаКЦБ.ЦенныеБумаги КАК ЦенныеБумаги,
		|	ВТ_ВсеДанныеСчетовПереводаКЦБ.СНК КАК СНК,
		|	ВТ_ВсеДанныеСчетовПереводаКЦБ.ДО КАК ДО,
		|	ВТ_ВсеДанныеСчетовПереводаКЦБ.КО КАК КО,
		|	ВТ_ВсеДанныеСчетовПереводаКЦБ.СКК КАК СКК,
		|	ВТ_ВсеДанныеСчетовПереводаКЦБ.Дельта КАК Дельта
		|ПОМЕСТИТЬ ВТ_ДанныеСчетовПереводаКЦБ
		|ИЗ
		|	ВТ_ВсеДанныеСчетовПереводаКЦБ КАК ВТ_ВсеДанныеСчетовПереводаКЦБ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПереведеныВКраткосрочныеКЦБ КАК ВТ_ПереведеныВКраткосрочныеКЦБ
		|		ПО ВТ_ВсеДанныеСчетовПереводаКЦБ.Счет = ВТ_ПереведеныВКраткосрочныеКЦБ.Счет
		|			И ВТ_ВсеДанныеСчетовПереводаКЦБ.Контрагент = ВТ_ПереведеныВКраткосрочныеКЦБ.Контрагент
		|			И ВТ_ВсеДанныеСчетовПереводаКЦБ.ЦенныеБумаги = ВТ_ПереведеныВКраткосрочныеКЦБ.ЦенныеБумаги
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеДанных.Счет КАК Счет,
		|	СУММА(ОбъединениеДанных.СНК) КАК СНК,
		|	СУММА(ОбъединениеДанных.СНД) КАК СНД
		|ПОМЕСТИТЬ ВТ_Графа04_Итог
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_ДанныеАПСчетовПоСрочности.Счет КАК Счет,
		|		ВТ_ДанныеАПСчетовПоСрочности.СНК КАК СНК,
		|		0 КАК СНД
		|	ИЗ
		|		ВТ_ДанныеАПСчетовПоСрочности КАК ВТ_ДанныеАПСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеОсобыхСчетовПоСрочности.Счет,
		|		ВТ_ДанныеОсобыхСчетовПоСрочности.СНК,
		|		0
		|	ИЗ
		|		ВТ_ДанныеОсобыхСчетовПоСрочности КАК ВТ_ДанныеОсобыхСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовПоСрочности.Счет,
		|		ВТ_ДанныеСчетовПоСрочности.СНК,
		|		ВТ_ДанныеСчетовПоСрочности.СНД
		|	ИЗ
		|		ВТ_ДанныеСчетовПоСрочности КАК ВТ_ДанныеСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовРазвернуто.Счет,
		|		ВТ_ДанныеСчетовРазвернуто.СНК,
		|		0
		|	ИЗ
		|		ВТ_ДанныеСчетовРазвернуто КАК ВТ_ДанныеСчетовРазвернуто
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовБезОбработки.Счет,
		|		ВТ_ДанныеСчетовБезОбработки.СНК,
		|		0
		|	ИЗ
		|		ВТ_ДанныеСчетовБезОбработки КАК ВТ_ДанныеСчетовБезОбработки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовПеревода.Счет,
		|		ВТ_ДанныеСчетовПеревода.СНК,
		|		0
		|	ИЗ
		|		ВТ_ДанныеСчетовПеревода КАК ВТ_ДанныеСчетовПеревода
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовПереводаКЦБ.Счет,
		|		ВТ_ДанныеСчетовПереводаКЦБ.СНК,
		|		0
		|	ИЗ
		|		ВТ_ДанныеСчетовПереводаКЦБ КАК ВТ_ДанныеСчетовПереводаКЦБ) КАК ОбъединениеДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеДанных.Счет
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СчетаГрафы04.Счет КАК Счет,
		|	ЕСТЬNULL(ВТ_Графа04_Итог.СНК, 0) КАК Значение,
		|	ЕСТЬNULL(ВТ_Графа04_Итог.СНД, 0) КАК СНД
		|ПОМЕСТИТЬ ВТ_Графа04
		|ИЗ
		|	ВТ_СчетаГрафы04 КАК ВТ_СчетаГрафы04
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа04_Итог КАК ВТ_Графа04_Итог
		|		ПО ВТ_СчетаГрафы04.Счет = ВТ_Графа04_Итог.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеДанных.Счет КАК Счет,
		|	СУММА(ОбъединениеДанных.СКК) КАК СКК,
		|	СУММА(ОбъединениеДанных.СКД) КАК СКД
		|ПОМЕСТИТЬ ВТ_Графа10_Итог
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_ДанныеАПСчетовПоСрочности.Счет КАК Счет,
		|		ВТ_ДанныеАПСчетовПоСрочности.СКК КАК СКК,
		|		0 КАК СКД
		|	ИЗ
		|		ВТ_ДанныеАПСчетовПоСрочности КАК ВТ_ДанныеАПСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеОсобыхСчетовПоСрочности.Счет,
		|		ВТ_ДанныеОсобыхСчетовПоСрочности.СКК,
		|		0
		|	ИЗ
		|		ВТ_ДанныеОсобыхСчетовПоСрочности КАК ВТ_ДанныеОсобыхСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовПоСрочности.Счет,
		|		ВТ_ДанныеСчетовПоСрочности.СКК,
		|		ВТ_ДанныеСчетовПоСрочности.СКД
		|	ИЗ
		|		ВТ_ДанныеСчетовПоСрочности КАК ВТ_ДанныеСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовРазвернуто.Счет,
		|		ВТ_ДанныеСчетовРазвернуто.СКК,
		|		0
		|	ИЗ
		|		ВТ_ДанныеСчетовРазвернуто КАК ВТ_ДанныеСчетовРазвернуто
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовБезОбработки.Счет,
		|		ВТ_ДанныеСчетовБезОбработки.СКК,
		|		0
		|	ИЗ
		|		ВТ_ДанныеСчетовБезОбработки КАК ВТ_ДанныеСчетовБезОбработки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовПеревода.Счет,
		|		ВТ_ДанныеСчетовПеревода.СКК,
		|		0
		|	ИЗ
		|		ВТ_ДанныеСчетовПеревода КАК ВТ_ДанныеСчетовПеревода
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовПереводаКЦБ.Счет,
		|		ВТ_ДанныеСчетовПереводаКЦБ.СКК,
		|		0
		|	ИЗ
		|		ВТ_ДанныеСчетовПереводаКЦБ КАК ВТ_ДанныеСчетовПереводаКЦБ) КАК ОбъединениеДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеДанных.Счет
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СчетаГрафы10.Счет КАК Счет,
		|	ЕСТЬNULL(ВТ_Графа10_Итог.СКК, 0) КАК Значение,
		|	ЕСТЬNULL(ВТ_Графа10_Итог.СКД, 0) КАК СКД
		|ПОМЕСТИТЬ ВТ_Графа10
		|ИЗ
		|	ВТ_СчетаГрафы10 КАК ВТ_СчетаГрафы10
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа10_Итог КАК ВТ_Графа10_Итог
		|		ПО ВТ_СчетаГрафы10.Счет = ВТ_Графа10_Итог.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеДанных.Счет КАК Счет,
		|	СУММА(ОбъединениеДанных.ПереводДвК) КАК Перевод
		|ПОМЕСТИТЬ ВТ_Графа21_Итог
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_ДанныеАПСчетовПоСрочности.Счет КАК Счет,
		|		ВТ_ДанныеАПСчетовПоСрочности.ПереводДвК КАК ПереводДвК
		|	ИЗ
		|		ВТ_ДанныеАПСчетовПоСрочности КАК ВТ_ДанныеАПСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовРазвернуто.Счет,
		|		ВТ_ДанныеСчетовРазвернуто.ПереводДвК
		|	ИЗ
		|		ВТ_ДанныеСчетовРазвернуто КАК ВТ_ДанныеСчетовРазвернуто) КАК ОбъединениеДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеДанных.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СчетаГрафы21.Счет КАК Счет,
		|	ЕСТЬNULL(ВТ_Графа21_Итог.Перевод, 0) КАК Значение
		|ПОМЕСТИТЬ ВТ_Графа21
		|ИЗ
		|	ВТ_СчетаГрафы21 КАК ВТ_СчетаГрафы21
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа21_Итог КАК ВТ_Графа21_Итог
		|		ПО ВТ_СчетаГрафы21.Счет = ВТ_Графа21_Итог.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеДанных.Счет КАК Счет,
		|	СУММА(ОбъединениеДанных.ПереводКвД) КАК Перевод
		|ПОМЕСТИТЬ ВТ_Графа22_Итог
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_ДанныеАПСчетовПоСрочности.Счет КАК Счет,
		|		ВТ_ДанныеАПСчетовПоСрочности.ПереводКвД КАК ПереводКвД
		|	ИЗ
		|		ВТ_ДанныеАПСчетовПоСрочности КАК ВТ_ДанныеАПСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовРазвернуто.Счет,
		|		ВТ_ДанныеСчетовРазвернуто.ПереводКвД
		|	ИЗ
		|		ВТ_ДанныеСчетовРазвернуто КАК ВТ_ДанныеСчетовРазвернуто) КАК ОбъединениеДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеДанных.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СчетаГрафы22.Счет КАК Счет,
		|	ЕСТЬNULL(ВТ_Графа22_Итог.Перевод, 0) КАК Значение
		|ПОМЕСТИТЬ ВТ_Графа22
		|ИЗ
		|	ВТ_СчетаГрафы22 КАК ВТ_СчетаГрафы22
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа22_Итог КАК ВТ_Графа22_Итог
		|		ПО ВТ_СчетаГрафы22.Счет = ВТ_Графа22_Итог.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеДанных.Счет КАК Счет,
		|	СУММА(ОбъединениеДанных.КО) КАК КО,
		|	СУММА(ОбъединениеДанных.Дельта) КАК Дельта,
		|	СУММА(ОбъединениеДанных.ДО) КАК ДО,
		|	СУММА(ОбъединениеДанных.КОвДО) КАК КОвДО
		|ПОМЕСТИТЬ ВТ_Графа05_Итог
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_ДанныеАПСчетовПоСрочности.Счет КАК Счет,
		|		ВТ_ДанныеАПСчетовПоСрочности.КО КАК КО,
		|		ВТ_ДанныеАПСчетовПоСрочности.Дельта КАК Дельта,
		|		0 КАК ДО,
		|		0 КАК КОвДО
		|	ИЗ
		|		ВТ_ДанныеАПСчетовПоСрочности КАК ВТ_ДанныеАПСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеОсобыхСчетовПоСрочности.Счет,
		|		ВТ_ДанныеОсобыхСчетовПоСрочности.КО,
		|		ВТ_ДанныеОсобыхСчетовПоСрочности.Дельта,
		|		0,
		|		0
		|	ИЗ
		|		ВТ_ДанныеОсобыхСчетовПоСрочности КАК ВТ_ДанныеОсобыхСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовПоСрочности.Счет,
		|		ВТ_ДанныеСчетовПоСрочности.КО,
		|		ВТ_ДанныеСчетовПоСрочности.Дельта,
		|		ВТ_ДанныеСчетовПоСрочности.ДО,
		|		ВТ_ДанныеСчетовПоСрочности.КОвДО
		|	ИЗ
		|		ВТ_ДанныеСчетовПоСрочности КАК ВТ_ДанныеСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовРазвернуто.Счет,
		|		ВТ_ДанныеСчетовРазвернуто.КО,
		|		ВТ_ДанныеСчетовРазвернуто.Дельта,
		|		0,
		|		0
		|	ИЗ
		|		ВТ_ДанныеСчетовРазвернуто КАК ВТ_ДанныеСчетовРазвернуто
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовБезОбработки.Счет,
		|		ВТ_ДанныеСчетовБезОбработки.КО,
		|		ВТ_ДанныеСчетовБезОбработки.Дельта,
		|		0,
		|		0
		|	ИЗ
		|		ВТ_ДанныеСчетовБезОбработки КАК ВТ_ДанныеСчетовБезОбработки) КАК ОбъединениеДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеДанных.Счет
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СчетаГрафы05.Счет КАК Счет,
		|	ЕСТЬNULL(ВТ_Графа05_Итог.КО, 0) КАК КО,
		|	ЕСТЬNULL(ВТ_Графа05_Итог.Дельта, 0) КАК Дельта,
		|	ЕСТЬNULL(ВТ_Графа05_Итог.ДО, 0) КАК ДО,
		|	ЕСТЬNULL(ВТ_Графа05_Итог.КОвДО, 0) КАК КОвДО
		|ПОМЕСТИТЬ ВТ_Графа05
		|ИЗ
		|	ВТ_СчетаГрафы05 КАК ВТ_СчетаГрафы05
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа05_Итог КАК ВТ_Графа05_Итог
		|		ПО ВТ_СчетаГрафы05.Счет = ВТ_Графа05_Итог.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеДанных.Счет КАК Счет,
		|	СУММА(ОбъединениеДанных.ДО) КАК ДО,
		|	СУММА(ОбъединениеДанных.Дельта) КАК Дельта,
		|	СУММА(ОбъединениеДанных.КО) КАК КО,
		|	СУММА(ОбъединениеДанных.КОвДО) КАК КОвДО
		|ПОМЕСТИТЬ ВТ_Графа07_Итог
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_ДанныеАПСчетовПоСрочности.Счет КАК Счет,
		|		ВТ_ДанныеАПСчетовПоСрочности.ДО КАК ДО,
		|		ВТ_ДанныеАПСчетовПоСрочности.Дельта КАК Дельта,
		|		0 КАК КО,
		|		0 КАК КОвДО
		|	ИЗ
		|		ВТ_ДанныеАПСчетовПоСрочности КАК ВТ_ДанныеАПСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеОсобыхСчетовПоСрочности.Счет,
		|		ВТ_ДанныеОсобыхСчетовПоСрочности.ДО,
		|		ВТ_ДанныеОсобыхСчетовПоСрочности.Дельта,
		|		0,
		|		0
		|	ИЗ
		|		ВТ_ДанныеОсобыхСчетовПоСрочности КАК ВТ_ДанныеОсобыхСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовПоСрочности.Счет,
		|		ВТ_ДанныеСчетовПоСрочности.ДО,
		|		ВТ_ДанныеСчетовПоСрочности.Дельта,
		|		ВТ_ДанныеСчетовПоСрочности.КО,
		|		ВТ_ДанныеСчетовПоСрочности.КОвДО
		|	ИЗ
		|		ВТ_ДанныеСчетовПоСрочности КАК ВТ_ДанныеСчетовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовРазвернуто.Счет,
		|		ВТ_ДанныеСчетовРазвернуто.ДО,
		|		ВТ_ДанныеСчетовРазвернуто.Дельта,
		|		0,
		|		0
		|	ИЗ
		|		ВТ_ДанныеСчетовРазвернуто КАК ВТ_ДанныеСчетовРазвернуто
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовБезОбработки.Счет,
		|		ВТ_ДанныеСчетовБезОбработки.ДО,
		|		ВТ_ДанныеСчетовБезОбработки.Дельта,
		|		0,
		|		0
		|	ИЗ
		|		ВТ_ДанныеСчетовБезОбработки КАК ВТ_ДанныеСчетовБезОбработки
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовПеревода.Счет,
		|		ВТ_ДанныеСчетовПеревода.ДО,
		|		ВТ_ДанныеСчетовПеревода.Дельта,
		|		0,
		|		0
		|	ИЗ
		|		ВТ_ДанныеСчетовПеревода КАК ВТ_ДанныеСчетовПеревода
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСчетовПереводаКЦБ.Счет,
		|		ВТ_ДанныеСчетовПереводаКЦБ.ДО,
		|		ВТ_ДанныеСчетовПереводаКЦБ.Дельта,
		|		0,
		|		0
		|	ИЗ
		|		ВТ_ДанныеСчетовПереводаКЦБ КАК ВТ_ДанныеСчетовПереводаКЦБ) КАК ОбъединениеДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеДанных.Счет
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СчетаГрафы07.Счет КАК Счет,
		|	ЕСТЬNULL(ВТ_Графа07_Итог.ДО, 0) КАК ДО,
		|	ЕСТЬNULL(ВТ_Графа07_Итог.Дельта, 0) КАК Дельта,
		|	ЕСТЬNULL(ВТ_Графа07_Итог.КО, 0) КАК КО,
		|	ЕСТЬNULL(ВТ_Графа07_Итог.КОвДО, 0) КАК КОвДО
		|ПОМЕСТИТЬ ВТ_Графа07
		|ИЗ
		|	ВТ_СчетаГрафы07 КАК ВТ_СчетаГрафы07
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа07_Итог КАК ВТ_Графа07_Итог
		|		ПО ВТ_СчетаГрафы07.Счет = ВТ_Графа07_Итог.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.Контрагенты) КАК Контрагент,
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК ОБ
		|ПОМЕСТИТЬ ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Период,
		|			СчетДт В (&АПСчетаПоСрочности)
		|				ИЛИ СчетДт В (&ОсобыеСчетаПоСрочности)
		|				ИЛИ СчетДт В (&СчетаПоСрочности),
		|			&СубконтоКонтрагентыДоговоры,
		|			СчетКт = &Счет_91_01,
		|			&СубконтоПрочиеДоходыРасходы,
		|			Организация = &Организация
		|				И СубконтоКт1.ВидПрочихДоходовИРасходов = &ВидПДРСписание) КАК ХозрасчетныйОборотыДтКт
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.Контрагенты) КАК Контрагент,
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК ОБ
		|ПОМЕСТИТЬ ВТ_ВсеДанныеСписанияЗадолженностиПоСрочностиВычет
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Период,
		|			СчетДт = &Счет_91_02,
		|			&СубконтоПрочиеДоходыРасходы,
		|			СчетКт В (&СчетаПоСрочностиВычет),
		|			&СубконтоКонтрагентыДоговоры,
		|			Организация = &Организация
		|				И СубконтоДт1.ВидПрочихДоходовИРасходов = &ВидПДРСписание) КАК ХозрасчетныйОборотыДтКт
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности.СчетДт КАК СчетДт,
		|	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности.СчетКт КАК СчетКт,
		|	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности.Контрагент КАК Контрагент,
		|	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности.Договор КАК Договор,
		|	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности.ОБ КАК ОБ
		|ПОМЕСТИТЬ ВТ_ДанныеСписанияЗадолженностиПоСрочности
		|ИЗ
		|	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности КАК ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДолгосрочныеДоговоры КАК ВТ_ДолгосрочныеДоговоры
		|		ПО (ВТ_ДолгосрочныеДоговоры.Контрагент = ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности.Контрагент)
		|			И (ВТ_ДолгосрочныеДоговоры.Договор = ВТ_ВсеДанныеСписанияЗадолженностиПоСрочности.Договор)
		|ГДЕ
		|	ВТ_ДолгосрочныеДоговоры.Договор ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочностиВычет.СчетДт КАК СчетДт,
		|	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочностиВычет.СчетКт КАК СчетКт,
		|	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочностиВычет.Контрагент КАК Контрагент,
		|	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочностиВычет.Договор КАК Договор,
		|	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочностиВычет.ОБ КАК ОБ
		|ПОМЕСТИТЬ ВТ_ДанныеСписанияЗадолженностиПоСрочностиВычет
		|ИЗ
		|	ВТ_ВсеДанныеСписанияЗадолженностиПоСрочностиВычет КАК ВТ_ВсеДанныеСписанияЗадолженностиПоСрочностиВычет
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДолгосрочныеДоговоры КАК ВТ_ДолгосрочныеДоговоры
		|		ПО (ВТ_ДолгосрочныеДоговоры.Контрагент = ВТ_ВсеДанныеСписанияЗадолженностиПоСрочностиВычет.Контрагент)
		|			И (ВТ_ДолгосрочныеДоговоры.Договор = ВТ_ВсеДанныеСписанияЗадолженностиПоСрочностиВычет.Договор)
		|ГДЕ
		|	ВТ_ДолгосрочныеДоговоры.Договор ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК ОБ
		|ПОМЕСТИТЬ ВТ_ДанныеСписанияЗадолженности
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Период,
		|			СчетДт В (&СчетаПоВидамПлатежей)
		|				ИЛИ СчетДт В (&СчетаПоВидамПлатежейУровням)
		|				ИЛИ СчетДт В (&СчетаБезОбработки)
		|				ИЛИ СчетДт В (&СчетаПоКонтрагентам)
		|				ИЛИ СчетДт В (&СчетаПоРаботникам)
		|				ИЛИ СчетДт В (&АПСчетаБезРазвертки)
		|				ИЛИ СчетДт В (&СчетаПоКредитамЗаймамБезОбработки)
		|				ИЛИ СчетДт В (&СчетаПоКредитамЗаймамПеревод)
		|				ИЛИ СчетДт В (&СчетаПоКонтрагентамДоговорам),
		|			,
		|			СчетКт = &Счет_91_01,
		|			&СубконтоПрочиеДоходыРасходы,
		|			Организация = &Организация
		|				И СубконтоКт1.ВидПрочихДоходовИРасходов = &ВидПДРСписание) КАК ХозрасчетныйОборотыДтКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеДанных.СчетДт КАК СчетДт,
		|	ОбъединениеДанных.СчетКт КАК СчетКт,
		|	СУММА(ОбъединениеДанных.ОБ) КАК ОБ
		|ПОМЕСТИТЬ ВТ_Графа08_Итог
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_ДанныеСписанияЗадолженностиПоСрочности.СчетДт КАК СчетДт,
		|		ВТ_ДанныеСписанияЗадолженностиПоСрочности.СчетКт КАК СчетКт,
		|		ВТ_ДанныеСписанияЗадолженностиПоСрочности.ОБ КАК ОБ
		|	ИЗ
		|		ВТ_ДанныеСписанияЗадолженностиПоСрочности КАК ВТ_ДанныеСписанияЗадолженностиПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСписанияЗадолженности.СчетДт,
		|		ВТ_ДанныеСписанияЗадолженности.СчетКт,
		|		ВТ_ДанныеСписанияЗадолженности.ОБ
		|	ИЗ
		|		ВТ_ДанныеСписанияЗадолженности КАК ВТ_ДанныеСписанияЗадолженности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеСписанияЗадолженностиПоСрочностиВычет.СчетДт,
		|		ВТ_ДанныеСписанияЗадолженностиПоСрочностиВычет.СчетКт,
		|		ВТ_ДанныеСписанияЗадолженностиПоСрочностиВычет.ОБ
		|	ИЗ
		|		ВТ_ДанныеСписанияЗадолженностиПоСрочностиВычет КАК ВТ_ДанныеСписанияЗадолженностиПоСрочностиВычет) КАК ОбъединениеДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеДанных.СчетДт,
		|	ОбъединениеДанных.СчетКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СчетаГрафы08.Счет КАК Счета,
		|	ВЫБОР
		|		КОГДА НЕ ВТ_СчетаГрафы08.Счет В (&СчетаПоСрочностиВычет)
		|			ТОГДА ВТ_СчетаГрафы08.Счет
		|		ИНАЧЕ &Счет_91_02
		|	КОНЕЦ КАК СчетДт,
		|	ВЫБОР
		|		КОГДА ВТ_СчетаГрафы08.Счет В (&СчетаПоСрочностиВычет)
		|			ТОГДА ВТ_СчетаГрафы08.Счет
		|		ИНАЧЕ &Счет_91_01
		|	КОНЕЦ КАК СчетКт,
		|	ЕСТЬNULL(ВТ_Графа08_Итог.ОБ, 0) КАК Значение
		|ПОМЕСТИТЬ ВТ_Графа08
		|ИЗ
		|	ВТ_СчетаГрафы08 КАК ВТ_СчетаГрафы08
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа08_Итог КАК ВТ_Графа08_Итог
		|		ПО (ВТ_СчетаГрафы08.Счет = ВТ_Графа08_Итог.СчетДт
		|				ИЛИ ВТ_СчетаГрафы08.Счет = ВТ_Графа08_Итог.СчетКт)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт,
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.Контрагенты) КАК Контрагент,
		|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК ОБ
		|ПОМЕСТИТЬ ВТ_ВсеДанныеНачисленияПроцентовШтрафовПоСрочности
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Период,
		|			СчетДт = &Счет_91_02,
		|			&СубконтоПрочиеДоходыРасходы,
		|			СчетКт В (&АПСчетаПоСрочности)
		|				ИЛИ СчетКт В (&ОсобыеСчетаПоСрочности)
		|				ИЛИ СчетКт В (&СчетаПоСрочности),
		|			&СубконтоКонтрагентыДоговоры,
		|			Организация = &Организация
		|				И СубконтоДт1.ВидПрочихДоходовИРасходов = &ВидПДРНачисление) КАК ХозрасчетныйОборотыДтКт
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеДанныеНачисленияПроцентовШтрафовПоСрочности.СчетДт КАК СчетДт,
		|	ВТ_ВсеДанныеНачисленияПроцентовШтрафовПоСрочности.СчетКт КАК СчетКт,
		|	ВТ_ВсеДанныеНачисленияПроцентовШтрафовПоСрочности.Контрагент КАК Контрагент,
		|	ВТ_ВсеДанныеНачисленияПроцентовШтрафовПоСрочности.Договор КАК Договор,
		|	ВТ_ВсеДанныеНачисленияПроцентовШтрафовПоСрочности.ОБ КАК ОБ
		|ПОМЕСТИТЬ ВТ_ДанныеНачисленияПроцентовШтрафовПоСрочности
		|ИЗ
		|	ВТ_ВсеДанныеНачисленияПроцентовШтрафовПоСрочности КАК ВТ_ВсеДанныеНачисленияПроцентовШтрафовПоСрочности
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДолгосрочныеДоговоры КАК ВТ_ДолгосрочныеДоговоры
		|		ПО (ВТ_ДолгосрочныеДоговоры.Контрагент = ВТ_ВсеДанныеНачисленияПроцентовШтрафовПоСрочности.Контрагент)
		|			И (ВТ_ДолгосрочныеДоговоры.Договор = ВТ_ВсеДанныеНачисленияПроцентовШтрафовПоСрочности.Договор)
		|ГДЕ
		|	ВТ_ДолгосрочныеДоговоры.Договор ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеДанных.СчетДт КАК СчетДт,
		|	ОбъединениеДанных.СчетКт КАК СчетКт,
		|	ОбъединениеДанных.ОБ КАК ОБ
		|ПОМЕСТИТЬ ВТ_ДанныеНачисленияПроцентовШтрафов
		|ИЗ
		|	(ВЫБРАТЬ
		|		&Счет_91_02 КАК СчетДт,
		|		ХозрасчетныйОбороты.Счет КАК СчетКт,
		|		ХозрасчетныйОбороты.СуммаОборотКт КАК ОБ
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Обороты(
		|				&НачалоПериода,
		|				&КонецПериода,
		|				Период,
		|				Счет В (&СчетаПоВидамПлатежей)
		|					ИЛИ Счет В (&СчетаПоВидамПлатежейУровням),
		|				&СубконтоВидыПлатежей,
		|				Организация = &Организация
		|					И Субконто1 В (&ВидПлатежейШтрафыПени),
		|				,
		|				) КАК ХозрасчетныйОбороты
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОборотыДтКт.СчетДт,
		|		ХозрасчетныйОборотыДтКт.СчетКт,
		|		ХозрасчетныйОборотыДтКт.СуммаОборот
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|				&НачалоПериода,
		|				&КонецПериода,
		|				Период,
		|				СчетДт = &Счет_91_02,
		|				&СубконтоПрочиеДоходыРасходы,
		|				СчетКт В (&СчетаБезОбработки)
		|					ИЛИ СчетКт В (&СчетаПоРаботникам)
		|					ИЛИ СчетКт В (&АПСчетаБезРазвертки),
		|				,
		|				Организация = &Организация
		|					И СубконтоДт1.ВидПрочихДоходовИРасходов = &ВидПДРНачисление) КАК ХозрасчетныйОборотыДтКт
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		&Счет_91_02,
		|		ХозрасчетныйОбороты.Счет,
		|		ХозрасчетныйОбороты.СуммаОборотКт
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, Период, Счет В (&СчетаПоКредитамЗаймамБезОбработки), , Организация = &Организация, , ) КАК ХозрасчетныйОбороты) КАК ОбъединениеДанных
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеДанных.СчетДт КАК СчетДт,
		|	ОбъединениеДанных.СчетКт КАК СчетКт,
		|	СУММА(ОбъединениеДанных.ОБ) КАК ОБ
		|ПОМЕСТИТЬ ВТ_Графа06_Итог
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_ДанныеНачисленияПроцентовШтрафовПоСрочности.СчетДт КАК СчетДт,
		|		ВТ_ДанныеНачисленияПроцентовШтрафовПоСрочности.СчетКт КАК СчетКт,
		|		ВТ_ДанныеНачисленияПроцентовШтрафовПоСрочности.ОБ КАК ОБ
		|	ИЗ
		|		ВТ_ДанныеНачисленияПроцентовШтрафовПоСрочности КАК ВТ_ДанныеНачисленияПроцентовШтрафовПоСрочности
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ДанныеНачисленияПроцентовШтрафов.СчетДт,
		|		ВТ_ДанныеНачисленияПроцентовШтрафов.СчетКт,
		|		ВТ_ДанныеНачисленияПроцентовШтрафов.ОБ
		|	ИЗ
		|		ВТ_ДанныеНачисленияПроцентовШтрафов КАК ВТ_ДанныеНачисленияПроцентовШтрафов) КАК ОбъединениеДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеДанных.СчетДт,
		|	ОбъединениеДанных.СчетКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&Счет_91_02 КАК СчетДт,
		|	ВТ_СчетаГрафы06.Счет КАК СчетКт,
		|	ЕСТЬNULL(ВТ_Графа06_Итог.ОБ, 0) КАК Значение
		|ПОМЕСТИТЬ ВТ_Графа06
		|ИЗ
		|	ВТ_СчетаГрафы06 КАК ВТ_СчетаГрафы06
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Графа06_Итог КАК ВТ_Графа06_Итог
		|		ПО ВТ_СчетаГрафы06.Счет = ВТ_Графа06_Итог.СчетКт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(документ.ДокументРасчетовСКонтрагентом.ПустаяСсылка) КАК СФВыданный,
		|	ЗНАЧЕНИЕ(справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
		|	ЗНАЧЕНИЕ(справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор
		|ПОМЕСТИТЬ ВТ_ВсеСФВыданные
		|ГДЕ
		|	ЛОЖЬ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент,
		|	Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеСФВыданные.СФВыданный КАК СФВыданный
		|ПОМЕСТИТЬ ВТ_СФВыданные
		|ИЗ
		|	ВТ_ВсеСФВыданные КАК ВТ_ВсеСФВыданные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДолгосрочныеДоговоры КАК ВТ_ДолгосрочныеДоговоры
		|		ПО (ВТ_ДолгосрочныеДоговоры.Контрагент = ВТ_ВсеСФВыданные.Контрагент)
		|			И (ВТ_ДолгосрочныеДоговоры.Договор = ВТ_ВсеСФВыданные.Договор)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СФВыданный
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
		|	ВЫРАЗИТЬ(ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
		|	ХозрасчетныйОстаткиИОбороты.Субконто2 КАК СФВыданный,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СНД,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СКД,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт > 0
		|				И ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > 0
		|			ТОГДА ВЫБОР
		|					КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|						ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|					ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотКт < 0
		|						И ХозрасчетныйОстаткиИОбороты.СуммаОборотДт < 0
		|					ТОГДА ВЫБОР
		|							КОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт > ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|								ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|							ИНАЧЕ ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|	КОНЕЦ КАК Дельта
		|ПОМЕСТИТЬ ВТ_ВсеДанныеНДСАвансов
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Период, , Счет В (&СчетаПоНДСАвансов), &СубконтоКонтрагентыСФВыданные, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СФВыданный
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВсеДанныеНДСАвансов.Счет КАК Счет,
		|	СУММА(ВТ_ВсеДанныеНДСАвансов.СНД) КАК СНД,
		|	СУММА(ВТ_ВсеДанныеНДСАвансов.ДО) КАК ДО,
		|	СУММА(ВТ_ВсеДанныеНДСАвансов.КО) КАК КО,
		|	СУММА(ВТ_ВсеДанныеНДСАвансов.СКД) КАК СКД,
		|	СУММА(ВТ_ВсеДанныеНДСАвансов.Дельта) КАК Дельта
		|ПОМЕСТИТЬ ВТ_ДанныеНДСАвансов
		|ИЗ
		|	ВТ_ВсеДанныеНДСАвансов КАК ВТ_ВсеДанныеНДСАвансов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СФВыданные КАК ВТ_СФВыданные
		|		ПО (ВТ_СФВыданные.СФВыданный = ВТ_ВсеДанныеНДСАвансов.СФВыданный)
		|ГДЕ
		|	ВТ_СФВыданные.СФВыданный ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ВсеДанныеНДСАвансов.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СчетаНДСАвансов.Счет КАК Счет,
		|	ЕСТЬNULL(ВТ_ДанныеНДСАвансов.СНД, 0) КАК Значение
		|ПОМЕСТИТЬ ВТ_Графа04_НДС
		|ИЗ
		|	ВТ_СчетаНДСАвансов КАК ВТ_СчетаНДСАвансов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеНДСАвансов КАК ВТ_ДанныеНДСАвансов
		|		ПО ВТ_СчетаНДСАвансов.Счет = ВТ_ДанныеНДСАвансов.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СчетаНДСАвансов.Счет КАК Счет,
		|	ЕСТЬNULL(ВТ_ДанныеНДСАвансов.СКД, 0) КАК Значение
		|ПОМЕСТИТЬ ВТ_Графа10_НДС
		|ИЗ
		|	ВТ_СчетаНДСАвансов КАК ВТ_СчетаНДСАвансов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеНДСАвансов КАК ВТ_ДанныеНДСАвансов
		|		ПО ВТ_СчетаНДСАвансов.Счет = ВТ_ДанныеНДСАвансов.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СчетаНДСАвансов.Счет КАК Счет,
		|	ЕСТЬNULL(ВТ_ДанныеНДСАвансов.ДО, 0) КАК ДО,
		|	ЕСТЬNULL(ВТ_ДанныеНДСАвансов.Дельта, 0) КАК Дельта
		|ПОМЕСТИТЬ ВТ_Графа05_НДС
		|ИЗ
		|	ВТ_СчетаНДСАвансов КАК ВТ_СчетаНДСАвансов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеНДСАвансов КАК ВТ_ДанныеНДСАвансов
		|		ПО ВТ_СчетаНДСАвансов.Счет = ВТ_ДанныеНДСАвансов.Счет
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СчетаНДСАвансов.Счет КАК Счет,
		|	ЕСТЬNULL(ВТ_ДанныеНДСАвансов.КО, 0) КАК КО,
		|	ЕСТЬNULL(ВТ_ДанныеНДСАвансов.Дельта, 0) КАК Дельта
		|ПОМЕСТИТЬ ВТ_Графа07_НДС
		|ИЗ
		|	ВТ_СчетаНДСАвансов КАК ВТ_СчетаНДСАвансов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеНДСАвансов КАК ВТ_ДанныеНДСАвансов
		|		ПО ВТ_СчетаНДСАвансов.Счет = ВТ_ДанныеНДСАвансов.Счет";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПорядокОбработкиСчетов(СписокСчетов, ПараметрыОбработкиСчетов)
	
	СпособыОбработки = Новый Структура;
	
	СпособыОбработки.Вставить("СчетаПоСрочности", Новый Массив);
	СпособыОбработки.Вставить("СчетаПоСрочностиВычет", Новый Массив);
	СпособыОбработки.Вставить("АПСчетаПоСрочности", Новый Массив);
	СпособыОбработки.Вставить("ОсобыеСчетаПоСрочности", Новый Массив);
	
	СпособыОбработки.Вставить("СчетаАвансовПоВидуАктива", Новый Массив);
	СпособыОбработки.Вставить("СчетаНДСАвансовПоВидуАктива", Новый Массив);
	СпособыОбработки.Вставить("СчетаПоНДСАвансов", Новый Массив);
	
	СпособыОбработки.Вставить("СчетаПоКонтрагентам", Новый Массив);
	СпособыОбработки.Вставить("СчетаПоКонтрагентамДоговорам", Новый Массив);
	СпособыОбработки.Вставить("СчетаПоРезервам", Новый Массив);
	СпособыОбработки.Вставить("СчетаВидуАктива", Новый Массив);
	СпособыОбработки.Вставить("СчетаБезОбработки", Новый Массив);
	
	СпособыОбработки.Вставить("СчетаПоРаботникам", Новый Массив);
	СпособыОбработки.Вставить("СчетаПоВидамПлатежей", Новый Массив);
	СпособыОбработки.Вставить("СчетаПоВидамПлатежейУровням", Новый Массив);
	СпособыОбработки.Вставить("АПСчетаБезРазвертки", Новый Массив);
	
	СпособыОбработки.Вставить("СчетаПоКредитамЗаймамБезОбработки", Новый Массив);
	СпособыОбработки.Вставить("СчетаПоКредитамЗаймамПеревод", Новый Массив);
	СпособыОбработки.Вставить("СчетаПоКредитамЗаймамПереводКЦБ", Новый Массив);
	
	СпособыОбработкиСчетов = СпособыОбработкиСчетовПояснений5(ПараметрыОбработкиСчетов);
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьСпособыОбработкиСчетов(
		СпособыОбработки, СпособыОбработкиСчетов);
	
	ПромежуточныйРезультат = Новый Соответствие;
	
	Счета = СтрРазделить(СписокСчетов, ",");
	Для Каждого КодСчета Из Счета Цикл
		Если НЕ ЗначениеЗаполнено(КодСчета) Тогда
			Продолжить;
		КонецЕсли;
		
		КодСчета = СокрЛП(КодСчета);
		СпособОбработки = СпособыОбработкиСчетов[КодСчета];
		Если СпособОбработки = Неопределено Тогда
			ВызватьИсключение "Для счета с условным кодом " + КодСчета + " не указан способ развертки";
		КонецЕсли;
		
		ПромежуточныйРезультат.Вставить(КодСчета, СпособОбработки);
		
	КонецЦикла;
	
	Для Каждого СпособОбработкиСчета Из ПромежуточныйРезультат Цикл
		КодСчета = СпособОбработкиСчета.Ключ;
		СпособРазвертки = СпособОбработкиСчета.Значение;
		
		СпособыОбработки[СпособРазвертки].Добавить(Счет(КодСчета));
	КонецЦикла;
	
	Возврат СпособыОбработки;
	
КонецФункции

// Конструктор параметров функции ПорядокОбработкиСчетов
// 
Функция ПараметрыОбработкиСчетов()
	
	ПараметрыОбработкиСчетов = Новый Структура;
	ПараметрыОбработкиСчетов.Вставить("РазделятьАвансыПоВидамАктивов", Ложь);
	ПараметрыОбработкиСчетов.Вставить("ПрименяетсяФСБУ25", Ложь);
	
	Возврат ПараметрыОбработкиСчетов;
	
КонецФункции

Функция СпособыОбработкиСчетовПояснений5(ПараметрыОбработкиСчетов)
	
	СпособыОбработкиСчетовПояснений5 = Новый Соответствие;
	
	СпособыОбработкиСчетовПояснений5.Вставить("46", "СчетаБезОбработки");
	
	СпособыОбработкиСчетовПояснений5.Вставить("60.01", "ОсобыеСчетаПоСрочности");
	СпособыОбработкиСчетовПояснений5.Вставить("60.21", "ОсобыеСчетаПоСрочности");
	СпособыОбработкиСчетовПояснений5.Вставить("60.31", "ОсобыеСчетаПоСрочности");
	
	СпособыОбработкиСчетовПояснений5.Вставить("60.03", "ОсобыеСчетаПоСрочности");
	
	Если ПараметрыОбработкиСчетов.РазделятьАвансыПоВидамАктивов Тогда
		СпособыОбработкиСчетовПояснений5.Вставить("60.02", "СчетаАвансовПоВидуАктива");
		СпособыОбработкиСчетовПояснений5.Вставить("60.22", "СчетаАвансовПоВидуАктива");
		СпособыОбработкиСчетовПояснений5.Вставить("60.32", "СчетаАвансовПоВидуАктива");
		СпособыОбработкиСчетовПояснений5.Вставить("76.ВА", "СчетаНДСАвансовПоВидуАктива");
	Иначе
		СпособыОбработкиСчетовПояснений5.Вставить("60.02", "СчетаПоСрочности");
		СпособыОбработкиСчетовПояснений5.Вставить("60.22", "СчетаПоСрочности");
		СпособыОбработкиСчетовПояснений5.Вставить("60.32", "СчетаПоСрочности");
		СпособыОбработкиСчетовПояснений5.Вставить("76.ВА", "СчетаПоНДСАвансов");
	КонецЕсли;
	
	СпособыОбработкиСчетовПояснений5.Вставить("62.01", "ОсобыеСчетаПоСрочности");
	СпособыОбработкиСчетовПояснений5.Вставить("62.21", "ОсобыеСчетаПоСрочности");
	СпособыОбработкиСчетовПояснений5.Вставить("62.31", "ОсобыеСчетаПоСрочности");
	
	СпособыОбработкиСчетовПояснений5.Вставить("62.03", "ОсобыеСчетаПоСрочности");
	
	СпособыОбработкиСчетовПояснений5.Вставить("63", "СчетаПоРезервам");
	
	СпособыОбработкиСчетовПояснений5.Вставить("62.02", "СчетаПоСрочности");
	СпособыОбработкиСчетовПояснений5.Вставить("62.22", "СчетаПоСрочности");
	СпособыОбработкиСчетовПояснений5.Вставить("62.32", "СчетаПоСрочности");
	СпособыОбработкиСчетовПояснений5.Вставить("62.ОТ.1", "СчетаПоСрочности");
	СпособыОбработкиСчетовПояснений5.Вставить("62.ОТ.2", "СчетаПоСрочности");
	СпособыОбработкиСчетовПояснений5.Вставить("62.ОТ.3", "СчетаПоСрочности");
	
	СпособыОбработкиСчетовПояснений5.Вставить("66.01", "СчетаПоКредитамЗаймамБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("66.02", "СчетаПоКредитамЗаймамБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("66.03", "СчетаПоКредитамЗаймамБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("66.04", "СчетаПоКредитамЗаймамБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("66.05", "СчетаПоКредитамЗаймамБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("66.06", "СчетаПоКредитамЗаймамБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("66.21", "СчетаПоКредитамЗаймамБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("66.22", "СчетаПоКредитамЗаймамБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("66.23", "СчетаПоКредитамЗаймамБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("66.24", "СчетаПоКредитамЗаймамБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("66.25", "СчетаПоКредитамЗаймамБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("66.26", "СчетаПоКредитамЗаймамБезОбработки");
	
	СпособыОбработкиСчетовПояснений5.Вставить("67.01", "СчетаПоКредитамЗаймамПеревод");
	СпособыОбработкиСчетовПояснений5.Вставить("67.02", "СчетаПоКредитамЗаймамБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("67.03", "СчетаПоКредитамЗаймамПеревод");
	СпособыОбработкиСчетовПояснений5.Вставить("67.04", "СчетаПоКредитамЗаймамБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("67.05", "СчетаПоКредитамЗаймамПереводКЦБ");
	СпособыОбработкиСчетовПояснений5.Вставить("67.06", "СчетаПоКредитамЗаймамБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("67.21", "СчетаПоКредитамЗаймамПеревод");
	СпособыОбработкиСчетовПояснений5.Вставить("67.22", "СчетаПоКредитамЗаймамБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("67.23", "СчетаПоКредитамЗаймамПеревод");
	СпособыОбработкиСчетовПояснений5.Вставить("67.24", "СчетаПоКредитамЗаймамБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("67.25", "СчетаПоКредитамЗаймамПереводКЦБ");
	СпособыОбработкиСчетовПояснений5.Вставить("67.26", "СчетаПоКредитамЗаймамБезОбработки");
	
	СпособыОбработкиСчетовПояснений5.Вставить("68.01.1", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("68.01.2", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("68.02", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("68.03", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("68.04.1", "СчетаПоВидамПлатежейУровням");
	СпособыОбработкиСчетовПояснений5.Вставить("68.06", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("68.07", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("68.08", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("68.09", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("68.10", "СчетаПоВидамПлатежейУровням");
	СпособыОбработкиСчетовПояснений5.Вставить("68.11", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("68.12", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("68.13", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("68.14", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("68.15", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("68.16", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("68.21.1", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("68.21.2", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("68.22", "СчетаБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("68.32", "СчетаБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("68.34", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("68.42", "СчетаБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("68.52", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("68.90", "АПСчетаБезРазвертки");
	
	СпособыОбработкиСчетовПояснений5.Вставить("69.01",   "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("69.02.1", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("69.02.2", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("69.02.3", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("69.02.4", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("69.02.5", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("69.02.6", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("69.02.7", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("69.03.1", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("69.03.2", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("69.04",   "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("69.05.1", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("69.05.2", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("69.06.1", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("69.06.2", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("69.06.3", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("69.06.4", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("69.06.5", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("69.06.6", "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("69.09",   "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("69.11",   "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("69.12",   "СчетаПоВидамПлатежей");
	СпособыОбработкиСчетовПояснений5.Вставить("69.13.1", "АПСчетаБезРазвертки");
	СпособыОбработкиСчетовПояснений5.Вставить("69.13.2", "АПСчетаБезРазвертки");
	
	СпособыОбработкиСчетовПояснений5.Вставить("70", ?(УчетНа70ВедетсяСводно(), "АПСчетаБезРазвертки", "СчетаПоРаботникам"));
	СпособыОбработкиСчетовПояснений5.Вставить("71.01", "СчетаПоРаботникам");
	СпособыОбработкиСчетовПояснений5.Вставить("71.21", "СчетаПоРаботникам");
	
	СпособыОбработкиСчетовПояснений5.Вставить("73.01", "СчетаБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("73.02", "СчетаБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("73.03", "СчетаПоРаботникам");
	
	СпособыОбработкиСчетовПояснений5.Вставить("75.01", "СчетаБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("75.02", "СчетаБезОбработки");
	
	СпособыОбработкиСчетовПояснений5.Вставить("76.01.1", "СчетаПоКонтрагентамДоговорам");
	СпособыОбработкиСчетовПояснений5.Вставить("76.01.2", "СчетаВидуАктива");
	СпособыОбработкиСчетовПояснений5.Вставить("76.01.9", "СчетаВидуАктива");
	
	СпособыОбработкиСчетовПояснений5.Вставить("76.07.1", "СчетаПоКонтрагентамДоговорам");
	СпособыОбработкиСчетовПояснений5.Вставить("76.27.1", "СчетаПоКонтрагентамДоговорам");
	СпособыОбработкиСчетовПояснений5.Вставить("76.37.1", "СчетаПоКонтрагентамДоговорам");
	
	СпособыОбработкиСчетовПояснений5.Вставить("76.02", "СчетаБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("76.22", "СчетаБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("76.32", "СчетаБезОбработки");
	
	СпособыОбработкиСчетовПояснений5.Вставить("76.03", "СчетаПоКонтрагентамДоговорам");
	
	СпособыОбработкиСчетовПояснений5.Вставить("76.04", "СчетаБезОбработки");
	
	СпособыОбработкиСчетовПояснений5.Вставить("76.05", "АПСчетаПоСрочности");
	СпособыОбработкиСчетовПояснений5.Вставить("76.25", "АПСчетаПоСрочности");
	СпособыОбработкиСчетовПояснений5.Вставить("76.35", "АПСчетаПоСрочности");
	
	СпособыОбработкиСчетовПояснений5.Вставить("76.06", "АПСчетаПоСрочности");
	СпособыОбработкиСчетовПояснений5.Вставить("76.26", "АПСчетаПоСрочности");
	СпособыОбработкиСчетовПояснений5.Вставить("76.36", "АПСчетаПоСрочности");
	
	СпособыОбработкиСчетовПояснений5.Вставить("76.08", "СчетаПоСрочностиВычет");
	СпособыОбработкиСчетовПояснений5.Вставить("76.28", "СчетаПоСрочностиВычет");
	СпособыОбработкиСчетовПояснений5.Вставить("76.38", "СчетаПоСрочностиВычет");
	
	СпособыОбработкиСчетовПояснений5.Вставить("76.07.2", "АПСчетаПоСрочности");
	СпособыОбработкиСчетовПояснений5.Вставить("76.27.2", "АПСчетаПоСрочности");
	СпособыОбработкиСчетовПояснений5.Вставить("76.37.2", "АПСчетаПоСрочности");
	
	СпособыОбработкиСчетовПояснений5.Вставить("76.07.5", "СчетаПоСрочностиВычет");
	СпособыОбработкиСчетовПояснений5.Вставить("76.27.5", "СчетаПоСрочностиВычет");
	СпособыОбработкиСчетовПояснений5.Вставить("76.37.5", "СчетаПоСрочностиВычет");
	
	Если ПараметрыОбработкиСчетов.ПрименяетсяФСБУ25 Тогда
		СпособыОбработкиСчетовПояснений5.Вставить("76.07.9", "СчетаПоСрочностиВычет");
		СпособыОбработкиСчетовПояснений5.Вставить("76.27.9", "СчетаПоСрочностиВычет");
		СпособыОбработкиСчетовПояснений5.Вставить("76.37.9", "СчетаПоСрочностиВычет");
	Иначе
		СпособыОбработкиСчетовПояснений5.Вставить("76.07.9", "СчетаПоСрочности");
		СпособыОбработкиСчетовПояснений5.Вставить("76.37.9", "СчетаПоСрочности");
	КонецЕсли;
	
	СпособыОбработкиСчетовПояснений5.Вставить("76.09", "АПСчетаПоСрочности");
	СпособыОбработкиСчетовПояснений5.Вставить("76.29", "АПСчетаПоСрочности");
	СпособыОбработкиСчетовПояснений5.Вставить("76.39", "АПСчетаПоСрочности");
	
	СпособыОбработкиСчетовПояснений5.Вставить("76.10", "СчетаПоРаботникам");
	
	СпособыОбработкиСчетовПояснений5.Вставить("76.13", "СчетаПоСрочности");
	СпособыОбработкиСчетовПояснений5.Вставить("76.14", "СчетаБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("76.16", "СчетаБезОбработки");
	СпособыОбработкиСчетовПояснений5.Вставить("76.17", "СчетаПоКонтрагентам");
	СпособыОбработкиСчетовПояснений5.Вставить("76.21", "СчетаПоКонтрагентамДоговорам");
	
	СпособыОбработкиСчетовПояснений5.Вставить("76.41", "СчетаПоКонтрагентам");
	СпособыОбработкиСчетовПояснений5.Вставить("76.49", "СчетаПоКонтрагентам");
	
	СпособыОбработкиСчетовПояснений5.Вставить("76.НА", "СчетаПоКонтрагентамДоговорам");
	
	СпособыОбработкиСчетовПояснений5.Вставить("76.АВ", "СчетаПоНДСАвансов");
	СпособыОбработкиСчетовПояснений5.Вставить("76.ОТ", "СчетаБезОбработки");
	
	СпособыОбработкиСчетовПояснений5.Вставить("97.01", "СчетаВидуАктива");
	СпособыОбработкиСчетовПояснений5.Вставить("97.02", "СчетаВидуАктива");
	СпособыОбработкиСчетовПояснений5.Вставить("97.21", "СчетаВидуАктива");
	
	Возврат СпособыОбработкиСчетовПояснений5;
	
КонецФункции

#КонецОбласти

#Область ФормаОтчета2011Кв4_Пояснения6

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения6(КонтекстВыполнения) Экспорт
	
	// Вспомогательные значения периодов.
	НачалоПериодаОтчета = КонтекстВыполнения.НачалоПериодаОтчета;
	ДатаКонцаПериодаОтчета = КонтекстВыполнения.КонецПериодаОтчета;
	КонецПериодаОтчета = Новый МоментВремениСУточнениемПериода(
		ДатаКонцаПериодаОтчета, 0);
	
	НачалоПериодаПредыдущегоГода = ДобавитьМесяц(НачалоПериодаОтчета, -12);
	ДатаКонцаПредыдущегоГода = КонецГода(НачалоПериодаПредыдущегоГода);
	КонецПериодаПредыдущегоГода = Новый МоментВремениСУточнениемПериода(
		ДатаКонцаПредыдущегоГода, БухгалтерскийУчет.ВерхняяГраницаУточненияПериода());
	
	НаименованиеГрафы = "за " + Формат(ДатаКонцаПериодаОтчета, "ДФ=yyyy") + " г.";
	ЗаполнитьФормаОтчета2011Кв4_Пояснения6ПоГрафе(КонтекстВыполнения, "03", НаименованиеГрафы, НачалоПериодаОтчета, КонецПериодаОтчета);
	
	ЗаполнятьПредыдущиеПериоды = НЕ РасширенныйПериодОтчета(НачалоПериодаОтчета);
	Если ЗаполнятьПредыдущиеПериоды Тогда
	НаименованиеГрафы = "за " + Формат(ДатаКонцаПредыдущегоГода, "ДФ=yyyy") + " г.";
		ЗаполнитьФормаОтчета2011Кв4_Пояснения6ПоГрафе(КонтекстВыполнения, "04", НаименованиеГрафы, НачалоПериодаПредыдущегоГода, КонецПериодаПредыдущегоГода);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения6ПоГрафе(КонтекстВыполнения,
	Графа, ЗаголовокГрафы, НачалоПериода, КонецПериода)
	
	Организация = КонтекстВыполнения.Организация;
	
	Если ЭлементыЗатратНастройкаПараметровУчета.РасходыУчитываютсяПоЭлементамЗатрат(НачалоПериода,
		ПривестиКДате(КонецПериода), Организация) Тогда
		ЗаполнитьФормаОтчета2011Кв4_Пояснения6ПоЭЗ(КонтекстВыполнения, Графа, ЗаголовокГрафы, НачалоПериода, КонецПериода);
	Иначе
		ЗаполнитьФормаОтчета2011Кв4_Пояснения6ПоМПЗ(КонтекстВыполнения, Графа, ЗаголовокГрафы, НачалоПериода, КонецПериода);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения6ПоЭЗ(КонтекстВыполнения,
	Графа, ЗаголовокГрафы, НачалоПериода, КонецПериода)
	
	Организация = КонтекстВыполнения.Организация;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	СчетаУчетаЗатрат = ЭлементыЗатратНастройкаПараметровУчета.ПредопределенныеСчетаРасходов();
	
	ИмяРаздела = "Пояснения6";
	
	ПараметрыРасшифровки = Новый Структура;
	ПараметрыРасшифровки.Вставить("Организация",   КонтекстВыполнения.Организация);
	ПараметрыРасшифровки.Вставить("НачалоПериода", НачалоПериода);
	ПараметрыРасшифровки.Вставить("КонецПериода",  КонецПериода);
	
	КонтекстВыполнения.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
	
	СтруктураОборотов = Новый Соответствие;
	Для Каждого ЭлементЗатрат Из Перечисления.ЭлементыЗатрат Цикл
		СтруктураОборотов.Вставить(ЭлементЗатрат, 0);
	КонецЦикла;
	СтруктураОборотов.Вставить(Перечисления.ЭлементыЗатрат.ПустаяСсылка(), 0);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Хозрасчетный.Ссылка КАК Счет
	               |ПОМЕСТИТЬ ВТ_СчетаУчета
	               |ИЗ
	               |	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	               |ГДЕ
	               |	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаУчетаЗатрат)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОбороты.Субконто1 КАК ЭлементЗатрат,
	               |	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаЗатрат
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Обороты(
	               |			&НачПериода,
	               |			&КонПериода,
	               |			Период,
	               |			Счет В
	               |				(ВЫБРАТЬ
	               |					ВТ_СчетаУчета.Счет
	               |				ИЗ
	               |					ВТ_СчетаУчета КАК ВТ_СчетаУчета),
	               |			&ВидСубконтоЭлементыЗатрат,
	               |			Организация = &Организация,
	               |			,
	               |			) КАК ХозрасчетныйОбороты
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ХозрасчетныйОбороты.Субконто1";
	
	Запрос.УстановитьПараметр("НачПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода", КонецПериода);
	
	Запрос.УстановитьПараметр("ВидСубконтоЭлементыЗатрат", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ЭлементыЗатрат);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СчетаУчетаЗатрат", СчетаУчетаЗатрат);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтруктураОборотов.Вставить(Выборка.ЭлементЗатрат, Выборка.СуммаЗатрат);
	КонецЦикла;
	
	СписокСчетов = "";
	Для Каждого СчетУчета Из СчетаУчетаЗатрат Цикл
		СписокСчетов = СписокСчетов + ?(ЗначениеЗаполнено(СписокСчетов), ", ", "") + СчетУчета.Код;
	КонецЦикла;
	ШаблонСодержанияРасшифровки = "Обороты по дебету счетов " + СписокСчетов + " по элементу затрат """;
	
	НомерСтроки = "5610";
	НаименованиеСтроки = "Материальные затраты";
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ЭлементЗатрат = Перечисления.ЭлементыЗатрат.МатериальныеЗатраты;
	ЗначениеПоказателя = СтруктураОборотов[ЭлементЗатрат];
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", ШаблонСодержанияРасшифровки + ЭлементЗатрат + """", ЗначениеПоказателя, ИмяРаздела, НастройкиАнализаСубконтоЭлементыЗатрат(КонтекстВыполнения, ЭлементЗатрат, СчетаУчетаЗатрат));
	
	НомерСтроки = "5620";
	НаименованиеСтроки = "Расходы на оплату труда";
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ЭлементЗатрат = Перечисления.ЭлементыЗатрат.ОплатаТруда;
	ЗначениеПоказателя = СтруктураОборотов[ЭлементЗатрат];
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", ШаблонСодержанияРасшифровки + ЭлементЗатрат + """", ЗначениеПоказателя, ИмяРаздела, НастройкиАнализаСубконтоЭлементыЗатрат(КонтекстВыполнения, ЭлементЗатрат, СчетаУчетаЗатрат));
	
	НомерСтроки = "5630";
	НаименованиеСтроки = "Отчисления на социальные нужды";
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ЭлементЗатрат = Перечисления.ЭлементыЗатрат.ОтчисленияНаСоциальныеНужды;
	ЗначениеПоказателя = СтруктураОборотов[ЭлементЗатрат];
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", ШаблонСодержанияРасшифровки + ЭлементЗатрат + """", ЗначениеПоказателя, ИмяРаздела, НастройкиАнализаСубконтоЭлементыЗатрат(КонтекстВыполнения, ЭлементЗатрат, СчетаУчетаЗатрат));
	
	НомерСтроки = "5640";
	НаименованиеСтроки = "Амортизация";
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ЭлементЗатрат = Перечисления.ЭлементыЗатрат.Амортизация;
	ЗначениеПоказателя = СтруктураОборотов[ЭлементЗатрат];
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", ШаблонСодержанияРасшифровки + ЭлементЗатрат + """", ЗначениеПоказателя, ИмяРаздела, НастройкиАнализаСубконтоЭлементыЗатрат(КонтекстВыполнения, ЭлементЗатрат, СчетаУчетаЗатрат));
	
	НомерСтроки = "5650";
	НаименованиеСтроки = "Прочие затраты";
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ЭлементЗатрат = Перечисления.ЭлементыЗатрат.ПрочиеЗатраты;
	ЗначениеПоказателя = СтруктураОборотов[ЭлементЗатрат];
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", ШаблонСодержанияРасшифровки + ЭлементЗатрат + """", ЗначениеПоказателя, ИмяРаздела, НастройкиАнализаСубконтоЭлементыЗатрат(КонтекстВыполнения, ЭлементЗатрат, СчетаУчетаЗатрат));
	
	Если КонтекстВыполнения.ПрисутствуетСтрока5665 Тогда
		НомерСтроки = "5665";
		НаименованиеСтроки = "Фактическая себестоимость проданных товаров";
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		ЭлементЗатрат = Перечисления.ЭлементыЗатрат.ПустаяСсылка();
		ЗначениеПоказателя = СтруктураОборотов[ЭлементЗатрат];
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		СодержаниеРасшифровки = "Обороты по дебету счетов " + СписокСчетов + " по незаполненному субконто ""Элементы затрат""";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", СодержаниеРасшифровки, ЗначениеПоказателя, ИмяРаздела, НастройкиАнализаСубконтоЭлементыЗатрат(КонтекстВыполнения, ЭлементЗатрат, СчетаУчетаЗатрат));
	КонецЕсли;
	
	КонтекстВыполнения.Удалить("ПараметрыРасшифровки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения6ПоМПЗ(КонтекстВыполнения, Графа, ЗаголовокГрафы, НачалоПериодаОтчета, КонецПериодаОтчета)
	
	ИмяРаздела = "Пояснения6";
	
	Организация = КонтекстВыполнения.Организация;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	ОбщиеПараметрыРасшифровки = Новый Структура;
	ОбщиеПараметрыРасшифровки.Вставить("Организация",   Организация);
	ОбщиеПараметрыРасшифровки.Вставить("НачалоПериода", НачалоПериодаОтчета);
	ОбщиеПараметрыРасшифровки.Вставить("КонецПериода",  КонецПериодаОтчета);
	
	НастройкиПолученияБухитогов = Новый Структура;
	НастройкиПолученияБухитогов.Вставить("Организация",   Организация);
	НастройкиПолученияБухитогов.Вставить("НачалоПериода", НачалоПериодаОтчета);
	НастройкиПолученияБухитогов.Вставить("КонецПериода",  КонецПериодаОтчета);
	
	СальдоИОборотыПоСчетам = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
	ОборотыМеждуСчетами    = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетами(НастройкиПолученияБухитогов);
	
	СписокСчетовУчетаМПЗ = "10, 21, 41.01, 41.02, 41.03, 41.04, 41.11, 41.12, 43, 45.01, 45.02, 45.03";
	СчетаУчетаМПЗ = СчетаИзСписка(СписокСчетовУчетаМПЗ);
	
	СписокСчетовАмортизации = "02, 04, 05";
	СчетаАмортизации = СчетаИзСписка(СписокСчетовАмортизации);
	
	ОБ_20__МПЗ = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("20", СчетаУчетаМПЗ, ОборотыМеждуСчетами);
	ОБ_23__МПЗ = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("23", СчетаУчетаМПЗ, ОборотыМеждуСчетами);
	ОБ_25__МПЗ = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("25", СчетаУчетаМПЗ, ОборотыМеждуСчетами);
	ОБ_26__МПЗ = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("26", СчетаУчетаМПЗ, ОборотыМеждуСчетами);
	ОБ_29__МПЗ = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("29", СчетаУчетаМПЗ, ОборотыМеждуСчетами);
	ОБ_44__МПЗ = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("44", СчетаУчетаМПЗ, ОборотыМеждуСчетами);
	
	ОБ_20__70 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("20", "70", ОборотыМеждуСчетами);
	ОБ_23__70 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("23", "70", ОборотыМеждуСчетами);
	ОБ_25__70 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("25", "70", ОборотыМеждуСчетами);
	ОБ_26__70 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("26", "70", ОборотыМеждуСчетами);
	ОБ_29__70 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("29", "70", ОборотыМеждуСчетами);
	ОБ_44__70 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("44", "70", ОборотыМеждуСчетами);
	
	ОБ_20__96_01_1 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("20", "96.01.1", ОборотыМеждуСчетами);
	ОБ_23__96_01_1 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("23", "96.01.1", ОборотыМеждуСчетами);
	ОБ_25__96_01_1 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("25", "96.01.1", ОборотыМеждуСчетами);
	ОБ_26__96_01_1 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("26", "96.01.1", ОборотыМеждуСчетами);
	ОБ_29__96_01_1 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("29", "96.01.1", ОборотыМеждуСчетами);
	ОБ_44__96_01_1 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("44", "96.01.1", ОборотыМеждуСчетами);
	
	ОБ_20__69 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("20", "69", ОборотыМеждуСчетами);
	ОБ_23__69 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("23", "69", ОборотыМеждуСчетами);
	ОБ_25__69 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("25", "69", ОборотыМеждуСчетами);
	ОБ_26__69 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("26", "69", ОборотыМеждуСчетами);
	ОБ_29__69 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("29", "69", ОборотыМеждуСчетами);
	ОБ_44__69 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("44", "69", ОборотыМеждуСчетами);
	
	ОБ_20__96_01_2 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("20", "96.01.2", ОборотыМеждуСчетами);
	ОБ_23__96_01_2 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("23", "96.01.2", ОборотыМеждуСчетами);
	ОБ_25__96_01_2 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("25", "96.01.2", ОборотыМеждуСчетами);
	ОБ_26__96_01_2 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("26", "96.01.2", ОборотыМеждуСчетами);
	ОБ_29__96_01_2 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("29", "96.01.2", ОборотыМеждуСчетами);
	ОБ_44__96_01_2 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("44", "96.01.2", ОборотыМеждуСчетами);
	
	ОБ_20__020405 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("20", СчетаАмортизации, ОборотыМеждуСчетами);
	ОБ_23__020405 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("23", СчетаАмортизации, ОборотыМеждуСчетами);
	ОБ_25__020405 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("25", СчетаАмортизации, ОборотыМеждуСчетами);
	ОБ_26__020405 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("26", СчетаАмортизации, ОборотыМеждуСчетами);
	ОБ_29__020405 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("29", СчетаАмортизации, ОборотыМеждуСчетами);
	ОБ_44__020405 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("44", СчетаАмортизации, ОборотыМеждуСчетами);
	
	ОБ_20__20 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("20", "20", ОборотыМеждуСчетами);
	ОБ_20__23 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("20", "23", ОборотыМеждуСчетами);
	ОБ_20__25 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("20", "25", ОборотыМеждуСчетами);
	ОБ_20__26 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("20", "26", ОборотыМеждуСчетами);
	ОБ_20__29 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("20", "29", ОборотыМеждуСчетами);
	ОБ_23__20 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("23", "20", ОборотыМеждуСчетами);
	ОБ_25__20 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("25", "20", ОборотыМеждуСчетами);
	ОБ_26__20 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("26", "20", ОборотыМеждуСчетами);
	ОБ_29__20 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("29", "20", ОборотыМеждуСчетами);
	ОБ_23__23 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("23", "23", ОборотыМеждуСчетами);
	ОБ_23__25 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("23", "25", ОборотыМеждуСчетами);
	ОБ_23__26 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("23", "26", ОборотыМеждуСчетами);
	ОБ_23__29 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("23", "29", ОборотыМеждуСчетами);
	ОБ_25__23 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("25", "23", ОборотыМеждуСчетами);
	ОБ_25__25 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("25", "25", ОборотыМеждуСчетами);
	ОБ_25__26 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("25", "26", ОборотыМеждуСчетами);
	ОБ_25__29 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("25", "29", ОборотыМеждуСчетами);
	ОБ_26__23 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("26", "23", ОборотыМеждуСчетами);
	ОБ_26__25 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("26", "25", ОборотыМеждуСчетами);
	ОБ_26__26 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("26", "26", ОборотыМеждуСчетами);
	ОБ_26__29 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("26", "29", ОборотыМеждуСчетами);
	ОБ_29__29 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("29", "29", ОборотыМеждуСчетами);
	ОБ_29__23 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("29", "23", ОборотыМеждуСчетами);
	ОБ_29__25 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("29", "25", ОборотыМеждуСчетами);
	ОБ_29__26 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("29", "26", ОборотыМеждуСчетами);
	
	ДО_20 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ДО("20", СальдоИОборотыПоСчетам);
	ДО_23 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ДО("23", СальдоИОборотыПоСчетам);
	ДО_25 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ДО("25", СальдоИОборотыПоСчетам);
	ДО_26 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ДО("26", СальдоИОборотыПоСчетам);
	ДО_29 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ДО("29", СальдоИОборотыПоСчетам);
	ДО_44 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ДО("44", СальдоИОборотыПоСчетам);
	
	НомерСтроки = "5610";
	НаименованиеСтроки = "Материальные затраты";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ЗначениеПоказателя = ОБ_20__МПЗ + ОБ_23__МПЗ + ОБ_25__МПЗ + ОБ_26__МПЗ + ОБ_29__МПЗ + ОБ_44__МПЗ;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ШаблонНаименованияСоставляющей = "Оборот с кредита счетов " + СписокСчетовУчетаМПЗ + " в дебет счета ";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", ШаблонНаименованияСоставляющей + Счет("20").Код, ОБ_20__МПЗ, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "20", СписокСчетовУчетаМПЗ));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ШаблонНаименованияСоставляющей + Счет("23").Код, ОБ_23__МПЗ, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "23", СписокСчетовУчетаМПЗ));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ШаблонНаименованияСоставляющей + Счет("25").Код, ОБ_25__МПЗ, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "25", СписокСчетовУчетаМПЗ));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ШаблонНаименованияСоставляющей + Счет("26").Код, ОБ_26__МПЗ, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "26", СписокСчетовУчетаМПЗ));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ШаблонНаименованияСоставляющей + Счет("29").Код, ОБ_29__МПЗ, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "29", СписокСчетовУчетаМПЗ));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ШаблонНаименованияСоставляющей + Счет("44").Код, ОБ_44__МПЗ, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "44", СписокСчетовУчетаМПЗ));
	
	НомерСтроки = "5620";
	НаименованиеСтроки = "Расходы на оплату труда";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ЗначениеПоказателя = ОБ_20__70 + ОБ_23__70 + ОБ_25__70 + ОБ_26__70 + ОБ_29__70 + ОБ_44__70
	                   + ОБ_20__96_01_1 + ОБ_23__96_01_1 + ОБ_25__96_01_1 + ОБ_26__96_01_1 + ОБ_29__96_01_1 + ОБ_44__96_01_1;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ОБ " + Счет("20").Код + " " + Счет("70").Код, ОБ_20__70, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "20", "70"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("23").Код + " " + Счет("70").Код, ОБ_23__70, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "23", "70"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("25").Код + " " + Счет("70").Код, ОБ_25__70, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "25", "70"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("26").Код + " " + Счет("70").Код, ОБ_26__70, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "26", "70"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("29").Код + " " + Счет("70").Код, ОБ_29__70, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "29", "70"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("44").Код + " " + Счет("70").Код, ОБ_44__70, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "44", "70"));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("20").Код + " " + Счет("96.01.1").Код, ОБ_20__96_01_1, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "20", "96.01.1"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("23").Код + " " + Счет("96.01.1").Код, ОБ_23__96_01_1, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "23", "96.01.1"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("25").Код + " " + Счет("96.01.1").Код, ОБ_25__96_01_1, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "25", "96.01.1"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("26").Код + " " + Счет("96.01.1").Код, ОБ_26__96_01_1, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "26", "96.01.1"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("29").Код + " " + Счет("96.01.1").Код, ОБ_29__96_01_1, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "29", "96.01.1"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("44").Код + " " + Счет("96.01.1").Код, ОБ_44__96_01_1, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "44", "96.01.1"));
	
	НомерСтроки = "5630";
	НаименованиеСтроки = "Отчисления на социальные нужды";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ЗначениеПоказателя = ОБ_20__69 + ОБ_23__69 + ОБ_25__69 + ОБ_26__69 + ОБ_29__69 + ОБ_44__69
	                   + ОБ_20__96_01_2 + ОБ_23__96_01_2 + ОБ_25__96_01_2 + ОБ_26__96_01_2 + ОБ_29__96_01_2 + ОБ_44__96_01_2;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ОБ " + Счет("20").Код + " " + Счет("69").Код, ОБ_20__69, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "20", "69"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("23").Код + " " + Счет("69").Код, ОБ_23__69, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "23", "69"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("25").Код + " " + Счет("69").Код, ОБ_25__69, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "25", "69"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("26").Код + " " + Счет("69").Код, ОБ_26__69, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "26", "69"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("29").Код + " " + Счет("69").Код, ОБ_29__69, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "29", "69"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("44").Код + " " + Счет("69").Код, ОБ_44__69, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "44", "69"));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("20").Код + " " + Счет("96.01.2").Код, ОБ_20__96_01_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "20", "96.01.2"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("23").Код + " " + Счет("96.01.2").Код, ОБ_23__96_01_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "23", "96.01.2"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("25").Код + " " + Счет("96.01.2").Код, ОБ_25__96_01_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "25", "96.01.2"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("26").Код + " " + Счет("96.01.2").Код, ОБ_26__96_01_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "26", "96.01.2"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("29").Код + " " + Счет("96.01.2").Код, ОБ_29__96_01_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "29", "96.01.2"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("44").Код + " " + Счет("96.01.2").Код, ОБ_44__96_01_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "44", "96.01.2"));
	
	НомерСтроки = "5640";
	НаименованиеСтроки = "Амортизация";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ЗначениеПоказателя = ОБ_20__020405 + ОБ_23__020405 + ОБ_25__020405 + ОБ_26__020405 + ОБ_29__020405 + ОБ_44__020405;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ШаблонНаименованияСоставляющей = "Оборот с кредита счетов 02, 04, 05 в дебет счета ";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", ШаблонНаименованияСоставляющей + Счет("20").Код, ОБ_20__020405, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "20", "02, 04, 05"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ШаблонНаименованияСоставляющей + Счет("23").Код, ОБ_23__020405, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "23", "02, 04, 05"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ШаблонНаименованияСоставляющей + Счет("25").Код, ОБ_25__020405, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "25", "02, 04, 05"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ШаблонНаименованияСоставляющей + Счет("26").Код, ОБ_26__020405, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "26", "02, 04, 05"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ШаблонНаименованияСоставляющей + Счет("29").Код, ОБ_29__020405, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "29", "02, 04, 05"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ШаблонНаименованияСоставляющей + Счет("44").Код, ОБ_44__020405, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "44", "02, 04, 05"));
	
	НомерСтроки = "5650";
	НаименованиеСтроки = "Прочие затраты";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ЗначениеПоказателя = ДО_20 + ДО_23+ ДО_25 + ДО_26 + ДО_29 + ДО_44
	                   - ОБ_20__МПЗ - ОБ_23__МПЗ - ОБ_25__МПЗ - ОБ_26__МПЗ - ОБ_29__МПЗ - ОБ_44__МПЗ
	                   - ОБ_20__70 - ОБ_23__70 - ОБ_25__70 - ОБ_26__70 - ОБ_29__70 - ОБ_44__70
	                   - ОБ_20__96_01_1 - ОБ_23__96_01_1 - ОБ_25__96_01_1 - ОБ_26__96_01_1 - ОБ_29__96_01_1 - ОБ_44__96_01_1
	                   - ОБ_20__69 - ОБ_23__69 - ОБ_25__69 - ОБ_26__69 - ОБ_29__69 - ОБ_44__69
	                   - ОБ_20__96_01_2 - ОБ_23__96_01_2 - ОБ_25__96_01_2 - ОБ_26__96_01_2 - ОБ_29__96_01_2 - ОБ_44__96_01_2
	                   - ОБ_20__020405 - ОБ_23__020405 - ОБ_25__020405 - ОБ_26__020405 - ОБ_29__020405 - ОБ_44__020405
	                   - ОБ_20__20 - ОБ_20__23 - ОБ_20__25 - ОБ_20__26 - ОБ_20__29 - ОБ_23__20
	                   - ОБ_25__20 - ОБ_26__20 - ОБ_29__20 - ОБ_23__23 - ОБ_23__25 - ОБ_23__26
	                   - ОБ_23__29 - ОБ_25__23 - ОБ_25__25 - ОБ_25__26 - ОБ_25__29 - ОБ_26__23
	                   - ОБ_26__25 - ОБ_26__26 - ОБ_26__29 - ОБ_29__29 - ОБ_29__23 - ОБ_29__25 - ОБ_29__26;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ДО " + Счет("20").Код, ДО_20, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "20"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ДО " + Счет("23").Код, ДО_23, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "23"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ДО " + Счет("25").Код, ДО_25, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "25"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ДО " + Счет("26").Код, ДО_26, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "26"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ДО " + Счет("29").Код, ДО_29, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "29"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ДО " + Счет("44").Код, ДО_44, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "44"));
	
	ШаблонНаименованияСоставляющей = "Оборот с кредита счетов " + СписокСчетовУчетаМПЗ + " в дебет счета ";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ШаблонНаименованияСоставляющей + Счет("20").Код, -ОБ_20__МПЗ, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "20", СписокСчетовУчетаМПЗ));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ШаблонНаименованияСоставляющей + Счет("23").Код, -ОБ_23__МПЗ, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "23", СписокСчетовУчетаМПЗ));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ШаблонНаименованияСоставляющей + Счет("25").Код, -ОБ_25__МПЗ, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "25", СписокСчетовУчетаМПЗ));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ШаблонНаименованияСоставляющей + Счет("26").Код, -ОБ_26__МПЗ, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "26", СписокСчетовУчетаМПЗ));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ШаблонНаименованияСоставляющей + Счет("29").Код, -ОБ_29__МПЗ, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "29", СписокСчетовУчетаМПЗ));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ШаблонНаименованияСоставляющей + Счет("44").Код, -ОБ_44__МПЗ, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "44", СписокСчетовУчетаМПЗ));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("20").Код + " " + Счет("70").Код, -ОБ_20__70, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "20", "70"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("23").Код + " " + Счет("70").Код, -ОБ_23__70, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "23", "70"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("25").Код + " " + Счет("70").Код, -ОБ_25__70, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "25", "70"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("26").Код + " " + Счет("70").Код, -ОБ_26__70, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "26", "70"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("29").Код + " " + Счет("70").Код, -ОБ_29__70, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "29", "70"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("44").Код + " " + Счет("70").Код, -ОБ_44__70, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "44", "70"));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("20").Код + " " + Счет("96.01.1").Код, -ОБ_20__96_01_1, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "20", "96.01.1"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("23").Код + " " + Счет("96.01.1").Код, -ОБ_23__96_01_1, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "23", "96.01.1"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("25").Код + " " + Счет("96.01.1").Код, -ОБ_25__96_01_1, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "25", "96.01.1"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("26").Код + " " + Счет("96.01.1").Код, -ОБ_26__96_01_1, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "26", "96.01.1"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("29").Код + " " + Счет("96.01.1").Код, -ОБ_29__96_01_1, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "29", "96.01.1"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("44").Код + " " + Счет("96.01.1").Код, -ОБ_44__96_01_1, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "44", "96.01.1"));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("20").Код + " " + Счет("69").Код, -ОБ_20__69, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "20", "69"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("23").Код + " " + Счет("69").Код, -ОБ_23__69, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "23", "69"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("25").Код + " " + Счет("69").Код, -ОБ_25__69, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "25", "69"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("26").Код + " " + Счет("69").Код, -ОБ_26__69, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "26", "69"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("29").Код + " " + Счет("69").Код, -ОБ_29__69, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "29", "69"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("44").Код + " " + Счет("69").Код, -ОБ_44__69, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "44", "69"));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("20").Код + " " + Счет("96.01.2").Код, -ОБ_20__96_01_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "20", "96.01.2"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("23").Код + " " + Счет("96.01.2").Код, -ОБ_23__96_01_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "23", "96.01.2"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("25").Код + " " + Счет("96.01.2").Код, -ОБ_25__96_01_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "25", "96.01.2"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("26").Код + " " + Счет("96.01.2").Код, -ОБ_26__96_01_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "26", "96.01.2"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("29").Код + " " + Счет("96.01.2").Код, -ОБ_29__96_01_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "29", "96.01.2"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("44").Код + " " + Счет("96.01.2").Код, -ОБ_44__96_01_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "44", "96.01.2"));
	
	ШаблонНаименованияСоставляющей = "Оборот с кредита счетов 02, 04, 05 в дебет счета ";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ШаблонНаименованияСоставляющей + Счет("20").Код, -ОБ_20__020405, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "20", "02, 04, 05"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ШаблонНаименованияСоставляющей + Счет("23").Код, -ОБ_23__020405, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "23", "02, 04, 05"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ШаблонНаименованияСоставляющей + Счет("25").Код, -ОБ_25__020405, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "25", "02, 04, 05"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ШаблонНаименованияСоставляющей + Счет("26").Код, -ОБ_26__020405, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "26", "02, 04, 05"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ШаблонНаименованияСоставляющей + Счет("29").Код, -ОБ_29__020405, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "29", "02, 04, 05"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ШаблонНаименованияСоставляющей + Счет("44").Код, -ОБ_44__020405, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "44", "02, 04, 05"));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("20").Код + " " + Счет("20").Код, -ОБ_20__20, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "20", "20"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("20").Код + " " + Счет("23").Код, -ОБ_20__23, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "20", "23"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("20").Код + " " + Счет("25").Код, -ОБ_20__25, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "20", "25"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("20").Код + " " + Счет("26").Код, -ОБ_20__26, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "20", "26"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("20").Код + " " + Счет("29").Код, -ОБ_20__29, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "20", "29"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("23").Код + " " + Счет("20").Код, -ОБ_23__20, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "23", "20"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("25").Код + " " + Счет("20").Код, -ОБ_25__20, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "25", "20"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("26").Код + " " + Счет("20").Код, -ОБ_26__20, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "26", "20"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("29").Код + " " + Счет("20").Код, -ОБ_29__20, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "29", "20"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("23").Код + " " + Счет("23").Код, -ОБ_23__23, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "23", "23"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("23").Код + " " + Счет("25").Код, -ОБ_23__25, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "23", "25"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("23").Код + " " + Счет("26").Код, -ОБ_23__26, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "23", "26"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("23").Код + " " + Счет("29").Код, -ОБ_23__29, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "23", "29"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("25").Код + " " + Счет("23").Код, -ОБ_25__23, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "25", "23"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("25").Код + " " + Счет("25").Код, -ОБ_25__25, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "25", "25"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("25").Код + " " + Счет("26").Код, -ОБ_25__26, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "25", "26"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("25").Код + " " + Счет("29").Код, -ОБ_25__29, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "25", "29"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("26").Код + " " + Счет("23").Код, -ОБ_26__23, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "26", "23"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("26").Код + " " + Счет("25").Код, -ОБ_26__25, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "26", "25"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("26").Код + " " + Счет("26").Код, -ОБ_26__26, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "26", "26"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("26").Код + " " + Счет("29").Код, -ОБ_26__29, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "26", "29"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("29").Код + " " + Счет("29").Код, -ОБ_29__29, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "29", "29"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("29").Код + " " + Счет("23").Код, -ОБ_29__23, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "29", "23"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("29").Код + " " + Счет("25").Код, -ОБ_29__25, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "29", "25"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("29").Код + " " + Счет("26").Код, -ОБ_29__26, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "29", "26"));
	
	// Строки 5670 и 5680.
	
	СКД_20 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("20", СальдоИОборотыПоСчетам);
	СНД_20 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД("20", СальдоИОборотыПоСчетам);
	
	СКД_21 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("21", СальдоИОборотыПоСчетам);
	СНД_21 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД("21", СальдоИОборотыПоСчетам);
	
	СКД_23 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("23", СальдоИОборотыПоСчетам);
	СНД_23 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД("23", СальдоИОборотыПоСчетам);
	
	СКД_28 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("28", СальдоИОборотыПоСчетам);
	СНД_28 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД("28", СальдоИОборотыПоСчетам);
	
	СКД_29 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("29", СальдоИОборотыПоСчетам);
	СНД_29 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД("29", СальдоИОборотыПоСчетам);
	
	СКД_41 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("41", СальдоИОборотыПоСчетам);
	СНД_41 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД("41", СальдоИОборотыПоСчетам);
	
	СКД_43 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("43", СальдоИОборотыПоСчетам);
	СНД_43 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД("43", СальдоИОборотыПоСчетам);
	
	СКК_42 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКК("42", СальдоИОборотыПоСчетам);
	СНК_42 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНК("42", СальдоИОборотыПоСчетам);
	
	СКД_44 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("44", СальдоИОборотыПоСчетам);
	СНД_44 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД("44", СальдоИОборотыПоСчетам);
	
	СКД_45 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("45", СальдоИОборотыПоСчетам);
	СНД_45 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД("45", СальдоИОборотыПоСчетам);
	
	ЗначениеПоказателя = СКД_20 - СНД_20
	                   + СКД_21 - СНД_21
	                   + СКД_23 - СНД_23
	                   + СКД_28 - СНД_28
	                   + СКД_29 - СНД_29
	                   + СКД_41 - СНД_41
	                   + СКД_43 - СНД_43
	                   + СКД_44 - СНД_44
	                   + (СКД_45 - СКК_42)
	                   - (СНД_45 - СНК_42);
	
	Если ЗначениеПоказателя > 0 Тогда
		НомерСтроки = "5670";
		НаименованиеСтроки = "Изменение остатков (прирост [-]): незавершенного производства, готовой продукции и др.";
	Иначе
		НомерСтроки = "5680";
		НаименованиеСтроки = "Изменение остатков (уменьшение [+]): незавершенного производства, готовой продукции и др.";
	КонецЕсли;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, -ЗначениеПоказателя);
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!СКД " + Счет("20").Код, СКД_20, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "20"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!СНД " + Счет("20").Код, -СНД_20, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "20"));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СКД " + Счет("21").Код,  СКД_21, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "21"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!СНД " + Счет("21").Код, -СНД_21, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "21"));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СКД " + Счет("23").Код,  СКД_23, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "23"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!СНД " + Счет("23").Код, -СНД_23, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "23"));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СКД " + Счет("28").Код,  СКД_28, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "28"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!СНД " + Счет("28").Код, -СНД_28, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "28"));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СКД " + Счет("29").Код,  СКД_29, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "29"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!СНД " + Счет("29").Код, -СНД_29, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "29"));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СКД " + Счет("41").Код,  СКД_41, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "41"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!СНД " + Счет("41").Код, -СНД_41, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "41"));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СКД " + Счет("43").Код,  СКД_43, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "43"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!СНД " + Счет("43").Код, -СНД_43, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "43"));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СКД " + Счет("44").Код,  СКД_44, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "44"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!СНД " + Счет("44").Код, -СНД_44, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "44"));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СКД " + Счет("45").Код,  СКД_45, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "45"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!СКК " + Счет("42").Код, -СКК_42, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "42"));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!СНД " + Счет("45").Код, -СНД_45, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "45"));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СКК " + Счет("42").Код,  СНК_42, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "42"));
	
КонецПроцедуры

#КонецОбласти

#Область ФормаОтчета2011Кв4_Пояснения7

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения7(КонтекстВыполнения) Экспорт
	
	ТаблицаЗначенийДопСтрок5700 = НоваяТаблицаДопСтрокДляСтроки("5700");
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения7Строка5700(КонтекстВыполнения, ТаблицаЗначенийДопСтрок5700);
	ЗаполнитьФормаОтчета2011Кв4_Пояснения7Строка5700ВТомЧисле(КонтекстВыполнения, ТаблицаЗначенийДопСтрок5700);
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения7Строка5700(КонтекстВыполнения, ТаблицаДополнительныхСтрок)
	
	ИмяРаздела = "Пояснения7";
	
	Организация = КонтекстВыполнения.Организация;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	ОбщиеПараметрыРасшифровки = Новый Структура;
	ОбщиеПараметрыРасшифровки.Вставить("Организация",   Организация);
	ОбщиеПараметрыРасшифровки.Вставить("НачалоПериода", КонтекстВыполнения.НачалоПериодаОтчета);
	ОбщиеПараметрыРасшифровки.Вставить("КонецПериода",  КонтекстВыполнения.КонецПериодаОтчета);
	
	НастройкиПолученияБухитогов = Новый Структура;
	НастройкиПолученияБухитогов.Вставить("Организация",   КонтекстВыполнения.Организация);
	НастройкиПолученияБухитогов.Вставить("НачалоПериода", КонтекстВыполнения.НачалоПериодаОтчета);
	НастройкиПолученияБухитогов.Вставить("КонецПериода",  КонтекстВыполнения.КонецПериодаОтчета);
	
	СальдоИОборотыПоСчетам = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
	ОборотыМеждуСчетами    = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетами(НастройкиПолученияБухитогов);
	
	СНК_96 =  ЗаполнениеБухгалтерскойОтчетностиИтоги.СНК("96", СальдоИОборотыПоСчетам);
	ДО_96  =  ЗаполнениеБухгалтерскойОтчетностиИтоги.ДО("96", СальдоИОборотыПоСчетам);
	КО_96  =  ЗаполнениеБухгалтерскойОтчетностиИтоги.КО("96", СальдоИОборотыПоСчетам);
	СКК_96 =  ЗаполнениеБухгалтерскойОтчетностиИтоги.СКК("96", СальдоИОборотыПоСчетам);
	
	ОБ_96__91_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("96", "91.01", ОборотыМеждуСчетами);
	
	ОСВ_96 = НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "96");
	АС_96__91_01 =НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "96", "91.01");
	
	НомерСтроки = "5700";
	НаименованиеСтроки = "Оценочные обязательства - всего";
	
	Графа = "03";
	НаименованиеГрафы = "Остаток на начало года";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + НаименованиеГрафы + """";
	
	ЗначениеПоказателя = СНК_96;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!СНК " + Счет("96").Код, СНК_96, ИмяРаздела, ОСВ_96);
	
	Графа = "04";
	НаименованиеГрафы = "Признано";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + НаименованиеГрафы + """";
	
	ЗначениеПоказателя = КО_96;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!КО " + Счет("96").Код, КО_96, ИмяРаздела, ОСВ_96);
	
	Графа = "05";
	НаименованиеГрафы = "Погашено";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + НаименованиеГрафы + """";
	
	ЗначениеПоказателя = ДО_96 - ОБ_96__91_01;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ДО " + Счет("96").Код, ДО_96, ИмяРаздела, ОСВ_96);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("96").Код + " " + Счет("91.01").Код, -ОБ_96__91_01, ИмяРаздела, АС_96__91_01);
	
	Графа = "06";
	НаименованиеГрафы = "Списано как избыточная сумма";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + НаименованиеГрафы + """";
	
	ЗначениеПоказателя = ОБ_96__91_01;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ОБ " + Счет("96").Код + " " + Счет("91.01").Код, ОБ_96__91_01, ИмяРаздела, АС_96__91_01);
	
	Графа = "07";
	НаименованиеГрафы = "Остаток на конец периода";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + НаименованиеГрафы + """";
	
	ЗначениеПоказателя = СКК_96;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!СКК " +  Счет("96").Код, СКК_96, ИмяРаздела, ОСВ_96);
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения7Строка5700ВТомЧисле(КонтекстВыполнения, ТаблицаЗначенийДопСтрок)
	
	Если ТаблицаЗначенийДопСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИмяГруппы = "ДопСтрока5700";
	ИмяГруппы = "ДопСтрока5240";
	МногострочнаяЧасть = Новый ТаблицаЗначений;
	МногострочнаяЧасть.Колонки.Добавить("П100100570001", Новый ОписаниеТипов("Строка"));
	
	МногострочнаяЧасть.Колонки.Добавить("П100100570003", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100570004", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100570005", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100570006", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100570007", Новый ОписаниеТипов("Число"));
	
	Для Каждого ДополнительнаяСтрока Из ТаблицаЗначенийДопСтрок Цикл
		СтрокаМногострочнойЧасти = МногострочнаяЧасть.Добавить();
		СтрокаМногострочнойЧасти.П100100570001 = ДополнительнаяСтрока.ОценочноеОбязательство;
		
		СтрокаМногострочнойЧасти.П100100570003 =  ДополнительнаяСтрока.Графа03;
		СтрокаМногострочнойЧасти.П100100570004 =  ДополнительнаяСтрока.Графа04;
		СтрокаМногострочнойЧасти.П100100570005 = -ДополнительнаяСтрока.Графа05;
		СтрокаМногострочнойЧасти.П100100570006 = -ДополнительнаяСтрока.Графа06;
		СтрокаМногострочнойЧасти.П100100570007 =  ДополнительнаяСтрока.Графа07;
	КонецЦикла;
	
	Если НЕ КонтекстВыполнения.МногострочныеПоказатели.Свойство("Пояснения6") Тогда
		КонтекстВыполнения.МногострочныеПоказатели.Вставить("Пояснения6", Новый Структура);
	КонецЕсли;
	
	КонтекстВыполнения.МногострочныеПоказатели.Пояснения6.Вставить(ИмяГруппы, МногострочнаяЧасть);
	
КонецПроцедуры

#КонецОбласти

#Область ФормаОтчета2011Кв4_Пояснения8

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения8(КонтекстВыполнения) Экспорт
	
	НачалоПериодаОтчета = КонтекстВыполнения.НачалоПериодаОтчета;
	КонецПериодаОтчета = Новый МоментВремениСУточнениемПериода(
		КонтекстВыполнения.КонецПериодаОтчета, 0);
	
	НачалоПериодаПредыдущегоГода = ДобавитьМесяц(НачалоПериодаОтчета, -12);
	КонецПериодаПредыдущегоГода = Новый МоментВремениСУточнениемПериода(
		КонецГода(НачалоПериодаПредыдущегоГода), БухгалтерскийУчет.ВерхняяГраницаУточненияПериода());
	
	НачалоПериодаГодаПредшествующегоПредыдущему = ДобавитьМесяц(НачалоПериодаОтчета, -24);
	КонецПериодаГодаПредшествующегоПредыдущему = Новый МоментВремениСУточнениемПериода(
		КонецГода(НачалоПериодаГодаПредшествующегоПредыдущему), БухгалтерскийУчет.ВерхняяГраницаУточненияПериода());
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения8Строки5800и5810(КонтекстВыполнения,
		"03", НачалоПериодаОтчета, КонецПериодаОтчета);
	
	ЗаполнятьПредыдущиеПериоды = НЕ РасширенныйПериодОтчета(НачалоПериодаОтчета);
	
	Если ЗаполнятьПредыдущиеПериоды Тогда
		ЗаполнитьФормаОтчета2011Кв4_Пояснения8Строки5800и5810(КонтекстВыполнения,
			"04", НачалоПериодаПредыдущегоГода, КонецПериодаПредыдущегоГода);
		ЗаполнитьФормаОтчета2011Кв4_Пояснения8Строки5800и5810(КонтекстВыполнения,
			"05", НачалоПериодаГодаПредшествующегоПредыдущему, КонецПериодаГодаПредшествующегоПредыдущему);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_Пояснения8Строки5800и5810(КонтекстВыполнения, Графа, НачалоПериодаОтчета, КонецПериодаОтчета)
	
	ИмяРаздела = "Пояснения8";
	
	Организация = КонтекстВыполнения.Организация;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	ОбщиеПараметрыРасшифровки = Новый Структура;
	ОбщиеПараметрыРасшифровки.Вставить("Организация", Организация);
	ОбщиеПараметрыРасшифровки.Вставить("НачалоПериода", НачалоПериодаОтчета);
	ОбщиеПараметрыРасшифровки.Вставить("КонецПериода", КонецПериодаОтчета);
	
	НастройкиПолученияБухитогов = Новый Структура;
	НастройкиПолученияБухитогов.Вставить("Организация",   КонтекстВыполнения.Организация);
	НастройкиПолученияБухитогов.Вставить("НачалоПериода", НачалоПериодаОтчета);
	НастройкиПолученияБухитогов.Вставить("КонецПериода",  КонецПериодаОтчета);
	
	СальдоИОборотыПоСчетам = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
	
	СКД_008 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("008", СальдоИОборотыПоСчетам);
	СКД_009 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("009", СальдоИОборотыПоСчетам);
	
	НаименованиеГрафы = "На " + Формат(ПривестиКДате(КонецПериодаОтчета), "ДЛФ=DD");
	
	НомерСтроки = "5800";
	НаименованиеСтроки = "Полученные - всего";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + НаименованиеГрафы + """";
	
	ЗначениеПоказателя = СКД_008;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!СКД " + Счет("008").Код, СКД_008, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "008"));
	
	НомерСтроки = "5810";
	НаименованиеСтроки = "Выданные - всего";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + НаименованиеГрафы + """";
	
	ЗначениеПоказателя = СКД_009;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, ЗаголовокРасшифровки, "+", "!СКД " + Счет("009").Код, СКД_009, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "009"));
	
КонецПроцедуры

#КонецОбласти

#Область ФормаОтчета2019Кв1_Пояснения2

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения2(КонтекстВыполнения) Экспорт
	
	// Вспомогательные значения периодов.
	НачалоПериодаОтчета = КонтекстВыполнения.НачалоПериодаОтчета;
	КонецПериодаОтчета  = КонтекстВыполнения.КонецПериодаОтчета;
	
	НачалоПериодаПредыдущегоГода = ДобавитьМесяц(КонтекстВыполнения.НачалоПериодаОтчета, -12);
	КонецПериодаПредыдущегоГода  = КонецГода(НачалоПериодаПредыдущегоГода);
	
	НачалоПериодаГодаПредшествующегоПредыдущему = ДобавитьМесяц(КонтекстВыполнения.НачалоПериодаОтчета, -24);
	КонецПериодаГодаПредшествующегоПредыдущему  = КонецГода(НачалоПериодаГодаПредшествующегоПредыдущему);
	
	ЗаголовокГрафыНаОтчетнуюДату = "На " + Формат(КонецПериодаОтчета, "ДЛФ=DD");
	ЗаголовокГрафыНаКонецПредыдущегоГода = "На " + Формат(КонецПериодаПредыдущегоГода, "ДЛФ=DD");
	ЗаголовокГрафыНаКонецГодаПредшествующегоПредыдущему = "На " + Формат(КонецПериодаГодаПредшествующегоПредыдущему, "ДЛФ=DD");
	
	ЗаполнятьПредыдущиеПериоды = НЕ РасширенныйПериодОтчета(НачалоПериодаОтчета);
	
	ПроцессорПоказателя = НовыйПроцессорПоказателя();
	ПроцессорПоказателя.СчетаСРеквизитами = КонтекстВыполнения.СчетаСРеквизитами;
	ПроцессорПоказателя.ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	ПроцессорПоказателя.Организация = КонтекстВыполнения.Организация;
	ПроцессорПоказателя.ИмяРаздела = "Пояснения2";
	
	КонтекстВыполнения.Вставить("КонтекстОтчета", Новый Структура);
	КонтекстВыполнения.КонтекстОтчета.Вставить("КонтекстСтроки", Новый Структура);
	КонтекстВыполнения.КонтекстОтчета.КонтекстСтроки.Вставить("ПроцессорПоказателя", ПроцессорПоказателя);
	
	ТаблицаЗначенийДопСтрок5200и5210 = КонтекстВыполнения.ТаблицаЗначенийДопСтрок5200и5210;
	ТаблицаЗначенийДопСтрок5220и5230 = КонтекстВыполнения.ТаблицаЗначенийДопСтрок5220и5230;
	ТаблицаЗначенийДопСтрок5240и5250 = КонтекстВыполнения.ТаблицаЗначенийДопСтрок5240и5250;
	ТаблицаЗначенийДопСтрок5260      = КонтекстВыполнения.ТаблицаЗначенийДопСтрок5260;
	
	// Бухгалтерские итоги за отчетный период.
	НастройкиПолученияБухитогов = Новый Структура;
	НастройкиПолученияБухитогов.Вставить("Организация", КонтекстВыполнения.Организация);
	НастройкиПолученияБухитогов.Вставить("НачалоПериода", НачалоПериодаОтчета);
	НастройкиПолученияБухитогов.Вставить("КонецПериода",  КонецПериодаОтчета);
	
	СальдоИОборотыПоСчетам = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
	ОборотыМеждуСчетами    = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетами(НастройкиПолученияБухитогов);
	
	РассчитанныеЗначения = Новый Соответствие;
	РассчитанныеЗначения.Вставить("СальдоИОборотыПоСчетам", СальдоИОборотыПоСчетам);
	РассчитанныеЗначения.Вставить("ОборотыМеждуСчетами", ОборотыМеждуСчетами);
	
	ПроцессорПоказателя.РассчитанныеЗначения = РассчитанныеЗначения;
	ПроцессорПоказателя.НачалоПериода = НачалоПериодаОтчета;
	ПроцессорПоказателя.КонецПериода  = КонецПериодаОтчета;
	
	ЗаполнитьФормаОтчета2019Кв1_Пояснения2Строки5200и5210(КонтекстВыполнения,
		"5200", НачалоПериодаОтчета, КонецПериодаОтчета, ТаблицаЗначенийДопСтрок5200и5210);
	ЗаполнитьФормаОтчета2019Кв1_Пояснения2Строки5220и5230(КонтекстВыполнения,
		"5220", НачалоПериодаОтчета, КонецПериодаОтчета, ТаблицаЗначенийДопСтрок5220и5230);
	ЗаполнитьФормаОтчета2019Кв1_Пояснения2Строки5240и5250(КонтекстВыполнения,
		"5240", НачалоПериодаОтчета, КонецПериодаОтчета, ТаблицаЗначенийДопСтрок5240и5250);
	ЗаполнитьФормаОтчета2019Кв1_Пояснения2Строка5260(КонтекстВыполнения,
		"03", НачалоПериодаОтчета, КонецПериодаОтчета, ТаблицаЗначенийДопСтрок5260);
	ЗаполнитьФормаОтчета2019Кв1_Пояснения2Строки528х(КонтекстВыполнения,
		"03", ЗаголовокГрафыНаОтчетнуюДату, НачалоПериодаОтчета, КонецПериодаОтчета);
	
	Если ЗаполнятьПредыдущиеПериоды Тогда
		// Бухгалтерские итоги за предшествующий период.
		НастройкиПолученияБухитогов = Новый Структура;
		НастройкиПолученияБухитогов.Вставить("Организация", КонтекстВыполнения.Организация);
		НастройкиПолученияБухитогов.Вставить("НачалоПериода", НачалоПериодаПредыдущегоГода);
		НастройкиПолученияБухитогов.Вставить("КонецПериода",  КонецПериодаПредыдущегоГода);
		
		СальдоИОборотыПоСчетам = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
		ОборотыМеждуСчетами    = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетами(НастройкиПолученияБухитогов);
		
		РассчитанныеЗначения = Новый Соответствие;
		РассчитанныеЗначения.Вставить("СальдоИОборотыПоСчетам", СальдоИОборотыПоСчетам);
		РассчитанныеЗначения.Вставить("ОборотыМеждуСчетами", ОборотыМеждуСчетами);
		
		ПроцессорПоказателя.РассчитанныеЗначения = РассчитанныеЗначения;
		ПроцессорПоказателя.НачалоПериода = НачалоПериодаПредыдущегоГода;
		ПроцессорПоказателя.КонецПериода  = КонецПериодаПредыдущегоГода;
		
		ЗаполнитьФормаОтчета2019Кв1_Пояснения2Строки5200и5210(КонтекстВыполнения,
			"5210", НачалоПериодаПредыдущегоГода, КонецПериодаПредыдущегоГода, ТаблицаЗначенийДопСтрок5200и5210);
		ЗаполнитьФормаОтчета2019Кв1_Пояснения2Строки5220и5230(КонтекстВыполнения,
			"5230", НачалоПериодаПредыдущегоГода, КонецПериодаПредыдущегоГода, ТаблицаЗначенийДопСтрок5220и5230);
		ЗаполнитьФормаОтчета2019Кв1_Пояснения2Строки5240и5250(КонтекстВыполнения,
			"5250", НачалоПериодаПредыдущегоГода, КонецПериодаПредыдущегоГода, ТаблицаЗначенийДопСтрок5240и5250);
		ЗаполнитьФормаОтчета2019Кв1_Пояснения2Строка5260(КонтекстВыполнения,
			"04", НачалоПериодаПредыдущегоГода, КонецПериодаПредыдущегоГода, ТаблицаЗначенийДопСтрок5260);
		ЗаполнитьФормаОтчета2019Кв1_Пояснения2Строки528х(КонтекстВыполнения,
			"04", ЗаголовокГрафыНаКонецПредыдущегоГода, НачалоПериодаПредыдущегоГода, КонецПериодаПредыдущегоГода);
		ЗаполнитьФормаОтчета2019Кв1_Пояснения2Строки528х(КонтекстВыполнения,
			"05", ЗаголовокГрафыНаКонецГодаПредшествующегоПредыдущему, НачалоПериодаГодаПредшествующегоПредыдущему, КонецПериодаГодаПредшествующегоПредыдущему);
	КонецЕсли;
	
	ЗаполнитьФормаОтчета2019Кв1_Пояснения2Строки5200и5210ВТомЧисле(КонтекстВыполнения, ТаблицаЗначенийДопСтрок5200и5210);
	ЗаполнитьФормаОтчета2019Кв1_Пояснения2Строки5220и5230ВТомЧисле(КонтекстВыполнения, ТаблицаЗначенийДопСтрок5220и5230);
	ЗаполнитьФормаОтчета2019Кв1_Пояснения2Строки5240и5250ВТомЧисле(КонтекстВыполнения, ТаблицаЗначенийДопСтрок5240и5250);
	ЗаполнитьФормаОтчета2019Кв1_Пояснения2Строка5260ВТомЧисле(КонтекстВыполнения, ТаблицаЗначенийДопСтрок5260);
	
	КонтекстВыполнения.Удалить("КонтекстОтчета");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения2Строки5200и5210(КонтекстВыполнения,
	НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок)
	
	ИмяРаздела = "Пояснения2";
	
	Организация = КонтекстВыполнения.Организация;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	ПараметрыРасшифровки = Новый Структура;
	ПараметрыРасшифровки.Вставить("Организация",   КонтекстВыполнения.Организация);
	ПараметрыРасшифровки.Вставить("НачалоПериода", НачалоПериода);
	ПараметрыРасшифровки.Вставить("КонецПериода",  КонецПериода);
	
	КонтекстВыполнения.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
	
	ПроцессорПоказателя = КонтекстВыполнения.КонтекстОтчета.КонтекстСтроки.ПроцессорПоказателя;
	Вычитаемый = Истина;
	
	НастройкиПолученияБухитогов = Новый Структура;
	НастройкиПолученияБухитогов.Вставить("Организация",   Организация);
	НастройкиПолученияБухитогов.Вставить("НачалоПериода", НачалоПериода);
	НастройкиПолученияБухитогов.Вставить("КонецПериода",  КонецПериода);
	
	Обороты91ПоПереоценкеВнеоборотныхАктивов =
		ЗаполнениеБухгалтерскойОтчетностиИтоги.Обороты91ПоПереоценкеВнеоборотныхАктивов(НастройкиПолученияБухитогов);
	
	ОБ_01_01__91_01_ПереоценкаВнеоборотныхАктивов = ОБ("01.01", "91.01", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	ОБ_91_02__01_01_ПереоценкаВнеоборотныхАктивов = ОБ("91.02", "01.01", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	
	ОБ_01_03__91_01_ПереоценкаВнеоборотныхАктивов = ОБ("01.03", "91.01", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	ОБ_91_02__01_03_ПереоценкаВнеоборотныхАктивов = ОБ("91.02", "01.03", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	
	ОБ_01_11__91_01_ПереоценкаВнеоборотныхАктивов = ОБ("01.11", "91.01", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	ОБ_91_02__01_11_ПереоценкаВнеоборотныхАктивов = ОБ("91.02", "01.11", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	
	ОБ_91_02__02_01_ПереоценкаВнеоборотныхАктивов = ОБ("91.02", "02.01", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	ОБ_02_01__91_01_ПереоценкаВнеоборотныхАктивов = ОБ("02.01", "91.01", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	
	ОБ_91_02__02_03_ПереоценкаВнеоборотныхАктивов = ОБ("91.02", "02.03", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	ОБ_02_03__91_01_ПереоценкаВнеоборотныхАктивов = ОБ("02.03", "91.01", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	
	ОБ_91_02__02_11_ПереоценкаВнеоборотныхАктивов = ОБ("91.02", "02.11", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	ОБ_02_11__91_01_ПереоценкаВнеоборотныхАктивов = ОБ("02.11", "91.01", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	
	ОБ_01_05__91_01_ПереоценкаВнеоборотныхАктивов = ОБ("01.05", "91.01", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	ОБ_91_02__01_05_ПереоценкаВнеоборотныхАктивов = ОБ("91.02", "01.05", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	
	ОБ_91_02__02_05_ПереоценкаВнеоборотныхАктивов = ОБ("91.02", "02.05", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	ОБ_02_05__91_01_ПереоценкаВнеоборотныхАктивов = ОБ("02.05", "91.01", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	
	НаименованиеСтроки = "Основные средства (без учета доходных вложений в материальные ценности) - всего";
	
#Область Графа04
	
	Графа = "04";
	ЗаголовокГрафы = "На начало года - первоначальная стоимость";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 01.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 01.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 01.05");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 01.08");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 01.11");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа05
	
	Графа = "05";
	ЗаголовокГрафы = "На начало года - накопленная амортизация";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНК 02.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНК 02.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНК 02.05");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНК 02.11");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
#КонецОбласти
	
#Область Графа06
	
	Графа = "06";
	ЗаголовокГрафы = "Изменения за период - Поступило";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 01.01, 08");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 01.03, 08");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 01.05, 08");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 01.08, 08");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 01.11, 08");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа07
	
	Графа = "07";
	ЗаголовокГрафы = "Изменения за период - Выбыло объектов - первоначальная стоимость";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 01.09, 01.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 01.09, 01.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 01.09, 01.11");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 01.05");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 01.05, 01.05");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
#КонецОбласти
	
#Область Графа08
	
	Графа = "08";
	ЗаголовокГрафы = "Изменения за период - Выбыло объектов - накопленная амортизация";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 02.01, 01.09");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 02.03, 01.09");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 02.11, 01.09");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 02.05");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 02.05, 02.05");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа09
	
	Графа = "09";
	ЗаголовокГрафы = "Изменения за период - начислено амортизации";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 02.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 02.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 02.11");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 02.01, 02");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 02.03, 02");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 02.11, 02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 02.05");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 02, 02.05");
	
	// Вычет графы 11.
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 83.01.1, 02.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 02.01, 83.01.1");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 83.01.1, 02.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 02.03, 83.01.1");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 83.01.1, 02.11");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 02.11, 83.01.1");
	
	ЗначениеПоказателя = ПроцессорПоказателя.Показатель.ЗначениеПоказателя
	                   - ОБ_91_02__02_01_ПереоценкаВнеоборотныхАктивов
	                   + ОБ_02_01__91_01_ПереоценкаВнеоборотныхАктивов
	                   - ОБ_91_02__02_03_ПереоценкаВнеоборотныхАктивов
	                   + ОБ_02_03__91_01_ПереоценкаВнеоборотныхАктивов
	                   - ОБ_91_02__02_05_ПереоценкаВнеоборотныхАктивов
	                   + ОБ_02_05__91_01_ПереоценкаВнеоборотныхАктивов
	                   - ОБ_91_02__02_11_ПереоценкаВнеоборотныхАктивов
	                   + ОБ_02_11__91_01_ПереоценкаВнеоборотныхАктивов;
	
	ИмяВПДР = "ПереоценкаВнеоборотныхАктивов";
	НаименованиеСлагаемого = "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.01";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"-", НаименованиеСлагаемого,
		-ОБ_91_02__02_01_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "02.01", ИмяВПДР));
	НаименованиеСлагаемого = "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.01";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", НаименованиеСлагаемого,
		ОБ_02_01__91_01_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "02.01", ИмяВПДР));
	
	НаименованиеСлагаемого = "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.03";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"-", НаименованиеСлагаемого,
		-ОБ_91_02__02_03_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "02.03", ИмяВПДР));
	НаименованиеСлагаемого = "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.03";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", НаименованиеСлагаемого,
		ОБ_02_03__91_01_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "02.03", ИмяВПДР));
	
	НаименованиеСлагаемого = "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.05";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"-", НаименованиеСлагаемого,
		-ОБ_91_02__02_05_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "02.05", ИмяВПДР));
	НаименованиеСлагаемого = "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.05";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", НаименованиеСлагаемого,
		ОБ_02_05__91_01_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "02.05", ИмяВПДР));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.11",
		-ОБ_91_02__02_11_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "02.11", ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.11",
		ОБ_02_11__91_01_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "02.11", ИмяВПДР));
	
	ПроцессорПоказателя.Показатель.ЗначениеПоказателя = ЗначениеПоказателя;
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
#КонецОбласти
	
#Область Графа10
	
	Графа = "10";
	ЗаголовокГрафы = "Изменения за период - Переоценка - первоначальная стоимость";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 01.01, 83.01.1");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 83.01.1, 01.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 01.03, 83.01.1");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 83.01.1, 01.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 01.11, 83.01.1");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 83.01.1, 01.11");
	
	ЗначениеПоказателя = ПроцессорПоказателя.Показатель.ЗначениеПоказателя
	                   - ОБ_91_02__01_01_ПереоценкаВнеоборотныхАктивов
	                   + ОБ_01_01__91_01_ПереоценкаВнеоборотныхАктивов
	                   - ОБ_91_02__01_03_ПереоценкаВнеоборотныхАктивов
	                   + ОБ_01_03__91_01_ПереоценкаВнеоборотныхАктивов
	                   - ОБ_91_02__01_05_ПереоценкаВнеоборотныхАктивов
	                   + ОБ_01_05__91_01_ПереоценкаВнеоборотныхАктивов
	                   - ОБ_91_02__01_11_ПереоценкаВнеоборотныхАктивов
	                   + ОБ_01_11__91_01_ПереоценкаВнеоборотныхАктивов;
	
	ИмяВПДР = "ПереоценкаВнеоборотныхАктивов";
	НаименованиеСлагаемого = "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 01.01";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"-", НаименованиеСлагаемого,
		-ОБ_91_02__01_01_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "01.01", ИмяВПДР));
	НаименованиеСлагаемого = "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 01.01";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", НаименованиеСлагаемого,
		ОБ_01_01__91_01_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "01.01", ИмяВПДР));
	
	НаименованиеСлагаемого = "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 01.03";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"-", НаименованиеСлагаемого,
		-ОБ_91_02__01_03_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "01.03", ИмяВПДР));
	НаименованиеСлагаемого = "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 01.03";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", НаименованиеСлагаемого,
		ОБ_01_03__91_01_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "01.03", ИмяВПДР));
	
	НаименованиеСлагаемого = "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 01.05";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"-", НаименованиеСлагаемого,
		-ОБ_91_02__01_05_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "01.05", ИмяВПДР));
	НаименованиеСлагаемого = "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 01.05";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", НаименованиеСлагаемого,
		ОБ_01_05__91_01_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "01.05", ИмяВПДР));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 01.11",
		-ОБ_91_02__01_11_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "01.11", ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 01.11",
		ОБ_01_11__91_01_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "01.11", ИмяВПДР));
	
	ПроцессорПоказателя.Показатель.ЗначениеПоказателя = ЗначениеПоказателя;
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа11
	
	Графа = "11";
	ЗаголовокГрафы = "Изменения за период - Переоценка - накопленная амортизация";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 83.01.1, 02.01");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 02.01, 83.01.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 83.01.1, 02.03");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 02.03, 83.01.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 83.01.1, 02.11");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 02.11, 83.01.1");
	
	ЗначениеПоказателя = ПроцессорПоказателя.Показатель.ЗначениеПоказателя
	                   + ОБ_91_02__02_01_ПереоценкаВнеоборотныхАктивов
	                   - ОБ_02_01__91_01_ПереоценкаВнеоборотныхАктивов
	                   + ОБ_91_02__02_03_ПереоценкаВнеоборотныхАктивов
	                   - ОБ_02_03__91_01_ПереоценкаВнеоборотныхАктивов
	                   + ОБ_91_02__02_05_ПереоценкаВнеоборотныхАктивов
	                   - ОБ_02_05__91_01_ПереоценкаВнеоборотныхАктивов
	                   + ОБ_91_02__02_11_ПереоценкаВнеоборотныхАктивов
	                   - ОБ_02_11__91_01_ПереоценкаВнеоборотныхАктивов;
	
	ИмяВПДР = "ПереоценкаВнеоборотныхАктивов";
	НаименованиеСлагаемого = "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.01";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", НаименованиеСлагаемого,
		ОБ_91_02__02_01_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "02.01", ИмяВПДР));
	НаименованиеСлагаемого = "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.01";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"-", НаименованиеСлагаемого,
		-ОБ_02_01__91_01_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "02.01", ИмяВПДР));
	
	НаименованиеСлагаемого = "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.03";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", НаименованиеСлагаемого,
		ОБ_91_02__02_03_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "02.03", ИмяВПДР));
	НаименованиеСлагаемого = "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.03";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"-", НаименованиеСлагаемого,
		-ОБ_02_03__91_01_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "02.03", ИмяВПДР));
	
	НаименованиеСлагаемого = "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.05";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", НаименованиеСлагаемого,
		ОБ_91_02__02_05_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "02.05", ИмяВПДР));
	НаименованиеСлагаемого = "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.05";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"-", НаименованиеСлагаемого,
		-ОБ_02_05__91_01_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "02.05", ИмяВПДР));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.11",
		ОБ_91_02__02_11_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "02.11", ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"-", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.11",
		-ОБ_02_11__91_01_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "02.11", ИмяВПДР));
	
	ПроцессорПоказателя.Показатель.ЗначениеПоказателя = ЗначениеПоказателя;
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
#КонецОбласти
	
#Область Графа12
	
	Графа = "12";
	ЗаголовокГрафы = "На конец периода - первоначальная стоимость";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 01.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 01.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 01.05");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 01.08");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 01.11");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа13
	
	Графа = "13";
	ЗаголовокГрафы = "На конец периода - накопленная амортизация";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 02.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 02.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 02.05");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 02.11");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
	ЗаполнитьФормаОтчета2019Кв1_Пояснения2СведенияДопСтрок5200и5210КромеГраф10и11(КонтекстВыполнения, НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок);
	ЗаполнитьФормаОтчета2019Кв1_Пояснения2СведенияДопСтрок5200и5210ПоГрафе10(КонтекстВыполнения, НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок);
	ЗаполнитьФормаОтчета2019Кв1_Пояснения2СведенияДопСтрок5200и5210ПоГрафе11(КонтекстВыполнения, НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок);
	
	КонтекстВыполнения.Удалить("ПараметрыРасшифровки");
	
#КонецОбласти
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения2СведенияДопСтрок5200и5210КромеГраф10и11(КонтекстВыполнения,
	НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок)
	
	Организация = КонтекстВыполнения.Организация;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ОбъединениеДанных.ГруппаОС КАК ГруппаОС,
		|	СУММА(ОбъединениеДанных.Значение) КАК Значение
		|ПОМЕСТИТЬ ВТ_Графа07
		|ИЗ
		|	(ВЫБРАТЬ
		|		ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС КАК ГруппаОС,
		|		ХозрасчетныйОборотыДтКт.СуммаОборот КАК Значение
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счет_01_09), &ВидСубконтоОС, СчетКт В (&СчетаГрафы07), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОбороты.Субконто1.ГруппаОС,
		|		ХозрасчетныйОбороты.СуммаОборотКт
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, Период, Счет В (&Счет_01_05), &ВидСубконтоОС, Организация = &Организация, , ) КАК ХозрасчетныйОбороты
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
		|		-ХозрасчетныйОборотыДтКт.СуммаОборот
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счет_01_05), &ВидСубконтоОС, СчетКт В (&Счет_01_05), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт) КАК ОбъединениеДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеДанных.ГруппаОС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеДанных.ГруппаОС КАК ГруппаОС,
		|	СУММА(ОбъединениеДанных.Значение) КАК Значение
		|ПОМЕСТИТЬ ВТ_Графа08
		|ИЗ
		|	(ВЫБРАТЬ
		|		ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС КАК ГруппаОС,
		|		ХозрасчетныйОборотыДтКт.СуммаОборот КАК Значение
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&СчетаГрафы08), &ВидСубконтоОС, СчетКт В (&Счет_01_09), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОбороты.Субконто1.ГруппаОС,
		|		ХозрасчетныйОбороты.СуммаОборотДт
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, Период, Счет В (&Счет_02_05), &ВидСубконтоОС, Организация = &Организация, , ) КАК ХозрасчетныйОбороты
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
		|		-ХозрасчетныйОборотыДтКт.СуммаОборот
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счет_02_05), &ВидСубконтоОС, СчетКт В (&Счет_02_05), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт) КАК ОбъединениеДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеДанных.ГруппаОС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъединениеДанных.ГруппаОС КАК ГруппаОС,
		|	СУММА(ОбъединениеДанных.Значение) КАК Значение
		|ПОМЕСТИТЬ ВТ_Графа09
		|ИЗ
		|	(ВЫБРАТЬ
		|		ХозрасчетныйОбороты.Субконто1.ГруппаОС КАК ГруппаОС,
		|		ХозрасчетныйОбороты.СуммаОборотКт КАК Значение
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Обороты(
		|				&НачПериода,
		|				&КонПериода,
		|				Период,
		|				Счет В (&СчетаГрафы09)
		|					ИЛИ Счет В (&Счет_02_05),
		|				&ВидСубконтоОС,
		|				Организация = &Организация,
		|				,
		|				) КАК ХозрасчетныйОбороты
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
		|		-1 * ХозрасчетныйОборотыДтКт.СуммаОборот
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&СчетаГрафы09), &ВидСубконтоОС, СчетКт В (&Счет_02), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
		|		-1 * ХозрасчетныйОборотыДтКт.СуммаОборот
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счет_02), &ВидСубконтоОС, СчетКт В (&Счет_02_05), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт) КАК ОбъединениеДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъединениеДанных.ГруппаОС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Субконто1.ГруппаОС КАК ГруппаУчетаОС,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК ЗначениеГрафы04,
		|	0 КАК ЗначениеГрафы05,
		|	0 КАК ЗначениеГрафы06,
		|	0 КАК ЗначениеГрафы07,
		|	0 КАК ЗначениеГрафы08,
		|	0 КАК ЗначениеГрафы09,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК ЗначениеГрафы12,
		|	0 КАК ЗначениеГрафы13
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&СчетаГраф04_12), &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Субконто1.ГруппаОС,
		|	0,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&СчетаГраф05_13), &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
		|	0,
		|	0,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&СчетаГрафы06), &ВидСубконтоОС, СчетКт В (&Счет_08), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Графа07.ГруппаОС,
		|	0,
		|	0,
		|	0,
		|	ВТ_Графа07.Значение,
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	ВТ_Графа07 КАК ВТ_Графа07
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Графа08.ГруппаОС,
		|	0,
		|	0,
		|	0,
		|	0,
		|	ВТ_Графа08.Значение,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	ВТ_Графа08 КАК ВТ_Графа08
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Графа09.ГруппаОС,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	ВТ_Графа09.Значение,
		|	0,
		|	0
		|ИЗ
		|	ВТ_Графа09 КАК ВТ_Графа09
		|ИТОГИ
		|	СУММА(ЗначениеГрафы04),
		|	СУММА(ЗначениеГрафы05),
		|	СУММА(ЗначениеГрафы06),
		|	СУММА(ЗначениеГрафы07),
		|	СУММА(ЗначениеГрафы08),
		|	СУММА(ЗначениеГрафы09),
		|	СУММА(ЗначениеГрафы12),
		|	СУММА(ЗначениеГрафы13)
		|ПО
		|	ГруппаУчетаОС";
	
	Запрос.УстановитьПараметр("НачПериода",  НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода",  КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.УстановитьПараметр("Счет_01_05", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("01.05")));
	Запрос.УстановитьПараметр("Счет_01_09", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("01.09")));
	Запрос.УстановитьПараметр("Счет_02",     БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("02")));
	Запрос.УстановитьПараметр("Счет_02_05",  БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("02.05")));
	Запрос.УстановитьПараметр("Счет_08",    БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08")));
	
	Запрос.УстановитьПараметр("СчетаГраф04_12", МассивСчетовВИерархииИзСписка("01.01, 01.03, 01.05, 01.08, 01.11"));
	Запрос.УстановитьПараметр("СчетаГраф05_13", МассивСчетовВИерархииИзСписка("02.01, 02.03, 02.05, 02.11"));
	
	Запрос.УстановитьПараметр("СчетаГрафы06", МассивСчетовВИерархииИзСписка("01.01, 01.03, 01.05, 01.08, 01.11"));
	Запрос.УстановитьПараметр("СчетаГрафы07", МассивСчетовВИерархииИзСписка("01.01, 01.03, 01.11"));
	Запрос.УстановитьПараметр("СчетаГрафы08", МассивСчетовВИерархииИзСписка("02.01, 02.03, 02.11"));
	Запрос.УстановитьПараметр("СчетаГрафы09", МассивСчетовВИерархииИзСписка("02.01, 02.03, 02.11"));
	
	Запрос.УстановитьПараметр("ВидСубконтоОС", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		ГруппаУчетаОС = Выборка.ГруппаУчетаОС;
		Если НЕ ЗначениеЗаполнено(ГруппаУчетаОС) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицыДополнительныхСтрок = ТаблицаДополнительныхСтрок.Добавить();
		СтрокаТаблицыДополнительныхСтрок.ГруппаУчетаОС = ГруппаУчетаОС;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "04" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы04;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "05" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы05;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "06" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы06;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "07" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы07;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "08" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы08;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "09" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы09;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "12" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы12;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "13" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы13;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения2СведенияДопСтрок5200и5210ПоГрафе10(КонтекстВыполнения,
	НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок);
	
	Организация = КонтекстВыполнения.Организация;
	
	Графа = "10";
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС КАК ГруппаУчетаОС,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК ЗначениеПоказателя
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&СчетаУчетаОС), &ВидСубконтоОС, СчетКт = &Счет_83_01_1, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СубконтоКт1.ГруппаОС,
		|	-ХозрасчетныйОборотыДтКт.СуммаОборот
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт = &Счет_83_01_1, , СчетКт В (&СчетаУчетаОС), &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СубконтоКт1.ГруппаОС,
		|	-ХозрасчетныйОборотыДтКт.СуммаОборот
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачПериода,
		|			&КонПериода,
		|			Период,
		|			СчетДт В (&Счета_91_02),
		|			&ВидСубконтоПрочиеДоходыИРасходы,
		|			СчетКт В (&СчетаУчетаОС)
		|				ИЛИ СчетКт В (&Счет_01_05),
		|			&ВидСубконтоОС,
		|			Организация = &Организация
		|				И СубконтоДт1.ВидПрочихДоходовИРасходов = &ПереоценкаВнеоборотныхАктивов) КАК ХозрасчетныйОборотыДтКт
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачПериода,
		|			&КонПериода,
		|			Период,
		|			СчетДт В (&СчетаУчетаОС)
		|				ИЛИ СчетДт В (&Счет_01_05),
		|			&ВидСубконтоОС,
		|			СчетКт В (&Счета_91_01),
		|			&ВидСубконтоПрочиеДоходыИРасходы,
		|			Организация = &Организация
		|				И СубконтоКт1.ВидПрочихДоходовИРасходов = &ПереоценкаВнеоборотныхАктивов) КАК ХозрасчетныйОборотыДтКт
		|ИТОГИ
		|	СУММА(ЗначениеПоказателя)
		|ПО
		|	ГруппаУчетаОС";
	
	Запрос.УстановитьПараметр("НачПериода",  НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода",  КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	СчетаУчетаОС = МассивСчетовВИерархииИзСписка("01.01, 01.03, 01.11");
	Запрос.УстановитьПараметр("СчетаУчетаОС", СчетаУчетаОС);
	
	Запрос.УстановитьПараметр("Счет_01_05",   БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("01.05")));
	Запрос.УстановитьПараметр("Счет_83_01_1", Счет("83.01.1"));
	Запрос.УстановитьПараметр("Счета_91_01",  БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("91.01")));
	Запрос.УстановитьПараметр("Счета_91_02",  БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("91.02")));
	
	Запрос.УстановитьПараметр("ВидСубконтоОС",                   ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	Запрос.УстановитьПараметр("ВидСубконтоПрочиеДоходыИРасходы", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("ПереоценкаВнеоборотныхАктивов",   Перечисления.ВидыПрочихДоходовИРасходов.ПереоценкаВнеоборотныхАктивов);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		ГруппаУчетаОС = Выборка.ГруппаУчетаОС;
		Если НЕ ЗначениеЗаполнено(ГруппаУчетаОС) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицыДополнительныхСтрок = ТаблицаДополнительныхСтрок.Добавить();
		СтрокаТаблицыДополнительныхСтрок.ГруппаУчетаОС = ГруппаУчетаОС;
		СтрокаТаблицыДополнительныхСтрок["Графа" + Графа + "_" + НомерСтроки] = Выборка.ЗначениеПоказателя;
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения2СведенияДопСтрок5200и5210ПоГрафе11(КонтекстВыполнения,
	НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок);
	
	Организация = КонтекстВыполнения.Организация;
	
	Графа = "11";
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СубконтоКт1.ГруппаОС КАК ГруппаУчетаОС,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК ЗначениеПоказателя
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт = &Счет_83_01_1, , СчетКт В (&СчетаУчетаАмортизацииОС), &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
		|	-ХозрасчетныйОборотыДтКт.СуммаОборот
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&СчетаУчетаАмортизацииОС), &ВидСубконтоОС, СчетКт = &Счет_83_01_1, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СубконтоКт1.ГруппаОС,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачПериода,
		|			&КонПериода,
		|			Период,
		|			СчетДт В (&Счета_91_02),
		|			&ВидСубконтоПрочиеДоходыИРасходы,
		|			СчетКт В (&СчетаУчетаАмортизацииОС) ИЛИ СчетКт В (&Счет_02_05),
		|			&ВидСубконтоОС,
		|			Организация = &Организация
		|				И СубконтоДт1.ВидПрочихДоходовИРасходов = &ПереоценкаВнеоборотныхАктивов) КАК ХозрасчетныйОборотыДтКт
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
		|	-ХозрасчетныйОборотыДтКт.СуммаОборот
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачПериода,
		|			&КонПериода,
		|			Период,
		|			СчетДт В (&СчетаУчетаАмортизацииОС) ИЛИ СчетДт В (&Счет_02_05),
		|			&ВидСубконтоОС,
		|			СчетКт В (&Счета_91_01),
		|			&ВидСубконтоПрочиеДоходыИРасходы,
		|			Организация = &Организация
		|				И СубконтоКт1.ВидПрочихДоходовИРасходов = &ПереоценкаВнеоборотныхАктивов) КАК ХозрасчетныйОборотыДтКт
		|ИТОГИ
		|	СУММА(ЗначениеПоказателя)
		|ПО
		|	ГруппаУчетаОС";
	
	Запрос.УстановитьПараметр("НачПериода",  НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода",  КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	СчетаУчетаАмортизацииОС = МассивСчетовВИерархииИзСписка("02.01, 02.03, 02.11");
	Запрос.УстановитьПараметр("СчетаУчетаАмортизацииОС", СчетаУчетаАмортизацииОС);
	
	Запрос.УстановитьПараметр("Счет_02_05",   БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("02.05")));
	Запрос.УстановитьПараметр("Счет_83_01_1", Счет("83.01.1"));
	Запрос.УстановитьПараметр("Счета_91_01",  БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("91.01")));
	Запрос.УстановитьПараметр("Счета_91_02",  БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("91.02")));
	
	Запрос.УстановитьПараметр("ВидСубконтоОС",                   ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	Запрос.УстановитьПараметр("ВидСубконтоПрочиеДоходыИРасходы", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("ПереоценкаВнеоборотныхАктивов",   Перечисления.ВидыПрочихДоходовИРасходов.ПереоценкаВнеоборотныхАктивов);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		ГруппаУчетаОС = Выборка.ГруппаУчетаОС;
		Если НЕ ЗначениеЗаполнено(ГруппаУчетаОС) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицыДополнительныхСтрок = ТаблицаДополнительныхСтрок.Добавить();
		СтрокаТаблицыДополнительныхСтрок.ГруппаУчетаОС = ГруппаУчетаОС;
		СтрокаТаблицыДополнительныхСтрок["Графа" + Графа + "_" + НомерСтроки] = -Выборка.ЗначениеПоказателя;
		// Это же значение вычитается из графы 09.
		СтрокаТаблицыДополнительныхСтрок["Графа" + "09" + "_" + НомерСтроки] = -Выборка.ЗначениеПоказателя;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения2Строки5200и5210ВТомЧисле(КонтекстВыполнения, ТаблицаЗначенийДопСтрок)
	
	Если ТаблицаЗначенийДопСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИмяГруппы = "ДопСтрока5200";
	МногострочнаяЧасть = Новый ТаблицаЗначений;
	МногострочнаяЧасть.Колонки.Добавить("П100100520001", Новый ОписаниеТипов("Строка"));
	
	МногострочнаяЧасть.Колонки.Добавить("П100100520004", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100520005", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100520006", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100520007", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100520008", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100520009", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100520010", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100520011", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100520012", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100520013", Новый ОписаниеТипов("Число"));
	
	МногострочнаяЧасть.Колонки.Добавить("П100100521004", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100521005", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100521006", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100521007", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100521008", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100521009", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100521010", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100521011", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100521012", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100521013", Новый ОписаниеТипов("Число"));
	
	Для Каждого ДополнительнаяСтрока Из ТаблицаЗначенийДопСтрок Цикл
		СтрокаМногострочнойЧасти = МногострочнаяЧасть.Добавить();
		СтрокаМногострочнойЧасти.П100100520001 = ДополнительнаяСтрока.ГруппаУчетаОС;
		
		СтрокаМногострочнойЧасти.П100100520004 =  ДополнительнаяСтрока.Графа04_5200;
		СтрокаМногострочнойЧасти.П100100520005 = -ДополнительнаяСтрока.Графа05_5200;
		СтрокаМногострочнойЧасти.П100100520006 =  ДополнительнаяСтрока.Графа06_5200;
		СтрокаМногострочнойЧасти.П100100520007 = -ДополнительнаяСтрока.Графа07_5200;
		СтрокаМногострочнойЧасти.П100100520008 =  ДополнительнаяСтрока.Графа08_5200;
		СтрокаМногострочнойЧасти.П100100520009 = -ДополнительнаяСтрока.Графа09_5200;
		СтрокаМногострочнойЧасти.П100100520010 =  ДополнительнаяСтрока.Графа10_5200;
		СтрокаМногострочнойЧасти.П100100520011 =  ДополнительнаяСтрока.Графа11_5200;
		СтрокаМногострочнойЧасти.П100100520012 =  ДополнительнаяСтрока.Графа12_5200;
		СтрокаМногострочнойЧасти.П100100520013 = -ДополнительнаяСтрока.Графа13_5200;
		
		СтрокаМногострочнойЧасти.П100100521004 =  ДополнительнаяСтрока.Графа04_5210;
		СтрокаМногострочнойЧасти.П100100521005 = -ДополнительнаяСтрока.Графа05_5210;
		СтрокаМногострочнойЧасти.П100100521006 =  ДополнительнаяСтрока.Графа06_5210;
		СтрокаМногострочнойЧасти.П100100521007 = -ДополнительнаяСтрока.Графа07_5210;
		СтрокаМногострочнойЧасти.П100100521008 =  ДополнительнаяСтрока.Графа08_5210;
		СтрокаМногострочнойЧасти.П100100521009 = -ДополнительнаяСтрока.Графа09_5210;
		СтрокаМногострочнойЧасти.П100100521010 =  ДополнительнаяСтрока.Графа10_5210;
		СтрокаМногострочнойЧасти.П100100521011 =  ДополнительнаяСтрока.Графа11_5210;
		СтрокаМногострочнойЧасти.П100100521012 =  ДополнительнаяСтрока.Графа12_5210;
		СтрокаМногострочнойЧасти.П100100521013 = -ДополнительнаяСтрока.Графа13_5210;
	КонецЦикла;
	
	Если НЕ КонтекстВыполнения.МногострочныеПоказатели.Свойство("Пояснения2") Тогда
		КонтекстВыполнения.МногострочныеПоказатели.Вставить("Пояснения2", Новый Структура);
	КонецЕсли;
	
	КонтекстВыполнения.МногострочныеПоказатели.Пояснения2.Вставить(ИмяГруппы, МногострочнаяЧасть);
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения2Строки5220и5230(КонтекстВыполнения,
	НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок)
	
	ИмяРаздела = "Пояснения2";
	
	Организация = КонтекстВыполнения.Организация;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	ПараметрыРасшифровки = Новый Структура;
	ПараметрыРасшифровки.Вставить("Организация",   КонтекстВыполнения.Организация);
	ПараметрыРасшифровки.Вставить("НачалоПериода", НачалоПериода);
	ПараметрыРасшифровки.Вставить("КонецПериода",  КонецПериода);
	
	КонтекстВыполнения.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
	
	ПроцессорПоказателя = КонтекстВыполнения.КонтекстОтчета.КонтекстСтроки.ПроцессорПоказателя;
	Вычитаемый = Истина;
	
	НастройкиПолученияБухитогов = Новый Структура;
	НастройкиПолученияБухитогов.Вставить("Организация",   Организация);
	НастройкиПолученияБухитогов.Вставить("НачалоПериода", НачалоПериода);
	НастройкиПолученияБухитогов.Вставить("КонецПериода",  КонецПериода);
	
	Обороты91ПоПереоценкеВнеоборотныхАктивов =
		ЗаполнениеБухгалтерскойОтчетностиИтоги.Обороты91ПоПереоценкеВнеоборотныхАктивов(НастройкиПолученияБухитогов);
	
	ОБ_91_02__02_02_ПереоценкаВнеоборотныхАктивов = ОБ("91.02", "02.02", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	ОБ_02_02__91_01_ПереоценкаВнеоборотныхАктивов = ОБ("02.02", "91.01", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	ОБ_91_02__03_ПереоценкаВнеоборотныхАктивов    = ОБ("91.02", "03", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	ОБ_03__91_01_ПереоценкаВнеоборотныхАктивов    = ОБ("03", "91.01", Обороты91ПоПереоценкеВнеоборотныхАктивов);
	
	НаименованиеСтроки = "Учтено в составе доходных вложений в материальные ценности - всего";
	
#Область Графа04
	
	Графа = "04";
	ЗаголовокГрафы = "На начало года - первоначальная стоимость";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 03.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 03.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 03.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 03.04");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа05
	
	Графа = "05";
	ЗаголовокГрафы = "На начало года - накопленная амортизация";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНК 02.02");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
#КонецОбласти
	
#Область Графа06
	
	Графа = "06";
	ЗаголовокГрафы = "Изменения за период - Поступило";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 03, 08");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа07
	
	Графа = "07";
	ЗаголовокГрафы = "Изменения за период - Выбыло объектов - первоначальная стоимость";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 03.09, 03.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 03.09, 03.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 03.09, 03.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 03.09, 03.04");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
#КонецОбласти
	
#Область Графа08
	
	Графа = "08";
	ЗаголовокГрафы = "Изменения за период - Выбыло объектов - накопленная амортизация";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 02.02, 03.09");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа09
	
	Графа = "09";
	ЗаголовокГрафы = "Изменения за период - начислено амортизации";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 02.02");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 02.02, 02.01");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 02.02, 02.02");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 02.02, 02.03");
	
	// Вычет графы 11.
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 83.01.1, 02.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 02.02, 83.01.1");
	
	ЗначениеПоказателя = ПроцессорПоказателя.Показатель.ЗначениеПоказателя
	                   - ОБ_91_02__02_02_ПереоценкаВнеоборотныхАктивов
	                   + ОБ_02_02__91_01_ПереоценкаВнеоборотныхАктивов;
	
	ИмяВПДР = "ПереоценкаВнеоборотныхАктивов";
	НаименованиеСлагаемого = "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.02";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"-", НаименованиеСлагаемого,
		-ОБ_91_02__02_02_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "02.02", ИмяВПДР));
	НаименованиеСлагаемого = "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.02";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", НаименованиеСлагаемого,
		ОБ_02_02__91_01_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "02.02", ИмяВПДР));
	
	ПроцессорПоказателя.Показатель.ЗначениеПоказателя = ЗначениеПоказателя;
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
#КонецОбласти
	
#Область Графа10
	
	Графа = "10";
	ЗаголовокГрафы = "Изменения за период - Переоценка - первоначальная стоимость";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 03, 83.01.1");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 83.01.1, 03");
	
	ЗначениеПоказателя = ПроцессорПоказателя.Показатель.ЗначениеПоказателя
	                   - ОБ_91_02__03_ПереоценкаВнеоборотныхАктивов
	                   + ОБ_03__91_01_ПереоценкаВнеоборотныхАктивов;
	
	ИмяВПДР = "ПереоценкаВнеоборотныхАктивов";
	НаименованиеСлагаемого = "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 03";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"-", НаименованиеСлагаемого,
		-ОБ_91_02__03_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "03", ИмяВПДР));
	НаименованиеСлагаемого = "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 03";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", НаименованиеСлагаемого,
		ОБ_03__91_01_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "03", ИмяВПДР));
	
	ПроцессорПоказателя.Показатель.ЗначениеПоказателя = ЗначениеПоказателя;
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа11
	
	Графа = "11";
	ЗаголовокГрафы = "Изменения за период - Переоценка - накопленная амортизация";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 83.01.1, 02.02");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 02.02, 83.01.1");
	
	ЗначениеПоказателя = ПроцессорПоказателя.Показатель.ЗначениеПоказателя
	                   + ОБ_91_02__02_02_ПереоценкаВнеоборотныхАктивов
	                   - ОБ_02_02__91_01_ПереоценкаВнеоборотныхАктивов;
	
	ИмяВПДР = "ПереоценкаВнеоборотныхАктивов";
	НаименованиеСлагаемого = "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.02";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", НаименованиеСлагаемого,
		ОБ_91_02__02_02_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.02", "02.02", ИмяВПДР));
	НаименованиеСлагаемого = "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 02.02";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"-", НаименованиеСлагаемого,
		-ОБ_02_02__91_01_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(КонтекстВыполнения, "91.01", "02.02", ИмяВПДР));
	
	ПроцессорПоказателя.Показатель.ЗначениеПоказателя = ЗначениеПоказателя;
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
#КонецОбласти
	
#Область Графа12
	
	Графа = "12";
	ЗаголовокГрафы = "На конец периода - первоначальная стоимость";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 03.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 03.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 03.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 03.04");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа13
	
	Графа = "13";
	ЗаголовокГрафы = "На конец периода - накопленная амортизация";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 02.02");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
	ЗаполнитьФормаОтчета2019Кв1_Пояснения2СведенияДопСтрок5220и5230КромеГрафы11(КонтекстВыполнения, НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок);
	ЗаполнитьФормаОтчета2019Кв1_Пояснения2СведенияДопСтрок5220и5230ПоГрафе11(КонтекстВыполнения, НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок);
	
	КонтекстВыполнения.Удалить("ПараметрыРасшифровки");
	
#КонецОбласти
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения2СведенияДопСтрок5220и5230КромеГрафы11(КонтекстВыполнения,
	НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок)
	
	Организация = КонтекстВыполнения.Организация;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОбъединениеДанных.ГруппаОС КАК ГруппаОС,
	               |	СУММА(ОбъединениеДанных.Значение) КАК Значение
	               |ПОМЕСТИТЬ ВТ_Графа09
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ХозрасчетныйОбороты.Субконто1.ГруппаОС КАК ГруппаОС,
	               |		ХозрасчетныйОбороты.СуммаОборотКт КАК Значение
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, Период, Счет В (&Счет_02_02), &ВидСубконтоОС, Организация = &Организация, , ) КАК ХозрасчетныйОбороты
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
	               |		-1 * ХозрасчетныйОборотыДтКт.СуммаОборот
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счет_02_02), &ВидСубконтоОС, СчетКт В (&Счет_02), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт) КАК ОбъединениеДанных
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъединениеДанных.ГруппаОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Субконто1.ГруппаОС КАК ГруппаУчетаОС,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК ЗначениеГрафы04,
	               |	0 КАК ЗначениеГрафы05,
	               |	0 КАК ЗначениеГрафы06,
	               |	0 КАК ЗначениеГрафы07,
	               |	0 КАК ЗначениеГрафы08,
	               |	0 КАК ЗначениеГрафы09,
	               |	0 КАК ЗначениеГрафы10,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК ЗначениеГрафы12,
	               |	0 КАК ЗначениеГрафы13
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет = &Счет_03_01, &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Субконто1.ГруппаОС,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет = &Счет_03_03, &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Субконто1.ГруппаОС,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет = &Счет_03_04, &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Субконто1.ГруппаОС,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет = &Счет_03_02, &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Субконто1.ГруппаОС,
	               |	0,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счет_02_02), &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счета_03), &ВидСубконтоОС, СчетКт В (&Счета_08), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
	               |	0,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт = &Счет_03_09, &ВидСубконтоОС, СчетКт = &Счет_03_01, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
	               |	0,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт = &Счет_03_09, &ВидСубконтоОС, СчетКт = &Счет_03_02, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
	               |	0,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт = &Счет_03_09, &ВидСубконтоОС, СчетКт = &Счет_03_03, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
	               |	0,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт = &Счет_03_09, &ВидСубконтоОС, СчетКт = &Счет_03_04, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот,
	               |	0,
	               |	0,
	               |	0,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счет_02_02), &ВидСубконтоОС, СчетКт = &Счет_03_09, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВТ_Графа09.ГруппаОС,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	ВТ_Графа09.Значение,
	               |	0,
	               |	0,
	               |	0
	               |ИЗ
	               |	ВТ_Графа09 КАК ВТ_Графа09
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот,
	               |	0,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счета_03), &ВидСубконтоОС, СчетКт = &Счет_83_1_1, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоКт1.ГруппаОС,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	-ХозрасчетныйОборотыДтКт.СуммаОборот,
	               |	0,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт = &Счет_83_1_1, , СчетКт В (&Счета_03), &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоКт1.ГруппаОС,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	-ХозрасчетныйОборотыДтКт.СуммаОборот,
	               |	0,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	               |			&НачПериода,
	               |			&КонПериода,
	               |			Период,
	               |			СчетДт = &Счет_91_02,
	               |			&ВидСубконтоПрочиеДоходыИРасходы,
	               |			СчетКт В (&Счета_03),
	               |			&ВидСубконтоОС,
	               |			Организация = &Организация
	               |				И СубконтоДт1.ВидПрочихДоходовИРасходов = &ПереоценкаВнеоборотныхАктивов) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот,
	               |	0,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	               |			&НачПериода,
	               |			&КонПериода,
	               |			Период,
	               |			СчетДт В (&Счета_03),
	               |			&ВидСубконтоОС,
	               |			СчетКт = &Счет_91_01,
	               |			&ВидСубконтоПрочиеДоходыИРасходы,
	               |			Организация = &Организация
	               |				И СубконтоКт1.ВидПрочихДоходовИРасходов = &ПереоценкаВнеоборотныхАктивов) КАК ХозрасчетныйОборотыДтКт
	               |ИТОГИ
	               |	СУММА(ЗначениеГрафы04),
	               |	СУММА(ЗначениеГрафы05),
	               |	СУММА(ЗначениеГрафы06),
	               |	СУММА(ЗначениеГрафы07),
	               |	СУММА(ЗначениеГрафы08),
	               |	СУММА(ЗначениеГрафы09),
	               |	СУММА(ЗначениеГрафы10),
	               |	СУММА(ЗначениеГрафы12),
	               |	СУММА(ЗначениеГрафы13)
	               |ПО
	               |	ГруппаУчетаОС";
	
	Запрос.УстановитьПараметр("НачПериода",    НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода",    КонецПериода);
	Запрос.УстановитьПараметр("Организация",   Организация);
	
	Запрос.УстановитьПараметр("Счет_02",       БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("02")));
	Запрос.УстановитьПараметр("Счет_02_02",    БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("02.02")));
	
	Запрос.УстановитьПараметр("Счета_03",      БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("03")));
	Запрос.УстановитьПараметр("Счет_03",       Счет("03"));
	Запрос.УстановитьПараметр("Счет_03_01",    Счет("03.01"));
	Запрос.УстановитьПараметр("Счет_03_02",    Счет("03.02"));
	Запрос.УстановитьПараметр("Счет_03_03",    Счет("03.03"));
	Запрос.УстановитьПараметр("Счет_03_04",    Счет("03.04"));
	Запрос.УстановитьПараметр("Счет_03_09",    Счет("03.09"));
	
	Запрос.УстановитьПараметр("Счета_08",      БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08")));
	Запрос.УстановитьПараметр("Счет_83_1_1",   Счет("83.01.1"));
	Запрос.УстановитьПараметр("Счет_91_01",    Счет("91.01"));
	Запрос.УстановитьПараметр("Счет_91_02",    Счет("91.02"));
	Запрос.УстановитьПараметр("ВидСубконтоОС", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	Запрос.УстановитьПараметр("ВидСубконтоПрочиеДоходыИРасходы", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("ПереоценкаВнеоборотныхАктивов", Перечисления.ВидыПрочихДоходовИРасходов.ПереоценкаВнеоборотныхАктивов);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		ГруппаУчетаОС = Выборка.ГруппаУчетаОС;
		Если НЕ ЗначениеЗаполнено(ГруппаУчетаОС) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицыДополнительныхСтрок = ТаблицаДополнительныхСтрок.Добавить();
		СтрокаТаблицыДополнительныхСтрок.ГруппаУчетаОС = ГруппаУчетаОС;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "04" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы04;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "05" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы05;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "06" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы06;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "07" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы07;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "08" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы08;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "09" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы09;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "10" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы10;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "12" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы12;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "13" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы13;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения2СведенияДопСтрок5220и5230ПоГрафе11(КонтекстВыполнения,
	НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок)
	
	Организация = КонтекстВыполнения.Организация;
	
	Графа = "11";
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоКт1.ГруппаОС КАК ГруппаУчетаОС,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот КАК ЗначениеПоказателя
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт = &Счет_83_01_1, , СчетКт = &Счет_02_02, &ВидСубконтоОС, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоКт1.ГруппаОС,
	               |	-ХозрасчетныйОборотыДтКт.СуммаОборот
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт = &Счет_02_02, &ВидСубконтоОС, СчетКт = &Счет_83_01_1, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоКт1.ГруппаОС,
	               |	ХозрасчетныйОборотыДтКт.СуммаОборот
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	               |			&НачПериода,
	               |			&КонПериода,
	               |			Период,
	               |			СчетДт = &Счет_91_02,
	               |			&ВидСубконтоПрочиеДоходыИРасходы,
	               |			СчетКт = &Счет_02_02,
	               |			&ВидСубконтоОС,
	               |			Организация = &Организация
	               |				И СубконтоДт1.ВидПрочихДоходовИРасходов = &ПереоценкаВнеоборотныхАктивов) КАК ХозрасчетныйОборотыДтКт
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОборотыДтКт.СубконтоДт1.ГруппаОС,
	               |	-ХозрасчетныйОборотыДтКт.СуммаОборот
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	               |			&НачПериода,
	               |			&КонПериода,
	               |			Период,
	               |			СчетДт = &Счет_02_02,
	               |			&ВидСубконтоОС,
	               |			СчетКт = &Счет_91_01,
	               |			&ВидСубконтоПрочиеДоходыИРасходы,
	               |			Организация = &Организация
	               |				И СубконтоКт1.ВидПрочихДоходовИРасходов = &ПереоценкаВнеоборотныхАктивов) КАК ХозрасчетныйОборотыДтКт
	               |ИТОГИ
	               |	СУММА(ЗначениеПоказателя)
	               |ПО
	               |	ГруппаУчетаОС";
	
	Запрос.УстановитьПараметр("НачПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода", КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Счет_02_02",   Счет("02.02"));
	Запрос.УстановитьПараметр("Счет_83_01_1", Счет("83.01.1"));
	Запрос.УстановитьПараметр("Счет_91_01",   Счет("91.01"));
	Запрос.УстановитьПараметр("Счет_91_02",   Счет("91.02"));
	Запрос.УстановитьПараметр("ВидСубконтоОС", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	Запрос.УстановитьПараметр("ВидСубконтоПрочиеДоходыИРасходы", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("ПереоценкаВнеоборотныхАктивов", Перечисления.ВидыПрочихДоходовИРасходов.ПереоценкаВнеоборотныхАктивов);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		ГруппаУчетаОС = Выборка.ГруппаУчетаОС;
		Если НЕ ЗначениеЗаполнено(ГруппаУчетаОС) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицыДополнительныхСтрок = ТаблицаДополнительныхСтрок.Добавить();
		СтрокаТаблицыДополнительныхСтрок.ГруппаУчетаОС = ГруппаУчетаОС;
		СтрокаТаблицыДополнительныхСтрок["Графа" + Графа + "_" + НомерСтроки] = Выборка.ЗначениеПоказателя;
		// Это же значение вычитается из графы 09.
		СтрокаТаблицыДополнительныхСтрок["Графа" + "09" + "_" + НомерСтроки] = -Выборка.ЗначениеПоказателя;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения2Строки5220и5230ВТомЧисле(КонтекстВыполнения, ТаблицаЗначенийДопСтрок)
	
	Если ТаблицаЗначенийДопСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИмяГруппы = "ДопСтрока5220";
	МногострочнаяЧасть = Новый ТаблицаЗначений;
	МногострочнаяЧасть.Колонки.Добавить("П100100522001", Новый ОписаниеТипов("Строка"));
	
	МногострочнаяЧасть.Колонки.Добавить("П100100522004", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100522005", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100522006", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100522007", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100522008", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100522009", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100522010", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100522011", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100522012", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100522013", Новый ОписаниеТипов("Число"));
	
	МногострочнаяЧасть.Колонки.Добавить("П100100523004", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100523005", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100523006", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100523007", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100523008", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100523009", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100523010", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100523011", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100523012", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100523013", Новый ОписаниеТипов("Число"));
	
	Для Каждого ДополнительнаяСтрока Из ТаблицаЗначенийДопСтрок Цикл
		СтрокаМногострочнойЧасти = МногострочнаяЧасть.Добавить();
		СтрокаМногострочнойЧасти.П100100522001 = ДополнительнаяСтрока.ГруппаУчетаОС;
		
		СтрокаМногострочнойЧасти.П100100522004 =  ДополнительнаяСтрока.Графа04_5220;
		СтрокаМногострочнойЧасти.П100100522005 = -ДополнительнаяСтрока.Графа05_5220;
		СтрокаМногострочнойЧасти.П100100522006 =  ДополнительнаяСтрока.Графа06_5220;
		СтрокаМногострочнойЧасти.П100100522007 = -ДополнительнаяСтрока.Графа07_5220;
		СтрокаМногострочнойЧасти.П100100522008 =  ДополнительнаяСтрока.Графа08_5220;
		СтрокаМногострочнойЧасти.П100100522009 = -ДополнительнаяСтрока.Графа09_5220;
		СтрокаМногострочнойЧасти.П100100522010 =  ДополнительнаяСтрока.Графа10_5220;
		СтрокаМногострочнойЧасти.П100100522011 =  ДополнительнаяСтрока.Графа11_5220;
		СтрокаМногострочнойЧасти.П100100522012 =  ДополнительнаяСтрока.Графа12_5220;
		СтрокаМногострочнойЧасти.П100100522013 = -ДополнительнаяСтрока.Графа13_5220;
		
		СтрокаМногострочнойЧасти.П100100523004 =  ДополнительнаяСтрока.Графа04_5230;
		СтрокаМногострочнойЧасти.П100100523005 = -ДополнительнаяСтрока.Графа05_5230;
		СтрокаМногострочнойЧасти.П100100523006 =  ДополнительнаяСтрока.Графа06_5230;
		СтрокаМногострочнойЧасти.П100100523007 = -ДополнительнаяСтрока.Графа07_5230;
		СтрокаМногострочнойЧасти.П100100523008 =  ДополнительнаяСтрока.Графа08_5230;
		СтрокаМногострочнойЧасти.П100100523009 = -ДополнительнаяСтрока.Графа09_5230;
		СтрокаМногострочнойЧасти.П100100523010 =  ДополнительнаяСтрока.Графа10_5230;
		СтрокаМногострочнойЧасти.П100100523011 =  ДополнительнаяСтрока.Графа11_5230;
		СтрокаМногострочнойЧасти.П100100523012 =  ДополнительнаяСтрока.Графа12_5230;
		СтрокаМногострочнойЧасти.П100100523013 = -ДополнительнаяСтрока.Графа13_5230;
	КонецЦикла;
	
	Если НЕ КонтекстВыполнения.МногострочныеПоказатели.Свойство("Пояснения2") Тогда
		КонтекстВыполнения.МногострочныеПоказатели.Вставить("Пояснения2", Новый Структура);
	КонецЕсли;
	
	КонтекстВыполнения.МногострочныеПоказатели.Пояснения2.Вставить(ИмяГруппы, МногострочнаяЧасть);
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения2Строки5240и5250(КонтекстВыполнения,
	НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок)
	
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	ПараметрыРасшифровки = Новый Структура;
	ПараметрыРасшифровки.Вставить("Организация",   КонтекстВыполнения.Организация);
	ПараметрыРасшифровки.Вставить("НачалоПериода", НачалоПериода);
	ПараметрыРасшифровки.Вставить("КонецПериода",  КонецПериода);
	
	КонтекстВыполнения.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
	
	НаименованиеСтроки = "Незавершенное строительство и незаконченные операции по приобретению, модернизации и т.п основных средств - всего";
	ПараметрыРасшифровки = Новый Структура;
	ПараметрыРасшифровки.Вставить("ИмяОтчета", "Пояснения2");
	ПараметрыРасшифровки.Вставить("ДатаНачалаПериодаОтчета", НачалоПериода);
	ПараметрыРасшифровки.Вставить("ДатаКонцаПериодаОтчета", КонецПериода);
	
	ПроцессорПоказателя = КонтекстВыполнения.КонтекстОтчета.КонтекстСтроки.ПроцессорПоказателя;
	Вычитаемый = Истина;
	
#Область Графа04
	
	Графа = "04";
	ЗаголовокГрафы = "На начало года";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 07");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 08.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 08.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 08.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 08.04");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 08.06");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 08.07");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 08.12");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 23.05");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа05
	
	Графа = "05";
	ЗаголовокГрафы = "Изменения за период - затраты за период";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 07");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 08.03, 07");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 08.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 08.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 08.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 08.04");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 08.06");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 08.07");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 08.12");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 23.05");
	УчестьСоставляющую(ПроцессорПоказателя, "- СНД 23.05");
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа06
	
	Графа = "06";
	ЗаголовокГрафы = "Изменения за период - списано";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 07");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 08.03, 07");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 08.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 08.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 08.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 08.04");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 08.06");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 08.07");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 08.12");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 01, 08");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 03, 08");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
#КонецОбласти
	
#Область Графа07
	
	Графа = "07";
	ЗаголовокГрафы = "Изменения за период - принято к учету в качестве основных средств или увеличена стоимость";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 01, 08");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 03, 08");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
#КонецОбласти
	
#Область Графа08
	
	Графа = "08";
	ЗаголовокГрафы = "На конец периода";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
		НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 07");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.04");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.06");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.07");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.12");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 23.05");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
	ЗаполнитьФормаОтчета2019Кв1_Пояснения2СведенияДопСтрок5240и5250(КонтекстВыполнения, НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок);
	
	КонтекстВыполнения.Удалить("ПараметрыРасшифровки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения2СведенияДопСтрок5240и5250(КонтекстВыполнения,
	НомерСтроки, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок)
	
	Организация = КонтекстВыполнения.Организация;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК ОбъектУчета,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК ЗначениеГрафы04,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ЗначениеГрафы05,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК ЗначениеГрафы06,
		|	0 КАК ЗначениеГрафы07,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК ЗначениеГрафы08
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&НачПериода,
		|			&КонПериода,
		|			Период,
		|			Движения,
		|			Счет В (&Счета_07)
		|				ИЛИ Счет В (&Счета_08_04)
		|				ИЛИ Счет В (&Счета_08_06)
		|				ИЛИ Счет В (&Счета_08_07)
		|				ИЛИ Счет В (&Счета_08_12),
		|			&ВидыСубконтоНоменклатура,
		|			Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Субконто1,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт,
		|	0,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&НачПериода,
		|			&КонПериода,
		|			Период,
		|			Движения,
		|			Счет В (&Счета_08_01)
		|				ИЛИ Счет В (&Счета_08_02)
		|				ИЛИ Счет В (&Счета_08_03),
		|			&ВидыСубконтоОбъектыСтроительства,
		|			Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Субконто1,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт,
		|	0,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счета_08_04), &ВидыСубконтоОсновныеСредства, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.Субконто1,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт - ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
		|	0,
		|	0,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&Счет_23_05), &ВидыСубконтоОсновныеСредства, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
		|	0,
		|	-ХозрасчетныйОборотыДтКт.СуммаОборот,
		|	-ХозрасчетныйОборотыДтКт.СуммаОборот,
		|	0,
		|	0
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Период, СчетДт В (&Счета_08_03), , СчетКт В (&Счета_07), &ВидыСубконтоНоменклатура, Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
		|	0,
		|	0,
		|	-ХозрасчетныйОборотыДтКт.СуммаОборот,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот,
		|	0
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачПериода,
		|			&КонПериода,
		|			Период,
		|			СчетДт В (&Счета_01)
		|				ИЛИ СчетДт В (&Счета_03),
		|			,
		|			СчетКт В (&Счета_08),
		|			&ВидыСубконтоОбъектыСтроительства,
		|			Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
		|	0,
		|	0,
		|	-ХозрасчетныйОборотыДтКт.СуммаОборот,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот,
		|	0
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачПериода,
		|			&КонПериода,
		|			Период,
		|			СчетДт В (&Счета_01)
		|				ИЛИ СчетДт В (&Счета_03),
		|			,
		|			СчетКт В (&Счета_08),
		|			&ВидыСубконтоНоменклатура,
		|			Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
		|	0,
		|	0,
		|	-ХозрасчетныйОборотыДтКт.СуммаОборот,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот,
		|	0
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачПериода,
		|			&КонПериода,
		|			Период,
		|			СчетДт В (&Счета_01)
		|				ИЛИ СчетДт В (&Счета_03),
		|			,
		|			СчетКт В (&Счета_08),
		|			&ВидыСубконтоОсновныеСредства,
		|			Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|ИТОГИ
		|	СУММА(ЗначениеГрафы04),
		|	СУММА(ЗначениеГрафы05),
		|	СУММА(ЗначениеГрафы06),
		|	СУММА(ЗначениеГрафы07),
		|	СУММА(ЗначениеГрафы08)
		|ПО
		|	ОбъектУчета";
	
	Запрос.УстановитьПараметр("НачПериода",  НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода",  КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.УстановитьПараметр("Счета_01",    БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("01")));
	Запрос.УстановитьПараметр("Счета_03",    БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("03")));
	Запрос.УстановитьПараметр("Счета_07",    БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("07")));
	Запрос.УстановитьПараметр("Счета_08",    БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08")));
	Запрос.УстановитьПараметр("Счета_08_01", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08.01")));
	Запрос.УстановитьПараметр("Счета_08_02", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08.02")));
	Запрос.УстановитьПараметр("Счета_08_03", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08.03")));
	Запрос.УстановитьПараметр("Счета_08_04", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08.04")));
	Запрос.УстановитьПараметр("Счета_08_06", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08.06")));
	Запрос.УстановитьПараметр("Счета_08_07", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08.07")));
	Запрос.УстановитьПараметр("Счета_08_12", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08.12")));
	Запрос.УстановитьПараметр("Счет_23_05",  БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("23.05")));
	
	Запрос.УстановитьПараметр("ВидыСубконтоНоменклатура",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Запрос.УстановитьПараметр("ВидыСубконтоОсновныеСредства",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	Запрос.УстановитьПараметр("ВидыСубконтоОбъектыСтроительства", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		ОбъектУчета = Выборка.ОбъектУчета;
		Если НЕ ЗначениеЗаполнено(ОбъектУчета) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицыДополнительныхСтрок = ТаблицаДополнительныхСтрок.Добавить();
		СтрокаТаблицыДополнительныхСтрок.ОбъектУчета = ОбъектУчета;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "04" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы04;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "05" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы05;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "06" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы06;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "07" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы07;
		СтрокаТаблицыДополнительныхСтрок["Графа" + "08" + "_" + НомерСтроки] = Выборка.ЗначениеГрафы08;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения2Строки5240и5250ВТомЧисле(КонтекстВыполнения, ТаблицаЗначенийДопСтрок)
	
	Если ТаблицаЗначенийДопСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИмяГруппы = "ДопСтрока5240";
	МногострочнаяЧасть = Новый ТаблицаЗначений;
	МногострочнаяЧасть.Колонки.Добавить("П100100524001", Новый ОписаниеТипов("Строка"));
	
	МногострочнаяЧасть.Колонки.Добавить("П100100524004", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100524005", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100524006", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100524007", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100524008", Новый ОписаниеТипов("Число"));
	
	МногострочнаяЧасть.Колонки.Добавить("П100100525004", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100525005", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100525006", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100525007", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100525008", Новый ОписаниеТипов("Число"));
	
	Для Каждого ДополнительнаяСтрока Из ТаблицаЗначенийДопСтрок Цикл
		СтрокаМногострочнойЧасти = МногострочнаяЧасть.Добавить();
		СтрокаМногострочнойЧасти.П100100524001 = ДополнительнаяСтрока.ОбъектУчета;
		
		СтрокаМногострочнойЧасти.П100100524004 = ДополнительнаяСтрока.Графа04_5240;
		СтрокаМногострочнойЧасти.П100100524005 = ДополнительнаяСтрока.Графа05_5240;
		СтрокаМногострочнойЧасти.П100100524006 = ДополнительнаяСтрока.Графа06_5240;
		СтрокаМногострочнойЧасти.П100100524007 = -ДополнительнаяСтрока.Графа07_5240;
		СтрокаМногострочнойЧасти.П100100524008 = ДополнительнаяСтрока.Графа08_5240;
		
		СтрокаМногострочнойЧасти.П100100525004 = ДополнительнаяСтрока.Графа04_5250;
		СтрокаМногострочнойЧасти.П100100525005 = ДополнительнаяСтрока.Графа05_5250;
		СтрокаМногострочнойЧасти.П100100525006 = ДополнительнаяСтрока.Графа06_5250;
		СтрокаМногострочнойЧасти.П100100525007 = -ДополнительнаяСтрока.Графа07_5250;
		СтрокаМногострочнойЧасти.П100100525008 = ДополнительнаяСтрока.Графа08_5250;
	КонецЦикла;
	
	Если НЕ КонтекстВыполнения.МногострочныеПоказатели.Свойство("Пояснения2") Тогда
		КонтекстВыполнения.МногострочныеПоказатели.Вставить("Пояснения2", Новый Структура);
	КонецЕсли;
	
	КонтекстВыполнения.МногострочныеПоказатели.Пояснения2.Вставить(ИмяГруппы, МногострочнаяЧасть);
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения2Строка5260(КонтекстВыполнения,
	Графа, НачалоПериода, КонецПериода, ТаблицаДополнительныхСтрок)
	
	Организация = КонтекстВыполнения.Организация;
	СчетаСРеквизитами = КонтекстВыполнения.СчетаСРеквизитами;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	ИмяРаздела = "Пояснения2";
	
	ПараметрыРасшифровки = Новый Структура;
	ПараметрыРасшифровки.Вставить("Организация",   КонтекстВыполнения.Организация);
	ПараметрыРасшифровки.Вставить("НачалоПериода", НачалоПериода);
	ПараметрыРасшифровки.Вставить("КонецПериода",  КонецПериода);
	
	КонтекстВыполнения.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
	
	ДополнительныеПараметрыРасшифровки = Новый Структура("Организация", Организация);
	
	ЗаголовокГрафы = "За " + Формат(ПривестиКДате(КонецПериода), "ДФ=yyyy") + " г.";
	
	НомерСтроки = "5260";
	НаименованиеСтроки = "Увеличение стоимости объектов основных средств в результате достройки, дооборудования, реконструкции – всего";
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК ОсновноеСредство,
		|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК ЗначениеПоказателя,
		|	ХозрасчетныйОборотыДтКт.СчетДт КАК СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Регистратор, СчетДт В (&Счета_01_01), &СубконтоОсновныеСредства, СчетКт В (&Счета_08_03), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДокументыМодернизацииОСПереопределяемый КАК ВТ_ДокументыМодернизацииОСПереопределяемый
		|		ПО ХозрасчетныйОборотыДтКт.Регистратор = ВТ_ДокументыМодернизацииОСПереопределяемый.МодернизацияОССсылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОборотыДтКт.СубконтоДт1,
		|	ХозрасчетныйОборотыДтКт.СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СубконтоДт1,
		|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот),
		|	ХозрасчетныйОборотыДтКт.СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Регистратор, СчетДт В (&Счета_01_01), &СубконтоОсновныеСредства, СчетКт В (&Счета_08_04), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДокументыМодернизацииОСПереопределяемый КАК ВТ_ДокументыМодернизацииОСПереопределяемый
		|		ПО ХозрасчетныйОборотыДтКт.Регистратор = ВТ_ДокументыМодернизацииОСПереопределяемый.МодернизацияОССсылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОборотыДтКт.СубконтоДт1,
		|	ХозрасчетныйОборотыДтКт.СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СубконтоДт1,
		|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот),
		|	ХозрасчетныйОборотыДтКт.СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Регистратор, СчетДт В (&Счета_01_05), &СубконтоОсновныеСредства, СчетКт В (&Счета_08_04_5), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОборотыДтКт.СубконтоДт1,
		|	ХозрасчетныйОборотыДтКт.СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт";
	
	ЗаполнениеБухгалтерскойОтчетностиИтоги.ДополнитьТекстЗапросаПоВременнымТаблицам(Запрос);
	
	Запрос.УстановитьПараметр("НачПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода", КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Счета_01_01", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("01.01")));
	Запрос.УстановитьПараметр("Счета_01_05", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("01.05")));
	Запрос.УстановитьПараметр("Счета_08_03", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08.03")));
	Запрос.УстановитьПараметр("Счета_08_04", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08.04")));
	Запрос.УстановитьПараметр("Счета_08_04_5", БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("08.04.5")));
	Запрос.УстановитьПараметр("СубконтоОсновныеСредства", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	
	ВидыСобытийОС = Новый Массив;
	ВидыСобытийОС.Добавить(Перечисления.ВидыСобытийОС.Модернизация);
	ВидыСобытийОС.Добавить(Перечисления.ВидыСобытийОС.Достройка);
	ВидыСобытийОС.Добавить(Перечисления.ВидыСобытийОС.Дооборудование);
	Запрос.УстановитьПараметр("ВидыСобытийОС", ВидыСобытийОС);
	
	ОБ_01_05__08_04_5 = 0;
	ОБ_01_01__08_04 = 0;
	ОБ_01_01__08_03 = 0;
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		СтрокаТаблицыДополнительныхСтрок = ТаблицаДополнительныхСтрок.Добавить();
		СтрокаТаблицыДополнительныхСтрок.ОсновноеСредство = Выборка.ОсновноеСредство;
		
		ЗначениеПоказателя = Выборка.ЗначениеПоказателя;
		СтрокаТаблицыДополнительныхСтрок["Графа" + Графа + "_5260"] = ЗначениеПоказателя;
		
		Если БухгалтерскийУчетПовтИсп.СчетВИерархии(Выборка.СчетДт, Счет("01.05")) Тогда
			ОБ_01_05__08_04_5 = ОБ_01_05__08_04_5 + ЗначениеПоказателя;
		ИначеЕсли БухгалтерскийУчетПовтИсп.СчетВИерархии(Выборка.СчетКт, Счет("08.03")) Тогда
			ОБ_01_01__08_03 = ОБ_01_01__08_03 + ЗначениеПоказателя;
		ИначеЕсли БухгалтерскийУчетПовтИсп.СчетВИерархии(Выборка.СчетКт, Счет("08.04")) Тогда
			ОБ_01_01__08_04 = ОБ_01_01__08_04 + ЗначениеПоказателя;
		Иначе
			ИмяФункции = "ЗаполнениеБухгалтерскойОтчетностиПояснения.ЗаполнитьФормаОтчета2019Кв1_Пояснения2Строка5260";
			ВызватьИсключение СтрШаблон(НСтр("ru = 'Функция %1:
				|Непредусмотренный счет кредита в выборке данных для заполнения строки 5260 пояснений 2.'"), ИмяФункции);
		КонецЕсли;
		
	КонецЦикла;
	
	ЗначениеПоказателя = ОБ_01_01__08_04 + ОБ_01_01__08_03 + ОБ_01_05__08_04_5;
	
	ПредставлениеСобытийОС = "";
	Для Каждого ВидСобытияОС Из ВидыСобытийОС Цикл
		ПредставлениеСобытийОС = ПредставлениеСобытийОС + ", """ + Строка(ВидСобытияОС) + """";
	КонецЦикла;
	ПредставлениеСобытийОС = Сред(ПредставлениеСобытийОС, 3);
	
	ШаблонРасшифровки = "Оборот с кредита счета %1 в дебет счета %2 по документам ""Модернизация ОС"" с видом события с ОС "
	                  + ПредставлениеСобытийОС;
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """",
		"+", СтрШаблон(ШаблонРасшифровки, СчетСРеквизитами("08.03", СчетаСРеквизитами).Код, СчетСРеквизитами("01.01", СчетаСРеквизитами).Код),
		ОБ_01_01__08_03, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", СтрШаблон(ШаблонРасшифровки, СчетСРеквизитами("08.04", СчетаСРеквизитами).Код, СчетСРеквизитами("01.01", СчетаСРеквизитами).Код),
		ОБ_01_01__08_04, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", "!ОБ " + СчетСРеквизитами("01.05", СчетаСРеквизитами).Код + " " + СчетСРеквизитами("08.04.5", СчетаСРеквизитами).Код,
		ОБ_01_05__08_04_5, ИмяРаздела, НастройкиАнализаСчета(ПараметрыРасшифровки, Счет("01.05"), Счет("08.04.5")));
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
	
	КонтекстВыполнения.Удалить("ПараметрыРасшифровки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения2Строка5260ВТомЧисле(КонтекстВыполнения, ТаблицаЗначенийДопСтрок)
	
	Если ТаблицаЗначенийДопСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИмяГруппы = "ДопСтрока5260";
	МногострочнаяЧасть = Новый ТаблицаЗначений;
	МногострочнаяЧасть.Колонки.Добавить("П100100526001", Новый ОписаниеТипов("Строка"));
	
	МногострочнаяЧасть.Колонки.Добавить("П100100526003", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить("П100100526004", Новый ОписаниеТипов("Число"));
	
	Для Каждого ДополнительнаяСтрока Из ТаблицаЗначенийДопСтрок Цикл
		СтрокаМногострочнойЧасти = МногострочнаяЧасть.Добавить();
		СтрокаМногострочнойЧасти.П100100526001 = ДополнительнаяСтрока.ОсновноеСредство;
		
		СтрокаМногострочнойЧасти.П100100526003 = ДополнительнаяСтрока.Графа03_5260;
		СтрокаМногострочнойЧасти.П100100526004 = ДополнительнаяСтрока.Графа04_5260;
	КонецЦикла;
	
	Если НЕ КонтекстВыполнения.МногострочныеПоказатели.Свойство("Пояснения2") Тогда
		КонтекстВыполнения.МногострочныеПоказатели.Вставить("Пояснения2", Новый Структура);
	КонецЕсли;
	
	КонтекстВыполнения.МногострочныеПоказатели.Пояснения2.Вставить(ИмяГруппы, МногострочнаяЧасть);
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения2Строки528х(КонтекстВыполнения,
	Графа, ЗаголовокГрафы, НачалоПериода, КонецПериода)
	
	Организация = КонтекстВыполнения.Организация;
	СчетаСРеквизитами = КонтекстВыполнения.СчетаСРеквизитами;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	ИмяРаздела = "Пояснения2";
	
	ПараметрыРасшифровки = Новый Структура;
	ПараметрыРасшифровки.Вставить("Организация",   Организация);
	ПараметрыРасшифровки.Вставить("НачалоПериода", НачалоПериода);
	ПараметрыРасшифровки.Вставить("КонецПериода",  КонецПериода);
	
	КонтекстВыполнения.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
	
	НастройкиПолученияБухитогов = Новый Структура;
	НастройкиПолученияБухитогов.Вставить("Организация",   Организация);
	НастройкиПолученияБухитогов.Вставить("НачалоПериода", НачалоПериода);
	НастройкиПолученияБухитогов.Вставить("КонецПериода",  КонецПериода);
	
	СальдоИОборотыПоСчетам = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
	СКД_001 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("001", СальдоИОборотыПоСчетам);
	СКД_011 = ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД("011", СальдоИОборотыПоСчетам);
	
	РазделенноеСальдоСчетовУчетаОС_01_08 = ЗаполнениеБухгалтерскойОтчетностиИтоги.РазделенноеСальдоСчетовУчетаОС(
		Организация, КонецПериода, "01.08");
	РазделенноеСальдоСчетовУчетаОС = ЗаполнениеБухгалтерскойОтчетностиИтоги.РазделенноеСальдоСчетовУчетаОС(
		Организация, КонецПериода, "01, 08.01.2, 08.04.2, 02.01, 02.03, 02.04");
	
	НомерСтроки = "5281";
	НаименованиеСтроки = "Переданные в аренду основные средства, числящиеся за балансом";
	
	ЗначениеПоказателя = СКД_011;
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """",
		"+", "!СКД " + СчетСРеквизитами("011", СчетаСРеквизитами).Код,
		СКД_011, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "011"));
		
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
	
	НомерСтроки = "5283";
	НаименованиеСтроки = "Полученные в аренду основные средства, числящиеся за балансом";
	
	ЗначениеПоказателя = СКД_001;
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """",
		"+", "!СКД " + СчетСРеквизитами("001", СчетаСРеквизитами).Код, 
		СКД_001, ИмяРаздела, НастройкиОСВПоСчету(КонтекстВыполнения, "001"));
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
	
	НомерСтроки = "5284";
	НаименованиеСтроки = "Объекты недвижимости, принятые в эксплуатацию и фактически используемые, находящиеся в процессе государственной регистрации";
	
	СКД_01_08_Амортизируемые = ЗначениеИзТаблицы(РазделенноеСальдоСчетовУчетаОС_01_08, "Счет", Счет("01.08"), "СКД_Амортизируемые");
	
	ЗначениеПоказателя = СКД_01_08_Амортизируемые;
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """",
		"+", "Сальдо на конец периода по дебету счета " + СчетСРеквизитами("01.08", СчетаСРеквизитами).Код + " по амортизируемым основным средствам",
		СКД_01_08_Амортизируемые, ИмяРаздела);
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
	
	НомерСтроки = "5287";
	НаименованиеСтроки = "Балансовая стоимость неамортизируемых основных средств";
	
	СКД_01_Неамортизируемые      = ЗначениеИзТаблицы(РазделенноеСальдоСчетовУчетаОС, "Счет", Счет("01"), "СКД_Неамортизируемые");
	СКД_08_01_2_Немортизируемые  = ЗначениеИзТаблицы(РазделенноеСальдоСчетовУчетаОС, "Счет", Счет("08.01.2"), "СКД_Неамортизируемые");
	СКД_08_04_2_Неамортизируемые = ЗначениеИзТаблицы(РазделенноеСальдоСчетовУчетаОС, "Счет", Счет("08.04.2"), "СКД_Неамортизируемые");
	СКК_02_01_Немортизируемые    = ЗначениеИзТаблицы(РазделенноеСальдоСчетовУчетаОС, "Счет", Счет("02.01"), "СКК_Неамортизируемые");
	СКК_02_03_Немортизируемые    = ЗначениеИзТаблицы(РазделенноеСальдоСчетовУчетаОС, "Счет", Счет("02.03"), "СКК_Неамортизируемые");
	СКК_02_04_Немортизируемые    = ЗначениеИзТаблицы(РазделенноеСальдоСчетовУчетаОС, "Счет", Счет("02.04"), "СКК_Неамортизируемые");
	
	ЗначениеПоказателя = СКД_01_Неамортизируемые + СКД_08_01_2_Немортизируемые + СКД_08_04_2_Неамортизируемые
	                   - СКК_02_01_Немортизируемые - СКК_02_03_Немортизируемые - СКК_02_04_Немортизируемые;
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """",
		"+", "Сальдо на конец периода по дебету счета " + СчетСРеквизитами("01", СчетаСРеквизитами).Код + " по неамортизируемым основным средствам",
		СКД_01_Неамортизируемые, ИмяРаздела);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", "Сальдо на конец периода по дебету счета " + СчетСРеквизитами("08.01.2", СчетаСРеквизитами).Код + " по неамортизируемым основным средствам",
		СКД_08_01_2_Немортизируемые, ИмяРаздела);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", "Сальдо на конец периода по дебету счета " + СчетСРеквизитами("08.04.2", СчетаСРеквизитами).Код + " по неамортизируемым основным средствам",
		СКД_08_04_2_Неамортизируемые, ИмяРаздела);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"-", "Сальдо на конец периода по кредиту счета " + СчетСРеквизитами("02.01", СчетаСРеквизитами).Код + " по неамортизируемым основным средствам",
		-СКК_02_01_Немортизируемые, ИмяРаздела);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"-", "Сальдо на конец периода по кредиту счета " + СчетСРеквизитами("02.03", СчетаСРеквизитами).Код + " по неамортизируемым основным средствам",
		-СКК_02_03_Немортизируемые, ИмяРаздела);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"-", "Сальдо на конец периода по кредиту счета " + СчетСРеквизитами("02.04", СчетаСРеквизитами).Код + " по неамортизируемым основным средствам",
		-СКК_02_04_Немортизируемые, ИмяРаздела);
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
	
	КонтекстВыполнения.Удалить("ПараметрыРасшифровки");
	
КонецПроцедуры

#КонецОбласти

#Область ФормаОтчета2019Кв1_Пояснения4

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения4(КонтекстВыполнения) Экспорт
	
	НачалоПериодаОтчета = КонтекстВыполнения.НачалоПериодаОтчета;
	КонецПериодаОтчета = Новый МоментВремениСУточнениемПериода(
		КонтекстВыполнения.КонецПериодаОтчета, 0);
	
	НачалоПериодаПредыдущегоГода = ДобавитьМесяц(КонтекстВыполнения.НачалоПериодаОтчета, -12);
	КонецПериодаПредыдущегоГода = Новый МоментВремениСУточнениемПериода(
		КонецГода(НачалоПериодаПредыдущегоГода), БухгалтерскийУчет.ВерхняяГраницаУточненияПериода());
	
	ЗаполнитьФормаОтчета2019Кв1_Пояснения4ЗаПериод(КонтекстВыполнения, "Отчетный", НачалоПериодаОтчета, КонецПериодаОтчета);
	
	ЗаполнятьПредыдущиеПериоды = НЕ РасширенныйПериодОтчета(НачалоПериодаОтчета);
	Если ЗаполнятьПредыдущиеПериоды Тогда
		ЗаполнитьФормаОтчета2019Кв1_Пояснения4ЗаПериод(КонтекстВыполнения, "Предыдущий", НачалоПериодаПредыдущегоГода, КонецПериодаПредыдущегоГода);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения4ЗаПериод(КонтекстВыполнения,
	ТипПериода, НачалоПериода, КонецПериода)
	
	ИмяРаздела = "Пояснения4";
	
	Организация = КонтекстВыполнения.Организация;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	Если ТипПериода = "Отчетный" Тогда
		ЭтоОтчетныйПериод = Истина;
	ИначеЕсли ТипПериода = "Предыдущий" Тогда
		ЭтоОтчетныйПериод = Ложь;
	Иначе
		ВызватьИсключение "Неверное значение параметра ТипПериода в функции ЗаполнитьАвтоПояснения4ЗаПериод()";
	КонецЕсли;
	
	ЗаголовкиГраф = Новый Соответствие;
	ЗаголовкиГраф.Вставить("04", "На начало года - себестоимость");
	ЗаголовкиГраф.Вставить("05", "На начало года - величина резерва под снижение стоимости");
	ЗаголовкиГраф.Вставить("06", "Изменения за период - поступления и затраты");
	ЗаголовкиГраф.Вставить("07", "Изменения за период - выбыло - себестоимость");
	ЗаголовкиГраф.Вставить("08", "Изменения за период - выбыло - резерв под снижение стоимости");
	ЗаголовкиГраф.Вставить("09", "Изменения за период - убытков от снижения стоимости");
	ЗаголовкиГраф.Вставить("10", "Изменения за период - оборот запасов между их группами (видами)");
	ЗаголовкиГраф.Вставить("11", "На конец периода - себестоимость");
	ЗаголовкиГраф.Вставить("12", "На конец периода - величина резерва под снижение стоимости");
	
	НастройкиПолученияБухитогов = Новый Структура;
	НастройкиПолученияБухитогов.Вставить("Организация", КонтекстВыполнения.Организация);
	НастройкиПолученияБухитогов.Вставить("НачалоПериода", НачалоПериода);
	НастройкиПолученияБухитогов.Вставить("КонецПериода",  КонецПериода);
	
	СальдоИОборотыПоСчетам = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
	ОборотыМеждуСчетами    = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетами(НастройкиПолученияБухитогов);
	
	РазделятьАвансыПоВидамАктивов = РегламентированнаяОтчетность.АвансыРазделеныПоВидамАктивов(Организация, КонтекстВыполнения.КонецОтчетногоПериода);
	
	РассчитанныеПараметры = Новый Структура;
	РассчитанныеПараметры.Вставить("ЗаголовкиГраф", ЗаголовкиГраф);
	РассчитанныеПараметры.Вставить("СальдоИОборотыПоСчетам", СальдоИОборотыПоСчетам);
	РассчитанныеПараметры.Вставить("ОборотыМеждуСчетами", ОборотыМеждуСчетами);
	РассчитанныеПараметры.Вставить("РазделятьАвансыПоВидамАктивов", РазделятьАвансыПоВидамАктивов);
	РассчитанныеПараметры.Вставить("ДатаНачалаПериодаОтчета", НачалоПериода);
	РассчитанныеПараметры.Вставить("ДатаКонцаПериодаОтчета", КонецПериода);
	
	КонтекстВыполнения.Вставить("РассчитанныеПараметры", РассчитанныеПараметры);
	
	ОбщиеИтогиПоСчетам = Новый Структура;
	ОбщиеИтогиПоСчетам.Вставить("СальдоИОборотыПоСчетам", СальдоИОборотыПоСчетам);
	ОбщиеИтогиПоСчетам.Вставить("ОборотыМеждуСчетами", ОборотыМеждуСчетами);
	
	ПроцессорПоказателя = НовыйПроцессорПоказателя();
	ПроцессорПоказателя.СчетаСРеквизитами = КонтекстВыполнения.СчетаСРеквизитами;
	ПроцессорПоказателя.ПараметрыСчетов = ПараметрыСчетов_Пояснения4();
	ПроцессорПоказателя.РассчитанныеЗначения = БухгалтерскиеИтоги2011Кв4_Пояснения4(ОбщиеИтогиПоСчетам);
	ПроцессорПоказателя.ТаблицаРасшифровки = ТаблицаРасшифровки;
	ПроцессорПоказателя.Организация = КонтекстВыполнения.Организация;
	ПроцессорПоказателя.ИмяРаздела = ИмяРаздела;
	ПроцессорПоказателя.НачалоПериода = НачалоПериода;
	ПроцессорПоказателя.КонецПериода  = КонецПериода;
	
	ДополнитьБухгалтерскиеИтогиПоВидамАктивов(ПроцессорПоказателя, КонтекстВыполнения);
	
	КонтекстОтчета = Новый Структура;
	КонтекстОтчета.Вставить("Организация", Организация);
	КонтекстОтчета.Вставить("ТаблицаРасшифровки", ТаблицаРасшифровки);
	КонтекстОтчета.Вставить("РассчитанныеПоказатели", РассчитанныеПоказатели);
	КонтекстОтчета.Вставить("РассчитанныеПараметры", РассчитанныеПараметры);
	КонтекстОтчета.Вставить("ЗаголовкиГраф", ЗаголовкиГраф);
	
	КонтекстРаздела = Новый Структура;
	КонтекстРаздела.Вставить("КонтекстОтчета", КонтекстОтчета);
	КонтекстРаздела.Вставить("ИмяРаздела", "Пояснения4");
	
	КонтекстСтроки = Новый Структура;
	КонтекстСтроки.Вставить("КонтекстРаздела", КонтекстРаздела);
	КонтекстСтроки.Вставить("ДатаНачалаПериодаОтчета", НачалоПериода);
	КонтекстСтроки.Вставить("ДатаКонцаПериодаОтчета", КонецПериода);
	КонтекстСтроки.Вставить("ПроцессорПоказателя", ПроцессорПоказателя);
	
	КонтекстСтроки.Вставить("НомерСтроки", ?(ЭтоОтчетныйПериод, "5400", "5420"));
	ЗаполнитьФормаОтчета2019Кв1_Пояснения4ЗаПериодСтрока5400и5420(КонтекстСтроки);
	
	КонтекстСтроки.Вставить("НомерСтроки", ?(ЭтоОтчетныйПериод, "5401", "5421"));
	ЗаполнитьФормаОтчета2011Кв4_Пояснения4ЗаПериодСтрока5401и5421(КонтекстСтроки);
	
	КонтекстСтроки.Вставить("НомерСтроки", ?(ЭтоОтчетныйПериод, "5402", "5422"));
	ЗаполнитьФормаОтчета2011Кв4_Пояснения4ЗаПериодСтрока5402и5422(КонтекстСтроки);
	
	КонтекстСтроки.Вставить("НомерСтроки", ?(ЭтоОтчетныйПериод, "5403", "5423"));
	ЗаполнитьФормаОтчета2011Кв4_Пояснения4ЗаПериодСтрока5403и5423(КонтекстСтроки);
	
	КонтекстСтроки.Вставить("НомерСтроки", ?(ЭтоОтчетныйПериод, "5404", "5424"));
	ЗаполнитьФормаОтчета2011Кв4_Пояснения4ЗаПериодСтрока5404и5424(КонтекстСтроки);
	
	КонтекстСтроки.Вставить("НомерСтроки", ?(ЭтоОтчетныйПериод, "5405", "5425"));
	ЗаполнитьФормаОтчета2019Кв1_Пояснения4ЗаПериодСтрока5405и5425(КонтекстСтроки);
	
	КонтекстСтроки.Вставить("НомерСтроки", ?(ЭтоОтчетныйПериод, "5406", "5426"));
	ЗаполнитьФормаОтчета2011Кв4_Пояснения4ЗаПериодСтрока5406и5426(КонтекстСтроки);
	
	КонтекстВыполнения.Удалить("РассчитанныеПараметры");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения4ЗаПериодСтрока5400и5420(КонтекстСтроки)
	
	Организация = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.Организация;
	РассчитанныеПоказатели = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.РассчитанныеПоказатели;
	РассчитанныеПараметры = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.РассчитанныеПараметры;
	ЗаголовкиГраф = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.ЗаголовкиГраф;
	
	НомерСтроки   = КонтекстСтроки.НомерСтроки;
	НачалоПериода = КонтекстСтроки.ДатаНачалаПериодаОтчета;
	КонецПериода  = КонтекстСтроки.ДатаКонцаПериодаОтчета;
	
	ПроцессорПоказателя = КонтекстСтроки.ПроцессорПоказателя;
	Вычитаемый = Истина;
	
	РазделятьАвансыПоВидамАктивов = РассчитанныеПараметры.РазделятьАвансыПоВидамАктивов;
	
	СчетаСРеквизитами = ПроцессорПоказателя.СчетаСРеквизитами;
	
	ПрименяетсяФСБУ5 = (ПривестиКДате(КонецПериода) > ДатаОбязательногоПримененияФСБУ5());
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ПроверитьПрименяетсяОбесценениеФСБУ5(
		ПрименяетсяФСБУ5, Организация, ПривестиКДате(КонецПериода));
		
	ВыбытиеОбесценения = Неопределено;
	Если ПрименяетсяФСБУ5 Тогда
		ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.РассчитатьВыбытиеОбесцененияЗапасов(
			ВыбытиеОбесценения,
			Организация,
			ПривестиКДате(НачалоПериода),
			ПривестиКДате(КонецПериода),
			СчетСРеквизитами("14", СчетаСРеквизитами).Ссылка);
	КонецЕсли;
	
	НаименованиеСтроки = "Запасы - всего";
	
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.Запасы;
	ВидАктиваДляАвансов = Перечисления.ВидыАктивовДляАвансов.Запасы;
	
#Область Графа04
	
	Графа = "04";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 10");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 15");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 16");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 20");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- СНД 23.05");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 28");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 29");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 41");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 43");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 44");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 45");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД_ПоВидуАктива 97", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "- СНК 16");
	УчестьСоставляющую(ПроцессорПоказателя, "- СНК 42");
	Если РазделятьАвансыПоВидамАктивов Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СНД_ПоВидуАктива 60.02", ВидАктиваДляАвансов);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СНД_ПоВидуАктива 60.22", ВидАктиваДляАвансов);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СНД_ПоВидуАктива 60.32", ВидАктиваДляАвансов);
	КонецЕсли;
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа05
	
	Графа = "05";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНК 14");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
#КонецОбласти
	
#Область Графа06
	
	Графа = "06";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 10");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 10, 10");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 15");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 10, 15");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 21");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 28");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 21");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 21, 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 21, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 08, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКД 23.05");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 23.05");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 25, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 26, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 44, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 91, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 23, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 23, 28");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 28");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 21");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 29");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 29, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 29, 28");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 29, 29");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 41");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 41, 41");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 41, 42");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 41, 15");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 43");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 43, 43");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 44");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 45");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО_ПоВидуАктива 97", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО_ПоВидуАктива 76.01.2", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО_ПоВидуАктива 76.01.9", ВидАктиваРБП);
	Если РазделятьАвансыПоВидамАктивов Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ ДО_ПоВидуАктива 60.02", ВидАктиваДляАвансов);
		УчестьСоставляющую(ПроцессорПоказателя, "+ ДО_ПоВидуАктива 60.22", ВидАктиваДляАвансов);
		УчестьСоставляющую(ПроцессорПоказателя, "+ ДО_ПоВидуАктива 60.32", ВидАктиваДляАвансов);
	КонецЕсли;
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа07
	
	Графа = "07";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 10");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 10, 10");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 16");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 15, 16");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 21, 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 20");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 21");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 21");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 23, 21");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 08, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 25, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 26, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 44, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 91, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 21, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 23, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 29, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 28");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 28");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 23, 28");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 28");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 29");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 29, 29");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 41");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 41, 41");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 90, 42");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 43");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 43, 43");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 44");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 45");
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО_ПоВидуАктива 97", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО_ПоВидуАктива 76.01.2", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО_ПоВидуАктива 76.01.9", ВидАктиваРБП);
	Если РазделятьАвансыПоВидамАктивов Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ КО_ПоВидуАктива 60.02", ВидАктиваДляАвансов);
		УчестьСоставляющую(ПроцессорПоказателя, "+ КО_ПоВидуАктива 60.22", ВидАктиваДляАвансов);
		УчестьСоставляющую(ПроцессорПоказателя, "+ КО_ПоВидуАктива 60.32", ВидАктиваДляАвансов);
	КонецЕсли;
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
#КонецОбласти
	
#Область Графа08
	
	Графа = "08";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	Если НЕ ПрименяетсяФСБУ5 Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 14, 91.01");
		
	Иначе
		Если ВыбытиеОбесценения = Неопределено Тогда
			УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 14");
			УчестьСоставляющую(ПроцессорПоказателя, "- КО 14");
			УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 14, 90");
			УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 14, 91");
			
		Иначе
			УчестьСоставляющуюПоЗначениюБезРасшифровки(ПроцессорПоказателя,
				"+", НСтр("ru = 'См. Справку-расчет ""Обесценение запасов""'"),
				ВыбытиеОбесценения);
			
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа09
	
	Графа = "09";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	Если НЕ ПрименяетсяФСБУ5 Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 91.02, 14");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
		
	Иначе
		Если ВыбытиеОбесценения = Неопределено Тогда
			УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 14, 90");
			УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 14, 91");
			
		Иначе
			УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 14");
			УчестьСоставляющую(ПроцессорПоказателя, "- КО 14");
			
			УчестьСоставляющуюПоЗначениюБезРасшифровки(ПроцессорПоказателя,
				"-", НСтр("ru = 'Выбытие резерва под снижение стоимости, см. Справку-расчет ""Обесценение запасов""'"),
				-ВыбытиеОбесценения);
			
		КонецЕсли;
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
#КонецОбласти
	
#Область Графа11
	
	Графа = "11";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 10");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 15");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 16");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 20");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКД 23.05");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 28");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 29");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 41");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 43");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 44");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 45");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 97", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 16");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 42");
	Если РазделятьАвансыПоВидамАктивов Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 60.02", ВидАктиваДляАвансов);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 60.22", ВидАктиваДляАвансов);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 60.32", ВидАктиваДляАвансов);
	КонецЕсли;
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа12
	
	Графа = "12";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 14");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
#КонецОбласти
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения4ЗаПериодСтрока5405и5425(КонтекстСтроки)
	
	Организация = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.Организация;
	РассчитанныеПоказатели = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.РассчитанныеПоказатели;
	РассчитанныеПараметры = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.РассчитанныеПараметры;
	ЗаголовкиГраф = КонтекстСтроки.КонтекстРаздела.КонтекстОтчета.ЗаголовкиГраф;
	
	НомерСтроки   = КонтекстСтроки.НомерСтроки;
	НачалоПериода = КонтекстСтроки.ДатаНачалаПериодаОтчета;
	КонецПериода  = КонтекстСтроки.ДатаКонцаПериодаОтчета;
	
	ПроцессорПоказателя = КонтекстСтроки.ПроцессорПоказателя;
	Вычитаемый = Истина;
	
	СчетаСРеквизитами = ПроцессорПоказателя.СчетаСРеквизитами;
	
	ПрименяетсяФСБУ5 = (ПривестиКДате(КонецПериода) > ДатаОбязательногоПримененияФСБУ5());
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ПроверитьПрименяетсяОбесценениеФСБУ5(
		ПрименяетсяФСБУ5, Организация, ПривестиКДате(КонецПериода));
		
	ВыбытиеОбесценения = Неопределено;
	Если ПрименяетсяФСБУ5 Тогда
		ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.РассчитатьВыбытиеОбесцененияЗапасов(
			ВыбытиеОбесценения,
			Организация,
			ПривестиКДате(НачалоПериода),
			ПривестиКДате(КонецПериода),
			СчетСРеквизитами("14.04", СчетаСРеквизитами).Ссылка);
	КонецЕсли;
	
	ЗаголовкиГраф = РассчитанныеПараметры.ЗаголовкиГраф;
	
	НаименованиеСтроки = "Затраты в незавершенном производстве";
	
#Область Графа04
	
	Графа = "04";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 20");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- СНД 23.05");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 28");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 29");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа05
	
	Графа = "05";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНК 14.04");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
#КонецОбласти
	
#Область Графа06
	
	Графа = "06";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 21");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 28");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 21");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 21, 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 21, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 08, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКД 23.05");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СНД 23.05");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 25, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 26, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 44, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 91, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 23, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 23, 28");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 28");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 21");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 29");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 29, 29");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 29, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 29, 28");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа07
	
	Графа = "07";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 21, 20");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 20");
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 21");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 21");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 23, 21");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 08, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 25, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 26, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 44, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 91, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 21");
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 23, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 21, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 29, 23");
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 28");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 20, 28");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 23, 28");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 28, 28");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 29, 28");
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ КО 29");
	УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 29, 29");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
#КонецОбласти
	
#Область Графа08
	
	Графа = "08";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	Если НЕ ПрименяетсяФСБУ5 Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 14.04, 91.01");
		
	Иначе
		Если ВыбытиеОбесценения = Неопределено Тогда
			УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 14.04");
			УчестьСоставляющую(ПроцессорПоказателя, "- КО 14.04");
			УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 14.04, 90");
			УчестьСоставляющую(ПроцессорПоказателя, "- ОБ 14.04, 91");
			
		Иначе
			УчестьСоставляющуюПоЗначениюБезРасшифровки(ПроцессорПоказателя,
				"+", НСтр("ru = 'См. Справку-расчет ""Обесценение запасов""'"),
				ВыбытиеОбесценения);
			
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа09
	
	Графа = "09";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	Если НЕ ПрименяетсяФСБУ5 Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 91.02, 14.04");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
		
	Иначе
		Если ВыбытиеОбесценения = Неопределено Тогда
			УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 14.04, 90");
			УчестьСоставляющую(ПроцессорПоказателя, "+ ОБ 14.04, 91");
			
		Иначе
			УчестьСоставляющую(ПроцессорПоказателя, "+ ДО 14.04");
			УчестьСоставляющую(ПроцессорПоказателя, "- КО 14.04");
			
			УчестьСоставляющуюПоЗначениюБезРасшифровки(ПроцессорПоказателя,
				"-", НСтр("ru = 'Выбытие резерва под снижение стоимости, см. Справку-расчет ""Обесценение запасов""'"),
				-ВыбытиеОбесценения);
			
		КонецЕсли;
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
#КонецОбласти
	
#Область Графа11
	
	Графа = "11";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 20");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 23");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКД 23.05");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 28");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 29");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
#КонецОбласти
	
#Область Графа12
	
	Графа = "12";
	ЗаголовокГрафы = ЗаголовкиГраф[Графа];
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 14.04");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
#КонецОбласти
	
КонецПроцедуры

#КонецОбласти

#Область ФормаОтчета2019Кв1_Пояснения5

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения5(КонтекстВыполнения) Экспорт
	
	// Вспомогательные значения периодов.
	НачалоПериодаОтчета = КонтекстВыполнения.НачалоПериодаОтчета;
	КонецПериодаОтчета  = КонтекстВыполнения.КонецПериодаОтчета;
	НачалоПредыдущегоГода = ДобавитьМесяц(НачалоПериодаОтчета, -12);
	КонецПредыдущегоГода  = КонецГода(НачалоПредыдущегоГода);
	
	ЗаполнитьФормаОтчета2019Кв1_Пояснения5ЗаПериод(КонтекстВыполнения, "Отчетный", НачалоПериодаОтчета, КонецПериодаОтчета);
	
	ЗаполнятьПредыдущиеПериоды = НЕ РасширенныйПериодОтчета(НачалоПериодаОтчета);
	Если ЗаполнятьПредыдущиеПериоды Тогда
		ЗаполнитьФормаОтчета2019Кв1_Пояснения5ЗаПериод(КонтекстВыполнения, "Предыдущий", НачалоПредыдущегоГода, КонецПредыдущегоГода);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения5ЗаПериод(КонтекстВыполнения, ТипПериода, НачалоПериодаОтчета, КонецПериодаОтчета)
	
	КонтекстРаздела = Новый Структура;
	
	ЗаголовкиГраф51 = Новый Соответствие;
	ЗаголовкиГраф51.Вставить("04", "На начало года - учтенная по условиям договора");
	ЗаголовкиГраф51.Вставить("05", "На начало года - величина резерва по сомнительным долгам");
	ЗаголовкиГраф51.Вставить("06", "Изменения за период - поступление - в результате хозяйственных операций (сумма долга по сделке, операции)");
	ЗаголовкиГраф51.Вставить("07", "Изменения за период - поступление - причитающиеся проценты, штрафы и иные начисления");
	ЗаголовкиГраф51.Вставить("08", "Изменения за период - выбыло - погашение");
	ЗаголовкиГраф51.Вставить("09", "Изменения за период - выбыло - списание на финансовый результат");
	ЗаголовкиГраф51.Вставить("10", "Изменения за период - выбыло - восстановление резерва");
	ЗаголовкиГраф51.Вставить("11", "Изменения за период - перевод из долго- в краткосрочную задолженность");
	ЗаголовкиГраф51.Вставить("12", "На конец периода - учтенная по условиям договора");
	ЗаголовкиГраф51.Вставить("13", "На конец периода - величина резерва по сомнительным долгам");
	ЗаголовкиГраф51.Вставить("21", "Изменения за период - перевод из дебиторской в кредиторскую задолженность");
	ЗаголовкиГраф51.Вставить("22", "Изменения за период - перевод из кредиторской в дебиторскую задолженность");
	
	ЗаголовкиГраф53 = Новый Соответствие;
	ЗаголовкиГраф53.Вставить("04", "Остаток на начало года");
	ЗаголовкиГраф53.Вставить("05", "Изменения за период - поступление - в результате хозяйственных операций (сумма долга по сделке, операции)");
	ЗаголовкиГраф53.Вставить("06", "Изменения за период - поступление - причитающиеся проценты, штрафы и иные начисления");
	ЗаголовкиГраф53.Вставить("07", "Изменения за период - выбыло - погашение");
	ЗаголовкиГраф53.Вставить("08", "Изменения за период - выбыло - списание на финансовый результат");
	ЗаголовкиГраф53.Вставить("09", "Изменения за период - перевод из долго- в краткосрочную задолженность");
	ЗаголовкиГраф53.Вставить("10", "Остаток на конец периода");
	
	КонтекстРаздела.Вставить("ДатаНачалаПериодаОтчета", НачалоПериодаОтчета);
	КонтекстРаздела.Вставить("ДатаКонцаПериодаОтчета", КонецПериодаОтчета);
	КонтекстРаздела.Вставить("ЗаголовкиГраф51", ЗаголовкиГраф51);
	КонтекстРаздела.Вставить("ЗаголовкиГраф53", ЗаголовкиГраф53);
	
	РазделятьАвансыПоВидамАктивов = РегламентированнаяОтчетность.АвансыРазделеныПоВидамАктивов(
		КонтекстВыполнения.Организация, КонтекстВыполнения.КонецОтчетногоПериода);
	КонтекстРаздела.Вставить("РазделятьАвансыПоВидамАктивов", РазделятьАвансыПоВидамАктивов);
	
	ПрименяетсяФСБУ25 = ЗаполнениеБухгалтерскойОтчетности.ПрименяетсяФСБУ25(
		КонтекстВыполнения.Организация, ПривестиКДате(КонецПериодаОтчета));
	КонтекстРаздела.Вставить("ПрименяетсяФСБУ25", ПрименяетсяФСБУ25);
	
	КонтекстВыполнения.Вставить("КонтекстРаздела", КонтекстРаздела);
	
	Если ТипПериода = "Отчетный" Тогда
		ЭтоОтчетныйПериод = Истина;
	ИначеЕсли ТипПериода = "Предыдущий" Тогда
		ЭтоОтчетныйПериод = Ложь;
	Иначе
		ВызватьИсключение "Неверное значение параметра ТипПериода в функции ЗаполнитьАвтоПояснения5ЗаПериод()";
	КонецЕсли;
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5502", "5522");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5502и5522(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5503", "5523");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5503и5523(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5504", "5524");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5504и5524(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5510", "5530");
	ЗаполнитьФормаОтчета2019Кв1_Пояснения5Строки5510и5530(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5511", "5531");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5511и5531(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5512", "5532");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5512и5532(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5513", "5533");
	ЗаполнитьФормаОтчета2019Кв1_Пояснения5Строки5513и5533(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5552", "5572");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5552и5572(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5553", "5573");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5553и5573(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5554", "5574");
	ЗаполнитьФормаОтчета2019Кв1_Пояснения5Строки5554и5574(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5560", "5580");
	ЗаполнитьФормаОтчета2019Кв1_Пояснения5Строки5560и5580(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5561", "5581");
	ЗаполнитьФормаОтчета2019Кв1_Пояснения5Строки5561и5581(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5562", "5582");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5562и5582(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5563", "5583");
	ЗаполнитьФормаОтчета2019Кв1_Пояснения5Строки5563и5583(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5564", "5584");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5564и5584(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5565", "5585");
	ЗаполнитьФормаОтчета2011Кв4_Пояснения5Строки5565и5585(КонтекстВыполнения, НомерСтроки);
	
	НомерСтроки = ?(ЭтоОтчетныйПериод, "5566", "5586");
	ЗаполнитьФормаОтчета2019Кв1_Пояснения5Строки5566и5586(КонтекстВыполнения, НомерСтроки);
	
	КонтекстВыполнения.Удалить("КонтекстРаздела");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения5Строки5510и5530(КонтекстВыполнения, НомерСтроки)
	
	УчитыватьСчетаИП = НЕ РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(КонтекстВыполнения.Организация);
	С2023 = (ПривестиКДате(КонтекстВыполнения.КонтекстРаздела.ДатаКонцаПериодаОтчета) >= '2023-01-01');
	
	КонтекстСтроки = Новый Структура;
	
	КонтекстСтроки.Вставить("НомерСтроки", НомерСтроки);
	КонтекстСтроки.Вставить("НаименованиеСтроки", "Краткосрочная дебиторская задолженность - всего");
	
	СчетаРасчетов = "46, 62.01, 62.21, 62.31, 62.03, 76.06, 76.26, 76.36";
	СчетаАвансов  = "60.02, 60.22, 60.32";
	СчетаНДСАвансов = "76.ВА";
	СчетаПрочие   = "68.01.1, 68.01.2, 68.02, 68.03, 68.04.1, 68.06, 68.07, 68.08, 68.09, 68.10,
	                |68.11, 68.12, 68.13, 68.15, 68.16, 68.34, 68.52, 68.22, 68.90,
	                |69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7, 69.03.1, 69.03.2, 69.04, 69.05.1, 69.05.2,
	                |69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.06.6, 69.09, 69.11, 69.12, 69.13.1, 69.13.2, 70, 71.01, 71.21, 73.01, 73.02, 73.03,
	                |75.01, 76.01.1, 97.01, 97.02, 97.21, 76.01.2, 76.01.9, 76.21, 76.02, 76.22, 76.32, 76.03, 76.05, 76.25, 76.35, 76.09, 76.29, 76.39, 76.10, 76.49,
	                |76.41, 76.НА, 76.ОТ, 76.07.2, 76.27.2, 76.37.2, 76.07.9, 76.37.9, 76.13, 76.14, 76.17";
	СчетаРезервов = "63";
	
	СчетаПеревода = "76.01.1, 76.06, 76.21, 76.26, 76.36, 68.01.1, 68.01.2, 68.02, 68.03, 68.04.1, 68.06, 68.07, 68.08, 68.09, 68.10,
	                |68.11, 68.12, 68.13, 68.15, 68.16, 68.34, 68.52,
	                |69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7, 69.03.1, 69.03.2, 69.04, 69.05.1, 69.05.2,
	                |69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.06.6, 69.09, 69.11, 69.12, 69.13.1, 69.13.2, 70, 71.01, 71.21, 73.03, 76.03, 76.05, 76.25, 76.35,
	                |76.09, 76.29, 76.39, 76.10, 76.49, 76.41, 76.НА, 76.07.2, 76.27.2, 76.37.2";
	
	Если УчитыватьСчетаИП Тогда
		СчетаПрочие = СтрЗаменить(СчетаПрочие, "68.01.2", "68.01.2, 68.21.1, 68.21.2");
		СчетаПрочие = СтрЗаменить(СчетаПрочие, "68.13", "68.13, 68.14");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, "68.01.2", "68.01.2, 68.21.1, 68.21.2");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, "68.13", "68.13, 68.14");
	КонецЕсли;
	
	ПрименяетсяФСБУ25 = ЗаполнениеБухгалтерскойОтчетности.ПрименяетсяФСБУ25(КонтекстВыполнения.Организация,
		ПривестиКДате(КонтекстВыполнения.КонтекстРаздела.ДатаКонцаПериодаОтчета));
	Если ПрименяетсяФСБУ25 Тогда
		СчетаПрочие = СтрЗаменить(СчетаПрочие, ", 76.07.9", "");
		СчетаПрочие = СтрЗаменить(СчетаПрочие, ", 76.37.9", "");
	КонецЕсли;
	
	// Исключение счета 69.09 за периоды, предшествующие 2023 году.
	Если НЕ С2023 Тогда
		СчетаПрочие = СтрЗаменить(СчетаПрочие, ", 69.09", "");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, ", 69.09", "");
	КонецЕсли;
	
	// Исключение счета 69.06.6 для всех кроме ИП и за периоды, предшествующие 2023 году.
	Если НЕ (УчитыватьСчетаИП И С2023) Тогда
		СчетаПрочие = СтрЗаменить(СчетаПрочие, ", 69.06.6", "");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, ", 69.06.6", "");
	КонецЕсли;
	
	СчетаГрафы04 = СчетаРасчетов + ", " + СчетаАвансов + ", " + СчетаПрочие;
	СчетаГрафы05 = СчетаРезервов;
	СчетаГрафы06 = СчетаРасчетов + ", " + СчетаАвансов + ", " + СчетаПрочие;
	СчетаГрафы07 = "62.01, 62.21, 62.31, 62.03, 76.06, 76.26, 76.36, 60.02, 60.22, 60.32, 73.01, 73.02, 73.03,
	               |76.01.1, 97.01, 97.02, 97.21, 76.01.2, 76.01.9, 76.21, 76.02, 76.22, 76.32, 76.03, 76.05, 76.25, 76.35, 76.09, 76.29, 76.39, 76.13, 76.14";
	СчетаГрафы08 = СчетаРасчетов + ", " + СчетаАвансов + ", " + СчетаПрочие;
	СчетаГрафы09 = "62.01, 62.21, 62.31, 62.03, 76.06, 76.26, 76.36, 60.02, 60.22, 60.32, 71.01, 71.21, 73.01, 73.02, 73.03,
	               |76.02, 76.22, 76.32, 76.03, 76.05, 76.25, 76.35, 76.09, 76.29, 76.39, 76.10, 76.07.2, 76.27.2, 76.37.2, 76.13, 76.14, 76.17";
	СчетаГрафы10 = СчетаРезервов;
	СчетаГрафы12 = СчетаРасчетов + ", " + СчетаАвансов + ", " + СчетаПрочие;
	СчетаГрафы13 = СчетаРезервов;
	
	СчетаГрафы21 = СчетаПеревода;
	СчетаГрафы22 = СчетаПеревода;
	
	ПолныйСписокСчетов =  СчетаРасчетов + ", " + СчетаАвансов + ", " + СчетаНДСАвансов + ", " + СчетаПрочие + ", " + СчетаРезервов;
	
	КонтекстСтроки.Вставить("СчетаГрафы04", СчетаГрафы04);
	КонтекстСтроки.Вставить("СчетаГрафы05", СчетаГрафы05);
	КонтекстСтроки.Вставить("СчетаГрафы06", СчетаГрафы06);
	КонтекстСтроки.Вставить("СчетаГрафы07", СчетаГрафы07);
	КонтекстСтроки.Вставить("СчетаГрафы08", СчетаГрафы08);
	КонтекстСтроки.Вставить("СчетаГрафы09", СчетаГрафы09);
	КонтекстСтроки.Вставить("СчетаГрафы10", СчетаГрафы10);
	КонтекстСтроки.Вставить("СчетаГрафы12", СчетаГрафы12);
	КонтекстСтроки.Вставить("СчетаГрафы13", СчетаГрафы13);
	
	КонтекстСтроки.Вставить("СчетаГрафы21", СчетаГрафы21);
	КонтекстСтроки.Вставить("СчетаГрафы22", СчетаГрафы22);
	
	КонтекстСтроки.Вставить("СчетаНДСАвансов", СчетаНДСАвансов);
	
	КонтекстСтроки.Вставить("ПолныйСписокСчетов", ПолныйСписокСчетов);
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьБО2011Кв4Пояснения5_Строки5510и5530(КонтекстСтроки);
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения51_Краткосрочная(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения5Строки5513и5533(КонтекстВыполнения, НомерСтроки)
	
	УчитыватьСчетаИП = НЕ РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(КонтекстВыполнения.Организация);
	С2023 = (ПривестиКДате(КонтекстВыполнения.КонтекстРаздела.ДатаКонцаПериодаОтчета) >= '2023-01-01');
	
	КонтекстСтроки = Новый Структура;
	
	КонтекстСтроки.Вставить("НомерСтроки", НомерСтроки);
	КонтекстСтроки.Вставить("НаименованиеСтроки", "Прочая");
	
	СчетаПрочие   = "68.01.1, 68.01.2, 68.02, 68.03, 68.04.1, 68.06, 68.07, 68.08, 68.09, 68.10,
	                |68.11, 68.12, 68.13, 68.15, 68.16, 68.34, 68.52, 68.22, 68.90,
	                |69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7, 69.03.1, 69.03.2, 69.04, 69.05.1, 69.05.2,
	                |69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.06.6, 69.09, 69.11, 69.12, 69.13.1, 69.13.2, 70, 71.01, 71.21, 73.01, 73.02, 73.03,
	                |75.01, 76.01.1, 97.01, 97.02, 97.21, 76.01.2, 76.01.9, 76.21, 76.02, 76.22, 76.32, 76.03, 76.05, 76.25, 76.35, 76.09, 76.29, 76.39, 76.10, 76.49,
	                |76.41, 76.НА, 76.ОТ, 76.07.2, 76.27.2, 76.37.2, 76.07.9, 76.37.9, 76.13, 76.14, 76.17";
	СчетаРезервов = "63";
	
	СчетаПеревода = "68.01.1, 68.01.2, 68.02, 68.03, 68.04.1, 68.06, 68.07, 68.08, 68.09, 68.10,
	                |68.11, 68.12, 68.13, 68.15, 68.16, 68.34, 68.52,
	                |69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7, 69.03.1, 69.03.2, 69.04, 69.05.1, 69.05.2,
	                |69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.06.6, 69.09, 69.11, 69.12, 69.13.1, 69.13.2,
	                |70, 71.01, 71.21, 73.03, 76.01.1, 76.03, 76.21, 76.05, 76.25, 76.35,
	                |76.09, 76.29, 76.39, 76.10, 76.49, 76.41, 76.НА, 76.07.2, 76.27.2, 76.37.2";
	
	Если УчитыватьСчетаИП Тогда
		СчетаПрочие = СтрЗаменить(СчетаПрочие, "68.01.2", "68.01.2, 68.21.1, 68.21.2");
		СчетаПрочие = СтрЗаменить(СчетаПрочие, "68.13", "68.13, 68.14");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, "68.01.2", "68.01.2, 68.21.1, 68.21.2");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, "68.13", "68.13, 68.14");
	КонецЕсли;
	
	ПрименяетсяФСБУ25 = ЗаполнениеБухгалтерскойОтчетности.ПрименяетсяФСБУ25(КонтекстВыполнения.Организация,
		ПривестиКДате(КонтекстВыполнения.КонтекстРаздела.ДатаКонцаПериодаОтчета));
	Если ПрименяетсяФСБУ25 Тогда
		СчетаПрочие = СтрЗаменить(СчетаПрочие, ", 76.07.9", "");
		СчетаПрочие = СтрЗаменить(СчетаПрочие, ", 76.37.9", "");
	КонецЕсли;
	
	// Исключение счета 69.09 за периоды, предшествующие 2023 году.
	Если НЕ С2023 Тогда
		СчетаПрочие = СтрЗаменить(СчетаПрочие, ", 69.09", "");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, ", 69.09", "");
	КонецЕсли;
	
	// Исключение счета 69.06.6 для всех кроме ИП и за периоды, предшествующие 2023 году.
	Если НЕ (УчитыватьСчетаИП И С2023) Тогда
		СчетаПрочие = СтрЗаменить(СчетаПрочие, ", 69.06.6", "");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, ", 69.06.6", "");
	КонецЕсли;
	
	СчетаГрафы04 = СчетаПрочие;
	СчетаГрафы05 = СчетаРезервов;
	СчетаГрафы06 = СчетаПрочие;
	СчетаГрафы07 = "73.01, 73.02, 73.03, 76.01.1, 97.01, 97.02, 97.21, 76.01.2, 76.01.9, 76.21, 76.02, 76.22, 76.32, 76.03, 76.05, 76.25, 76.35,
	               |76.09, 76.29, 76.39, 76.13, 76.14";
	СчетаГрафы08 = СчетаПрочие;
	СчетаГрафы09 = "71.01, 71.21, 73.01, 73.02, 73.03, 76.02, 76.22, 76.32, 76.03, 76.05, 76.25, 76.35,
	               |76.09, 76.29, 76.39, 76.10, 76.07.2, 76.27.2, 76.37.2, 76.13, 76.14, 76.17";
	СчетаГрафы10 = СчетаРезервов;
	СчетаГрафы12 = СчетаПрочие;
	СчетаГрафы13 = СчетаРезервов;
	
	СчетаГрафы21 = СчетаПеревода;
	СчетаГрафы22 = СчетаПеревода;
	
	ПолныйСписокСчетов = СчетаПрочие + ", " + СчетаРезервов;
	
	КонтекстСтроки.Вставить("СчетаГрафы04", СчетаГрафы04);
	КонтекстСтроки.Вставить("СчетаГрафы05", СчетаГрафы05);
	КонтекстСтроки.Вставить("СчетаГрафы06", СчетаГрафы06);
	КонтекстСтроки.Вставить("СчетаГрафы07", СчетаГрафы07);
	КонтекстСтроки.Вставить("СчетаГрафы08", СчетаГрафы08);
	КонтекстСтроки.Вставить("СчетаГрафы09", СчетаГрафы09);
	КонтекстСтроки.Вставить("СчетаГрафы10", СчетаГрафы10);
	КонтекстСтроки.Вставить("СчетаГрафы12", СчетаГрафы12);
	КонтекстСтроки.Вставить("СчетаГрафы13", СчетаГрафы13);
	
	КонтекстСтроки.Вставить("СчетаГрафы21", СчетаГрафы21);
	КонтекстСтроки.Вставить("СчетаГрафы22", СчетаГрафы22);
	
	КонтекстСтроки.Вставить("ПолныйСписокСчетов", ПолныйСписокСчетов);
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьБО2011Кв4Пояснения5_Строки5513и5533(КонтекстСтроки);
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения51_Краткосрочная(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения5Строки5554и5574(КонтекстВыполнения, НомерСтроки)
	
	КонтекстСтроки = Новый Структура;
	
	КонтекстСтроки.Вставить("НомерСтроки", НомерСтроки);
	КонтекстСтроки.Вставить("НаименованиеСтроки", "Прочая");
	
	СчетаПрочие = "60.01, 60.21, 60.31, 60.03, 62.02, 62.22, 62.32, 62.ОТ.1, 62.ОТ.2, 62.ОТ.3,
	              |76.05, 76.25, 76.35, 76.06, 76.26, 76.36, 76.09, 76.29, 76.39,
	              |76.07.2, 76.27.2, 76.37.2, 76.07.1, 76.27.1, 76.37.1, 76.08, 76.28, 76.38";
	СчетаПроцентовНДСЛизинга = "76.07.5, 76.27.5, 76.37.5, 76.07.9, 76.27.9, 76.37.9";
	СчетаНДСАвансов = "76.АВ";
	
	СчетаПеревода = "76.05, 76.25, 76.35, 76.06, 76.26, 76.36, 76.09, 76.29, 76.39, 76.07.2, 76.27.2, 76.37.2";
	
	ПрименяетсяФСБУ25 = ЗаполнениеБухгалтерскойОтчетности.ПрименяетсяФСБУ25(КонтекстВыполнения.Организация,
		ПривестиКДате(КонтекстВыполнения.КонтекстРаздела.ДатаКонцаПериодаОтчета));
	Если НЕ ПрименяетсяФСБУ25 Тогда
		СчетаПроцентовНДСЛизинга = СтрЗаменить(СчетаПроцентовНДСЛизинга, ", 76.07.9", "");
		СчетаПроцентовНДСЛизинга = СтрЗаменить(СчетаПроцентовНДСЛизинга, ", 76.27.9", "");
		СчетаПроцентовНДСЛизинга = СтрЗаменить(СчетаПроцентовНДСЛизинга, ", 76.37.9", "");
	КонецЕсли;
	
	СчетаГрафы04 = СчетаПрочие + ", " + СчетаПроцентовНДСЛизинга;
	СчетаГрафы05 = СчетаПрочие + ", " + СчетаПроцентовНДСЛизинга;
	СчетаГрафы07 = СчетаПрочие + ", " + СчетаПроцентовНДСЛизинга;
	СчетаГрафы08 = СчетаПрочие;
	СчетаГрафы10 = СчетаПрочие + ", " + СчетаПроцентовНДСЛизинга;
	
	СчетаГрафы21 = СчетаПеревода;
	СчетаГрафы22 = СчетаПеревода;
	
	ПолныйСписокСчетов = СчетаПрочие + ", " + СчетаНДСАвансов + ", " + СчетаПроцентовНДСЛизинга;
	
	КонтекстСтроки.Вставить("СчетаГрафы04", СчетаГрафы04);
	КонтекстСтроки.Вставить("СчетаГрафы05", СчетаГрафы05);
	КонтекстСтроки.Вставить("СчетаГрафы07", СчетаГрафы07);
	КонтекстСтроки.Вставить("СчетаГрафы08", СчетаГрафы08);
	КонтекстСтроки.Вставить("СчетаГрафы10", СчетаГрафы10);
	
	КонтекстСтроки.Вставить("СчетаГрафы21", СчетаГрафы21);
	КонтекстСтроки.Вставить("СчетаГрафы22", СчетаГрафы22);
	
 	КонтекстСтроки.Вставить("СчетаНДСАвансов", СчетаНДСАвансов);
	
	КонтекстСтроки.Вставить("ПолныйСписокСчетов", ПолныйСписокСчетов);
	
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения53_Долгосрочная(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения5Строки5560и5580(КонтекстВыполнения, НомерСтроки)
	
	УчитыватьСчетаИП = НЕ РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(КонтекстВыполнения.Организация);
	С2023 = (ПривестиКДате(КонтекстВыполнения.КонтекстРаздела.ДатаКонцаПериодаОтчета) >= '2023-01-01');
	
	КонтекстСтроки = Новый Структура;
	
	КонтекстСтроки.Вставить("НомерСтроки", НомерСтроки);
	КонтекстСтроки.Вставить("НаименованиеСтроки", "Краткосрочная кредиторская задолженность - всего");
	
	СчетаРасчетов = "60.01, 60.21, 60.31, 60.03, 76.16, 76.05, 76.25, 76.35, 76.06, 76.26, 76.36";
	СчетаАвансов  = "62.02, 62.22, 62.32, 62.ОТ.1, 62.ОТ.2, 62.ОТ.3";
	СчетаНДСАвансов = "76.АВ";
	СчетаРасчетовВычитаемые = "76.08, 76.28, 76.38";
	
	СчетаРасчетовПоНалогам = "68.01.1, 68.01.2, 68.02, 68.03, 68.04.1, 68.06, 68.07, 68.08, 68.09, 68.10,
	                         |68.11, 68.12, 68.13, 68.15, 68.16, 68.34, 68.52, 68.32, 68.42, 68.90,
	                         |69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7, 69.03.1, 69.03.2,
	                         |69.04, 69.05.1, 69.05.2, 69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.06.6, 69.09, 69.11, 69.12, 69.13.1, 69.13.2";
	
	СчетаСписанияНалогов = "68.01.1, 68.01.2, 68.02, 68.03, 68.04.1, 68.06, 68.07, 68.08, 68.09, 68.10,
	                       |68.11, 68.12, 68.13, 68.15, 68.16, 68.34, 68.52, 68.32, 68.42,
	                       |69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7, 69.03.1, 69.03.2,
	                       |69.04, 69.05.1, 69.05.2, 69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.06.6, 69.09, 69.11, 69.12, 69.13.1, 69.13.2";
	
	СчетаШтрафыПени = "68.01.1, 68.01.2, 68.02, 68.03, 68.04.1, 68.06, 68.07, 68.08, 68.09, 68.10, 68.11, 68.12, 68.13, 68.15, 68.16, 68.34, 68.52, 68.32, 68.42,
	                  |69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7, 69.03.1, 69.03.2, 69.04,
	                  |69.05.1, 69.05.2, 69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.06.6, 69.09, 69.11, 69.12";
	
	СчетаКредитов = "66.01, 66.02, 66.21, 66.22, 67.01, 67.02, 67.21, 67.22";
	СчетаЗаймов = "66.03, 66.23, 66.04, 66.24, 67.03, 67.04, 67.23, 67.24";
	СчетаЦенныхБумаг = "67.05, 67.25, 66.05, 66.06, 66.25, 66.26, 67.06, 67.26";
	СчетаПрочие = "70, 71.01, 71.21, 73.03, 75.02, 76.01.1, 76.21, 76.03, 76.04, 76.09, 76.17, 76.29, 76.39, 76.10, 76.49, 76.41, 76.НА,
	              |76.07.2, 76.27.2, 76.37.2";
	
	СчетаПеревода = "76.01.1, 76.03, 76.21, 76.05, 76.25, 76.35, 76.06, 76.26, 76.36,
	                |68.01.1, 68.01.2, 68.02, 68.03, 68.04.1, 68.06, 68.07, 68.08, 68.09, 68.10,
	                |68.11, 68.12, 68.13, 68.15, 68.16, 68.34, 68.52,
	                |69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7, 69.03.1, 69.03.2, 69.04, 69.05.1, 69.05.2,
	                |69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.06.6, 69.09, 69.11, 69.12, 69.13.1, 69.13.2,
	                |70, 71.01, 71.21, 73.03, 76.09, 76.29, 76.39, 76.10, 76.49, 76.41, 76.НА, 76.07.2, 76.27.2, 76.37.2";
	
	Если УчитыватьСчетаИП Тогда
		СчетаРасчетовПоНалогам = СтрЗаменить(СчетаРасчетовПоНалогам, "68.01.2", "68.01.2, 68.21.1, 68.21.2");
		СчетаРасчетовПоНалогам = СтрЗаменить(СчетаРасчетовПоНалогам, "68.13", "68.13, 68.14");
		СчетаСписанияНалогов = СтрЗаменить(СчетаСписанияНалогов, "68.01.2", "68.01.2, 68.21.1, 68.21.2");
		СчетаСписанияНалогов = СтрЗаменить(СчетаСписанияНалогов, "68.13", "68.13, 68.14");
		СчетаШтрафыПени = СтрЗаменить(СчетаШтрафыПени, "68.01.2", "68.01.2, 68.21.1, 68.21.2");
		СчетаШтрафыПени = СтрЗаменить(СчетаШтрафыПени, "68.13", "68.13, 68.14");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, "68.01.2", "68.01.2, 68.21.1, 68.21.2");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, "68.13", "68.13, 68.14");
	КонецЕсли;
	
	// Исключение счета 69.09 за периоды, предшествующие 2023 году.
	Если НЕ С2023 Тогда
		СчетаРасчетовПоНалогам = СтрЗаменить(СчетаРасчетовПоНалогам, ", 69.09", "");
		СчетаСписанияНалогов   = СтрЗаменить(СчетаСписанияНалогов, ", 69.09", "");
		СчетаШтрафыПени        = СтрЗаменить(СчетаШтрафыПени, ", 69.09", "");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, ", 69.09", "");
	КонецЕсли;
	
	// Исключение счета 69.06.6 для всех кроме ИП и за периоды, предшествующие 2023 году.
	Если НЕ (УчитыватьСчетаИП И С2023) Тогда
		СчетаРасчетовПоНалогам = СтрЗаменить(СчетаРасчетовПоНалогам, ", 69.06.6", "");
		СчетаСписанияНалогов   = СтрЗаменить(СчетаСписанияНалогов, ", 69.06.6", "");
		СчетаШтрафыПени        = СтрЗаменить(СчетаШтрафыПени, ", 69.06.6", "");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, ", 69.06.6", "");
	КонецЕсли;
	
	СчетаГрафы04 = СчетаРасчетов + ", "
	             + СчетаАвансов + ", "
	             + СчетаРасчетовПоНалогам + ", "
	             + СчетаКредитов + ", "
	             + СчетаЗаймов + ", "
	             + ?(КонтекстВыполнения.КонтекстРаздела.ДатаНачалаПериодаОтчета >= '2015-10-01', СчетаЦенныхБумаг + ", ", "")
	             + СчетаПрочие
	             + ", " + СчетаРасчетовВычитаемые;
	СчетаГрафы05 = СчетаРасчетов + ", "
	             + СчетаАвансов + ", "
	             + СчетаРасчетовПоНалогам + ", "
	             + "66.01, 66.21" + ", "
	             + "66.03, 66.23" + ", "
	             + ?(КонтекстВыполнения.КонтекстРаздела.ДатаНачалаПериодаОтчета >= '2015-10-01', "66.05, 66.25" + ", ", "")
	             + СчетаПрочие
	             + ", " + СчетаРасчетовВычитаемые;
	СчетаГрафы06 = СчетаРасчетов + ", "
	             + СчетаАвансов + ", "
	             + СчетаШтрафыПени + ", "
	             + "66.02, 66.22, 67.02, 67.22" + ", "
	             + "66.04, 66.24, 67.04, 67.24" + ", "
	             + ?(КонтекстВыполнения.КонтекстРаздела.ДатаНачалаПериодаОтчета >= '2015-10-01', "66.06, 66.26, 67.06, 67.26" + ", ", "")
	             + "70, 76.09, 76.29, 76.39, 76.10, 76.07.2, 76.27.2, 76.37.2";
	СчетаГрафы07 = СчетаРасчетов + ", "
	             + СчетаАвансов + ", "
	             + СчетаРасчетовПоНалогам + ", "
	             + СчетаКредитов + ", "
	             + СчетаЗаймов + ", "
	             + ?(КонтекстВыполнения.КонтекстРаздела.ДатаНачалаПериодаОтчета >= '2015-10-01', СчетаЦенныхБумаг + ", ", "")
	             + СчетаПрочие
	             + ", " + СчетаРасчетовВычитаемые;
	СчетаГрафы08 = СчетаРасчетов + ", "
	             + СчетаАвансов + ", "
	             + СчетаСписанияНалогов + ", "
	             + СчетаКредитов + ", "
	             + "66.03, 66.23, 66.04, 66.24, 67.04, 67.24" + ", "
	             + ?(КонтекстВыполнения.КонтекстРаздела.ДатаНачалаПериодаОтчета >= '2015-10-01', "66.05, 66.06, 66.25, 66.26, 67.06, 67.26" + ", ", "")
	             + "70, 71.01, 71.21, 73.03, 75.02, 76.01.1, 76.21, 76.04, 76.09, 76.17, 76.29, 76.39, 76.10, 76.07.2, 76.27.2, 76.37.2"
	             + ", " + СчетаРасчетовВычитаемые;
	СчетаГрафы10 = СчетаРасчетов + ", "
	             + СчетаАвансов + ", "
	             + СчетаРасчетовПоНалогам + ", "
	             + СчетаКредитов + ", "
	             + СчетаЗаймов + ", "
	             + ?(КонтекстВыполнения.КонтекстРаздела.ДатаНачалаПериодаОтчета >= '2015-10-01', СчетаЦенныхБумаг + ", ", "")
	             + СчетаПрочие
	             + ", " + СчетаРасчетовВычитаемые;
	
	СчетаГрафы21 = СчетаПеревода;
	СчетаГрафы22 = СчетаПеревода;
	
	ПолныйСписокСчетов = СчетаРасчетов + ", " + СчетаАвансов + ", " + СчетаНДСАвансов + ", "
	                   + СчетаКредитов + ", " + СчетаЗаймов + ", "
	                   + ?(КонтекстВыполнения.КонтекстРаздела.ДатаНачалаПериодаОтчета >= '2015-10-01' ,СчетаЦенныхБумаг + ", ", "")
	                   + СчетаРасчетовПоНалогам + ", " + СчетаПрочие + ", " + СчетаРасчетовВычитаемые;
	
	КонтекстСтроки.Вставить("СчетаГрафы04", СчетаГрафы04);
	КонтекстСтроки.Вставить("СчетаГрафы05", СчетаГрафы05);
	КонтекстСтроки.Вставить("СчетаГрафы06", СчетаГрафы06);
	КонтекстСтроки.Вставить("СчетаГрафы07", СчетаГрафы07);
	КонтекстСтроки.Вставить("СчетаГрафы08", СчетаГрафы08);
	КонтекстСтроки.Вставить("СчетаГрафы10", СчетаГрафы10);
	
	КонтекстСтроки.Вставить("СчетаГрафы21", СчетаГрафы21);
	КонтекстСтроки.Вставить("СчетаГрафы22", СчетаГрафы22);
	
	КонтекстСтроки.Вставить("СчетаНДСАвансов", СчетаНДСАвансов);
	
	КонтекстСтроки.Вставить("ПолныйСписокСчетов", ПолныйСписокСчетов);
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьБО2011Кв4Пояснения5_Строки5560и5580(КонтекстСтроки);
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения53_Краткосрочная(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения5Строки5561и5581(КонтекстВыполнения, НомерСтроки)
	
	КонтекстСтроки = Новый Структура;
	
	КонтекстСтроки.Вставить("НомерСтроки", НомерСтроки);
	КонтекстСтроки.Вставить("НаименованиеСтроки", "Расчеты с поставщиками и подрядчиками");
	
	СчетаРасчетов = "60.01, 60.21, 60.31, 60.03, 76.16, 76.05, 76.25, 76.35";
	СчетаРасчетовВычитаемые = "76.08, 76.28, 76.38";
	
	СчетаПеревода = "76.05, 76.25, 76.35";
	
	СчетаГрафы04 = СчетаРасчетов + ", " + СчетаРасчетовВычитаемые;
	СчетаГрафы05 = СчетаРасчетов + ", " + СчетаРасчетовВычитаемые;
	СчетаГрафы06 = СчетаРасчетов;
	СчетаГрафы07 = СчетаРасчетов + ", " + СчетаРасчетовВычитаемые;
	СчетаГрафы08 = СчетаРасчетов + ", " + СчетаРасчетовВычитаемые;
	СчетаГрафы10 = СчетаРасчетов + ", " + СчетаРасчетовВычитаемые;
	
	СчетаГрафы21 = СчетаПеревода;
	СчетаГрафы22 = СчетаПеревода;
	
	ПолныйСписокСчетов = СчетаРасчетов + ", " + СчетаРасчетовВычитаемые;
	
	КонтекстСтроки.Вставить("СчетаГрафы04", СчетаГрафы04);
	КонтекстСтроки.Вставить("СчетаГрафы05", СчетаГрафы05);
	КонтекстСтроки.Вставить("СчетаГрафы06", СчетаГрафы06);
	КонтекстСтроки.Вставить("СчетаГрафы07", СчетаГрафы07);
	КонтекстСтроки.Вставить("СчетаГрафы08", СчетаГрафы08);
	КонтекстСтроки.Вставить("СчетаГрафы10", СчетаГрафы10);
	
	КонтекстСтроки.Вставить("СчетаГрафы21", СчетаГрафы21);
	КонтекстСтроки.Вставить("СчетаГрафы22", СчетаГрафы22);
	
	КонтекстСтроки.Вставить("ПолныйСписокСчетов", ПолныйСписокСчетов);
	
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения53_Краткосрочная(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения5Строки5563и5583(КонтекстВыполнения, НомерСтроки)
	
	УчитыватьСчетаИП = НЕ РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(КонтекстВыполнения.Организация);
	С2023 = (ПривестиКДате(КонтекстВыполнения.КонтекстРаздела.ДатаКонцаПериодаОтчета) >= '2023-01-01');
	
	КонтекстСтроки = Новый Структура;
	
	КонтекстСтроки.Вставить("НомерСтроки", НомерСтроки);
	КонтекстСтроки.Вставить("НаименованиеСтроки", "Расчеты по налогам и взносам");
	
	СчетаРасчетовПоНалогам = "68.01.1, 68.01.2, 68.02, 68.03, 68.04.1, 68.06, 68.07, 68.08, 68.09, 68.10,
	                         |68.11, 68.12, 68.13, 68.15, 68.16, 68.34, 68.52, 68.32, 68.42, 68.90,
	                         |69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7, 69.03.1, 69.03.2,
	                         |69.04, 69.05.1, 69.05.2, 69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.06.6, 69.09, 69.11, 69.12, 69.13.1, 69.13.2";
	
	СчетаСписанияНалогов = "68.01.1, 68.01.2, 68.02, 68.03, 68.04.1, 68.06, 68.07, 68.08, 68.09, 68.10,
	                       |68.11, 68.12, 68.13, 68.15, 68.16, 68.34, 68.52, 68.32, 68.42,
	                       |69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7, 69.03.1, 69.03.2,
	                       |69.04, 69.05.1, 69.05.2, 69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.06.6, 69.09, 69.11, 69.12, 69.13.1, 69.13.2";
	
	СчетаШтрафыПени = "68.01.1, 68.01.2, 68.02, 68.03, 68.04.1, 68.06, 68.07, 68.08, 68.09, 68.10,
	                  |68.11, 68.12, 68.13, 68.15, 68.16, 68.34, 68.52, 68.32, 68.42,
	                  |69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7, 69.03.1, 69.03.2, 69.04,
	                  |69.05.1, 69.05.2, 69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.06.6, 69.09, 69.11, 69.12";
	
	СчетаПеревода = "68.01.1, 68.01.2, 68.02, 68.03, 68.04.1, 68.06, 68.07, 68.08, 68.09, 68.10,
	                |68.11, 68.12, 68.13, 68.15, 68.16, 68.34, 68.52,
	                |69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7, 69.03.1, 69.03.2, 69.04, 69.05.1, 69.05.2,
	                |69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.06.6, 69.09, 69.11, 69.12, 69.13.1, 69.13.2";
	
	Если УчитыватьСчетаИП Тогда
		СчетаРасчетовПоНалогам = СтрЗаменить(СчетаРасчетовПоНалогам, "68.01.2", "68.01.2, 68.21.1, 68.21.2");
		СчетаРасчетовПоНалогам = СтрЗаменить(СчетаРасчетовПоНалогам, "68.13", "68.13, 68.14");
		СчетаСписанияНалогов = СтрЗаменить(СчетаСписанияНалогов, "68.01.2", "68.01.2, 68.21.1, 68.21.2");
		СчетаСписанияНалогов = СтрЗаменить(СчетаСписанияНалогов, "68.13", "68.13, 68.14");
		СчетаШтрафыПени = СтрЗаменить(СчетаШтрафыПени, "68.01.2", "68.01.2, 68.21.1, 68.21.2");
		СчетаШтрафыПени = СтрЗаменить(СчетаШтрафыПени, "68.13", "68.13, 68.14");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, "68.01.2", "68.01.2, 68.21.1, 68.21.2");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, "68.13", "68.13, 68.14");
	КонецЕсли;
	
	// Исключение счета 69.09 за периоды, предшествующие 2023 году.
	Если НЕ С2023 Тогда
		СчетаРасчетовПоНалогам = СтрЗаменить(СчетаРасчетовПоНалогам, ", 69.09", "");
		СчетаСписанияНалогов   = СтрЗаменить(СчетаСписанияНалогов, ", 69.09", "");
		СчетаШтрафыПени        = СтрЗаменить(СчетаШтрафыПени, ", 69.09", "");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, ", 69.09", "");
	КонецЕсли;
	
	// Исключение счета 69.06.6 для всех кроме ИП и за периоды, предшествующие 2023 году.
	Если НЕ (УчитыватьСчетаИП И С2023) Тогда
		СчетаРасчетовПоНалогам = СтрЗаменить(СчетаРасчетовПоНалогам, ", 69.06.6", "");
		СчетаСписанияНалогов   = СтрЗаменить(СчетаСписанияНалогов, ", 69.06.6", "");
		СчетаШтрафыПени        = СтрЗаменить(СчетаШтрафыПени, ", 69.06.6", "");
		СчетаПеревода = СтрЗаменить(СчетаПеревода, ", 69.06.6", "");
	КонецЕсли;
	
	СчетаГрафы04 = СчетаРасчетовПоНалогам;
	СчетаГрафы05 = СчетаРасчетовПоНалогам;
	СчетаГрафы06 = СчетаШтрафыПени;
	СчетаГрафы07 = СчетаРасчетовПоНалогам;
	СчетаГрафы08 = СчетаСписанияНалогов;
	СчетаГрафы10 = СчетаРасчетовПоНалогам;
	
	СчетаГрафы21 = СчетаПеревода;
	СчетаГрафы22 = СчетаПеревода;
	
	ПолныйСписокСчетов = СчетаРасчетовПоНалогам;
	
	КонтекстСтроки.Вставить("СчетаГрафы04", СчетаГрафы04);
	КонтекстСтроки.Вставить("СчетаГрафы05", СчетаГрафы05);
	КонтекстСтроки.Вставить("СчетаГрафы06", СчетаГрафы06);
	КонтекстСтроки.Вставить("СчетаГрафы07", СчетаГрафы07);
	КонтекстСтроки.Вставить("СчетаГрафы08", СчетаГрафы08);
	КонтекстСтроки.Вставить("СчетаГрафы10", СчетаГрафы10);
	
	КонтекстСтроки.Вставить("СчетаГрафы21", СчетаГрафы21);
	КонтекстСтроки.Вставить("СчетаГрафы22", СчетаГрафы22);
	
	КонтекстСтроки.Вставить("ПолныйСписокСчетов", ПолныйСписокСчетов);
	
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения53_Краткосрочная(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения5Строки5566и5586(КонтекстВыполнения, НомерСтроки)
	
	КонтекстСтроки = Новый Структура;
	
	КонтекстСтроки.Вставить("НомерСтроки", НомерСтроки);
	КонтекстСтроки.Вставить("НаименованиеСтроки", "Прочая");
	
	СчетаПрочие = "70, 71.01, 71.21, 73.03, 75.02, 76.01.1, 76.21, 76.03, 76.04, 76.09, 76.29, 76.39, 76.10, 76.17, 76.49, 76.41, 76.НА,
	              |76.07.2, 76.27.2, 76.37.2";
	
	СчетаПеревода = "70, 71.01, 71.21, 73.03, 76.01.1, 76.03, 76.21, 76.09, 76.29, 76.39, 76.10, 76.49, 76.41, 76.НА, 76.07.2, 76.27.2, 76.37.2";
	
	СчетаГрафы04 = СчетаПрочие;
	СчетаГрафы05 = СчетаПрочие;
	СчетаГрафы06 = "70, 76.09, 76.29, 76.39, 76.10, 76.07.2, 76.27.2, 76.37.2";
	СчетаГрафы07 = СчетаПрочие;
	СчетаГрафы08 = "70, 71.01, 71.21, 73.03, 75.02, 76.01.1, 76.21, 76.04, 76.09, 76.17, 76.29, 76.39, 76.10, 76.07.2, 76.27.2, 76.37.2";
	СчетаГрафы10 = СчетаПрочие;
	
	СчетаГрафы21 = СчетаПеревода;
	СчетаГрафы22 = СчетаПеревода;
	
	ПолныйСписокСчетов = СчетаПрочие;
	
	КонтекстСтроки.Вставить("СчетаГрафы04", СчетаГрафы04);
	КонтекстСтроки.Вставить("СчетаГрафы05", СчетаГрафы05);
	КонтекстСтроки.Вставить("СчетаГрафы06", СчетаГрафы06);
	КонтекстСтроки.Вставить("СчетаГрафы07", СчетаГрафы07);
	КонтекстСтроки.Вставить("СчетаГрафы08", СчетаГрафы08);
	КонтекстСтроки.Вставить("СчетаГрафы10", СчетаГрафы10);
	
	КонтекстСтроки.Вставить("СчетаГрафы21", СчетаГрафы21);
	КонтекстСтроки.Вставить("СчетаГрафы22", СчетаГрафы22);
	
	КонтекстСтроки.Вставить("ПолныйСписокСчетов", ПолныйСписокСчетов);
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьБО2011Кв4Пояснения5_Строки5566и5586(КонтекстСтроки);
	КонтекстВыполнения.Вставить("КонтекстСтроки", КонтекстСтроки);
	
	ЗаполнитьФормаОтчета2011Кв4_Пояснения53_Краткосрочная(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("КонтекстСтроки");
	
КонецПроцедуры

#КонецОбласти

#Область ФормаОтчета2019Кв1_Пояснения7

Процедура ЗаполнитьФормаОтчета2019Кв1_Пояснения7(КонтекстВыполнения) Экспорт
	
	ИмяРаздела = "Пояснения7";
	
	Организация = КонтекстВыполнения.Организация;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	ДеревоНастроекСтрокРасшифровки = КонтекстВыполнения.СоставДополнительныхСтрокПояснения7;
	
	ОбщиеПараметрыРасшифровки = Новый Структура;
	ОбщиеПараметрыРасшифровки.Вставить("Организация",   Организация);
	ОбщиеПараметрыРасшифровки.Вставить("НачалоПериода", КонтекстВыполнения.НачалоПериодаОтчета);
	ОбщиеПараметрыРасшифровки.Вставить("КонецПериода",  КонтекстВыполнения.КонецПериодаОтчета);
	
	НастройкиПолученияБухитогов = Новый Структура;
	НастройкиПолученияБухитогов.Вставить("Организация",   КонтекстВыполнения.Организация);
	НастройкиПолученияБухитогов.Вставить("НачалоПериода", КонтекстВыполнения.НачалоПериодаОтчета);
	НастройкиПолученияБухитогов.Вставить("КонецПериода",  КонтекстВыполнения.КонецПериодаОтчета);
	
	СальдоИОборотыПоСчетам = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
	ОборотыМеждуСчетами    = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетами(НастройкиПолученияБухитогов);
	
	СНК_96 =  ЗаполнениеБухгалтерскойОтчетностиИтоги.СНК("96", СальдоИОборотыПоСчетам);
	ДО_96  =  ЗаполнениеБухгалтерскойОтчетностиИтоги.ДО("96", СальдоИОборотыПоСчетам);
	КО_96  =  ЗаполнениеБухгалтерскойОтчетностиИтоги.КО("96", СальдоИОборотыПоСчетам);
	СКК_96 =  ЗаполнениеБухгалтерскойОтчетностиИтоги.СКК("96", СальдоИОборотыПоСчетам);
	
	СНК_96_01 =  ЗаполнениеБухгалтерскойОтчетностиИтоги.СНК("96.01", СальдоИОборотыПоСчетам);
	ДО_96_01  =  ЗаполнениеБухгалтерскойОтчетностиИтоги.ДО("96.01", СальдоИОборотыПоСчетам);
	КО_96_01  =  ЗаполнениеБухгалтерскойОтчетностиИтоги.КО("96.01", СальдоИОборотыПоСчетам);
	СКК_96_01 =  ЗаполнениеБухгалтерскойОтчетностиИтоги.СКК("96.01", СальдоИОборотыПоСчетам);
	
	СНК_96_09 =  ЗаполнениеБухгалтерскойОтчетностиИтоги.СНК("96.09", СальдоИОборотыПоСчетам);
	ДО_96_09  =  ЗаполнениеБухгалтерскойОтчетностиИтоги.ДО("96.09", СальдоИОборотыПоСчетам);
	КО_96_09  =  ЗаполнениеБухгалтерскойОтчетностиИтоги.КО("96.09", СальдоИОборотыПоСчетам);
	СКК_96_09 =  ЗаполнениеБухгалтерскойОтчетностиИтоги.СКК("96.09", СальдоИОборотыПоСчетам);
	
	ОБ_96__91_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("96", "91.01", ОборотыМеждуСчетами);
	ОБ_96_01__91_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("96.01", "91.01", ОборотыМеждуСчетами);
	ОБ_96_09__91_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ("96.09", "91.01", ОборотыМеждуСчетами);
	
	ОСВ_96 = НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "96");
	ОСВ_96_01 = НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "96.01");
	ОСВ_96_09 = НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, "96.09");
	
	АС_96__91_01 = НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "96", "91.01");
	АС_96_01__91_01 = НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "96.01", "91.01");
	АС_96_09__91_01 = НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, "96.09", "91.01");
	
	НомерСтроки = "5700";
	НаименованиеСтроки = "Оценочные обязательства - всего";
	
	Графа = "03";
	НаименованиеГрафы = "Остаток на начало года";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + НаименованиеГрафы + """";
	
	ЗначениеПоказателя = СНК_96;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!СНК " + Счет("96").Код, СНК_96, ИмяРаздела, ОСВ_96);
	
	Графа = "04";
	НаименованиеГрафы = "Признано";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + НаименованиеГрафы + """";
	
	ЗначениеПоказателя = КО_96;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!КО " + Счет("96").Код, КО_96, ИмяРаздела, ОСВ_96);
	
	Графа = "05";
	НаименованиеГрафы = "Погашено";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + НаименованиеГрафы + """";
	
	ЗначениеПоказателя = ДО_96 - ОБ_96__91_01;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ДО " + Счет("96").Код, ДО_96, ИмяРаздела, ОСВ_96);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("96").Код + " " + Счет("91.01").Код, -ОБ_96__91_01, ИмяРаздела, АС_96__91_01);
	
	Графа = "06";
	НаименованиеГрафы = "Списано как избыточная сумма";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + НаименованиеГрафы + """";
	
	ЗначениеПоказателя = ОБ_96__91_01;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ОБ " + Счет("96").Код + " " + Счет("91.01").Код, ОБ_96__91_01, ИмяРаздела, АС_96__91_01);
	
	Графа = "07";
	НаименованиеГрафы = "Остаток на конец периода";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + НаименованиеГрафы + """";
	
	ЗначениеПоказателя = СКК_96;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!СКК " +  Счет("96").Код, СКК_96, ИмяРаздела, ОСВ_96);
	
	НомерСтроки = "5701";
	НаименованиеСтроки = "Резервы предстоящих платежей";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		Графа = "03";
		НаименованиеГрафы = "Остаток на начало года";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + НаименованиеГрафы + """";
		
		ЗначениеПоказателя = СНК_96_09;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
			"+", "!СНК " + Счет("96.09").Код,
			СНК_96_09, ИмяРаздела, ОСВ_96_09);
		
		Графа = "04";
		НаименованиеГрафы = "Признано";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + НаименованиеГрафы + """";
		
		ЗначениеПоказателя = КО_96_09;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
			"+", "!КО " + Счет("96.09").Код,
			КО_96_09, ИмяРаздела, ОСВ_96_09);
		
		Графа = "05";
		НаименованиеГрафы = "Погашено";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + НаименованиеГрафы + """";
		
		ЗначениеПоказателя = ДО_96_09 - ОБ_96_09__91_01;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
			"+", "!ДО " + Счет("96.09").Код,
			ДО_96_09, ИмяРаздела, ОСВ_96_09);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
			"-", "!ОБ " + Счет("96.09").Код + " " + Счет("91.01").Код,
			-ОБ_96_09__91_01, ИмяРаздела, АС_96_09__91_01);
		
		Графа = "06";
		НаименованиеГрафы = "Списано как избыточная сумма";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + НаименованиеГрафы + """";
		
		ЗначениеПоказателя = ОБ_96_09__91_01;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
			"+", "!ОБ " + Счет("96.09").Код + " " + Счет("91.01").Код,
			ОБ_96_09__91_01, ИмяРаздела, АС_96_09__91_01);
		
		Графа = "07";
		НаименованиеГрафы = "Остаток на конец периода";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + НаименованиеГрафы + """";
		
		ЗначениеПоказателя = СКК_96_09;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!СКК " +  Счет("96.09").Код, СКК_96_09, ИмяРаздела, ОСВ_96_09);
		
	КонецЕсли;
	
	НомерСтроки = "5702";
	НаименованиеСтроки = "Оценочные обязательства по вознаграждениям работников";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		Графа = "03";
		НаименованиеГрафы = "Остаток на начало года";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + НаименованиеГрафы + """";
		
		ЗначениеПоказателя = СНК_96_01;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
			"+", "!СНК " + Счет("96.01").Код,
			СНК_96_01, ИмяРаздела, ОСВ_96_01);
		
		Графа = "04";
		НаименованиеГрафы = "Признано";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + НаименованиеГрафы + """";
		
		ЗначениеПоказателя = КО_96_01;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
			"+", "!КО " + Счет("96.01").Код,
			КО_96_01, ИмяРаздела, ОСВ_96_01);
		
		Графа = "05";
		НаименованиеГрафы = "Погашено";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + НаименованиеГрафы + """";
		
		ЗначениеПоказателя = ДО_96_01 - ОБ_96_01__91_01;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
			"+", "!ДО " + Счет("96.01").Код,
			ДО_96_01, ИмяРаздела, ОСВ_96_01);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
			"-", "!ОБ " + Счет("96.01").Код + " " + Счет("91.01").Код,
			-ОБ_96_01__91_01, ИмяРаздела, АС_96_01__91_01);
		
		Графа = "06";
		НаименованиеГрафы = "Списано как избыточная сумма";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + НаименованиеГрафы + """";
		
		ЗначениеПоказателя = ОБ_96_01__91_01;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
			"+", "!ОБ " + Счет("96.01").Код + " " + Счет("91.01").Код,
			ОБ_96_01__91_01, ИмяРаздела, АС_96_01__91_01);
		
		Графа = "07";
		НаименованиеГрафы = "Остаток на конец периода";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + НаименованиеГрафы + """";
		
		ЗначениеПоказателя = СКК_96_01;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!СКК " +  Счет("96.01").Код, СКК_96_01, ИмяРаздела, ОСВ_96_01);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Функция НоваяТаблицаДопСтрокДляСтроки(НомерСтроки) Экспорт
	
	ОписаниеТиповЧисло = ОписаниеТиповЧисла(15,2);
	
	ТаблицаДопСтрок = Новый ТаблицаЗначений;
	
	Если НомерСтроки = "5100" Тогда
		ТаблицаДопСтрок.Колонки.Добавить("ВидНМА");
		ТаблицаДопСтрок.Колонки.Добавить("Графа04_5100", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа05_5100", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа06_5100", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа07_5100", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа08_5100", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа09_5100", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа10_5100", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа11_5100", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа12_5100", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа13_5100", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа14_5100", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа04_5110", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа05_5110", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа06_5110", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа07_5110", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа08_5110", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа09_5110", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа10_5110", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа11_5110", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа12_5110", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа13_5110", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа14_5110", ОписаниеТиповЧисло);
		
		Возврат ТаблицаДопСтрок;
	КонецЕсли;
	
	Если НомерСтроки = "5140" Тогда
		ТаблицаДопСтрок.Колонки.Добавить("РасходыНаНИОКР");
		ТаблицаДопСтрок.Колонки.Добавить("Графа04_5140", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа05_5140", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа06_5140", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа07_5140", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа08_5140", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа09_5140", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа10_5140", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа11_5140", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа04_5150", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа05_5150", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа06_5150", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа07_5150", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа08_5150", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа09_5150", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа10_5150", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа11_5150", ОписаниеТиповЧисло);
		
		Возврат ТаблицаДопСтрок;
	КонецЕсли;
	
	Если НомерСтроки = "5160" Тогда
		ТаблицаДопСтрок.Колонки.Добавить("ОбъектНИОКР");
		ТаблицаДопСтрок.Колонки.Добавить("Графа04_5160", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа05_5160", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа06_5160", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа07_5160", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа08_5160", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа04_5170", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа05_5170", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа06_5170", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа07_5170", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа08_5170", ОписаниеТиповЧисло);
		
		Возврат ТаблицаДопСтрок;
	КонецЕсли;
	
	Если НомерСтроки = "5180" Тогда
		ТаблицаДопСтрок.Колонки.Добавить("ОбъектНМА");
		ТаблицаДопСтрок.Колонки.Добавить("Графа04_5180", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа05_5180", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа06_5180", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа07_5180", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа08_5180", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа04_5190", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа05_5190", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа06_5190", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа07_5190", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа08_5190", ОписаниеТиповЧисло);
		
		Возврат ТаблицаДопСтрок;
	КонецЕсли;
	
	Если НомерСтроки = "5200" Тогда
		ТаблицаДопСтрок.Колонки.Добавить("ГруппаУчетаОС");
		ТаблицаДопСтрок.Колонки.Добавить("Графа04_5200", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа05_5200", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа06_5200", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа07_5200", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа08_5200", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа09_5200", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа10_5200", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа11_5200", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа12_5200", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа13_5200", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа04_5210", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа05_5210", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа06_5210", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа07_5210", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа08_5210", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа09_5210", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа10_5210", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа11_5210", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа12_5210", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа13_5210", ОписаниеТиповЧисло);
		
		Возврат ТаблицаДопСтрок;
	КонецЕсли;
	
	Если НомерСтроки = "5220" Тогда
		ТаблицаДопСтрок.Колонки.Добавить("ГруппаУчетаОС");
		ТаблицаДопСтрок.Колонки.Добавить("Графа04_5220", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа05_5220", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа06_5220", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа07_5220", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа08_5220", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа09_5220", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа10_5220", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа11_5220", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа12_5220", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа13_5220", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа04_5230", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа05_5230", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа06_5230", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа07_5230", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа08_5230", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа09_5230", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа10_5230", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа11_5230", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа12_5230", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа13_5230", ОписаниеТиповЧисло);
		
		Возврат ТаблицаДопСтрок;
	КонецЕсли;
	
	Если НомерСтроки = "5240" Тогда
		ТаблицаДопСтрок.Колонки.Добавить("ОбъектУчета");
		ТаблицаДопСтрок.Колонки.Добавить("Графа04_5240", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа05_5240", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа06_5240", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа07_5240", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа08_5240", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа04_5250", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа05_5250", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа06_5250", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа07_5250", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа08_5250", ОписаниеТиповЧисло);
		
		Возврат ТаблицаДопСтрок;
	КонецЕсли;
		
	Если НомерСтроки = "5260" Тогда
		ТаблицаДопСтрок.Колонки.Добавить("ОсновноеСредство");
		ТаблицаДопСтрок.Колонки.Добавить("Графа03_5260", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа04_5260", ОписаниеТиповЧисло);
		
		Возврат ТаблицаДопСтрок;
	КонецЕсли;
		
	Если НомерСтроки = "5700" Тогда
		ТаблицаДопСтрок.Колонки.Добавить("ОценочноеОбязательство");
		ТаблицаДопСтрок.Колонки.Добавить("Графа03", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа04", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа05", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа06", ОписаниеТиповЧисло);
		ТаблицаДопСтрок.Колонки.Добавить("Графа07", ОписаниеТиповЧисло);
		
		Возврат ТаблицаДопСтрок;
	КонецЕсли;
	
КонецФункции

Функция СчетаДляДанныхЗапроса(Знач СписокСчетов, ИмяСпискаСчетов = Неопределено)
	
	Если ТипЗнч(СписокСчетов) = Тип("Структура") Тогда
		ЭлементСтруктуры = Неопределено;
		Если Не СписокСчетов.Свойство(ИмяСпискаСчетов, ЭлементСтруктуры) Тогда
			ЭлементСтруктуры = "";
		КонецЕсли;
		СписокСчетов = ЭлементСтруктуры;
	КонецЕсли;
	
	МассивСчетов = СчетаИзСписка(СписокСчетов);
	
	ТаблицаСчетов = Новый ТаблицаЗначений;
	ТаблицаСчетов.Колонки.Добавить("Счет", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	
	Для Каждого Счет Из МассивСчетов Цикл
		НоваяСтрока = ТаблицаСчетов.Добавить();
		НоваяСтрока.Счет = Счет;
	КонецЦикла;
	
	Возврат ТаблицаСчетов;
	
КонецФункции

Функция НастройкиАнализаСубконтоЭлементыЗатрат(ОбщиеНастройки, Субконто, Счета = Неопределено)
	
	Если ОбщиеНастройки.Свойство("ПараметрыРасшифровки") Тогда
		Организация   = ОбщиеНастройки.ПараметрыРасшифровки.Организация;
		НачалоПериода = ОбщиеНастройки.ПараметрыРасшифровки.НачалоПериода;
		КонецПериода  = ПривестиКДате(ОбщиеНастройки.ПараметрыРасшифровки.КонецПериода);
		ВидПериода    = ЗаполнениеБухгалтерскойОтчетности.ВидПериодаСтандартногоОтчета(
			ОбщиеНастройки.ПараметрыРасшифровки.КонецПериода);
	Иначе
		Организация   = ОбщиеНастройки.Организация;
		НачалоПериода = ОбщиеНастройки.НачалоПериода;
		КонецПериода  = ПривестиКДате(ОбщиеНастройки.КонецПериода);
		ВидПериода    = ЗаполнениеБухгалтерскойОтчетности.ВидПериодаСтандартногоОтчета(
			ОбщиеНастройки.КонецПериода);
	КонецЕсли;
	
	НастройкиРасшифровки = Новый Структура;
	НастройкиРасшифровки.Вставить("Организация", Организация);
	
	НастройкиРасшифровки.Вставить("Отчет", Новый Структура);
	НастройкиРасшифровки.Отчет.Вставить("ИмяОтчета", "Отчет.АнализСубконто.Форма.ФормаОтчета");
	
	НастройкиРасшифровки.Отчет.Вставить("ПараметрыФормы", Новый Структура);
	НастройкиРасшифровки.Отчет.ПараметрыФормы.Вставить("РежимРасшифровки", Истина);
	НастройкиРасшифровки.Отчет.ПараметрыФормы.Вставить("ВидРасшифровки", 2);
	НастройкиРасшифровки.Отчет.ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	
	ПользовательскиеНастройки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
	
	ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("Организация",   Организация);
	ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("НачалоПериода", НачалоПериода);
	ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("КонецПериода",  КонецПериода);
	ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("ВидПериода",    ВидПериода);
	
	СписокВидовСубконто = Новый СписокЗначений;
	СписокВидовСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ЭлементыЗатрат);
	ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("СписокВидовСубконто", СписокВидовСубконто);
	
	ТабличнаяЧастьГруппировка = Новый Массив;
	
	ОписаниеГруппировки = Новый Структура;
	ОписаниеГруппировки.Вставить("Использование", Истина);
	ОписаниеГруппировки.Вставить("Поле", "Субконто1");
	ОписаниеГруппировки.Вставить("Представление", "Элементы затрат");
	ОписаниеГруппировки.Вставить("ТипГруппировки", 0);
	ТабличнаяЧастьГруппировка.Добавить(ОписаниеГруппировки);
	
	ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("Группировка", ТабличнаяЧастьГруппировка);
	
	ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("ПоСубсчетам", Истина);
	
	ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("ПоказательБУ",            Истина);
	ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("ПоказательНУ",            Ложь);
	ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("ПоказательСверкаНУ",      Ложь);
	ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("ПоказательПР",            Ложь);
	ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("ПоказательВР",            Ложь);
	ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("ПоказательКонтроль",      Ложь);
	ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("ПоказательВалютнаяСумма", Ложь);
	ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("ПоказательКоличество",    Ложь);
	
	Отбор = ПользовательскиеНастройки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
	Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
	
	ПолеКомпоновкиДанных = Новый ПолеКомпоновкиДанных("Субконто1");
	ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных, ВидСравненияКомпоновкиДанных.Равно, Субконто);
	
	Если Счета <> Неопределено Тогда
		СписокСчетов = Новый СписокЗначений;
		Для Каждого СчетУчета Из Счета Цикл
			СписокСчетов.Добавить(СчетУчета);
		КонецЦикла;
		
		ПолеКомпоновкиДанных = Новый ПолеКомпоновкиДанных("Счет");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных, ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии, СписокСчетов);
	КонецЕсли;
	
	НастройкиРасшифровки.Отчет.Вставить("ПользовательскиеНастройки", ПользовательскиеНастройки);
	
	Возврат НастройкиРасшифровки;
	
КонецФункции

Процедура УстановитьПолныйТекстЗапроса(ИсходныйЗапрос, ИсходныйТекстЗапроса, ВидСчетовФактур) Экспорт
	
	// Определение обрабатываемых видов документов по НДС авансов.
	ТекстЗапросаПоСФ =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТИПЗНАЧЕНИЯ(ХозрасчетныйОстаткиИОбороты.Субконто2) КАК ТипДокумента
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Период,
		|			,
		|			Счет В (&СчетаПоНДСАвансов)
		|				ИЛИ Счет В (&СчетаНДСАвансовПоВидуАктива),
		|			&СубконтоКонтрагентыСФПолученные,
		|			Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты";
	ТекстЗапросаПоСФ = СтрЗаменить(ТекстЗапросаПоСФ, "СФПолученные", ВидСчетовФактур);
	
	ИсходныйЗапрос.Текст = ТекстЗапросаПоСФ;
	ВыборкаПоТипамДокументов = ИсходныйЗапрос.Выполнить().Выбрать();
	
	ШаблонДополненияОбъединение =
		"ОБЪЕДИНИТЬ ВСЕ
		|";
	ШаблонДополненияВыборка =
		"ВЫБРАТЬ
		|	ВидДокумента.Ссылка КАК Ссылка,
		|	ВидДокумента.Контрагент КАК Контрагент,
		|	ВидДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК ВидДокумента
		|";
	
	ШаблонДополнения = ШаблонДополненияОбъединение + ШаблонДополненияВыборка;
	ДополнениеКТекстуЗапроса = "";
	
	Пока ВыборкаПоТипамДокументов.Следующий() Цикл
		Если ЗначениеЗаполнено(ВыборкаПоТипамДокументов.ТипДокумента) Тогда
			МетаданныеДокумента = Метаданные.НайтиПоТипу(ВыборкаПоТипамДокументов.ТипДокумента);
			Если МетаданныеДокумента <> Неопределено Тогда
				Если МетаданныеДокумента.Реквизиты.Найти("Контрагент") <> Неопределено
				   И МетаданныеДокумента.Реквизиты.Найти("ДоговорКонтрагента") <> Неопределено Тогда
					ДополнениеКТекстуЗапроса = ДополнениеКТекстуЗапроса
					                         + СтрЗаменить(ШаблонДополнения, "РеализацияТоваровУслуг", МетаданныеДокумента.Имя);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ПозицияИдентификатораВременнойТаблицы = СтрНайти(ИсходныйТекстЗапроса, "ВТ_Все" + ВидСчетовФактур);
	ПозицияВставки = СтрНайти(ИсходныйТекстЗапроса, "ИНДЕКСИРОВАТЬ", , ПозицияИдентификатораВременнойТаблицы);
	
	ТекстЗапроса = Лев(ИсходныйТекстЗапроса, ПозицияВставки - 1)
	             + ДополнениеКТекстуЗапроса
	             + Сред(ИсходныйТекстЗапроса, ПозицияВставки);
	
	ИсходныйЗапрос.Текст = ТекстЗапроса;
	
КонецПроцедуры

Функция ОбщийТекстЗапросов(ИсходныйТекстЗапроса, ДополнительныйТекстЗапроса) Экспорт
	
	ПолныйТекстЗапроса = ДополнительныйТекстЗапроса + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|"
		+ ИсходныйТекстЗапроса;
	
	Возврат ПолныйТекстЗапроса;
	
КонецФункции

Функция ЗначениеИзТаблицы(Таблица, ИмяКолонкиПоиска, ЗначениеПоиска, ИмяКолонкиВеличины)
	
	ИскомоеЗначение = Неопределено;
	
	СтрокаТаблицы = Таблица.Найти(ЗначениеПоиска, ИмяКолонкиПоиска);
	Если СтрокаТаблицы <> Неопределено Тогда
		ИскомоеЗначение = СтрокаТаблицы[ИмяКолонкиВеличины];
	КонецЕсли;
	
	Возврат ИскомоеЗначение;
	
КонецФункции

Процедура УчестьСоставляющуюПоЗначениюБезРасшифровки(ПроцессорПоказателя,
	ТокенЗнака, ПредставлениеРасшифровки, ЗначениеСоставляющей)
	
	ПроцессорПоказателя.Показатель.ЗначениеПоказателя =
		ПроцессорПоказателя.Показатель.ЗначениеПоказателя + ЗначениеСоставляющей;
		
	БезРасшифровки = Новый Структура("Организация", ПроцессорПоказателя.Организация);
	Множитель = 1;
	Если ТокенЗнака = "-" Тогда
		Множитель = -1;
	КонецЕсли;
	
	ДобавитьСтрокуРасшифровки(
		ПроцессорПоказателя.ТаблицаРасшифровки,
		ПроцессорПоказателя.Показатель.КодПоказателя,
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя,
		ТокенЗнака,
		ПредставлениеРасшифровки,
		Множитель * ЗначениеСоставляющей,
		ПроцессорПоказателя.ИмяРаздела,
		БезРасшифровки);
		
КонецПроцедуры

#Область КонструкторыПараметров

Функция НовыйКонтекстЗаполнения()
	
	Контекст = Новый Структура;
	
	Контекст.Вставить("НачалоПериода", '0001-01-01');
	Контекст.Вставить("КонецПериода",  '0001-01-01');
	Контекст.Вставить("Организация",   Справочники.Организации.ПустаяСсылка());
	
	Возврат Контекст;
	
КонецФункции

Функция НовыйОписаниеСтрокиОтчета()
	
	ОписаниеСтрокиОтчета = Новый Структура;
	
	ОписаниеСтрокиОтчета.Вставить("ИмяРаздела",         "");
	ОписаниеСтрокиОтчета.Вставить("НомерСтроки",        "");
	ОписаниеСтрокиОтчета.Вставить("НаименованиеСтроки", "");
	
	Возврат ОписаниеСтрокиОтчета;
	
КонецФункции

#КонецОбласти

#Область ПоляОтчета

Функция ОписаниеПоля(СтрокаОтчета, Графа, ЗаголовкиГраф)
	
	ОписаниеПоля = Новый Структура;
	
	ОписаниеПоля.Вставить("Имя",           ИмяПоля(СтрокаОтчета, Графа));
	ОписаниеПоля.Вставить("Представление", ПредставлениеПоля(СтрокаОтчета, Графа, ЗаголовкиГраф));
	
	Возврат ОписаниеПоля;
	
КонецФункции

Функция ПредставлениеПоля(СтрокаОтчета, Графа, ЗаголовкиГраф)
	
	Шаблон = НСтр("ru = 'Строка %1 ""%2"", графа ""%3""'", ОбщегоНазначения.КодОсновногоЯзыка());
	Возврат СтрШаблон(Шаблон, СтрокаОтчета.НомерСтроки, СтрокаОтчета.НаименованиеСтроки, ЗаголовкиГраф[Графа]);
	
КонецФункции

Функция ИмяПоля(СтрокаОтчета, Графа)
	Возврат "П000100" + СтрокаОтчета.НомерСтроки + Графа;
КонецФункции

#КонецОбласти

#Область ОберткиФункцийИПроцедур

Функция Счет(УсловныйКод)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.Счет(УсловныйКод);
	
КонецФункции

Функция СчетСРеквизитами(УсловныйКод, СчетаСРеквизитами)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.СчетСРеквизитами(УсловныйКод, СчетаСРеквизитами);
	
КонецФункции

Функция ОБ(Знач СчетДт, Знач СчетКт, ОборотыМеждуСчетами)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ(СчетДт, СчетКт, ОборотыМеждуСчетами);
	
КонецФункции

Функция ОписаниеТиповЧисла(Разрядность, РазрядностьДробнойЧасти = 0)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.ОписаниеТиповЧисла(Разрядность, РазрядностьДробнойЧасти);
	
КонецФункции

Функция РасширенныйПериодОтчета(НачалоПериодаОтчета)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.РасширенныйПериодОтчета(НачалоПериодаОтчета);
	
КонецФункции

Функция УчетНа70ВедетсяСводно()
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.УчетНа70ВедетсяСводно();
	
КонецФункции

Процедура УстановитьЗначениеПоказателя(ПоказателиПоРазделам, ИмяРаздела, ИмяПоказателя, ЗначениеПоказателя)
	
	ЗаполнениеБухгалтерскойОтчетности.УстановитьЗначениеПоказателя(ПоказателиПоРазделам, ИмяРаздела, ИмяПоказателя, ЗначениеПоказателя);
	
КонецПроцедуры

Процедура ДобавитьСтрокуРасшифровки(ТаблицаРасшифровок, ИмяПоказателя, НаименованиеПоказателя, ЗнакОперации, НаименованиеСлагаемого, Сумма, ИмяРаздела, ДополнительныеПараметры = Неопределено)
	
	ЗаполнениеРасшифровкаРегламентированнойОтчетности.ДобавитьСтрокуРасшифровки(ТаблицаРасшифровок, ИмяПоказателя, НаименованиеПоказателя, ЗнакОперации, НаименованиеСлагаемого, Сумма, ИмяРаздела, ДополнительныеПараметры);
	
КонецПроцедуры

Функция НастройкиОСВПоСчету(ОбщиеНастройки, Счет, ОтборПоАналитике = Неопределено)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоСчету(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
КонецФункции

Функция НастройкиАнализаСчета(ОбщиеНастройки, Счет, КорСчет, ОтборПоАналитике = Неопределено)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиАнализаСчета(ОбщиеНастройки, Счет, КорСчет, ОтборПоАналитике);
	
КонецФункции

Функция НастройкиАнализаСчетаВПДР(ОбщиеНастройки, Счет, КорСчет, ИмяВидаПрочихДоходовИРасходов)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиАнализаСчетаВПДР(ОбщиеНастройки, Счет, КорСчет, ИмяВидаПрочихДоходовИРасходов);
	
КонецФункции

Функция ОписаниеОбъектовВПДР(ИмяВидаПрочихДоходовИРасходов)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.ОписаниеОбъектовВПДР(ИмяВидаПрочихДоходовИРасходов);
	
КонецФункции

Функция СчетаИзСписка(Знач СписокСчетов, ИмяСпискаСчетов = Неопределено)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.СчетаИзСписка(СписокСчетов, ИмяСпискаСчетов);
	
КонецФункции

Функция МассивСчетовВИерархииИзСписка(Знач СписокСчетов, ИмяСпискаСчетов = Неопределено)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.МассивСчетовВИерархииИзСписка(СписокСчетов, ИмяСпискаСчетов);
	
КонецФункции

Процедура ДобавитьЗначениеВОтбор(Отбор, ЛевоеЗначение, ВидСравнения, ПравоеЗначение)
	
	ЗаполнениеБухгалтерскойОтчетности.ДобавитьЗначениеВОтбор(Отбор, ЛевоеЗначение, ВидСравнения, ПравоеЗначение);
	
КонецПроцедуры

Функция НовыйПроцессорПоказателя()
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиОсновная.НовыйПроцессорПоказателя();
	
КонецФункции

Процедура УчестьСоставляющую(ПроцессорПоказателя, ОписаниеСоставляющей, ДопПараметры = Неопределено)
	
	ЗаполнениеБухгалтерскойОтчетностиОсновная.УчестьСоставляющую(ПроцессорПоказателя, ОписаниеСоставляющей, ДопПараметры);
	
КонецПроцедуры

Процедура УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, НомерГрафы)
	
	ЗаполнениеБухгалтерскойОтчетностиОсновная.УстановитьКодИОбнулитьПоказатель(
		ПроцессорПоказателя, НомерСтроки, НомерГрафы);
	
КонецПроцедуры

Процедура УстановитьЗначениеПоказателяПоПроцессору(ПоказателиПоРазделам, ПроцессорПоказателя, Вычитаемый = Ложь)
	
	ЗаполнениеБухгалтерскойОтчетностиОсновная.УстановитьЗначениеПоказателяПоПроцессору(
		ПоказателиПоРазделам, ПроцессорПоказателя, Вычитаемый);
	
КонецПроцедуры

Функция ПривестиКДате(Период)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.ПривестиКДате(Период);
	
КонецФункции

Функция ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, ИмяДопстроки)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиОсновная.ВключатьДопстрокуВОтчет(
		ДеревоНастроекСтрокРасшифровки, ИмяДопстроки);
	
КонецФункции

#КонецОбласти

#КонецОбласти
