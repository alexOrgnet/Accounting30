#Область ПрограммныйИнтерфейс

// Формирует текст запроса на получение учетных остатков алкогольной продукции.
//   Ожидаемые действия:
//   * Создание временной таблицы "Остатки" с колонками
//     ** Номенклатура   - ОпределяемыйТип.Номенклатура
//     ** Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатуры
//     ** Серия          - ОпределяемыйТип.СерияНоменклатуры
//     ** Остаток        - Число
//     ** ОбъемДАЛ       - Число (объем ДАЛ единицы хранения номенклатуры, используется для неупакованной продукции для пересчета)
//   * Установка необходимых параметров запроса (например получение склада из организации ЕГАИС)
//
// Параметры:
//   Запрос            - Запрос - создаваемый запрос,
//   ОрганизацияЕГАИС  - СправочникСсылка.КлассификаторОрганизацийЕГАИС - ссылка сопоставленную собственной организации организацию ЕГАИС,
//   ТолькоМаркируемая - Булево - переключатель маркируемая/вся алкогольная продукция
//
Процедура ПриФормированииЗапросаУчетныхОстатков(Запрос, ОрганизацияЕГАИС, ТолькоМаркируемая) Экспорт
	
	ВедетсяУчетПоСкладам = БухгалтерскийУчет.ВедетсяУчетПоСкладам(ПланыСчетов.Хозрасчетный.Товары);
	
	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Если ВедетсяУчетПоСкладам Тогда
		ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	КонецЕсли; 
	
	РеквизитыОрганизацииЕГАИС = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОрганизацияЕГАИС, "СоответствуетОрганизации, Контрагент, ТорговыйОбъект");
	
	Запрос.УстановитьПараметр("Склад",                РеквизитыОрганизацииЕГАИС.ТорговыйОбъект);
	Запрос.УстановитьПараметр("Организация",          РеквизитыОрганизацииЕГАИС.Контрагент);
	Запрос.УстановитьПараметр("ПустаяХарактеристика", ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("ХарактеристикаНоменклатуры"));
	Запрос.УстановитьПараметр("ПустаяСерия",          ИнтеграцияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	Запрос.УстановитьПараметр("ВидыСубконто",         ВидыСубконто);
	Запрос.УстановитьПараметр("ВключаяНемаркируемую", НЕ ТолькоМаркируемая);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Номенклатура,
	|	&ПустаяХарактеристика КАК Характеристика,
	|	&ПустаяСерия КАК Серия,
	|	СУММА(ХозрасчетныйОстатки.КоличествоОстатокДт) КАК Остаток,
	|	МАКСИМУМ(СведенияОбАлкогольнойПродукции.КоэффПересчетаДал) КАК ОбъемДАЛ
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(, Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Товары)), &ВидыСубконто, Организация = &Организация И &УсловиеПоСкладам) КАК ХозрасчетныйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбАлкогольнойПродукции КАК СведенияОбАлкогольнойПродукции
	|		ПО ХозрасчетныйОстатки.Субконто1 = СведенияОбАлкогольнойПродукции.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК ВидыАлкогольнойПродукции
	|		ПО (СведенияОбАлкогольнойПродукции.КодВида169 = ВидыАлкогольнойПродукции.Код)
	|ГДЕ
	|	ХозрасчетныйОстатки.КоличествоОстатокДт > 0
	|	И (ВидыАлкогольнойПродукции.Маркируемый
	|			ИЛИ &ВключаяНемаркируемую)
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОстатки.Субконто1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Серия";
	
	Если ВедетсяУчетПоСкладам Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоСкладам", "Субконто2 = &Склад"); 
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоСкладам", "ИСТИНА"); 
	КонецЕсли; 
	
	Запрос.Текст = ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов();
	
КонецПроцедуры

// В процедуре необходимо определить значения переменных ЭтоСклад и ЭтоТорговыйЗал в зависимости от типа торгового объекта.
//
// Параметры:
//  ОрганизацияЕГАИС - ОпределяемыйТип.ТорговыйОбъектЕГАИС - ссылка на собственный торговый объект,
//  ЭтоСклад - Булево - признак того, что торговый объект является складским помещением. Выходной параметр,
//  ЭтоТорговыйЗал - Булево - признак того, что торговый объект является торговым залом. Выходной параметр.
//
Процедура ПриОпределенииТипаТорговогоОбъекта(ОрганизацияЕГАИС, ЭтоСклад, ЭтоТорговыйЗал) Экспорт
	
	ТипСклада = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОрганизацияЕГАИС, "ТорговыйОбъект.ТипСклада");
	
	ЭтоСклад = ТипСклада = Перечисления.ТипыСкладов.ОптовыйСклад;
	ЭтоТорговыйЗал = ТипСклада = Перечисления.ТипыСкладов.РозничныйМагазин;

	
КонецПроцедуры

// Проверяет состояние инвентаризации по складу.
//   Можно вывести текущее состояние (проводится/не проводится) и рекомендации (провести инвентаризацию),
//   активировать доступность отчетов по расхождениям
//
// Параметры:
//   Организация - ОпределяемыйТип.ОрганизацияКонтрагентЕГАИС - ссылка на собственную организацию,
//   ТорговыйОбъект - ОпределяемыйТип.ТорговыйОбъектЕГАИС - ссылка на собственный торговый объект,
//   ТекстПроверкиСклад - Строка, ФорматированнаяСтрока - результат проверки инвентаризации на складе. Выходной параметр,
//   ТекстПроверкиТорговыйЗал - Строка, ФорматированнаяСтрока - результат проверки инвентаризации в торговом зале. Выходной параметр,
//   ОтчетПоРасхождениямСклад - Булево - флаг доступности формирования отчета по излишкам/недостачам (на складе). Выходной параметр,
//   ОтчетПоРасхождениямТорговыйЗал - Булево - флаг доступности ссылка на формирование отчета по излишкам/недостачам (в торговом зале). Выходной параметр.
//
Процедура ПриПроверкеИнвентаризации(Организация, ТорговыйОбъект, ТекстПроверкиСклад, ТекстПроверкиТорговыйЗал, ОтчетПоРасхождениямСклад, ОтчетПоРасхождениямТорговыйЗал) Экспорт
	
	ТипСклада = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТорговыйОбъект, "ТипСклада");
	
	РезультатПроверки = "";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Склад", ТорговыйОбъект);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИнвентаризацияТоваровНаСкладе.Ссылка КАК Ссылка,
	|	ИнвентаризацияТоваровНаСкладе.Дата КАК Дата
	|ИЗ
	|	Документ.ИнвентаризацияТоваровНаСкладе КАК ИнвентаризацияТоваровНаСкладе
	|ГДЕ
	|	ИнвентаризацияТоваровНаСкладе.Проведен
	|	И ИнвентаризацияТоваровНаСкладе.Склад = &Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Описания = Новый Массив;
	Описания.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Инвентаризация товаров'"),,,, "ОткрытьСписокИнвентаризаций"));
	Описания.Добавить(" ");
	Описания.Добавить(?(ТипСклада = Перечисления.ТипыСкладов.ОптовыйСклад, НСтр("ru='на складе'"), НСтр("ru='в торговом зале'")));
	Описания.Добавить(" ");
	Описания.Добавить(Новый ФорматированнаяСтрока(Строка(ТорговыйОбъект),,,, ПолучитьНавигационнуюСсылку(ТорговыйОбъект)));
	Описания.Добавить(" ");
	
	ТребуетсяВывестиРезультатПользователю = Ложь;
	
	Если НЕ Выборка.Следующий() Тогда
		
		Описания.Добавить(НСтр("ru='не проводилась.'"));
		ТребуетсяВывестиРезультатПользователю = Истина;
		
	ИначеЕсли НачалоДня(Выборка.Дата) < НачалоДня(ДобавитьМесяц(ТекущаяДатаСеанса(), -1)) Тогда
		
		Описания.Добавить(НСтр("ru='проводилась больше месяца назад.'"));
		Описания.Добавить(Символы.ПС);
		Описания.Добавить(НСтр("ru='Рекомендуется провести повторную инвентаризацию.'"));
		ТребуетсяВывестиРезультатПользователю = Истина;
		
	КонецЕсли;
	
	Если ТребуетсяВывестиРезультатПользователю Тогда
		
		РезультатПроверки = Новый ФорматированнаяСтрока(Описания);
		Если ТипСклада = Перечисления.ТипыСкладов.ОптовыйСклад Тогда
			ТекстПроверкиСклад = РезультатПроверки;
		Иначе
			ТекстПроверкиТорговыйЗал = РезультатПроверки;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
