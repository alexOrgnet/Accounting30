
#Область СлужебныйПрограммныйИнтерфейс

// Открывает форму заполнения контрагента из данных ЕГРЮЛ по наименованию
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма
//  Наименование - Строка - строка содержит наименование искомого контрагента
//
Процедура ЗаполнитьРеквизитыПоНаименованиюНаКлиенте(Форма, Наименование) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СтрокаПоиска", Наименование);
	ДопПараметры = Новый Структура;
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьРеквизитыПоНаименованиюЗавершение", Форма, ДопПараметры);
	ОткрытьФорму("ОбщаяФорма.ЗаполнениеРеквизитовКонтрагента",
		ПараметрыФормы, Форма, , , , ОписаниеОповещения);
	
КонецПроцедуры 

// Открывает форму обработки выбора дубля
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма.
//  Элемент - ПолеФормы - поле формы НадписьПояснениеПроверкиДублейФНС.
//  Объект - ДанныеФормыСтруктура - объект контрагент в карточке контрагента
//
Процедура ОбработатьСитуациюВыбораДубля(Форма, Элемент, Объект) Экспорт
	
	ПараметрыПередачи = Новый Структура;
	
	ПараметрыПередачи.Вставить("ИНН", Объект.ИНН);
	ПараметрыПередачи.Вставить("КПП", Объект.КПП);
	ПараметрыПередачи.Вставить("ЗакрыватьПриЗакрытииВладельца", Истина);
	
	ЧтоВыполнитьПослеЗакрытия = Новый ОписаниеОповещения("ОбработатьЗакрытиеФормыСпискаДублей", Форма);
	
	ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаВыбораДублей", 
				  ПараметрыПередачи, 
				  Элемент,
				  ,
				  ,
				  ,
				  ЧтоВыполнитьПослеЗакрытия);
	
КонецПроцедуры

// Обработчик команды заполнения реквизитов контрагента по наименованию.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма.
//  КонтактнаяИнформацияПолеЮрАдресКонтрагента - Строка - содержит юридический адрес контрагента.
//
Процедура ЗаполнитьРеквизитыПоНаименованию(Форма, КонтактнаяИнформацияПолеЮрАдресКонтрагента) Экспорт
	
	Объект = Форма.Объект;
	
	Если ЗначениеЗаполнено(Объект.ИНН)
		Или (ЗначениеЗаполнено(КонтактнаяИнформацияПолеЮрАдресКонтрагента) 
		И КонтактнаяИнформацияПолеЮрАдресКонтрагента <> УправлениеКонтактнойИнформациейКлиентСервер.ТекстПустогоАдресаВВидеГиперссылки()) Тогда
		ТекстВопроса = НСтр("ru='Перезаполнить текущие реквизиты?'");
		ДопПараметры = Новый Структура("ЗаполнениеПоИНН", Ложь);
		ДопПараметры.Вставить("СтрокаПоиска", Объект.Наименование);
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьРеквизитыПоДаннымЕГРЗавершение", Форма, ДопПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ЗаполнитьРеквизитыПоНаименованиюНаКлиенте(Форма, Объект.Наименование);
	КонецЕсли;
	
КонецПроцедуры

// Событие перед записью элемента справочника из формы. При наличии дублей контрагента оповещает пользователя.
//
// Параметры:
//  Отказ                    - Булево - отказ от записи
//  ПараметрыЗаписи          - Структура - структура, содержащая параметры записи
//  Форма                    - ФормаКлиентскогоПриложения - форма
//  РезультатПроверкиНаДубли - Строка - содержит результат проверки на дубли
//
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи, Форма, РезультатПроверкиНаДубли) Экспорт
	
	Объект = Форма.Объект;
	
	Если ПараметрыЗаписи.Свойство("ПропуститьПроверку") 
		И ПараметрыЗаписи.ПропуститьПроверку Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоФизЛицо = Объект.ЮридическоеФизическоеЛицо = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо");
	
	Если ЗначениеЗаполнено(Объект.ИНН)
		И Объект.ИННВведенКорректно
		И (Объект.КППВведенКорректно Или ЭтоФизЛицо)
		И ЗначениеЗаполнено(РезультатПроверкиНаДубли) Тогда
		
		Отказ = Истина;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ПараметрыЗаписи", ПараметрыЗаписи);
		
		ОбработчикОповещения = Новый ОписаниеОповещения("ВопросЗаписатьЭлементСНеуникальнымИННЗавершение",
			Форма, ДополнительныеПараметры);
		
		ТекстВопроса = НСтр("ru = 'Уже есть элементы с таким ИНН. Записать?'");
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.ОК, НСтр("ru = 'Записать'"));
		Кнопки.Добавить(КодВозвратаДиалога.Нет);
		
		ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, Кнопки);
		
	КонецЕсли;
	
КонецПроцедуры

// Возвращает описание оповещения о создании контрагента
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма.
//
// Возвращаемое значение:
//  ОписаниеОповещенияОСозданииКонтрагента - ОписаниеОповещения
//
Функция ОповещениеОСозданииКонтрагента(Форма) Экспорт

	Результат = Неопределено;
	
	Если Форма.ОписаниеОповещенияОЗакрытии = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;

	Если ТипЗнч(Форма.ОписаниеОповещенияОЗакрытии.ДополнительныеПараметры) <> Тип("Структура")  Тогда
		Возврат Результат;
	КонецЕсли;

	Результат = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
		Форма.ОписаниеОповещенияОЗакрытии.ДополнительныеПараметры, "ОписаниеОповещенияОСозданииКонтрагента", Неопределено);
	
	Возврат Результат;

КонецФункции

#КонецОбласти