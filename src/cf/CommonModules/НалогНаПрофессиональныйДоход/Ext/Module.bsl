#Область СлужебныйПрограммныйИнтерфейс

Функция ПодготовитьТаблицуПроводокНачисленияНалога(Реквизиты) Экспорт
	
	Если ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Реквизиты.Организация)
		Или Не УчетнаяПолитика.ПрименяетсяНалогНаПрофессиональныйДоходЗаПериод(
			Реквизиты.Организация, Реквизиты.НачалоПериода, Реквизиты.КонецПериода) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	НалогУплаченный = НалогУплаченный(
		Реквизиты.Организация,
		Реквизиты.НачалоПериода,
		Реквизиты.КонецПериода,
		Реквизиты.Регистратор);
	
	ТаблицаПроводок = НоваяТаблицаПроводок();
	
	Если НалогУплаченный > 0 Тогда
		
		ПараметрыПроводки = ТаблицаПроводок.Добавить();
		ЗаполнитьЗначенияСвойств(ПараметрыПроводки, Реквизиты);
		
		ПараметрыПроводки.СчетУчетаНалога = ПланыСчетов.Хозрасчетный.НалогНаПрофессиональныйДоход;
		ПараметрыПроводки.ВидыПлатежейВГосБюджет = Перечисления.ВидыПлатежейВГосБюджет.Налог;
		
		ПараметрыПроводки.СчетУчетаРасходов = ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиНеЕНВД;
		ПараметрыПроводки.ПрибылиИУбытки = Перечисления.ПрибылиИУбытки.НалогНаПрибыль;
	
		ПараметрыПроводки.Сумма = 
			НалогУплаченный(Реквизиты.Организация, Реквизиты.НачалоПериода, Реквизиты.КонецПериода, Реквизиты.Регистратор);
		
		ПараметрыПроводки.Содержание = НСтр(
			"ru = 'Отражен расход по Налогу на профессиональный доход'",
			ОбщегоНазначения.КодОсновногоЯзыка());
		
	КонецЕсли;
	
	Возврат ТаблицаПроводок;
	
КонецФункции

Процедура СформироватьДвиженияНачисленияНалога(ТаблицаПроводок, Движения, Отказ) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаПроводок) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ПараметрыПроводки Из ПодготовитьПараметрыДвиженияНачисленияНалога(ТаблицаПроводок).Проводки Цикл
		
		Проводка = Движения.Хозрасчетный.Добавить();
		ЗаполнитьЗначенияСвойств(Проводка, ПараметрыПроводки);
		
		Проводка.СчетДт = ПараметрыПроводки.СчетУчетаРасходов;
		БухгалтерскийУчет.УстановитьСубконто(
			Проводка.СчетДт,
			Проводка.СубконтоДт,
			"ПрибылиИУбытки",
			ПараметрыПроводки.ПрибылиИУбытки);
		
		Проводка.СчетКт = ПараметрыПроводки.СчетУчетаНалога;
		БухгалтерскийУчет.УстановитьСубконто(
			Проводка.СчетКт,
			Проводка.СубконтоКт,
			"ВидыПлатежейВГосБюджет",
			ПараметрыПроводки.ВидыПлатежейВГосБюджет);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПодготовитьПараметрыДвиженияНачисленияНалога(ТаблицаПроводок)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.Проводки
	
	СписокОбязательныхКолонок = ""
		+ "Период," // <Дата> - период движений - дата документа
		+ "Регистратор," // <ДокументСсылка.*> - документ-регистратор движений
		+ "Организация," // <СправочникСсылка.Организации> - оранизация
		+ "СчетУчетаНалога," // <ПланСчетовСсылка.Хозрасчетный> - счет учета налога
		+ "ВидыПлатежейВГосБюджет," // <"ПеречислениеСсылка.ВидыПлатежейВГосБюджет>
		+ "СчетУчетаРасходов," // <ПланСчетовСсылка.Хозрасчетный> - счет учета расходов
		+ "ПрибылиИУбытки," // <"ПеречислениеСсылка.ПрибылиИУбытки>
		+ "Сумма," // <Число, 15, 2>
		+ "Содержание"; // <Строка>
	
	Проводки = ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаПроводок,
		СписокОбязательныхКолонок);
		
	Параметры.Вставить("Проводки", Проводки);
	
	Возврат Параметры;
	
КонецФункции

Функция НоваяТаблицаПроводок()
	
	ТаблицаПроводок = Новый ТаблицаЗначений();
	ТаблицаПроводок.Колонки.Добавить("Период", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ТаблицаПроводок.Колонки.Добавить("Регистратор", Документы.ТипВсеСсылки());
	ТаблицаПроводок.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	
	ТаблицаПроводок.Колонки.Добавить("СчетУчетаНалога", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаПроводок.Колонки.Добавить("ВидыПлатежейВГосБюджет",
		Новый ОписаниеТипов("ПеречислениеСсылка.ВидыПлатежейВГосБюджет"));
	
	ТаблицаПроводок.Колонки.Добавить("СчетУчетаРасходов", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаПроводок.Колонки.Добавить("ПрибылиИУбытки", Новый ОписаниеТипов("ПеречислениеСсылка.ПрибылиИУбытки"));
	
	ТаблицаПроводок.Колонки.Добавить("Сумма", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	
	ТаблицаПроводок.Колонки.Добавить("Содержание", ОбщегоНазначения.ОписаниеТипаСтрока(100));
	
	Возврат ТаблицаПроводок;
	
КонецФункции

Функция НалогУплаченный(Организация, НачалоПериода, КонецПериода, Регистратор = Неопределено)
	
	СчетаУплаты = Новый Массив;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СчетаУплаты,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.Касса));
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СчетаУплаты,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетныеСчета));
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СчетаУплаты,
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.ЦифровойРубль));
	
	ПлательщикЕНП = УчетнаяПолитика.ПлательщикЕНП(Организация, КонецПериода);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СчетаУплаты", СчетаУплаты);
	Запрос.УстановитьПараметр("СчетУчетаНалога", ПланыСчетов.Хозрасчетный.НалогНаПрофессиональныйДоход);
	Запрос.УстановитьПараметр("ВидыСубконтоСчетаУчетаНалога",
		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет);
	Запрос.УстановитьПараметр("ВидыПлатежейВГосБюджет", Перечисления.ВидыПлатежейВГосБюджет.Налог);
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Если Регистратор = Неопределено Тогда
		Если КонецПериода < НачалоПериода Тогда
			Возврат Неопределено;
		КонецЕсли;
		Запрос.УстановитьПараметр("КонецПериода", Новый Граница(КонецПериода, ВидГраницы.Включая));
	Иначе
		МоментВремени = Регистратор.МоментВремени();
		Если МоментВремени.Дата < НачалоПериода Тогда
			Возврат Неопределено;
		КонецЕсли;
		Запрос.УстановитьПараметр("КонецПериода", Новый Граница(Регистратор.МоментВремени(), ВидГраницы.Исключая));
	КонецЕсли;
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК Сумма
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			СчетДт = &СчетУчетаНалога,
		|			&ВидыСубконтоСчетаУчетаНалога,
		|			СчетКт В (&СчетаУплаты),
		|			,
		|			Организация = &Организация
		|				И СубконтоДт1 = &ВидыПлатежейВГосБюджет) КАК ХозрасчетныйОборотыДтКт";
	
	Если ПлательщикЕНП Тогда
		ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|" +
			"ВЫБРАТЬ
			|	РасчетыПоНалогамНаЕдиномНалоговомСчетеОбороты.СуммаРасход
			|ИЗ
			|	РегистрНакопления.РасчетыПоНалогамНаЕдиномНалоговомСчете.Обороты(
			|			&НачалоПериода,
			|			&КонецПериода,
			|			,
			|			СчетУчета = &СчетУчетаНалога
			|				И Организация = &Организация
			|				И ГоловнаяОрганизация = &Организация) КАК РасчетыПоНалогамНаЕдиномНалоговомСчетеОбороты";
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выгрузить().Итог("Сумма");
	
КонецФункции

#КонецОбласти