#Область ПрограммныйИнтерфейс

// Выполняет HTTP запрос GET.
//
// Параметры:
//	URL - Строка - Адрес, по которому выполняется запрос
//	Заголовки - Соответствие - Список заголовков запроса (Необязательный)
//	ИмяПользователя - Строка - Имя пользователя для Basic аутентификации (Необязательный)
//	ПарольПользователя - Строка - Пароль пользователя для Basic аутентификации (Необязательный)
//
// Возвращаемое значение:
//	HTTPОтвет - Результат выполнения запроса
//
Функция GET(URL, Заголовки = Неопределено, ИмяПользователя = Неопределено, ПарольПользователя = Неопределено) Экспорт
	
	Возврат ВыполнитьЗапрос("GET", URL, Заголовки, Неопределено, ИмяПользователя, ПарольПользователя);
	
КонецФункции

// Выполняет HTTP запрос POST.
//
// Параметры:
//	URL - Строка - Адрес, по которому выполняется запрос
//	Заголовки - Соответствие - Список заголовков запроса (Необязательный)
//	СтруктураДанных - Струкутра - Структура данных, которая будет сериализована в JSON и передана в теле запроса
//	ИмяПользователя - Строка - Имя пользователя для Basic аутентификации (Необязательный)
//	ПарольПользователя - Строка - Пароль пользователя для Basic аутентификации (Необязательный)
//
// Возвращаемое значение:
//	HTTPОтвет - Результат выполнения запроса
//
Функция POST(URL, Заголовки = Неопределено, СтруктураДанных, ИмяПользователя = Неопределено, ПарольПользователя = Неопределено) Экспорт
	
	Возврат ВыполнитьЗапрос("POST", URL, Заголовки, СтруктураДанных, ИмяПользователя, ПарольПользователя);
	
КонецФункции

// Выполняет HTTP запрос POST.
//
// Параметры:
//	URL - Строка - Адрес, по которому выполняется запрос
//	Заголовки - Соответствие - Список заголовков запроса (Необязательный)
//	СтруктураДанных - Струкутра - Структура данных, которая будет сериализована в JSON и передана в теле запроса
//	ИмяПользователя - Строка - Имя пользователя для Basic аутентификации (Необязательный)
//	ПарольПользователя - Строка - Пароль пользователя для Basic аутентификации (Необязательный)
//
// Возвращаемое значение:
//	HTTPОтвет - Результат выполнения запроса
//
Функция PUT(URL, Заголовки = Неопределено, СтруктураДанных, ИмяПользователя = Неопределено, ПарольПользователя = Неопределено) Экспорт
	
	Возврат ВыполнитьЗапрос("PUT", URL, Заголовки, СтруктураДанных, ИмяПользователя, ПарольПользователя);
	
КонецФункции

// Возвращает заголовки HTTP-запроса или ответа в виде строки
//	Имя заголовка: Тело заголовка
//
// Параметры:
//	Объект - HTTPЗапрос, HTTPОтвет - из которого нужно прочитать заголовки 
//
// Возвращаемое значение:
//	Строка - сформированный дамп заголовков
//
Функция ПредставлениеЗаголовков(Объект) Экспорт

	Результат = "";
	
	Для каждого Элемент Из Объект.Заголовки Цикл
		Результат = Результат
			+ ?(ПустаяСтрока(Результат), "", Символы.ПС)
			+ СтрШаблон("%1: %2", Элемент.Ключ, Элемент.Значение);
	КонецЦикла; 
	
	Возврат Результат;

КонецФункции

// Возвращает код состояния HTTP при успешном выполнении запроса.
//
// Возвращаемое значение:
//	Число - Код состояния HTTP
//
Функция КодОтветаОк() Экспорт
	
	Возврат 200;
	
КонецФункции

// Возвращает код состояния HTTP при получении некорректного запроса.
//
// Возвращаемое значение:
//	Число - Код состояния HTTP
//
Функция КодОтветаНекорректныйЗапрос() Экспорт
	
	Возврат 400;
	
КонецФункции

// Возвращает код состояния HTTP при отсутствии запрашиваемого ресурса.
//
// Возвращаемое значение:
//	Число - Код состояния HTTP
//
Функция КодОтветаНеНайдено() Экспорт
	
	Возврат 404;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВыполнитьЗапрос(Метод, URL, Заголовки = Неопределено, СтруктураДанных = Неопределено, ИмяПользователя = Неопределено, ПарольПользователя = Неопределено)
	
	СтруктураURI = ОбщегоНазначенияКлиентСервер.СтруктураURI(URL);
	
	Запрос = Новый HTTPЗапрос(СтруктураURI.ПутьНаСервере);
	
	Если СтруктураДанных <> Неопределено Тогда
		JSON = ОплатаСервисаJSONБП.Записать(СтруктураДанных);
		Запрос.УстановитьТелоИзСтроки(JSON);
		Запрос.Заголовки.Вставить("Content-Type", "application/json");
	КонецЕсли;
	
	Если Заголовки <> Неопределено Тогда
		Для каждого Заголовок Из Заголовки Цикл
			Запрос.Заголовки.Вставить(Заголовок.Ключ, Заголовок.Значение);
		КонецЦикла;
	КонецЕсли;
	
	ИнтернетПрокси = ПолучениеФайловИзИнтернета.ПолучитьПрокси(СтруктураURI.Схема);
	ЗащищенноеСоединение = ?(СтруктураURI.Схема = "https", Новый ЗащищенноеСоединениеOpenSSL, Неопределено);
	Соединение = Новый HTTPСоединение(СтруктураURI.Хост,
		СтруктураURI.Порт,
		ИмяПользователя,
		ПарольПользователя,
		ИнтернетПрокси, ,
		ЗащищенноеСоединение);
	
	Возврат Соединение.ВызватьHTTPМетод(Метод, Запрос);
	
КонецФункции

#КонецОбласти
