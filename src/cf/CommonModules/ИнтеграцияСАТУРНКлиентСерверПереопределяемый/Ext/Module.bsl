#Область ПрограммныйИнтерфейс

// Заполняет соответствие полей документов-оснований и накладной САТУРН
// 
// Параметры:
//  СоответствиеПолей - Соответствие из КлючИЗначение:
//  * Ключ - Строка - имя документа в метаданных, например "РеализацияТоваровУслуг"
//  * Значение - Соответствие из КлючИЗначение:
//    ** ГрузоотправительОрганизацияСАТУРН - Строка - имя поля документа, которое соответствует организации грузоотправителя
//    ** ГрузоотправительМестоХранения     - Строка - имя поля документа, которое соответствует месту хранения грузоотправителя
//    ** ГрузополучательОрганизацияСАТУРН  - Строка - имя поля документа, которое соответствует организации грузополучателя
//    ** ГрузополучательМестоХранения      - Строка - имя поля документа, которое соответствует месту хранения грузополучателя
Процедура ЗаполнитьСоответствиеПолейДокументовОснованийНакладнойСАТУРН(СоответствиеПолей) Экспорт
	
	//++ НЕ ГОСИС
	СоответствиеПолей.Вставить("РеализацияТоваровУслуг", Новый Соответствие);
	СоответствиеПолей["РеализацияТоваровУслуг"].Вставить("ГрузоотправительОрганизацияСАТУРН", "Организация");
	СоответствиеПолей["РеализацияТоваровУслуг"].Вставить("ГрузоотправительМестоХранения",     "Склад");
	СоответствиеПолей["РеализацияТоваровУслуг"].Вставить("ГрузополучательОрганизацияСАТУРН",  "Контрагент");
	СоответствиеПолей["РеализацияТоваровУслуг"].Вставить("ГрузополучательМестоХранения",      "");
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Заполняет соответствие полей документов-оснований и акта инвентаризации САТУРН
// 
// Параметры:
//  СоответствиеПолей - Соответствие из КлючИЗначение:
//  * Ключ - Строка - имя документа в метаданных, например "ОприходованиеТоваров"
//  * Значение - Соответствие из КлючИЗначение:
//    ** ОрганизацияСАТУРН - Строка - имя поля документа, которое соответствует организации САТУРН
//    ** МестоХранения     - Строка - имя поля документа, которое соответствует месту хранения грузоотправителя
Процедура ЗаполнитьСоответствиеПолейДокументовОснованийАктаИнвентаризацииСАТУРН(СоответствиеПолей) Экспорт
	
	//++ НЕ ГОСИС
	СоответствиеПолей.Вставить("ОприходованиеТоваров", Новый Соответствие);
	СоответствиеПолей["ОприходованиеТоваров"].Вставить("ОрганизацияСАТУРН", "Организация");
	СоответствиеПолей["ОприходованиеТоваров"].Вставить("МестоХранения",     "Склад");
	
	СоответствиеПолей.Вставить("СписаниеТоваров", Новый Соответствие);
	СоответствиеПолей["СписаниеТоваров"].Вставить("ОрганизацияСАТУРН", "Организация");
	СоответствиеПолей["СписаниеТоваров"].Вставить("МестоХранения",     "Склад");
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Заполняет соответствие полей документов-оснований и акта применения САТУРН
// 
// Параметры:
//  СоответствиеПолей - Соответствие из КлючИЗначение:
//  * Ключ - Строка - имя документа в метаданных, например "ПроизводствоТоваров"
//  * Значение - Соответствие из КлючИЗначение:
//    ** ОрганизацияСАТУРН - Строка - имя поля документа, которое соответствует организации САТУРН
//    ** МестоХранения     - Строка - имя поля документа, которое соответствует месту хранения грузоотправителя
Процедура ЗаполнитьСоответствиеПолейДокументовОснованийАктаПримененияСАТУРН(СоответствиеПолей) Экспорт
	
	//++ НЕ ГОСИС
	СоответствиеПолей.Вставить("СписаниеТоваров", Новый Соответствие);
	СоответствиеПолей["СписаниеТоваров"].Вставить("ОрганизацияСАТУРН", "Организация");
	СоответствиеПолей["СписаниеТоваров"].Вставить("МестоХранения",     "Склад");
	//-- НЕ ГОСИС

КонецПроцедуры

// Заполняет соответствие полей документов-оснований и импорта продукции САТУРН
// 
// Параметры:
//  СоответствиеПолей - Соответствие из КлючИЗначение:
//  * Ключ - Строка - имя документа в метаданных, например "РеализацияТоваровУслуг"
//  * Значение - Соответствие из КлючИЗначение:
//    ** ОрганизацияСАТУРН - Строка - имя поля документа, которое соответствует организации САТУРН
//    ** МестоХранения     - Строка - имя поля документа, которое соответствует месту хранения грузоотправителя
Процедура ЗаполнитьСоответствиеПолейДокументовОснованийИмпортаПродукцииСАТУРН(СоответствиеПолей) Экспорт
	
	//++ НЕ ГОСИС
	СоответствиеПолей.Вставить("ПоступлениеТоваровУслуг", Новый Соответствие);
	СоответствиеПолей["ПоступлениеТоваровУслуг"].Вставить("ОрганизацияСАТУРН", "Организация");
	СоответствиеПолей["ПоступлениеТоваровУслуг"].Вставить("МестоХранения",     "Склад");
	//-- НЕ ГОСИС

	
КонецПроцедуры

// Заполняет соответствие полей документов-оснований и плана применения САТУРН
// 
// Параметры:
//  СоответствиеПолей - Соответствие из КлючИЗначение:
//  * Ключ - Строка - имя документа в метаданных, например "РеализацияТоваровУслуг"
//  * Значение - Соответствие из КлючИЗначение:
//    ** ОрганизацияСАТУРН - Строка - имя поля документа, которое соответствует организации САТУРН
Процедура ЗаполнитьСоответствиеПолейДокументовОснованийПланаПримененияСАТУРН(СоответствиеПолей) Экспорт
	
	Возврат;
	
КонецПроцедуры

// Заполняет соответствие полей документов-оснований и производственной операции САТУРН
// 
// Параметры:
//  СоответствиеПолей - Соответствие из КлючИЗначение:
//  * Ключ - Строка - имя документа в метаданных
//  * Значение - Соответствие из КлючИЗначение:
//    ** ОрганизацияСАТУРН - Строка - имя поля документа, которое соответствует организации САТУРН
//    ** МестоХранения     - Строка - имя поля документа, которое соответствует месту хранения грузоотправителя
Процедура ЗаполнитьСоответствиеПолейДокументовОснованийЗапросаОстатковПартийСАТУРН(СоответствиеПолей) Экспорт
	
	Возврат;
	
КонецПроцедуры

// Заполняет соответствие полей документов-оснований и производственной операции САТУРН
// 
// Параметры:
//  СоответствиеПолей - Соответствие из КлючИЗначение:
//  * Ключ - Строка - имя документа в метаданных, например "ПроизводствоТоваров"
//  * Значение - Соответствие из КлючИЗначение:
//    ** ОрганизацияСАТУРН - Строка - имя поля документа, которое соответствует организации САТУРН
//    ** МестоХранения     - Строка - имя поля документа, которое соответствует месту хранения грузоотправителя
Процедура ЗаполнитьСоответствиеПолейДокументовОснованийПроизводственнойОперацииСАТУРН(СоответствиеПолей) Экспорт
	
	//++ НЕ ГОСИС
	СоответствиеПолей.Вставить("ОтчетПроизводстваЗаСмену", Новый Соответствие);
	СоответствиеПолей["ОтчетПроизводстваЗаСмену"].Вставить("ОрганизацияСАТУРН", "Организация");
	СоответствиеПолей["ОтчетПроизводстваЗаСмену"].Вставить("МестоХранения",     "Склад");
	//-- НЕ ГОСИС

	
КонецПроцедуры


#Область ВспомогательныеПроцедурыИФункции

Процедура ПриИзмененииНоменклатуры(СтрокаТаблицы, Знач ЗависимыеРеквизиты, Знач ЦенаВключаетНДС = Ложь, Знач НалогообложениеНДС = Неопределено) Экспорт
	
	НужноОпределениеПАТСАТУРН = Ложь;
	
	Если Не ЗначениеЗаполнено(ЗависимыеРеквизиты) Тогда
		ЗависимыеРеквизиты = "";
	КонецЕсли;
	ЗависимыеРеквизиты = СтрРазделить(ЗависимыеРеквизиты, ",");
	
	Если ЗависимыеРеквизиты.Найти("ПАТ") <> Неопределено Тогда
		НужноОпределениеПАТСАТУРН = Истина;
		ЗависимыеРеквизиты.Удалить(ЗависимыеРеквизиты.Найти("ПАТ"));
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТаблицы, "Упаковка") Тогда
		ЕдиницаИзмерения = ИнтеграцияСАТУРНБПВызовСервера.ПолучитьЕдиницуИзмеренияНоменклатуры(СтрокаТаблицы.Номенклатура);
		СтрокаТаблицы.Упаковка = ИнтеграцияСАТУРНБПВызовСервера.ПолучитьУпаковкуПоЕдиницеИзмерения(ЕдиницаИзмерения);	
	КонецЕсли;
	
	Если НужноОпределениеПАТСАТУРН Тогда
		Реквизиты = Новый Структура("Номенклатура,ПАТ");
		ЗаполнитьЗначенияСвойств(Реквизиты, СтрокаТаблицы);
		ДанныеСопоставления = ИнтеграцияСАТУРНБПВызовСервера.СопоставленнаяНоменклатураСАТУРН(Реквизиты);
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ДанныеСопоставления);
	КонецЕсли;
	
	ПриИзмененииСтавкаНДС(СтрокаТаблицы, ЦенаВключаетНДС, НалогообложениеНДС);
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаТаблицы, "Коэффициент") Тогда
		СтрокаТаблицы.Коэффициент = 1;
		РассчитатьКоличествоБазовыхЕдиниц(СтрокаТаблицы);
	КонецЕсли;

КонецПроцедуры

// Рассчитывает сумму при изменении ставки НДС в строке табличной части документа.
//
// Параметры:
//  СтрокаТаблицы      - ДанныеФормыЭлементКоллекции - Строка таблицы.
//  ЦенаВключаетНДС    - Булево - Признак включения НДС в цену и сумму документа.
//  НалогообложениеНДС - Булево - Признак того, что выполняемая операция подлежит налогообложению НДС.
//
Процедура ПриИзмененииСтавкаНДС(СтрокаТаблицы, ЦенаВключаетНДС = Ложь, НалогообложениеНДС = Неопределено) Экспорт
	
	Если НалогообложениеНДС = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НалогообложениеНДС = Ложь Тогда
		СтрокаТаблицы.СуммаНДС  = 0;
		СтрокаТаблицы.СуммаСНДС = СтрокаТаблицы.Сумма;
		Возврат;
	КонецЕсли;
	
	ЗначениеСтавки = ПолучитьСтавкуНДСЧислом(СтрокаТаблицы.СтавкаНДС);
	Если ЦенаВключаетНДС Тогда
		СтрокаТаблицы.СуммаНДС  = СтрокаТаблицы.Сумма - СтрокаТаблицы.Сумма / (1 + ЗначениеСтавки);
		СтрокаТаблицы.СуммаСНДС = СтрокаТаблицы.Сумма;
	Иначе
		СтрокаТаблицы.СуммаНДС  = СтрокаТаблицы.Сумма * ЗначениеСтавки;
		СтрокаТаблицы.СуммаСНДС = СтрокаТаблицы.Сумма + СтрокаТаблицы.СуммаНДС;
	КонецЕсли;
	
КонецПроцедуры

Процедура РассчитатьКоличествоБазовыхЕдиниц(СтрокаТаблицы)
	
	Если Не ЗначениеЗаполнено(СтрокаТаблицы.Коэффициент) Тогда
		СтрокаТаблицы.Коэффициент = 1;
	КонецЕсли;
	
	СтрокаТаблицы.Количество = СтрокаТаблицы.КоличествоУпаковок * СтрокаТаблицы.Коэффициент;
	
КонецПроцедуры

Функция ПолучитьСтавкуНДСЧислом(СтавкаНДС)
	
	Возврат УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(СтавкаНДС);
	
КонецФункции

Процедура УправлениеВидимостьюКомандНакладнаяСАТУРН(Форма, КомандыФормы) Экспорт
	
	ЭтоВходящаяНакладная = Форма.Объект.ВходящаяНакладная;
	Для Каждого КлючИЗначение Из Форма.ВидимостьПодключаемыхКоманд Цикл
		
		ИмяМетаданных = КлючИЗначение.Значение.ИмяМетаданных;
		Элемент       = Форма.Элементы[КлючИЗначение.Ключ];
		Если Найти(КлючИЗначение.Ключ,"Выбрать") > 0 Тогда
			
			Если ИмяМетаданных = "РеализацияТоваровУслуг" 
				Или ИмяМетаданных = "ВозвратТоваровПоставщику" 
				Или ИмяМетаданных = "ПеремещениеТоваров"
				Или ИмяМетаданных = "ТребованиеНакладная" 
				Или ИмяМетаданных = "ОтчетОРозничныхПродажах" Тогда
				
				Элемент.Видимость = ?(ЭтоВходящаяНакладная, Ложь, Истина);
				
			ИначеЕсли ИмяМетаданных = "ПоступлениеТоваровУслуг"
				Или ИмяМетаданных = "ВозвратТоваровОтПокупателя" Тогда
				
				Элемент.Видимость = ?(ЭтоВходящаяНакладная, Истина, Ложь);
				
			КонецЕсли;
			
		ИначеЕсли Найти(КлючИЗначение.Ключ,"Оформить") > 0 Тогда
			
			Элемент.Видимость = ?(ЭтоВходящаяНакладная, Истина, Ложь);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

