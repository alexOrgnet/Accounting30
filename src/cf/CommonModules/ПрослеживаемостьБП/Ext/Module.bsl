
#Область ПрограммныйИнтерфейс

// Возвращает дату до которой необходимо отправить уведомление о ввозе/вывозе в налоговую инспекцию
// Параметры:
// Дата - тип дата, в данном параметре передается
//        дата поступления прослеживаемых товаров
// ЭтоКорректировочноеУведомение - Булево - истина, если функция вызывается из
//        корректировочного уведомления
// Возвращаемое значение:
// СрокУведомления - тип дата, день до которого нужно отправить уведомление о ввозе
Функция СрокПодачиУведомления(Дата, ЭтоКорректировочноеУведомение = Ложь) Экспорт
	
	КоличествоРабочихДнейОтсрочки = ?(Не ЭтоКорректировочноеУведомение, 5, 1);
	День = 24 * 60 * 60; // количество секунд в одном дне

	ПроизводственныйКалендарь = КалендарныеГрафики.ОсновнойПроизводственныйКалендарь();
	
	Если НЕ ЗначениеЗаполнено(ПроизводственныйКалендарь) Тогда
		Возврат Дата + КоличествоРабочихДнейОтсрочки * День;
	КонецЕсли;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Год",                       Год(Дата));
	Отбор.Вставить("Дата",                      Дата);
	Отбор.Вставить("ПроизводственныйКалендарь", ПроизводственныйКалендарь);
	
	ДанныеДня = РегистрыСведений.ДанныеПроизводственногоКалендаря.Получить(Отбор);
	
	ДатаДокументаЭтоВыходной = (ДанныеДня.ВидДня <> Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий И 
								ДанныеДня.ВидДня <> Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный);
	
	Если ДатаДокументаЭтоВыходной Тогда
		// Отсрочка меньше на один день
		СрокУведомления = КалендарныеГрафики.ДатаПоКалендарю(
			ПроизводственныйКалендарь, Дата, КоличествоРабочихДнейОтсрочки - 1, Ложь);
	Иначе
		СрокУведомления = КалендарныеГрафики.ДатаПоКалендарю(
			ПроизводственныйКалендарь, Дата, КоличествоРабочихДнейОтсрочки, Ложь);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СрокУведомления) Тогда
		Возврат Дата + КоличествоРабочихДнейОтсрочки * День;
	Иначе
		Возврат СрокУведомления;
	КонецЕсли;
	
КонецФункции

// В процедуре заполняется структура параметров для отображения баннера
// Баннер будет показан в форме отчета об операциях с товарами, подлежащими прослеживаемости
// Если не включена ФО по ведению учета прослеживаемых товаров, тогда будет выведена информация
// что необходимо включить соответствующую функциональность. 
// Путь к форме функциональности программы разный, в простом и полном интерфейсе.
// Если включена ФО по ведению учета прослеживаемых товаров
// Тогда будет выводиться информация, что отчет не всегда может содержать данные и ссылка на статью с разъяснениями
//
//   Параметры - Структура - содержит:
//    * ЗаголовокБаннерВключениеФункциональностиПоПрослеживаемости   - ФорматированнаяСтрока - Текст баннера для включения ФО по учету прослеживаемых товаров
//    * ЗаголовокБаннерСсылкаНаДопИнформацию   - ФорматированнаяСтрока - Текст баннера содержащий пояснения по заполнению отчета и ссылку на статью
//    * КартинкаКотик    - Картинка - картинка с котиком
//    * КартинкаЗакрытие - Картинка - картинка для закрытия баннера 
//    * ЦветФонаБаннера  - Цвет - зеленый цвет фона баннера
//    * ОтображатьБаннер - Булево - нужно ли отображать баннер в отчете
//    * ВедетсяУчетПрослеживаемыхТоваров - Булево - включена ли ФО по ведению учета прослеживаемых товаров
//    * ФормаФункциональности - Строка - путь к форме включения функциональности программы
//    * ПараметрыОткрытияФормыФункциональности - Структура - параметры открытия формы включения функциональности программы
// 							* Текущая страница - Строка - на какой странице открыть форму включения функциональности программы
//
Процедура ПараметрыБаннера(Параметры) Экспорт
	
	Параметры.Вставить("ЗаголовокБаннерВключениеФункциональностиПоПрослеживаемости", "");
	Параметры.Вставить("ЗаголовокБаннерСсылкаНаДопИнформацию",                       "");
	Параметры.Вставить("КотикБаннер",      БиблиотекаКартинок.КотКритичноеСообщениеСервиса);
	Параметры.Вставить("ЗакрытьБаннер",    БиблиотекаКартинок.ОчиститьЗначение);
	Параметры.Вставить("ЦветФонаБаннера",  ЦветаСтиля.ЦветФонаБаннерКонтрагент);
	Параметры.Вставить("ОтображатьБаннер", Истина);
	Параметры.Вставить("ВедетсяУчетПрослеживаемыхТоваров", Истина);
	Параметры.Вставить("ФормаФункциональности",            "Обработка.ФункциональностьПрограммы.Форма.ФормаФункциональностьПрограммы");
	Параметры.Вставить("ПараметрыОткрытияФормыФункциональности", Новый Структура("ТекущаяСтраница", "ГруппаВнешняяТорговля"));

	
	ПростойИнтерфейс = ПолучитьФункциональнуюОпцию("ИнтерфейсТаксиПростой");
	ВедетсяУчетПрослеживаемыхТоваров  = ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров");
	Параметры.ВедетсяУчетПрослеживаемыхТоваров = ВедетсяУчетПрослеживаемыхТоваров;
	
	Если Не ВедетсяУчетПрослеживаемыхТоваров Тогда
		Массив = Новый Массив;
		Массив.Добавить(Нстр("ru = 'Для ведения учета прослеживаемых товаров необходимо установить настройки '"));
		Массив.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'функциональности программы'"),
		, , , "ОткрытьФормуВключенияФункциональности"));
		Если ПростойИнтерфейс Тогда
			Массив.Добавить(Символы.ПС + Нстр("ru = '(меню ""Настройки - Функциональность - Внешняя торговля"")'"));
		Иначе
		Массив.Добавить(Символы.ПС + Нстр("ru = '(меню ""Главное - Функциональность - Внешняя торговля"")'"));
		КонецЕсли; 
		
		Параметры.ЗаголовокБаннерВключениеФункциональностиПоПрослеживаемости = Новый ФорматированнаяСтрока(Массив, ШрифтыСтиля.ШрифтТекстаБаннера);
		
		Параметры.ЗаголовокБаннерСсылкаНаДопИнформацию = Новый ФорматированнаяСтрока(НСтр("ru = 'Подробнее'"),
		ШрифтыСтиля.ШрифтТекстаБаннера, , , "https://its.1c.ru/db/traceability");
		
	Иначе
		УстановитьПривилегированныйРежим(Истина);
		
		ОтображатьБаннер = ХранилищеОбщихНастроек.Загрузить(
		"Отчеты.РегламентированныйОтчетПрослеживаемыеТоварыОтчетОбОперациях.Формы.ФормаОтчета2021Кв3",
		"ОтображатьБаннерОПорядкеСдачиОтчета",
		, 
		Пользователи.ТекущийПользователь());
		
		УстановитьПривилегированныйРежим(Ложь);

		Параметры.ОтображатьБаннер = ОтображатьБаннер = Неопределено;
		Массив = Новый Массив;
		
		Массив.Добавить(Нстр("ru = 'В отчете об операциях с товарами, подлежащими прослеживаемости отображаются только операции, которые не попадают в книги покупок, продаж, журнал учета полученных, выставленных счетов-фактур. '"));
		Массив.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Подробнее'"),
		, , , "https://buh.ru/articles/documents/145520/"));
		
		Параметры.ЗаголовокБаннерВключениеФункциональностиПоПрослеживаемости = Новый ФорматированнаяСтрока(Массив, ШрифтыСтиля.ШрифтТекстаБаннера);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СообщениеОбОтсутствииДанныхВОтчете(Параметры) Экспорт
	
	Массив = Новый Массив;
	Массив.Добавить(Нстр("ru = 'Операций, подлежащих включению в отчет, не обнаружено. '"));
	Массив.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Подробнее'"),
	, , , "https://buh.ru/articles/documents/145520/"));
	
	ПоместитьВоВременноеХранилище(Новый ФорматированнаяСтрока(Массив, ШрифтыСтиля.ШрифтТекстаБаннера),
		Параметры.АдресВоВременномХранилищеПредупреждениеПослеАвтозаполнения); 

КонецПроцедуры
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПодобратьРНПТ(ДокументОбъект, Отказ, ИмяТабличнойЧасти = "Товары") Экспорт
	
	ТаблицаТоваров = ДокументОбъект[ИмяТабличнойЧасти].Выгрузить();
	
	Если ТаблицаТоваров.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	ПринятиеКУчетуОС = Ложь;
	КонтролироватьОстаток = НЕ БухгалтерскийУчетПереопределяемый.ОтключитьКонтрольОтрицательныхОстатков();
	ТаблицаРНПТИсходныйДокумент = ТаблицаРНПТИсходныйДокумент(ДокументОбъект, ТаблицаТоваров);
		
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВозвратТоваровОтПокупателя") Тогда
		ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.ДоговорКонтрагента, "ВидДоговора");
		Если ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером Тогда
			ТаблицаРНПТОстатки = ТаблицаРНПТОстатки(ДокументОбъект, ТаблицаТоваров, Истина);
		ИначеЕсли ТипЗнч(ДокументОбъект.Сделка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			ТаблицаРНПТОстатки = ТаблицаРНПТОстаткиВозвратОпт(ДокументОбъект, ТаблицаТоваров, ДокументОбъект.Сделка);
		ИначеЕсли ТипЗнч(ДокументОбъект.Сделка) = Тип("ДокументСсылка.РеализацияОтгруженныхТоваров") Тогда
			ДокументРеализации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.Сделка, "ДокументОтгрузки");
			ТаблицаРНПТОстатки = ТаблицаРНПТОстаткиВозвратОпт(ДокументОбъект, ТаблицаТоваров, ДокументРеализации);
		ИначеЕсли ТипЗнч(ДокументОбъект.Сделка) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
			ТаблицаРНПТОстатки = ТаблицаРНПТОстаткиВозвратРозница(ДокументОбъект, ТаблицаТоваров);
		ИначеЕсли ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийВозвратТоваровОтПокупателя.ВыкупленныеКомиссионеромТовары Тогда
			ТаблицаРНПТОстатки = ТаблицаРНПТОстатки(ДокументОбъект, ТаблицаТоваров, Истина);
		КонецЕсли;
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПринятиеКУчетуОС") Тогда
		ТаблицаРНПТОстатки = ПолучитьОстаткиДляПринятияКУчетуОС(ДокументОбъект, ТаблицаТоваров);
		ПринятиеКУчетуОС = Истина;
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.РеализацияТоваровУслуг")
		И ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.ВыкупТоваровКомиссионером Тогда
		ТаблицаРНПТОстатки = ТаблицаРНПТОстатки(ДокументОбъект, ТаблицаТоваров, Истина);
	Иначе
		ТаблицаРНПТОстатки = ТаблицаРНПТОстатки(ДокументОбъект, ТаблицаТоваров, Ложь);
	КонецЕсли;
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОтчетПроизводстваЗаСмену") И
		ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийОтчетПроизводстваЗаСмену.ВыпускПродукции Тогда
		ЭтоВыпускПродукции = Истина;
	Иначе
		ЭтоВыпускПродукции = Ложь;
	КонецЕсли;
	ЭтоВозвратКомитенту = Ложь;
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПередачаТоваров")
		И ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийПередачаТоваров.ПередачаТоваровКомитенту Тогда
		ЭтоПередачаТоваровКомитенту = Истина;
	Иначе
		ЭтоПередачаТоваровКомитенту = Ложь;
	КонецЕсли;
	
	ТаблицаРНПТОстатки.Колонки.Добавить("Сделка", Документы.ТипВсеСсылки());
	ЭтоВозвратВЕАЭС = Ложь;
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВозвратТоваровПоставщику") Тогда
		ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.ДоговорКонтрагента, "ВидДоговора");
		Если ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
			ЭтоВозвратКомитенту = Истина;
		КонецЕсли;
		
		ЭтоВозвратВЕАЭС = Справочники.Контрагенты.КонтрагентРезидентТаможенногоСоюза(ДокументОбъект.Контрагент);
		
		Если ЭтоВозвратВЕАЭС Тогда
			ТаблицаРНПТОстатки = ДополнитьТаблицуРНПТОстатки(ТаблицаРНПТОстатки);
		КонецЕсли;
		
	КонецЕсли;
	
	КолонкиТЧ = ДокументОбъект[ИмяТабличнойЧасти].ВыгрузитьКолонки();
	ЕстьКолонкаПрослеживаемыйКомплект = КолонкиТЧ.Колонки.Найти("ПрослеживаемыйКомплект") <> Неопределено;
	ЕстьКолонкаПрослеживаемыйТоварПоДокументуОснованию = КолонкиТЧ.Колонки.Найти("ПрослеживаемыйТоварПоДокументуОснованию") <> Неопределено;
	
	КолонкиСведенийПрослеживаемости = ДокументОбъект.СведенияПрослеживаемости.ВыгрузитьКолонки();
	ЕстьКолонкаКомитент = КолонкиСведенийПрослеживаемости.Колонки.Найти("Комитент") <> Неопределено;
	ЕстьКолонкаСтранаПроисхождения = КолонкиСведенийПрослеживаемости.Колонки.Найти("СтранаПроисхождения") <> Неопределено;
	ПараметрыПодбораРНПТ = ПодготовитьСтруктуруПараметровДляПодбораРНПТИзОстатков();
	ДопПараметрыДляСверкиОстатков = ДополнительныеПараметрыДляСверкиОстатковВПрослеживаемости();
	ДопПараметрыДляСверкиОстатков.ЭтоВыпускПродукции   = ЭтоВыпускПродукции;
	ДопПараметрыДляСверкиОстатков.ЭтоВозвратКомитенту  = ЭтоВозвратКомитенту;

	Для Каждого СтрокаТабличнойЧасти ИЗ ДокументОбъект[ИмяТабличнойЧасти] Цикл
		
		Если НЕ СтрокаТабличнойЧасти.ПрослеживаемыйТовар Тогда
			Продолжить;
		КонецЕсли;
		
		ОсталосьПодобрать = ?(ПринятиеКУчетуОС, 1, СтрокаТабличнойЧасти.Количество);
		
		Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.КорректировкаРеализации") Тогда
			СтруктураОтбора = Новый Структура("ИдентификаторСтроки, ЭтоСтрокаСИсходнымиРНПТ",
				СтрокаТабличнойЧасти.ИдентификаторСтроки, Ложь);
		Иначе
			СтруктураОтбора = Новый Структура("ИдентификаторСтроки", СтрокаТабличнойЧасти.ИдентификаторСтроки);
		КонецЕсли;
		
		СтрокиСРНПТ = ДокументОбъект.СведенияПрослеживаемости.НайтиСтроки(СтруктураОтбора);
		КоличествоРНПТ = СтрокиСРНПТ.Количество();
		
		Если ЕстьКолонкаПрослеживаемыйТоварПоДокументуОснованию
			И СтрокаТабличнойЧасти.ПрослеживаемыйТоварПоДокументуОснованию = Истина Тогда
			Если КоличествоРНПТ = 0 И СтрокаТабличнойЧасти.Количество > 0 Тогда
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Не заполнены РНПТ для товара %1'"),
				СтрокаТабличнойЧасти.Номенклатура);
				Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].РНПТ";
				
				ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
				Продолжить;
			КонецЕсли;
			
			КоличествоПоРНПТ = 0;
			Для Каждого Строка Из СтрокиСРНПТ Цикл
				КоличествоПоРНПТ = КоличествоПоРНПТ + Строка.Количество;
			КонецЦикла;
			
			Если КоличествоПоРНПТ <> СтрокаТабличнойЧасти.Количество И Не СтрокаТабличнойЧасти.ПрослеживаемыйКомплект Тогда
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Количество РНПТ не соответствует количеству товара %1'"),
				СтрокаТабличнойЧасти.Номенклатура);
				Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].РНПТ";
				
				ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
				Продолжить;
			КонецЕсли;
			
			Продолжить;
			
		КонецЕсли;
			
		Если КоличествоРНПТ = 0 Тогда
			
			Если ЕстьКолонкаПрослеживаемыйКомплект И СтрокаТабличнойЧасти.ПрослеживаемыйКомплект 
				И СтрокаТабличнойЧасти.Количество > 0 Тогда
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Не заполнены РНПТ для товара %1'"),
				СтрокаТабличнойЧасти.Номенклатура);
				Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].РНПТ";
				
				ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
				Продолжить;
			КонецЕсли;
				
			// Для корректировочного документа сначала подберем РНПТ из исходного документа.
			ПодобратьРНПТИзИсходногоДокумента(ДокументОбъект, ОсталосьПодобрать, СтрокаТабличнойЧасти, ТаблицаРНПТИсходныйДокумент);
			
			Если ОсталосьПодобрать <> 0 Тогда
				// Добавляем РНПТ из остатков.
				ПараметрыПодбораРНПТ.ОтобратьПоСделке = ЭтоВозвратВЕАЭС;
				ПараметрыПодбораРНПТ.ЕстьКомитент = ЕстьКолонкаКомитент;
				ПодобратьРНПТИзОстатков(ДокументОбъект, ОсталосьПодобрать, СтрокаТабличнойЧасти, ТаблицаРНПТОстатки, ПараметрыПодбораРНПТ);
			КонецЕсли;
			
			Если ОсталосьПодобрать <> 0 Тогда
				Если ЭтоВыпускПродукции Тогда
					ИмяТабличнойЧасти = "Продукция"; 
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='Для целей учета прослеживаемости не списано %1 материала %2 (%3)'"),
						Формат(ОсталосьПодобрать, "ЧЦ=15; ЧДЦ=3"),
						СтрокаТабличнойЧасти.Номенклатура,
						СтрокаТабличнойЧасти.СтранаПроисхождения);
					СтрокаПродукции = ДокументОбъект.Продукция.Найти(СтрокаТабличнойЧасти.КлючСтроки, "КлючСтроки");
					НомерСтроки = ?(СтрокаПродукции = Неопределено, 0,СтрокаПродукции.НомерСтроки-1);
					Поле = "" + ИмяТабличнойЧасти + "["+ Формат(НомерСтроки,"ЧГ=") + "].Материалы";
					ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументОбъект.Ссылка, Поле, , Отказ);
				
				ИначеЕсли ПринятиеКУчетуОС Тогда
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='Для целей учета прослеживаемости не подобрано %1 для %2 '"),
						Формат(ОсталосьПодобрать, "ЧЦ=15; ЧДЦ=3"),
						СтрокаТабличнойЧасти.ОсновноеСредство);
					Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].РНПТ";
					
					ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
					
				Иначе
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='Для целей учета прослеживаемости не списано %1 товара %2 (%3)'"),
						Формат(ОсталосьПодобрать, "ЧЦ=15; ЧДЦ=3"),
						СтрокаТабличнойЧасти.Номенклатура,
						СтрокаТабличнойЧасти.СтранаПроисхождения);
					Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].Количество";
					
					ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли КонтролироватьОстаток Тогда
			
			// Проверяем наличие указанных РНПТ на остатках
			Для Каждого СтрокаСРНПТ ИЗ СтрокиСРНПТ Цикл
				ТребуемоеКоличество = СтрокаСРНПТ.Количество;
				ТребуемоеКоличествоПрослеживаемости = СтрокаСРНПТ.КоличествоПрослеживаемости;
				
				// Сверка РНПТ с исходным документом реализации.
				СверитьОстаткиСИсходнымДокументомРеализации(СтрокаТабличнойЧасти, ТаблицаРНПТИсходныйДокумент, ТребуемоеКоличество, ТребуемоеКоличествоПрослеживаемости);
				
				Если ТребуемоеКоличество = 0 И ТребуемоеКоличествоПрослеживаемости = 0 Тогда
					// Значит в строке корректировочного документа только РНПТ из исходного документа реализации.
					Продолжить;
				КонецЕсли;
				
				// По новым РНПТ контролируем остатки в регистре.
				СтруктураСтроки = Новый Структура("Количество, КоличествоПрослеживаемости, РНПТ, Комитент");
				ЗаполнитьЗначенияСвойств(СтруктураСтроки, СтрокаСРНПТ); // РНПТ и возможно Комитент
				СтруктураСтроки.Количество                 = ТребуемоеКоличество;
				СтруктураСтроки.КоличествоПрослеживаемости = ТребуемоеКоличествоПрослеживаемости;
				
				Если ПринятиеКУчетуОС Тогда
					СтруктураСтроки.Вставить("СтранаПроисхождения", СтрокаСРНПТ.СтранаПроисхождения);
				КонецЕсли;
				Если (ЕстьКолонкаПрослеживаемыйКомплект И СтрокаТабличнойЧасти.ПрослеживаемыйКомплект) Тогда
					СтруктураСтроки.Вставить("СтранаПроисхождения",
					?(ЕстьКолонкаСтранаПроисхождения И Не ЭтоПередачаТоваровКомитенту, СтрокаСРНПТ.СтранаПроисхождения, СтрокаТабличнойЧасти.СтранаПроисхождения));
					СтруктураСтроки.Вставить("Номенклатура", СтрокаСРНПТ.Номенклатура);
				КонецЕсли;

				ДокументОснованиеВТЧ = Ложь;
				Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВозвратТоваровПоставщику") Тогда
					ДокументОснованиеВТЧ = ЗначениеЗаполнено(СтрокаТабличнойЧасти.Сделка);
				КонецЕсли;
				
				ДопПараметрыДляСверкиОстатков.ДокументОснованиеВТЧ = ДокументОснованиеВТЧ;
				ДопПараметрыДляСверкиОстатков.ЭтоКомплект          = ЕстьКолонкаПрослеживаемыйКомплект
														И СтрокаТабличнойЧасти.ПрослеживаемыйКомплект;
				
				СверитьСОстаткамиВПрослеживаемости(ДокументОбъект, Отказ, СтруктураСтроки, 
											СтрокаТабличнойЧасти, ТаблицаРНПТОстатки, ИмяТабличнойЧасти,
											ДопПараметрыДляСверкиОстатков);
				
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	КолонкиГруппировки = "РНПТ, ИдентификаторСтроки";
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.РеализацияТоваровУслуг")
	 Или ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОтчетКомиссионераОПродажах")
	 Или ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОтчетОРозничныхПродажах")
	 Или ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВозвратТоваровОтПокупателя")
	 Или ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВозвратТоваровПоставщику") Тогда
		КолонкиГруппировки = КолонкиГруппировки + ",Комитент";
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.КорректировкаРеализации") Тогда
		КолонкиГруппировки = КолонкиГруппировки + ",Комитент,ЭтоСтрокаСИсходнымиРНПТ";
	КонецЕсли;
	Если ПринятиеКУчетуОС Или ЕстьКолонкаСтранаПроисхождения Тогда
		КолонкиГруппировки = КолонкиГруппировки + ",СтранаПроисхождения";
	КонецЕсли;
	Если ЕстьКолонкаПрослеживаемыйКомплект Тогда
		КолонкиГруппировки = КолонкиГруппировки + ", Номенклатура";
	КонецЕсли;
	
	КолонкиСуммирования = "Количество, КоличествоПрослеживаемости";
	Если ЕстьКолонкаПрослеживаемыйКомплект Тогда
		КолонкиСуммирования = КолонкиСуммирования + ", Сумма";
	КонецЕсли;
	ДокументОбъект.СведенияПрослеживаемости.Свернуть(КолонкиГруппировки, КолонкиСуммирования);
	
КонецПроцедуры

Процедура СверитьРНПТПоРаботам(ДокументОбъект, Отказ) Экспорт
	
	ТаблицаУслуг = ДокументОбъект.Услуги.Выгрузить();
	
	Если ДокументОбъект.Услуги.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ДокументОбъект.СведенияПрослеживаемости.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	КонтролироватьОстаток = НЕ БухгалтерскийУчетПереопределяемый.ОтключитьКонтрольОтрицательныхОстатков();
	Если КонтролироватьОстаток Тогда
		ТаблицаРНПТИсходныйДокумент = ТаблицаРНПТИсходныйДокумент(ДокументОбъект, ТаблицаУслуг, Истина);
		
		ТаблицаРНПТОстатки = ТаблицаРНПТОстаткиПоРаботам(ДокументОбъект);
		
		ДопПараметрыДляСверкиОстатков = ДополнительныеПараметрыДляСверкиОстатковВПрослеживаемости();
		ДопПараметрыДляСверкиОстатков.ПередачаТоваровВСоставеРабот = Истина
	КонецЕсли;
	
	Для Каждого СтрокаТабличнойЧасти ИЗ ДокументОбъект.Услуги Цикл
		
		Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.КорректировкаРеализации") Тогда
			СтруктураОтбора = Новый Структура("ИдентификаторСтроки, ЭтоСтрокаСИсходнымиРНПТ",
			СтрокаТабличнойЧасти.ИдентификаторСтроки, Ложь);
		Иначе
			СтруктураОтбора = Новый Структура("ИдентификаторСтроки", СтрокаТабличнойЧасти.ИдентификаторСтроки);
		КонецЕсли;
		
		СтрокиСРНПТ = ДокументОбъект.СведенияПрослеживаемости.Выгрузить(СтруктураОтбора);
		КоличествоРНПТ = СтрокиСРНПТ.Количество();
		
		Если КоличествоРНПТ = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаТабличнойЧасти.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС
			Или СтрокаТабличнойЧасти.СтавкаНДС = Перечисления.СтавкиНДС.НДС0 Тогда
			ТребуетсяСуммаНДС = Ложь;
		Иначе 
			ТребуетсяСуммаНДС = Истина;
		КонецЕсли;
		
		Если СтрокаТабличнойЧасти.СуммаНДС < СтрокиСРНПТ.Итог("СуммаНДС") Тогда
			ТекстСообщения = НСтр("ru = 'Сумма НДС по прослеживаемым товарам больше суммы НДС по работе/услуге'");
			Поле = "Услуги" + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].РНПТ";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
		КонецЕсли;
		СуммаБезНДС = ?(ДокументОбъект.СуммаВключаетНДС, СтрокаТабличнойЧасти.Сумма - СтрокаТабличнойЧасти.СуммаНДС, СтрокаТабличнойЧасти.Сумма);
		Если СуммаБезНДС < СтрокиСРНПТ.Итог("Сумма") Тогда 
			ТекстСообщения = НСтр("ru = 'Сумма без НДС по прослеживаемым товарам больше суммы без НДС по работе/услуге'");
			
			Поле = "Услуги" + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].РНПТ";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
		КонецЕсли;
		
		Если КонтролироватьОстаток Тогда
			
			// Проверяем наличие указанных РНПТ на остатках
			Для Каждого СтрокаСРНПТ ИЗ СтрокиСРНПТ Цикл
				ТребуемоеКоличество = СтрокаСРНПТ.Количество;
				ТребуемоеКоличествоПрослеживаемости = СтрокаСРНПТ.КоличествоПрослеживаемости;
				
				// Сверка РНПТ с исходным документом реализации.
				СверитьОстаткиСИсходнымДокументомРеализации(СтрокаТабличнойЧасти, ТаблицаРНПТИсходныйДокумент, ТребуемоеКоличество, ТребуемоеКоличествоПрослеживаемости, Истина);
				
				Если ТребуемоеКоличество = 0 И ТребуемоеКоличествоПрослеживаемости = 0 Тогда
					// Значит в строке корректировочного документа только РНПТ из исходного документа реализации.
					Продолжить;
				КонецЕсли;
				
				// По новым РНПТ контролируем остатки в регистре.
				СтруктураСтроки = Новый Структура("Количество, КоличествоПрослеживаемости, РНПТ, Номенклатура, СтранаПроисхождения");
				ЗаполнитьЗначенияСвойств(СтруктураСтроки, СтрокаСРНПТ);
				СтруктураСтроки.Количество                 = ТребуемоеКоличество;
				СтруктураСтроки.КоличествоПрослеживаемости = ТребуемоеКоличествоПрослеживаемости;
				
				СверитьСОстаткамиВПрослеживаемости(ДокументОбъект, Отказ, СтруктураСтроки, 
				СтрокаТабличнойЧасти, ТаблицаРНПТОстатки, "Услуги",
				ДопПараметрыДляСверкиОстатков);
				
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	КолонкиГруппировки = "РНПТ, ИдентификаторСтроки, Номенклатура, СтранаПроисхождения";
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.КорректировкаРеализации") Тогда
		КолонкиГруппировки = КолонкиГруппировки + ",ЭтоСтрокаСИсходнымиРНПТ";
	КонецЕсли;
	
	КолонкиСуммирования = "Количество, КоличествоПрослеживаемости, Сумма, СуммаНДС";
	ДокументОбъект.СведенияПрослеживаемости.Свернуть(КолонкиГруппировки, КолонкиСуммирования);
	
КонецПроцедуры

Процедура СформироватьДвиженияРеализацияТоваров(ТаблицаТовары, ТаблицаОперации, ТаблицаРеквизиты, Движения) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	ОбщиеПараметры = ПодготовитьОбщиеПараметры(ТаблицаРеквизиты);
	Реквизиты = ОбщиеПараметры.Реквизиты[0];
	
	СформироватьДвиженияПрослеживаемыхТоваров(ТаблицаТовары, Реквизиты, Движения, Истина);
		
	Если Реквизиты.Владелец().Колонки.Найти("Контрагент") <> Неопределено И Реквизиты.Контрагент <> Неопределено Тогда
		
		СтранаРегистрацииКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Реквизиты.Контрагент, "СтранаРегистрации");
		
		Если Справочники.СтраныМира.ГосударствоЧленТаможенногоСоюза(СтранаРегистрацииКонтрагента) Тогда
			
			Если ТипЗнч(Реквизиты.Регистратор) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
				РегистрыСведений.РегистрацияПрослеживаемыхТоваров.ОбновитьСостояние(Реквизиты.Регистратор, Реквизиты.Регистратор);
			КонецЕсли;
				
			Возврат;
		КонецЕсли;
	КонецЕсли;

	СформироватьДвиженияОперацииСПрослеживаемымиТоварами(ТаблицаОперации, Реквизиты, Движения);
	
КонецПроцедуры

Процедура СформироватьДвиженияКорректировкаРеализацииТоваров(ТаблицаТоварыУвеличение, ТаблицаТоварыУменьшение, ТаблицаОперации, ТаблицаРеквизиты, Движения) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	ОбщиеПараметры = ПодготовитьОбщиеПараметры(ТаблицаРеквизиты);
	Реквизиты = ОбщиеПараметры.Реквизиты[0];
	
	Если Реквизиты.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером Тогда
		
		СформироватьДвиженияПрослеживаемыхТоваров(ТаблицаТоварыУвеличение, Реквизиты, Движения, Ложь);
		СформироватьДвиженияПрослеживаемыхТоваров(ТаблицаТоварыУменьшение, Реквизиты, Движения, Истина);
		Если ТаблицаТоварыУвеличение <> Неопределено Тогда
			ТаблицаТоварыУвеличение.ЗаполнитьЗначения(Справочники.Контрагенты.ПустаяСсылка(), "Комиссионер");
		КонецЕсли;
		Если ТаблицаТоварыУменьшение <> Неопределено Тогда
			ТаблицаТоварыУменьшение.ЗаполнитьЗначения(Справочники.Контрагенты.ПустаяСсылка(), "Комиссионер");
		КонецЕсли;
	КонецЕсли;
	
		СформироватьДвиженияПрослеживаемыхТоваров(ТаблицаТоварыУвеличение, Реквизиты, Движения, Истина);
		СформироватьДвиженияПрослеживаемыхТоваров(ТаблицаТоварыУменьшение, Реквизиты, Движения, Ложь);
	
	СформироватьДвиженияОперацииСПрослеживаемымиТоварами(ТаблицаОперации, Реквизиты, Движения);
	
КонецПроцедуры

Процедура СформироватьРегистрациюКорректировкиРеализацииПрослеживаемыхТоваров(ТаблицаРеквизиты) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	ОбщиеПараметры = ПодготовитьОбщиеПараметры(ТаблицаРеквизиты);
	Реквизиты = ОбщиеПараметры.Реквизиты[0];
	
	Если Реквизиты.ДатаОтгрузки < ПрослеживаемостьБРУ.ДатаНачалаУчетаПрослеживаемыхТоваров()
		И ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(Реквизиты.Период)
		И Реквизиты.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером Тогда
		
		РегистрыСведений.РегистрацияПрослеживаемыхТоваров.ОбновитьСостояние(Реквизиты.Регистратор, Реквизиты.Регистратор);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьДвиженияКорректировкаПоступленияТоваров(ТаблицаТоварыУвеличение, ТаблицаТоварыУменьшение, ТаблицаОперации, ТаблицаРеквизиты, Движения) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	ОбщиеПараметры = ПодготовитьОбщиеПараметры(ТаблицаРеквизиты);
	Реквизиты = ОбщиеПараметры.Реквизиты[0];
	
	СформироватьДвиженияПрослеживаемыхТоваров(ТаблицаТоварыУвеличение, Реквизиты, Движения, Ложь);
	СформироватьДвиженияПрослеживаемыхТоваров(ТаблицаТоварыУменьшение, Реквизиты, Движения, Истина);
	
	СформироватьДвиженияОперацииСПрослеживаемымиТоварами(ТаблицаОперации, Реквизиты, Движения);
	
	СтранаРегистрацииКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Реквизиты.Контрагент, "СтранаРегистрации");
		
	Если Справочники.СтраныМира.ГосударствоЧленТаможенногоСоюза(СтранаРегистрацииКонтрагента) Тогда
			
		РегистрыСведений.РегистрацияПрослеживаемыхТоваров.ОбновитьСостояние(Реквизиты.Регистратор, Реквизиты.Регистратор);
				
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьДвиженияПоступлениеТоваров(ТаблицаТовары, ТаблицаОперации, ТаблицаРНПТ, ТаблицаРеквизиты, Движения) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	ОбщиеПараметры = ПодготовитьОбщиеПараметры(ТаблицаРеквизиты);
	Реквизиты = ОбщиеПараметры.Реквизиты[0];
	
	СформироватьДвиженияПрослеживаемыхТоваров(ТаблицаТовары, Реквизиты, Движения);
	
	СформироватьДвиженияОперацииСПрослеживаемымиТоварами(ТаблицаОперации, Реквизиты, Движения);
	
	Если Реквизиты.Владелец().Колонки.Найти("СтранаРегистрации") <> Неопределено Тогда 
		
		ЭтоПоступлениеИзЕАЭС = Справочники.СтраныМира.ГосударствоЧленТаможенногоСоюза(Реквизиты.СтранаРегистрации);
		
		Если ЭтоПоступлениеИзЕАЭС Тогда
			ПередачаНаКомиссию = Ложь;
			Если Реквизиты.Владелец().Колонки.Найти("ВидДоговора") <> Неопределено 
				И Реквизиты.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером Тогда
				ПередачаНаКомиссию = Истина;
			КонецЕсли;
			Если Не ПередачаНаКомиссию 
				И ТипЗнч(Реквизиты.Регистратор) <> Тип("ДокументСсылка.РеализацияТоваровУслуг")
				И ТипЗнч(Реквизиты.Регистратор) <> Тип("ДокументСсылка.ВозвратТоваровОтПокупателя")
				И ТипЗнч(Реквизиты.Регистратор) <> Тип("ДокументСсылка.СчетФактураПолученный") Тогда
				
				Если ПолучитьФункциональнуюОпцию("ИспользоватьВалютныйУчет") Тогда
					
					ВалютаПоУмолчанию = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
					
					Если Реквизиты.Владелец().Колонки.Найти("ВалютаВзаиморасчетов") <> Неопределено 
						И Реквизиты.ВалютаВзаиморасчетов <> ВалютаПоУмолчанию Тогда
						Движения.Записать();
					КонецЕсли;
					
				КонецЕсли;
				
				РегистрыСведений.РегистрацияПрослеживаемыхТоваров.ОбновитьСостояние(Реквизиты.Регистратор, Реквизиты.Регистратор);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьСвойстваРНПТ(ТаблицаРНПТ, Реквизиты);
	
КонецПроцедуры

Процедура СформироватьДвиженияОперацииСПрослеживаемымиТоварами(ТаблицаОперации, Реквизиты, Движения, ОС = Ложь) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаОперации) Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыОперацииСПрослеживаемымиТоварами(ТаблицаОперации, ОС);
	
	Для Каждого СтрокаТаблицы Из Параметры.Операции Цикл
		Запись = Движения.ОперацииСПрослеживаемымиТоварами.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, Реквизиты);
		ЗаполнитьЗначенияСвойств(Запись, СтрокаТаблицы);
		Если СтрокаТаблицы.ОтражениеВОтчетности <> Перечисления.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях Тогда
			Запись.СуммаБезНДС = Окр(Запись.СуммаБезНДС, 0);
		КонецЕсли;
	КонецЦикла;
	
	Движения.ОперацииСПрослеживаемымиТоварами.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьОбщиеПараметры(ТаблицаРеквизиты) Экспорт
	
	Параметры = Новый Структура("Реквизиты", Неопределено);
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат Параметры;
	КонецЕсли;
	
	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "Регистратор," // <ДокументСсылка>
	+ "Организация";// <СправочникСсылка.Организации>
	
	// Реквизиты "Страна регистрации" и "Контрагент" будут только в случаях, если движения формируются к документам:
	// - Поступление товаров и услуг
	// - Реализация товаров и услуг
	// в остальных случаях эти реквизиты отсутствуют. 
	Если ТаблицаРеквизиты.Колонки.Найти("СтранаРегистрации") <> Неопределено Тогда 
		СписокОбязательныхКолонок = СписокОбязательныхКолонок + ", СтранаРегистрации";// <СправочникСсылка.СтраныМира>
	КонецЕсли;
	Если ТаблицаРеквизиты.Колонки.Найти("Контрагент") <> Неопределено Тогда
		СписокОбязательныхКолонок = СписокОбязательныхКолонок + ", Контрагент"; // <СправочникСсылка.Контрагенты>
	КонецЕсли;
	Если ТаблицаРеквизиты.Колонки.Найти("ВидДоговора") <> Неопределено Тогда
		СписокОбязательныхКолонок = СписокОбязательныхКолонок + ", ВидДоговора"; // <ПеречислениеСсылка.ВидыДоговоровКонтрагентов>
	КонецЕсли;
	Если ТаблицаРеквизиты.Колонки.Найти("ВалютаВзаиморасчетов") <> Неопределено Тогда
		СписокОбязательныхКолонок = СписокОбязательныхКолонок + ", ВалютаВзаиморасчетов"; // <СправочникСсылка.Валюты>
	КонецЕсли;
	
	Если ТаблицаРеквизиты.Колонки.Найти("ДатаОтгрузки") <> Неопределено Тогда
		СписокОбязательныхКолонок = СписокОбязательныхКолонок + ", ДатаОтгрузки"; // <Дата>
	КонецЕсли;
	Если ТаблицаРеквизиты.Колонки.Найти("ДокументПоступленияДата") <> Неопределено Тогда
		СписокОбязательныхКолонок = СписокОбязательныхКолонок + ", ДокументПоступленияДата"; // <Дата>
	КонецЕсли;
	
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизиты, СписокОбязательныхКолонок));
		
	Возврат Параметры;
	
КонецФункции

Процедура ДополнительныеСведенияДляОтчетаОбОперациях(МенеджерВременныхТаблиц) Экспорт
	
	// Дополнительные сведения о контрагенте
	УчетНДС.РегистрационныеСведенияНаДаты(МенеджерВременныхТаблиц);
	
	// Дополнительные сведения о номенклатуре
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НоменклатураОпераций.НоменклатураСсылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА НоменклатураОпераций.НоменклатураСсылка ССЫЛКА Справочник.ОсновныеСредства
	|			ТОГДА ""796""
	|		ИНАЧЕ Номенклатура.КодТНВЭД.ЕдиницаИзмерения.Код
	|	КОНЕЦ КАК ЕдиницаИзмеренияПрослеживаемости
	|ПОМЕСТИТЬ СведенияОНоменклатуре
	|ИЗ
	|	НоменклатураОпераций КАК НоменклатураОпераций
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО НоменклатураОпераций.НоменклатураСсылка = Номенклатура.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НоменклатураОпераций.НоменклатураСсылка";
	
	Запрос.Выполнить();

КонецПроцедуры

Функция ПодготовитьТаблицуПоПрослеживаемымОперациям(ПрослеживаемыеОперации, ТаблицаСписанныеТовары, ЕстьИдСтроки = Истина ) Экспорт
	
	Если ПрослеживаемыеОперации = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ТаблицаСписанныеТовары = Неопределено Тогда
		Возврат ПрослеживаемыеОперации;
	КонецЕсли;
	
	Если ЕстьИдСтроки Тогда 
		ТаблицаСумм = ТаблицаСписанныеТовары.Скопировать(, "ИдентификаторСтроки, СуммаСписания");
		ТаблицаСумм.Свернуть("ИдентификаторСтроки", "СуммаСписания");
		Для Каждого Строка Из ПрослеживаемыеОперации Цикл
			Если Строка.ПрослеживаемыйКомплект Тогда
				Продолжить;
			КонецЕсли;
			СтрокаССуммой = ТаблицаСумм.Найти(Строка.ИдентификаторСтроки, "ИдентификаторСтроки");
			Если СтрокаССуммой <> Неопределено Тогда
				Строка.СуммаБезНДС = СтрокаССуммой.СуммаСписания;
			КонецЕсли;
		КонецЦикла;
	Иначе
		ТаблицаСумм = ТаблицаСписанныеТовары.Скопировать(, "Номенклатура, Количество, Сумма");
		ТаблицаСумм.Свернуть("Номенклатура", "Количество, Сумма");
		Для Каждого Строка Из ПрослеживаемыеОперации Цикл
			Если Строка.ПрослеживаемыйКомплект Тогда
				Продолжить;
			КонецЕсли;
			СтрокаССуммой = ТаблицаСумм.Найти(Строка.Номенклатура, "Номенклатура");
			Если СтрокаССуммой <> Неопределено Тогда
				Если Строка.Количество <=  СтрокаССуммой.Количество Тогда
					Строка.СуммаБезНДС = СтрокаССуммой.Сумма;
				Иначе
					Строка.СуммаБезНДС = СтрокаССуммой.Сумма / СтрокаССуммой.Количество * Строка.Количество;
					СтрокаССуммой.Количество = СтрокаССуммой.Количество - Строка.Количество;
					СтрокаССуммой.Сумма= СтрокаССуммой - Строка.СуммаБезНДС;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ПрослеживаемыеОперации;
		
КонецФункции

Процедура УстановитьСвойстваРНПТ(ТаблицаРНПТ, Реквизиты) Экспорт
	
	Если ТаблицаРНПТ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыСвойстваРНПТ(ТаблицаРНПТ);
	
	Для Каждого СтрокаТаблицы Из Параметры.ТаблицаРНПТ Цикл
		
		МенеджерЗаписи = РегистрыСведений.СвойстваРНПТ.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Организация = Реквизиты.Организация;
		МенеджерЗаписи.РНПТ = СтрокаТаблицы.РНПТ;
		МенеджерЗаписи.ДатаПоступления = Реквизиты.Период;
		МенеджерЗаписи.Записать();
		
		Если СтрокаТаблицы.ПерезаписатьРНПТ Тогда
			Справочники.НомераГТД.УстановитьПризнакРНПТ(СтрокаТаблицы.РНПТ, Истина, Ложь);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПодготовитьТаблицыПоПрослеживаемости(Реквизиты, ПрослеживаемыеТовары, ПрослеживаемыеОперации) Экспорт
	
	ТаблицаПрослеживаемыеТоварыКомиссия = Неопределено;
	ТаблицаПрослеживаемыеОперации       = ПрослеживаемыеОперации;
	СтруктураТаблиц = Новый Структура();
	СтруктураТаблиц.Вставить("ПрослеживаемыеТоварыКомиссия", ТаблицаПрослеживаемыеТоварыКомиссия);
	СтруктураТаблиц.Вставить("ПрослеживаемыеОперации",       ТаблицаПрослеживаемыеОперации);
	
	Если ПрослеживаемыеТовары = Неопределено Тогда
		Возврат СтруктураТаблиц;
	КонецЕсли;
	
	Если Реквизиты.Колонки.Найти("СтранаРегистрации") <> Неопределено Тогда 
		
		КонтрагентИзЕАЭС = Справочники.СтраныМира.ГосударствоЧленТаможенногоСоюза(Реквизиты[0].СтранаРегистрации);
		Если КонтрагентИзЕАЭС Тогда
			ТаблицаПрослеживаемыеОперации = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	ДоговорСКомиссионером = Реквизиты[0].ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером;
	ДоговорСКомитентом = Реквизиты[0].ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом;

	Если ДоговорСКомиссионером Тогда
		ТаблицаПрослеживаемыеТоварыКомиссия = ПрослеживаемыеТовары.Скопировать();
		ТаблицаПрослеживаемыеТоварыКомиссия.ЗаполнитьЗначения(Реквизиты[0].Контрагент, "Комиссионер");
		ТаблицаПрослеживаемыеОперации = Неопределено;
	КонецЕсли;
	
	Если ДоговорСКомитентом Тогда
		ТаблицаПрослеживаемыеТоварыКомиссия = ПрослеживаемыеТовары;
		ТаблицаПрослеживаемыеОперации = Неопределено;
	КонецЕсли;
	
	СтруктураТаблиц.ПрослеживаемыеТоварыКомиссия = ТаблицаПрослеживаемыеТоварыКомиссия;
	СтруктураТаблиц.ПрослеживаемыеОперации       = ТаблицаПрослеживаемыеОперации;
	
	Возврат СтруктураТаблиц;
	
КонецФункции

#Область ПроведениеИнвентаризации

Процедура ЗарегистрироватьПрослеживаемыйТовар(ТаблицаРеквизиты) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
		
	Параметры = ПодготовитьПараметрыРегистрацииПрослеживаемогоТовара(ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
	
	РегистрыСведений.РегистрацияПрослеживаемыхТоваров.ОбновитьСостояние(Реквизиты.Регистратор, Реквизиты.Регистратор);
	
КонецПроцедуры

Функция ЭтоПерваяИнвентаризацияПоПрослеживаемости(ДокументОснование, Реквизиты) Экспорт
	
	Организация = Реквизиты.Организация;
	Период = Реквизиты.Дата;
	Склад = Реквизиты.Склад;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("Склад",          Склад);
	Запрос.УстановитьПараметр("ДатаНачала",     ПрослеживаемостьБРУ.ДатаНачалаУчетаПрослеживаемыхТоваров());
	Запрос.УстановитьПараметр("ДатаОкончания",  Период);
	Запрос.УстановитьПараметр("Ссылка",  ДокументОснование);
	
	//По текущему товару нужно найти инвентаризации
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИнвентаризацияТоваровНаСкладеТовары.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	Документ.ИнвентаризацияТоваровНаСкладе.Товары КАК ИнвентаризацияТоваровНаСкладеТовары
	|ГДЕ
	|	ИнвентаризацияТоваровНаСкладеТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ИнвентаризацияТоваровНаСкладеТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИнвентаризацияТоваровНаСкладе.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ИнвентаризацияТоваровНаСкладе.Товары КАК ИнвентаризацияТоваровНаСкладеТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияТоваровНаСкладе КАК ИнвентаризацияТоваровНаСкладе
	|		ПО ИнвентаризацияТоваровНаСкладеТовары.Ссылка = ИнвентаризацияТоваровНаСкладе.Ссылка
	|ГДЕ
	|	ИнвентаризацияТоваровНаСкладе.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ИнвентаризацияТоваровНаСкладе.Организация = &Организация
	|	И ИнвентаризацияТоваровНаСкладе.Склад = &Склад
	|	И ИнвентаризацияТоваровНаСкладе.Проведен = ИСТИНА
	|	И ИнвентаризацияТоваровНаСкладе.Ссылка <> &Ссылка
	|	И ИнвентаризацияТоваровНаСкладеТовары.Номенклатура В
	|			(ВЫБРАТЬ
	|				ТаблицаТоваров.Номенклатура
	|			ИЗ
	|				ТаблицаТоваров)
	|
	|СГРУППИРОВАТЬ ПО
	|	ИнвентаризацияТоваровНаСкладе.Ссылка";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	// Если есть инвентаризации ранее, то по прослеживаемому товару движения не делаем
	Если Выборка.Следующий() Тогда
		
		Возврат Ложь;
		
	КонецЕсли;

	
	Возврат Истина;
	
КонецФункции

Функция КоличествоРНПТКСтроке(МассивСтрокСведенияПрослеживаемости) Экспорт
	
	КоличествоРНПТКСтроке = 0;
	Для Каждого ЭлементМассива Из МассивСтрокСведенияПрослеживаемости Цикл
		КоличествоРНПТКСтроке = КоличествоРНПТКСтроке + ЭлементМассива.Количество;
	КонецЦикла;
	
	Возврат КоличествоРНПТКСтроке;
	
КонецФункции

Процедура ЗарегистрироватьПрослеживаемыйОС(ТаблицаРеквизиты) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
		
	Параметры = ПодготовитьПараметрыРегистрацииПрослеживаемогоОС(ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
	
	РегистрыСведений.РегистрацияПрослеживаемыхТоваров.ОбновитьСостояние(Реквизиты.Регистратор, Реквизиты.Регистратор);
	
КонецПроцедуры

#КонецОбласти

// Переопределяемая процедура обработки проведения документов 
// "Уведомление об остатках прослеживаемых товаров" и "Уведомление о ввозе прослеживаемых товаров"
// 
// Параметры:
//  ПараметрыПроведения - Структура таблиц см. Документы.УведомлениеОбОстаткахПрослеживаемыхТоваров.ПодготовитьПараметрыПроведения и 
//                        Документы.УведомлениеОВвозеПрослеживаемыхТоваров.ПодготовитьПараметрыПроведения
//  Движения - ссылка на движения документа
//  Отказ - Булево - признак отказа от записи
//
Процедура ОбработкаПроведенияУведомления(ПараметрыПроведения, Движения, Отказ) Экспорт
	
	// Формируем таблицу для движений по регистру накопления ПрослеживаемыеТовары
	СтруктураТаблицПоДвижениямСРНПТ = ПодготовитьТаблицуРНПТ(
		ПараметрыПроведения.ТаблицаТоваров, 
		ПараметрыПроведения.ТаблицаОС,
		ПараметрыПроведения.Реквизиты, Отказ);
		
	СформироватьДвиженияПрослеживаемостьТоваров(
		СтруктураТаблицПоДвижениямСРНПТ.ТаблицаТоваровСРНПТ,
		Движения,
		Отказ);
		
	Если ЗначениеЗаполнено(СтруктураТаблицПоДвижениямСРНПТ.ТаблицаОССРНПТ) Тогда
		
		СформироватьДвиженияПрослеживаемостьОС(
			СтруктураТаблицПоДвижениямСРНПТ.ТаблицаОССРНПТ,
			Движения,
			Отказ);
			
	КонецЕсли;
		
	// Формируем движения по свойствам РНПТ для корректного списания товаров по ФИФО.
	Если ЗначениеЗаполнено(СтруктураТаблицПоДвижениямСРНПТ.ТаблицаТоваровСРНПТ)
		И ЗначениеЗаполнено(ПараметрыПроведения.Реквизиты) Тогда
		РазличныеРНПТ = СтруктураТаблицПоДвижениямСРНПТ.ТаблицаТоваровСРНПТ.Скопировать();
		РазличныеРНПТ.Свернуть("РНПТ");
		ПрослеживаемостьБП.УстановитьСвойстваРНПТ(РазличныеРНПТ, ПараметрыПроведения.Реквизиты[0]);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураТаблицПоДвижениямСРНПТ.ТаблицаОССРНПТ)
		И ЗначениеЗаполнено(ПараметрыПроведения.Реквизиты) Тогда
		РазличныеРНПТ = СтруктураТаблицПоДвижениямСРНПТ.ТаблицаОССРНПТ.Скопировать();
		РазличныеРНПТ.Свернуть("РНПТ");
		ПрослеживаемостьБП.УстановитьСвойстваРНПТ(РазличныеРНПТ, ПараметрыПроведения.Реквизиты[0]);
	КонецЕсли;
	
	// Формируем таблицу для движений по счету ГТД
	ТаблицаОстатковГТД = ПодготовитьТаблицуОстатковГТД(ПараметрыПроведения.ТаблицаТоваров,
		ПараметрыПроведения.Реквизиты, Отказ);
		
	СформироватьДвиженияГТД(
		ТаблицаОстатковГТД,
		Движения,
		Отказ);
		
КонецПроцедуры

#Область УдалениеПроведения

// Процедура удаления проведения первичных документов
// 
// Параметры:
// Регистратор - ДокументСсылка - Документ регистратор
// 
Процедура УдалениеПроведенияПервичногоДокумента(Регистратор) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПрослеживаемыхТоваров") Тогда
		Возврат;
	КонецЕсли;
	
	РегистрыСведений.РегистрацияПрослеживаемыхТоваров.ОбновитьСостояниеУдалениеПроведенияПервичногоДокумента(Регистратор);
	
КонецПроцедуры

#КонецОбласти

#Область ПомощникПолученияРНПТ

Функция ПолучитьНачальныеДанныеОС(Период, Организация) Экспорт

	Запрос = Новый Запрос();

	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Организация",  Организация);
	Запрос.УстановитьПараметр("НачалоПериода", ПрослеживаемостьБРУ.ДатаНачалаУчетаПрослеживаемыхТоваров());
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Период));

	Запрос.Текст =
	"ВЫБРАТЬ
	|	МестонахождениеОСБухгалтерскийУчет.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОСБухгалтерскийУчет.Местонахождение КАК Местонахождение
	|ПОМЕСТИТЬ МестонахождениеОСБУ
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&Период, ) КАК МестонахождениеОСБухгалтерскийУчет
	|ГДЕ
	|	МестонахождениеОСБухгалтерскийУчет.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОСБУ.Местонахождение КАК ПодразделениеОрганизации,
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета КАК СчетУчета,
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации
	|ПОМЕСТИТЬ ОсновныеСредства
	|ИЗ
	|	МестонахождениеОСБУ КАК МестонахождениеОСБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(&Период, Организация = &Организация) КАК СчетаБухгалтерскогоУчетаОССрезПоследних
	|		ПО МестонахождениеОСБУ.ОсновноеСредство = СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций.СрезПоследних КАК СостоянияОСОрганизацийСрезПоследних
	|		ПО МестонахождениеОСБУ.ОсновноеСредство = СостоянияОСОрганизацийСрезПоследних.ОсновноеСредство
	|			И (СостоянияОСОрганизацийСрезПоследних.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
	|ГДЕ
	|	МестонахождениеОСБУ.ОсновноеСредство.ПрослеживаемыйТовар
	|	И СостоянияОСОрганизацийСрезПоследних.ДатаСостояния <= &НачалоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ХозрасчетныйОстатки_ВосстановительнаяСтоимость.СуммаОстатокДт, 0) КАК Сумма,
	|	1 КАК Количество,
	|	ВЫРАЗИТЬ(ХозрасчетныйОстатки_ВосстановительнаяСтоимость.Субконто1 КАК Справочник.ОсновныеСредства) КАК ОсновноеСредство
	|ПОМЕСТИТЬ ДетальнаяТаблицаОстатковОС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ОсновныеСредства.СчетУчета
	|				ИЗ
	|					ОсновныеСредства),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.ОсновныеСредства) В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ОсновныеСредства.ОсновноеСредство
	|					ИЗ
	|						ОсновныеСредства)) КАК ХозрасчетныйОстатки_ВосстановительнаяСтоимость
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	-ЕСТЬNULL(ХозрасчетныйОстатки_ВосстановительнаяСтоимость.СуммаОстатокКт, 0),
	|	1,
	|	ВЫРАЗИТЬ(ХозрасчетныйОстатки_ВосстановительнаяСтоимость.Субконто1 КАК Справочник.ОсновныеСредства)
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ОсновныеСредства.СчетНачисленияАмортизации
	|				ИЗ
	|					ОсновныеСредства),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.ОсновныеСредства) В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ОсновныеСредства.ОсновноеСредство
	|					ИЗ
	|						ОсновныеСредства)) КАК ХозрасчетныйОстатки_ВосстановительнаяСтоимость
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ДетальнаяТаблицаОстатковОС.Сумма) КАК Сумма,
	|	ДетальнаяТаблицаОстатковОС.Количество КАК Количество,
	|	ДетальнаяТаблицаОстатковОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТаблицаОстатковОС
	|ИЗ
	|	ДетальнаяТаблицаОстатковОС КАК ДетальнаяТаблицаОстатковОС
	|
	|СГРУППИРОВАТЬ ПО
	|	ДетальнаяТаблицаОстатковОС.Количество,
	|	ДетальнаяТаблицаОстатковОС.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрацияПрослеживаемыхТоваров.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(РегистрацияПрослеживаемыхТоваров.Количество) КАК Количество,
	|	СУММА(РегистрацияПрослеживаемыхТоваров.Сумма) КАК Сумма,
	|	РегистрацияПрослеживаемыхТоваров.Основание КАК ДокументРегистрации,
	|	РегистрацияПрослеживаемыхТоваров.ТНВЭД КАК ТНВЭД
	|ПОМЕСТИТЬ ЗарегистрированныеОстаткиПоОснованию
	|ИЗ
	|	РегистрСведений.РегистрацияПрослеживаемыхТоваров КАК РегистрацияПрослеживаемыхТоваров
	|ГДЕ
	|	РегистрацияПрослеживаемыхТоваров.Организация = &Организация
	|	И РегистрацияПрослеживаемыхТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацииПрослеживаемыхТоваров.ИнвентаризацияОС)
	|	И РегистрацияПрослеживаемыхТоваров.ПериодСобытия <= КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрацияПрослеживаемыхТоваров.ОсновноеСредство,
	|	РегистрацияПрослеживаемыхТоваров.Основание,
	|	РегистрацияПрослеживаемыхТоваров.ТНВЭД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РегистрацияПрослеживаемыхТоваров.ОсновноеСредство,
	|	СУММА(РегистрацияПрослеживаемыхТоваров.Количество),
	|	СУММА(РегистрацияПрослеживаемыхТоваров.Сумма),
	|	РегистрацияПрослеживаемыхТоваров.Основание,
	|	NULL
	|ИЗ
	|	РегистрСведений.РегистрацияПрослеживаемыхТоваров КАК РегистрацияПрослеживаемыхТоваров
	|ГДЕ
	|	РегистрацияПрослеживаемыхТоваров.Организация = &Организация
	|	И РегистрацияПрослеживаемыхТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацииПрослеживаемыхТоваров.РегистрацияКомплектующихОС)
	|	И РегистрацияПрослеживаемыхТоваров.ПериодСобытия <= КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
	|	И НЕ РегистрацияПрослеживаемыхТоваров.Основание = НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрацияПрослеживаемыхТоваров.ОсновноеСредство,
	|	РегистрацияПрослеживаемыхТоваров.Основание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрослеживаемыеОСОбороты.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ПрослеживаемыеОСОбороты.КоличествоПриход) КАК КоличествоПриход,
	|	СУММА(ПрослеживаемыеОСОбороты.КоличествоРасход) КАК КоличествоРасход,
	|	ПрослеживаемыеОСОбороты.РНПТ КАК РНПТ,
	|	ВЫБОР
	|		КОГДА НЕ ПрослеживаемыеОСОбороты.Регистратор ССЫЛКА Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоРНПТОтПоставщика
	|ПОМЕСТИТЬ ПрослеживаемыеОССРНПТ
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеОсновныеСредства.Обороты(&НачалоПериода, &Период, Регистратор, Организация = &Организация) КАК ПрослеживаемыеОСОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрослеживаемыеОСОбороты.ОсновноеСредство,
	|	ПрослеживаемыеОСОбороты.РНПТ,
	|	ВЫБОР
	|		КОГДА НЕ ПрослеживаемыеОСОбороты.Регистратор ССЫЛКА Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрослеживаемыеОССРНПТ.РНПТ КАК РНПТ
	|ПОМЕСТИТЬ СписокРНПТОтПоставщика
	|ИЗ
	|	ПрослеживаемыеОССРНПТ КАК ПрослеживаемыеОССРНПТ
	|ГДЕ
	|	ПрослеживаемыеОССРНПТ.ЭтоРНПТОтПоставщика = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрослеживаемыеОССРНПТ.РНПТ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрослеживаемыеОССРНПТ.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ПрослеживаемыеОССРНПТ.КоличествоПриход - ПрослеживаемыеОССРНПТ.КоличествоРасход) КАК Остаток
	|ПОМЕСТИТЬ ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика
	|ИЗ
	|	ПрослеживаемыеОССРНПТ КАК ПрослеживаемыеОССРНПТ
	|ГДЕ
	|	ПрослеживаемыеОССРНПТ.РНПТ В
	|			(ВЫБРАТЬ
	|				СписокРНПТОтПоставщика.РНПТ
	|			ИЗ
	|				СписокРНПТОтПоставщика КАК СписокРНПТОтПоставщика)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрослеживаемыеОССРНПТ.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатковБезОснования.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ЕСТЬNULL(ТаблицаОстатковБезОснования.Количество, 0) - ЕСТЬNULL(ТаблицаОстатковПоОснованию.Количество, 0) - ЕСТЬNULL(ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика.Остаток, 0)) КАК Количество,
	|	СУММА(ЕСТЬNULL(ТаблицаОстатковБезОснования.Сумма, 0) - ЕСТЬNULL(ТаблицаОстатковПоОснованию.Сумма, 0)) КАК Сумма
	|ПОМЕСТИТЬ ТаблицаОстатковБезОснования
	|ИЗ
	|	ТаблицаОстатковОС КАК ТаблицаОстатковБезОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗарегистрированныеОстаткиПоОснованию КАК ТаблицаОстатковПоОснованию
	|		ПО ТаблицаОстатковБезОснования.ОсновноеСредство = ТаблицаОстатковПоОснованию.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика КАК ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика
	|		ПО ТаблицаОстатковБезОснования.ОсновноеСредство = ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика.ОсновноеСредство
	|ГДЕ
	|	ЕСТЬNULL(ТаблицаОстатковБезОснования.Количество, 0) - ЕСТЬNULL(ТаблицаОстатковПоОснованию.Количество, 0) - ЕСТЬNULL(ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика.Остаток, 0) > 0
	|	И ТаблицаОстатковПоОснованию.Количество ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОстатковБезОснования.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗарегистрированныеОстатки.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ЗарегистрированныеОстатки.Количество) КАК Количество,
	|	СУММА(ЗарегистрированныеОстатки.Сумма) КАК Сумма,
	|	ЗарегистрированныеОстатки.ДокументРегистрации КАК ДокументРегистрации,
	|	КлассификаторТНВЭД.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЗарегистрированныеОстатки.ТНВЭД КАК КодТНВЭД,
	|	КлассификаторТНВЭД.ЕдиницаИзмерения КАК ЕдиницаПрослеживаемости,
	|	ЗарегистрированныеОстатки.Количество КАК КоличествоПрослеживаеомсти,
	|	"""" КАК СтранаПроисхождения
	|ПОМЕСТИТЬ ТаблицаОстатковПоОснованию
	|ИЗ
	|	ЗарегистрированныеОстаткиПоОснованию КАК ЗарегистрированныеОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОССправочник
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
	|			ПО ОССправочник.КодТНВЭД = КлассификаторТНВЭД.Ссылка
	|		ПО ЗарегистрированныеОстатки.ОсновноеСредство = ОССправочник.Ссылка
	|ГДЕ
	|	ЗарегистрированныеОстатки.Количество > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗарегистрированныеОстатки.ОсновноеСредство,
	|	ЗарегистрированныеОстатки.ДокументРегистрации,
	|	КлассификаторТНВЭД.ЕдиницаИзмерения,
	|	ЗарегистрированныеОстатки.Количество,
	|	ЗарегистрированныеОстатки.ТНВЭД,
	|	КлассификаторТНВЭД.ЕдиницаИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатковБезОснования.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОстатковБезОснования.Количество КАК Количество,
	|	ТаблицаОстатковБезОснования.Сумма КАК Сумма
	|ПОМЕСТИТЬ ТаблицаОстатковБезОснованияБезИнвентаризации
	|ИЗ
	|	ТаблицаОстатковБезОснования КАК ТаблицаОстатковБезОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗарегистрированныеОстаткиПоОснованию КАК ЗарегистрированныеОстаткиПоОснованию
	|		ПО ТаблицаОстатковБезОснования.ОсновноеСредство = ЗарегистрированныеОстаткиПоОснованию.ОсновноеСредство
	|ГДЕ
	|	ЗарегистрированныеОстаткиПоОснованию.ОсновноеСредство ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатковБезОснованияБезИнвентаризации.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(РегистрацияПрослеживаемыхТоваров.Количество) КАК КоличествоТоваровВОС
	|ПОМЕСТИТЬ КоличествоОбъектовВСоставеОС
	|ИЗ
	|	ТаблицаОстатковБезОснованияБезИнвентаризации КАК ТаблицаОстатковБезОснованияБезИнвентаризации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацияПрослеживаемыхТоваров КАК РегистрацияПрослеживаемыхТоваров
	|		ПО ТаблицаОстатковБезОснованияБезИнвентаризации.ОсновноеСредство = РегистрацияПрослеживаемыхТоваров.ОсновноеСредство
	|ГДЕ
	|	РегистрацияПрослеживаемыхТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацииПрослеживаемыхТоваров.РегистрацияКомплектующихОС)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОстатковБезОснованияБезИнвентаризации.ОсновноеСредство
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОстатковПоОснованию.ОсновноеСредство,
	|	СУММА(РегистрацияПрослеживаемыхТоваров.Количество)
	|ИЗ
	|	ТаблицаОстатковПоОснованию КАК ТаблицаОстатковПоОснованию
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацияПрослеживаемыхТоваров КАК РегистрацияПрослеживаемыхТоваров
	|		ПО ТаблицаОстатковПоОснованию.ОсновноеСредство = РегистрацияПрослеживаемыхТоваров.ОсновноеСредство
	|ГДЕ
	|	РегистрацияПрослеживаемыхТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацииПрослеживаемыхТоваров.РегистрацияКомплектующихОС)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОстатковПоОснованию.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатковБезОснованияБезИнвентаризации.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОстатковБезОснованияБезИнвентаризации.Количество КАК Количество,
	|	ТаблицаОстатковБезОснованияБезИнвентаризации.Сумма КАК Сумма,
	|	"""" КАК Основание,
	|	ЛОЖЬ КАК ЕстьПервичныйДокумент,
	|	НЕОПРЕДЕЛЕНО КАК ЕдиницаИзмерения,
	|	НЕОПРЕДЕЛЕНО КАК КодТНВЭД,
	|	НЕОПРЕДЕЛЕНО КАК ЕдиницаПрослеживаемости,
	|	НЕОПРЕДЕЛЕНО КАК КоличествоПрослеживаемости,
	|	ЛОЖЬ КАК ИмпортИзЕАЭС,
	|	NULL КАК СтранаПроисхождения,
	|	NULL КАК РНПТ,
	|	ЛОЖЬ КАК ЕстьРНПТ,
	|	0 КАК КоличествоУменьшение,
	|	0 КАК СуммаУменьшение,
	|	0 КАК КоличествоУвеличение,
	|	0 КАК СуммаУвеличение,
	|	КоличествоОбъектовВСоставеОС.КоличествоТоваровВОС КАК КоличествоСоставныхОбъектовВОС,
	|	КоличествоОбъектовВСоставеОС.КоличествоТоваровВОС <> 0 КАК ЕстьСостав,
	|	ТаблицаОстатковОС.Сумма КАК ОстаточнаяСтоимостьОС
	|ИЗ
	|	ТаблицаОстатковБезОснованияБезИнвентаризации КАК ТаблицаОстатковБезОснованияБезИнвентаризации
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоОбъектовВСоставеОС КАК КоличествоОбъектовВСоставеОС
	|		ПО ТаблицаОстатковБезОснованияБезИнвентаризации.ОсновноеСредство = КоличествоОбъектовВСоставеОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатковОС КАК ТаблицаОстатковОС
	|		ПО ТаблицаОстатковБезОснованияБезИнвентаризации.ОсновноеСредство = ТаблицаОстатковОС.ОсновноеСредство
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОстатковПоРегистрации.ОсновноеСредство,
	|	ТаблицаОстатковПоРегистрации.Количество,
	|	ТаблицаОстатковПоРегистрации.Сумма,
	|	ТаблицаОстатковПоРегистрации.ДокументРегистрации,
	|	ИСТИНА,
	|	ТаблицаОстатковПоРегистрации.ЕдиницаИзмерения,
	|	ТаблицаОстатковПоРегистрации.КодТНВЭД,
	|	ТаблицаОстатковПоРегистрации.ЕдиницаПрослеживаемости,
	|	ТаблицаОстатковПоРегистрации.КоличествоПрослеживаеомсти,
	|	ЛОЖЬ,
	|	ТаблицаОстатковПоРегистрации.СтранаПроисхождения,
	|	NULL,
	|	ЛОЖЬ,
	|	0,
	|	0,
	|	0,
	|	0,
	|	КоличествоОбъектовВСоставеОС.КоличествоТоваровВОС,
	|	КоличествоОбъектовВСоставеОС.КоличествоТоваровВОС <> 0,
	|	ТаблицаОстатковОС.Сумма
	|ИЗ
	|	ТаблицаОстатковПоОснованию КАК ТаблицаОстатковПоРегистрации
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоОбъектовВСоставеОС КАК КоличествоОбъектовВСоставеОС
	|		ПО ТаблицаОстатковПоРегистрации.ОсновноеСредство = КоличествоОбъектовВСоставеОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатковОС КАК ТаблицаОстатковОС
	|		ПО ТаблицаОстатковПоРегистрации.ОсновноеСредство = ТаблицаОстатковОС.ОсновноеСредство";

	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьНачальныеДанныеТоваров(Период, Организация) Экспорт
	
	ВестиСкладскойУчетБУ = БухгалтерскийУчет.ВедетсяУчетПоСкладам(ПланыСчетов.Хозрасчетный.Товары);
	
	ПорядокСубконтоКоличество = Новый Массив();
	ПорядокСубконтоКоличество.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Если ВестиСкладскойУчетБУ Тогда
		ПорядокСубконтоКоличество.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	КонецЕсли;
	
	МассивИсклСчетов = Новый Массив();
	МассивИсклСчетов.Добавить(ПланыСчетов.Хозрасчетный.ТоварыВРозничнойТорговлеВПродажныхЦенахНТТ); // 41.12
	МассивИсклСчетов.Добавить(ПланыСчетов.Хозрасчетный.ТорговаяНаценка);                            // 42
	МассивИсклСчетов.Добавить(ПланыСчетов.Хозрасчетный.ГТД);                                        // ГТД
	МассивИсклСчетов.Добавить(ПланыСчетов.Хозрасчетный.СпецодеждаВЭксплуатацииВспомогательный);     // МЦ.02
	МассивИсклСчетов.Добавить(ПланыСчетов.Хозрасчетный.СпецоснасткаВЭксплуатацииВспомогательный);   // МЦ.03
	МассивИсклСчетов = БухгалтерскийУчет.СформироватьМассивСубсчетов(МассивИсклСчетов);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("НачалоПериода", ПрослеживаемостьБРУ.ДатаНачалаУчетаПрослеживаемыхТоваров());
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Период));
	Запрос.УстановитьПараметр("ИсклСчета",                 МассивИсклСчетов);
	Запрос.УстановитьПараметр("ПорядокСубконтоКоличество", ПорядокСубконтоКоличество);
	Запрос.УстановитьПараметр("ВестиСкладскойУчетБУ", ВестиСкладскойУчетБУ);
	
	МассивДополнительныхСчетов = Новый Массив();
	Если ВестиСкладскойУчетБУ Тогда
		МассивДополнительныхСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПокупныеТоварыОтгруженные);
		МассивДополнительныхСчетов.Добавить(ПланыСчетов.Хозрасчетный.ГотоваяПродукцияОтгруженная);
		МассивДополнительныхСчетов.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеТоварыОтгруженные);
		МассивДополнительныхСчетов.Добавить(ПланыСчетов.Хозрасчетный.ИнвентарьИХозяйственныеПринадлежностиВЭксплуатации);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивДополнительныхСчетов", МассивДополнительныхСчетов);
	Запрос.УстановитьПараметр("СубконтоНомеклатура", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	
	ТекстАналитикаПоСкладу = ?(ВестиСкладскойУчетБУ, "ХозрасчетныйОстатки.Субконто2","ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Номенклатура,
	|	0 КАК Сумма,
	|	СУММА(ХозрасчетныйОстатки.КоличествоОстатокДт) КАК Количество,
	|	ХозрасчетныйОстатки.Субконто2 КАК Склад
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, НЕ Счет В (&ИсклСчета), &ПорядокСубконтоКоличество, Организация = &Организация) КАК ХозрасчетныйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО ХозрасчетныйОстатки.Субконто1 = Номенклатура.Ссылка
	|ГДЕ
	|	Номенклатура.ПрослеживаемыйТовар
	|	И ХозрасчетныйОстатки.КоличествоОстатокДт > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.Субконто2
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1,
	|	0,
	|	СУММА(ХозрасчетныйОстатки.КоличествоОстатокДт),
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (&МассивДополнительныхСчетов), &СубконтоНомеклатура, Организация = &Организация) КАК ХозрасчетныйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО ХозрасчетныйОстатки.Субконто1 = Номенклатура.Ссылка
	|ГДЕ
	|	Номенклатура.ПрослеживаемыйТовар
	|	И ХозрасчетныйОстатки.КоличествоОстатокДт > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОстатки.Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрацияПрослеживаемыхТоваров.Номенклатура КАК Номенклатура,
	|	СУММА(РегистрацияПрослеживаемыхТоваров.Количество) КАК Количество,
	|	СУММА(РегистрацияПрослеживаемыхТоваров.Сумма) КАК Сумма,
	|	РегистрацияПрослеживаемыхТоваров.Основание КАК ДокументРегистрации,
	|	ВЫБОР
	|		КОГДА &ВестиСкладскойУчетБУ
	|			ТОГДА РегистрацияПрослеживаемыхТоваров.Основание.Склад
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	КОНЕЦ КАК Склад,
	|	РегистрацияПрослеживаемыхТоваров.ТНВЭД КАК ТНВЭД,
	|	РегистрацияПрослеживаемыхТоваров.ПериодСобытия <= &Период КАК КоличествоПопадаетВОстаток
	|ПОМЕСТИТЬ ЗарегистрированныеОстаткиПоОснованию
	|ИЗ
	|	РегистрСведений.РегистрацияПрослеживаемыхТоваров КАК РегистрацияПрослеживаемыхТоваров
	|ГДЕ
	|	РегистрацияПрослеживаемыхТоваров.Организация = &Организация
	|	И РегистрацияПрослеживаемыхТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацииПрослеживаемыхТоваров.ИнвентаризацияТоваров)
	|	И РегистрацияПрослеживаемыхТоваров.ПериодСобытия <= КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	РегистрацияПрослеживаемыхТоваров.Номенклатура,
	|	РегистрацияПрослеживаемыхТоваров.Основание,
	|	РегистрацияПрослеживаемыхТоваров.ТНВЭД,
	|	ВЫБОР
	|		КОГДА &ВестиСкладскойУчетБУ
	|			ТОГДА РегистрацияПрослеживаемыхТоваров.Основание.Склад
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	КОНЕЦ,
	|	РегистрацияПрослеживаемыхТоваров.ПериодСобытия <= &Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗарегистрированныеОстаткиПоОснованию.Номенклатура КАК Номенклатура,
	|	ЗарегистрированныеОстаткиПоОснованию.ДокументРегистрации КАК ДокументРегистрации,
	|	СУММА(ЗарегистрированныеОстаткиПоОснованию.Количество) КАК Количество,
	|	СУММА(ЗарегистрированныеОстаткиПоОснованию.Сумма) КАК Сумма,
	|	ЗарегистрированныеОстаткиПоОснованию.Склад КАК Склад
	|ПОМЕСТИТЬ ЗарегистрированныеОстаткиПоИнвентаризации
	|ИЗ
	|	ЗарегистрированныеОстаткиПоОснованию КАК ЗарегистрированныеОстаткиПоОснованию
	|ГДЕ
	|	ЗарегистрированныеОстаткиПоОснованию.ДокументРегистрации ССЫЛКА Документ.ИнвентаризацияТоваровНаСкладе
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗарегистрированныеОстаткиПоОснованию.Номенклатура,
	|	ЗарегистрированныеОстаткиПоОснованию.ДокументРегистрации,
	|	ЗарегистрированныеОстаткиПоОснованию.Количество,
	|	ЗарегистрированныеОстаткиПоОснованию.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрослеживаемыеТоварыОбороты.Номенклатура КАК Номенклатура,
	|	СУММА(ПрослеживаемыеТоварыОбороты.КоличествоПриход) КАК КоличествоПриход,
	|	СУММА(ПрослеживаемыеТоварыОбороты.КоличествоРасход) КАК КоличествоРасход,
	|	ВЫБОР
	|		КОГДА &ВестиСкладскойУчетБУ
	|			ТОГДА ВЫБОР
	|					КОГДА ПрослеживаемыеТоварыОбороты.Регистратор ССЫЛКА Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров
	|							ИЛИ ПрослеживаемыеТоварыОбороты.Регистратор ССЫЛКА Документ.УведомлениеОВвозеПрослеживаемыхТоваров
	|						ТОГДА ПрослеживаемыеТоварыОбороты.Регистратор.ПервичныйДокумент.Склад
	|					ИНАЧЕ ПрослеживаемыеТоварыОбороты.Регистратор.Склад
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	КОНЕЦ КАК Склад,
	|	ПрослеживаемыеТоварыОбороты.РНПТ КАК РНПТ,
	|	ВЫБОР
	|		КОГДА НЕ ПрослеживаемыеТоварыОбороты.Регистратор ССЫЛКА Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоРНПТОтПоставщика
	|ПОМЕСТИТЬ ПрослеживаемыеТоварыСРНПТ
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТовары.Обороты(&НачалоПериода, &Период, Регистратор, Организация = &Организация) КАК ПрослеживаемыеТоварыОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрослеживаемыеТоварыОбороты.Номенклатура,
	|	ПрослеживаемыеТоварыОбороты.РНПТ,
	|	ВЫБОР
	|		КОГДА НЕ ПрослеживаемыеТоварыОбороты.Регистратор ССЫЛКА Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВестиСкладскойУчетБУ
	|			ТОГДА ВЫБОР
	|					КОГДА ПрослеживаемыеТоварыОбороты.Регистратор ССЫЛКА Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров
	|							ИЛИ ПрослеживаемыеТоварыОбороты.Регистратор ССЫЛКА Документ.УведомлениеОВвозеПрослеживаемыхТоваров
	|						ТОГДА ПрослеживаемыеТоварыОбороты.Регистратор.ПервичныйДокумент.Склад
	|					ИНАЧЕ ПрослеживаемыеТоварыОбороты.Регистратор.Склад
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрослеживаемыеТоварыСРНПТ.РНПТ КАК РНПТ
	|ПОМЕСТИТЬ СписокРНПТОтПоставщика
	|ИЗ
	|	ПрослеживаемыеТоварыСРНПТ КАК ПрослеживаемыеТоварыСРНПТ
	|ГДЕ
	|	ПрослеживаемыеТоварыСРНПТ.ЭтоРНПТОтПоставщика = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрослеживаемыеТоварыСРНПТ.РНПТ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрослеживаемыеТоварыСРНПТ.Номенклатура КАК Номенклатура,
	|	СУММА(ПрослеживаемыеТоварыСРНПТ.КоличествоПриход - ПрослеживаемыеТоварыСРНПТ.КоличествоРасход) КАК Остаток,
	|	ПрослеживаемыеТоварыСРНПТ.Склад КАК Склад
	|ПОМЕСТИТЬ ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика
	|ИЗ
	|	ПрослеживаемыеТоварыСРНПТ КАК ПрослеживаемыеТоварыСРНПТ
	|ГДЕ
	|	ПрослеживаемыеТоварыСРНПТ.РНПТ В
	|			(ВЫБРАТЬ
	|				СписокРНПТОтПоставщика.РНПТ
	|			ИЗ
	|				СписокРНПТОтПоставщика КАК СписокРНПТОтПоставщика)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрослеживаемыеТоварыСРНПТ.Номенклатура,
	|	ПрослеживаемыеТоварыСРНПТ.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатковБезОснования.Номенклатура КАК Номенклатура,
	|	СУММА(ЕСТЬNULL(ТаблицаОстатковБезОснования.Количество, 0) - ЕСТЬNULL(ТаблицаОстатковПоОснованию.Количество, 0) - ЕСТЬNULL(ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика.Остаток, 0) - ЕСТЬNULL(ЗарегистрированныеВозвратВклВПериодОстатков.Количество, 0)) КАК Количество,
	|	СУММА(ЕСТЬNULL(ТаблицаОстатковБезОснования.Сумма, 0) - ЕСТЬNULL(ТаблицаОстатковПоОснованию.Сумма, 0) - ЕСТЬNULL(ЗарегистрированныеВозвратВклВПериодОстатков.Сумма, 0)) КАК Сумма,
	|	ТаблицаОстатковБезОснования.Склад КАК Склад
	|ПОМЕСТИТЬ ТаблицаОстатковБезОснования
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатковБезОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗарегистрированныеОстаткиПоИнвентаризации КАК ТаблицаОстатковПоОснованию
	|		ПО ТаблицаОстатковБезОснования.Номенклатура = ТаблицаОстатковПоОснованию.Номенклатура
	|			И ТаблицаОстатковБезОснования.Склад = ТаблицаОстатковПоОснованию.Склад
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика КАК ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика
	|		ПО ТаблицаОстатковБезОснования.Номенклатура = ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика.Номенклатура
	|			И ТаблицаОстатковБезОснования.Склад = ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика.Склад
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗарегистрированныеОстаткиПоОснованию КАК ЗарегистрированныеВозвратВклВПериодОстатков
	|		ПО ТаблицаОстатковБезОснования.Номенклатура = ЗарегистрированныеВозвратВклВПериодОстатков.Номенклатура
	|			И ТаблицаОстатковБезОснования.Склад = ЗарегистрированныеВозвратВклВПериодОстатков.Склад
	|			И (ЗарегистрированныеВозвратВклВПериодОстатков.КоличествоПопадаетВОстаток)
	|ГДЕ
	|	ЕСТЬNULL(ТаблицаОстатковБезОснования.Количество, 0) - ЕСТЬNULL(ТаблицаОстатковПоОснованию.Количество, 0) - ЕСТЬNULL(ТаблицаОстатковПрослеживаемогоТовараСРНПТОтПоставщика.Остаток, 0) > 0
	|	И ТаблицаОстатковПоОснованию.Количество ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОстатковБезОснования.Номенклатура,
	|	ТаблицаОстатковБезОснования.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗарегистрированныеОстатки.Номенклатура КАК Номенклатура,
	|	СУММА(ЗарегистрированныеОстатки.Количество) КАК Количество,
	|	СУММА(ЗарегистрированныеОстатки.Сумма) КАК Сумма,
	|	ЗарегистрированныеОстатки.ДокументРегистрации КАК ДокументРегистрации,
	|	НоменклатураСправочник.КодОКПД2 КАК КодОКПД2,
	|	НоменклатураСправочник.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЗарегистрированныеОстатки.ТНВЭД КАК КодТНВЭД,
	|	КлассификаторТНВЭД.ЕдиницаИзмерения КАК ЕдиницаПрослеживаемости,
	|	ВЫБОР
	|		КОГДА НоменклатураСправочник.ВесПоСертификатуТовара > 0
	|			ТОГДА ЗарегистрированныеОстатки.Количество * НоменклатураСправочник.ВесПоСертификатуТовара
	|		ИНАЧЕ ЗарегистрированныеОстатки.Количество
	|	КОНЕЦ КАК КоличествоПрослеживаеомсти,
	|	ЗарегистрированныеОстатки.Склад КАК Склад,
	|	НоменклатураСправочник.СтранаПроисхождения КАК СтранаПроисхождения
	|ПОМЕСТИТЬ ТаблицаОстатковПоОснованию
	|ИЗ
	|	ЗарегистрированныеОстаткиПоОснованию КАК ЗарегистрированныеОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
	|			ПО НоменклатураСправочник.КодТНВЭД = КлассификаторТНВЭД.Ссылка
	|		ПО ЗарегистрированныеОстатки.Номенклатура = НоменклатураСправочник.Ссылка
	|ГДЕ
	|	ЗарегистрированныеОстатки.Количество > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗарегистрированныеОстатки.Номенклатура,
	|	ЗарегистрированныеОстатки.ДокументРегистрации,
	|	НоменклатураСправочник.КодОКПД2,
	|	НоменклатураСправочник.ЕдиницаИзмерения,
	|	КлассификаторТНВЭД.ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА НоменклатураСправочник.ВесПоСертификатуТовара > 0
	|			ТОГДА ЗарегистрированныеОстатки.Количество * НоменклатураСправочник.ВесПоСертификатуТовара
	|		ИНАЧЕ ЗарегистрированныеОстатки.Количество
	|	КОНЕЦ,
	|	ЗарегистрированныеОстатки.Склад,
	|	ЗарегистрированныеОстатки.ТНВЭД,
	|	НоменклатураСправочник.СтранаПроисхождения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатковБезОснования.Номенклатура КАК Номенклатура,
	|	ТаблицаОстатковБезОснования.Количество КАК Количество,
	|	ТаблицаОстатковБезОснования.Сумма КАК Сумма,
	|	ТаблицаОстатковБезОснования.Склад КАК Склад
	|ПОМЕСТИТЬ ТаблицаОстатковБезОснованияБезИнвентаризации
	|ИЗ
	|	ТаблицаОстатковБезОснования КАК ТаблицаОстатковБезОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗарегистрированныеОстаткиПоИнвентаризации КАК ЗарегистрированныеОстаткиПоОснованию
	|		ПО ТаблицаОстатковБезОснования.Номенклатура = ЗарегистрированныеОстаткиПоОснованию.Номенклатура
	|			И ТаблицаОстатковБезОснования.Склад = ЗарегистрированныеОстаткиПоОснованию.Склад
	|ГДЕ
	|	ЗарегистрированныеОстаткиПоОснованию.Номенклатура ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатковБезОснованияБезИнвентаризации.Номенклатура КАК Номенклатура,
	|	ТаблицаОстатковБезОснованияБезИнвентаризации.Количество КАК Количество,
	|	ТаблицаОстатковБезОснованияБезИнвентаризации.Сумма КАК Сумма,
	|	"""" КАК Основание,
	|	ЛОЖЬ КАК ЕстьПервичныйДокумент,
	|	НЕОПРЕДЕЛЕНО КАК КодОКПД2,
	|	НЕОПРЕДЕЛЕНО КАК ЕдиницаИзмерения,
	|	НЕОПРЕДЕЛЕНО КАК КодТНВЭД,
	|	НЕОПРЕДЕЛЕНО КАК ЕдиницаПрослеживаемости,
	|	НЕОПРЕДЕЛЕНО КАК КоличествоПрослеживаемости,
	|	ТаблицаОстатковБезОснованияБезИнвентаризации.Склад КАК Склад,
	|	ЛОЖЬ КАК ИмпортИзЕАЭС,
	|	NULL КАК СтранаПроисхождения,
	|	NULL КАК РНПТ,
	|	ЛОЖЬ КАК ЕстьРНПТ,
	|	0 КАК КоличествоУменьшение,
	|	0 КАК СуммаУменьшение,
	|	0 КАК КоличествоУвеличение,
	|	0 КАК СуммаУвеличение,
	|	NULL КАК ПервичныйДокумент
	|ИЗ
	|	ТаблицаОстатковБезОснованияБезИнвентаризации КАК ТаблицаОстатковБезОснованияБезИнвентаризации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОстатковПоРегистрации.Номенклатура,
	|	ТаблицаОстатковПоРегистрации.Количество,
	|	ТаблицаОстатковПоРегистрации.Сумма,
	|	ТаблицаОстатковПоРегистрации.ДокументРегистрации,
	|	ИСТИНА,
	|	ТаблицаОстатковПоРегистрации.КодОКПД2,
	|	ТаблицаОстатковПоРегистрации.ЕдиницаИзмерения,
	|	ТаблицаОстатковПоРегистрации.КодТНВЭД,
	|	ТаблицаОстатковПоРегистрации.ЕдиницаПрослеживаемости,
	|	ТаблицаОстатковПоРегистрации.КоличествоПрослеживаеомсти,
	|	ТаблицаОстатковПоРегистрации.Склад,
	|	ЛОЖЬ,
	|	ТаблицаОстатковПоРегистрации.СтранаПроисхождения,
	|	NULL,
	|	ЛОЖЬ,
	|	0,
	|	0,
	|	0,
	|	0,
	|	NULL
	|ИЗ
	|	ТаблицаОстатковПоОснованию КАК ТаблицаОстатковПоРегистрации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РегистрацияПрослеживаемыхТоваров.Номенклатура,
	|	РегистрацияПрослеживаемыхТоваров.Количество,
	|	РегистрацияПрослеживаемыхТоваров.Сумма,
	|	РегистрацияПрослеживаемыхТоваров.Основание,
	|	ИСТИНА,
	|	НоменклатураСправочник.КодОКПД2,
	|	НоменклатураСправочник.ЕдиницаИзмерения,
	|	РегистрацияПрослеживаемыхТоваров.ТНВЭД,
	|	РегистрацияПрослеживаемыхТоваров.ТНВЭД.ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА НоменклатураСправочник.ВесПоСертификатуТовара > 0
	|			ТОГДА РегистрацияПрослеживаемыхТоваров.Количество * НоменклатураСправочник.ВесПоСертификатуТовара
	|		ИНАЧЕ РегистрацияПрослеживаемыхТоваров.Количество
	|	КОНЕЦ,
	|	НЕОПРЕДЕЛЕНО,
	|	ИСТИНА,
	|	РегистрацияПрослеживаемыхТоваров.СтранаПроисхождения,
	|	NULL,
	|	ЛОЖЬ,
	|	0,
	|	0,
	|	0,
	|	0,
	|	NULL
	|ИЗ
	|	РегистрСведений.РегистрацияПрослеживаемыхТоваров КАК РегистрацияПрослеживаемыхТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
	|		ПО РегистрацияПрослеживаемыхТоваров.Номенклатура = НоменклатураСправочник.Ссылка
	|ГДЕ
	|	РегистрацияПрослеживаемыхТоваров.Количество > 0
	|	И РегистрацияПрослеживаемыхТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацииПрослеживаемыхТоваров.ВвозТоваровИзЕАЭС)
	|	И РегистрацияПрослеживаемыхТоваров.Организация = &Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РегистрацияПрослеживаемыхТоваров.Номенклатура,
	|	РегистрацияПрослеживаемыхТоваров.Количество,
	|	РегистрацияПрослеживаемыхТоваров.Сумма,
	|	РегистрацияПрослеживаемыхТоваров.Основание,
	|	ИСТИНА,
	|	НоменклатураСправочник.КодОКПД2,
	|	НоменклатураСправочник.ЕдиницаИзмерения,
	|	РегистрацияПрослеживаемыхТоваров.ТНВЭД,
	|	РегистрацияПрослеживаемыхТоваров.ТНВЭД.ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА НоменклатураСправочник.ВесПоСертификатуТовара > 0
	|			ТОГДА РегистрацияПрослеживаемыхТоваров.Количество * НоменклатураСправочник.ВесПоСертификатуТовара
	|		ИНАЧЕ РегистрацияПрослеживаемыхТоваров.Количество
	|	КОНЕЦ,
	|	НЕОПРЕДЕЛЕНО,
	|	ИСТИНА,
	|	РегистрацияПрослеживаемыхТоваров.СтранаПроисхождения,
	|	РегистрацияПрослеживаемыхТоваров.РНПТ,
	|	ИСТИНА,
	|	ВЫБОР
	|		КОГДА РегистрацияПрослеживаемыхТоваров.Количество > 0
	|			ТОГДА РегистрацияПрослеживаемыхТоваров.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РегистрацияПрослеживаемыхТоваров.Сумма > 0
	|			ТОГДА РегистрацияПрослеживаемыхТоваров.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РегистрацияПрослеживаемыхТоваров.Количество < 0
	|			ТОГДА -РегистрацияПрослеживаемыхТоваров.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РегистрацияПрослеживаемыхТоваров.Сумма < 0
	|			ТОГДА -РегистрацияПрослеживаемыхТоваров.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	РегистрацияПрослеживаемыхТоваров.ПервичныйДокумент
	|ИЗ
	|	РегистрСведений.РегистрацияПрослеживаемыхТоваров КАК РегистрацияПрослеживаемыхТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
	|		ПО РегистрацияПрослеживаемыхТоваров.Номенклатура = НоменклатураСправочник.Ссылка
	|ГДЕ
	|	(РегистрацияПрослеживаемыхТоваров.Количество <> 0
	|			ИЛИ РегистрацияПрослеживаемыхТоваров.Сумма <> 0)
	|	И РегистрацияПрослеживаемыхТоваров.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацииПрослеживаемыхТоваров.КорректировкаТоваровИзЕАЭС)
	|	И РегистрацияПрослеживаемыхТоваров.Организация = &Организация";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ХозрасчетныйОстатки.Субконто2", ТекстАналитикаПоСкладу);
	
	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выгрузить();
	
КонецФункции

#КонецОбласти

Процедура СверитьОстаткиРНПТ(ДокументОбъект, Отказ, ИмяТабличнойЧасти, ДокументОснованиеВТЧ = Ложь) Экспорт
	
	ТаблицаТоваров = ДокументОбъект[ИмяТабличнойЧасти].Выгрузить();
	Если ТаблицаТоваров.Количество() = 0 
		ИЛИ БухгалтерскийУчетПереопределяемый.ОтключитьКонтрольОтрицательныхОстатков() Тогда
		Возврат;
	КонецЕсли;
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОтчетКомиссионераОПродажах") Тогда
		Если ИмяТабличнойЧасти = "Товары" Тогда
			ТаблицаРНПТОстатки = ТаблицаРНПТОстатки(ДокументОбъект, ТаблицаТоваров, Истина);
		Иначе
			ТаблицаРНПТОстатки =ТаблицаРНПТОстаткиВозвратКомиссия(ДокументОбъект, ТаблицаТоваров);
		КонецЕсли;
	Иначе
		ТаблицаРНПТОстатки = ТаблицаРНПТОстаткиВозвратПоставщику(ДокументОбъект, ТаблицаТоваров, ДокументОснованиеВТЧ);
	КонецЕсли;
	КолонкиТЧ = ДокументОбъект[ИмяТабличнойЧасти].ВыгрузитьКолонки();
	ЕстьКолонкаПрослеживаемыйКомплект = КолонкиТЧ.Колонки.Найти("ПрослеживаемыйКомплект") <> Неопределено;
	ДопПараметрыДляСверкиОстатков = ДополнительныеПараметрыДляСверкиОстатковВПрослеживаемости();
		
	ДопПараметрыДляСверкиОстатков.ДокументОснованиеВТЧ = ДокументОснованиеВТЧ;
	
	Для Каждого СтрокаТабличнойЧасти ИЗ ДокументОбъект[ИмяТабличнойЧасти] Цикл
		Если НЕ СтрокаТабличнойЧасти.ПрослеживаемыйТовар Тогда
			Продолжить;
		КонецЕсли;
		Если ДокументОснованиеВТЧ Тогда
			Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Сделка) Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		Отбор = Новый Структура("ИдентификаторСтроки", СтрокаТабличнойЧасти.ИдентификаторСтроки);
		СтрокиСРНПТ = ДокументОбъект.СведенияПрослеживаемости.Выгрузить(Отбор);
		
		ДопПараметрыДляСверкиОстатков.ЭтоКомплект          = ЕстьКолонкаПрослеживаемыйКомплект
												И СтрокаТабличнойЧасти.ПрослеживаемыйКомплект;

		Для Каждого СтрокаСРНПТ ИЗ СтрокиСРНПТ Цикл
			СверитьСОстаткамиВПрослеживаемости(ДокументОбъект, Отказ, СтрокаСРНПТ,
			СтрокаТабличнойЧасти, ТаблицаРНПТОстатки, ИмяТабличнойЧасти, ДопПараметрыДляСверкиОстатков);
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

Процедура ПодобратьРНПТОССоставное(ДокументОбъект, Отказ) Экспорт
	
	ИмяТабличнойЧасти = "ОС";
	ТаблицаОС = ДокументОбъект.ОС.Выгрузить();
	КоличествоОС = ТаблицаОС.Количество();
	Если КоличествоОС = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПрослеживаемыеОС = ТаблицаОС.НайтиСтроки(Новый Структура("ПрослеживаемыйТовар", Истина));
	ЕстьПрослеживаемыеОС = ПрослеживаемыеОС.Количество() > 0;
	Если Не ЕстьПрослеживаемыеОС Тогда
		Возврат;
	КонецЕсли;
		
	МассивТаблиц = ПолучитьОстаткиПоСоставномуОС(ДокументОбъект);
	ТаблицаОстаткиПоРНПТ = МассивТаблиц[1].Выгрузить();
	ОстаткиПоОбъектуСтроительства = МассивТаблиц[2].Выгрузить();
	ТолькоПроверка = Ложь;
	НеПрослеживаемыеКомплектующиеПоМодернизации = Ложь;
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.МодернизацияОС")
		И ТаблицаОстаткиПоРНПТ.Количество() = 0 Тогда
		ТолькоПроверка = Истина;
		НеПрослеживаемыеКомплектующиеПоМодернизации = Истина;
	ИначеЕсли ОстаткиПоОбъектуСтроительства.Количество() > 0  Тогда
		Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.МодернизацияОС") Тогда
			СуммаПоДокументу = ДокументОбъект.СтоимостьБУ;
		Иначе 
			СуммаПоДокументу = ДокументОбъект.СтоимостьБУ * КоличествоОС;
		КонецЕсли;
		Если СуммаПоДокументу <> ОстаткиПоОбъектуСтроительства[0].СуммаОстаток Тогда
			ТолькоПроверка = Истина;
			СообщениеОбОшибке = НСтр("ru='Не удается распределить РНПТ на остатках по таблице ""Основные средства"", заполните РНПТ вручную'");
		КонецЕсли;
	Иначе
		ТолькоПроверка = Истина;
		СообщениеОбОшибке = НСтр("ru='Не удается распределить РНПТ на остатках по таблице ""Основные средства"", заполните РНПТ вручную'");
	КонецЕсли;
	
	Если Не ТолькоПроверка Тогда
		ТаблицаОстатковПоНоменклатуре = ТаблицаОстаткиПоРНПТ.Скопировать(, "Номенклатура, Количество");
		ТаблицаОстатковПоНоменклатуре.Свернуть("Номенклатура", "Количество");
		ТаблицаОстатковПоНоменклатуре.Колонки.Добавить("КоличествоНаЕдиницуОС", Новый ОписаниеТипов("Число"));
		Для Каждого Строка Из ТаблицаОстатковПоНоменклатуре Цикл
			КоличествоНаЕдиницуОС = Цел(Строка.Количество / КоличествоОС);
			
			Если Строка.Количество - КоличествоНаЕдиницуОС * КоличествоОС = 0 Тогда
				Строка.КоличествоНаЕдиницуОС = КоличествоНаЕдиницуОС;
			Иначе
				ТолькоПроверка = Истина;
				СообщениеОбОшибке = НСтр("ru='Не удается распределить РНПТ на остатках по таблице ""Основные средства"", заполните РНПТ вручную'");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Если (ТаблицаОстатковПоНоменклатуре = Неопределено Или ТаблицаОстатковПоНоменклатуре.Количество() = 0) И Не ТолькоПроверка Тогда
		СообщениеОбОшибке = НСтр("ru='Не найдены остатки по РНПТ для распределения по таблице ""Основные средства""'");
		ТолькоПроверка = Истина;
	КонецЕсли;
		
	КонтролироватьОстаток = НЕ БухгалтерскийУчетПереопределяемый.ОтключитьКонтрольОтрицательныхОстатков();
	УжеВсеРНПТЗаполнены = Истина;
	
	ДопПараметрыДляСверкиОстатков = ДополнительныеПараметрыДляСверкиОстатковВПрослеживаемости();
	
	Если КонтролироватьОстаток Или Не ТолькоПроверка Тогда
		ПараметрыПодбораРНПТ = ПодготовитьСтруктуруПараметровДляПодбораРНПТИзОстатков();
		Для Каждого СтрокаТабличнойЧасти Из ТаблицаОС Цикл
			
			Если НЕ СтрокаТабличнойЧасти.ПрослеживаемыйТовар Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокиСРНПТ = ДокументОбъект.СведенияПрослеживаемости.НайтиСтроки(Новый Структура("ИдентификаторСтроки", СтрокаТабличнойЧасти.ИдентификаторСтроки));
			КоличествоРНПТ = СтрокиСРНПТ.Количество();
			
			Если КоличествоРНПТ = 0 И Не ТолькоПроверка Тогда
				
				Для Каждого СтрокаКомплектующего Из ТаблицаОстатковПоНоменклатуре Цикл
					
					ОсталосьПодобрать = СтрокаКомплектующего.КоличествоНаЕдиницуОС;
					ПараметрыПодбораРНПТ.Комплектующий = СтрокаКомплектующего.Номенклатура;
					ПодобратьРНПТИзОстатков(ДокументОбъект, ОсталосьПодобрать, СтрокаТабличнойЧасти, ТаблицаОстаткиПоРНПТ, ПараметрыПодбораРНПТ);
					Если КонтролироватьОстаток И
						ОсталосьПодобрать <> 0 Тогда
						ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='Для целей учета прослеживаемости не подобраны РНПТ для %1 '"),
						Формат(СтрокаТабличнойЧасти.ОсновноеСредство));
						Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].РНПТ";
						
						ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
					КонецЕсли;
					
				КонецЦикла;
				
			ИначеЕсли КонтролироватьОстаток И КоличествоРНПТ <> 0 Тогда
				
				Для Каждого СтрокаСРНПТ ИЗ СтрокиСРНПТ Цикл
					ТребуемоеКоличество = СтрокаСРНПТ.Количество;
					ТребуемоеКоличествоПрослеживаемости = СтрокаСРНПТ.КоличествоПрослеживаемости;
					
					// По заполненным РНПТ контролируем остатки в регистре.
					СверитьСОстаткамиВПрослеживаемости(ДокументОбъект, Отказ, СтрокаСРНПТ, СтрокаТабличнойЧасти,
						ТаблицаОстаткиПоРНПТ, "ОС", ДопПараметрыДляСверкиОстатков);
				КонецЦикла;
			ИначеЕсли КоличествоРНПТ = 0 И ТолькоПроверка 
				И Не НеПрослеживаемыеКомплектующиеПоМодернизации Тогда
				УжеВсеРНПТЗаполнены = Ложь;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ТолькоПроверка И НЕ УжеВсеРНПТЗаполнены Тогда
		ОбщегоНазначения.СообщитьПользователю(СообщениеОбОшибке, ДокументОбъект.Ссылка, ,"Объект", Отказ);
	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьНеобходимостьВводаПрослеживаемыхОС(ДокументОбъект, Отказ) Экспорт

	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПрослеживаемыеОСОстатки.РНПТ КАК РНПТ
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеОсновныеСредства.Остатки(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство = &ОС) КАК ПрослеживаемыеОСОстатки";
	Запрос.УстановитьПараметр("Период",      ДокументОбъект.Дата);
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ОС",          ДокументОбъект.ОбъектСтроительства);
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		Для Каждого СтрокаТаблицы Из ДокументОбъект.ОС Цикл
			Префикс = "ОС[%1].";
			Префикс = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			Префикс, Формат(СтрокаТаблицы.НомерСтроки - 1, "ЧН=0; ЧГ="));
			
			ИмяСписка = НСтр("ru = 'Основные средства'");
			
			Если Не СтрокаТаблицы.ПрослеживаемыйТовар Тогда
				ТекстСообщенияРасшифровка = НСтр("ru = 'По объекту строительства имеются РНПТ. Установите для основного средства признак прослеживаемости.'");
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка","Корректность", НСтр("ru = 'Основное средство'"),
				СтрокаТаблицы.НомерСтроки, ИмяСписка, ТекстСообщенияРасшифровка);
				Поле = Префикс + "ОсновноеСредство";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект, Поле, "Объект", Отказ);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// На основании данных для регистра Рублевые суммы документа в валюте
// перезаполняется сумма без НДС для регистра "Операции с прослеживаемыми товарами"
// Параметры - ПрослеживаемыеОперации - Таблица, для формирования движений по регистру "Операции с прослеживаемыми товарами"
// 			   ТаблицаТовары - Таблица, подготовленная для движений по регистру "Рублевые суммы документа в валюте"
// 			   Реквизиты - Таблица с реквизитами для проведения документов
// 			   ОС - Булево - Необзятельный параметр, заполняется только в том случае, если перезаполнение сумм происходят для таблицы по ОС
// 			   Корректировка - Булево - Необзятальный параметр, заполняется в том случае,
//							   если вызов процедуры осуществляется из корректировки поступления или корректировки реализации

Процедура РассчитатьТаблицуПрослеживаемыеОперацииВРублях(ПрослеживаемыеОперации, ТаблицаТовары, Реквизиты, ОС = Ложь, Корректировка = Ложь, ПередачаТоваровВСоставеРабот = Ложь) Экспорт
	
	Если ПрослеживаемыеОперации = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТаблицаТовары = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	
	Если Реквизиты = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();

	Если Не Реквизиты[0].РасчетыВУсловныхЕдиницах Тогда
		Если Не (Реквизиты[0].ВалютаДокумента <> ВалютаРегламентированногоУчета И ОС) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	// Таблица рублевых сумм для вовзврата поставщику аналогична таблицам в корректировках и суммы нужны только для комплектов
	ЭтоВозвратПоставщику = ТипЗнч(Реквизиты[0].Регистратор) = Тип("ДокументСсылка.ВозвратТоваровПоставщику");
	
	Если Корректировка Тогда
		Если Реквизиты[0].ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение Тогда
			Исправление = Ложь;
		Иначе 
			Исправление = Истина;
		КонецЕсли;
	КонецЕсли;
	
	СписаниеОС = ТипЗнч(Реквизиты[0].Регистратор) = Тип("ДокументСсылка.ПередачаОС");
	Если ОС Тогда 
		ТаблицаПоПрослеживаемымТоварам = 
			ПрослеживаемыеОперации.Скопировать(, "ИдентификаторСтроки, СуммаБезНДС, ПрослеживаемыйКомплект, ГрупповойОбъект");
		ТаблицаПоПрослеживаемымТоварам.Свернуть(
			"ИдентификаторСтроки, ПрослеживаемыйКомплект, ГрупповойОбъект",
			"СуммаБезНДС");
	Иначе
		ТаблицаПоПрослеживаемымТоварам = 
			ПрослеживаемыеОперации.Скопировать(, "ИдентификаторСтроки, СуммаБезНДС, ПрослеживаемыйКомплект");
		ТаблицаПоПрослеживаемымТоварам.Свернуть("ИдентификаторСтроки, ПрослеживаемыйКомплект", "СуммаБезНДС");
	КонецЕсли;
	
	Если Реквизиты.Колонки.Найти("НДСВключенВСтоимость") <> Неопределено Тогда
		НДСВключенВСтоимость = Реквизиты[0].НДСВключенВСтоимость;
	ИначеЕсли Реквизиты.Колонки.Найти("СуммаВключаетНДС") <> Неопределено Тогда
		НДСВключенВСтоимость = Реквизиты[0].СуммаВключаетНДС;
	Иначе
		НДСВключенВСтоимость = Ложь;
	КонецЕсли;

	НДСВключенВСтоимость = ?(СписаниеОС, Ложь, НДСВключенВСтоимость);

	Для Каждого Строка Из ТаблицаПоПрослеживаемымТоварам Цикл
		СтрокиПоПрослеживаемымТоварам = ПрослеживаемыеОперации.НайтиСтроки(Новый Структура("ИдентификаторСтроки", Строка.ИдентификаторСтроки));
		СтрокаТовара = ТаблицаТовары.Найти(Строка.ИдентификаторСтроки, "ИдентификаторСтроки");
		
		Если Строка.ПрослеживаемыйКомплект Или (ОС И Не Строка.ГрупповойОбъект)
			Или ПередачаТоваровВСоставеРабот Тогда
			
			// Для основных средств и комплектов алгоритм определения соответствующей рублевой стоимости отличается от случая с простыми товарами
			// Это связано с тем, что в поступлении и передаче ОС или же по комплектам может быть подтаблица с комплектующими и по ним указана собственная стоимость
			// Таким образом общую рублевую стоимость по строке (по основному средству, комплекту) надо распределить на комплектующим
			// При этом для списания ОС, для поступления ОС и для комплектов из различных документов таблица с рассчитанными итоговыми рублевыми суммами немного различается.
			Если СтрокаТовара <> Неопределено Тогда
				КоличествоСтрокПоКомплектам = СтрокиПоПрослеживаемымТоварам.Количество();
				Если КоличествоСтрокПоКомплектам > 1 Тогда
					Если ОС Тогда
						СуммаВзаиморасчетов = ?(НДСВключенВСтоимость, 
						СтрокаТовара.СуммаВзаиморасчетов - СтрокаТовара.СуммаНДСВзаиморасчетов,
						СтрокаТовара.СуммаВзаиморасчетов);
						СуммаВзаиморасчетов = ?(СуммаВзаиморасчетов = 0, 1, СуммаВзаиморасчетов);
						Курс = ?(СписаниеОС, 
						СтрокаТовара.СуммаБУ / СуммаВзаиморасчетов,
						СтрокаТовара.СуммаБезНДСРуб / СуммаВзаиморасчетов);
					ИначеЕсли Корректировка Или ЭтоВозвратПоставщику Тогда
						Курс = СтрокаТовара.СуммаБУ / СтрокаТовара.СуммаВзаиморасчетов;
					Иначе
						Курс = СтрокаТовара.СуммаРуб / СтрокаТовара.СуммаВзаиморасчетов;
					КонецЕсли;
					Сч = 1;
					Если СтрокаТовара.СуммаВзаиморасчетов = Строка.СуммаБезНДС Тогда
						КомплектПолностьюСостоитИзПрослеживаемыхКомплектующих = Истина;
					Иначе
						КомплектПолностьюСостоитИзПрослеживаемыхКомплектующих = Ложь;
					КонецЕсли;
					СуммаВРублях = 0;
					СуммаПоСтроке = ?(СписаниеОС, СтрокаТовара.СуммаБУ, СтрокаТовара.СуммаБезНДСРуб);
					Для Каждого СтрокаКомплектующего Из СтрокиПоПрослеживаемымТоварам Цикл
						Если Сч = КоличествоСтрокПоКомплектам И КомплектПолностьюСостоитИзПрослеживаемыхКомплектующих Тогда
							СтрокаКомплектующего.СуммаБезНДС = СуммаПоСтроке - СуммаВРублях;
						Иначе
							Сч = Сч +1;
							СтрокаКомплектующего.СуммаБезНДС = СтрокаКомплектующего.СуммаБезНДС * Курс;
							СуммаВРублях = СуммаВРублях + СтрокаКомплектующего.СуммаБезНДС;
						КонецЕсли;
					КонецЦикла;
				Иначе
					Если ОС Тогда
						ОСПоСтроке = ?(СписаниеОС, СтрокаТовара.Номенклатура, СтрокаТовара.ОсновноеСредство);
						Если СтрокиПоПрослеживаемымТоварам[0].Номенклатура = ОСПоСтроке Тогда
							СтрокиПоПрослеживаемымТоварам[0].СуммаБезНДС = СтрокаТовара.СуммаБезНДСРуб;
						Иначе
							СуммаВзаиморасчетов = ?(НДСВключенВСтоимость, 
							СтрокаТовара.СуммаВзаиморасчетов - СтрокаТовара.СуммаНДСВзаиморасчетов,
							СтрокаТовара.СуммаВзаиморасчетов);
							СуммаВзаиморасчетов = ?(СуммаВзаиморасчетов = 0, 1, СуммаВзаиморасчетов);
							
							Курс = ?(СписаниеОС, 
							СтрокаТовара.СуммаБУ / СуммаВзаиморасчетов,
							СтрокаТовара.СуммаБезНДСРуб / СуммаВзаиморасчетов);
							
							СтрокиПоПрослеживаемымТоварам[0].СуммаБезНДС = СтрокиПоПрослеживаемымТоварам[0].СуммаБезНДС * Курс;
						КонецЕсли;
					ИначеЕсли Корректировка Или ЭтоВозвратПоставщику Тогда
						СтрокиПоПрослеживаемымТоварам[0].СуммаБезНДС = СтрокиПоПрослеживаемымТоварам[0].СуммаБезНДС *
							(СтрокаТовара.СуммаБУ / СтрокаТовара.СуммаВзаиморасчетов);
					Иначе
						СтрокиПоПрослеживаемымТоварам[0].СуммаБезНДС = СтрокиПоПрослеживаемымТоварам[0].СуммаБезНДС *
							(СтрокаТовара.СуммаРуб / СтрокаТовара.СуммаВзаиморасчетов);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Корректировка Тогда
			
			Для Каждого СтрокаОперации Из СтрокиПоПрослеживаемымТоварам Цикл
				Если СтрокаТовара <> Неопределено Тогда
					// В случае, когда таблица рассчитывается для документов корректировки поступления и корректировки реализации тоже есть отличия 
					// Если это документ с видом исправление, тогда сумму в рублях просто заполняем как есть
					// Если это корректировка по согласованию сторон, то нужно получить разницу между суммой до изменения и получившейся в результате корректировки
					Если Исправление Тогда 
						Строка.СуммаБезНДС = СтрокаТовара.СуммаБезНДСРуб;
					Иначе
						Строка.СуммаБезНДС = ?(СтрокаТовара.СуммаБезНДСРубДоИзменения > СтрокаТовара.СуммаБезНДСРуб, 
						СтрокаТовара.СуммаБезНДСРубДоИзменения - СтрокаТовара.СуммаБезНДСРуб,
						СтрокаТовара.СуммаБезНДСРуб - СтрокаТовара.СуммаБезНДСРубДоИзменения);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		ИначеЕсли НЕ ЭтоВозвратПоставщику Тогда
			Для Каждого СтрокаОперации Из СтрокиПоПрослеживаемымТоварам Цикл
				
				Если СтрокаТовара <> Неопределено Тогда 
					СтрокаОперации.СуммаБезНДС = СтрокаТовара.СуммаБезНДСРуб;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ДанныеРНПТПоОС(ПараметрыЗапроса) Экспорт
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПрослеживаемыеОСОстатки.Организация КАК Организация,
	|	ПрослеживаемыеОСОстатки.РНПТ КАК РНПТ,
	|	ПрослеживаемыеОСОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПрослеживаемыеОСОстатки.ОсновноеСредство КАК ОС,
	|	ПрослеживаемыеОСОстатки.Комплектующие КАК Номенклатура,
	|	ПрослеживаемыеОСОстатки.КоличествоОстаток КАК Количество,
	|	ПрослеживаемыеОСОстатки.КоличествоПрослеживаемостиОстаток КАК КоличествоПрослеживаемости,
	|	&ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ИСТИНА КАК ПрослеживаемыйТовар
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеОсновныеСредства.Остатки(
	|			&Дата,
	|			Организация = &Организация
	|				И ОсновноеСредство = &ОС) КАК ПрослеживаемыеОСОстатки";
	
	Запрос.УстановитьПараметр("Организация",         ПараметрыЗапроса.Организация);
	Запрос.УстановитьПараметр("ОС",                  ПараметрыЗапроса.ОС);
	Запрос.УстановитьПараметр("ИдентификаторСтроки", ПараметрыЗапроса.ИдентификаторСтроки);
	Запрос.УстановитьПараметр("Дата",                Новый Граница(ПараметрыЗапроса.Дата, ВидГраницы.Исключая));
	ТаблицаСведенияПрослеживаемости = Запрос.Выполнить().Выгрузить();
		
	Возврат ТаблицаСведенияПрослеживаемости;

КонецФункции

Процедура СверитьИПодобратьОстаткиРНПТПоОС(ДокументОбъект, Отказ, ИмяТабличнойЧасти) Экспорт
	
	ТаблицаТоваров = ДокументОбъект[ИмяТабличнойЧасти].Выгрузить();
	ЭтоСписаниеОС = Ложь;
	ЭтоПродажаОС = Ложь;
	Если ТаблицаТоваров.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	КонтролироватьОстаток = НЕ БухгалтерскийУчетПереопределяемый.ОтключитьКонтрольОтрицательныхОстатков();
	ОсталисьМатериальныеЦенностиОтВыбытия = Ложь;
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.СписаниеОС") Тогда
		ТаблицаРНПТОстатки = ПолучитьОстаткиПоОС(ДокументОбъект, ТаблицаТоваров);
		ЭтоСписаниеОС = Истина;
		ОсталисьМатериальныеЦенностиОтВыбытия = ДокументОбъект.ОсталисьМатериальныеЦенностиОтВыбытия;
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПередачаОС") Тогда
		ТаблицаРНПТОстатки = ПолучитьОстаткиПоОС(ДокументОбъект, ТаблицаТоваров);
		ЭтоПродажаОС = Истина;
	КонецЕсли;
	
	ПараметрыПодбораРНПТ = ПодготовитьСтруктуруПараметровДляПодбораРНПТИзОстатков();
	ДопПараметрыДляСверкиОстатков = ДополнительныеПараметрыДляСверкиОстатковВПрослеживаемости();
		
	Для Каждого СтрокаТабличнойЧасти ИЗ ДокументОбъект[ИмяТабличнойЧасти] Цикл
		Если НЕ СтрокаТабличнойЧасти.ПрослеживаемыйТовар Тогда
			Продолжить;
		КонецЕсли;
		ГрупповойОбъект = 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТабличнойЧасти.ОсновноеСредство, "ЕдиницаУчета")
			= Перечисления.ЕдиницыУчетаОС.ГрупповойОбъект;
			
		ДопПараметрыДляСверкиОстатков.ГрупповойОбъект = ГрупповойОбъект;

		Если ЭтоСписаниеОС Тогда
			Если ГрупповойОбъект Тогда
				
				СтрокиСРНПТ = ДокументОбъект.СведенияПрослеживаемости.НайтиСтроки(
				Новый Структура("ИдентификаторСтроки", СтрокаТабличнойЧасти.КлючСтроки));
			Иначе
				СтрокиСРНПТ = ДокументОбъект.ЦенностиОтВыбытия.НайтиСтроки(
				Новый Структура("КлючСтроки, ПрослеживаемыйТовар", СтрокаТабличнойЧасти.КлючСтроки, Истина));
			КонецЕсли;
		Иначе
			Отбор = Новый Структура("ИдентификаторСтроки", СтрокаТабличнойЧасти.ИдентификаторСтроки);
			СтрокиСРНПТ = ДокументОбъект.СведенияПрослеживаемости.Выгрузить(Отбор);
		КонецЕсли;
		
		КоличествоРНПТ = СтрокиСРНПТ.Количество();
		
		// Проверим итоги по суммовым показателям для составных ОС 
		Если ЭтоПродажаОС Тогда
			Если СтрокаТабличнойЧасти.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС
				Или СтрокаТабличнойЧасти.СтавкаНДС = Перечисления.СтавкиНДС.НДС0 Тогда
				ТребуетсяСуммаНДС = Ложь;
			Иначе 
				ТребуетсяСуммаНДС = Истина;
			КонецЕсли;
			
			Если СтрокаТабличнойЧасти.СуммаНДС < СтрокиСРНПТ.Итог("СуммаНДС") Тогда
				ТекстСообщения = НСтр("ru = 'Сумма НДС по прослеживаемым комплектующим больше суммы НДС по основному средству'");
				Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].РНПТ";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
			КонецЕсли;
			СуммаБезНДС = ?(ДокументОбъект.СуммаВключаетНДС, СтрокаТабличнойЧасти.Сумма - СтрокаТабличнойЧасти.СуммаНДС, СтрокаТабличнойЧасти.Сумма);
			Если СуммаБезНДС < СтрокиСРНПТ.Итог("Сумма") Тогда 
				ТекстСообщения = НСтр("ru = 'Сумма без НДС по прослеживаемым комплектующим больше суммы без НДС по основному средству'");
				
				Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].РНПТ";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
			КонецЕсли;
		КонецЕсли;
		
		// Для групповых ОС необходимо подобрать РНПТ, если они не заполнены
		// Если РНПТ заполнены, то сверить с остатками
		Если ГрупповойОбъект Тогда
			ОсталосьПодобрать = СтрокаТабличнойЧасти.Количество;
			
			Если КоличествоРНПТ = 0 Тогда
				// Если РНПТ по групповым ОС не заполнены, но заполнены РНПТ по оставшимся материалам
				// Тогда для подстановки возьмем сначала те РНПТ, которые заполнены по оставшимся материалам.
				Если ЭтоСписаниеОС И ОсталисьМатериальныеЦенностиОтВыбытия Тогда
					
					РНПТПоОСтавшимсяМатериалам = ДокументОбъект.ЦенностиОтВыбытия.НайтиСтроки(
					Новый Структура("КлючСтроки", СтрокаТабличнойЧасти.КлючСтроки));
					
					Для Каждого Строка Из РНПТПоОставшимсяМатериалам Цикл
						Если Не Строка.ПрослеживаемыйТовар Тогда
							Продолжить;
						КонецЕсли;
						Если ОсталосьПодобрать < Строка.Количество Тогда
							ТекстСообщения = НСтр("ru = 'Количество оставшихся прослеживаемых материалов не может превышать количество списываемых основных средств.'");
							
							Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].Количество";
							ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
						Иначе
							// Проверим, что РНПТ по оставшимся материалам есть на остатках.
							СтруктураПроверки = Новый Структура("ОсновноеСредство, Номенклатура, СтранаПроисхождения, РНПТ, Количество, КоличествоПрослеживаемости", 
							СтрокаТабличнойЧасти.ОсновноеСредство, Справочники.Номенклатура.ПустаяСсылка(),
							Строка.СтранаПроисхождения, Строка.РНПТ, Строка.Количество, Строка.КоличествоПрослеживаемости);
								СверитьСОстаткамиВПрослеживаемости(ДокументОбъект, Отказ, СтруктураПроверки,
							СтрокаТабличнойЧасти, ТаблицаРНПТОстатки, ИмяТабличнойЧасти, ДопПараметрыДляСверкиОстатков);
							НоваяСтрокаРНПТ = ДокументОбъект.СведенияПрослеживаемости.Добавить();
							НоваяСтрокаРНПТ.ИдентификаторСтроки        = Строка.КлючСтроки;
							НоваяСтрокаРНПТ.Количество                 = Строка.Количество;
							НоваяСтрокаРНПТ.КоличествоПрослеживаемости = Строка.Количество;
							НоваяСтрокаРНПТ.СтранаПроисхождения        = Строка.СтранаПроисхождения;
							НоваяСтрокаРНПТ.РНПТ                       = Строка.РНПТ;
							ОсталосьПодобрать = ОсталосьПодобрать - Строка.Количество;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				Если ОсталосьПодобрать <> 0 Тогда
					// Добавляем РНПТ из остатков.
					
					ПодобратьРНПТИзОстатков(ДокументОбъект, ОсталосьПодобрать, СтрокаТабличнойЧасти, ТаблицаРНПТОстатки, ПараметрыПодбораРНПТ);
				КонецЕсли;
				
				Если ОсталосьПодобрать <> 0 Тогда
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Для целей учета прослеживаемости не списано %1 основного средства %2'"),
					Формат(ОсталосьПодобрать, "ЧЦ=15; ЧДЦ=3"),
					СтрокаТабличнойЧасти.ОсновноеСредство);
					
					Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].Количество";
					
					ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
				КонецЕсли;
				
			ИначеЕсли КонтролироватьОстаток Тогда
				
				Для Каждого СтрокаСРНПТ ИЗ СтрокиСРНПТ Цикл
					ТребуемоеКоличество = СтрокаСРНПТ.Количество;
					ТребуемоеКоличествоПрослеживаемости = СтрокаСРНПТ.КоличествоПрослеживаемости;
					СверитьСОстаткамиВПрослеживаемости(ДокументОбъект, Отказ, СтрокаСРНПТ,
					СтрокаТабличнойЧасти, ТаблицаРНПТОстатки, ИмяТабличнойЧасти, ДопПараметрыДляСверкиОстатков);
				КонецЦикла;
				
			КонецЕсли;
			
			Если ЭтоСписаниеОС И ОсталисьМатериальныеЦенностиОтВыбытия  Тогда 
				// Если в списании ОС остались материалы после выбытия ОС, то надо проверить
				// что РНПТ по оставшимся материалам выбраны как списываемые РНПТ
				
				Отбор = Новый Структура("КлючСтроки, ПрослеживаемыйТовар", СтрокаТабличнойЧасти.КлючСтроки, Истина);
				ТаблицаЦенностей = ДокументОбъект.ЦенностиОтВыбытия.Выгрузить(Отбор);
				ТаблицаЦенностей.Свернуть("КлючСтроки,СтранаПроисхождения, РНПТ, ПрослеживаемыйТовар", "Количество");
				Для Каждого Строка Из ТаблицаЦенностей Цикл
					
					Если Не Строка.ПрослеживаемыйТовар Тогда
						Продолжить;
					КонецЕсли;
					
					ОтборПоСведениям = Новый Структура("ИдентификаторСтроки, СтранаПроисхождения, РНПТ",
					Строка.КлючСтроки, Строка.СтранаПроисхождения, Строка.РНПТ);
					
					РНПТПоСведениям = ДокументОбъект.СведенияПрослеживаемости.НайтиСтроки(ОтборПоСведениям);
					КоличествоРНПТПоСведениям = 0;
					Если РНПТПоСведениям.Количество() = 0 Тогда
						ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'РНПТ %1 по стране происхождения %2 не указан как РНПТ для списания, но указан как РНПТ по оставшимся материалам'"),
						Строка.РНПТ, Строка.СтранаПроисхождения);
						
						Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].РНПТ";
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
					Иначе
						Для Каждого СтрокаСведений Из РНПТПоСведениям Цикл
							КоличествоРНПТПоСведениям = КоличествоРНПТПоСведениям + СтрокаСведений.Количество;
						КонецЦикла;
						Если КоличествоРНПТПоСведениям < Строка.Количество Тогда 
							ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = 'РНПТ %1 по стране происхождения %2 по оставшимся материалам (количество %3) меньше чем по основному средству (количество %4)'"),
							Строка.РНПТ, Строка.СтранаПроисхождения, Строка.Количество, КоличествоРНПТПоСведениям);
							
							Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].РНПТ";
							ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		// Для ОС с видом "Инвентарный Объект", РНПТ не заполняется, происходит только сверка с остатками 
		Иначе
			Если ЭтоСписаниеОС Тогда
				Отбор = Новый Структура("ИдентификаторСтроки", СтрокаТабличнойЧасти.КлючСтроки);
				ТаблицаСведений = ДокументОбъект.СведенияПрослеживаемости.НайтиСтроки(Отбор);
				Для Каждого Строка Из ТаблицаСведений Цикл
					ДокументОбъект.СведенияПрослеживаемости.Удалить(Строка);
				КонецЦикла;
				РНПТПоОС = ТаблицаРНПТОстатки.НайтиСтроки(Новый Структура("ОС", СтрокаТабличнойЧасти.ОсновноеСредство));
				Если РНПТПоОС.Количество() = 0 Тогда
					ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Не найдены РНПТ по основному средству'"),
					СтрокаТабличнойЧасти.НомерСтроки, ИмяТабличнойЧасти);
					Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].ОсновноеСредство";
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект.Ссылка, Поле, "Объект");
				КонецЕсли;
				Для Каждого Строка Из РНПТПоОС Цикл
					НоваяСтрока = ДокументОбъект.СведенияПрослеживаемости.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
					НоваяСтрока.ИдентификаторСтроки = СтрокаТабличнойЧасти.КлючСтроки;
					НоваяСтрока.Номенклатура        = Строка.Комплектующие;
				КонецЦикла;
			КонецЕсли;
			
			Для Каждого СтрокаСРНПТ ИЗ СтрокиСРНПТ Цикл
				ТребуемоеКоличество = СтрокаСРНПТ.Количество;
				ТребуемоеКоличествоПрослеживаемости = СтрокаСРНПТ.КоличествоПрослеживаемости;
				СверитьСОстаткамиВПрослеживаемости(ДокументОбъект, Отказ, СтрокаСРНПТ,
				СтрокаТабличнойЧасти, ТаблицаРНПТОстатки, ИмяТабличнойЧасти, ДопПараметрыДляСверкиОстатков);
				Если ЭтоПродажаОС Тогда
					Если Не ЗначениеЗаполнено(СтрокаСРНПТ.Сумма) И ЗначениеЗаполнено(СтрокаСРНПТ.Номенклатура) Тогда
						ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Сумма без НДС для прослеживаемых комплектующих по основному средству'"),
						СтрокаТабличнойЧасти.НомерСтроки, ИмяТабличнойЧасти);
						Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].РНПТ";
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
					КонецЕсли;
					Если Не ЗначениеЗаполнено(СтрокаСРНПТ.СуммаНДС) И ЗначениеЗаполнено(СтрокаСРНПТ.Номенклатура) И ТребуетсяСуммаНДС Тогда
						ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Сумма НДС для прослеживаемых комплектующих по основному средству'"),
						СтрокаТабличнойЧасти.НомерСтроки, ИмяТабличнойЧасти);
						Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].РНПТ";
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
					КонецЕсли;
					
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Если ЭтоПродажаОС И ТаблицаРНПТОстатки.Количество() <> 0 Тогда
		Для Каждого Строка Из ТаблицаРНПТОстатки Цикл
			Если Не Строка.ГрупповойОбъект Тогда
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Для основного средства %1 подобраны не все РНПТ'"),
				Строка.ОС);
				ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументОбъект.Ссылка,, "Объект", Отказ);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	КолонкиГруппировки = "Номенклатура, СтранаПроисхождения, РНПТ, ИдентификаторСтроки";
	КолонкиСуммирования = "Количество, КоличествоПрослеживаемости";
	Если ЭтоПродажаОС Тогда
		КолонкиСуммирования = КолонкиСуммирования + ",Сумма, СуммаНДС";
	КонецЕсли;
	ДокументОбъект.СведенияПрослеживаемости.Свернуть(КолонкиГруппировки, КолонкиСуммирования);

КонецПроцедуры

Процедура СформироватьДвиженияКорректировкиПрослеживаемыхТоваровВЕАЭС(ТаблицаТовары,
		ТаблицаРеквизиты, Движения) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	ОбщиеПараметры = ПодготовитьОбщиеПараметры(ТаблицаРеквизиты);
	Реквизиты = ОбщиеПараметры.Реквизиты[0];
	
	Если НЕ Справочники.СтраныМира.ГосударствоЧленТаможенногоСоюза(Реквизиты.СтранаРегистрации) Тогда
		Возврат;
	КонецЕсли;	
	
	СформироватьДвиженияКорректировкиПрослеживаемыхТоваровЕАЭС(ТаблицаТовары, Реквизиты, Движения);
	
КонецПроцедуры

Функция ПодготовитьПараметрыКорректировкиПрослеживаемыхТоваров(ТаблицаТовары) Экспорт
	
	Параметры = Новый Структура;
	
	СписокОбязательныхКолонок = ""
	+ "Контрагент,"                 // <СправочникСсылка.Контрагенты> - контрагент
	+ "Номенклатура,"               // <СправочникСсылка.Номенклатура> - номенклатура
	+ "КорректировочныйДокумент,"   // <ДокументСсылка> - корректировочный документ
	+ "СопроводительныйДокумент,"   // <ДокументСсылка> - сопроводительный документ
	+ "РНПТ,"                       // <СправочникСсылка.НомераГТД> - РНПТ
	+ "ПорядковыйНомер,"            // <Число,15> - порядковый номер Номенклатуры в сопроводительном документе
	+ "Количество,"                 // <Число,15,3> - количество
	+ "КоличествоПрослеживаемости," // <Число,26,11> - количество в единицах прослеживаемости
	+ "Сумма";                      // <Число,15,3> - сумма
	
	Параметры.Вставить("Товары", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаТовары, СписокОбязательныхКолонок));
		
	Возврат Параметры;
	
КонецФункции

Процедура СформироватьДвиженияКорректировкиПрослеживаемыхТоваровЕАЭС(ТаблицаТовары, Реквизиты, Движения) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаТовары) Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыКорректировкиПрослеживаемыхТоваров(ТаблицаТовары);
	
	Для Каждого СтрокаТаблицы Из Параметры.Товары Цикл
		
		Запись = Движения.ПрослеживаемыеТоварыОтгруженныеВЕАЭС.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, Реквизиты);
		ЗаполнитьЗначенияСвойств(Запись, СтрокаТаблицы);
		
	КонецЦикла;
	
	Движения.ПрослеживаемыеТоварыОтгруженныеВЕАЭС.Записывать = Истина;

КонецПроцедуры

// Заполнение документа "Корректировочное уведомление о перемещении"
//
// Параметры:
//  УведомлениеОбъект    - ДокументОбъект.УведомлениеОперемещенииПрослеживаемыхТоваров - документ, для которого
//                                                                                        выполняется заполнение.
//  ДанныеЗаполнения - Произвольный - см. описание параметра в синтаксис-помощнике к обработчику ОбработкаЗаполнения.
//  ТекстЗаполнения - Строка - см. описание параметра в синтаксис-помощнике к обработчику ОбработкаЗаполнения.
//  СтандартнаяОбработка - Булево - см. описание параметра в синтаксис-помощнике к обработчику ОбработкаЗаполнения.
//
Процедура ЗаполнитьКорректировочноеУведомлениеОПеремещенииПрослеживаемыхТоваров(УведомлениеОбъект, 
		ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	УведомлениеОбъект.Ответственный = Пользователи.ТекущийПользователь();
	УведомлениеОбъект.Дата = ТекущаяДата();
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеЗаполнения, "Проведен") = Ложь Тогда
		
		ТекстОшибки = НСтр("ru='Документ %Документ% не проведен. Ввод на основании непроведенного документа запрещен.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
	ДанныеТаблиц = ЗаполнитьДокументДаннымиИзКоррДокументов(
		УведомлениеОбъект.Дата, ДанныеЗаполнения.Организация, ДанныеЗаполнения);
		
	Если ЗначениеЗаполнено(ДанныеТаблиц.Реквизиты) Тогда	
		
		ЗаполнитьЗначенияСвойств(УведомлениеОбъект, ДанныеТаблиц.Реквизиты);
	
		УведомлениеОбъект.Контрагенты.Загрузить(ДанныеТаблиц.Контрагенты);
		УведомлениеОбъект.Товары.Загрузить(ДанныеТаблиц.Товары);
		УведомлениеОбъект.КорректировочныеДокументы.Загрузить(ДанныеТаблиц.КорректировочныеДокументы);
		УведомлениеОбъект.ТранзитныеСтраныЕАЭС.Загрузить(ДанныеТаблиц.ТранзитныеСтраныЕАЭС);
		
	Иначе
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
			ДокументОснование = ДанныеЗаполнения.Сделка;
		Иначе
			ДокументОснование = ДанныеЗаполнения.ИсходныйДокументРеализации;
		КонецЕсли;	
		
		ТекстОшибки = НСтр("ru='Создание корректировочного уведомления запрещено. Не найдено уведомление о перемещении, по документу: %Документ%'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДокументОснование);
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;	
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПодготовитьПараметрыРегистрацииПрослеживаемогоТовара(ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	СписокОбязательныхКолонок = ""
	+ "Регистратор,"   // <ДокументСсылка.*> - документ-регистратор движений
	+ "Основание,"   // <ДокументСсылка.*> - документ-регистратор движений
	+ "Период,"        // <Дата> - период движений - дата документа
	+ "Организация,"   // <СправочникСсылка.Организации>
	+ "Склад";    // <СправочникСсылка.Склады>
	
	Параметры.Вставить("Реквизиты", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
		
	Возврат Параметры;
	
КонецФункции

Процедура СформироватьДвиженияПрослеживаемыхТоваров(ТаблицаТовары, Реквизиты, Движения, Списание = Ложь)
	
	Если Не ЗначениеЗаполнено(ТаблицаТовары) Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыДвиженияТоваров(ТаблицаТовары);
	
	Для Каждого СтрокаТаблицы Из Параметры.Товары Цикл
		Если Списание Тогда
			Запись = Движения.ПрослеживаемыеТовары.ДобавитьРасход();
		Иначе
			Запись = Движения.ПрослеживаемыеТовары.ДобавитьПриход();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(Запись, Реквизиты);
		ЗаполнитьЗначенияСвойств(Запись, СтрокаТаблицы);
	КонецЦикла;
	
	Движения.ПрослеживаемыеТовары.Записывать = Истина;

КонецПроцедуры

Процедура ПодобратьРНПТИзОстатков(ДокументОбъект, ОсталосьПодобрать, СтрокаТабличнойЧасти, ТаблицаРНПТОстатки, ПараметрыПодбораРНПТ)
	
	ЭтоОС = Ложь;
	ЭтоВыбытиеОС = Ложь;
	СписаниеОС = Ложь;
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПринятиеКУчетуОС")
		Или ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.МодернизацияОС")Тогда
		Отбор = Новый Структура("Номенклатура", ?(ПараметрыПодбораРНПТ.Комплектующий = Неопределено, ДокументОбъект.Номенклатура, ПараметрыПодбораРНПТ.Комплектующий));
		ЭтоОС = Истина;
	ИначеЕсли ПараметрыПодбораРНПТ.ОтобратьПоСделке Тогда
		Отбор = Новый Структура("Номенклатура, СтранаПроисхождения, Сделка",
			СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.СтранаПроисхождения, 
			?(ЗначениеЗаполнено(СтрокаТабличнойЧасти.Сделка), СтрокаТабличнойЧасти.Сделка, ДокументОбъект.Сделка));
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.КомплектацияНоменклатуры")
		И ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийКомплектацияНоменклатуры.Разукомплектация Тогда
		Отбор = Новый Структура("Номенклатура, СтранаПроисхождения, Комплектующие",
				ДокументОбъект.Номенклатура, СтрокаТабличнойЧасти.СтранаПроисхождения, СтрокаТабличнойЧасти.Номенклатура);
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПередачаОС")
		Или ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.СписаниеОС")Тогда
		Отбор = Новый Структура("ОС", СтрокаТабличнойЧасти.ОсновноеСредство);
		ЭтоВыбытиеОС = Истина;
		СписаниеОС = ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.СписаниеОС");
	Иначе 		
		Если ТаблицаРНПТОстатки.Колонки.Найти("ВидЗапасов") <> Неопределено Тогда
			ТоварыЗакупленныеДляКомитента = БухгалтерскийУчетПовтИсп.СписокСчетовТоварыЗакупленныеДляКомитента();
			ТоварыПринятыеНаКомиссию = БухгалтерскийУчетПовтИсп.СписокСчетовТоварыПринятыеНаКомиссию();
			ВидЗапасов = Перечисления.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка();
			СчетаУчета = Новый Структура("Счет, СчетУчета"); // в некоторых документах счет учета называется просто "Счет"
			ЗаполнитьЗначенияСвойств(СчетаУчета, СтрокаТабличнойЧасти);
			Если Не ЗначениеЗаполнено(СчетаУчета.СчетУчета) Тогда
				СчетДляОпределенияВидаЗапасов = СчетаУчета.Счет;
			Иначе
				СчетДляОпределенияВидаЗапасов = СчетаУчета.СчетУчета;
			КонецЕсли;
			Если ТоварыЗакупленныеДляКомитента.Найти(СчетДляОпределенияВидаЗапасов) <> Неопределено Тогда
				ВидЗапасов = Перечисления.ВидыЗапасовПрослеживаемыхТоваров.ТоварыЗакупленныеДляКомитента;
			ИначеЕсли ТоварыПринятыеНаКомиссию.Найти(СчетДляОпределенияВидаЗапасов) <> Неопределено Тогда
				ВидЗапасов = Перечисления.ВидыЗапасовПрослеживаемыхТоваров.ТоварыОтКомитентаНаРеализацию;
			КонецЕсли;
			Отбор = Новый Структура("Номенклатура, СтранаПроисхождения, ВидЗапасов",
				СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.СтранаПроисхождения, ВидЗапасов);
		Иначе
			Отбор = Новый Структура("Номенклатура, СтранаПроисхождения",
				СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.СтранаПроисхождения);
		КонецЕсли;
		
	КонецЕсли;
	
	ОстаткиРНПТ = ТаблицаРНПТОстатки.НайтиСтроки(Отбор);
	Для Каждого ПодобранныйРНПТ Из ОстаткиРНПТ Цикл
		Если ОсталосьПодобрать = 0 Тогда
			Прервать;
		КонецЕсли;
		// Возможные "нулевые" остатки пропускаем.
		Если ПодобранныйРНПТ.Количество <= 0
			ИЛИ ПодобранныйРНПТ.КоличествоПрослеживаемости <= 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если ОсталосьПодобрать >= ПодобранныйРНПТ.Количество Тогда
			// Добавляем все количество из подобранного РНПТ
			НоваяСтрока = ДокументОбъект.СведенияПрослеживаемости.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ПодобранныйРНПТ, "РНПТ, Количество, КоличествоПрослеживаемости");
			НоваяСтрока.ИдентификаторСтроки = ?(СписаниеОС, СтрокаТабличнойЧасти.КлючСтроки, СтрокаТабличнойЧасти.ИдентификаторСтроки);
			Если ПараметрыПодбораРНПТ.ЕстьКомитент Тогда 
				НоваяСтрока.Комитент = ПодобранныйРНПТ.Комитент;
			КонецЕсли; 
			
			Если ЭтоОС Тогда
				НоваяСтрока.Номенклатура = ПодобранныйРНПТ.Номенклатура;
				НоваяСтрока.СтранаПроисхождения = ПодобранныйРНПТ.СтранаПроисхождения;
			ИначеЕсли ЭтоВыбытиеОС Тогда 
				НоваяСтрока.СтранаПроисхождения = ПодобранныйРНПТ.СтранаПроисхождения;
			КонецЕсли;
			
			ОсталосьПодобрать = ОсталосьПодобрать - ПодобранныйРНПТ.Количество;
			ТаблицаРНПТОстатки.Удалить(ПодобранныйРНПТ);
		Иначе
			НоваяСтрока = ДокументОбъект.СведенияПрослеживаемости.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ПодобранныйРНПТ, "РНПТ, Количество, КоличествоПрослеживаемости");
			Если ПараметрыПодбораРНПТ.ЕстьКомитент Тогда 
				НоваяСтрока.Комитент = ПодобранныйРНПТ.Комитент;
			КонецЕсли;
			
			Если ЭтоОС Тогда
				НоваяСтрока.Номенклатура = ПодобранныйРНПТ.Номенклатура;
				НоваяСтрока.СтранаПроисхождения = ПодобранныйРНПТ.СтранаПроисхождения;
			ИначеЕсли ЭтоВыбытиеОС Тогда 
				НоваяСтрока.СтранаПроисхождения = ПодобранныйРНПТ.СтранаПроисхождения;
			КонецЕсли;

			НоваяСтрока.ИдентификаторСтроки = ?(СписаниеОС, СтрокаТабличнойЧасти.КлючСтроки, СтрокаТабличнойЧасти.ИдентификаторСтроки);
			НоваяСтрока.Количество = ОсталосьПодобрать;
			
			МассивКоэффициентов = Новый Массив;
			МассивКоэффициентов.Добавить(ПодобранныйРНПТ.Количество - ОсталосьПодобрать);
			МассивКоэффициентов.Добавить(ОсталосьПодобрать);
			МассивСумм = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
				ПодобранныйРНПТ.КоличествоПрослеживаемости, МассивКоэффициентов, 11);
				
			Если МассивСумм <> Неопределено Тогда
				ПодобранноеКоличествоРНПТ = МассивСумм[1];
				НоваяСтрока.КоличествоПрослеживаемости = ПодобранноеКоличествоРНПТ;
			Иначе
				ПодобранноеКоличествоРНПТ = 0;
			КонецЕсли;
			
			ПодобранныйРНПТ.Количество = ПодобранныйРНПТ.Количество - ОсталосьПодобрать;
			ПодобранныйРНПТ.КоличествоПрослеживаемости = ПодобранныйРНПТ.КоличествоПрослеживаемости - ПодобранноеКоличествоРНПТ;
			
			ОсталосьПодобрать = 0;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ТаблицаРНПТОстатки(ДокументОбъект, ТаблицаТоваров, РеализацияЧерезКомиссионера)
	
	Если ТаблицаТоваров.Колонки.Найти("СчетУчета") = Неопределено Тогда
		Если ТаблицаТоваров.Колонки.Найти("Счет") = Неопределено Тогда
			ТаблицаТоваров.Колонки.Добавить("СчетУчета");
		Иначе
			ТаблицаТоваров.Колонки.Счет.Имя = "СчетУчета";
		КонецЕсли;
	КонецЕсли;
	
	Если ТаблицаТоваров.Колонки.Найти("ПрослеживаемыйКомплект") = Неопределено Тогда
		ТаблицаТоваров.Колонки.Добавить("ПрослеживаемыйКомплект", Новый ОписаниеТипов("Булево"));
	КонецЕсли;
	
	ТаблицаТоваров.Колонки.Добавить("Комплектующие", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.КомплектацияНоменклатуры") 
		И ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийКомплектацияНоменклатуры.Разукомплектация Тогда
		ЭтоРазукомплектация = Истина;
	Иначе
		ЭтоРазукомплектация = Ложь;
	КонецЕсли;
	
	Если ЭтоРазукомплектация Тогда
		МассивНоменклатура = ТаблицаТоваров.ВыгрузитьКолонку("Номенклатура");
		ТаблицаТоваров.ЗагрузитьКолонку(МассивНоменклатура, "Комплектующие");
		ТаблицаТоваров.ЗаполнитьЗначения(ДокументОбъект.Номенклатура, "Номенклатура")
	КонецЕсли;
	
	ТаблицаТоваров.Свернуть("Номенклатура,СтранаПроисхождения,СчетУчета, ПрослеживаемыйКомплект, Комплектующие");
		
	// Блокируем регистр ПрослеживаемыеТовары для получения остатков
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПрослеживаемыеТовары");
	ЭлементБлокировки.УстановитьЗначение("Организация", ДокументОбъект.Организация);
	ЭлементБлокировки.УстановитьЗначение("Период", Новый Диапазон(, ДокументОбъект.Дата));
	ЭлементБлокировки.ИсточникДанных = ТаблицаТоваров;
	Если ЭтоРазукомплектация Тогда 
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Комплектующие", "Комплектующие");
		ЭлементБлокировки.УстановитьЗначение("Номенклатура", ДокументОбъект.Номенклатура);
	Иначе
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	КонецЕсли;
	
	// Установим дополнительные ограничения по комиссионным товарам
	Комиссионер = ?(РеализацияЧерезКомиссионера, ДокументОбъект.Контрагент, Справочники.Контрагенты.ПустаяСсылка());
	Комитент    = Справочники.Контрагенты.ПустаяСсылка();
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПередачаТоваров")
		И ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийПередачаТоваров.ПередачаТоваровКомитенту Тогда
		Комитент    = ДокументОбъект.Контрагент;
		ЭлементБлокировки.УстановитьЗначение("Комитент", Комитент);
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВозвратТоваровПоставщику") И РеализацияЧерезКомиссионера Тогда 
		// К подбору РНПТ по остаткам обращаемся только если происходит возврат товаров комитенту-продавцу
		Комитент    = ДокументОбъект.Контрагент;     
		ЭлементБлокировки.УстановитьЗначение("Комитент", Комитент);
	КонецЕсли;
	ЭлементБлокировки.УстановитьЗначение("Комиссионер", Комиссионер);
	Блокировка.Заблокировать();
	
	// При изменении даты проведенного документа в большую сторону при получении остатков не учитываем движения текущего
	// документа. 
	ИсключитьДвиженияДокументаИзОстатков = ДокументОбъект.Проведен
		И ДокументОбъект.Дата > ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.Ссылка, "Дата");
	
	Запрос = Новый Запрос;
	
	МоментСписания = Новый МоментВремени(ДокументОбъект.Дата, ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("МоментСписания", МоментСписания);
	Запрос.УстановитьПараметр("Организация",    ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("Комиссионер",    Комиссионер);
	Запрос.УстановитьПараметр("Комитент",       Комитент);
	Запрос.УстановитьПараметр("ТаблицаТоваров", ТаблицаТоваров);
	Запрос.УстановитьПараметр("ТекущийДокумент", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ИсключитьДвиженияДокументаИзОстатков", ИсключитьДвиженияДокументаИзОстатков);
	Запрос.УстановитьПараметр("ТоварыЗакупленныеДляКомитента", БухгалтерскийУчетПовтИсп.СписокСчетовТоварыЗакупленныеДляКомитента());
	Запрос.УстановитьПараметр("ТоварыПринятыеНаКомиссию", БухгалтерскийУчетПовтИсп.СписокСчетовТоварыПринятыеНаКомиссию());
	Запрос.УстановитьПараметр("Разукомплектация", ЭтоРазукомплектация);
	Запрос.УстановитьПараметр("ПроверятьРНПТ",    ПроверкаРНПТ.ИспользованиеПроверкиВозможно());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СчетУчета В (&ТоварыЗакупленныеДляКомитента)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыЗакупленныеДляКомитента)
	|		КОГДА ТаблицаТоваров.СчетУчета В (&ТоварыПринятыеНаКомиссию)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыОтКомитентаНаРеализацию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка)
	|	КОНЕЦ КАК ВидЗапасов,
	|	ТаблицаТоваров.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект,
	|	ТаблицаТоваров.Комплектующие КАК Комплектующие
	|ПОМЕСТИТЬ ТаблицаТоваровПредварительная
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	ВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваровПредварительная.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровПредварительная.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаТоваровПредварительная.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТоваровПредварительная.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект,
	|	ТаблицаТоваровПредварительная.Комплектующие КАК Комплектующие,
	|	ЕСТЬNULL(СправочникНоменклатура.КодТНВЭД.Код, """") КАК ТНВЭДКод,
	|	ЕСТЬNULL(СтраныМира.Код, """") КАК СтранаКод
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ТаблицаТоваровПредварительная КАК ТаблицаТоваровПредварительная
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТоваровПредварительная.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК СтраныМира
	|		ПО ТаблицаТоваровПредварительная.СтранаПроисхождения = СтраныМира.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	ВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиРНПТСИсключеннымиДвижениями.Номенклатура КАК Номенклатура,
	|	ОстаткиРНПТСИсключеннымиДвижениями.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ОстаткиРНПТСИсключеннымиДвижениями.РНПТ КАК РНПТ,
	|	ОстаткиРНПТСИсключеннымиДвижениями.Комитент КАК Комитент,
	|	ОстаткиРНПТСИсключеннымиДвижениями.ВидЗапасов КАК ВидЗапасов,
	|	СУММА(ОстаткиРНПТСИсключеннымиДвижениями.Количество) КАК Количество,
	|	СУММА(ОстаткиРНПТСИсключеннымиДвижениями.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	ОстаткиРНПТСИсключеннымиДвижениями.Комплектующие КАК Комплектующие
	|ПОМЕСТИТЬ ОстаткиРНПТ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПрослеживаемыеТоварыОстатки.Номенклатура КАК Номенклатура,
	|		ПрослеживаемыеТоварыОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	|		ПрослеживаемыеТоварыОстатки.РНПТ КАК РНПТ,
	|		ПрослеживаемыеТоварыОстатки.КоличествоОстаток КАК Количество,
	|		ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемостиОстаток КАК КоличествоПрослеживаемости,
	|		ПрослеживаемыеТоварыОстатки.Комитент КАК Комитент,
	|		ПрослеживаемыеТоварыОстатки.ВидЗапасов КАК ВидЗапасов,
	|		ПрослеживаемыеТоварыОстатки.Комплектующие КАК Комплектующие
	|	ИЗ
	|		РегистрНакопления.ПрослеживаемыеТовары.Остатки(
	|				&МоментСписания,
	|				Организация = &Организация
	|					И (Номенклатура, ВидЗапасов) В
	|						(ВЫБРАТЬ
	|							ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|							ТаблицаТоваров.ВидЗапасов КАК ВидЗапасов
	|						ИЗ
	|							ТаблицаТоваров КАК ТаблицаТоваров)
	|					И Комиссионер = &Комиссионер
	|					И Комитент = &Комитент) КАК ПрослеживаемыеТоварыОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПрослеживаемыеТовары.Номенклатура,
	|		ПрослеживаемыеТовары.СтранаПроисхождения,
	|		ПрослеживаемыеТовары.РНПТ,
	|		ВЫБОР
	|			КОГДА ПрослеживаемыеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ПрослеживаемыеТовары.Количество
	|			ИНАЧЕ ПрослеживаемыеТовары.Количество
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ПрослеживаемыеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ПрослеживаемыеТовары.КоличествоПрослеживаемости
	|			ИНАЧЕ ПрослеживаемыеТовары.КоличествоПрослеживаемости
	|		КОНЕЦ,
	|		ПрослеживаемыеТовары.Комитент,
	|		ПрослеживаемыеТовары.ВидЗапасов,
	|		ПрослеживаемыеТовары.Комплектующие
	|	ИЗ
	|		РегистрНакопления.ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
	|	ГДЕ
	|		&ИсключитьДвиженияДокументаИзОстатков
	|		И ПрослеживаемыеТовары.Регистратор = &ТекущийДокумент) КАК ОстаткиРНПТСИсключеннымиДвижениями
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиРНПТСИсключеннымиДвижениями.Номенклатура,
	|	ОстаткиРНПТСИсключеннымиДвижениями.СтранаПроисхождения,
	|	ОстаткиРНПТСИсключеннымиДвижениями.РНПТ,
	|	ОстаткиРНПТСИсключеннымиДвижениями.Комитент,
	|	ОстаткиРНПТСИсключеннымиДвижениями.ВидЗапасов,
	|	ОстаткиРНПТСИсключеннымиДвижениями.Комплектующие
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	ВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.ПрослеживаемыйКомплект
	|			ТОГДА ОстаткиРНПТ.СтранаПроисхождения
	|		ИНАЧЕ ТаблицаТоваров.СтранаПроисхождения
	|	КОНЕЦ КАК СтранаПроисхождения,
	|	ЕСТЬNULL(ОстаткиРНПТ.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(ОстаткиРНПТ.КоличествоПрослеживаемости, 0) КАК КоличествоПрослеживаемости,
	|	ЕСТЬNULL(ОстаткиРНПТ.РНПТ, ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)) КАК РНПТ,
	|	ЕСТЬNULL(ОстаткиРНПТ.Комитент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Комитент,
	|	ЕСТЬNULL(ОстаткиРНПТ.ВидЗапасов, ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка)) КАК ВидЗапасов,
	|	ЕСТЬNULL(СвойстваРНПТ.ДатаПоступления, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПоступления,
	|	ЕСТЬNULL(ОстаткиРНПТ.Комплектующие, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Комплектующие,
	|	ВЫБОР
	|		КОГДА НЕ &ПроверятьРНПТ
	|			ТОГДА 3
	|		КОГДА ЕСТЬNULL(СведенияОРНПТИзФНС.ОшибкаПроверкиРНПТ, ИСТИНА)
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(ОстаткиРНПТ.КоличествоПрослеживаемости, 0) <= СведенияОРНПТИзФНС.КоличествоТовараВвезенного
	|				И ВЫБОР
	|					КОГДА ЕСТЬNULL(СведенияОРНПТИзФНС.КодТНВЭД, """") <> """"
	|							И ТаблицаТоваров.ТНВЭДКод <> """"
	|						ТОГДА ПОДСТРОКА(СведенияОРНПТИзФНС.КодТНВЭД, 1, 4) = ПОДСТРОКА(ТаблицаТоваров.ТНВЭДКод, 1, 4)
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|			ТОГДА 3
	|		КОГДА ВЫБОР
	|				КОГДА ЕСТЬNULL(СведенияОРНПТИзФНС.КодТНВЭД, """") <> """"
	|						И ТаблицаТоваров.ТНВЭДКод <> """"
	|					ТОГДА ПОДСТРОКА(СведенияОРНПТИзФНС.КодТНВЭД, 1, 4) = ПОДСТРОКА(ТаблицаТоваров.ТНВЭДКод, 1, 4)
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВалидныйРНПТ
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиРНПТ КАК ОстаткиРНПТ
	|		ПО ТаблицаТоваров.Номенклатура = ОстаткиРНПТ.Номенклатура
	|			И (ВЫБОР
	|				КОГДА ТаблицаТоваров.ПрослеживаемыйКомплект
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ТаблицаТоваров.СтранаПроисхождения = ОстаткиРНПТ.СтранаПроисхождения
	|			КОНЕЦ)
	|			И ТаблицаТоваров.ВидЗапасов = ОстаткиРНПТ.ВидЗапасов
	|			И (ВЫБОР
	|				КОГДА &Разукомплектация
	|					ТОГДА ТаблицаТоваров.Комплектующие = ОстаткиРНПТ.Комплектующие
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвойстваРНПТ КАК СвойстваРНПТ
	|		ПО (СвойстваРНПТ.Организация = &Организация)
	|			И (ОстаткиРНПТ.РНПТ = СвойстваРНПТ.РНПТ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОРНПТИзФНС КАК СведенияОРНПТИзФНС
	|		ПО (&ПроверятьРНПТ)
	|			И (ОстаткиРНПТ.РНПТ = СведенияОРНПТИзФНС.РНПТ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВалидныйРНПТ УБЫВ,
	|	ДатаПоступления";
	
	Если Не ЗначениеЗаполнено(Комитент) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Комитент = &Комитент", "ИСТИНА");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	ТаблицаРНПТОстатки = Запрос.Выполнить().Выгрузить();
	
	ТаблицаРНПТОстатки.Индексы.Добавить("Номенклатура");
	ТаблицаРНПТОстатки.Индексы.Добавить("СтранаПроисхождения");
	ТаблицаРНПТОстатки.Индексы.Добавить("ВидЗапасов");
	
	Возврат ТаблицаРНПТОстатки;
	
КонецФункции

Функция ТаблицаРНПТОстаткиВозвратОпт(ДокументОбъект, ТаблицаТоваров, ДокументРеализации)
	
	// Блокируем регистр ПрослеживаемыеТовары для получения остатков
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПрослеживаемыеТовары");
	ЭлементБлокировки.УстановитьЗначение("Организация", ДокументОбъект.Организация);
	ЭлементБлокировки.УстановитьЗначение("Период", Новый Диапазон(, ДокументОбъект.Дата));
	ЭлементБлокировки.ИсточникДанных = ТаблицаТоваров;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	
	// Установим дополнительные ограничения по комиссионным товарам
	Комиссионер = Справочники.Контрагенты.ПустаяСсылка();
	ЭлементБлокировки.УстановитьЗначение("Комиссионер", Комиссионер);
	Блокировка.Заблокировать();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",           ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ТаблицаТовары",         ТаблицаТоваров);
	Запрос.УстановитьПараметр("ТекущийДокумент",       ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДатаТекущегоДокумента", ДокументОбъект.Дата);
	Запрос.УстановитьПараметр("Комиссионер",           Комиссионер);
	Запрос.УстановитьПараметр("ОснованиеДляВозврата",  ДокументРеализации);
	Запрос.УстановитьПараметр("Ссылка",                ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ТоварыЗакупленныеДляКомитента", БухгалтерскийУчетПовтИсп.СписокСчетовТоварыЗакупленныеДляКомитента());
	Запрос.УстановитьПараметр("ТоварыПринятыеНаКомиссию", БухгалтерскийУчетПовтИсп.СписокСчетовТоварыПринятыеНаКомиссию());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СчетУчета В (&ТоварыЗакупленныеДляКомитента)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыЗакупленныеДляКомитента)
	|		КОГДА ТаблицаТовары.СчетУчета В (&ТоварыПринятыеНаКомиссию)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыОтКомитентаНаРеализацию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка)
	|	КОНЕЦ КАК ВидЗапасов,
	|	ТаблицаТовары.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	СтранаПроисхождения,
	|	Цена,
	|	ВидЗапасов,
	|	СчетУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслугТовары.ПрослеживаемыйКомплект
	|			ТОГДА РеализацияТоваровУслугСведенияПрослеживаемости.СтранаПроисхождения
	|		ИНАЧЕ РеализацияТоваровУслугТовары.СтранаПроисхождения
	|	КОНЕЦ КАК СтранаПроисхождения,
	|	РеализацияТоваровУслугТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	РеализацияТоваровУслугТовары.Цена КАК Цена,
	|	РеализацияТоваровУслугСведенияПрослеживаемости.Количество КАК Количество,
	|	РеализацияТоваровУслугСведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	РеализацияТоваровУслугСведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	РеализацияТоваровУслугТовары.Ссылка.Организация КАК Организация,
	|	РеализацияТоваровУслугСведенияПрослеживаемости.Комитент КАК Комитент,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	РеализацияТоваровУслугСведенияПрослеживаемости.Номенклатура КАК Комплектующие,
	|	ТаблицаТовары.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект
	|ПОМЕСТИТЬ ИсходнаяРеализация
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.СведенияПрослеживаемости КАК РеализацияТоваровУслугСведенияПрослеживаемости
	|			ПО РеализацияТоваровУслугТовары.Ссылка = РеализацияТоваровУслугСведенияПрослеживаемости.Ссылка
	|				И РеализацияТоваровУслугТовары.ИдентификаторСтроки = РеализацияТоваровУслугСведенияПрослеживаемости.ИдентификаторСтроки
	|		ПО ТаблицаТовары.Номенклатура = РеализацияТоваровУслугТовары.Номенклатура
	|			И (ВЫБОР
	|				КОГДА ТаблицаТовары.ПрослеживаемыйКомплект
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ТаблицаТовары.СтранаПроисхождения = РеализацияТоваровУслугТовары.СтранаПроисхождения
	|			КОНЕЦ)
	|			И ТаблицаТовары.Цена = РеализацияТоваровУслугТовары.Цена
	|			И ТаблицаТовары.СчетУчета = РеализацияТоваровУслугТовары.СчетУчета
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка = &ОснованиеДляВозврата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрослеживаемыеТовары.Регистратор КАК Регистратор,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ПрослеживаемыеТовары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.СчетУчета КАК СчетУчета,
	|	ПрослеживаемыеТовары.Комплектующие КАК Комплектующие,
	|	ТаблицаТовары.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект
	|ПОМЕСТИТЬ ДвиженияПоВозвратам
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
	|		ПО ТаблицаТовары.Номенклатура = ПрослеживаемыеТовары.Номенклатура
	|			И ТаблицаТовары.ВидЗапасов = ПрослеживаемыеТовары.ВидЗапасов
	|			И (ВЫБОР
	|				КОГДА ТаблицаТовары.ПрослеживаемыйКомплект
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ТаблицаТовары.СтранаПроисхождения = ПрослеживаемыеТовары.СтранаПроисхождения
	|			КОНЕЦ)
	|			И (ПрослеживаемыеТовары.Комиссионер = &Комиссионер)
	|			И (ПрослеживаемыеТовары.Период < &ДатаТекущегоДокумента)
	|			И (ПрослеживаемыеТовары.ОснованиеДляВозврата = &ОснованиеДляВозврата)
	|			И (ПрослеживаемыеТовары.Регистратор <> &Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрослеживаемыеТовары.Регистратор,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Цена,
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.СчетУчета,
	|	ПрослеживаемыеТовары.Комплектующие,
	|	ТаблицаТовары.ПрослеживаемыйКомплект,
	|	ПрослеживаемыеТовары.СтранаПроисхождения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателяТовары.Номенклатура КАК Номенклатура,
	|	ВозвратТоваровОтПокупателяСведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	-ВозвратТоваровОтПокупателяСведенияПрослеживаемости.Количество КАК Количество,
	|	-ВозвратТоваровОтПокупателяСведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровОтПокупателяТовары.ПрослеживаемыйКомплект
	|			ТОГДА ВозвратТоваровОтПокупателяСведенияПрослеживаемости.СтранаПроисхождения
	|		ИНАЧЕ ВозвратТоваровОтПокупателяТовары.СтранаПроисхождения
	|	КОНЕЦ КАК СтранаПроисхождения,
	|	ВозвратТоваровОтПокупателяТовары.Ссылка.Организация КАК Организация,
	|	ВозвратТоваровОтПокупателяСведенияПрослеживаемости.Комитент КАК Комитент,
	|	ДвиженияПоВозвратам.ВидЗапасов КАК ВидЗапасов,
	|	ВозвратТоваровОтПокупателяСведенияПрослеживаемости.Номенклатура КАК Комплектующие
	|ПОМЕСТИТЬ РеализацияМинусВозврат
	|ИЗ
	|	ДвиженияПоВозвратам КАК ДвиженияПоВозвратам
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя.СведенияПрослеживаемости КАК ВозвратТоваровОтПокупателяСведенияПрослеживаемости
	|			ПО ВозвратТоваровОтПокупателяТовары.Ссылка = ВозвратТоваровОтПокупателяСведенияПрослеживаемости.Ссылка
	|				И ВозвратТоваровОтПокупателяТовары.ИдентификаторСтроки = ВозвратТоваровОтПокупателяСведенияПрослеживаемости.ИдентификаторСтроки
	|		ПО ДвиженияПоВозвратам.Регистратор = ВозвратТоваровОтПокупателяТовары.Ссылка
	|			И ДвиженияПоВозвратам.Номенклатура = ВозвратТоваровОтПокупателяТовары.Номенклатура
	|			И (ВЫБОР
	|				КОГДА ДвиженияПоВозвратам.ПрослеживаемыйКомплект
	|					ТОГДА ДвиженияПоВозвратам.СтранаПроисхождения = ВозвратТоваровОтПокупателяСведенияПрослеживаемости.СтранаПроисхождения
	|				ИНАЧЕ ДвиженияПоВозвратам.СтранаПроисхождения = ВозвратТоваровОтПокупателяТовары.СтранаПроисхождения
	|			КОНЕЦ)
	|			И ДвиженияПоВозвратам.Цена = ВозвратТоваровОтПокупателяТовары.Цена
	|			И ДвиженияПоВозвратам.СчетУчета = ВозвратТоваровОтПокупателяТовары.СчетУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.РНПТ,
	|	ЕСТЬNULL(ВложенныйЗапрос.Количество, 0) - ЕСТЬNULL(ИсходнаяРеализация.Количество, 0),
	|	ЕСТЬNULL(ВложенныйЗапрос.КоличествоПрослеживаемости, 0) - ЕСТЬNULL(ИсходнаяРеализация.КоличествоПрослеживаемости, 0),
	|	ИсходнаяРеализация.СтранаПроисхождения,
	|	ИсходнаяРеализация.Организация,
	|	ВложенныйЗапрос.Комитент,
	|	ИсходнаяРеализация.ВидЗапасов,
	|	ИсходнаяРеализация.Комплектующие
	|ИЗ
	|	ИсходнаяРеализация КАК ИсходнаяРеализация
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			КорректировкаРеализацииТовары.Номенклатура КАК Номенклатура,
	|			КорректировкаРеализацииСведенияПрослеживаемости.РНПТ КАК РНПТ,
	|			КорректировкаРеализацииСведенияПрослеживаемости.Количество КАК Количество,
	|			КорректировкаРеализацииСведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|			КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|			ДвиженияПоВозвратам.СтранаПроисхождения КАК СтранаПроисхожденияДоИзменения,
	|			КорректировкаРеализацииСведенияПрослеживаемости.Комитент КАК Комитент,
	|			ДвиженияПоВозвратам.Комплектующие КАК Комплектующие
	|		ИЗ
	|			ДвиженияПоВозвратам КАК ДвиженияПоВозвратам
	|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
	|					ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.СведенияПрослеживаемости КАК КорректировкаРеализацииСведенияПрослеживаемости
	|					ПО КорректировкаРеализацииТовары.Ссылка = КорректировкаРеализацииСведенияПрослеживаемости.Ссылка
	|						И КорректировкаРеализацииТовары.ИдентификаторСтроки = КорректировкаРеализацииСведенияПрослеживаемости.ИдентификаторСтроки
	|				ПО ДвиженияПоВозвратам.Регистратор = КорректировкаРеализацииТовары.Ссылка
	|					И ДвиженияПоВозвратам.Номенклатура = КорректировкаРеализацииТовары.Номенклатура
	|					И (ВЫБОР
	|						КОГДА КорректировкаРеализацииТовары.ПрослеживаемыйКомплект
	|							ТОГДА ДвиженияПоВозвратам.СтранаПроисхождения = КорректировкаРеализацииСведенияПрослеживаемости.СтранаПроисхождения
	|						ИНАЧЕ ДвиженияПоВозвратам.СтранаПроисхождения = КорректировкаРеализацииТовары.СтранаПроисхожденияДоИзменения
	|					КОНЕЦ)
	|					И ДвиженияПоВозвратам.СчетУчета = КорректировкаРеализацииТовары.СчетУчета
	|		ГДЕ
	|			КорректировкаРеализацииСведенияПрослеживаемости.ЭтоСтрокаСИсходнымиРНПТ = ЛОЖЬ) КАК ВложенныйЗапрос
	|		ПО ИсходнаяРеализация.ИдентификаторСтроки = ВложенныйЗапрос.ИдентификаторСтроки
	|			И ИсходнаяРеализация.РНПТ = ВложенныйЗапрос.РНПТ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИсходнаяРеализация.Номенклатура,
	|	ИсходнаяРеализация.РНПТ,
	|	ИсходнаяРеализация.Количество,
	|	ИсходнаяРеализация.КоличествоПрослеживаемости,
	|	ИсходнаяРеализация.СтранаПроисхождения,
	|	ИсходнаяРеализация.Организация,
	|	ИсходнаяРеализация.Комитент,
	|	ИсходнаяРеализация.ВидЗапасов,
	|	ИсходнаяРеализация.Комплектующие
	|ИЗ
	|	ИсходнаяРеализация КАК ИсходнаяРеализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияМинусВозврат.Номенклатура КАК Номенклатура,
	|	РеализацияМинусВозврат.РНПТ КАК РНПТ,
	|	СУММА(РеализацияМинусВозврат.Количество) КАК Количество,
	|	СУММА(РеализацияМинусВозврат.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	РеализацияМинусВозврат.СтранаПроисхождения КАК СтранаПроисхождения,
	|	РеализацияМинусВозврат.Организация КАК Организация,
	|	РеализацияМинусВозврат.Комитент КАК Комитент,
	|	РеализацияМинусВозврат.ВидЗапасов КАК ВидЗапасов,
	|	РеализацияМинусВозврат.Комплектующие КАК Комплектующие
	|ПОМЕСТИТЬ РеализацияМинусВозвратСводно
	|ИЗ
	|	РеализацияМинусВозврат КАК РеализацияМинусВозврат
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияМинусВозврат.РНПТ,
	|	РеализацияМинусВозврат.Номенклатура,
	|	РеализацияМинусВозврат.СтранаПроисхождения,
	|	РеализацияМинусВозврат.Организация,
	|	РеализацияМинусВозврат.Комитент,
	|	РеализацияМинусВозврат.ВидЗапасов,
	|	РеализацияМинусВозврат.Комплектующие
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияМинусВозвратСводно.Номенклатура КАК Номенклатура,
	|	РеализацияМинусВозвратСводно.РНПТ КАК РНПТ,
	|	РеализацияМинусВозвратСводно.Количество КАК Количество,
	|	РеализацияМинусВозвратСводно.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	РеализацияМинусВозвратСводно.СтранаПроисхождения КАК СтранаПроисхождения,
	|	РеализацияМинусВозвратСводно.Организация КАК Организация,
	|	РеализацияМинусВозвратСводно.Комитент КАК Комитент,
	|	РеализацияМинусВозвратСводно.ВидЗапасов КАК ВидЗапасов,
	|	РеализацияМинусВозвратСводно.Комплектующие КАК Комплектующие
	|ИЗ
	|	РеализацияМинусВозвратСводно КАК РеализацияМинусВозвратСводно
	|ГДЕ
	|	РеализацияМинусВозвратСводно.Количество > 0";
	
	Запрос.Текст = ТекстЗапроса;
	
	УстановитьПривилегированныйРежим(Истина);
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	ТаблицаРезультат.Индексы.Добавить("Номенклатура");
	ТаблицаРезультат.Индексы.Добавить("СтранаПроисхождения");
	
	Возврат ТаблицаРезультат;

КонецФункции

Функция ТаблицаРНПТОстаткиВозвратРозница(ДокументОбъект, ТаблицаТоваров)
	
	// Блокируем регистр ПрослеживаемыеТовары для получения остатков
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПрослеживаемыеТовары");
	ЭлементБлокировки.УстановитьЗначение("Организация", ДокументОбъект.Организация);
	ЭлементБлокировки.УстановитьЗначение("Период", Новый Диапазон(, ДокументОбъект.Дата));
	ЭлементБлокировки.ИсточникДанных = ТаблицаТоваров;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	Блокировка.Заблокировать();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",           ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ТаблицаТоваров",        ТаблицаТоваров);
	Запрос.УстановитьПараметр("ТекущийДокумент",       ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДатаТекущегоДокумента", КонецДня(ДокументОбъект.Дата));
	Запрос.УстановитьПараметр("ДатаРеализации", 
		НачалоДня(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.Сделка, "Дата")));
	Запрос.УстановитьПараметр("ТоварыЗакупленныеДляКомитента", БухгалтерскийУчетПовтИсп.СписокСчетовТоварыЗакупленныеДляКомитента());
	Запрос.УстановитьПараметр("ТоварыПринятыеНаКомиссию", БухгалтерскийУчетПовтИсп.СписокСчетовТоварыПринятыеНаКомиссию());
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СчетУчета В (&ТоварыЗакупленныеДляКомитента)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыЗакупленныеДляКомитента)
	|		КОГДА ТаблицаТоваров.СчетУчета В (&ТоварыПринятыеНаКомиссию)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыОтКомитентаНаРеализацию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка)
	|	КОНЕЦ КАК ВидЗапасов,
	|	&ДатаРеализации КАК ДатаРеализации,
	|	ТаблицаТоваров.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	СтранаПроисхождения,
	|	ВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияМинусВозврат.Номенклатура КАК Номенклатура,
	|	РеализацияМинусВозврат.СтранаПроисхождения КАК СтранаПроисхождения,
	|	РеализацияМинусВозврат.ДатаРеализации КАК ДатаРеализации,
	|	РеализацияМинусВозврат.РНПТ КАК РНПТ,
	|	РеализацияМинусВозврат.Комитент КАК Комитент,
	|	РеализацияМинусВозврат.ВидЗапасов КАК ВидЗапасов,
	|	СУММА(РеализацияМинусВозврат.Количество) КАК Количество,
	|	СУММА(РеализацияМинусВозврат.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	РеализацияМинусВозврат.Комплектующие КАК Комплектующие
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|		ТаблицаТоваров.СтранаПроисхождения КАК СтранаПроисхождения,
	|		ТаблицаТоваров.ДатаРеализации КАК ДатаРеализации,
	|		ЕСТЬNULL(РеализованныеТовары.ВидЗапасов, ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка)) КАК ВидЗапасов,
	|		ЕСТЬNULL(РеализованныеТовары.Количество, 0) КАК Количество,
	|		ЕСТЬNULL(РеализованныеТовары.КоличествоПрослеживаемости, 0) КАК КоличествоПрослеживаемости,
	|		ЕСТЬNULL(РеализованныеТовары.РНПТ, ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)) КАК РНПТ,
	|		ЕСТЬNULL(РеализованныеТовары.Комитент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Комитент,
	|		РеализованныеТовары.Комплектующие КАК Комплектующие
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПрослеживаемыеТовары КАК РеализованныеТовары
	|			ПО (&Организация = РеализованныеТовары.Организация)
	|				И ТаблицаТоваров.Номенклатура = РеализованныеТовары.Номенклатура
	|				И (ВЫБОР
	|					КОГДА ТаблицаТоваров.ПрослеживаемыйКомплект
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ТаблицаТоваров.СтранаПроисхождения = РеализованныеТовары.СтранаПроисхождения
	|				КОНЕЦ)
	|				И ТаблицаТоваров.ВидЗапасов = РеализованныеТовары.ВидЗапасов
	|				И (РеализованныеТовары.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах)
	|				И (РеализованныеТовары.Регистратор <> &ТекущийДокумент)
	|				И (РеализованныеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|				И (ТаблицаТоваров.ДатаРеализации = НАЧАЛОПЕРИОДА(РеализованныеТовары.Период, ДЕНЬ))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.Номенклатура,
	|		ТаблицаТоваров.СтранаПроисхождения,
	|		ТаблицаТоваров.ДатаРеализации,
	|		ЕСТЬNULL(ВозвращенныеТовары.ВидЗапасов, ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка)),
	|		ЕСТЬNULL(-ВозвращенныеТовары.Количество, 0),
	|		ЕСТЬNULL(-ВозвращенныеТовары.КоличествоПрослеживаемости, 0),
	|		ЕСТЬNULL(ВозвращенныеТовары.РНПТ, ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)),
	|		ЕСТЬNULL(ВозвращенныеТовары.Комитент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)),
	|		ВозвращенныеТовары.Комплектующие
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПрослеживаемыеТовары КАК ВозвращенныеТовары
	|			ПО (&Организация = ВозвращенныеТовары.Организация)
	|				И (ВозвращенныеТовары.Номенклатура = ТаблицаТоваров.Номенклатура)
	|				И (ВЫБОР
	|					КОГДА ТаблицаТоваров.ПрослеживаемыйКомплект
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ВозвращенныеТовары.СтранаПроисхождения = ТаблицаТоваров.СтранаПроисхождения
	|				КОНЕЦ)
	|				И (ВозвращенныеТовары.ВидЗапасов = ТаблицаТоваров.ВидЗапасов)
	|				И (ВозвращенныеТовары.Период <= &ДатаТекущегоДокумента)
	|				И (ВозвращенныеТовары.Регистратор <> &ТекущийДокумент)
	|				И (ВозвращенныеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|				И (ВозвращенныеТовары.ДатаРеализации = ТаблицаТоваров.ДатаРеализации)) КАК РеализацияМинусВозврат
	|ГДЕ
	|	РеализацияМинусВозврат.Количество > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияМинусВозврат.РНПТ,
	|	РеализацияМинусВозврат.ВидЗапасов,
	|	РеализацияМинусВозврат.СтранаПроисхождения,
	|	РеализацияМинусВозврат.ДатаРеализации,
	|	РеализацияМинусВозврат.Номенклатура,
	|	РеализацияМинусВозврат.Комитент,
	|	РеализацияМинусВозврат.Комплектующие
	|
	|УПОРЯДОЧИТЬ ПО
	|	РНПТ";
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	ТаблицаРезультат.Индексы.Добавить("Номенклатура");
	ТаблицаРезультат.Индексы.Добавить("СтранаПроисхождения");
	ТаблицаРезультат.Индексы.Добавить("ДатаРеализации");
	ТаблицаРезультат.Индексы.Добавить("ВидЗапасов");
	
	Возврат ТаблицаРезультат;
	
КонецФункции

Функция ТаблицаРНПТИсходныйДокумент(ДокументОбъект, ТаблицаТоваров, ПередачаТоваровВСоставеРабот = Ложь)
	
	Если ТипЗнч(ДокументОбъект) <> Тип("ДокументОбъект.КорректировкаРеализации") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДокументРеализации = ДокументОбъект.ДокументРеализации;
	Если ТипЗнч(ДокументРеализации) <> Тип("ДокументСсылка.РеализацияТоваровУслуг")
		И ТипЗнч(ДокументРеализации) <> Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИмяВидаДокумента = ДокументРеализации.Метаданные().Имя;
	
	Если ПередачаТоваровВСоставеРабот Тогда
		
		Запрос = Новый Запрос;
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслугСведенияПрослеживаемости.РНПТ КАК РНПТ,
		|	РеализацияТоваровУслугСведенияПрослеживаемости.Количество КАК Количество,
		|	РеализацияТоваровУслугСведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
		|	РеализацияТоваровУслугСведенияПрослеживаемости.Номенклатура КАК Номенклатура,
		|	РеализацияТоваровУслугСведенияПрослеживаемости.СтранаПроисхождения КАК СтранаПроисхождения,
		|	РеализацияТоваровУслугСведенияПрослеживаемости.ИдентификаторСтроки КАК ИдентификаторСтроки
		|ИЗ
		|	Документ."+ИмяВидаДокумента+".СведенияПрослеживаемости КАК РеализацияТоваровУслугСведенияПрослеживаемости
		|ГДЕ
		|	&УсловиеДляКорректировки
		|	И РеализацияТоваровУслугСведенияПрослеживаемости.Ссылка = &ДокументРеализации
		|
		|УПОРЯДОЧИТЬ ПО
		|	РеализацияТоваровУслугСведенияПрослеживаемости.НомерСтроки";
		
	Иначе
		Запрос = Новый Запрос;
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслугСведенияПрослеживаемости.РНПТ КАК РНПТ,
		|	РеализацияТоваровУслугСведенияПрослеживаемости.Количество КАК Количество,
		|	РеализацияТоваровУслугСведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
		|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
		|	РеализацияТоваровУслугСведенияПрослеживаемости.Комитент КАК Комитент,
		|	РеализацияТоваровУслугТовары.СтранаПроисхождения КАК СтранаПроисхождения,
		|	РеализацияТоваровУслугТовары.ИдентификаторСтроки КАК ИдентификаторСтроки
		|ИЗ
		|	Документ."+ИмяВидаДокумента+".Товары КАК РеализацияТоваровУслугТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ."+ИмяВидаДокумента+".СведенияПрослеживаемости КАК РеализацияТоваровУслугСведенияПрослеживаемости
		|		ПО РеализацияТоваровУслугТовары.Ссылка = РеализацияТоваровУслугСведенияПрослеживаемости.Ссылка
		|			И РеализацияТоваровУслугТовары.ИдентификаторСтроки = РеализацияТоваровУслугСведенияПрослеживаемости.ИдентификаторСтроки
		|ГДЕ
		|	РеализацияТоваровУслугТовары.Ссылка = &ДокументРеализации
		|	И &УсловиеДляКорректировки
		|
		|УПОРЯДОЧИТЬ ПО
		|	РеализацияТоваровУслугСведенияПрослеживаемости.НомерСтроки";
	КонецЕсли;
	
	Если ТипЗнч(ДокументРеализации) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеДляКорректировки", "НЕ РеализацияТоваровУслугСведенияПрослеживаемости.ЭтоСтрокаСИсходнымиРНПТ");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеДляКорректировки", "Истина");
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ДокументРеализации", ДокументРеализации);
	ТаблицаРНПТИсходныйДокумент = Запрос.Выполнить().Выгрузить();
	ТаблицаРНПТИсходныйДокумент.Индексы.Добавить("ИдентификаторСтроки");
	ТаблицаРНПТИсходныйДокумент.Индексы.Добавить("СтранаПроисхождения");
	
	Возврат ТаблицаРНПТИсходныйДокумент;
	
КонецФункции

Процедура СверитьСОстаткамиВПрослеживаемости(ДокументОбъект, Отказ, СтрокаСРНПТ, СтрокаТабличнойЧасти,
	ТаблицаРНПТОстатки, ИмяТабличнойЧасти, ДополнительныеПараметры)
	
	ТребуемоеКоличество = СтрокаСРНПТ.Количество;
	ТребуемоеКоличествоПрослеживаемости = СтрокаСРНПТ.КоличествоПрослеживаемости;
	ЭтоСписаниеОС = Ложь;
	ЭтоОС = Ложь;
	Если ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") И ИмяТабличнойЧасти = "ТоварыВозвращенные" Тогда
		ОтборОстатки = Новый Структура("Номенклатура, СтранаПроисхождения, РНПТ, ДокументРеализации, ПоТекущемуДокументу",
			СтрокаТабличнойЧасти.Номенклатура,
			?(ДополнительныеПараметры.ЭтоКомплект, СтрокаСРНПТ.СтранаПроисхождения, СтрокаТабличнойЧасти.СтранаПроисхождения),
			СтрокаСРНПТ.РНПТ,
			СтрокаТабличнойЧасти.ДокументРеализации,
			СтрокаТабличнойЧасти.ПоТекущемуДокументу);
			Если ДополнительныеПараметры.ЭтоКомплект Тогда
				ОтборОстатки.Вставить("Комплектующие", СтрокаСРНПТ.Номенклатура);
			КонецЕсли;
	ИначеЕсли ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ВозвратТоваровПоставщику")
			И Не ДополнительныеПараметры.ЭтоВозвратКомитенту Тогда
			
			Сделка = ?(ДополнительныеПараметры.ДокументОснованиеВТЧ, СтрокаТабличнойЧасти.Сделка, ДокументОбъект.Сделка);
			Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Сделка, "Дата") 
					< ПрослеживаемостьБРУ.ДатаНачалаУчетаПрослеживаемыхТоваров() Тогда
					
				Сделка = Неопределено;
				
			КонецЕсли;
			
		ОтборОстатки = Новый Структура("Номенклатура, СтранаПроисхождения, РНПТ, Сделка, Комитент, ВидЗапасов",
			СтрокаТабличнойЧасти.Номенклатура,
			СтрокаТабличнойЧасти.СтранаПроисхождения,
			СтрокаСРНПТ.РНПТ,
			Сделка,
			СтрокаТабличнойЧасти.Контрагент,
			?(ЗначениеЗаполнено(СтрокаТабличнойЧасти.Контрагент), Перечисления.ВидыЗапасовПрослеживаемыхТоваров.ТоварыЗакупленныеДляКомитента,
			Перечисления.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка()));
			Если СтрокаТабличнойЧасти.ПрослеживаемыйКомплект Тогда
				ОтборОстатки.Вставить("Комплектующие", СтрокаСРНПТ.Номенклатура);
			КонецЕсли;
	ИначеЕсли ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ПринятиеКУчетуОС") Тогда
		ОтборОстатки = Новый Структура("Номенклатура, СтранаПроисхождения, РНПТ",
			?(ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийПринятияКУчетуОсновныхСредств.Оборудование,
			ДокументОбъект.Номенклатура, СтрокаСРНПТ.Номенклатура),
			СтрокаСРНПТ.СтранаПроисхождения,
			СтрокаСРНПТ.РНПТ);
			ЭтоОС = Истина;
	ИначеЕсли ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.МодернизацияОС") Тогда
		ОтборОстатки = Новый Структура("Номенклатура, СтранаПроисхождения, РНПТ",
			СтрокаСРНПТ.Номенклатура,
			СтрокаСРНПТ.СтранаПроисхождения,
			СтрокаСРНПТ.РНПТ);
		ЭтоОС = Истина;

	ИначеЕсли ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.СписаниеОС")
		Или ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ПередачаОС") Тогда
		ОтборОстатки = Новый Структура("ОС, Комплектующие, СтранаПроисхождения, РНПТ",
			СтрокаТабличнойЧасти.ОсновноеСредство,
			СтрокаСРНПТ.Номенклатура,
			СтрокаСРНПТ.СтранаПроисхождения,
			СтрокаСРНПТ.РНПТ);
		ЭтоСписаниеОС = Истина;
		ЭтоОС = Истина;
	ИначеЕсли ДополнительныеПараметры.ЭтоКомплект Тогда
		ОтборОстатки = Новый Структура("Номенклатура, СтранаПроисхождения, РНПТ, Комплектующие",
		СтрокаТабличнойЧасти.Номенклатура, СтрокаСРНПТ.СтранаПроисхождения, СтрокаСРНПТ.РНПТ, СтрокаСРНПТ.Номенклатура);
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.КомплектацияНоменклатуры")
		И ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийКомплектацияНоменклатуры.Разукомплектация Тогда
			ОтборОстатки = Новый Структура("Номенклатура, СтранаПроисхождения, РНПТ, Комплектующие",
		ДокументОбъект.Номенклатура, СтрокаТабличнойЧасти.СтранаПроисхождения, СтрокаСРНПТ.РНПТ, СтрокаТабличнойЧасти.Номенклатура);
	ИначеЕсли ДополнительныеПараметры.ПередачаТоваровВСоставеРабот Тогда
		ОтборОстатки = Новый Структура("Номенклатура, СтранаПроисхождения, РНПТ",
			СтрокаСРНПТ.Номенклатура,
			СтрокаСРНПТ.СтранаПроисхождения,
			СтрокаСРНПТ.РНПТ);
	Иначе
		ОтборОстатки = Новый Структура("Номенклатура, СтранаПроисхождения, РНПТ",
			СтрокаТабличнойЧасти.Номенклатура,
			СтрокаТабличнойЧасти.СтранаПроисхождения,
			СтрокаСРНПТ.РНПТ);
	КонецЕсли;
	
	Если ТаблицаРНПТОстатки.Колонки.Найти("ВидЗапасов") <> Неопределено
		И Не ДополнительныеПараметры.ПередачаТоваровВСоставеРабот Тогда
		СтруктураСтроки = Новый Структура("СчетУчета");
		ЗаполнитьЗначенияСвойств(СтруктураСтроки, СтрокаТабличнойЧасти);
		Если ЗначениеЗаполнено(СтруктураСтроки.СчетУчета)
			И БухгалтерскийУчетПовтИсп.СчетУчетаКомиссионногоТовара(СтруктураСтроки.СчетУчета) Тогда
			ОтборОстатки.Вставить("ВидЗапасов", Перечисления.ВидыЗапасовПрослеживаемыхТоваров.ТоварыОтКомитентаНаРеализацию);
			ОтборОстатки.Вставить("Комитент", СтрокаСРНПТ.Комитент);
		ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПередачаТоваров") И СтрокаТабличнойЧасти.СчетУчета = ПланыСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение Тогда
			ОтборОстатки.Вставить("ВидЗапасов", Перечисления.ВидыЗапасовПрослеживаемыхТоваров.ТоварыЗакупленныеДляКомитента);
		ИначеЕсли Не ОтборОстатки.Свойство("ВидЗапасов") И Не ЭтоСписаниеОС Тогда 
			ОтборОстатки.Вставить("ВидЗапасов", Перечисления.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка());
		КонецЕсли;
	КонецЕсли;

	ОстаткиРНПТ = ТаблицаРНПТОстатки.НайтиСтроки(ОтборОстатки);
	
	Если ОстаткиРНПТ.Количество() = 0 
		ИЛИ ОстаткиРНПТ[0].Количество < ТребуемоеКоличество
		ИЛИ ОстаткиРНПТ[0].КоличествоПрослеживаемости < ТребуемоеКоличествоПрослеживаемости Тогда
		Если ДополнительныеПараметры.ЭтоВыпускПродукции Тогда
			ИмяТабличнойЧасти = "Продукция"; 
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Для целей учета прослеживаемости не списано %1 РНПТ %2 по материалу %3'"),
				Формат(ТребуемоеКоличество, "ЧЦ=15; ЧДЦ=3"),
				СтрокаСРНПТ.РНПТ,
				СтрокаТабличнойЧасти.Номенклатура);
				СтрокаПродукции = ДокументОбъект.Продукция.Найти(СтрокаТабличнойЧасти.КлючСтроки, "КлючСтроки");
				НомерСтроки = ?(СтрокаПродукции = Неопределено, 0,СтрокаПродукции.НомерСтроки-1);
				Поле = "" + ИмяТабличнойЧасти + "["+ Формат(НомерСтроки,"ЧГ=") + "].Материалы";
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументОбъект.Ссылка, Поле, , Отказ);
		ИначеЕсли ЭтоСписаниеОС И ДополнительныеПараметры.ГрупповойОбъект Тогда
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Для целей учета прослеживаемости не списано %1 РНПТ %2 по основному средству %3'"),
				Формат(ТребуемоеКоличество, "ЧЦ=15; ЧДЦ=3"),
				СтрокаСРНПТ.РНПТ, СтрокаТабличнойЧасти.ОсновноеСредство);
				Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].ОсновноеСредство";
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
			Если ОстаткиРНПТ.Количество() <> 0 Тогда
				ТаблицаРНПТОстатки.Удалить(ОстаткиРНПТ[0]);
			КонецЕсли;
		ИначеЕсли ЭтоСписаниеОС И Не ДополнительныеПараметры.ГрупповойОбъект Тогда
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Для целей учета прослеживаемости не списано %1 РНПТ %2 по оставшимся материалам по основному средству %3'"),
				Формат(ТребуемоеКоличество, "ЧЦ=15; ЧДЦ=3"),
				СтрокаСРНПТ.РНПТ, СтрокаТабличнойЧасти.ОсновноеСредство);
				Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].ОсновноеСредство";
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
			Если ОстаткиРНПТ.Количество() <> 0 Тогда
				ТаблицаРНПТОстатки.Удалить(ОстаткиРНПТ[0]);
			КонецЕсли;
		Иначе
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Для целей учета прослеживаемости не списано %1 РНПТ %2'"),
				Формат(ТребуемоеКоличество, "ЧЦ=15; ЧДЦ=3"),
				СтрокаСРНПТ.РНПТ);
				Поле = "" + ИмяТабличнойЧасти + "["+ Формат(СтрокаТабличнойЧасти.НомерСтроки-1,"ЧГ=") + "].РНПТ";
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ДокументОбъект.Ссылка, Поле, "Объект", Отказ);
		КонецЕсли;
		
	Иначе
		Если ОстаткиРНПТ[0].Количество > ТребуемоеКоличество
		   И ОстаткиРНПТ[0].КоличествоПрослеживаемости > ТребуемоеКоличествоПрослеживаемости Тогда
			ОстаткиРНПТ[0].Количество = ОстаткиРНПТ[0].Количество - ТребуемоеКоличество;
			ОстаткиРНПТ[0].КоличествоПрослеживаемости = ОстаткиРНПТ[0].КоличествоПрослеживаемости - ТребуемоеКоличествоПрослеживаемости;
		Иначе
			ТаблицаРНПТОстатки.Удалить(ОстаткиРНПТ[0]);
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура СверитьОстаткиСИсходнымДокументомРеализации(СтрокаТабличнойЧасти, ТаблицаРНПТИсходныйДокумент, ТребуемоеКоличество, ТребуемоеКоличествоПрослеживаемости, ПередачаТоваровВСоставеРабот = Ложь)
	
	Если ТаблицаРНПТИсходныйДокумент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ПередачаТоваровВСоставеРабот Тогда
		ОтборИсходныйДокумент = Новый Структура("ИдентификаторСтроки",
		СтрокаТабличнойЧасти.ИдентификаторСтроки);
	Иначе
		ОтборИсходныйДокумент = Новый Структура("ИдентификаторСтроки, СтранаПроисхождения",
		СтрокаТабличнойЧасти.ИдентификаторСтроки, СтрокаТабличнойЧасти.СтранаПроисхождения);
	КонецЕсли;
	ИсходныеРНПТ = ТаблицаРНПТИсходныйДокумент.НайтиСтроки(ОтборИсходныйДокумент);
	Для Каждого ИсходныйРНПТ ИЗ ИсходныеРНПТ Цикл
		Если ТребуемоеКоличество = 0 И ТребуемоеКоличествоПрослеживаемости = 0 Тогда
			Прервать;
		КонецЕсли;
		Если ИсходныйРНПТ.Количество <= ТребуемоеКоличество
			И ИсходныйРНПТ.КоличествоПрослеживаемости <= ТребуемоеКоличествоПрослеживаемости Тогда
			ТребуемоеКоличество = ТребуемоеКоличество - ИсходныйРНПТ.Количество;
			ТребуемоеКоличествоПрослеживаемости = ТребуемоеКоличествоПрослеживаемости - ИсходныйРНПТ.КоличествоПрослеживаемости;
			ТаблицаРНПТИсходныйДокумент.Удалить(ИсходныйРНПТ);
		Иначе
			Если ИсходныйРНПТ.Количество > ТребуемоеКоличество Тогда
				ИсходныйРНПТ.Количество = ИсходныйРНПТ.Количество - ТребуемоеКоличество;
				ТребуемоеКоличество = 0;
			Иначе
				ТребуемоеКоличество = ТребуемоеКоличество - ИсходныйРНПТ.Количество;
			КонецЕсли;
			Если ИсходныйРНПТ.КоличествоПрослеживаемости > ТребуемоеКоличествоПрослеживаемости Тогда
				ИсходныйРНПТ.КоличествоПрослеживаемости = ИсходныйРНПТ.КоличествоПрослеживаемости - ТребуемоеКоличествоПрослеживаемости;
				ТребуемоеКоличествоПрослеживаемости = 0;
			Иначе
				ТребуемоеКоличествоПрослеживаемости = ТребуемоеКоличествоПрослеживаемости - ИсходныйРНПТ.КоличествоПрослеживаемости;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура ПодобратьРНПТИзИсходногоДокумента(ДокументОбъект, ОсталосьПодобрать, СтрокаТабличнойЧасти, ТаблицаРНПТИсходныйДокумент)
	
	Если ТаблицаРНПТИсходныйДокумент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИсходныеРНПТ = ТаблицаРНПТИсходныйДокумент.НайтиСтроки(Новый Структура("ИдентификаторСтроки, СтранаПроисхождения", 
		СтрокаТабличнойЧасти.ИдентификаторСтроки, СтрокаТабличнойЧасти.СтранаПроисхождения));
	
	Для Каждого ИсходныйРНПТ ИЗ ИсходныеРНПТ Цикл
		Если ОсталосьПодобрать = 0 Тогда
			Прервать;
		КонецЕсли;
		
		Если ОсталосьПодобрать >= ИсходныйРНПТ.Количество Тогда
			НоваяСтрока = ДокументОбъект.СведенияПрослеживаемости.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ИсходныйРНПТ, "РНПТ, Комитент, Количество, КоличествоПрослеживаемости");
			НоваяСтрока.ИдентификаторСтроки = СтрокаТабличнойЧасти.ИдентификаторСтроки;
			ОсталосьПодобрать = ОсталосьПодобрать - ИсходныйРНПТ.Количество;
			ТаблицаРНПТИсходныйДокумент.Удалить(ИсходныйРНПТ);
		Иначе
			НоваяСтрока = ДокументОбъект.СведенияПрослеживаемости.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ИсходныйРНПТ, "РНПТ, Комитент, Количество, КоличествоПрослеживаемости");
			НоваяСтрока.ИдентификаторСтроки = СтрокаТабличнойЧасти.ИдентификаторСтроки;
			НоваяСтрока.Количество = ОсталосьПодобрать;
			
			МассивКоэффициентов = Новый Массив;
			МассивКоэффициентов.Добавить(ИсходныйРНПТ.Количество - ОсталосьПодобрать);
			МассивКоэффициентов.Добавить(ОсталосьПодобрать);
			МассивСумм = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
				ИсходныйРНПТ.КоличествоПрослеживаемости, МассивКоэффициентов, 11);
			
			НоваяСтрока.КоличествоПрослеживаемости = МассивСумм[1];
			
			ИсходныйРНПТ.Количество = ИсходныйРНПТ.Количество - ОсталосьПодобрать;
			ИсходныйРНПТ.КоличествоПрослеживаемости = ИсходныйРНПТ.КоличествоПрослеживаемости - МассивСумм[1];
			
			ОсталосьПодобрать = 0;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПодготовитьПараметрыСвойстваРНПТ(ТаблицаРНПТ)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы реализованных товаров:
	СписокОбязательныхКолонок = ""
	+ "РНПТ"; // <СправочникСсылка.НомераГТД>
	
	Параметры.Вставить("ТаблицаРНПТ", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРНПТ, СписокОбязательныхКолонок));
	Параметры.ТаблицаРНПТ.Колонки.Добавить("ПерезаписатьРНПТ", Новый ОписаниеТипов("Булево"));
	
	РеквизитыРНПТ = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(
		ТаблицаРНПТ.Выгрузитьколонку("РНПТ"), "ЭтоРНПТ, ЭтоНомерТД");
	Для Каждого СтрокаСРНПТ Из Параметры.ТаблицаРНПТ Цикл
		ДанныеПоРНПТ = РеквизитыРНПТ.Получить(СтрокаСРНПТ.РНПТ);
		Если НЕ ДанныеПоРНПТ.ЭтоРНПТ
			ИЛИ ДанныеПоРНПТ.ЭтоНомерТД Тогда
			СтрокаСРНПТ.ПерезаписатьРНПТ = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Параметры;
	
КонецФункции

Функция ПодготовитьПараметрыДвиженияТоваров(ТаблицаТовары)
	
	Параметры = Новый Структура;
	
	СписокОбязательныхКолонок = ""
	+ "Номенклатура,"                // <СправочникСсылка.Номенклатура>
	+ "СтранаПроисхождения,"         // <СправочникСсылка.СтраныМира>
	+ "Комитент,"                    // <СправочникСсылка.Контрагенты>
	+ "ВидЗапасов,"                  // <ПеречислениеСсылка.ВидыЗапасовПрослеживаемыхТоваров>
	+ "Комиссионер,"                 // <СправочникСсылка.Контрагенты>
	+ "РНПТ,"                        // <СправочникСсылка.НомераГТД>
	+ "Количество,"                  // <Число,15,3> - количество
	+ "КоличествоПрослеживаемости,"  // <Число,26,11> - количество в единицах прослеживаемости
	+ "ДатаРеализации,"              // <Дата>
	+ "ОснованиеДляВозврата,"        // <ДокументСсылка.РеализацияТоваровИУслуг>,<ДокументСсылка.ПоступлениеТоваровУслуг>
	+ "Комплектующие";               // <СправочникСсылка.Номенклатура>
	
	Параметры.Вставить("Товары", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаТовары, СписокОбязательныхКолонок));
		
	Возврат Параметры;
	
КонецФункции

Функция ПодготовитьПараметрыОперацииСПрослеживаемымиТоварами(ТаблицаОперации, ОС)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы операций с прослеживаемыми товарами:
	СписокОбязательныхКолонок = ""
	+ "ОтражениеВОтчетности,"          // <ПеречислениеСсылка.ПорядокОтраженияВОтчетностиПоПрослеживаемости> - отчетная форма операции
	+ "ПериодОперации,"                // <Дата> - начало квартала в котором отражается операция
	+ "РНПТ,"                          // <СправочникСсылка.НомераГТД>
	+ "ДокументОперации,"              // <ДокументСсылка>
	+ "Контрагент,"                    // <СправочникСсылка.Контрагенты>
	+ "Номенклатура,"                  // <СправочникСсылка.Номенклатура>
	+ "Количество,"                    // <Число,15,3> - количество
	+ "КоличествоПрослеживаемости,"    // <Число,26,11> - количество в единицах прослеживаемости
	+ "СуммаБезНДС,"                   // <Число,15,2>
	+ "ТипДокументаВПрослеживаемости," // <СправочникСсылка.ТипыДокументов>
	+ "НомерДокумента,"                // <Строка, 11>
	+ "ДатаДокумента,"                 // <Дата>
	+ "КодОперации,"                   // <СправочникСсылка.КодыОперацийПрослеживаемости>
	+ "ИдентификаторСтроки,"           // <Строка, 16>
	+ "ПрослеживаемыйКомплект";        // <Булево>
	
	Если ОС Тогда
		СписокОбязательныхКолонок = СписокОбязательныхКолонок + ",ГрупповойОбъект";
	КонецЕсли;
	
	ЕстьКоличествоДляРаспределения = Ложь;
	Если ТаблицаОперации.Колонки.Найти("КоличествоДляРаспределения") <>Неопределено Тогда
		ЕстьКоличествоДляРаспределения = Истина;
		СписокОбязательныхКолонок = СписокОбязательныхКолонок + ",КоличествоДляРаспределения";
	КонецЕсли;
	
	ПодготовленнаяТаблица = ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
	ТаблицаОперации, СписокОбязательныхКолонок);
	
	ПоляОтбораУникальныхЗаписей = "ИдентификаторСтроки";
	ТаблицаОперацийСНесколькимиРНПТ = ПодготовленнаяТаблица.Скопировать(, ПоляОтбораУникальныхЗаписей + ", Количество");
	ТаблицаОперацийСНесколькимиРНПТ.Колонки.Добавить("КоличествоУникальных", Новый ОписаниеТипов("Число"));
	ТаблицаОперацийСНесколькимиРНПТ.ЗаполнитьЗначения(1, "КоличествоУникальных");
	СтрокиКУдалению = ТаблицаОперацийСНесколькимиРНПТ.НайтиСтроки(Новый Структура("Количество", 0));
	УдалитьСтрокиТаблицыОпераций(СтрокиКУдалению, ТаблицаОперацийСНесколькимиРНПТ);
	ТаблицаОперацийСНесколькимиРНПТ.Свернуть(ПоляОтбораУникальныхЗаписей, "КоличествоУникальных");
	СтрокиКУдалению = ТаблицаОперацийСНесколькимиРНПТ.НайтиСтроки(Новый Структура("КоличествоУникальных", 1));
	УдалитьСтрокиТаблицыОпераций(СтрокиКУдалению, ТаблицаОперацийСНесколькимиРНПТ);
	
	// Для товаров с несколькими РНПТ необходимо распределить сумму операции пропорционально количеству различных РНПТ.
	Если ТаблицаОперацийСНесколькимиРНПТ.Количество() > 0 Тогда
		
		// Отсортируем таблицу для последующего одинакого распределения суммы по количеству РНПТ.
		ПодготовленнаяТаблица.Сортировать("Номенклатура Возр, РНПТ Возр");
		ПодготовленнаяТаблица.Индексы.Добавить(ПоляОтбораУникальныхЗаписей);
		ТаблицаОперацийСНесколькимиРНПТ.Индексы.Добавить(ПоляОтбораУникальныхЗаписей);
		
		ТочностьОкругления = 2;
		Если ПодготовленнаяТаблица[0].ОтражениеВОтчетности <> Перечисления.ПорядокОтраженияВОтчетностиПоПрослеживаемости.ОтчетОбОперациях Тогда
			ТочностьОкругления = 0;
		КонецЕсли;
		
		Отбор = Новый Структура(ПоляОтбораУникальныхЗаписей);
		Для Каждого СтрокаТаблицы Из ПодготовленнаяТаблица Цикл
			Если Не ЗначениеЗаполнено(СтрокаТаблицы.СуммаБезНДС) Тогда
				Продолжить;
			КонецЕсли;
			Если СтрокаТаблицы.ПрослеживаемыйКомплект Или (ОС И НЕ СтрокаТаблицы.ГрупповойОбъект) Тогда
				Продолжить;
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(Отбор, СтрокаТаблицы);
			
			СтрокиССуммамиКРаспределению = ТаблицаОперацийСНесколькимиРНПТ.НайтиСтроки(Отбор);
			Если СтрокиССуммамиКРаспределению.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			// Удалим строки с суммами к распределению, чтобы больше не пытаться их распределить.
			Для Каждого СтрокаКУдалению Из СтрокиССуммамиКРаспределению Цикл
				ТаблицаОперацийСНесколькимиРНПТ.Удалить(СтрокаКУдалению);
			КонецЦикла;
			
			СтрокиТребующиеРаспределенияСумм = ПодготовленнаяТаблица.НайтиСтроки(Отбор);
			КоличествоСтрокКРаспределению = СтрокиТребующиеРаспределенияСумм.Количество();
			МассивКоэффициентов = Новый Массив;
			Для Каждого СтрокаКРаспределению Из СтрокиТребующиеРаспределенияСумм Цикл
				
				Если ЕстьКоличествоДляРаспределения 
					И СтрокаКРаспределению.КоличествоДляРаспределения <> 0 Тогда
					ТекущийКоэффициент = СтрокаКРаспределению.КоличествоДляРаспределения;
				ИначеЕсли СтрокаКРаспределению.Количество <> 0 Тогда
					ТекущийКоэффициент = СтрокаКРаспределению.Количество;
				Иначе
					ТекущийКоэффициент = 1;
				КонецЕсли;
				МассивКоэффициентов.Добавить(ТекущийКоэффициент);
				
			КонецЦикла;
			
			МассивСумм = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
			СтрокаТаблицы.СуммаБезНДС, МассивКоэффициентов, ТочностьОкругления);
			
			Для ИндексЗаписи = 0 По КоличествоСтрокКРаспределению - 1 Цикл
				СтрокиТребующиеРаспределенияСумм[ИндексЗаписи].СуммаБезНДС = МассивСумм[ИндексЗаписи];
			КонецЦикла
		КонецЦикла;
	КонецЕсли;
	
	ПодготовленнаяТаблица.Свернуть("ОтражениеВОтчетности,ПериодОперации,РНПТ,ДокументОперации,Контрагент,Номенклатура,
	|КодОперации,ТипДокументаВПрослеживаемости,ДатаДокумента,НомерДокумента",
	"Количество, КоличествоПрослеживаемости,СуммаБезНДС");
	
	Параметры.Вставить("Операции", ПодготовленнаяТаблица);
	
	Возврат Параметры;
	
КонецФункции

Процедура УдалитьСтрокиТаблицыОпераций(СтрокиКУдалению, ТаблицаОпераций)
	
	Для Каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
		ТаблицаОпераций.Удалить(СтрокаКУдалению);
	КонецЦикла;
	
КонецПроцедуры

Функция ПодготовитьТаблицуРНПТ(ТаблицаТоваров, ТаблицаОС, ТаблицаРеквизитов, Отказ)
	
	ПустыеТаблицыРНПТ = Новый Структура("ТаблицаТоваровСРНПТ,ТаблицаОССРНПТ", Неопределено, Неопределено);
	
	Если (Не ЗначениеЗаполнено(ТаблицаТоваров)
		И Не ЗначениеЗаполнено(ТаблицаОС))
	 Или Не ЗначениеЗаполнено(ТаблицаРеквизитов) Тогда
		Возврат ПустыеТаблицыРНПТ;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыТаблицыРНПТ(ТаблицаТоваров, ТаблицаОС, ТаблицаРеквизитов);
	Реквизиты = Параметры.Реквизиты[0];
	
	Если Реквизиты.ЭтоКорректировочноеУведомление
		И ТипЗнч(Реквизиты.Основание) <> Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
		И ТипЗнч(Реквизиты.Регистратор) = Тип("ДокументСсылка.УведомлениеОВвозеПрослеживаемыхТоваров") Тогда 
		
		СтруктураТаблиц = ПустыеТаблицыРНПТ;
		
	Иначе
		
		СтруктураТаблиц = ПодготовитьТаблицуРНПТпоТовару(Реквизиты, Параметры.ТаблицаТоваров, Параметры.ТаблицаОС, Отказ);
	
	КонецЕсли;
	
	Возврат СтруктураТаблиц;
	
КонецФункции

Процедура СформироватьДвиженияПрослеживаемостьТоваров(ТаблицаДвиженийРНПТ, Движения, Отказ) Экспорт
	
	Если ЗначениеЗаполнено(ТаблицаДвиженийРНПТ) Тогда
		
		Для Каждого СтрокаТаблицы Из ТаблицаДвиженийРНПТ Цикл
			Запись = Движения.ПрослеживаемыеТовары.ДобавитьПриход();
			ЗаполнитьЗначенияСвойств(Запись, СтрокаТаблицы);
		КонецЦикла;
		
	КонецЕсли;
	
	Движения.ПрослеживаемыеТовары.Записывать = Истина;

КонецПроцедуры

Процедура СформироватьДвиженияГТД(ТаблицаДвиженийГТД, Движения, Отказ) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ТаблицаДвиженийГТД) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаГТД Из ТаблицаДвиженийГТД Цикл
		
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Период = СтрокаГТД.Период;
		Проводка.Организация = СтрокаГТД.Организация;
		Проводка.Содержание  = "Списание ГТД";
		Проводка.СчетДт = ПланыСчетов.Хозрасчетный.ГТД;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Номенклатура", СтрокаГТД.Номенклатура);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "НомераГТД", СтрокаГТД.НомерГТД);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "СтраныПроисхождения", СтрокаГТД.СтранаПроисхождения);
		Проводка.КоличествоДт = -СтрокаГТД.Количество;
		
	КонецЦикла;
	
	Движения.Хозрасчетный.Записывать = Истина;

КонецПроцедуры

Функция ПодготовитьТаблицуОстатковГТД(ТаблицаТоваров, ТаблицаРеквизитов, Отказ)
	
	Если Не ЗначениеЗаполнено(ТаблицаТоваров)
	 Или Не ЗначениеЗаполнено(ТаблицаРеквизитов) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыТаблицыГТД(ТаблицаТоваров, ТаблицаРеквизитов);
	Реквизиты = Параметры.Реквизиты[0];
	
	Если Не ЗначениеЗаполнено(Реквизиты.РНПТ)
		ИЛИ ТипЗнч(Реквизиты.Регистратор) <> Тип("ДокументСсылка.УведомлениеОбОстаткахПрослеживаемыхТоваров") Тогда

		Возврат Неопределено;
	КонецЕсли;
	
	ТаблицаГТД = ПодготовитьТаблицуОстатковГТДПоТовару(Реквизиты, Параметры.ТаблицаТоваров, Отказ);
	
	Возврат ТаблицаГТД;
	
КонецФункции

Функция ПодготовитьТаблицуРНПТпоТовару(Реквизиты, ТаблицаТоваров, ТаблицаОС, Отказ)

	СтруктураТаблиц = Новый Структура("ТаблицаТоваровСРНПТ,ТаблицаОССРНПТ");
	
	Если Не ЗначениеЗаполнено(Реквизиты.РНПТ) Тогда
		Возврат СтруктураТаблиц;
	КонецЕсли;
	
	ТаблицаТоваровСРНПТ = ТаблицаТоваров.СкопироватьКолонки();
	ТаблицаТоваровСРНПТ.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаТоваровСРНПТ.Колонки.Добавить("РНПТ", Новый ОписаниеТипов("СправочникСсылка.НомераГТД"));
	ТаблицаТоваровСРНПТ.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	
	Для каждого ТекущаяСтрока Из ТаблицаТоваров Цикл
		
		НоваяСтрока = ТаблицаТоваровСРНПТ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Реквизиты);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
		
	КонецЦикла;
	
	СтруктураТаблиц.ТаблицаТоваровСРНПТ = ТаблицаТоваровСРНПТ;
	
	ТаблицаОССРНПТ = ТаблицаОС.СкопироватьКолонки();
	ТаблицаОССРНПТ.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаОССРНПТ.Колонки.Добавить("РНПТ", Новый ОписаниеТипов("СправочникСсылка.НомераГТД"));
	ТаблицаОССРНПТ.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	
	Для каждого ТекущаяСтрока Из ТаблицаОС Цикл
		
		НоваяСтрока = ТаблицаОССРНПТ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Реквизиты);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
		
	КонецЦикла;
	
	СтруктураТаблиц.ТаблицаОССРНПТ = ТаблицаОССРНПТ;
		
	Возврат СтруктураТаблиц;
	
КонецФункции

Функция ПодготовитьТаблицуОстатковГТДПоТовару(Реквизиты, ТаблицаТоваров, Отказ)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.СтранаПроисхождения КАК СтранаПроисхождения
	|ПОМЕСТИТЬ ВТ_ТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ВТ_ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ХозрасчетныйОстатки.Субконто2 КАК НомерГТД,
	|	ВТ_ТаблицаТоваров.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ХозрасчетныйОстатки.Организация КАК Организация,
	|	ХозрасчетныйОстатки.Подразделение КАК Подразделение,
	|	ХозрасчетныйОстатки.Валюта КАК Валюта,
	|	ХозрасчетныйОстатки.КоличествоОстаток КАК Количество
	|ИЗ
	|	ВТ_ТаблицаТоваров КАК ВТ_ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(&МоментСписания, Счет = &СчетГТД, , Организация = &Организация) КАК ХозрасчетныйОстатки
	|		ПО ВТ_ТаблицаТоваров.Номенклатура = ХозрасчетныйОстатки.Субконто1
	|			И ВТ_ТаблицаТоваров.СтранаПроисхождения = ХозрасчетныйОстатки.Субконто3";
	
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	МоментСписания = Новый Граница(Реквизиты.Регистратор.МоментВремени(), ВидГраницы.Исключая);
	Запрос.УстановитьПараметр("МоментСписания", МоментСписания);
	Запрос.УстановитьПараметр("СчетГТД", ПланыСчетов.Хозрасчетный.ГТД);
	Запрос.УстановитьПараметр("ТаблицаТоваров", ТаблицаТоваров); 
	
	ТаблицаОстатковГТД = Запрос.Выполнить().Выгрузить();
	ТаблицаОстатковГТД.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	ТаблицаОстатковГТД.ЗаполнитьЗначения(Реквизиты.Период, "Период");
	
	Возврат ТаблицаОстатковГТД;
	
КонецФункции

Функция ПодготовитьПараметрыТаблицыГТД(ТаблицаТоваров, ТаблицаРеквизитов)

	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ТаблицаТоваров
	
	СписокОбязательныхКолонок = ""
		+ "Номенклатура,"				// <СправочникСсылка.*> - списываемая номенклатура
		+ "СтранаПроисхождения,";		// <СправочникСсылка.СтраныМира> - страна происхождения
		
	Параметры.Вставить("ТаблицаТоваров", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаТоваров, СписокОбязательныхКолонок));
		
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
		+ "Период,"				// <Дата> - период движений - дата документа
		+ "Регистратор,"		// <ДокументСсылка.*> - документ-регистратор движений
		+ "РНПТ,"				// <СправочникСсылка.НомераГТД> - номер гтд
		+ "Организация,";		// <СправочникСсылка.Организации> - организация
		
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизитов, СписокОбязательныхКолонок));
		
	Возврат Параметры;

КонецФункции

Функция ПодготовитьПараметрыТаблицыРНПТ(ТаблицаТоваров, ТаблицаОС, ТаблицаРеквизитов)

	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ТаблицаТоваров
		
	СписокОбязательныхКолонок = ""
		+ "НомерСтроки,"                              // <Число> - номер строки в таблице товаров
		+ "Номенклатура,"                             // <СправочникСсылка.Номенклатура> - номенклатура
		+ "Количество,"		                          // <Число ,15,3> - количество
		+ "КоличествоПрослеживаемости,"               // <Число, 15,3> - количество по прослеживаемости
		+ "Сумма,"		                              // <Число, 15,3> - сумма
		+ "СтранаПроисхождения,"            // <СправочникСсылка.СтраныМира> - страна происхождения товара
		+ "Комиссионер";                    // <СправочникСсылка.Контрагенты> - комиссионер
		
	Параметры.Вставить("ТаблицаТоваров", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаТоваров, СписокОбязательныхКолонок));
		
	// Подготовка таблицы Параметры.ТаблицаОС
		
	СписокОбязательныхКолонок = ""
		+ "НомерСтроки,"                    // <Число> - номер строки в таблице товаров
		+ "ОсновноеСредство,"               // <СправочникСсылка.ОсновныеСредства> - Основное средство
		+ "Комплектующие,"                  // <СправочникСсылка.Номенклатура> - номенклатура
		+ "Количество,"                     // <Число ,15,3> - количество
		+ "КоличествоПрослеживаемости,"     // <Число, 15,3> - количество по прослеживаемости
		+ "Сумма,"                          // <Число, 15,3> - сумма
		+ "СтранаПроисхождения";            // <СправочникСсылка.СтраныМира> - страна происхождения товара
		
	Параметры.Вставить("ТаблицаОС", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаОС, СписокОбязательныхКолонок));
		
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
		+ "Период,"							// <Дата> - период движений - дата документа
		+ "Регистратор,"					// <ДокументСсылка.*> - документ-регистратор движений
		+ "Основание,"						// <ДокументСсылка.*> - документ основание
		+ "Организация,"					// <СправочникСсылка.Организации> - организация
		+ "ЭтоКорректировочноеУведомление," // <Булево> - Определяет тип уведомления
		+ "РНПТ";							// <ОпределяемыеТипы.РНПТ> - РНПТ
		
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизитов, СписокОбязательныхКолонок));
		
	Возврат Параметры;

КонецФункции

Функция ТаблицаРНПТОстаткиВозвратПоставщику(ДокументОбъект, ТаблицаТоваров, УказыватьСделкуВСтроке)
		
	// Блокируем регистр ПрослеживаемыеТовары для получения остатков
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПрослеживаемыеТовары");
	ЭлементБлокировки.УстановитьЗначение("Организация", ДокументОбъект.Организация);
	ЭлементБлокировки.УстановитьЗначение("Период", Новый Диапазон(, ДокументОбъект.Дата));
	ЭлементБлокировки.ИсточникДанных = ТаблицаТоваров;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("СтранаПроисхождения", "СтранаПроисхождения");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Комитент", "Контрагент");
	
	// Установим дополнительные ограничения по комиссионным товарам
	Комиссионер = Справочники.Контрагенты.ПустаяСсылка();
	ЭлементБлокировки.УстановитьЗначение("Комиссионер", Комиссионер);

	Блокировка.Заблокировать();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",            ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ТаблицаТоваров",         ТаблицаТоваров);
	Запрос.УстановитьПараметр("ТекущийДокумент",        ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДатаТекущегоДокумента",  КонецДня(ДокументОбъект.Дата));
	Запрос.УстановитьПараметр("Комиссионер",            Комиссионер);
	Запрос.УстановитьПараметр("УказыватьСделкуВСтроке", УказыватьСделкуВСтроке);
	Запрос.УстановитьПараметр("Сделка",                 ДокументОбъект.Сделка);
		Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ВЫБОР
	|		КОГДА &УказыватьСделкуВСтроке
	|			ТОГДА ТаблицаТоваров.Сделка
	|		ИНАЧЕ &Сделка
	|	КОНЕЦ КАК Сделка,
	|	ТаблицаТоваров.Контрагент КАК Комитент,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыЗакупленныеДляКомитента)
	|	КОНЕЦ КАК ВидЗапасов,
	|	ТаблицаТоваров.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.ПрослеживаемыйТовар = ИСТИНА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	СтранаПроисхождения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступленияМинусВозврат.Номенклатура КАК Номенклатура,
	|	ПоступленияМинусВозврат.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПоступленияМинусВозврат.РНПТ КАК РНПТ,
	|	СУММА(ПоступленияМинусВозврат.Количество) КАК Количество,
	|	СУММА(ПоступленияМинусВозврат.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	ПоступленияМинусВозврат.Сделка КАК Сделка,
	|	ПоступленияМинусВозврат.Комитент КАК Комитент,
	|	ПоступленияМинусВозврат.ВидЗапасов КАК ВидЗапасов,
	|	ПоступленияМинусВозврат.Комплектующие КАК Комплектующие
	|ПОМЕСТИТЬ ПоступленияМинусВозвратСводно
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|		ТаблицаТоваров.СтранаПроисхождения КАК СтранаПроисхождения,
	|		ЕСТЬNULL(ПоступившиеТовары.Количество, 0) КАК Количество,
	|		ЕСТЬNULL(ПоступившиеТовары.КоличествоПрослеживаемости, 0) КАК КоличествоПрослеживаемости,
	|		ЕСТЬNULL(ПоступившиеТовары.РНПТ, ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)) КАК РНПТ,
	|		ТаблицаТоваров.Сделка КАК Сделка,
	|		ТаблицаТоваров.Комитент КАК Комитент,
	|		ТаблицаТоваров.ВидЗапасов КАК ВидЗапасов,
	|		ПоступившиеТовары.Комплектующие КАК Комплектующие,
	|		ТаблицаТоваров.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПрослеживаемыеТовары КАК ПоступившиеТовары
	|			ПО (&Организация = ПоступившиеТовары.Организация)
	|				И ТаблицаТоваров.Номенклатура = ПоступившиеТовары.Номенклатура
	|				И ТаблицаТоваров.СтранаПроисхождения = ПоступившиеТовары.СтранаПроисхождения
	|				И (ПоступившиеТовары.Комиссионер = &Комиссионер)
	|				И ТаблицаТоваров.Комитент = ПоступившиеТовары.Комитент
	|				И ТаблицаТоваров.ВидЗапасов = ПоступившиеТовары.ВидЗапасов
	|				И ТаблицаТоваров.Сделка = ПоступившиеТовары.Регистратор
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.Номенклатура,
	|		ТаблицаТоваров.СтранаПроисхождения,
	|		ВЫБОР
	|			КОГДА ВозвращенныеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ЕСТЬNULL(ВозвращенныеТовары.Количество, 0)
	|			ИНАЧЕ ЕСТЬNULL(-ВозвращенныеТовары.Количество, 0)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ВозвращенныеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ЕСТЬNULL(ВозвращенныеТовары.КоличествоПрослеживаемости, 0)
	|			ИНАЧЕ ЕСТЬNULL(-ВозвращенныеТовары.КоличествоПрослеживаемости, 0)
	|		КОНЕЦ,
	|		ЕСТЬNULL(ВозвращенныеТовары.РНПТ, ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)),
	|		ТаблицаТоваров.Сделка,
	|		ТаблицаТоваров.Комитент,
	|		ТаблицаТоваров.ВидЗапасов,
	|		ВозвращенныеТовары.Комплектующие,
	|		ТаблицаТоваров.ПрослеживаемыйКомплект
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПрослеживаемыеТовары КАК ВозвращенныеТовары
	|			ПО (&Организация = ВозвращенныеТовары.Организация)
	|				И ТаблицаТоваров.Номенклатура = ВозвращенныеТовары.Номенклатура
	|				И ТаблицаТоваров.СтранаПроисхождения = ВозвращенныеТовары.СтранаПроисхождения
	|				И (ВозвращенныеТовары.Комиссионер = &Комиссионер)
	|				И ТаблицаТоваров.Комитент = ВозвращенныеТовары.Комитент
	|				И ТаблицаТоваров.ВидЗапасов = ВозвращенныеТовары.ВидЗапасов
	|				И (ВозвращенныеТовары.Период <= &ДатаТекущегоДокумента)
	|				И (ВозвращенныеТовары.Регистратор <> &ТекущийДокумент)
	|				И ТаблицаТоваров.Сделка = ВозвращенныеТовары.ОснованиеДляВозврата) КАК ПоступленияМинусВозврат
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступленияМинусВозврат.РНПТ,
	|	ПоступленияМинусВозврат.СтранаПроисхождения,
	|	ПоступленияМинусВозврат.Номенклатура,
	|	ПоступленияМинусВозврат.Сделка,
	|	ПоступленияМинусВозврат.Комитент,
	|	ПоступленияМинусВозврат.ВидЗапасов,
	|	ПоступленияМинусВозврат.Комплектующие
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступленияМинусВозвратСводно.Номенклатура КАК Номенклатура,
	|	ПоступленияМинусВозвратСводно.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПоступленияМинусВозвратСводно.РНПТ КАК РНПТ,
	|	ПоступленияМинусВозвратСводно.Количество КАК Количество,
	|	ПоступленияМинусВозвратСводно.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	ПоступленияМинусВозвратСводно.Сделка КАК Сделка,
	|	ПоступленияМинусВозвратСводно.Комитент КАК Комитент,
	|	ПоступленияМинусВозвратСводно.ВидЗапасов КАК ВидЗапасов,
	|	ПоступленияМинусВозвратСводно.Комплектующие КАК Комплектующие
	|ИЗ
	|	ПоступленияМинусВозвратСводно КАК ПоступленияМинусВозвратСводно
	|ГДЕ
	|	ПоступленияМинусВозвратСводно.Количество > 0";
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	ТаблицаРезультат.Индексы.Добавить("Номенклатура");
	ТаблицаРезультат.Индексы.Добавить("СтранаПроисхождения");
	
	Возврат ТаблицаРезультат;
	
КонецФункции

Функция ТаблицаРНПТОстаткиВозвратКомиссия(ДокументОбъект, ТаблицаТоваров)
		
	// Блокируем регистр ПрослеживаемыеТовары для получения остатков
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПрослеживаемыеТовары");
	ЭлементБлокировки.УстановитьЗначение("Организация", ДокументОбъект.Организация);
	ЭлементБлокировки.УстановитьЗначение("Период", Новый Диапазон(, ДокументОбъект.Дата));
	ЭлементБлокировки.ИсточникДанных = ТаблицаТоваров;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("СтранаПроисхождения", "СтранаПроисхождения");

	// Установим дополнительные ограничения по комиссионным товарам
	ЭлементБлокировки.УстановитьЗначение("Комиссионер", ДокументОбъект.Контрагент);

	Блокировка.Заблокировать();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",              ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("Товары",                   ДокументОбъект.Товары.Выгрузить());
	Запрос.УстановитьПараметр("ТоварыВозврат",            ТаблицаТоваров);
	Запрос.УстановитьПараметр("ТаблицаПокупатели",        ДокументОбъект.Покупатели.Выгрузить());
	Запрос.УстановитьПараметр("ТаблицаРНПТ",              ДокументОбъект.СведенияПрослеживаемости.Выгрузить());
	Запрос.УстановитьПараметр("Комиссионер",              ДокументОбъект.Контрагент);
	Запрос.УстановитьПараметр("ДатаТекущегоДокумента",    ДокументОбъект.Дата);
	Запрос.УстановитьПараметр("ТоварыПринятыеНаКомиссию", БухгалтерскийУчетПовтИсп.СписокСчетовТоварыПринятыеНаКомиссию());

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.СтранаПроисхождения КАК СтранаПроисхождения,
	|	Товары.КлючСтроки КАК КлючСтроки,
	|	Товары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА Товары.СчетУчета В (&ТоварыПринятыеНаКомиссию)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыОтКомитентаНаРеализацию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка)
	|	КОНЕЦ КАК ВидЗапасов,
	|	Товары.СчетУчета КАК СчетУчета,
	|	Товары.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&Товары КАК Товары
	|ГДЕ
	|	Товары.ПрослеживаемыйТовар = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыВозврат.Номенклатура КАК Номенклатура,
	|	ТоварыВозврат.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТоварыВозврат.ДокументРеализации КАК ДокументРеализации,
	|	ТоварыВозврат.ПоТекущемуДокументу КАК ПоТекущемуДокументу,
	|	ВЫБОР
	|		КОГДА ТоварыВозврат.СчетУчета В (&ТоварыПринятыеНаКомиссию)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыОтКомитентаНаРеализацию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка)
	|	КОНЕЦ КАК ВидЗапасов,
	|	ТоварыВозврат.СчетУчета КАК СчетУчета,
	|	ТоварыВозврат.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект
	|ПОМЕСТИТЬ ТаблицаТоваровВозврат
	|ИЗ
	|	&ТоварыВозврат КАК ТоварыВозврат
	|ГДЕ
	|	ТоварыВозврат.ПрослеживаемыйТовар = ИСТИНА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	СтранаПроисхождения,
	|	ВидЗапасов,
	|	СчетУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРНПТ.РНПТ КАК РНПТ,
	|	ТаблицаРНПТ.Количество КАК Количество,
	|	ТаблицаРНПТ.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	ТаблицаРНПТ.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаРНПТ.Комитент КАК Комитент,
	|	ВЫБОР
	|		КОГДА ТаблицаРНПТ.Комитент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыОтКомитентаНаРеализацию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка)
	|	КОНЕЦ КАК ВидЗапасов,
	|	ТаблицаРНПТ.Номенклатура КАК Комплектующие,
	|	ТаблицаРНПТ.СтранаПроисхождения КАК СтранаПроисхождения
	|ПОМЕСТИТЬ ТаблицаСведений
	|ИЗ
	|	&ТаблицаРНПТ КАК ТаблицаРНПТ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПокупатели.Покупатель КАК Покупатель,
	|	ТаблицаПокупатели.ВыставленСФ КАК ВыставленСФ,
	|	ТаблицаПокупатели.ДатаСФ КАК ДатаСФ,
	|	ТаблицаПокупатели.СчетФактура КАК СчетФактура,
	|	ТаблицаПокупатели.КлючСтроки КАК КлючСтроки,
	|	ТаблицаПокупатели.НомерСФ КАК НомерСФ
	|ПОМЕСТИТЬ ТаблицаПокупателей
	|ИЗ
	|	&ТаблицаПокупатели КАК ТаблицаПокупатели
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрослеживаемыеТовары.Регистратор КАК Регистратор,
	|	ТаблицаТоваровВозврат.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровВозврат.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаТоваровВозврат.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТоваровВозврат.СчетУчета КАК СчетУчета,
	|	ТаблицаТоваровВозврат.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект
	|ПОМЕСТИТЬ ДокументыВозврата
	|ИЗ
	|	ТаблицаТоваровВозврат КАК ТаблицаТоваровВозврат
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
	|		ПО (ПрослеживаемыеТовары.Организация = &Организация)
	|			И ТаблицаТоваровВозврат.Номенклатура = ПрослеживаемыеТовары.Номенклатура
	|			И (ВЫБОР
	|				КОГДА ТаблицаТоваровВозврат.ПрослеживаемыйКомплект
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ТаблицаТоваровВозврат.СтранаПроисхождения = ПрослеживаемыеТовары.СтранаПроисхождения
	|			КОНЕЦ)
	|			И (ПрослеживаемыеТовары.Комиссионер = &Комиссионер)
	|			И (ПрослеживаемыеТовары.ВидЗапасов = ТаблицаТоваровВозврат.ВидЗапасов)
	|			И ТаблицаТоваровВозврат.ДокументРеализации = ПрослеживаемыеТовары.ОснованиеДляВозврата
	|ГДЕ
	|	ПрослеживаемыеТовары.Период = &ДатаТекущегоДокумента
	|	И ТаблицаТоваровВозврат.ПоТекущемуДокументу = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ПрослеживаемыйКомплект
	|			ТОГДА ТаблицаСведений.СтранаПроисхождения
	|		ИНАЧЕ ТаблицаТовары.СтранаПроисхождения
	|	КОНЕЦ КАК СтранаПроисхождения,
	|	ТаблицаСведений.РНПТ КАК РНПТ,
	|	ТаблицаСведений.Комитент КАК Комитент,
	|	ТаблицаСведений.Количество КАК Количество,
	|	ТаблицаСведений.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаСведений.Комплектующие КАК Комплектующие
	|ПОМЕСТИТЬ РеализацияПоТекущемуДокументу
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаСведений КАК ТаблицаСведений
	|		ПО ТаблицаТовары.ИдентификаторСтроки = ТаблицаСведений.ИдентификаторСтроки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПокупателей КАК ТаблицаПокупателей
	|		ПО ТаблицаТовары.КлючСтроки = ТаблицаПокупателей.КлючСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.РНПТ КАК РНПТ,
	|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Количество КАК Количество,
	|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Комитент КАК Комитент,
	|	ТаблицаТоваровВозврат.ВидЗапасов КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваровВозврат.ПрослеживаемыйКомплект
	|			ТОГДА ОтчетКомиссионераОПродажахСведенияПрослеживаемости.СтранаПроисхождения
	|		ИНАЧЕ ТаблицаТоваровВозврат.СтранаПроисхождения
	|	КОНЕЦ КАК СтранаПроисхождения,
	|	ТаблицаТоваровВозврат.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровВозврат.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаТоваровВозврат.ПоТекущемуДокументу КАК ПоТекущемуДокументу,
	|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Номенклатура КАК Комплектующие,
	|	ТаблицаТоваровВозврат.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект
	|ПОМЕСТИТЬ РеализацияМинусВозврат
	|ИЗ
	|	ТаблицаТоваровВозврат КАК ТаблицаТоваровВозврат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.Товары КАК ОтчетКомиссионераОПродажахТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.СведенияПрослеживаемости КАК ОтчетКомиссионераОПродажахСведенияПрослеживаемости
	|			ПО ОтчетКомиссионераОПродажахТовары.Ссылка = ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Ссылка
	|				И ОтчетКомиссионераОПродажахТовары.ИдентификаторСтроки = ОтчетКомиссионераОПродажахСведенияПрослеживаемости.ИдентификаторСтроки
	|		ПО ТаблицаТоваровВозврат.ДокументРеализации = ОтчетКомиссионераОПродажахТовары.Ссылка
	|			И ТаблицаТоваровВозврат.Номенклатура = ОтчетКомиссионераОПродажахТовары.Номенклатура
	|			И (ВЫБОР
	|				КОГДА ТаблицаТоваровВозврат.ПрослеживаемыйКомплект
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ТаблицаТоваровВозврат.СтранаПроисхождения = ОтчетКомиссионераОПродажахТовары.СтранаПроисхождения
	|			КОНЕЦ)
	|			И ТаблицаТоваровВозврат.СчетУчета = ОтчетКомиссионераОПродажахТовары.СчетУчета
	|ГДЕ
	|	ТаблицаТоваровВозврат.ПоТекущемуДокументу = ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.РНПТ,
	|	-ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Количество,
	|	-ОтчетКомиссионераОПродажахСведенияПрослеживаемости.КоличествоПрослеживаемости,
	|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Комитент,
	|	ДокументыВозврата.ВидЗапасов,
	|	ВЫБОР
	|		КОГДА ДокументыВозврата.ПрослеживаемыйКомплект
	|			ТОГДА ОтчетКомиссионераОПродажахСведенияПрослеживаемости.СтранаПроисхождения
	|		ИНАЧЕ ДокументыВозврата.СтранаПроисхождения
	|	КОНЕЦ,
	|	ДокументыВозврата.Номенклатура,
	|	ДокументыВозврата.Регистратор,
	|	ЛОЖЬ,
	|	ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Номенклатура,
	|	ДокументыВозврата.ПрослеживаемыйКомплект
	|ИЗ
	|	ДокументыВозврата КАК ДокументыВозврата
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.ТоварыВозвращенные КАК ОтчетКомиссионераОПродажахТоварыВозвращенные
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОПродажах.СведенияПрослеживаемости КАК ОтчетКомиссионераОПродажахСведенияПрослеживаемости
	|			ПО ОтчетКомиссионераОПродажахТоварыВозвращенные.Ссылка = ОтчетКомиссионераОПродажахСведенияПрослеживаемости.Ссылка
	|				И ОтчетКомиссионераОПродажахТоварыВозвращенные.ИдентификаторСтроки = ОтчетКомиссионераОПродажахСведенияПрослеживаемости.ИдентификаторСтроки
	|		ПО ДокументыВозврата.Регистратор = ОтчетКомиссионераОПродажахТоварыВозвращенные.Ссылка
	|			И ДокументыВозврата.Номенклатура = ОтчетКомиссионераОПродажахТоварыВозвращенные.Номенклатура
	|			И (ВЫБОР
	|				КОГДА ДокументыВозврата.ПрослеживаемыйКомплект
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ДокументыВозврата.СтранаПроисхождения = ОтчетКомиссионераОПродажахТоварыВозвращенные.СтранаПроисхождения
	|			КОНЕЦ)
	|			И ДокументыВозврата.СчетУчета = ОтчетКомиссионераОПродажахТоварыВозвращенные.СчетУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияПоТекущемуДокументу.РНПТ,
	|	РеализацияПоТекущемуДокументу.Количество,
	|	РеализацияПоТекущемуДокументу.КоличествоПрослеживаемости,
	|	РеализацияПоТекущемуДокументу.Комитент,
	|	РеализацияПоТекущемуДокументу.ВидЗапасов,
	|	РеализацияПоТекущемуДокументу.СтранаПроисхождения,
	|	РеализацияПоТекущемуДокументу.Номенклатура,
	|	ЗНАЧЕНИЕ(Документ.ОтчетКомиссионераОПродажах.ПустаяСсылка),
	|	ТаблицаТоваровВозврат.ПоТекущемуДокументу,
	|	РеализацияПоТекущемуДокументу.Комплектующие,
	|	ТаблицаТоваровВозврат.ПрослеживаемыйКомплект
	|ИЗ
	|	ТаблицаТоваровВозврат КАК ТаблицаТоваровВозврат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РеализацияПоТекущемуДокументу КАК РеализацияПоТекущемуДокументу
	|		ПО ТаблицаТоваровВозврат.Номенклатура = РеализацияПоТекущемуДокументу.Номенклатура
	|			И ТаблицаТоваровВозврат.СтранаПроисхождения = РеализацияПоТекущемуДокументу.СтранаПроисхождения
	|			И ТаблицаТоваровВозврат.ВидЗапасов = РеализацияПоТекущемуДокументу.ВидЗапасов
	|ГДЕ
	|	ТаблицаТоваровВозврат.ПоТекущемуДокументу = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияМинусВозврат.РНПТ КАК РНПТ,
	|	РеализацияМинусВозврат.Комитент КАК Комитент,
	|	РеализацияМинусВозврат.ВидЗапасов КАК ВидЗапасов,
	|	СУММА(РеализацияМинусВозврат.Количество) КАК Количество,
	|	СУММА(РеализацияМинусВозврат.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	РеализацияМинусВозврат.СтранаПроисхождения КАК СтранаПроисхождения,
	|	РеализацияМинусВозврат.Номенклатура КАК Номенклатура,
	|	РеализацияМинусВозврат.ДокументРеализации КАК ДокументРеализации,
	|	РеализацияМинусВозврат.ПоТекущемуДокументу КАК ПоТекущемуДокументу,
	|	РеализацияМинусВозврат.Комплектующие КАК Комплектующие,
	|	РеализацияМинусВозврат.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект
	|ПОМЕСТИТЬ РеализацияМинусВозвратСводно
	|ИЗ
	|	РеализацияМинусВозврат КАК РеализацияМинусВозврат
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияМинусВозврат.РНПТ,
	|	РеализацияМинусВозврат.Комитент,
	|	РеализацияМинусВозврат.ВидЗапасов,
	|	РеализацияМинусВозврат.СтранаПроисхождения,
	|	РеализацияМинусВозврат.Номенклатура,
	|	РеализацияМинусВозврат.ДокументРеализации,
	|	РеализацияМинусВозврат.ПоТекущемуДокументу,
	|	РеализацияМинусВозврат.Комплектующие,
	|	РеализацияМинусВозврат.ПрослеживаемыйКомплект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияМинусВозвратСводно.РНПТ КАК РНПТ,
	|	РеализацияМинусВозвратСводно.Комитент КАК Комитент,
	|	РеализацияМинусВозвратСводно.ВидЗапасов КАК ВидЗапасов,
	|	РеализацияМинусВозвратСводно.Количество КАК Количество,
	|	РеализацияМинусВозвратСводно.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	РеализацияМинусВозвратСводно.СтранаПроисхождения КАК СтранаПроисхождения,
	|	РеализацияМинусВозвратСводно.Номенклатура КАК Номенклатура,
	|	РеализацияМинусВозвратСводно.ДокументРеализации КАК ДокументРеализации,
	|	РеализацияМинусВозвратСводно.ПоТекущемуДокументу КАК ПоТекущемуДокументу,
	|	РеализацияМинусВозвратСводно.Комплектующие КАК Комплектующие,
	|	РеализацияМинусВозвратСводно.ПрослеживаемыйКомплект КАК ПрослеживаемыйКомплект
	|ИЗ
	|	РеализацияМинусВозвратСводно КАК РеализацияМинусВозвратСводно
	|ГДЕ
	|	РеализацияМинусВозвратСводно.Количество > 0";
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	ТаблицаРезультат.Индексы.Добавить("Номенклатура");
	ТаблицаРезультат.Индексы.Добавить("СтранаПроисхождения");
	
	Возврат ТаблицаРезультат;
	
КонецФункции

Функция ПолучитьОстаткиДляПринятияКУчетуОС(ДокументОбъект, ТаблицаТоваров)
	
	// Блокируем регистр ПрослеживаемыеТовары для получения остатков
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПрослеживаемыеТовары");
	ЭлементБлокировки.УстановитьЗначение("Организация", ДокументОбъект.Организация);
	ЭлементБлокировки.УстановитьЗначение("Период", Новый Диапазон(, ДокументОбъект.Дата));
	ЭлементБлокировки.УстановитьЗначение("Номенклатура", ДокументОбъект.Номенклатура);
	// Установим дополнительные ограничения по комиссионным товарам
	Комиссионер = Справочники.Контрагенты.ПустаяСсылка();
	Комитент    = Справочники.Контрагенты.ПустаяСсылка();
	ВидЗапасов  = Перечисления.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка();
	ЭлементБлокировки.УстановитьЗначение("Комиссионер", Комиссионер);
	ЭлементБлокировки.УстановитьЗначение("Комитент",    Комитент);
	ЭлементБлокировки.УстановитьЗначение("ВидЗапасов",  ВидЗапасов);
	
	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	
	МоментСписания = Новый МоментВремени(ДокументОбъект.Дата, ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("МоментСписания", МоментСписания);
	Запрос.УстановитьПараметр("Организация",    ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("Комиссионер",    Комиссионер);
	Запрос.УстановитьПараметр("Комитент",       Комитент);
	Запрос.УстановитьПараметр("ВидЗапасов",     ВидЗапасов);
	Запрос.УстановитьПараметр("Номенклатура",   ДокументОбъект.Номенклатура);
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПрослеживаемыеТоварыОстатки.Организация КАК Организация,
	|	ПрослеживаемыеТоварыОстатки.РНПТ КАК РНПТ,
	|	ПрослеживаемыеТоварыОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПрослеживаемыеТоварыОстатки.Номенклатура КАК Номенклатура,
	|	СУММА(ПрослеживаемыеТоварыОстатки.КоличествоОстаток) КАК Количество,
	|	СУММА(ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемостиОстаток) КАК КоличествоПрослеживаемости,
	|	СвойстваРНПТ.ДатаПоступления КАК ДатаПоступления
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТовары.Остатки(
	|			&МоментСписания,
	|			Организация = &Организация
	|				И Номенклатура = &Номенклатура
	|				И ВидЗапасов = &ВидЗапасов
	|				И Комитент = &Комитент
	|				И Комиссионер = &Комиссионер) КАК ПрослеживаемыеТоварыОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СвойстваРНПТ КАК СвойстваРНПТ
	|		ПО ПрослеживаемыеТоварыОстатки.Организация = СвойстваРНПТ.Организация
	|			И ПрослеживаемыеТоварыОстатки.РНПТ = СвойстваРНПТ.РНПТ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрослеживаемыеТоварыОстатки.СтранаПроисхождения,
	|	ПрослеживаемыеТоварыОстатки.Организация,
	|	ПрослеживаемыеТоварыОстатки.РНПТ,
	|	ПрослеживаемыеТоварыОстатки.Номенклатура,
	|	СвойстваРНПТ.ДатаПоступления
	|
	|УПОРЯДОЧИТЬ ПО
	|	СвойстваРНПТ.ДатаПоступления";
	
	ТаблицаРНПТОстатки = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаРНПТОстатки;
	
КонецФункции

Функция ПолучитьОстаткиПоСоставномуОС(ДокументОбъект)
	
	// Блокируем регистр ПрослеживаемыеТовары для получения остатков
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПрослеживаемыеОсновныеСредства");
	ЭлементБлокировки.УстановитьЗначение("Организация", ДокументОбъект.Организация);
	ЭлементБлокировки.УстановитьЗначение("ОсновноеСредство", ДокументОбъект.ОбъектСтроительства);
	ЭлементБлокировки.УстановитьЗначение("Период", Новый Диапазон(, ДокументОбъект.Дата));
	Блокировка.Заблокировать();
	
	// При изменении даты проведенного документа в большую сторону при получении остатков не учитываем движения текущего
	// документа. 
	ИсключитьДвиженияДокументаИзОстатков = ДокументОбъект.Проведен
		И ДокументОбъект.Дата > ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.Ссылка, "Дата");

	Запрос = Новый Запрос;
	
	МоментСписания = Новый МоментВремени(ДокументОбъект.Дата, ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Период",               МоментСписания);
	Запрос.УстановитьПараметр("Организация",          ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ОбъектСтроительства",  ДокументОбъект.ОбъектСтроительства);
	Запрос.УстановитьПараметр("Приход",               ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("Счет",                 ДокументОбъект.СчетУчетаВнеоборотногоАктива);
	Запрос.УстановитьПараметр("Регистратор",          ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Подразделение",        ДокументОбъект.ПодразделениеОрганизации);
	ВидыСубконто = Новый Массив();
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства);
	Запрос.УстановитьПараметр("ВидыСубконто",        ВидыСубконто);
	Запрос.УстановитьПараметр("ИсключитьДвиженияДокументаИзОстатков", ИсключитьДвиженияДокументаИзОстатков);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПрослеживаемыеОСОстатки.Организация КАК Организация,
	|	ПрослеживаемыеОСОстатки.РНПТ КАК РНПТ,
	|	ПрослеживаемыеОСОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ПрослеживаемыеОСОстатки.ОсновноеСредство КАК ОС,
	|	ПрослеживаемыеОСОстатки.Комплектующие КАК Номенклатура,
	|	СУММА(ПрослеживаемыеОСОстатки.КоличествоОстаток) КАК Количество,
	|	СУММА(ПрослеживаемыеОСОстатки.КоличествоПрослеживаемостиОстаток) КАК КоличествоПрослеживаемости
	|ПОМЕСТИТЬ СоставКомплекта
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеОсновныеСредства.Остатки(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство = &ОбъектСтроительства) КАК ПрослеживаемыеОСОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрослеживаемыеОСОстатки.СтранаПроисхождения,
	|	ПрослеживаемыеОСОстатки.Организация,
	|	ПрослеживаемыеОСОстатки.РНПТ,
	|	ПрослеживаемыеОСОстатки.Комплектующие,
	|	ПрослеживаемыеОСОстатки.ОсновноеСредство
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрослеживаемыеОсновныеСредства.Организация,
	|	ПрослеживаемыеОсновныеСредства.РНПТ,
	|	ПрослеживаемыеОсновныеСредства.СтранаПроисхождения,
	|	ПрослеживаемыеОсновныеСредства.ОсновноеСредство,
	|	ПрослеживаемыеОсновныеСредства.Комплектующие,
	|	ВЫБОР
	|		КОГДА ПрослеживаемыеОсновныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрослеживаемыеОсновныеСредства.Количество
	|		ИНАЧЕ ПрослеживаемыеОсновныеСредства.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПрослеживаемыеОсновныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрослеживаемыеОсновныеСредства.КоличествоПрослеживаемости
	|		ИНАЧЕ ПрослеживаемыеОсновныеСредства.КоличествоПрослеживаемости
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеОсновныеСредства КАК ПрослеживаемыеОсновныеСредства
	|ГДЕ
	|	ПрослеживаемыеОсновныеСредства.Регистратор = &Регистратор
	|	И &ИсключитьДвиженияДокументаИзОстатков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоставКомплекта.Организация КАК Организация,
	|	СоставКомплекта.РНПТ КАК РНПТ,
	|	СоставКомплекта.СтранаПроисхождения КАК СтранаПроисхождения,
	|	СоставКомплекта.ОС КАК ОС,
	|	СоставКомплекта.Номенклатура КАК Номенклатура,
	|	СоставКомплекта.Количество КАК Количество,
	|	СоставКомплекта.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости
	|ИЗ
	|	СоставКомплекта КАК СоставКомплекта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаОстаток
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет = &Счет,
	|			&ВидыСубконто,
	|			Организация = &Организация
	|				И Подразделение = &Подразделение
	|				И Субконто1 = &ОбъектСтроительства) КАК ХозрасчетныйОстатки";
	
	Результат = Запрос.ВыполнитьПакет();
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьОстаткиПоОС(ДокументОбъект, ТаблицаОС)
	
	// Блокируем регистр ПрослеживаемыеТовары для получения остатков
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПрослеживаемыеОсновныеСредства");
	ЭлементБлокировки.УстановитьЗначение("Организация", ДокументОбъект.Организация);
	ЭлементБлокировки.УстановитьЗначение("Период", Новый Диапазон(, ДокументОбъект.Дата));
	ЭлементБлокировки.ИсточникДанных = ТаблицаОС;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ОсновноеСредство", "ОсновноеСредство");
	Блокировка.Заблокировать();
	
	// При изменении даты проведенного документа в большую сторону при получении остатков не учитываем движения текущего
	// документа. 
	ИсключитьДвиженияДокументаИзОстатков = ДокументОбъект.Проведен
		И ДокументОбъект.Дата > ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.Ссылка, "Дата");

	Запрос = Новый Запрос;
	
	МоментСписания = Новый МоментВремени(ДокументОбъект.Дата, ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("МоментСписания",                       МоментСписания);
	Запрос.УстановитьПараметр("Организация",                          ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ТаблицаОС",                            ТаблицаОС);
	Запрос.УстановитьПараметр("ИсключитьДвиженияДокументаИзОстатков", ИсключитьДвиженияДокументаИзОстатков);
	Запрос.УстановитьПараметр("ТекущийДокумент",                      ДокументОбъект.Ссылка);
		
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОС.ОсновноеСредство КАК ОС
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.ПрослеживаемыйТовар = ИСТИНА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиРНПТСИсключеннымиДвижениями.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ОстаткиРНПТСИсключеннымиДвижениями.РНПТ КАК РНПТ,
	|	СУММА(ОстаткиРНПТСИсключеннымиДвижениями.Количество) КАК Количество,
	|	СУММА(ОстаткиРНПТСИсключеннымиДвижениями.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	ОстаткиРНПТСИсключеннымиДвижениями.ОсновноеСредство КАК ОсновноеСредство,
	|	ОстаткиРНПТСИсключеннымиДвижениями.Комплектующие КАК Комплектующие
	|ПОМЕСТИТЬ ОстаткиРНПТ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПрослеживаемыеОсновныеСредстваОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	|		ПрослеживаемыеОсновныеСредстваОстатки.РНПТ КАК РНПТ,
	|		ПрослеживаемыеОсновныеСредстваОстатки.КоличествоОстаток КАК Количество,
	|		ПрослеживаемыеОсновныеСредстваОстатки.КоличествоПрослеживаемостиОстаток КАК КоличествоПрослеживаемости,
	|		ПрослеживаемыеОсновныеСредстваОстатки.ОсновноеСредство КАК ОсновноеСредство,
	|		ПрослеживаемыеОсновныеСредстваОстатки.Комплектующие КАК Комплектующие
	|	ИЗ
	|		РегистрНакопления.ПрослеживаемыеОсновныеСредства.Остатки(
	|				&МоментСписания,
	|				Организация = &Организация
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							ТаблицаОС.ОС КАК ОсновноеСредство
	|						ИЗ
	|							ТаблицаОС КАК ТаблицаОС)) КАК ПрослеживаемыеОсновныеСредстваОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПрослеживаемыеОсновныеСредства.СтранаПроисхождения,
	|		ПрослеживаемыеОсновныеСредства.РНПТ,
	|		ВЫБОР
	|			КОГДА ПрослеживаемыеОсновныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ПрослеживаемыеОсновныеСредства.Количество
	|			ИНАЧЕ ПрослеживаемыеОсновныеСредства.Количество
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ПрослеживаемыеОсновныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ПрослеживаемыеОсновныеСредства.КоличествоПрослеживаемости
	|			ИНАЧЕ ПрослеживаемыеОсновныеСредства.КоличествоПрослеживаемости
	|		КОНЕЦ,
	|		ПрослеживаемыеОсновныеСредства.ОсновноеСредство,
	|		ПрослеживаемыеОсновныеСредства.Комплектующие
	|	ИЗ
	|		РегистрНакопления.ПрослеживаемыеОсновныеСредства КАК ПрослеживаемыеОсновныеСредства
	|	ГДЕ
	|		&ИсключитьДвиженияДокументаИзОстатков
	|		И ПрослеживаемыеОсновныеСредства.Регистратор = &ТекущийДокумент) КАК ОстаткиРНПТСИсключеннымиДвижениями
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиРНПТСИсключеннымиДвижениями.СтранаПроисхождения,
	|	ОстаткиРНПТСИсключеннымиДвижениями.РНПТ,
	|	ОстаткиРНПТСИсключеннымиДвижениями.ОсновноеСредство,
	|	ОстаткиРНПТСИсключеннымиДвижениями.Комплектующие
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ОстаткиРНПТ.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(ОстаткиРНПТ.КоличествоПрослеживаемости, 0) КАК КоличествоПрослеживаемости,
	|	ЕСТЬNULL(ОстаткиРНПТ.РНПТ, ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)) КАК РНПТ,
	|	ЕСТЬNULL(ОстаткиРНПТ.СтранаПроисхождения, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) КАК СтранаПроисхождения,
	|	ЕСТЬNULL(ОстаткиРНПТ.Комплектующие, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Комплектующие,
	|	ТаблицаОС.ОС КАК ОС,
	|	ОсновныеСредства.ЕдиницаУчета = ЗНАЧЕНИЕ(Перечисление.ЕдиницыУчетаОС.ГрупповойОбъект) КАК ГрупповойОбъект
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиРНПТ КАК ОстаткиРНПТ
	|		ПО ТаблицаОС.ОС = ОстаткиРНПТ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОсновныеСредства
	|		ПО ТаблицаОС.ОС = ОсновныеСредства.Ссылка";

	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

Функция ПодготовитьПараметрыДвиженияОС(ТаблицаОС)
	
	Параметры = Новый Структура;
	
	СписокОбязательныхКолонок = ""
	+ "Комплектующие,"               // <СправочникСсылка.Номенклатура>
	+ "СтранаПроисхождения,"         // <СправочникСсылка.СтраныМира>
	+ "РНПТ,"                        // <СправочникСсылка.НомераГТД>
	+ "Количество,"                  // <Число,15,3> - количество
	+ "КоличествоПрослеживаемости,"  // <Число,26,11> - количество в единицах прослеживаемости
	+ "ОсновноеСредство";            // <СправочникСсылка.ОсновныеСредства>, <СправочникСсылка.ОбъектыСтроительства>
	
	Параметры.Вставить("ОС", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаОС, СписокОбязательныхКолонок));
		
	Возврат Параметры;
	
КонецФункции

Процедура СформироватьДвиженияПрослеживаемыхОС(ТаблицаОС, Реквизиты, Движения, Списание = Ложь)
	
	Если Не ЗначениеЗаполнено(ТаблицаОС) Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыДвиженияОС(ТаблицаОС);
	
	Для Каждого СтрокаТаблицы Из Параметры.ОС Цикл
		Если Списание Тогда
			Запись = Движения.ПрослеживаемыеОсновныеСредства.ДобавитьРасход();
		Иначе
			Запись = Движения.ПрослеживаемыеОсновныеСредства.ДобавитьПриход();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(Запись, Реквизиты);
		ЗаполнитьЗначенияСвойств(Запись, СтрокаТаблицы);
	КонецЦикла;
	
	Движения.ПрослеживаемыеОсновныеСредства.Записывать = Истина;

КонецПроцедуры

Функция ДополнитьТаблицуРНПТОстатки(ТаблицаРНПТОстатки)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаРНПТОстатки.Номенклатура КАК Номенклатура,
	|	ТаблицаРНПТОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаРНПТОстатки.Количество КАК Количество,
	|	ТаблицаРНПТОстатки.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	ТаблицаРНПТОстатки.РНПТ КАК РНПТ,
	|	ТаблицаРНПТОстатки.ДатаПоступления КАК ДатаПоступления,
	|	ТаблицаРНПТОстатки.Комплектующие КАК Комплектующие
	|ПОМЕСТИТЬ ТаблицаРНПТОстатки
	|ИЗ
	|	&ТаблицаРНПТОстатки КАК ТаблицаРНПТОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРНПТОстатки.Номенклатура КАК Номенклатура,
	|	ТаблицаРНПТОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаРНПТОстатки.Количество КАК Количество,
	|	ТаблицаРНПТОстатки.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	ТаблицаРНПТОстатки.РНПТ КАК РНПТ,
	|	ТаблицаРНПТОстатки.ДатаПоступления КАК ДатаПоступления,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.ПервичныйДокумент КАК Сделка,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Комитент,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка) КАК ВидЗапасов,
	|	ТаблицаРНПТОстатки.Комплектующие КАК Комплектующие
	|ИЗ
	|	ТаблицаРНПТОстатки КАК ТаблицаРНПТОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОВвозеПрослеживаемыхТоваров КАК УведомлениеОВвозеПрослеживаемыхТоваров
	|		ПО ТаблицаРНПТОстатки.РНПТ = УведомлениеОВвозеПрослеживаемыхТоваров.РНПТ
	|			И (УведомлениеОВвозеПрослеживаемыхТоваров.Проведен)";
	
	Запрос.УстановитьПараметр("ТаблицаРНПТОстатки", ТаблицаРНПТОстатки);
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выгрузить();
	
КонецФункции

Функция ПодготовитьСтруктуруПараметровДляПодбораРНПТИзОстатков()
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ОтобратьПоСделке", Ложь);
	СтруктураПараметров.Вставить("Комплектующий",    Неопределено);
	СтруктураПараметров.Вставить("ЕстьКомитент",     Ложь);
	
	Возврат СтруктураПараметров;
	
КонецФункции

Функция ПодготовитьПараметрыРегистрацииПрослеживаемогоОС(ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	СписокОбязательныхКолонок = ""
	+ "Регистратор,"   // <ДокументСсылка.*> - документ-регистратор движений
	+ "Основание,"   // <ДокументСсылка.*> - документ-регистратор движений
	+ "Период,"        // <Дата> - период движений - дата документа
	+ "Организация";   // <СправочникСсылка.Организации>
	
	Параметры.Вставить("Реквизиты", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
		
	Возврат Параметры;
	
КонецФункции

Процедура СформироватьДвиженияПрослеживаемостьОС(ТаблицаДвиженийРНПТ, Движения, Отказ) Экспорт
	
	Если ЗначениеЗаполнено(ТаблицаДвиженийРНПТ) Тогда
		
		Для Каждого СтрокаТаблицы Из ТаблицаДвиженийРНПТ Цикл
			Запись = Движения.ПрослеживаемыеОсновныеСредства.ДобавитьПриход();
			ЗаполнитьЗначенияСвойств(Запись, СтрокаТаблицы);
		КонецЦикла;
		
	КонецЕсли;
	
	Движения.ПрослеживаемыеОсновныеСредства.Записывать = Истина;

КонецПроцедуры

Функция ТаблицаРНПТОстаткиПоРаботам(ДокументОбъект)
	
	ВидЗапасов = Перечисления.ВидыЗапасовПрослеживаемыхТоваров.ТоварыПередаваемыеВСоставеРабот;
	// Блокируем регистр ПрослеживаемыеТовары для получения остатков
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПрослеживаемыеТовары");
	ЭлементБлокировки.УстановитьЗначение("Организация", ДокументОбъект.Организация);
	ЭлементБлокировки.УстановитьЗначение("Период", Новый Диапазон(, ДокументОбъект.Дата));
	ЭлементБлокировки.УстановитьЗначение("ВидЗапасов", ВидЗапасов);
	
	// При изменении даты проведенного документа в большую сторону при получении остатков не учитываем движения текущего
	// документа. 
	ИсключитьДвиженияДокументаИзОстатков = ДокументОбъект.Проведен
		И ДокументОбъект.Дата > ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.Ссылка, "Дата");

	Запрос = Новый Запрос;
	
	МоментСписания = Новый МоментВремени(ДокументОбъект.Дата, ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("МоментСписания",                       МоментСписания);
	Запрос.УстановитьПараметр("Организация",                          ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ИсключитьДвиженияДокументаИзОстатков", ИсключитьДвиженияДокументаИзОстатков);
	Запрос.УстановитьПараметр("ТекущийДокумент",                      ДокументОбъект.Ссылка); 
	Запрос.УстановитьПараметр("ВидЗапасов",                           ВидЗапасов);
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиРНПТСИсключеннымиДвижениями.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ОстаткиРНПТСИсключеннымиДвижениями.РНПТ КАК РНПТ,
	|	СУММА(ОстаткиРНПТСИсключеннымиДвижениями.Количество) КАК Количество,
	|	СУММА(ОстаткиРНПТСИсключеннымиДвижениями.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	ОстаткиРНПТСИсключеннымиДвижениями.Комплектующие КАК Комплектующие,
	|	ОстаткиРНПТСИсключеннымиДвижениями.Номенклатура КАК Номенклатура
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПрослеживаемыеТоварыОстатки.СтранаПроисхождения КАК СтранаПроисхождения,
	|		ПрослеживаемыеТоварыОстатки.РНПТ КАК РНПТ,
	|		ПрослеживаемыеТоварыОстатки.КоличествоОстаток КАК Количество,
	|		ПрослеживаемыеТоварыОстатки.КоличествоПрослеживаемостиОстаток КАК КоличествоПрослеживаемости,
	|		NULL КАК Комплектующие,
	|		ПрослеживаемыеТоварыОстатки.Номенклатура КАК Номенклатура,
	|		ПрослеживаемыеТоварыОстатки.ВидЗапасов КАК ВидЗапасов
	|	ИЗ
	|		РегистрНакопления.ПрослеживаемыеТовары.Остатки(
	|				&МоментСписания,
	|				Организация = &Организация
	|					И ВидЗапасов = &ВидЗапасов) КАК ПрослеживаемыеТоварыОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПрослеживаемыеТовары.СтранаПроисхождения,
	|		ПрослеживаемыеТовары.РНПТ,
	|		ВЫБОР
	|			КОГДА ПрослеживаемыеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ПрослеживаемыеТовары.Количество
	|			ИНАЧЕ ПрослеживаемыеТовары.Количество
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ПрослеживаемыеТовары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -ПрослеживаемыеТовары.КоличествоПрослеживаемости
	|			ИНАЧЕ ПрослеживаемыеТовары.КоличествоПрослеживаемости
	|		КОНЕЦ,
	|		ПрослеживаемыеТовары.Комплектующие,
	|		ПрослеживаемыеТовары.Номенклатура,
	|		ПрослеживаемыеТовары.ВидЗапасов
	|	ИЗ
	|		РегистрНакопления.ПрослеживаемыеТовары КАК ПрослеживаемыеТовары
	|	ГДЕ
	|		&ИсключитьДвиженияДокументаИзОстатков
	|		И ПрослеживаемыеТовары.Регистратор = &ТекущийДокумент) КАК ОстаткиРНПТСИсключеннымиДвижениями
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиРНПТСИсключеннымиДвижениями.СтранаПроисхождения,
	|	ОстаткиРНПТСИсключеннымиДвижениями.РНПТ,
	|	ОстаткиРНПТСИсключеннымиДвижениями.Комплектующие,
	|	ОстаткиРНПТСИсключеннымиДвижениями.Номенклатура";

	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

#Область ОбработчикиОбновления

Функция СформироватьДвиженияПоРегиструПрослеживаемыеТовары(Ссылка) Экспорт
	
	// Создадить движения регистра накопления ПрослеживаемыеТовары и запишем в документ
	ПараметрыПроведенияКорректировкиПоступления 
		= Документы.КорректировкаПоступления.ПодготовитьПараметрыПроведения(Ссылка, Ложь);
	
	ОбщиеПараметры = ПодготовитьОбщиеПараметры(ПараметрыПроведенияКорректировкиПоступления.Реквизиты);
	Реквизиты = ОбщиеПараметры.Реквизиты[0];
	
	ТаблицаТоварыУвеличение = ПараметрыПроведенияКорректировкиПоступления.ПрослеживаемыеТоварыУвеличение;
	ТаблицаТоварыУменьшение = ПараметрыПроведенияКорректировкиПоступления.ПрослеживаемыеТоварыУменьшение;
	
	НаборЗаписей = РегистрыНакопления.ПрослеживаемыеТовары.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
	ДобавитьВНаборЗаписейПрослеживаемыхТоваров(ТаблицаТоварыУвеличение,Реквизиты, НаборЗаписей, Ложь);
	ДобавитьВНаборЗаписейПрослеживаемыхТоваров(ТаблицаТоварыУменьшение,Реквизиты, НаборЗаписей, Истина);
	
	Возврат НаборЗаписей;
	
КонецФункции

Процедура ДобавитьВНаборЗаписейПрослеживаемыхТоваров(ТаблицаТовары, Реквизиты, НаборЗаписей, Списание = Ложь)
	
	Если Не ЗначениеЗаполнено(ТаблицаТовары) Тогда
		Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыДвиженияТоваров(ТаблицаТовары);
	
	Для Каждого СтрокаТаблицы Из Параметры.Товары Цикл
		Если Списание Тогда
			Запись = НаборЗаписей.ДобавитьРасход();
		Иначе
			Запись = НаборЗаписей.ДобавитьПриход();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(Запись, Реквизиты);
		ЗаполнитьЗначенияСвойств(Запись, СтрокаТаблицы);
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

Функция ДополнительныеПараметрыДляСверкиОстатковВПрослеживаемости()
	
	СтруктураПараметров = Новый Структура();
	
	СтруктураПараметров.Вставить("ЭтоВыпускПродукции",           Ложь);
	СтруктураПараметров.Вставить("ДокументОснованиеВТЧ",         Ложь);
	СтруктураПараметров.Вставить("ЭтоВозвратКомитенту",          Ложь);
	СтруктураПараметров.Вставить("ЭтоКомплект",                  Ложь);
	СтруктураПараметров.Вставить("ГрупповойОбъект",              Ложь);
	СтруктураПараметров.Вставить("ПередачаТоваровВСоставеРабот", Ложь);
	
	Возврат СтруктураПараметров
	
КонецФункции

Функция ЗаполнитьДокументДаннымиИзКоррДокументов(Дата, Организация, ДокументОснование) Экспорт
	
	ДокументРеализации = ДокументОснование;
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
		
		ДокументРеализации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "Сделка");
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		
		ДокументРеализации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "ИсходныйДокументРеализации");
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПериодОстатков", Новый Граница(Дата, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДокументРеализации", ДокументРеализации);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.НомерКорректировки > 0
	|			ТОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.ДокументУведомлениеОПеремещении
	|		ИНАЧЕ УведомлениеОПеремещенииПрослеживаемыхТоваров.Ссылка
	|	КОНЕЦ КАК СсылкаНаУведомление
	|ПОМЕСТИТЬ ВТ_ТаблицаНайденныхУведомлений
	|ИЗ
	|	Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров КАК УведомлениеОПеремещенииПрослеживаемыхТоваров
	|ГДЕ
	|	УведомлениеОПеремещенииПрослеживаемыхТоваров.Ссылка = &ДокументРеализации
	|	И УведомлениеОПеремещенииПрослеживаемыхТоваров.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.НомерКорректировки > 0
	|			ТОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.ДокументУведомлениеОПеремещении
	|		ИНАЧЕ УведомлениеОПеремещенииПрослеживаемыхТоваров.Ссылка
	|	КОНЕЦ
	|ИЗ
	|	Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.Товары КАК УведомлениеОПеремещенииПрослеживаемыхТоваровТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров КАК УведомлениеОПеремещенииПрослеживаемыхТоваров
	|		ПО УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.Ссылка = УведомлениеОПеремещенииПрослеживаемыхТоваров.Ссылка
	|ГДЕ
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.СопроводительныйДокумент = &ДокументРеализации
	|	И УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.НомерКорректировки > 0
	|			ТОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.ДокументУведомлениеОПеремещении
	|		ИНАЧЕ УведомлениеОПеремещенииПрослеживаемыхТоваровКорректировочныеДокументы.Ссылка
	|	КОНЕЦ
	|ИЗ
	|	Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.КорректировочныеДокументы КАК УведомлениеОПеремещенииПрослеживаемыхТоваровКорректировочныеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров КАК УведомлениеОПеремещенииПрослеживаемыхТоваров
	|		ПО УведомлениеОПеремещенииПрослеживаемыхТоваровКорректировочныеДокументы.Ссылка = УведомлениеОПеремещенииПрослеживаемыхТоваров.Ссылка
	|ГДЕ
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровКорректировочныеДокументы.Документ = &ДокументРеализации
	|	И УведомлениеОПеремещенииПрослеживаемыхТоваров.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаНайденныхУведомлений.СсылкаНаУведомление КАК СсылкаНаУведомление
	|ПОМЕСТИТЬ ВТ_ТаблицаУведомлений
	|ИЗ
	|	ВТ_ТаблицаНайденныхУведомлений КАК ВТ_ТаблицаНайденныхУведомлений
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаНайденныхУведомлений.СсылкаНаУведомление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УведомлениеОПеремещенииПрослеживаемыхТоваров.Ссылка
	|ИЗ
	|	ВТ_ТаблицаНайденныхУведомлений КАК ВТ_ТаблицаНайденныхУведомлений
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров КАК УведомлениеОПеремещенииПрослеживаемыхТоваров
	|		ПО ВТ_ТаблицаНайденныхУведомлений.СсылкаНаУведомление = УведомлениеОПеремещенииПрослеживаемыхТоваров.ДокументУведомлениеОПеремещении
	|ГДЕ
	|	УведомлениеОПеремещенииПрослеживаемыхТоваров.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	УведомлениеОПеремещенииПрослеживаемыхТоваров.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаУведомлений.СсылкаНаУведомление КАК СсылкаНаУведомление,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваров.НомерКорректировки КАК НомерКорректировки
	|ПОМЕСТИТЬ ВТ_ВсеУведомления
	|ИЗ
	|	ВТ_ТаблицаУведомлений КАК ТаблицаУведомлений
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров КАК УведомлениеОПеремещенииПрослеживаемыхТоваров
	|		ПО ТаблицаУведомлений.СсылкаНаУведомление = УведомлениеОПеремещенииПрослеживаемыхТоваров.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаУведомлений.СсылкаНаУведомление,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваров.НомерКорректировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВсеУведомления.НомерКорректировки) КАК МаксимальныйНомерКорректировки
	|ПОМЕСТИТЬ ВТ_МаксимальныйНомерКорректировки
	|ИЗ
	|	ВТ_ВсеУведомления КАК ВсеУведомления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеУведомления.СсылкаНаУведомление КАК Ссылка
	|ПОМЕСТИТЬ ОтобранноеУведомление
	|ИЗ
	|	ВТ_МаксимальныйНомерКорректировки КАК ТаблицаМаксимальныйНомерКорректировки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВсеУведомления КАК ВсеУведомления
	|		ПО ТаблицаМаксимальныйНомерКорректировки.МаксимальныйНомерКорректировки = ВсеУведомления.НомерКорректировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрослеживаемыеТоварыОтгруженныеВЕАЭСОстатки.Организация КАК Организация,
	|	ПрослеживаемыеТоварыОтгруженныеВЕАЭСОстатки.Контрагент КАК Контрагент,
	|	ПрослеживаемыеТоварыОтгруженныеВЕАЭСОстатки.КорректировочныйДокумент КАК КорректировочныйДокумент,
	|	ПрослеживаемыеТоварыОтгруженныеВЕАЭСОстатки.СопроводительныйДокумент КАК СопроводительныйДокумент,
	|	ПрослеживаемыеТоварыОтгруженныеВЕАЭСОстатки.Номенклатура КАК Номенклатура,
	|	ПрослеживаемыеТоварыОтгруженныеВЕАЭСОстатки.РНПТ КАК РНПТ,
	|	ПрослеживаемыеТоварыОтгруженныеВЕАЭСОстатки.ПорядковыйНомер КАК ПорядковыйНомер,
	|	ПрослеживаемыеТоварыОтгруженныеВЕАЭСОстатки.КоличествоОстаток КАК Количество,
	|	ПрослеживаемыеТоварыОтгруженныеВЕАЭСОстатки.КоличествоПрослеживаемостиОстаток КАК КоличествоПрослеживаемости,
	|	ПрослеживаемыеТоварыОтгруженныеВЕАЭСОстатки.СуммаОстаток КАК Сумма
	|ПОМЕСТИТЬ ТаблицаКорректировокДетальная
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТоварыОтгруженныеВЕАЭС.Остатки(&ПериодОстатков, ) КАК ПрослеживаемыеТоварыОтгруженныеВЕАЭСОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаКорректировокДетальная.Организация КАК Организация,
	|	ТаблицаКорректировокДетальная.Контрагент КАК Контрагент,
	|	ТаблицаКорректировокДетальная.СопроводительныйДокумент КАК СопроводительныйДокумент,
	|	ТаблицаКорректировокДетальная.Номенклатура КАК Номенклатура,
	|	ТаблицаКорректировокДетальная.РНПТ КАК РНПТ,
	|	ТаблицаКорректировокДетальная.ПорядковыйНомер КАК ПорядковыйНомер,
	|	СУММА(ТаблицаКорректировокДетальная.Количество) КАК Количество,
	|	СУММА(ТаблицаКорректировокДетальная.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
	|	СУММА(ТаблицаКорректировокДетальная.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ТаблицаКорректировокСводная
	|ИЗ
	|	ТаблицаКорректировокДетальная КАК ТаблицаКорректировокДетальная
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаКорректировокДетальная.Организация,
	|	ТаблицаКорректировокДетальная.Контрагент,
	|	ТаблицаКорректировокДетальная.СопроводительныйДокумент,
	|	ТаблицаКорректировокДетальная.Номенклатура,
	|	ТаблицаКорректировокДетальная.РНПТ,
	|	ТаблицаКорректировокДетальная.ПорядковыйНомер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.Ссылка КАК Ссылка,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.НомерСтроки КАК НомерСтроки,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.КодТНВЭД
	|		ИНАЧЕ УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.КодТНВЭДПослеИзменения
	|	КОНЕЦ КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.ЕдиницаИзмерения
	|		ИНАЧЕ УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.ЕдиницаИзмеренияПослеИзменения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.ЕдиницаПрослеживаемости
	|		ИНАЧЕ УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.ЕдиницаПрослеживаемостиПослеИзменения
	|	КОНЕЦ КАК ЕдиницаПрослеживаемости,
	|	ВЫБОР
	|		КОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.Количество
	|		ИНАЧЕ УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.КоличествоПослеИзменения
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.КоличествоПрослеживаемости
	|		ИНАЧЕ УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.КоличествоПрослеживаемостиПослеИзменения
	|	КОНЕЦ КАК КоличествоПрослеживаемости,
	|	ВЫБОР
	|		КОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.Сумма
	|		ИНАЧЕ УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.СуммаПослеИзменения
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.РНПТ
	|		ИНАЧЕ УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.РНПТПослеИзменения
	|	КОНЕЦ КАК РНПТ,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.КлючСтроки КАК КлючСтроки,
	|	ВЫБОР
	|		КОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.ПорядковыйНомер
	|		ИНАЧЕ УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.ПорядковыйНомерПослеИзменения
	|	КОНЕЦ КАК ПорядковыйНомер,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.СопроводительныйДокумент КАК СопроводительныйДокумент,
	|	ВЫБОР
	|		КОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.ЕдиницаИзмерения
	|		ИНАЧЕ УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.ЕдиницаИзмеренияПослеИзменения
	|	КОНЕЦ КАК ЕдиницаИзмеренияПослеИзменения,
	|	ВЫБОР
	|		КОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.ЕдиницаПрослеживаемости
	|		ИНАЧЕ УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.ЕдиницаПрослеживаемостиПослеИзменения
	|	КОНЕЦ КАК ЕдиницаПрослеживаемостиПослеИзменения,
	|	ВЫБОР
	|		КОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.Количество
	|		ИНАЧЕ УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.КоличествоПослеИзменения
	|	КОНЕЦ КАК КоличествоПослеИзменения,
	|	ВЫБОР
	|		КОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.КоличествоПрослеживаемости
	|		ИНАЧЕ УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.КоличествоПрослеживаемостиПослеИзменения
	|	КОНЕЦ КАК КоличествоПрослеживаемостиПослеИзменения,
	|	ВЫБОР
	|		КОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.Сумма
	|		ИНАЧЕ УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.СуммаПослеИзменения
	|	КОНЕЦ КАК СуммаПослеИзменения,
	|	ВЫБОР
	|		КОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.РНПТ
	|		ИНАЧЕ УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.РНПТПослеИзменения
	|	КОНЕЦ КАК РНПТПослеИзменения,
	|	ВЫБОР
	|		КОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.ПорядковыйНомер
	|		ИНАЧЕ УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.ПорядковыйНомерПослеИзменения
	|	КОНЕЦ КАК ПорядковыйНомерПослеИзменения,
	|	ВЫБОР
	|		КОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.НомерКорректировки = 0
	|			ТОГДА УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.КодТНВЭД
	|		ИНАЧЕ УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.КодТНВЭДПослеИзменения
	|	КОНЕЦ КАК КодТНВЭДПослеИзменения,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровКонтрагенты.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ ТаблицаКорректировокПоУведомлению
	|ИЗ
	|	ОтобранноеУведомление КАК ОтобранноеУведомление
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.Товары КАК УведомлениеОПеремещенииПрослеживаемыхТоваровТовары
	|		ПО ОтобранноеУведомление.Ссылка = УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров КАК УведомлениеОПеремещенииПрослеживаемыхТоваров
	|		ПО ОтобранноеУведомление.Ссылка = УведомлениеОПеремещенииПрослеживаемыхТоваров.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.Контрагенты КАК УведомлениеОПеремещенииПрослеживаемыхТоваровКонтрагенты
	|		ПО (ОтобранноеУведомление.Ссылка = УведомлениеОПеремещенииПрослеживаемыхТоваровКонтрагенты.Ссылка
	|				И УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.КлючСтроки = УведомлениеОПеремещенииПрослеживаемыхТоваровКонтрагенты.КлючСтроки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровКонтрагенты.Ссылка КАК Ссылка,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровКонтрагенты.НомерСтроки КАК НомерСтроки,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровКонтрагенты.Контрагент КАК Контрагент,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровКонтрагенты.КлючСтроки КАК КлючСтроки
	|ИЗ
	|	ОтобранноеУведомление КАК ОтобранноеУведомление
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.Контрагенты КАК УведомлениеОПеремещенииПрослеживаемыхТоваровКонтрагенты
	|		ПО ОтобранноеУведомление.Ссылка = УведомлениеОПеремещенииПрослеживаемыхТоваровКонтрагенты.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксмальныйНомерКорректировки.МаксимальныйНомерКорректировки + 1 КАК НомерКорректировки,
	|	&Период КАК Дата,
	|	&Организация КАК Организация,
	|	ВТ_ВсеУведомления.СсылкаНаУведомление КАК ДокументУведомлениеОПеремещении,
	|	ВТ_ПоследнееУведомление.СсылкаНаУведомление КАК ПервичныйДокумент
	|ИЗ
	|	ВТ_МаксимальныйНомерКорректировки КАК МаксмальныйНомерКорректировки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВсеУведомления КАК ВТ_ПоследнееУведомление
	|		ПО МаксмальныйНомерКорректировки.МаксимальныйНомерКорректировки = ВТ_ПоследнееУведомление.НомерКорректировки,
	|	ВТ_ВсеУведомления КАК ВТ_ВсеУведомления
	|ГДЕ
	|	ВТ_ВсеУведомления.НомерКорректировки = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаКорректировокПоУведомлению.Ссылка КАК Ссылка,
	|	ТаблицаКорректировокПоУведомлению.НомерСтроки КАК НомерСтроки,
	|	ТаблицаКорректировокПоУведомлению.Номенклатура КАК Номенклатура,
	|	ТаблицаКорректировокПоУведомлению.КодТНВЭД КАК КодТНВЭД,
	|	ТаблицаКорректировокПоУведомлению.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаКорректировокПоУведомлению.ЕдиницаПрослеживаемости КАК ЕдиницаПрослеживаемости,
	|	ТаблицаКорректировокПоУведомлению.Количество КАК Количество,
	|	ТаблицаКорректировокПоУведомлению.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	ТаблицаКорректировокПоУведомлению.Сумма КАК Сумма,
	|	ТаблицаКорректировокПоУведомлению.РНПТ КАК РНПТ,
	|	ТаблицаКорректировокПоУведомлению.КлючСтроки КАК КлючСтроки,
	|	ТаблицаКорректировокПоУведомлению.ПорядковыйНомер КАК ПорядковыйНомер,
	|	ТаблицаКорректировокПоУведомлению.СопроводительныйДокумент КАК СопроводительныйДокумент,
	|	ТаблицаКорректировокПоУведомлению.ЕдиницаИзмеренияПослеИзменения КАК ЕдиницаИзмеренияПослеИзменения,
	|	ТаблицаКорректировокПоУведомлению.ЕдиницаПрослеживаемостиПослеИзменения КАК ЕдиницаПрослеживаемостиПослеИзменения,
	|	ТаблицаКорректировокПоУведомлению.КоличествоПослеИзменения + ЕСТЬNULL(ТаблицаКорректировокСводная.Количество, 0) КАК КоличествоПослеИзменения,
	|	ТаблицаКорректировокПоУведомлению.КоличествоПрослеживаемостиПослеИзменения + ЕСТЬNULL(ТаблицаКорректировокСводная.КоличествоПрослеживаемости, 0) КАК КоличествоПрослеживаемостиПослеИзменения,
	|	ТаблицаКорректировокПоУведомлению.СуммаПослеИзменения + ЕСТЬNULL(ТаблицаКорректировокСводная.Сумма, 0) КАК СуммаПослеИзменения,
	|	ТаблицаКорректировокПоУведомлению.РНПТПослеИзменения КАК РНПТПослеИзменения,
	|	ТаблицаКорректировокПоУведомлению.ПорядковыйНомерПослеИзменения КАК ПорядковыйНомерПослеИзменения,
	|	ТаблицаКорректировокПоУведомлению.КодТНВЭДПослеИзменения КАК КодТНВЭДПослеИзменения
	|ИЗ
	|	ТаблицаКорректировокПоУведомлению КАК ТаблицаКорректировокПоУведомлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаКорректировокСводная КАК ТаблицаКорректировокСводная
	|		ПО ТаблицаКорректировокПоУведомлению.Номенклатура = ТаблицаКорректировокСводная.Номенклатура
	|			И ТаблицаКорректировокПоУведомлению.Контрагент = ТаблицаКорректировокСводная.Контрагент
	|			И ТаблицаКорректировокПоУведомлению.СопроводительныйДокумент = ТаблицаКорректировокСводная.СопроводительныйДокумент
	|			И ТаблицаКорректировокПоУведомлению.РНПТ = ТаблицаКорректировокСводная.РНПТ
	|			И ТаблицаКорректировокПоУведомлению.ПорядковыйНомер = ТаблицаКорректировокСводная.ПорядковыйНомер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ДанныеПервичныхДокументов.Документ ЕСТЬ NULL
	|			ТОГДА ТаблицаКорректировокДетальная.СопроводительныйДокумент
	|		ИНАЧЕ ТаблицаКорректировокДетальная.КорректировочныйДокумент
	|	КОНЕЦ КАК Документ,
	|	ТаблицаКорректировокПоУведомлению.КлючСтроки КАК КлючСтроки,
	|	ТаблицаКорректировокДетальная.ПорядковыйНомер КАК ПорядковыйНомер
	|ИЗ
	|	ТаблицаКорректировокДетальная КАК ТаблицаКорректировокДетальная
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаКорректировокПоУведомлению КАК ТаблицаКорректировокПоУведомлению
	|		ПО ТаблицаКорректировокДетальная.Контрагент = ТаблицаКорректировокПоУведомлению.Контрагент
	|			И ТаблицаКорректировокДетальная.Номенклатура = ТаблицаКорректировокПоУведомлению.Номенклатура
	|			И ТаблицаКорректировокДетальная.СопроводительныйДокумент = ТаблицаКорректировокПоУведомлению.СопроводительныйДокумент
	|			И ТаблицаКорректировокДетальная.РНПТ = ТаблицаКорректировокПоУведомлению.РНПТ
	|			И ТаблицаКорректировокДетальная.ПорядковыйНомер = ТаблицаКорректировокПоУведомлению.ПорядковыйНомер
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ТаблицаКорректировокДетальная.КорректировочныйДокумент = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	НЕ ТаблицаКорректировокПоУведомлению.КлючСтроки ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ДанныеПервичныхДокументов.Документ ЕСТЬ NULL
	|			ТОГДА ТаблицаКорректировокДетальная.СопроводительныйДокумент
	|		ИНАЧЕ ТаблицаКорректировокДетальная.КорректировочныйДокумент
	|	КОНЕЦ,
	|	ТаблицаКорректировокПоУведомлению.КлючСтроки,
	|	ТаблицаКорректировокДетальная.ПорядковыйНомер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТранзитныеСтраныЕАЭС.Страна КАК Страна,
	|	ИСТИНА КАК ЭтоСтрокаСИсходнымиСтранами,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТранзитныеСтраныЕАЭС.КлючСтроки КАК КлючСтроки
	|ИЗ
	|	ОтобранноеУведомление КАК ОтобранноеУведомление
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.ТранзитныеСтраныЕАЭС КАК УведомлениеОПеремещенииПрослеживаемыхТоваровТранзитныеСтраныЕАЭС
	|		ПО ОтобранноеУведомление.Ссылка = УведомлениеОПеремещенииПрослеживаемыхТоваровТранзитныеСтраныЕАЭС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров КАК УведомлениеОПеремещенииПрослеживаемыхТоваров
	|		ПО ОтобранноеУведомление.Ссылка = УведомлениеОПеремещенииПрослеживаемыхТоваров.Ссылка
	|ГДЕ
	|	ВЫБОР
	|			КОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.НомерКорректировки > 0
	|				ТОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.ТранзитныеСтраныЕАЭС.ЭтоСтрокаСИсходнымиСтранами = ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТранзитныеСтраныЕАЭС.Страна,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТранзитныеСтраныЕАЭС.КлючСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТранзитныеСтраныЕАЭС.Страна,
	|	ЛОЖЬ,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТранзитныеСтраныЕАЭС.КлючСтроки
	|ИЗ
	|	ОтобранноеУведомление КАК ОтобранноеУведомление
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.ТранзитныеСтраныЕАЭС КАК УведомлениеОПеремещенииПрослеживаемыхТоваровТранзитныеСтраныЕАЭС
	|		ПО ОтобранноеУведомление.Ссылка = УведомлениеОПеремещенииПрослеживаемыхТоваровТранзитныеСтраныЕАЭС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров КАК УведомлениеОПеремещенииПрослеживаемыхТоваров
	|		ПО ОтобранноеУведомление.Ссылка = УведомлениеОПеремещенииПрослеживаемыхТоваров.Ссылка
	|ГДЕ
	|	ВЫБОР
	|			КОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.НомерКорректировки > 0
	|				ТОГДА УведомлениеОПеремещенииПрослеживаемыхТоваров.ТранзитныеСтраныЕАЭС.ЭтоСтрокаСИсходнымиСтранами = ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТранзитныеСтраныЕАЭС.Страна,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТранзитныеСтраныЕАЭС.КлючСтроки";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	// В таблице товары СопроводительныйДокумент показывает сигнал к новому ключу
	ТаблицаКонтрагенты = РезультатЗапроса[8].Выгрузить();
	
	ТаблицаТовары = РезультатЗапроса[10].Выгрузить();
	
	КорректировочныеДокументы = РезультатЗапроса[11].Выгрузить();
	
	ТаблицаРеквизиты = РезультатЗапроса[9].Выгрузить();
	
	ТранзитныеСтраныЕАЭС = РезультатЗапроса[12].Выгрузить();
	
	Возврат Новый Структура("Контрагенты,Товары,Реквизиты,КорректировочныеДокументы,ТранзитныеСтраныЕАЭС", 
		ТаблицаКонтрагенты, ТаблицаТовары, 
		?(ТаблицаРеквизиты.Количество() = 0, Неопределено, ТаблицаРеквизиты[0]), 
		КорректировочныеДокументы, ТранзитныеСтраныЕАЭС);
	
КонецФункции

#КонецОбласти

#Область ПроведениеПоРегиструПрослеживаемыеОС

Процедура СформироватьДвиженияСписанияОС(ТаблицаОС, ТаблицаОперации, ТаблицаРеквизиты, Движения) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	ОбщиеПараметры = ПодготовитьОбщиеПараметры(ТаблицаРеквизиты);
	Реквизиты = ОбщиеПараметры.Реквизиты[0];
		
	СформироватьДвиженияПрослеживаемыхОС(ТаблицаОС, Реквизиты, Движения, Истина);
		
	СформироватьДвиженияОперацииСПрослеживаемымиТоварами(ТаблицаОперации, Реквизиты, Движения, Истина);
	
КонецПроцедуры

Процедура СформироватьДвиженияПоступлениеОС(ТаблицаОС, ТаблицаОперации, ТаблицаРНПТ, ТаблицаРеквизиты, Движения) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	ОбщиеПараметры = ПодготовитьОбщиеПараметры(ТаблицаРеквизиты);
	Реквизиты = ОбщиеПараметры.Реквизиты[0];
	
	СформироватьДвиженияПрослеживаемыхОС(ТаблицаОС, Реквизиты, Движения);
	
	СформироватьДвиженияОперацииСПрослеживаемымиТоварами(ТаблицаОперации, Реквизиты, Движения, Истина);
		
	УстановитьСвойстваРНПТ(ТаблицаРНПТ, Реквизиты);
	
КонецПроцедуры

#КонецОбласти

