
#Область СлужебныйПрограммныйИнтерфейс

// Получает данные абонента и сохранет их в настройки данных формы для дальнейшего заполнения приложения.
// У абонента в сервисе должны быть дополнительные свойства с именами:
//  * ИННАбонента - Строка - ИНН абонента
//  * КонтактноеЛицоАбонента - Строка - контактное лицо абонента
//  * НаименованиеОрганизации - Строка - наименование организации абонента
//
// Возвращаемое значение:
//  Булево - Истина, если настройки получены, Ложь - если настройки получить не удалось.
//
Процедура ПодготовитьДанныеДляЗаполненияПриложения() Экспорт
	Если Не ОбщегоНазначения.РазделениеВключено()
		Или Справочники.Организации.КоличествоОрганизаций() > 0 Тогда
		Возврат;
	КонецЕсли;
	
	Абонент = ПрограммныйИнтерфейсСервиса.АбонентЭтогоПриложения();
	Если Абонент.РольПользователя <> Перечисления.РолиПользователейАбонентов.ВладелецАбонента Тогда
		Возврат;
	КонецЕсли;
	
	Свойства = ПрограммныйИнтерфейсСервиса.ДополнительныеСведенияАбонента().Свойства;
	
	СоответствиеСвойств = Новый Соответствие;
	Для Каждого Свойство Из Свойства Цикл
		СоответствиеСвойств.Вставить(Свойство.Ключ, Свойство.Значение);
	КонецЦикла;
	
	// Проверим надо ли выполнять заполнение по данным абонента
	ЗаполнениеПоДаннымАбонента = СоответствиеСвойств["ЗаполнениеПоДаннымАбонента"];
	Если ЗаполнениеПоДаннымАбонента <> Истина Тогда
		Возврат;
	КонецЕсли;

	ДанныеЗаполнения = Новый Структура;
	
	ИНН = СоответствиеСвойств["ИННАбонента"];
	
	ЭтоЮрЛицо = ЭтоЮрЛицо(ИНН);
	Налогообложение = СоответствиеСвойств["Налогообложение"];
	
	ВидОрганизации = СоответствиеСвойств["ВидОрганизации"];
	ВидБизнесаАбонента = СоответствиеСвойств["ВидБизнеса"];
	
	Если ЭтоЮрЛицо Тогда
		ВидОрганизации = "ЮридическоеЛицо";
	КонецЕсли;
	
	Отказ = Ложь;
	ПрименяетсяУСНПатент = СоответствиеСвойств["ПрименяетсяУСНПатент"];
	СистемаНалогообложения = "";
	Если ЗначениеЗаполнено(Налогообложение) Тогда
		Если (Налогообложение = "Налог на профессиональный доход (""самозанятые"")" 
			Или Налогообложение = "НалогНаПрофессиональныйДоход"
			Или ВидОрганизации = "Самозанятый")
			И Не ЭтоЮрЛицо Тогда
			
			СистемаНалогообложения = "НалогНаПрофессиональныйДоход";

		ИначеЕсли Налогообложение = "УСН 6% (доходы)" Или Налогообложение = "УпрощеннаяДоходы" Тогда
			
			Если ПрименяетсяУСНПатент = Истина Тогда
				Отказ = Не ТарификацияБП.РазрешенаПатентнаяСистемаНалогообложения();
			Иначе
				Отказ = Не ТарификацияБП.РазрешенаУСН();
			КонецЕсли;
			
			Если Не Отказ Тогда
				СистемаНалогообложения = "УпрощеннаяДоходы";
			КонецЕсли;
			
		ИначеЕсли Налогообложение = "УСН 15% (доходы минус расходы)"
				Или Налогообложение = "УпрощеннаяДоходыМинусРасходы" Тогда
			
			СистемаНалогообложения = "УпрощеннаяДоходыМинусРасходы";
			
		ИначеЕсли Налогообложение = "АУСН 8% (доходы)" Или Налогообложение = "АУСНДоходы" Тогда
			
			СистемаНалогообложения = "АУСНДоходы";
			
		ИначеЕсли Налогообложение = "АУСН 20% (доходы минус расходы)" Или Налогообложение = "АУСНДоходыМинусРасходы" Тогда
				
				СистемаНалогообложения = "АУСНДоходыМинусРасходы";
				
		ИначеЕсли (Налогообложение = "Только патентная система (только для ИП)" Или Налогообложение = "Патентная")
			И Не ЭтоЮрЛицо И ТарификацияБП.РазрешенаПатентнаяСистемаНалогообложения() Тогда
				
				СистемаНалогообложения = "Патентная";
				
		ИначеЕсли Налогообложение = "Только ЕНВД" Или Налогообложение = "ЕНВД" И ТарификацияБП.РазрешенЕНВД() Тогда
			
				СистемаНалогообложения = "ЕНВД";
	
		ИначеЕсли Налогообложение = "Общая система налогообложения" Тогда
			
			СистемаНалогообложения = "Общая";
			
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВидБизнесаАбонента) Тогда
		ВидБизнеса = ВидБизнесаАбонента(ВидБизнесаАбонента);
	Иначе
		ВидБизнеса = Перечисления.ВидыБизнеса.ПустаяСсылка();
	КонецЕсли;
	
	Если Не ПустаяСтрока(СоответствиеСвойств["КонтактноеЛицоАбонента"]) Тогда
		ДанныеФИО = ФизическиеЛицаКлиентСервер.ЧастиИмени(СоответствиеСвойств["КонтактноеЛицоАбонента"]);
		ДанныеЗаполнения.Вставить("Фамилия",  ДанныеФИО.Фамилия);
		ДанныеЗаполнения.Вставить("Имя",      ДанныеФИО.Имя);
		ДанныеЗаполнения.Вставить("Отчество", ДанныеФИО.Отчество);
	КонецЕсли;
	
	// Организация
	ДанныеЗаполнения.Вставить("ФИО",                     СоответствиеСвойств["КонтактноеЛицоАбонента"]);
	ДанныеЗаполнения.Вставить("НаименованиеОрганизации", СоответствиеСвойств["НаименованиеОрганизации"]);
	ДанныеЗаполнения.Вставить("ИНН",                     ИНН);
	ДанныеЗаполнения.Вставить("КПП",                     СоответствиеСвойств["КПП"]);
	ДанныеЗаполнения.Вставить("ВидОрганизации",                    ВидОрганизации);
	
	// Система налогообложения
	ДанныеЗаполнения.Вставить("СистемаНалогообложения",            СистемаНалогообложения);
	ДанныеЗаполнения.Вставить("ПрименяетсяУСНПатент",              ПрименяетсяУСНПатент);
	ДанныеЗаполнения.Вставить("ПлательщикТорговогоСбора",          СоответствиеСвойств["ПлательщикТорговогоСбора"]);
	ДанныеЗаполнения.Вставить("ИспользуетсяТрудНаемныхРаботников", СоответствиеСвойств["ИспользуетсяТрудНаемныхРаботников"]);
	ДанныеЗаполнения.Вставить("ПодключитьСервисМойНалог",          СоответствиеСвойств["ПодключитьСервисМойНалог"]);
	
	// Вид бизнеса
	ДанныеЗаполнения.Вставить("ВидБизнеса", ВидБизнеса);
	
	ДанныеЗаполнения.Вставить("ВестиУчетПоДоговорам",                СоответствиеСвойств["ВестиУчетПоДоговорам"]);
	ДанныеЗаполнения.Вставить("ВедетсяРозничнаяТорговля",            СоответствиеСвойств["ВедетсяРозничнаяТорговля"]);
	ДанныеЗаполнения.Вставить("ИспользоватьВыпускПродукции",         СоответствиеСвойств["ИспользоватьВыпускПродукции"]);
	ДанныеЗаполнения.Вставить("ВедетсяУчетОсновныхСредств",          СоответствиеСвойств["ВедетсяУчетОсновныхСредств"]);

	ДанныеЗаполнения.Вставить("ИспользоватьОбменСИнтернетМагазином",
		СоответствиеСвойств["ИспользоватьОбменСИнтернетМагазином"]);
	ДанныеЗаполнения.Вставить("ИспользоватьОплатуПоПлатежнымКартам",
		СоответствиеСвойств["ИспользоватьОплатуПоПлатежнымКартам"]);
	ДанныеЗаполнения.Вставить("ИспользоватьДоставкуАвтотранспортом",
		СоответствиеСвойств["ИспользоватьДоставкуАвтотранспортом"]);
	ДанныеЗаполнения.Вставить("ОсуществляетсяРеализацияТоваровУслугКомитентов",
		СоответствиеСвойств["ОсуществляетсяРеализацияТоваровУслугКомитентов"]);

	ДанныеЗаполнения.Вставить("КодЗаявкиНаПодключениеКСервисуАУСН",  СоответствиеСвойств["КодЗаявкиНаПодключениеКСервисуАУСН"]);
	Если ЗначениеЗаполнено(СоответствиеСвойств["БИКБанка"]) Тогда
		Банк = РаботаСБанкамиБП.СсылкаПоКлассификатору(СоответствиеСвойств["БИКБанка"]);
	Иначе
		Банк = Справочники.КлассификаторБанков.ПустаяСсылка();
	КонецЕсли;
	
	ДанныеЗаполнения.Вставить("Банк", Банк);
		
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения.ИНН) Тогда
		Возврат; // В свойствах нет данных по ИНН
	КонецЕсли; 
		
	ОбщегоНазначения.ХранилищеНастроекДанныхФормСохранить("Обработка.НачалоРаботы.Форма.БыстрыйСтарт","ДанныеЗаполнения", ДанныеЗаполнения);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВидБизнесаАбонента(ВидБизнесаАбонента)
	
	ВидБизнеса = Перечисления.ВидыБизнеса.Другое;
	Для Каждого ТекЭлемент Из Метаданные.Перечисления.ВидыБизнеса.ЗначенияПеречисления Цикл
		Если ТекЭлемент.Синоним = ВидБизнесаАбонента Тогда
			ВидБизнеса = Перечисления.ВидыБизнеса[ТекЭлемент.Имя];
			Прервать;
		КонецЕсли;
	КонецЦикла;

	Возврат ВидБизнеса;
	
КонецФункции

Функция ЭтоЮрЛицо(ИНН)
	
	Возврат СтрДлина(ИНН) = 10;
	
КонецФункции

#КонецОбласти 

