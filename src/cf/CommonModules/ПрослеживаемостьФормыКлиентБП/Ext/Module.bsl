
#Область СлужебныйПрограммныйИнтерфейс

// В процедуре осуществляется контроль заполнения данных для открытия формы подбора РНПТ
// Заполняются необходимые параметры для открытия формы подбора РНПТ
// Параметры - Форма - Форма документа из который открывается форма подбора РНПТ
// 			   ИмяТаблицы - Строка - имя таблицы, из который вызывается открытие формы подбора РНПТ
// 			   ПараметрыФормыПодбора - Структура - дополнительные параметры, влияющие на открытие формы подбора РНПТ
// 					ЭтоПоступление - Булево - Истина, если необходимо открыть форму заполнения РНПТ, а не форму подбора по остаткам
// 					ЭтоКомиссия - Булево - Истина, если требуется подбор по товарам переданным на комиссию,
// 										   тогда при подборе остатков накладывается дополнительный отбор по измерению Комиссионер
// 					ЭтоИсходныеРНПТ - Булево - Истина, если открывается форма просмотра РНПТ до изменения 
// 												из документов КорректировкаРеализации, КорректировкаПоступления. 
//					ПрослеживаемыйКомплект - Булево - Истина, если форму подбора необходимо открыть для прослеживаемых комплектов,
// 													в этом случае в форме подбора будут выводиться дополнительные колонки
//					ЭтоВыпускПродукции - Булево - Истина, если вызов из формы ВыпускПродукцииСписокМатериалов документа
// 													Отчет производства за смену, в которой нет Объект.Ссылка
Процедура ОткрытьФормуПодбораРНПТ(Форма, ИмяТаблицы, ПараметрыФормыПодбора) Экспорт
	
	Если ПараметрыФормыПодбора.ЭтоВыпускПродукции Тогда
		Объект = Форма;
		ДокументСсылка = Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену");
	Иначе
		Объект         = Форма.Объект;
		ДокументСсылка = Объект.Ссылка;
	КонецЕсли;
	Элементы       = Форма.Элементы;
	ТекущиеДанные  = Элементы[ИмяТаблицы].ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоПоступлениеТоваровИУслуг = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг");
	ЭтоКорректировкаПоступления = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.КорректировкаПоступления");
	ЭтоВводОстатков             = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВводНачальныхОстатков");
	ЭтоПринятиеКУчетуОС         = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПринятиеКУчетуОС");
	ЭтоМодернизацияОС           = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.МодернизацияОС");
	ЭтоПокупкаОС                = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") И ИмяТаблицы = "ОсновныеСредства";
	ЭтоПередачаТоваровКомитенту = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПередачаТоваров") 
			И Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПередачаТоваров.ПередачаТоваровКомитенту");
	ЭтоСписаниеОС                = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.СписаниеОС");
	ЭтоВыкупКомиссионером        = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг")
			И Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРеализацияТоваров.ВыкупТоваровКомиссионером");
	ЭтоВозвратВыкупленногоКомиссионером = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя")
			И Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийВозвратТоваровОтПокупателя.ВыкупленныеКомиссионеромТовары");
	
	// Предопределенные значения
	ДатаРеализации                      = '00010101';
	ДатаТекущегоДокумента               = '00010101';
	ЭтоВозвратРозница                   = Ложь;
	ЭтоВозвратПоставщику                = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВозвратТоваровПоставщику");
	ЭтоВозвратКомиссия                  = Ложь;
	ВыставленСФ                         = Ложь;
	СчетФактура                         = Новый СписокЗначений;
	ДокументРеализации                  = Неопределено;
	Покупатель                          = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
	Цена                                = 0;
	Комитент                            = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
	ВидЗапасов                          = ПредопределенноеЗначение("Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ПустаяСсылка");
	Комиссионер                         = ?(ПараметрыФормыПодбора.ЭтоКомиссия, Объект.Контрагент, ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка"));
	ВозвратКомиссияПоТекДокументу       = Ложь;
	ЭтоОС                               = Ложь;
	ЭтоСоставноеОС                      = Ложь;
	ОбъектСтроительства                 = ПредопределенноеЗначение("Справочник.ОбъектыСтроительства.ПустаяСсылка");
	ЕстьРасхождения                     = ЭтоПоступлениеТоваровИУслуг И Объект.ЕстьРасхождения;
	ЭтоВвозИзЕАЭС                       = ЭтоПоступлениеТоваровИУслуг И Форма.ПоставщикРезидентТаможенногоСоюза;
	ЭтоВозвратВЕАЭС                     = ЭтоВозвратПоставщику И Форма.ПоставщикРезидентТаможенногоСоюза;
	ЭтоКорректировкаПоступленияЕАЭС     = ЭтоКорректировкаПоступления И Форма.ПоставщикРезидентТаможенногоСоюза;
	Сумма                               = 0;
	Комплектующие                       = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
	ОсновноеСредство                    = ПредопределенноеЗначение("Справочник.ОсновныеСредства.ПустаяСсылка");
	ТребуетсяКонтрольЗаполненияСуммы    = Ложь;
	ЭтоПродажа                          = Ложь;
	ВалютаДокумента                     = ПредопределенноеЗначение("Справочник.Валюты.ПустаяСсылка");
	СтранаПроисхождения                 = ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
	ТребуетсяКолонкаСтранаПроисхождения = Ложь;
	ТребуетсяСуммаНДС                   = Ложь;
	ГрупповойОбъектОС                   = Ложь;
	ЭтоВводОстатковПоЗабалансу          = Ложь;
	СтатусПроверкиРНПТ                  = ПредопределенноеЗначение("Перечисление.СтатусыПроверкиРНПТ.ПустаяСсылка");
	ВДокументеДоступнаПроверкаРНПТ      = ПроверкаРНПТКлиентПереопределяемый.ВДокументеДоступнаПроверкаРНПТ(ДокументСсылка);
	Если ВДокументеДоступнаПроверкаРНПТ И ЗначениеЗаполнено(Форма.РеквизитыПроверкиРНПТ) Тогда
		СтатусПроверкиРНПТ = Форма.РеквизитыПроверкиРНПТ.СостояниеПроверкиРНПТВДокументе;
	КонецЕсли;
	
	// Контроль заполнения суммы в документе и отображение колонки сумма в форме подбора разные вещи
	// Например, для комплекта списываемого в требовании накладной колонка сумма в форме подбора должна быть, но заполнение этой колонки не обязательно
	// И перед открытием формы подбора не осуществляется контроль, что колонка сумма заполнена
	ТребуетсяКонтрольЗаполненияСуммы    = Ложь;
	ТребуетсяОтображениеКолонкиСумма    = Ложь;
		
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.КомплектацияНоменклатуры")
		И Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийКомплектацияНоменклатуры.Разукомплектация") Тогда
		ЭтоРазукомплектация = Истина;
	Иначе
		ЭтоРазукомплектация = Ложь;
	КонецЕсли;
		
	// Параметры по основным средствам
	ЗначениеПеречисленияГрупповойОбъект = ПредопределенноеЗначение("Перечисление.ЕдиницыУчетаОС.ГрупповойОбъект");
	
	Если ЭтоПокупкаОС Тогда
		ЭтоОС = Истина;
		ГрупповойОбъектОС = ТекущиеДанные.ЕдиницаУчета = ЗначениеПеречисленияГрупповойОбъект;
	КонецЕсли;
	
	Если ЭтоПринятиеКУчетуОС Тогда
		ЭтоОС = Истина;
		Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПринятияКУчетуОсновныхСредств.Оборудование") Тогда
			Номенклатура = Объект.Номенклатура;
		ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПринятияКУчетуОсновныхСредств.ОбъектыСтроительства") Тогда
			ЭтоСоставноеОС = Истина;
			ОбъектСтроительства = Объект.ОбъектСтроительства;
			Номенклатура = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
		КонецЕсли;
	КонецЕсли;
	
	Если ЭтоМодернизацияОС Тогда
		ЭтоСоставноеОС = Истина;
		ЭтоОС = Истина;
		ОбъектСтроительства = Объект.ОбъектСтроительства;
		Номенклатура = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
	КонецЕсли;
	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПередачаОС") Или ПараметрыФормыПодбора.ПередачаТоваровВСоставеРабот Тогда
		ЭтоОС = Не ПараметрыФормыПодбора.ПередачаТоваровВСоставеРабот;
		ЭтоПродажа = Истина;
		Если ЭтоОС Тогда
			ГрупповойОбъектОС = ТекущиеДанные.ЕдиницаУчета = ЗначениеПеречисленияГрупповойОбъект;
		КонецЕсли;
		СтавкаНДС = ТекущиеДанные.СтавкаНДС;
		СуммаНДС = ТекущиеДанные.СуммаНДС;
		ТребуетсяСуммаНДС = СтавкаНДС <> ПредопределенноеЗначение("Перечисление.СтавкиНДС.БезНДС")
			И СтавкаНДС <> ПредопределенноеЗначение("Перечисление.СтавкиНДС.НДС0")
			И Не ГрупповойОбъектОС;
	КонецЕсли;
	
	Если ЭтоСписаниеОС Тогда 
		ЭтоОС = Истина;
		ГрупповойОбъектОС = ТекущиеДанные.ЕдиницаУчета = ЗначениеПеречисленияГрупповойОбъект;
	КонецЕсли;
	
	Если ЭтоОС Тогда
		ОсновноеСредство = ТекущиеДанные.ОсновноеСредство;
	КонецЕсли;
	
	// Определение суммовых параметров, необходимости отражения колонки сумма, необходимости контроля заполнения суммы
	ИспользуетсяВалютаРеглУчета = Ложь;
	// Заполнение суммы, если такой реквизит есть 
	Если ПараметрыФормыПодбора.ПрослеживаемыйКомплект Или ЭтоОС И Не ГрупповойОбъектОС И НЕ ЭтоВводОстатков Тогда
		ТребуетсяКонтрольЗаполненияСуммы = Истина;
		ТребуетсяОтображениеКолонкиСумма = Истина;
		Если ПараметрыФормыПодбора.ЭтоКомиссия
			И (ЭтоВыкупКомиссионером Или ЭтоВозвратВыкупленногоКомиссионером) Тогда
			Если Объект.СуммаВключаетНДС Тогда
				Сумма = ТекущиеДанные.Сумма - ТекущиеДанные.СуммаНДС;
			Иначе
				Сумма = ТекущиеДанные.Сумма;
			КонецЕсли;
		ИначеЕсли ПараметрыФормыПодбора.ЭтоКомиссия И Не ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") Тогда
			ТребуетсяКонтрольЗаполненияСуммы = Ложь;
			ТребуетсяОтображениеКолонкиСумма = Ложь;
		ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") 
			И Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийОтчетКомиссионера.ОтчетОСписании") Тогда
			ТребуетсяКонтрольЗаполненияСуммы = Ложь;
			ТребуетсяОтображениеКолонкиСумма = Истина;
		ИначеЕсли ЭтоВводОстатков Тогда
			ТребуетсяКонтрольЗаполненияСуммы = Ложь;
			ТребуетсяОтображениеКолонкиСумма = Ложь;
		ИначеЕсли (ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
			Или ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВозвратТоваровПоставщику")
			Или ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.КорректировкаРеализации")) И Форма.ЭтоКомиссия 
			Или ЭтоМодернизацияОС Тогда
			ТребуетсяКонтрольЗаполненияСуммы = Ложь;
			ТребуетсяОтображениеКолонкиСумма = Ложь;
		ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
			Сумма = ТекущиеДанные.Сумма;
			ТребуетсяКонтрольЗаполненияСуммы = Истина;
			ТребуетсяОтображениеКолонкиСумма = Истина;
			ИспользуетсяВалютаРеглУчета = Истина;
		ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.СписаниеТоваров")
			Или ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ТребованиеНакладная")
			Или ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.СписаниеМатериаловИзЭксплуатации") Тогда
			ТребуетсяКонтрольЗаполненияСуммы = Ложь;
			ТребуетсяОтображениеКолонкиСумма = Истина;
			ИспользуетсяВалютаРеглУчета = Истина;
		ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПередачаОборудованияВМонтаж") 
			Или (ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПринятиеКУчетуОС")
			И Не Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПринятияКУчетуОсновныхСредств.ПоРезультатамИнвентаризации"))
			Или ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.КомплектацияНоменклатуры")
			Или ЭтоПередачаТоваровКомитенту Тогда
			ТребуетсяКонтрольЗаполненияСуммы = Ложь;
			ТребуетсяОтображениеКолонкиСумма = Ложь;
		ИначеЕсли (ЭтоПринятиеКУчетуОС
			И Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПринятияКУчетуОсновныхСредств.ПоРезультатамИнвентаризации")) Тогда
			Сумма = Объект.СтоимостьБУ;
			ИспользуетсяВалютаРеглУчета = Истина;
		ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			ВидДоговора = ПрослеживаемостьФормыВызовСервера.ПолучитьВидДоговора(Объект.ДоговорКонтрагента);
			Если ВидДоговора = ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером") Тогда
				ТребуетсяКонтрольЗаполненияСуммы = Ложь;
				ТребуетсяОтображениеКолонкиСумма = Ложь;
			ИначеЕсли Объект.СуммаВключаетНДС Тогда
				Сумма = ТекущиеДанные.Сумма - ТекущиеДанные.СуммаНДС;
			Иначе
				Сумма = ТекущиеДанные.Сумма;
			КонецЕсли;
		ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.КорректировкаПоступления") И Форма.ЭтоКомиссияПоПродаже Тогда
			ТребуетсяКонтрольЗаполненияСуммы = Ложь;
			ТребуетсяОтображениеКолонкиСумма = Ложь;
		ИначеЕсли ЭтоСписаниеОС Тогда
			ТребуетсяКонтрольЗаполненияСуммы = Ложь;
			ТребуетсяОтображениеКолонкиСумма = Ложь;
		ИначеЕсли Объект.СуммаВключаетНДС Тогда
			Сумма = ТекущиеДанные.Сумма - ТекущиеДанные.СуммаНДС;
		Иначе
			Сумма = ТекущиеДанные.Сумма;
		КонецЕсли;
	КонецЕсли;

	Если ТребуетсяОтображениеКолонкиСумма Тогда
		ВалютаДокумента = ?(ИспользуетсяВалютаРеглУчета,
			ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета(),
			Объект.ВалютаДокумента);
	КонецЕсли;
		
	Если ЭтоВводОстатков И ИмяТаблицы = "БухСправка" Тогда
		ЭтоВводОстатковПоЗабалансу = Истина;
	КонецЕсли;
	
	Если ЭтоВводОстатков
		И ТекущиеДанные.СчетУчета = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств") Тогда
		ВводОстатковПо0803 = Истина;
		ОбъектСтроительства = ТекущиеДанные.Номенклатура;
	Иначе
		ВводОстатковПо0803 = Ложь;
	КонецЕсли;

	
	// Параметры по разукомплектации
	Если Не ЭтоОС
		И Не ЭтоРазукомплектация
		И Не ЭтоВводОстатковПоЗабалансу Тогда
		Номенклатура = ТекущиеДанные.Номенклатура;
	ИначеЕсли ЭтоРазукомплектация Тогда
		Номенклатура = Объект.Номенклатура;
	ИначеЕсли ЭтоВводОстатковПоЗабалансу Тогда
		Если ТипЗнч(ТекущиеДанные.Субконто1) = Тип("СправочникСсылка.Номенклатура") Тогда
			Номенклатура = ТекущиеДанные.Субконто1;
		ИначеЕсли ТипЗнч(ТекущиеДанные.Субконто2) = Тип("СправочникСсылка.Номенклатура") Тогда
			Номенклатура = ТекущиеДанные.Субконто2;
		ИначеЕсли ТипЗнч(ТекущиеДанные.Субконто3) = Тип("СправочникСсылка.Номенклатура") Тогда
			Номенклатура = ТекущиеДанные.Субконто3;
		КонецЕсли;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Организация",                      Объект.Организация);
	СтруктураПараметров.Вставить("Номенклатура",                     Номенклатура);
	СтруктураПараметров.Вставить("Период",                           Объект.Дата);
	СтруктураПараметров.Вставить("ИмяТаблицы",                       ИмяТаблицы);
	СтруктураПараметров.Вставить("ВыборПоОстаткам",                  НЕ ПараметрыФормыПодбора.ЭтоПоступление);
	СтруктураПараметров.Вставить("ЭтоОС",                            ЭтоОС);
	СтруктураПараметров.Вставить("ЭтоСоставноеОС",                   ЭтоСоставноеОС);
	СтруктураПараметров.Вставить("ОбъектСтроительства",              ОбъектСтроительства);
	СтруктураПараметров.Вставить("ПрослеживаемыйКомплект",           ПараметрыФормыПодбора.ПрослеживаемыйКомплект);
	СтруктураПараметров.Вставить("Сумма",                            Сумма);
	СтруктураПараметров.Вставить("Комплектующие",                    ?(ЭтоРазукомплектация, ТекущиеДанные.Номенклатура, Комплектующие));
	СтруктураПараметров.Вставить("ЭтоРазукомплектация",              ЭтоРазукомплектация);
	СтруктураПараметров.Вставить("ОсновноеСредство",                 ОсновноеСредство);
	СтруктураПараметров.Вставить("СтавкаНДС",                        СтавкаНДС);
	СтруктураПараметров.Вставить("СуммаНДС",                         СуммаНДС);
	СтруктураПараметров.Вставить("ЭтоПродажа",                       ЭтоПродажа);
	СтруктураПараметров.Вставить("ВалютаДокумента",                  ВалютаДокумента);
	СтруктураПараметров.Вставить("ТребуетсяЗаполнениеСуммы",         ТребуетсяКонтрольЗаполненияСуммы);
	СтруктураПараметров.Вставить("ТребуетсяОтображениеКолонкиСумма", ТребуетсяОтображениеКолонкиСумма);
	СтруктураПараметров.Вставить("ГрупповойОбъектОС",                ГрупповойОбъектОС);
	СтруктураПараметров.Вставить("СписаниеОС",                       ЭтоСписаниеОС);
	СтруктураПараметров.Вставить("ЭтоВводОстатковПоЗабалансу",       ЭтоВводОстатковПоЗабалансу);
	Структурапараметров.Вставить("ВводОстатковПо0803",               ВводОстатковПо0803);
	СтруктураПараметров.Вставить("СтатусПроверкиРНПТ",               СтатусПроверкиРНПТ);
	СтруктураПараметров.Вставить("ПередачаТоваровВСоставеРабот",     ПараметрыФормыПодбора.ПередачаТоваровВСоставеРабот);
	
	Если Не ПараметрыФормыПодбора.ЭтоПереходныйПериод
		И (ПараметрыФормыПодбора.ПередачаТоваровВСоставеРабот Или ТекущиеДанные.ПрослеживаемыйТовар)
		Или ВводОстатковПо0803
		И (НЕ ЭтоВвозИзЕАЭС ИЛИ ЭтоВозвратВЕАЭС ИЛИ ЭтоКорректировкаПоступленияЕАЭС) Тогда
		ЕстьОшибкиЗаполнения = Ложь;
		
		Если (Не ЭтоОС Или ГрупповойОбъектОС) И Не ВводОстатковПо0803 И Не ЗначениеЗаполнено(ТекущиеДанные.Количество)
			И Не ПараметрыФормыПодбора.ЭтоИсходныеРНПТ 
			И НЕ ПараметрыФормыПодбора.ПередачаТоваровВСоставеРабот Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
				"Поле", "Заполнение", НСтр("ru = 'Количество'"));
				Поле = ИмяТаблицы + "["+ Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=") + "].Количество";
			Если ПараметрыФормыПодбора.ЭтоВыпускПродукции Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , Поле, , ЕстьОшибкиЗаполнения);
			Иначе
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, Объект.Ссылка, Поле, "Объект", ЕстьОшибкиЗаполнения);
			КонецЕсли;
		КонецЕсли;
		
		Если Не ЭтоОС И ЕстьРасхождения И Не ЗначениеЗаполнено(ТекущиеДанные.КоличествоПоДокументу) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
				"Поле", "Заполнение", НСтр("ru = 'Количество по документу'"));
				Поле = ИмяТаблицы + "["+ Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=") + "].КоличествоПоДокументу";
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,Объект.Ссылка, Поле, "Объект", ЕстьОшибкиЗаполнения);
		КонецЕсли;
		
		Если НЕ ПараметрыФормыПодбора.ПередачаТоваровВСоставеРабот И Не ЭтоОС И Не ЭтоВводОстатковПоЗабалансу И Не ВводОстатковПо0803
			И НЕ ПараметрыФормыПодбора.ПрослеживаемыйКомплект И Не ЗначениеЗаполнено(ТекущиеДанные.СтранаПроисхождения) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
				"Поле", "Заполнение", НСтр("ru = 'Страна происхождения'"));
				Поле = ИмяТаблицы + "[" +Формат(Элементы[ИмяТаблицы].ТекущиеДанные.НомерСтроки-1,"ЧГ=") + "].СтранаПроисхождения";
			Если ПараметрыФормыПодбора.ЭтоВыпускПродукции Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , Поле, , ЕстьОшибкиЗаполнения);
			Иначе
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, Объект.Ссылка, Поле, "Объект", ЕстьОшибкиЗаполнения);
			КонецЕсли;
		КонецЕсли;
		
		Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") И ИмяТаблицы = "ТоварыВозвращенные" Тогда
			Если Не ЗначениеЗаполнено(ТекущиеДанные.ДокументРеализации) И НЕ ТекущиеДанные.ПоТекущемуДокументу Тогда
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
					"Поле", "Заполнение", НСтр("ru = 'Документ реализации'"));
					Поле = ИмяТаблицы + "[" +Формат(Элементы[ИмяТаблицы].ТекущиеДанные.НомерСтроки-1,"ЧГ=") + "].ДокументРеализации";
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,Объект.Ссылка, Поле, "Объект", ЕстьОшибкиЗаполнения);
			КонецЕсли;
			ЭтоВозвратКомиссия = Истина;
			ДокументРеализации = ТекущиеДанные.ДокументРеализации;
			ДатаТекущегоДокумента = КонецДня(Объект.Дата);
			КлючСтроки = ТекущиеДанные.КлючСтроки;
			СтрокаСПокупателем = Объект.Возвраты.НайтиСтроки(Новый Структура("КлючСтроки", КлючСтроки));
			ВозвратКомиссияПоТекДокументу = ТекущиеДанные.ПоТекущемуДокументу;
			Если СтрокаСПокупателем.Количество() > 0 Тогда
				ВыставленСФ = СтрокаСПокупателем[0].ВыставленСФ;
				Покупатель  = СтрокаСПокупателем[0].Покупатель;
			КонецЕсли;
			Если ВыставленСФ Тогда
				МассивСФ = Объект.ВозвратыИсходныеДокументы.НайтиСтроки(Новый Структура("КлючСтроки", КлючСтроки));
				Если МассивСФ.Количество() = 0 Тогда
					ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
						"Поле", "Заполнение", НСтр("ru = 'Счет - фактура'"));
						Поле = "Возвраты" + "[" +Формат(СтрокаСПокупателем[0].НомерСтроки-1,"ЧГ=") + "].КСчетуФактуреКомиссионераНомер";
					ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, Объект.Ссылка, Поле, "Объект", ЕстьОшибкиЗаполнения);
				КонецЕсли;
				Для Каждого Строка Из МассивСФ Цикл
					Если ЗначениеЗаполнено(Строка.ИсходныйДокумент) И Не ТекущиеДанные.ПоТекущемуДокументу Тогда
						СчетФактура.Добавить(Строка.ИсходныйДокумент);
					ИначеЕсли Не ТекущиеДанные.ПоТекущемуДокументу Тогда
						ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
							"Поле", "Заполнение", НСтр("ru = 'Счет-фактура"));
							Поле = "Возвраты" + "[" +Формат(СтрокаСПокупателем[0].НомерСтроки-1,"ЧГ=") + "].КСчетуФактуреКомиссионераНомер";
						ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, Объект.Ссылка, Поле, "Объект", ЕстьОшибкиЗаполнения);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		// Проверки для разукомплектации
		Если ЭтоРазукомплектация Тогда 
			Если Не ЗначениеЗаполнено(Объект.Номенклатура) Тогда
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
				"Поле", "Заполнение", НСтр("ru = 'Комплект'"));
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, Объект.Ссылка, "Номенклатура", "Объект", ЕстьОшибкиЗаполнения);
			КонецЕсли;
			
			Если Не Объект.ПрослеживаемыйКомплект Тогда
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(, ,
				НСтр("ru = 'Для комплекта не указан режим контроля ""Прослеживаемый товар(ы) в составе комплекта""'"));
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, Объект.Ссылка, "Номенклатура", "Объект", ЕстьОшибкиЗаполнения);
			КонецЕсли;
		КонецЕсли;

		// Контроль суммы для комплектов (если вообще требуется сумма)
		Если (ПараметрыФормыПодбора.ПрослеживаемыйКомплект Или ЭтоОС)
			И Не ЭтоПринятиеКУчетуОС 
			И Не ЭтоМодернизацияОС
			И ТребуетсяКонтрольЗаполненияСуммы
			И Не Значениезаполнено(ТекущиеДанные.Сумма)
			И Не ПараметрыФормыПодбора.ЭтоИсходныеРНПТ 
			И Не ЭтоВводОстатковПоЗабалансу Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
				"Поле", "Заполнение", НСтр("ru = 'Сумма'"));
				Поле = ИмяТаблицы + "[" +Формат(Элементы[ИмяТаблицы].ТекущиеДанные.НомерСтроки-1,"ЧГ=") + "].Сумма";
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,Объект.Ссылка, Поле, "Объект", ЕстьОшибкиЗаполнения);
		КонецЕсли;
		
		// Контроль реквизитов для ОС
		Если ЭтоПринятиеКУчетуОС 
			И Не ЭтоСоставноеОС
			И Не ПараметрыФормыПодбора.ЭтоПоступление
			И Не ЗначениеЗаполнено(Объект.Номенклатура) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
			"Поле", "Заполнение", НСтр("ru = 'Оборудование'"));
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, Объект.Ссылка, "Номенклатура", "Объект", ЕстьОшибкиЗаполнения);
		КонецЕсли;
		
		Если ЭтоСоставноеОС И Не ЗначениеЗаполнено(Объект.ОбъектСтроительства) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
			"Поле", "Заполнение", НСтр("ru = 'Объект строительства'"));
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, Объект.Ссылка, "ОбъектСтроительства", "Объект", ЕстьОшибкиЗаполнения);
		КонецЕсли;
		
		Если ТребуетсяСуммаНДС И Не ЗначениеЗаполнено(ТекущиеДанные.СуммаНДС) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
				"Поле", "Заполнение", НСтр("ru = 'Сумма НДС'"));
				Поле = ИмяТаблицы + "[" +Формат(Элементы[ИмяТаблицы].ТекущиеДанные.НомерСтроки-1,"ЧГ=") + "].СуммаНДС";
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,Объект.Ссылка, Поле, "Объект", ЕстьОшибкиЗаполнения);
		КонецЕсли;

		Если ЭтоПринятиеКУчетуОС И ПараметрыФормыПодбора.ЭтоПоступление
			И Не ЗначениеЗаполнено(Объект.СтоимостьБУ) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
			"Поле", "Заполнение", НСтр("ru = 'Стоимость'"));
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, Объект.Ссылка, "СтоимостьБУ", "Объект", ЕстьОшибкиЗаполнения);
		КонецЕсли;

		Если ЕстьОшибкиЗаполнения Тогда
			Возврат;
		КонецЕсли;
		
		Если ЕстьРасхождения Тогда
			КоличествоРНПТ = Мин(ТекущиеДанные.Количество, ТекущиеДанные.КоличествоПоДокументу);
		ИначеЕсли ГрупповойОбъектОС Тогда
			КоличествоРНПТ = ТекущиеДанные.Количество;
		ИначеЕсли Не ЭтоОС Тогда
			КоличествоРНПТ = ТекущиеДанные.Количество;
		КонецЕсли;
		
		// Установим дополнительные ограничения по комиссионным товарам
		
		Если ЭтоПередачаТоваровКомитенту Тогда
			Комитент    = Объект.Контрагент;
			ВидЗапасов = ПредопределенноеЗначение("Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыЗакупленныеДляКомитента");
		КонецЕсли;
		
		// Установим параметры по возвратам
		Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя")
			И (НЕ ПараметрыФормыПодбора.ЭтоКомиссия Или ЭтоВозвратВыкупленногоКомиссионером) Тогда
			ЭтоВозвратРозница = ТипЗнч(Объект.Сделка) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах");
			ДокументРеализации    = Форма.ДокументРеализации;
			ДатаТекущегоДокумента = КонецДня(Объект.Дата);
			ДатаРеализации        = Форма.ДатаРеализации;
			Цена                  = ТекущиеДанные.Цена;
		ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") И ИмяТаблицы = "Возвраты" Тогда
			ЭтоВозвратРозница     = Истина;
			ДатаТекущегоДокумента = КонецДня(Объект.Дата);
			ДатаРеализации        = ТекущиеДанные.ДатаРеализации;
		ИначеЕсли ЭтоВозвратПоставщику И НЕ ПараметрыФормыПодбора.ЭтоПоступление Тогда
			Если ПараметрыФормыПодбора.ЭтоКомиссия Тогда 
				Комитент    = Объект.Контрагент;
				ВидЗапасов  = ПредопределенноеЗначение("Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыОтКомитентаНаРеализацию");
				Комиссионер = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
				ДокументРеализации    = ?(Форма.УказыватьСделкуПоСтрокам, ТекущиеДанные.Сделка, Объект.Сделка);
				ДатаТекущегоДокумента = КонецДня(Объект.Дата);
			Иначе
				ЭтоВозвратПоставщику  = Истина;
				ДокументРеализации    = ?(Форма.УказыватьСделкуПоСтрокам, ТекущиеДанные.Сделка, Объект.Сделка);
				ДатаТекущегоДокумента = КонецДня(Объект.Дата);
				Если ЗначениеЗаполнено(ТекущиеДанные.Контрагент) Тогда
					Комитент   = ТекущиеДанные.Контрагент;
					ВидЗапасов = ПредопределенноеЗначение("Перечисление.ВидыЗапасовПрослеживаемыхТоваров.ТоварыЗакупленныеДляКомитента");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если (Не ЭтоОС И Не ПараметрыФормыПодбора.ПрослеживаемыйКомплект И Не ЭтоВводОстатковПоЗабалансу
			Или ЭтоВозвратПоставщику) И НЕ ПараметрыФормыПодбора.ПередачаТоваровВСоставеРабот Тогда
			СтранаПроисхождения = ТекущиеДанные.СтранаПроисхождения;
		КонецЕсли;
			
		Если (ЭтоПродажа Или ЭтоСписаниеОС) И ГрупповойОбъектОС Тогда
			ТребуетсяКолонкаСтранаПроисхождения = Истина;
		ИначеЕсли ЭтоОС И Не ГрупповойОбъектОС Тогда
			ТребуетсяКолонкаСтранаПроисхождения = Истина;
		ИначеЕсли ЭтоВводОстатковПоЗабалансу Тогда
			ТребуетсяКолонкаСтранаПроисхождения = Истина;
		ИначеЕсли ПараметрыФормыПодбора.ПрослеживаемыйКомплект Тогда
			Если ЭтоПередачаТоваровКомитенту Тогда 
				ТребуетсяКолонкаСтранаПроисхождения = Ложь;
			ИначеЕсли ЭтоВозвратПоставщику Тогда
				ТребуетсяКолонкаСтранаПроисхождения = Ложь;
			ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
				ТребуетсяКолонкаСтранаПроисхождения = Истина;
			ИначеЕсли ЭтоВводОстатков Тогда
				ТребуетсяКолонкаСтранаПроисхождения = Истина
			ИначеЕсли ПараметрыФормыПодбора.ЭтоПоступление Тогда
				ТребуетсяКолонкаСтранаПроисхождения = Ложь;
			Иначе
				ТребуетсяКолонкаСтранаПроисхождения = Истина;
			КонецЕсли;
		КонецЕсли;
		
		ТекущиеДанныеВСтруктуре = Новый Структура("СчетУчета", ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ПустаяСсылка"));
		ЗаполнитьЗначенияСвойств(ТекущиеДанныеВСтруктуре, ТекущиеДанные); // СчетУчета может отсутствовать в табличной части. 
		
		СтруктураПараметров.Вставить("Количество",                        ?(ЭтоОС И Не ГрупповойОбъектОС, 1, КоличествоРНПТ));
		СтруктураПараметров.Вставить("СтранаПроисхождения",               СтранаПроисхождения);
		СтруктураПараметров.Вставить("ЭтоВозвратРозница",                 ЭтоВозвратРозница);
		СтруктураПараметров.Вставить("ЭтоВозвратПоставщику",              ЭтоВозвратПоставщику);
		СтруктураПараметров.Вставить("ДатаРеализации",                    ДатаРеализации);
		СтруктураПараметров.Вставить("ДатаТекущегоДокумента",             ДатаТекущегоДокумента);
		СтруктураПараметров.Вставить("ТекущийДокумент",                   ДокументСсылка);
		СтруктураПараметров.Вставить("ДокументРеализации",                ДокументРеализации);
		СтруктураПараметров.Вставить("Цена",                              Цена);
		СтруктураПараметров.Вставить("Комитент",                          Комитент);
		СтруктураПараметров.Вставить("Комиссионер",                       Комиссионер);
		СтруктураПараметров.Вставить("ВидЗапасов",                        ВидЗапасов);
		СтруктураПараметров.Вставить("ВыставленСФ",                       ВыставленСФ);
		СтруктураПараметров.Вставить("ЭтоВозвратКомиссия",                ЭтоВозвратКомиссия);
		СтруктураПараметров.Вставить("Покупатель",                        Покупатель);
		СтруктураПараметров.Вставить("СчетФактура",                       СчетФактура);
		СтруктураПараметров.Вставить("ВозвратКомиссияПоТекДокументу",     ВозвратКомиссияПоТекДокументу);
		СтруктураПараметров.Вставить("ЭтоИсходныеРНПТ",                   ПараметрыФормыПодбора.ЭтоИсходныеРНПТ);
		СтруктураПараметров.Вставить("ОткрыватьДляПросмотра",             ПараметрыФормыПодбора.ЭтоИсходныеРНПТ Или (ЭтоСписаниеОС И Не ГрупповойОбъектОС));
		СтруктураПараметров.Вставить("ПоставщикРезидентТаможенногоСоюза", ЭтоВозвратВЕАЭС);
		СтруктураПараметров.Вставить("СчетУчета",                         ТекущиеДанныеВСтруктуре.СчетУчета);
		СтруктураПараметров.Вставить("ТребуетсяКолонкаСтранаПроисхождения", ТребуетсяКолонкаСтранаПроисхождения);
		СтруктураПараметров.Вставить("ТребуетсяСуммаНДС",                 ТребуетсяСуммаНДС);
		СтруктураПараметров.Вставить("ВДокументеДоступнаПроверкаРНПТ",    ВДокументеДоступнаПроверкаРНПТ);
		
		Если ЭтоВводОстатков Тогда
			ИДСтроки = ТекущиеДанные.Ключ;
		ИначеЕсли ЭтоСписаниеОС Тогда
			ИДСтроки = ТекущиеДанные.КлючСтроки;
		Иначе
			ИДСтроки = ТекущиеДанные.ИдентификаторСтроки;
		КонецЕсли;
		
		Если ПараметрыФормыПодбора.ЭтоВыпускПродукции Тогда
			АдресТаблицыРНПТВХранилище = ПараметрыФормыПодбора.АдресХранилищаСведенияВыпускаПродукции;
		Иначе
			АдресТаблицыРНПТВХранилище = ОбщегоНазначенияБПВызовСервера.ПоместитьРНПТВХранилище(
			Объект, ИДСтроки, Форма.УникальныйИдентификатор, ПараметрыФормыПодбора.ЭтоИсходныеРНПТ);
		КонецЕсли;
		
		СтруктураПараметров.Вставить("АдресТаблицыРНПТВХранилище", АдресТаблицыРНПТВХранилище);
		СтруктураПараметров.Вставить("ЭтоПоступление", ПараметрыФормыПодбора.ЭтоПоступление);
		
		ОткрытьФорму("Справочник.НомераГТД.Форма.ФормаПодбораРНПТ", 
			СтруктураПараметров, Форма);
		
	Иначе
		ОткрытьФорму("Справочник.НомераГТД.ФормаВыбора", СтруктураПараметров, Форма);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормуПросмотраРНПТДоКорректировки(Форма, ИмяТаблицы) Экспорт
	
	Объект        = Форма.Объект;
	Элементы      = Форма.Элементы;
	ТекущиеДанные = Элементы[ИмяТаблицы].ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		ИсходныйДокумент = Объект.ДокументРеализации;
		Если ТипЗнч(ИсходныйДокумент) <> Тип("ДокументСсылка.РеализацияТоваровУслуг") 
			И ТипЗнч(ИсходныйДокумент) <> Тип("ДокументСсылка.КорректировкаРеализации") Тогда
			Возврат;
		КонецЕсли;
	ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
		ИсходныйДокумент = Объект.ДокументПоступления;
		Если ТипЗнч(ИсходныйДокумент) <> Тип("ДокументСсылка.ПоступлениеТоваровУслуг") 
			И ТипЗнч(ИсходныйДокумент) <> Тип("ДокументСсылка.КорректировкаПоступления") Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ПрослеживаемыйТовар Тогда
		Если ЗначениеЗаполнено(ТекущиеДанные.РНПТДо) Тогда
			АдресТаблицыРНПТВХранилище = ОбщегоНазначенияБПВызовСервера.ПоместитьРНПТВХранилище(
				ИсходныйДокумент, ТекущиеДанные.ИдентификаторСтроки, Форма.УникальныйИдентификатор);
			
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("Номенклатура",    ТекущиеДанные.Номенклатура);
			СтруктураПараметров.Вставить("ИмяТаблицы",      ИмяТаблицы);	
			СтруктураПараметров.Вставить("АдресТаблицыРНПТВХранилище", АдресТаблицыРНПТВХранилище);
			СтруктураПараметров.Вставить("ОткрыватьДляПросмотра", Истина);
			
			ОткрытьФорму("Справочник.НомераГТД.Форма.ФормаПодбораРНПТ",СтруктураПараметров, Форма);
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(ТекущиеДанные.НомерГТДДоИзменения) Тогда
		ПоказатьЗначение(,ТекущиеДанные.НомерГТДДоИзменения);
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьПоказатьУведомления(Форма, Элемент, НавигационнаяСсылкаФорматированнойСтроки, 
		СтандартнаяОбработка, ЭтоКорректировка = Ложь) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Объект = Форма.Объект;
	
	Если ЭтоФормаПоступленияИлиКорректировкиТоваров(Форма) Тогда
		
		Если Форма.СписокУведомлений.Количество() = 0 Тогда
			ДополнительныеПараметры = Новый Структура("ДокументОбъект, Форма", Объект, Форма);
			Если Не Объект.Проведен Или Форма.Модифицированность Тогда 
				ТекстВопроса = НСтр("ru = 'Для создания уведомления необходимо предварительно провести документ.'");
				Оповещение = Новый ОписаниеОповещения("ОткрытьПомощникПолученияРНПТ", ЭтотОбъект, ДополнительныеПараметры);
				Кнопки = Новый СписокЗначений;
				Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Провести и продолжить'"));
				Кнопки.Добавить(КодВозвратаДиалога.Отмена);
				ПоказатьВопрос(Оповещение, ТекстВопроса, Кнопки);
			Иначе
				ОткрытьПомощникПолученияРНПТ(КодВозвратаДиалога.Да, ДополнительныеПараметры);
			КонецЕсли;
			
		ИначеЕсли Форма.СписокУведомлений.Количество() = 1 Тогда
			ПоказатьЗначение(, Форма.СписокУведомлений[0].Значение)
		Иначе
			Оповещение = Новый ОписаниеОповещения("СоздатьПоказатьУведомленияОповещение", ЭтотОбъект, Форма);
			Форма.ПоказатьВыборИзМеню(Оповещение, Форма.СписокУведомлений, Элемент);
		КонецЕсли;
		
	ИначеЕсли ЭтоФормаКорректировкиИлиВозвратаТоваровИУслуг(Форма) Тогда
		
		Если Форма.СписокУведомлений.Количество() = 0 Тогда
			ДополнительныеПараметры = Новый Структура("ДокументОбъект, Форма", Объект, Форма);
			Если Не Объект.Проведен Или Форма.Модифицированность Тогда 
				ТекстВопроса = 
					НСтр("ru = 'Для создания корректировочного уведомления необходимо предварительно провести документ.'");
				Оповещение = Новый ОписаниеОповещения("ОткрытьПомощникПолученияРНПТ", ЭтотОбъект, ДополнительныеПараметры);
				Кнопки = Новый СписокЗначений;
				Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Провести и продолжить'"));
				Кнопки.Добавить(КодВозвратаДиалога.Отмена);
				ПоказатьВопрос(Оповещение, ТекстВопроса, Кнопки);
			Иначе
				ОткрытьПомощникПолученияРНПТ(КодВозвратаДиалога.Да, ДополнительныеПараметры);
			КонецЕсли;
			
		ИначеЕсли Форма.СписокУведомлений.Количество() = 1 Тогда
			ПоказатьЗначение(, Форма.СписокУведомлений[0].Значение)
		Иначе
			Оповещение = Новый ОписаниеОповещения("СоздатьПоказатьУведомленияОповещение", ЭтотОбъект, Форма);
			Форма.ПоказатьВыборИзМеню(Оповещение, Форма.СписокУведомлений, Элемент);
		КонецЕсли;
		
	// Это форма РеализацияТоваровУслуг
	ИначеЕсли ЭтоФормаРеализацииТоваровИУслуг(Форма) Тогда

		ПараметрыДокумента = Новый Структура("Ключ", Форма.УведомлениеОПеремещении);
		
		Если ЗначениеЗаполнено(Форма.УведомлениеОПеремещении) Тогда
			
			
			ОткрытьФорму("Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.ФормаОбъекта",
				ПараметрыДокумента, Форма.ЭтотОбъект);
			
		Иначе
			
			ЗначенияЗаполнения = Новый Структура();
			ЗначенияЗаполнения.Вставить("Основание", Форма.Объект.Ссылка);
			
			ПараметрыДокумента.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
			
			ОткрытьФорму("Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.ФормаОбъекта",
				ПараметрыДокумента, Форма.ЭтотОбъект);
			
		КонецЕсли;
		
	// Это форма ВозвратОтПокупателя, КорректировкаРеализации
	Иначе
		Если Форма.СписокУведомлений.Количество() = 0 Тогда
			
			ДополнительныеПараметры = Новый Структура("ДокументОбъект, Форма, ЭтоКорректировка", 
																		Объект, Форма, ЭтоКорректировка);
			Если Не Объект.Проведен Или Форма.Модифицированность Тогда 
				ТекстВопроса = 
					НСтр("ru = 'Для создания корректировочного уведомления необходимо предварительно провести документ.'");
				Оповещение = Новый ОписаниеОповещения("СоздатьОткрытьУведомлениеОПеремещении", ЭтотОбъект, ДополнительныеПараметры);
				Кнопки = Новый СписокЗначений;
				Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Провести и продолжить'"));
				Кнопки.Добавить(КодВозвратаДиалога.Отмена);
				ПоказатьВопрос(Оповещение, ТекстВопроса, Кнопки);
			Иначе
				СоздатьОткрытьУведомлениеОПеремещении(КодВозвратаДиалога.Да, ДополнительныеПараметры);
			КонецЕсли;
			
		ИначеЕсли Форма.СписокУведомлений.Количество() = 1 Тогда
			
			ПоказатьЗначение(, Форма.СписокУведомлений[0].Значение)
			
		Иначе
			
			Оповещение = Новый ОписаниеОповещения("СоздатьПоказатьУведомленияОповещение", ЭтотОбъект, Форма);
			Форма.ПоказатьВыборИзМеню(Оповещение, Форма.СписокУведомлений, Элемент);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьПоказатьУведомленияОповещение(ВыбранныйЭлемент, Форма) Экспорт
	Если ВыбранныйЭлемент <> Неопределено Тогда
		ПоказатьЗначение(, ВыбранныйЭлемент.Значение)
	КонецЕсли	
КонецПроцедуры

Процедура ОткрытьПомощникПолученияРНПТ(Ответ, ДополнительныеПараметры) Экспорт 
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Объект = ДополнительныеПараметры.ДокументОбъект;
	Форма = ДополнительныеПараметры.Форма;
	Если Не Объект.Проведен Или Форма.Модифицированность Тогда
		Если Не Форма.Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение)) Тогда 
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация", Объект.Организация);
	ПараметрыФормы.Вставить("ПериодСобытия", Объект.Дата);
	ПараметрыФормы.Вставить("КонтекстныйВызов", Истина);
	
	ОткрытьФорму("Обработка.ПомощникПолученияРНПТ.Форма.Форма", ПараметрыФормы, Форма);
	
КонецПроцедуры

Процедура ПоказатьПредупреждениеПрослеживаемыйТовар() Экспорт
	
	Подстроки = Новый Массив;
	Подстроки.Добавить(
		НСтр("ru = 'Товар из перечня, утвержденного постановлением правительства РФ от 01.06.2021 № 1110'"));
	Подстроки.Добавить(Символы.ПС);
	Подстроки.Добавить(Новый ФорматированнаяСтрока(
		НСтр("ru = 'Подробнее об учете прослеживаемых товаров'"),,,,"https://its.1c.ru/db/traceability"));
	ПодсказкаВДокументе = Новый ФорматированнаяСтрока(Подстроки);
	ПоказатьПредупреждение(,ПодсказкаВДокументе, , НСтр("ru = 'Прослеживаемый товар'"));
	
КонецПроцедуры

Процедура ОткрытьФормуПодбораСопроводительногоДокумента(Форма, ТекущиеДанные) Экспорт
	
	Объект = Форма.Объект;
	
	ПараметрыФормы = Новый Структура("Организация, Контрагент", Объект.Организация, ТекущиеДанные.Контрагент);
	
	ОткрытьФорму(ПрослеживаемостьФормыКлиентПереопределяемый.ФормаВыбораСопроводительногоДокументаВУведомленииОПеремещении(),
		ПараметрыФормы, Форма);
	
КонецПроцедуры

Функция ЭтоФормаКорректировкиИлиВозвратаТоваровИУслуг(Форма)
	
	Возврат СтрНайти(Форма.ИмяФормы, "ВозвратТоваровПоставщику") > 0
			ИЛИ СтрНайти(Форма.ИмяФормы, "КорректировкаПоступления") > 0;
	
КонецФункции

Функция ПодготовитьСтруктуруПараметровДляФормыПодбораРНПТ() Экспорт
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("ЭтоПоступление",                         Истина);
	СтруктураПараметров.Вставить("ЭтоКомиссия",                            Ложь);
	СтруктураПараметров.Вставить("ЭтоИсходныеРНПТ",                        Ложь);
	СтруктураПараметров.Вставить("ПрослеживаемыйКомплект",                 Ложь);
	СтруктураПараметров.Вставить("ЭтоПереходныйПериод",                    Ложь);
	СтруктураПараметров.Вставить("ЭтоВыпускПродукции",                     Ложь);
	СтруктураПараметров.Вставить("АдресХранилищаСведенияВыпускаПродукции", Неопределено);
	СтруктураПараметров.Вставить("ПередачаТоваровВСоставеРабот",           Ложь);
	
	Возврат СтруктураПараметров;
	
КонецФункции

Функция ЭтоФормаПоступленияИлиКорректировкиТоваров(Форма)
	
	Возврат СтрНайти(Форма.ИмяФормы, "ПоступлениеТоваровУслуг") > 0
			ИЛИ (СтрНайти(Форма.ИмяФормы, "ВозвратТоваровОтПокупателя") > 0 И НЕ Форма.РеализацияВЕАЭС) 
			ИЛИ СтрНайти(Форма.ИмяФормы, "КорректировкаРеализации") > 0 И НЕ Форма.РеализацияВЕАЭС;
	
КонецФункции

Процедура СоздатьОткрытьУведомлениеОПеремещении(Ответ, ДополнительныеПараметры) Экспорт 
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Объект = ДополнительныеПараметры.ДокументОбъект;
	Форма = ДополнительныеПараметры.Форма;
	Если Не Объект.Проведен Или Форма.Модифицированность Тогда
		Если Не Форма.Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение)) Тогда 
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыДокумента = Новый Структура("Ключ", Форма.УведомлениеОПеремещении);
	
	Если ЗначениеЗаполнено(Форма.УведомлениеОПеремещении) Тогда
		
		
		ОткрытьФорму("Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.ФормаОбъекта",
		ПараметрыДокумента, Форма.ЭтотОбъект);
		
	Иначе
		
		ЗначенияЗаполнения = Новый Структура();
		ЗначенияЗаполнения.Вставить("Основание", Форма.Объект.Ссылка);
		ЗначенияЗаполнения.Вставить("ЭтоКорректировка", ДополнительныеПараметры.ЭтоКорректировка);
		
		ПараметрыДокумента.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		
		ОткрытьФорму("Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.ФормаОбъекта",
		ПараметрыДокумента, Форма.ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ЭтоФормаРеализацииТоваровИУслуг(Форма)
	
	Возврат СтрНайти(Форма.ИмяФормы, "РеализацияТоваровУслуг") > 0;
	
КонецФункции

#КонецОбласти