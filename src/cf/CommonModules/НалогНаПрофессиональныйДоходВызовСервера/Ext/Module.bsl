#Область ПрограммныйИнтерфейс

Функция НавигацияПомощника(ВыбранныйРежим, Организация = Неопределено) Экспорт
	
	СтруктураНавигации = Новый Структура;
	СтруктураНавигации.Вставить(НавигацияПомощниковКлиентСервер.ИмяШага(1),
		СтруктураШагаНачало(1, Организация));
	
	СтруктураНавигации.Вставить(НавигацияПомощниковКлиентСервер.ИмяШага(2),
		СтруктураШагаЗаявление(2, ВыбранныйРежим, Организация));
	
	Если ВыбранныйРежим <> "ОСНОИП" Тогда
		СтруктураНавигации.Вставить(НавигацияПомощниковКлиентСервер.ИмяШага(3), СтруктураШагаДокументы(3, ВыбранныйРежим));
	КонецЕсли;
	
	Возврат СтруктураНавигации;
	
КонецФункции

// Формирует уведомление о перерходе на УСН при утрате права на НПД
//
// Параметры:
//   ПараметрыВыполнения - Структура - см. НовыеПараметрыФормированияУведомленияОПереходеНаУСН()
//   АдресРезультата - Строка - Адрес результата выполнения процедуры
//
Процедура СформироватьУведомлениеОПереходеНаУСН(ПараметрыВыполнения, АдресРезультата = Неопределено) Экспорт
	
	Результат = Новый Структура("Заявление, Ошибка", , "");
	
	Если Не Отчеты.РегламентированноеУведомлениеПереходСНПД.ДанноеУведомлениеДоступноДляИП() Тогда
		ВызватьИсключение НСтр("ru = 'Уведомление о переходе на УСН с НПД недоступно для ИП.'");
	КонецЕсли;
	
	ДатаСоставления = ТекущаяДатаСеанса();
	ДанныеУведомления = ДанныеУведомленияОПереходеНаУСН(ПараметрыВыполнения, ДатаСоставления);
	
	ИмяФормыПоУмолчанию = ИмяФормыУведомлениеПереходСНПД();
	
	СозданноеЗаявление = УведомлениеОПереходеНаУСНсНПД(ПараметрыВыполнения.Организация);
	
	Если СозданноеЗаявление = Неопределено Или Не ЗначениеЗаполнено(СозданноеЗаявление.Ссылка) Тогда
		УведомлениеОбъект = Документы.УведомлениеОСпецрежимахНалогообложения.СоздатьДокумент();
	Иначе
		УведомлениеОбъект = СозданноеЗаявление.Ссылка.ПолучитьОбъект();
	КонецЕсли;

	УведомлениеОбъект.Организация = ПараметрыВыполнения.Организация;
	УведомлениеОбъект.ИмяФормы = Сред(ИмяФормыПоУмолчанию, Найти(ИмяФормыПоУмолчанию, ".Форма.") + 7);
	УведомлениеОбъект.ИмяОтчета = "РегламентированноеУведомлениеПереходСНПД";
	УведомлениеОбъект.Дата = ДатаСоставления;
	УведомлениеОбъект.ДатаПодписи = ДатаСоставления;
	УведомлениеОбъект.ВидУведомления = НалогНаПрофессиональныйДоходКлиентСервер.ВидУведомленияПереходНПДУСН();
	УведомлениеОбъект.РегистрацияВИФНС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
		ПараметрыВыполнения.Организация,
		"РегистрацияВНалоговомОргане");
	
	// Для представителя также необходимо заполнить реквизиты документы
	Если ЗначениеЗаполнено(ПараметрыВыполнения.Представитель) Тогда
		ФИОПредставителя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыВыполнения.Представитель, "Фамилия, Имя, Отчество");
		УведомлениеОбъект.ПодписантФамилия = ФИОПредставителя.Фамилия;
		УведомлениеОбъект.ПодписантИмя = ФИОПредставителя.Имя;
		УведомлениеОбъект.ПодписантОтчество = ФИОПредставителя.Отчество;
	Иначе
		УведомлениеОбъект.ПодписантФамилия = ДанныеУведомления.ДанныеУведомления.Титульная.Фамилия;
		УведомлениеОбъект.ПодписантИмя = ДанныеУведомления.ДанныеУведомления.Титульная.Имя;
		УведомлениеОбъект.ПодписантОтчество = ДанныеУведомления.ДанныеУведомления.Титульная.Отчество;
	КонецЕсли;
	
	УведомлениеОбъект.ДанныеУведомления = Новый ХранилищеЗначения(ДанныеУведомления);
	
	Попытка
		УведомлениеОбъект.Записать();
		Результат.Заявление = УведомлениеОбъект.Ссылка;
	Исключение
		Результат.Ошибка = ОписаниеОшибки();
	КонецПопытки;
	
	Если ЗначениеЗаполнено(УведомлениеОбъект.Ссылка) Тогда
		ИнтерфейсыВзаимодействияБРО.СохранитьСтатусОтправкиУведомления(
			УведомлениеОбъект.Ссылка,
			ИнтерфейсыВзаимодействияБРОКлиентСервер.СтатусПодготовленоСтрокой());
	КонецЕсли;
	
	ПоместитьВоВременноеХранилище(Результат, АдресРезультата);
	
КонецПроцедуры

// Возвращает созданное уведомление о переходе на УСН с НПД
//
// Параметры:
//   Организация - СправочникСсылка.Организации - Организация, для которой необходимо найти уведомление о переходе на УСН с НПД
//
// Возвращаемое значение:
//   ДокументСсылка.УведомлениеОСпецрежимахНалогообложения (с видом УведомлениеПереходНПДУСН)
//
Функция УведомлениеОПереходеНаУСНсНПД(Организация) Экспорт
	
	Если Не Отчеты.РегламентированноеУведомлениеПереходСНПД.ДанноеУведомлениеДоступноДляИП() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	УведомлениеОСпецРежимеНалогообложения = Обработки.РегистрацияОрганизации.НайтиУведомлениеОСпецРежимеНалогообложения(
		Организация,
		НалогНаПрофессиональныйДоходКлиентСервер.ВидУведомленияПереходНПДУСН(),
		ИмяФормыУведомлениеПереходСНПД());
	
	Возврат УведомлениеОСпецРежимеНалогообложения;
	
КонецФункции

// Возвращает действующее имя формы уведомления о переходе на УСН и НПД
//
// Возвращаемое значение:
//   Строка
//
Функция ИмяФормыУведомлениеПереходСНПД() Экспорт
	
	Возврат Отчеты.РегламентированноеУведомлениеПереходСНПД.ПолучитьФормуПоУмолчанию();
	
КонецФункции

// Формирует уведомление о переходе на УСН с НПД
//
// Параметры:
//   Организация             - СправочникСсылка.Организации - Организация, для которой необходимо найти уведомление о переходе на УСН с НПД
//   УникальныйИдентификатор - УникальныйИдентификатор - Уникальный идентификатор формы
//   ВыбранныйРежим          - Строка - УСНДоходыИП или УСНДоходыРасходыИП
//   ДанныеПредставителя     - Структура - См. НалогНаПрофессиональныйДоходКлиентСервер.НовыеДанныеПредставителя()
//
// Возвращаемое значение:
// Структура - см. ДлительныеОперации.ВыполнитьВФоне
//
Функция СформироватьУведомлениеОПереходеНаУСНВФоне(Организация, УникальныйИдентификатор, ВыбранныйРежим, ДанныеПредставителя = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	НастройкиЗапуска = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	НастройкиЗапуска.НаименованиеФоновогоЗадания = НСтр("ru = 'Формирование уведомления о переходе на УСН при утрате права на НПД'");
	НастройкиЗапуска.ОжидатьЗавершение = 0;
	
	ПараметрыФормированияДокументов = НовыеПараметрыФормированияУведомленияОПереходеНаУСН();
	ПараметрыФормированияДокументов.Организация = Организация;
	ПараметрыФормированияДокументов.ВыбранныйРежим = ВыбранныйРежим;
	
	Если ДанныеПредставителя <> Неопределено Тогда
		ПараметрыФормированияДокументов.Представитель = ДанныеПредставителя.Представитель;
		ПараметрыФормированияДокументов.ДокументПредставителя = ДанныеПредставителя.ДокументПредставителя;
	КонецЕсли;
	
	Возврат ДлительныеОперации.ВыполнитьВФоне("НалогНаПрофессиональныйДоходВызовСервера.СформироватьУведомлениеОПереходеНаУСН",
		ПараметрыФормированияДокументов,
		НастройкиЗапуска);
	
КонецФункции

// Возвращает сумму доходов организации на НПД за выбранный период.
// Учитываются только доходы, полученные по банку и по кассе по данным бухгалтерского учета.
// 
// Параметры:
//  Организация - СправочникСсылка.Организации
//  НачалоПериода - Дата - начало периода
//  КонецПериода - Дата - конец периода
// 
// Возвращаемое значение:
//  Число - сумма доходов за период
//
Функция СуммаДоходов(Организация, НачалоПериода, КонецПериода) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ЧекиНПД.СуммаЧека), 0) КАК Доходы
	|ИЗ
	|	РегистрСведений.ЧекиНПД КАК ЧекиНПД
	|ГДЕ
	|	ЧекиНПД.Организация = &Организация
	|	И ЧекиНПД.ДатаЧека МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ЧекиНПД.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияЧековНПД.Зарегистрирован)";
	
	Возврат Запрос.Выполнить().Выгрузить()[0].Доходы;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СтруктураШагаНачало(НомерШага, Организация = Неопределено)
	
	СтруктураШага                = НоваяСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощникаУтратаПраваНПД();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Налоги'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "Налоги";
	СтруктураШага.ИмяФормы = "Обработка.СравнениеРежимовНалогообложения.Форма.Форма";
	
	Если ЗначениеЗаполнено(Организация) Тогда
		СтруктураШага.СтруктураПараметровФормы.Вставить("Организация", Организация);
	КонецЕсли;
	
	Возврат СтруктураШага;
	
КонецФункции

Функция СтруктураШагаЗаявление(НомерШага, ВыбранныйРежим, Организация)
	
	СтруктураШага                = НоваяСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощникаУтратаПраваНПД();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Заявление'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "Заявление";
	
	Если ВыбранныйРежим = "ПСНИП" Тогда
		СтруктураШага.ИмяФормы = "Обработка.ПомощникЗаполненияЗаявленияНаПолучениеПатента.Форма.Форма";
	Иначе
		СтруктураШага.ИмяФормы = "Обработка.СравнениеРежимовНалогообложения.Форма.Форма";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Организация) Тогда
		СтруктураШага.СтруктураПараметровФормы.Вставить("Организация", Организация);
	КонецЕсли;
	
	Возврат СтруктураШага;
	
КонецФункции

Функция СтруктураШагаДокументы(НомерШага, ВыбранныйРежим)
	
	СтруктураШага                = НоваяСтруктураШага();
	СтруктураШага.ИмяПомощника   = ИмяПомощникаУтратаПраваНПД();
	СтруктураШага.НомерШага      = НомерШага;
	СтруктураШага.ТекстНавигации = НСтр("ru='Документы'");
	СтруктураШага.СтруктураПараметровФормы.НавигацияПараметрФормы = "Документы";
	
	Если ВыбранныйРежим = "ПСНИП" Тогда
		СтруктураШага.ИмяФормы = "Обработка.ПомощникЗаполненияЗаявленияНаПолучениеПатента.Форма.Форма";
	Иначе
		СтруктураШага.ИмяФормы = "Обработка.СравнениеРежимовНалогообложения.Форма.Форма";
	КонецЕсли;
	
	Возврат СтруктураШага;
	
КонецФункции

Функция НоваяСтруктураШага()
	
	СтруктураШага = НавигацияПомощников.НовыйСтруктураШага();
	СтруктураШага.СтруктураПараметровФормы.Вставить("УтратаПраваНПД", Истина);
	
	Возврат СтруктураШага;
	
КонецФункции

Функция ИмяПомощникаУтратаПраваНПД()

	Возврат "УтратаПраваНПД";

КонецФункции

Функция ДанныеУведомленияОПереходеНаУСН(ПараметрыВыполнения, ДатаСоставления)
	
	Результат = Новый Структура("ДанныеУведомления, ДеревоСтраниц, РазрешитьВыгружатьСОшибками");
	
	ДанныеУведомления = НовыйСтруктураДанныеУведомленияОПереходеНаУСН();
	
	РеквизитыИП = Новый Массив;
	РеквизитыИП.Добавить("ФИО");
	РеквизитыИП.Добавить("ФамилияИП");
	РеквизитыИП.Добавить("ИмяИП");
	РеквизитыИП.Добавить("ОтчествоИП");
	РеквизитыИП.Добавить("ИННФЛ");
	РеквизитыИП.Добавить("ТелСлуж");
	РеквизитыИП.Добавить("КодНО");
	
	СведенияОбОрганизации = РегламентированнаяОтчетностьПереопределяемый.ПолучитьСведенияОбОрганизации(
		ПараметрыВыполнения.Организация,
		ДатаСоставления,
		РеквизитыИП);
	
	ДанныеУведомления.ДАТА_ПОДПИСИ = ДатаСоставления;
	ДанныеУведомления.ИНН = СведенияОбОрганизации.ИННФЛ;
	ДанныеУведомления.Фамилия = СведенияОбОрганизации.ФамилияИП;
	ДанныеУведомления.Имя = СведенияОбОрганизации.ИмяИП;
	ДанныеУведомления.Отчество = СведенияОбОрганизации.ОтчествоИП;
	ДанныеУведомления.КодНО = СведенияОбОрганизации.КодНО;
	ДанныеУведомления.Тлф = СведенияОбОрганизации.ТелСлуж;
	
	Если ЗначениеЗаполнено(ПараметрыВыполнения.Представитель) Тогда
		ДанныеУведомления.ПРИЗНАК_НП_ПОДВАЛ = "2"; // Представитель
		ДанныеУведомления.ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ = ПараметрыВыполнения.Представитель;
		ДанныеУведомления.НаимДок = ПараметрыВыполнения.ДокументПредставителя;
	Иначе
		ДанныеУведомления.ПРИЗНАК_НП_ПОДВАЛ = "1"; // Предприниматель
		ДанныеУведомления.ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ = СведенияОбОрганизации.ФИО;
	КонецЕсли;
	
	Если ПараметрыВыполнения.ВыбранныйРежим = "УСНДоходыИП" Тогда
		ДанныеУведомления.ПрОбНал = "1"; // УСН доходы
	Иначе
		ДанныеУведомления.ПрОбНал = "2"; // УСН доходы - расходы
	КонецЕсли;
	
	Результат.ДанныеУведомления = Новый Структура;
	Результат.ДанныеУведомления.Вставить("Титульная", ДанныеУведомления);
	Результат.РазрешитьВыгружатьСОшибками = Ложь;
	Результат.ДеревоСтраниц = Отчеты.РегламентированноеУведомлениеПереходСНПД.СформироватьПустоеДеревоСтраниц_2020(
		НалогНаПрофессиональныйДоходКлиентСервер.ВидУведомленияПереходНПДУСН());
	
	Возврат Результат;
	
КонецФункции

Функция НовыйСтруктураДанныеУведомленияОПереходеНаУСН()
	
	Результат = Новый Структура;
	Результат.Вставить("ВсегоСтраниц", 0);
	Результат.Вставить("ДАТА_ПОДПИСИ", '00010101');
	Результат.Вставить("ИНН", "");
	Результат.Вставить("Имя", "");
	Результат.Вставить("КодНО", "");
	Результат.Вставить("НаимДок", "");
	Результат.Вставить("НаимОргПред", "");
	Результат.Вставить("Отчество", "");
	Результат.Вставить("ПРИЗНАК_НП_ПОДВАЛ", ""); // 1 - Налогоплательщик, 2 - Представитель
	Результат.Вставить("ПрОбНал", ""); // 1 - Доходы, 2 - Доходы - расходы
	Результат.Вставить("ПрПерехУСН", "1"); // Переход на УСН с НПД
	Результат.Вставить("Тлф", "");
	Результат.Вставить("ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ", "");
	Результат.Вставить("Фамилия", "");
	
	Возврат Результат;
	
КонецФункции

// Возвращает параметры формирования уведомления о перерходе на УСН при утрате права на НПД
//
// Возвращаемое значение:
//   Структура
//
Функция НовыеПараметрыФормированияУведомленияОПереходеНаУСН()
	
	Результат = Новый Структура;
	Результат.Вставить("Организация");
	Результат.Вставить("ВыбранныйРежим", ""); // УСНДоходыИП, УСНДоходыРасходыИП
	Результат.Вставить("Представитель", "");
	Результат.Вставить("ДокументПредставителя", "");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти