////////////////////////////////////////////////////////////////////////////////
// Подсистема "Расчет имущественных налогов".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

#Область НалогНаИмущество

Процедура ДобавитьТекстЗапросаКоэффициентыЕНВД_ПоОС(СписокЗапросов) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СпособыОтраженияРасходов.ОсновноеСредство КАК ОсновноеСредство,
	|	КоэффициентыЕНВД.НеЕНВД КАК НеЕНВД,
	|	КоэффициентыЕНВД.Распределение КАК Распределение
	|ПОМЕСТИТЬ КоэффициентыЕНВД_ПоОС
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС)) КАК СпособыОтраженияРасходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоэффициентыЕНВД КАК КоэффициентыЕНВД
	|		ПО СпособыОтраженияРасходов.СпособыОтраженияРасходовПоАмортизации = КоэффициентыЕНВД.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура СоздатьВТКоэффициентыЕНВД(ПараметрыРасчета) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто1 КАК Справочник.СтатьиЗатрат)
	|		КОГДА СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто2 КАК Справочник.СтатьиЗатрат)
	|		КОГДА СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
	|			ТОГДА ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто3 КАК Справочник.СтатьиЗатрат)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
	|	КОНЕЦ КАК СтатьяЗатрат,
	|	СпособыОтраженияРасходовПоАмортизацииСпособы.Коэффициент КАК Коэффициент
	|ПОМЕСТИТЬ ВТ_КоэффициентыСтатейЗатрат
	|ИЗ
	|	Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК СпособыОтраженияРасходовПоАмортизацииСпособы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КоэффициентыСтатейЗатрат.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА КоэффициентыСтатейЗатрат.СтатьяЗатрат = ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		ИНАЧЕ КоэффициентыСтатейЗатрат.СтатьяЗатрат.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|	КОНЕЦ КАК ОтношениеКЕНВД,
	|	СУММА(КоэффициентыСтатейЗатрат.Коэффициент) КАК Коэффициент
	|ПОМЕСТИТЬ ВТ_ВыборкаКоэффициентов
	|ИЗ
	|	ВТ_КоэффициентыСтатейЗатрат КАК КоэффициентыСтатейЗатрат
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА КоэффициентыСтатейЗатрат.СтатьяЗатрат = ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		ИНАЧЕ КоэффициентыСтатейЗатрат.СтатьяЗатрат.ВидДеятельностиДляНалоговогоУчетаЗатрат
	|	КОНЕЦ,
	|	КоэффициентыСтатейЗатрат.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КоэффициентыСтатейЗатрат.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КоэффициентыСтатейЗатрат.Ссылка КАК Ссылка,
	|	СУММА(КоэффициентыСтатейЗатрат.Коэффициент) КАК СуммаКоэффициентов
	|ПОМЕСТИТЬ ВТ_ВыборкаСуммыКоэффициентов
	|ИЗ
	|	ВТ_КоэффициентыСтатейЗатрат КАК КоэффициентыСтатейЗатрат
	|
	|СГРУППИРОВАТЬ ПО
	|	КоэффициентыСтатейЗатрат.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КоэффициентыСтатейЗатрат.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыборкаКоэффициентов.Ссылка КАК Ссылка,
	|	СУММА(ВЫБОР
	|			КОГДА ВыборкаКоэффициентов.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|				ТОГДА ВыборкаКоэффициентов.Коэффициент / ВыборкаСуммыКоэффициентов.СуммаКоэффициентов
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НеЕНВД,
	|	СУММА(ВЫБОР
	|			КОГДА ВыборкаКоэффициентов.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|				ТОГДА ВыборкаКоэффициентов.Коэффициент / ВыборкаСуммыКоэффициентов.СуммаКоэффициентов
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Распределение
	|ПОМЕСТИТЬ КоэффициентыЕНВД
	|ИЗ
	|	ВТ_ВыборкаКоэффициентов КАК ВыборкаКоэффициентов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВыборкаСуммыКоэффициентов КАК ВыборкаСуммыКоэффициентов
	|		ПО ВыборкаКоэффициентов.Ссылка = ВыборкаСуммыКоэффициентов.Ссылка
	|ГДЕ
	|	ВыборкаКоэффициентов.ОтношениеКЕНВД <> ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыборкаКоэффициентов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_КоэффициентыСтатейЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ВыборкаКоэффициентов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ВыборкаСуммыКоэффициентов";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры
 
Процедура СоздатьВТДвижимоеИмуществоПринятоеКУчетуПосле2013(ПараметрыРасчета, ДополнительныеПараметры = Неопределено) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОС
	|ПОМЕСТИТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|ГДЕ
	|	(СостоянияОСОрганизаций.Организация = &ГоловнаяОрганизация
	|			ИЛИ СостоянияОСОрганизаций.Организация.ГоловнаяОрганизация = &ГоловнаяОрганизация)
	|				И СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|				И СостоянияОСОрганизаций.ДатаСостояния <= &КонецПериодаОтчета
	|				И СостоянияОСОрганизаций.Активность = ИСТИНА
	|				И НЕ СостоянияОСОрганизаций.ОсновноеСредство.НедвижимоеИмущество
	|				И &ДопУсловие
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОСОрганизаций.ОсновноеСредство
	|
	|ИМЕЮЩИЕ
	|	МИНИМУМ(СостоянияОСОрганизаций.ДатаСостояния) >= ДАТАВРЕМЯ(2013, 1, 1)";
	
	Если Метаданные.Документы.Найти("АвизоОСВходящее") <> Неопределено Тогда 
		ДопУсловие = "И НЕ СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.АвизоОСВходящее";
	Иначе
		ДопУсловие = "";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &ДопУсловие", ДопУсловие);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("КонецПериодаОтчета", КонецГода(ПараметрыРасчета.ПериодРасчета));
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(ПараметрыРасчета.Организация));
	
	Запрос.Выполнить();
	
КонецПроцедуры
 
Процедура СформироватьТаблицуОССостоящиеНаУчете(ПараметрыРасчета, Период, ДополнительныеПараметры = Неопределено) Экспорт

	ИсходныеВременныеТаблицы = ОбщегоНазначенияБП.СписокВременныхТаблиц(ПараметрыРасчета.МенеджерВременныхТаблиц);
	
	// Состояние ОС нельзя получить простым срезом последних, т.к. фактическая дата начала/прекращения права (ДатаСостояния)
	// в общем случае может быть не равна периоду записи (например, с помощью ручной операции можно ввести принятие/снятие с учета "задним числом").
	// Поэтому с помощью временных таблиц ПоследниеИзмененияСостоянияОС и СостоянияОС_СнятыСУчета получаем своеобразный срез последних по ДатаСостояния
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОСОрганизаций.Организация КАК Организация,
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(СостоянияОСОрганизаций.ДатаСостояния) КАК ДатаСостояния
	|
	|ПОМЕСТИТЬ ПоследниеИзмененияСостоянияОС
	|
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|
	|ГДЕ
	|	СостоянияОСОрганизаций.Организация В(&Организации)
	|	И СостоянияОСОрганизаций.ДатаСостояния < &Период
	|	И СостоянияОСОрганизаций.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОСОрганизаций.Организация,
	|	СостоянияОСОрганизаций.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство,
	|	ДатаСостояния
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	|
	|	МИНИМУМ(ВЫБОР
	|			КОГДА СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК СнятоСУчетаВоВсехОрганизациях
	|
	|ПОМЕСТИТЬ СостоянияОС
	|
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоследниеИзмененияСостоянияОС КАК ПоследниеИзмененияСостоянияОС
	|		ПО СостоянияОСОрганизаций.Организация = ПоследниеИзмененияСостоянияОС.Организация
	|			И СостоянияОСОрганизаций.ОсновноеСредство = ПоследниеИзмененияСостоянияОС.ОсновноеСредство
	|			И СостоянияОСОрганизаций.ДатаСостояния = ПоследниеИзмененияСостоянияОС.ДатаСостояния
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОСОрганизаций.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОС.Ссылка КАК ОсновноеСредство,
	|	ОС.ГруппаОС КАК ГруппаОС,
	|	ОС.НедвижимоеИмущество КАК НедвижимоеИмущество
	|
	|ПОМЕСТИТЬ ВТ_ОССостоящиеНаУчете
	|
	|ИЗ
	|	Справочник.ОсновныеСредства КАК ОС
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СостоянияОС КАК СостоянияОС
	|		ПО ОС.Ссылка = СостоянияОС.ОсновноеСредство
	|
	|ГДЕ
	|	НЕ ЕСТЬNULL(СостоянияОС.СнятоСУчетаВоВсехОрганизациях, ЛОЖЬ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организации", ПараметрыРасчета.Организации);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.Выполнить();
	
	ИсходныеВременныеТаблицы.Добавить("ВТ_ОССостоящиеНаУчете");
	ОбщегоНазначенияБП.УничтожитьВременныеТаблицы(ПараметрыРасчета.МенеджерВременныхТаблиц,, ИсходныеВременныеТаблицы);
	
КонецПроцедуры
 
Процедура ДобавитьТекстЗапросаСписокОС(СписокЗапросов) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПервоначальныеСведенияОС.Организация КАК Организация,
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.ОсновноеСредство.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|	ПервоначальныеСведенияОС.ОсновноеСредство.НедвижимоеИмущество КАК НедвижимоеИмущество,
	|	ПервоначальныеСведенияОС.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости
	|ПОМЕСТИТЬ СписокОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			Организация В (&Организации)
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						СписокРазрешенныхОС.ОсновноеСредство
	|					ИЗ
	|						СписокРазрешенныхОС КАК СписокРазрешенныхОС)) КАК ПервоначальныеСведенияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПервоначальныеСведенияОС.ОсновноеСредство";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры
 
Процедура ДобавитьТекстЗапросаСчетаБухгалтерскогоУчета(СписокЗапросов) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СчетаБухгалтерскогоУчета.Организация КАК Организация,
	|	СчетаБухгалтерскогоУчета.ОсновноеСредство КАК ОсновноеСредство,
	|	СчетаБухгалтерскогоУчета.СчетУчета КАК СчетУчета,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОбесценениеОС_01) КАК СчетОбесценения,
	|	СчетаБухгалтерскогоУчета.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации
	|ПОМЕСТИТЬ ВТ_СчетаБухгалтерскогоУчета
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
	|			&Период,
	|			Организация В (&Организации)
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК СчетаБухгалтерскогоУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры
 
Процедура ДобавитьТекстЗапросаСтоимостьИАмортизация(Период, ПараметрыРасчета, СписокЗапросов) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаБухгалтерскогоУчета.СчетУчета КАК СчетУчета
	|ПОМЕСТИТЬ ВТ_СчетаУчета
	|ИЗ
	|	ВТ_СчетаБухгалтерскогоУчета КАК СчетаБухгалтерскогоУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаБухгалтерскогоУчета.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации
	|ПОМЕСТИТЬ ВТ_СчетаНачисленияАмортизации
	|ИЗ
	|	ВТ_СчетаБухгалтерскогоУчета КАК СчетаБухгалтерскогоУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетНачисленияАмортизации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаБухгалтерскогоУчета.СчетОбесценения КАК СчетОбесценения
	|ПОМЕСТИТЬ ВТ_СчетаОбесценения
	|ИЗ
	|	ВТ_СчетаБухгалтерскогоУчета КАК СчетаБухгалтерскогоУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетОбесценения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОбесценениеОС.Организация КАК Организация,
	|	ОбесценениеОС.СуммаОстатокКт КАК СуммаОстатокКт,
	|	ОбесценениеОС.Субконто1 КАК ОсновноеСредство,
	|	ОбесценениеОС.Счет КАК Счет
	|ПОМЕСТИТЬ ВТ_ОбесценениеОС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ПериодГраница,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаОбесценения.СчетОбесценения
	|				ИЗ
	|					ВТ_СчетаОбесценения),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация В (&Организации)) КАК ОбесценениеОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АмортизацияОС.Организация КАК Организация,
	|	АмортизацияОС.СуммаОстатокДт КАК СуммаОстатокДт,
	|	АмортизацияОС.СуммаОстатокКт КАК СуммаОстатокКт,
	|	АмортизацияОС.Субконто1 КАК ОсновноеСредство,
	|	АмортизацияОС.Счет КАК Счет
	|ПОМЕСТИТЬ ВТ_АмортизацияОС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ПериодГраница,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаНачисленияАмортизации.СчетНачисленияАмортизации
	|				ИЗ
	|					ВТ_СчетаНачисленияАмортизации),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация В (&Организации)) КАК АмортизацияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПервоначальнаяСтоимостьОС.Организация КАК Организация,
	|	ПервоначальнаяСтоимостьОС.СуммаОстатокДт КАК СуммаОстатокДт,
	|	ПервоначальнаяСтоимостьОС.Субконто1 КАК ОсновноеСредство,
	|	ПервоначальнаяСтоимостьОС.Счет КАК Счет
	|ПОМЕСТИТЬ ВТ_ПервоначальнаяСтоимостьОС
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ПериодГраница,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаУчета.СчетУчета
	|				ИЗ
	|					ВТ_СчетаУчета),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация В (&Организации)) КАК ПервоначальнаяСтоимостьОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Счет";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаДанныеБухУчетаОС(СписокЗапросов) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СчетаБухгалтерскогоУчета.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(ПервоначальнаяСтоимостьОС.СуммаОстатокДт, 0) КАК ПервоначальнаяСтоимость,
	|	ЕСТЬNULL(АмортизацияОС.СуммаОстатокДт, 0) КАК АмортизацияДт,
	|	ЕСТЬNULL(АмортизацияОС.СуммаОстатокКт, 0) КАК АмортизацияКт,
	|	ЕСТЬNULL(ОбесценениеОС.СуммаОстатокКт, 0) КАК Обесценение
	|
	|ПОМЕСТИТЬ ДанныеБухУчетаОС
	|
	|ИЗ
	|	ВТ_СчетаБухгалтерскогоУчета КАК СчетаБухгалтерскогоУчета
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПервоначальнаяСтоимостьОС КАК ПервоначальнаяСтоимостьОС
	|		ПО СчетаБухгалтерскогоУчета.ОсновноеСредство = ПервоначальнаяСтоимостьОС.ОсновноеСредство
	|			И (СчетаБухгалтерскогоУчета.СчетУчета = ПервоначальнаяСтоимостьОС.Счет
	|				ИЛИ ПервоначальнаяСтоимостьОС.Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС))
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АмортизацияОС КАК АмортизацияОС
	|		ПО СчетаБухгалтерскогоУчета.ОсновноеСредство = АмортизацияОС.ОсновноеСредство
	|			И СчетаБухгалтерскогоУчета.СчетНачисленияАмортизации = АмортизацияОС.Счет
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОбесценениеОС КАК ОбесценениеОС
	|		ПО СчетаБухгалтерскогоУчета.ОсновноеСредство = ОбесценениеОС.ОсновноеСредство
	|			 И СчетаБухгалтерскогоУчета.СчетОбесценения = ОбесценениеОС.Счет		
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	

КонецПроцедуры

Процедура ДобавитьТекстЗапросаУчетОсновныхСредств(Период, ПараметрыРасчета, СписокЗапросов) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МестонахождениеОС.Организация КАК Организация,
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.Местонахождение КАК Местонахождение
	|ПОМЕСТИТЬ МестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			Организация В (&Организации)
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС)) КАК МестонахождениеОС
	|ГДЕ
	|	МестонахождениеОС.Местонахождение.ОбособленноеПодразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокОС.Организация КАК Организация,
	|	СписокОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СписокОС.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости,
	|	ЕСТЬNULL(МестонахождениеОС.Местонахождение, СписокОС.Организация) КАК Местонахождение
	|ПОМЕСТИТЬ ОсновныеСредстваПоМестамРегистрации
	|ИЗ
	|	СписокОС КАК СписокОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СписокОС.Организация = МестонахождениеОС.Организация
	|			И СписокОС.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсторияРегистраций.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ИсторияРегистраций.РегистрацияВНалоговомОргане.КодРегиона КАК КодРегиона
	|ПОМЕСТИТЬ АктуальныеРегистрацииВНалоговыхОрганах
	|ИЗ
	|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(
	|			&Период,
	|			СтруктурнаяЕдиница В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ОсновныеСредстваПоМестамРегистрации.Местонахождение КАК Местонахождение
	|				ИЗ
	|					ОсновныеСредстваПоМестамРегистрации КАК ОсновныеСредстваПоМестамРегистрации)) КАК ИсторияРегистраций
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтруктурнаяЕдиница
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновныеСредстваПоМестамРегистрации.Организация КАК Организация,
	|	ОсновныеСредстваПоМестамРегистрации.ОсновноеСредство КАК ОсновноеСредство,
	|	ОсновныеСредстваПоМестамРегистрации.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости,
	|	СчетаБухгалтерскогоУчета.СчетУчета КАК СчетУчета,
	|	СчетаБухгалтерскогоУчета.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации,
	|	СчетаБухгалтерскогоУчета.СчетОбесценения КАК СчетОбесценения,
	|	ЕСТЬNULL(АктуальныеРегистрации.КодРегиона, 0) КАК КодРегиона
	|ПОМЕСТИТЬ УчетОсновныхСредств
	|ИЗ
	|	ОсновныеСредстваПоМестамРегистрации КАК ОсновныеСредстваПоМестамРегистрации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаБухгалтерскогоУчета КАК СчетаБухгалтерскогоУчета
	|		ПО ОсновныеСредстваПоМестамРегистрации.Организация = СчетаБухгалтерскогоУчета.Организация
	|			И ОсновныеСредстваПоМестамРегистрации.ОсновноеСредство = СчетаБухгалтерскогоУчета.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ АктуальныеРегистрацииВНалоговыхОрганах КАК АктуальныеРегистрации
	|		ПО ОсновныеСредстваПоМестамРегистрации.Местонахождение = АктуальныеРегистрации.СтруктурнаяЕдиница";
	
	СписокЗапросов.Добавить(ТекстЗапроса);
	
КонецПроцедуры

Процедура СформироватьТаблицуСтавкиНалогаНаИмуществоПоОтдельнымОССрезПоследних(ПараметрыРасчета, Период, ДополнительныеПараметры = Неопределено, ИмяТаблицы = "") Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.Период КАК Период,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.Организация КАК Организация,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.КодПоОКТМО КАК КодПоОКТМО,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.КодПоОКАТО КАК КодПоОКАТО,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ДатаПрекращенияПраваСобственности КАК ДатаПрекращенияПраваСобственности,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ДатаРегистрацииПраваСобственности КАК ДатаРегистрацииПраваСобственности,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ДвижимоеИмуществоПодлежащееНалогообложению КАК ДвижимоеИмуществоПодлежащееНалогообложению,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ДоляПлощадиЗнаменатель КАК ДоляПлощадиЗнаменатель,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ДоляПлощадиЧислитель КАК ДоляПлощадиЧислитель,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ИспользуетсяТолькоВДеятельностиОблагаемойЕНВД КАК ИспользуетсяТолькоВДеятельностиОблагаемойЕНВД,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.КадастроваяСтоимость КАК КадастроваяСтоимость,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.КадастровыйНомер КАК КадастровыйНомер,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.КБК КАК КБК,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.КодВидаИмущества КАК КодВидаИмущества,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.НалоговаяБаза КАК НалоговаяБаза,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.НалоговаяСтавка КАК НалоговаяСтавка,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.НалоговыйОрган КАК НалоговыйОрган,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.НеоблагаемаяКадастроваяСтоимость КАК НеоблагаемаяКадастроваяСтоимость,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ПостановкаНаУчетВНалоговомОргане КАК ПостановкаНаУчетВНалоговомОргане,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.СниженнаяНалоговаяСтавка КАК СниженнаяНалоговаяСтавка,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.УсловныйНомер КАК УсловныйНомер,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ОснованиеЛьготы КАК ОснованиеЛьготы,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.НачалоДействияЛьготы КАК НачалоДействияЛьготы,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ОкончаниеДействияЛьготы КАК ОкончаниеДействияЛьготы,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.НеПодлежитНалогообложению КАК НеПодлежитНалогообложению,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.СуммаУменьшения КАК СуммаУменьшения
	|
	|ПОМЕСТИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОС_СрезПоследних
	|
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&Период, Организация = &Организация) КАК СтавкиНалогаНаИмуществоПоОтдельнымОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
 	Если НЕ ПустаяСтрока(ИмяТаблицы) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОС_СрезПоследних", "ПОМЕСТИТЬ " + ИмяТаблицы);
	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("Период", Период);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СформироватьТаблицуСтавкиНалогаНаИмуществоПоОтдельнымОСЗаписи(ПараметрыРасчета, НачалоПериода, КонецПериода, ДополнительныеПараметры = Неопределено, ИмяТаблицы = "") Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.Период КАК Период,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.Организация КАК Организация,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.КодПоОКТМО КАК КодПоОКТМО,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.КодПоОКАТО КАК КодПоОКАТО,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ДатаПрекращенияПраваСобственности КАК ДатаПрекращенияПраваСобственности,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ДатаРегистрацииПраваСобственности КАК ДатаРегистрацииПраваСобственности,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ДвижимоеИмуществоПодлежащееНалогообложению КАК ДвижимоеИмуществоПодлежащееНалогообложению,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ДоляПлощадиЗнаменатель КАК ДоляПлощадиЗнаменатель,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ДоляПлощадиЧислитель КАК ДоляПлощадиЧислитель,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ИспользуетсяТолькоВДеятельностиОблагаемойЕНВД КАК ИспользуетсяТолькоВДеятельностиОблагаемойЕНВД,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.КадастроваяСтоимость КАК КадастроваяСтоимость,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.КадастровыйНомер КАК КадастровыйНомер,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.КБК КАК КБК,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.КодВидаИмущества КАК КодВидаИмущества,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.НалоговаяБаза КАК НалоговаяБаза,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.НалоговаяСтавка КАК НалоговаяСтавка,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.НалоговыйОрган КАК НалоговыйОрган,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.НеоблагаемаяКадастроваяСтоимость КАК НеоблагаемаяКадастроваяСтоимость,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ПостановкаНаУчетВНалоговомОргане КАК ПостановкаНаУчетВНалоговомОргане,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.СниженнаяНалоговаяСтавка КАК СниженнаяНалоговаяСтавка,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.УсловныйНомер КАК УсловныйНомер,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ОснованиеЛьготы КАК ОснованиеЛьготы,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.НачалоДействияЛьготы КАК НачалоДействияЛьготы,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.ОкончаниеДействияЛьготы КАК ОкончаниеДействияЛьготы,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.НеПодлежитНалогообложению КАК НеПодлежитНалогообложению,
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.СуммаУменьшения КАК СуммаУменьшения,
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоПоОтдельнымОС.ОснованиеЛьготы.УстановленаМестнымНормативнымАктом, ЛОЖЬ) КАК РегиональнаяЛьгота,
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоПоОтдельнымОС.ОснованиеЛьготы.ВидЛьготы, ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) КАК ВидЛьготы,
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоПоОтдельнымОС.ОснованиеЛьготы.КодЛьготы, """") КАК КодЛьготы,
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоПоОтдельнымОС.ОснованиеЛьготы.ПроцентУменьшения, 0) КАК ПроцентУменьшения
	|
	|ПОМЕСТИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОС_Записи
	|
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОС
	|ГДЕ
	|	СтавкиНалогаНаИмуществоПоОтдельнымОС.Организация = &Организация
	|	И (СтавкиНалогаНаИмуществоПоОтдельнымОС.Период >= &НачалоПериода
	|			ИЛИ &НачалоПериода = ДАТАВРЕМЯ(1, 1, 1))
	|	И (СтавкиНалогаНаИмуществоПоОтдельнымОС.Период <= &КонецПериода
	|			ИЛИ &КонецПериода = ДАТАВРЕМЯ(1, 1, 1))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
 	Если НЕ ПустаяСтрока(ИмяТаблицы) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОС_Записи", "ПОМЕСТИТЬ " + ИмяТаблицы);
	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СформироватьТаблицуСтавкиНалогаНаИмуществоСрезПоследних(ПараметрыРасчета, Период, ДополнительныеПараметры = Неопределено, ИмяТаблицы = "") Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СтавкиНалогаНаИмущество.Период КАК Период,
	|	СтавкиНалогаНаИмущество.Организация КАК Организация,
	|	СтавкиНалогаНаИмущество.НалоговаяСтавка КАК НалоговаяСтавка,
	|	СтавкиНалогаНаИмущество.НалоговаяСтавкаДвижимоеИмущество КАК НалоговаяСтавкаДвижимоеИмущество,
	|	СтавкиНалогаНаИмущество.СнижениеНалоговойСтавкиДвижимоеИмущество КАК СнижениеНалоговойСтавкиДвижимоеИмущество,
	|	СтавкиНалогаНаИмущество.ОсвобождениеОтНалогообложенияДвижимогоИмущества КАК ОсвобождениеОтНалогообложенияДвижимогоИмущества,
	|	СтавкиНалогаНаИмущество.ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2 КАК ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2,
	|	СтавкиНалогаНаИмущество.ОснованиеЛьготы КАК ОснованиеЛьготы,
	|	СтавкиНалогаНаИмущество.НачалоДействияЛьготы КАК НачалоДействияЛьготы,
	|	СтавкиНалогаНаИмущество.ОкончаниеДействияЛьготы КАК ОкончаниеДействияЛьготы
	|
	|ПОМЕСТИТЬ СтавкиНалогаНаИмущество_СрезПоследних
	|
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период, Организация = &Организация) КАК СтавкиНалогаНаИмущество
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";
	
 	Если НЕ ПустаяСтрока(ИмяТаблицы) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ СтавкиНалогаНаИмущество_СрезПоследних", "ПОМЕСТИТЬ " + ИмяТаблицы);
	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("Период", Период);
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Определяет источник данных расчета налога на имущество за периоды 2022 года
// 
// Параметры:
//  Организация	- СправочникСсылка.Организации - Организация, для которой необходимо выполнить расчет.
//  ПериодРасчета - Дата - дата, на которую нужно получить данные
// 
// Возвращаемое значение:
//  Булево - если истина, то за периоды 2022 года используется прежний расчет налога на имущество
Функция ИспользоватьПрежнийРасчетНалогаНаИмуществоВПереходныйПериод(Организация, ПериодРасчета) Экспорт
	
	Если ПериодРасчета < РасчетИмущественныхНалогов.НачалоПримененияНовогоРасчетаНалогаНаИмущество()
		 Или ПериодРасчета >= '20230101'Тогда // за периоды 2023 года и далее только новый расчет
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	РасчетНалогаНаИмущество.ОсновноеСредство
	|ИЗ
	|	РегистрСведений.РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|ГДЕ
	|	РасчетНалогаНаИмущество.Организация = &Организация
	|	И РасчетНалогаНаИмущество.ПериодРасчета МЕЖДУ &НачалоПериода И &КонецПериода";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРасчета));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПериодРасчета));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

#КонецОбласти

#Область ТранспортныйНалог

Функция ПолучитьАвансовыйРасчетПоТранспортномуНалогу(Организация, ПериодРасчета, ДополнительныеПараметры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПериодРасчета", ПериодРасчета);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетТранспортногоНалога.ПериодРасчета КАК ПериодРасчета,
	|	РасчетТранспортногоНалога.Организация КАК Организация,
	|	РасчетТранспортногоНалога.ИФНС КАК ИФНС,
	|	РасчетТранспортногоНалога.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетТранспортногоНалога.ОсновноеСредство КАК ОсновноеСредство,
	|	РасчетТранспортногоНалога.ДатаРегистрационныхДанных КАК ДатаРегистрационныхДанных,
	|	РасчетТранспортногоНалога.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
	|	РасчетТранспортногоНалога.ИдентификационныйНомер КАК ИдентификационныйНомер,
	|	РасчетТранспортногоНалога.Марка КАК Марка,
	|	РасчетТранспортногоНалога.РегистрационныйЗнак КАК РегистрационныйЗнак,
	|	РасчетТранспортногоНалога.НалоговаяБаза КАК НалоговаяБаза,
	|	РасчетТранспортногоНалога.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	РасчетТранспортногоНалога.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения,
	|	РасчетТранспортногоНалога.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РасчетТранспортногоНалога.СуммаНалога КАК СуммаНалога,
	|	РасчетТранспортногоНалога.КоличествоМесяцевЛьготы КАК КоличествоМесяцевЛьготы,
	|	РасчетТранспортногоНалога.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
	|	РасчетТранспортногоНалога.РегиональныйКодЛьготы КАК РегиональныйКодЛьготы,
	|	РасчетТранспортногоНалога.ПроцентУменьшения КАК ПроцентУменьшения,
	|	РасчетТранспортногоНалога.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
	|	РасчетТранспортногоНалога.СуммаНалоговойЛьготы КАК СуммаНалоговойЛьготы,
	|	РасчетТранспортногоНалога.СуммаНалогаКУплате КАК СуммаНалогаКУплате,
	|	РасчетТранспортногоНалога.СуммаОсвобожденияОтУплатыНалога КАК СуммаОсвобожденияОтУплатыНалога,
	|	РасчетТранспортногоНалога.ЭкологическийКласс КАК ЭкологическийКласс,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей1Кв КАК СуммаАвансовыхПлатежей1Кв,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей2Кв КАК СуммаАвансовыхПлатежей2Кв,
	|	РасчетТранспортногоНалога.СуммаАвансовыхПлатежей3Кв КАК СуммаАвансовыхПлатежей3Кв,
	|	РасчетТранспортногоНалога.ПовышающийКоэффициент КАК ПовышающийКоэффициент,
	|	РасчетТранспортногоНалога.КоличествоЛетПрошедшихСГодаВыпускаТС КАК КоличествоЛетПрошедшихСГодаВыпускаТС,
	|	РасчетТранспортногоНалога.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетТранспортногоНалога.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетТранспортногоНалога.ЗарегистрированоВРеестреСистемыПлатон КАК ЗарегистрированоВРеестреСистемыПлатон,
	|	РасчетТранспортногоНалога.СуммаНалоговогоВычета КАК СуммаНалоговогоВычета,
	|	РасчетТранспортногоНалога.ДатаРегистрации КАК ДатаРегистрации,
	|	РасчетТранспортногоНалога.ДатаПрекращенияРегистрации КАК ДатаПрекращенияРегистрации
	|ИЗ
	|	РегистрСведений.РасчетТранспортногоНалога КАК РасчетТранспортногоНалога
	|ГДЕ
	|	РасчетТранспортногоНалога.Активность = ИСТИНА
	|	И РасчетТранспортногоНалога.Организация = &Организация
	|	И РасчетТранспортногоНалога.ПериодРасчета = &ПериодРасчета";
	
	РасчетНалога = Запрос.Выполнить().Выгрузить();
	Для Каждого СтрокаРасчета Из РасчетНалога Цикл
		СтрокаРасчета.КодПоОКТМО = СокрЛП(СтрокаРасчета.КодПоОКТМО);
	КонецЦикла;
	
	Возврат РасчетНалога;
	
КонецФункции

Функция УчестьРасходыНаПлатон(ПараметрыРасчета, ТаблицаРасчетНалога, ДополнительныеПараметры = Неопределено) Экспорт
	
	РасходыПлатон = ПолучитьРасходыНаПлатон(
						ПараметрыРасчета.Организация, 
						ПараметрыРасчета.ПериодРасчета, 
						ТаблицаРасчетНалога);
						
	УчестьРасходыНаПлатонВРасчетеТранспортногоНалога(РасходыПлатон, ТаблицаРасчетНалога);
	
	СтрокиРасчетаНалога = ТаблицаРасчетНалога.НайтиСтроки(
		Новый Структура("ЗарегистрированоВРеестреСистемыПлатон", Истина));
				
	Для Каждого СтрокаРасчета Из СтрокиРасчетаНалога Цикл
		
		Если ПараметрыРасчета.ГодовойРасчет Тогда
			СтрокаРасчета.СуммаНалогаКУплате = СтрокаРасчета.СуммаНалогаКУплате - СтрокаРасчета.СуммаНалоговогоВычета;
		Иначе
			СтрокаРасчета["СуммаАвансовыхПлатежей" + Формат(ПараметрыРасчета.ПериодРасчета, "ДФ='q''Кв'''")] = 0;
			СтрокаРасчета.СуммаНалогаКУплате = 0;
		КонецЕсли;
		
	КонецЦикла;

	Возврат РасходыПлатон;
	
КонецФункции

Процедура СформироватьТаблицуРегистрацияТранспортныхСредствСрезПоследних(ПараметрыРасчета, Период, ДополнительныеПараметры = Неопределено, ИмяТаблицы = "") Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегистрацияТранспортныхСредств.Период КАК Период,
	|	РегистрацияТранспортныхСредств.Организация КАК Организация,
	|	РегистрацияТранспортныхСредств.ОсновноеСредство КАК ОсновноеСредство,
	|	РегистрацияТранспортныхСредств.ВключатьВНалоговуюБазу КАК ВключатьВНалоговуюБазу,
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак КАК РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер КАК ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.Марка КАК Марка,
	|	РегистрацияТранспортныхСредств.ПостановкаНаУчетВНалоговомОргане КАК ПостановкаНаУчетВНалоговомОргане,
	|	РегистрацияТранспортныхСредств.НалоговыйОрган КАК НалоговыйОрган,
	|	РегистрацияТранспортныхСредств.КодПоОКТМО КАК КодПоОКТМО,
	|	РегистрацияТранспортныхСредств.КодПоОКАТО КАК КодПоОКАТО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза КАК НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы КАК ЕдиницаИзмеренияНалоговойБазы,
	|	РегистрацияТранспортныхСредств.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота КАК НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения КАК ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения КАК СуммаУменьшения,
	|	РегистрацияТранспортныхСредств.РегиональныйКодЛьготы КАК РегиональныйКодЛьготы,
	|	РегистрацияТранспортныхСредств.ЭкологическийКласс КАК ЭкологическийКласс,
	|	РегистрацияТранспортныхСредств.ОбщаяСобственность КАК ОбщаяСобственность,
	|	РегистрацияТранспортныхСредств.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	РегистрацияТранспортныхСредств.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РегистрацияТранспортныхСредств.ПовышающийКоэффициент КАК ПовышающийКоэффициент,
	|	РегистрацияТранспортныхСредств.НалоговаяСтавкаЗависитОтГодаВыпускаТС КАК НалоговаяСтавкаЗависитОтГодаВыпускаТС,
	|	РегистрацияТранспортныхСредств.ЗарегистрированоВРеестреСистемыПлатон КАК ЗарегистрированоВРеестреСистемыПлатон,
	|	РегистрацияТранспортныхСредств.ВидЗаписи КАК ВидЗаписи,
	|	ИСТИНА КАК СтавкаОпределяетсяАвтоматически
	|
	|ПОМЕСТИТЬ РегистрацияТранспортныхСредств_СрезПоследних
	|
	|ИЗ
	|	РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(&Период, Организация = &Организация) КАК РегистрацияТранспортныхСредств
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
 	Если НЕ ПустаяСтрока(ИмяТаблицы) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ РегистрацияТранспортныхСредств_СрезПоследних", "ПОМЕСТИТЬ " + ИмяТаблицы);
	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("Период", Период);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СформироватьТаблицуРегистрацияТранспортныхСредствЗаписи(ПараметрыРасчета, Период, ДополнительныеПараметры = Неопределено, ИмяТаблицы = "") Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегистрацияТранспортныхСредств.Период КАК Период,
	|	РегистрацияТранспортныхСредств.Организация КАК Организация,
	|	РегистрацияТранспортныхСредств.ОсновноеСредство КАК ОсновноеСредство,
	|	РегистрацияТранспортныхСредств.ВключатьВНалоговуюБазу КАК ВключатьВНалоговуюБазу,
	|	РегистрацияТранспортныхСредств.РегистрационныйЗнак КАК РегистрационныйЗнак,
	|	РегистрацияТранспортныхСредств.ИдентификационныйНомер КАК ИдентификационныйНомер,
	|	РегистрацияТранспортныхСредств.Марка КАК Марка,
	|	РегистрацияТранспортныхСредств.ПостановкаНаУчетВНалоговомОргане КАК ПостановкаНаУчетВНалоговомОргане,
	|	РегистрацияТранспортныхСредств.НалоговыйОрган КАК НалоговыйОрган,
	|	РегистрацияТранспортныхСредств.КодПоОКТМО КАК КодПоОКТМО,
	|	РегистрацияТранспортныхСредств.КодПоОКАТО КАК КодПоОКАТО,
	|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
	|	РегистрацияТранспортныхСредств.НалоговаяБаза КАК НалоговаяБаза,
	|	РегистрацияТранспортныхСредств.ЕдиницаИзмеренияНалоговойБазы КАК ЕдиницаИзмеренияНалоговойБазы,
	|	РегистрацияТранспортныхСредств.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РегистрацияТранспортныхСредств.НалоговаяЛьгота КАК НалоговаяЛьгота,
	|	РегистрацияТранспортныхСредств.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
	|	РегистрацияТранспортныхСредств.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
	|	РегистрацияТранспортныхСредств.ПроцентУменьшения КАК ПроцентУменьшения,
	|	РегистрацияТранспортныхСредств.СуммаУменьшения КАК СуммаУменьшения,
	|	РегистрацияТранспортныхСредств.РегиональныйКодЛьготы КАК РегиональныйКодЛьготы,
	|	РегистрацияТранспортныхСредств.ЭкологическийКласс КАК ЭкологическийКласс,
	|	РегистрацияТранспортныхСредств.ОбщаяСобственность КАК ОбщаяСобственность,
	|	РегистрацияТранспортныхСредств.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	РегистрацияТранспортныхСредств.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РегистрацияТранспортныхСредств.ПовышающийКоэффициент КАК ПовышающийКоэффициент,
	|	РегистрацияТранспортныхСредств.НалоговаяСтавкаЗависитОтГодаВыпускаТС КАК НалоговаяСтавкаЗависитОтГодаВыпускаТС,
	|	РегистрацияТранспортныхСредств.ЗарегистрированоВРеестреСистемыПлатон КАК ЗарегистрированоВРеестреСистемыПлатон,
	|	РегистрацияТранспортныхСредств.ВидЗаписи КАК ВидЗаписи,
	|	ИСТИНА КАК СтавкаОпределяетсяАвтоматически
	|
	|ПОМЕСТИТЬ РегистрацияТранспортныхСредств_Записи
	|
	|ИЗ
	|	РегистрСведений.РегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
	|
	|ГДЕ
	|	РегистрацияТранспортныхСредств.Организация = &Организация
	|	И (РегистрацияТранспортныхСредств.Период <= &Период
	|			ИЛИ &Период = ДАТАВРЕМЯ(1, 1, 1))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
 	Если НЕ ПустаяСтрока(ИмяТаблицы) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ РегистрацияТранспортныхСредств_Записи", "ПОМЕСТИТЬ " + ИмяТаблицы);
	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("Период", Период);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция КодыВидовИКатегорииТранспортныхСредств() Экспорт

	Макет = РегистрыСведений.РегистрацияТранспортныхСредств.ПолучитьМакет("КодыВидовИКатегорииТС");
	КодыВидовИКатегорииТС = ОбщегоНазначения.ПрочитатьXMLВТаблицу(Макет.ПолучитьТекст()).Данные;
	
	Возврат КодыВидовИКатегорииТС;
		
КонецФункции

Функция ПолучитьРасходыНаПлатон(Организация, ПериодРасчета, ТаблицаРасчетТранспортногоНалога)

	РасходыПлатон = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("СледующийМесяц", КонецКвартала(ПериодРасчета) + 1);
	
	АналитикаРасчетов = Новый СписокЗначений;
	АналитикаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	АналитикаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	АналитикаРасчетов.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);
	
	Запрос.УстановитьПараметр("АналитикаРасчетов", АналитикаРасчетов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасходыНаПлатонОстатки.ОсновноеСредство КАК ОсновноеСредство,
	|	РасходыНаПлатонОстатки.СчетУчета КАК Счет,
	|	РасходыНаПлатонОстатки.Контрагент КАК Контрагент,
	|	РасходыНаПлатонОстатки.ДоговорКонтрагента КАК Договор,
	|	РасходыНаПлатонОстатки.ДокументРасчетовСКонтрагентом КАК ДокументРасчетовСКонтрагентом,
	|	РасходыНаПлатонОстатки.Подразделение КАК Подразделение,
	|	РасходыНаПлатонОстатки.СуммаОстаток КАК Сумма
	|ПОМЕСТИТЬ РасходыНаПлатон
	|ИЗ
	|	РегистрНакопления.РасходыНаПлатон.Остатки(&СледующийМесяц, Организация = &Организация) КАК РасходыНаПлатонОстатки
	|ГДЕ
	|	РасходыНаПлатонОстатки.СуммаОстаток <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	Договор,
	|	ДокументРасчетовСКонтрагентом
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.Подразделение, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК Подразделение,
	|	ХозрасчетныйОстатки.Субконто1 КАК Контрагент,
	|	ХозрасчетныйОстатки.Субконто2 КАК Договор,
	|	ХозрасчетныйОстатки.Субконто3 КАК ДокументРасчетовСКонтрагентом,
	|	ХозрасчетныйОстатки.СуммаОстатокКт КАК Сумма
	|ПОМЕСТИТЬ Задолженность
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&СледующийМесяц,
	|			Счет В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					РасходыНаПлатон.Счет
	|				ИЗ
	|					РасходыНаПлатон),
	|			&АналитикаРасчетов,
	|			Организация = &Организация
	|				И (Субконто1, Субконто2, Субконто3) В
	|					(ВЫБРАТЬ
	|						РасходыНаПлатон.Контрагент,
	|						РасходыНаПлатон.Договор,
	|						РасходыНаПлатон.ДокументРасчетовСКонтрагентом
	|					ИЗ
	|						РасходыНаПлатон)) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	Договор,
	|	ДокументРасчетовСКонтрагентом
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходыНаПлатон.ОсновноеСредство,
	|	РасходыНаПлатон.Счет КАК СчетУчета,
	|	РасходыНаПлатон.Контрагент,
	|	РасходыНаПлатон.Договор КАК ДоговорКонтрагента,
	|	РасходыНаПлатон.ДокументРасчетовСКонтрагентом КАК ДокументРасчетовСКонтрагентом,
	|	РасходыНаПлатон.Подразделение КАК Подразделение,
	|	РасходыНаПлатон.Сумма - ЕСТЬNULL(Задолженность.Сумма, 0) КАК СуммаНУДт,
	|	РасходыНаПлатон.Сумма - ЕСТЬNULL(Задолженность.Сумма, 0) КАК СуммаНУКт
	|ИЗ
	|	РасходыНаПлатон КАК РасходыНаПлатон
	|		ЛЕВОЕ СОЕДИНЕНИЕ Задолженность КАК Задолженность
	|		ПО РасходыНаПлатон.Счет = Задолженность.Счет
	|			И РасходыНаПлатон.Подразделение = Задолженность.Подразделение
	|			И РасходыНаПлатон.Контрагент = Задолженность.Контрагент
	|			И РасходыНаПлатон.Договор = Задолженность.Договор
	|			И РасходыНаПлатон.ДокументРасчетовСКонтрагентом = Задолженность.ДокументРасчетовСКонтрагентом
	|ГДЕ
	|	РасходыНаПлатон.Сумма - ЕСТЬNULL(Задолженность.Сумма, 0) > 0";
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		РасходыПлатон = Результат.Выгрузить();
	КонецЕсли;
	
	Возврат РасходыПлатон;
	
КонецФункции

Процедура УчестьРасходыНаПлатонВРасчетеТранспортногоНалога(РасходыПлатон, ТаблицаРасчетТранспортногоНалога)

	Если РасходыПлатон = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ТаблицаРасчетТранспортногоНалога.Колонки.Добавить(
		"СуммаНалогаДоПримененияТекущегоВычета", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
		
	СтрокиРасчетаНалога = ТаблицаРасчетТранспортногоНалога.НайтиСтроки(
		Новый Структура("ЗарегистрированоВРеестреСистемыПлатон", Истина));
		
	Для Каждого СтрокаРасчетаНалога Из СтрокиРасчетаНалога Цикл
		СтрокаРасчетаНалога.СуммаНалогаДоПримененияТекущегоВычета = 
			СтрокаРасчетаНалога.СуммаНалогаКУплате - СтрокаРасчетаНалога.СуммаНалоговогоВычета;
	КонецЦикла;
	
	ПоляПоиска = "ОсновноеСредство, ЗарегистрированоВРеестреСистемыПлатон";
	ТаблицаРасчетТранспортногоНалога.Индексы.Добавить(ПоляПоиска);
	
	Поиск = Новый Структура(ПоляПоиска);
	Поиск.ЗарегистрированоВРеестреСистемыПлатон = Истина;
	
	Для Каждого Расход Из РасходыПлатон Цикл
		
		Поиск.ОсновноеСредство = Расход.ОсновноеСредство;
		
		СтрокиРасчетаНалога = ТаблицаРасчетТранспортногоНалога.НайтиСтроки(Поиск);
			
		Для Каждого СтрокаРасчетаНалога Из СтрокиРасчетаНалога Цикл
			
			Разность = СтрокаРасчетаНалога.СуммаНалогаДоПримененияТекущегоВычета - Расход.СуммаНУДт;
			Если Разность >= 0 Тогда
				СтрокаРасчетаНалога.СуммаНалоговогоВычета = СтрокаРасчетаНалога.СуммаНалоговогоВычета + Расход.СуммаНУДт;
				СтрокаРасчетаНалога.СуммаНалогаДоПримененияТекущегоВычета = Разность;
				Расход.СуммаНУДт = 0;
			Иначе
				СтрокаРасчетаНалога.СуммаНалоговогоВычета = 
					СтрокаРасчетаНалога.СуммаНалоговогоВычета + СтрокаРасчетаНалога.СуммаНалогаДоПримененияТекущегоВычета;
				СтрокаРасчетаНалога.СуммаНалогаДоПримененияТекущегоВычета = 0;
				Расход.СуммаНУДт = -Разность;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ЗемельныйНалог

Процедура СформироватьТаблицуРегистрацияЗемельныхУчастковСрезПоследних(ПараметрыРасчета, Период, ДополнительныеПараметры = Неопределено, ИмяТаблицы = "", УсловияЗапроса = "") Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегистрацияЗемельныхУчастков.Период КАК Период,
	|	РегистрацияЗемельныхУчастков.Организация КАК Организация,
	|	РегистрацияЗемельныхУчастков.ОсновноеСредство КАК ОсновноеСредство,
	|	РегистрацияЗемельныхУчастков.ВключатьВНалоговуюБазу КАК ВключатьВНалоговуюБазу,
	|	РегистрацияЗемельныхУчастков.КодКатегорииЗемель КАК КодКатегорииЗемель,
	|	РегистрацияЗемельныхУчастков.КадастровыйНомер КАК КадастровыйНомер,
	|	РегистрацияЗемельныхУчастков.КадастроваяСтоимость КАК КадастроваяСтоимость,
	|	РегистрацияЗемельныхУчастков.ОбщаяСобственность КАК ОбщаяСобственность,
	|	РегистрацияЗемельныхУчастков.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	РегистрацияЗемельныхУчастков.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РегистрацияЗемельныхУчастков.ЖилищноеСтроительство КАК ЖилищноеСтроительство,
	|	РегистрацияЗемельныхУчастков.ДатаРегистрацииПравНаОбъектНедвижимости КАК ДатаРегистрацииПравНаОбъектНедвижимости,
	|	РегистрацияЗемельныхУчастков.ПостановкаНаУчетВНалоговомОргане КАК ПостановкаНаУчетВНалоговомОргане,
	|	РегистрацияЗемельныхУчастков.НалоговыйОрган КАК НалоговыйОрган,
	|	РегистрацияЗемельныхУчастков.КодПоОКТМО КАК КодПоОКТМО,
	|	РегистрацияЗемельныхУчастков.КодПоОКАТО КАК КодПоОКАТО,
	|	РегистрацияЗемельныхУчастков.КБК КАК КБК,
	|	РегистрацияЗемельныхУчастков.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РегистрацияЗемельныхУчастков.ОснованиеЛьготыПоНалоговойБазе КАК ОснованиеЛьготыПоНалоговойБазе,
	|	РегистрацияЗемельныхУчастков.НачалоДействияЛьготыПоНалоговойБазе КАК НачалоДействияЛьготыПоНалоговойБазе,
	|	РегистрацияЗемельныхУчастков.ОкончаниеДействияЛьготыПоНалоговойБазе КАК ОкончаниеДействияЛьготыПоНалоговойБазе,
	|	РегистрацияЗемельныхУчастков.ДоляНеОблагаемойНалогомПлощадиЧислитель КАК ДоляНеОблагаемойНалогомПлощадиЧислитель,
	|	РегистрацияЗемельныхУчастков.ДоляНеОблагаемойНалогомПлощадиЗнаменатель КАК ДоляНеОблагаемойНалогомПлощадиЗнаменатель,
	|	РегистрацияЗемельныхУчастков.НеОблагаемаяНалогомСумма КАК НеОблагаемаяНалогомСумма,
	|	РегистрацияЗемельныхУчастков.ОснованиеЛьготыСнижениеСуммыНалога КАК ОснованиеЛьготыСнижениеСуммыНалога,
	|	РегистрацияЗемельныхУчастков.НачалоДействияЛьготыСнижениеСуммыНалога КАК НачалоДействияЛьготыСнижениеСуммыНалога,
	|	РегистрацияЗемельныхУчастков.ОкончаниеДействияЛьготыСнижениеСуммыНалога КАК
	|		ОкончаниеДействияЛьготыСнижениеСуммыНалога,
	|	РегистрацияЗемельныхУчастков.СуммаУменьшенияСуммыНалога КАК СуммаУменьшенияСуммыНалога,
	|	РегистрацияЗемельныхУчастков.ОснованиеЛьготыСнижениеСтавки КАК ОснованиеЛьготыСнижениеСтавки,
	|	РегистрацияЗемельныхУчастков.НачалоДействияЛьготыСнижениеСтавки КАК НачалоДействияЛьготыСнижениеСтавки,
	|	РегистрацияЗемельныхУчастков.ОкончаниеДействияЛьготыСнижениеСтавки КАК ОкончаниеДействияЛьготыСнижениеСтавки,
	|	РегистрацияЗемельныхУчастков.СниженнаяНалоговаяСтавка КАК СниженнаяНалоговаяСтавка,
	|	&УстаревшиеПоля,
	|	РегистрацияЗемельныхУчастков.ВидЗаписи КАК ВидЗаписи
	|ПОМЕСТИТЬ РегистрацияЗемельныхУчастков_СрезПоследних
	|ИЗ
	|	РегистрСведений.РегистрацияЗемельныхУчастков.СрезПоследних(&Период, Организация = &Организация) КАК
	|		РегистрацияЗемельныхУчастков
	|
	|&УсловияЗапроса
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
 	Если НЕ ПустаяСтрока(ИмяТаблицы) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ РегистрацияЗемельныхУчастков_СрезПоследних", "ПОМЕСТИТЬ " + ИмяТаблицы);
	КонецЕсли;

	Если НЕ ПустаяСтрока(УсловияЗапроса) Тогда
		ТекстЗамены = СтрЗаменить(УсловияЗапроса, "ДанныеРегистра.", "РегистрацияЗемельныхУчастков.");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловияЗапроса", "ГДЕ
		|	" + ТекстЗамены);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловияЗапроса", "");
	КонецЕсли;

	// За периоды до 2020 в расчете применялись устаревшие поля. Добавим их в запрос.
	Если Период < РасчетИмущественныхНалоговКлиентСервер.НачалоПримененияНовогоРасчетаЗемельногоНалога() Тогда
		ТекстЗамены = 
		   "РегистрацияЗемельныхУчастков.ДатаНачалаПроектированияДо2008 КАК ДатаНачалаПроектирования,
		|	ВЫБОР
		|		КОГДА РегистрацияЗемельныхУчастков.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395До2020 <> """"
		|			ТОГДА РегистрацияЗемельныхУчастков.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395До2020
		|		КОГДА ЕСТЬNULL(РегистрацияЗемельныхУчастков.ОснованиеЛьготыПоНалоговойБазе.ВидЛьготы,
		|			ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
		|		И НЕ РегистрацияЗемельныхУчастков.ОснованиеЛьготыПоНалоговойБазе.УстановленаМестнымНормативнымАктом
		|			ТОГДА РегистрацияЗемельныхУчастков.ОснованиеЛьготыПоНалоговойБазе.КодЛьготы
		|		ИНАЧЕ РегистрацияЗемельныхУчастков.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395До2020
		|	КОНЕЦ КАК КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
		|	РегистрацияЗемельныхУчастков.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391До2020 КАК
		|		КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
		|	РегистрацияЗемельныхУчастков.УменьшениеНалоговойБазыПоСтатье391До2020 КАК УменьшениеНалоговойБазыПоСтатье391,
		|	ЕСТЬNULL(РегистрацияЗемельныхУчастков.ОснованиеЛьготыПоНалоговойБазе.ВидЛьготы,
		|		ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеНалоговойБазыНаСумму) КАК
		|		УменьшениеНалоговойБазыНаСумму,
		|	ВЫБОР
		|		КОГДА
		|			РегистрацияЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазеДо2020 <> ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ПустаяСсылка)
		|			ТОГДА РегистрацияЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазеДо2020
		|		КОГДА ЕСТЬNULL(РегистрацияЗемельныхУчастков.ОснованиеЛьготыПоНалоговойБазе.ВидЛьготы,
		|			ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
		|		И РегистрацияЗемельныхУчастков.ОснованиеЛьготыПоНалоговойБазе.УстановленаМестнымНормативнымАктом
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ОсвобождениеОтНалогообложенияМестное)
		|		КОГДА ЕСТЬNULL(РегистрацияЗемельныхУчастков.ОснованиеЛьготыПоНалоговойБазе.ВидЛьготы,
		|			ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ОсвобождениеОтНалогообложенияПоСтатье395)
		|		КОГДА ЕСТЬNULL(РегистрацияЗемельныхУчастков.ОснованиеЛьготыПоНалоговойБазе.ВидЛьготы,
		|			ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ДоляНеоблагаемойПлощади)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.НеОблагаемаяНалогомПлощадь)
		|		КОГДА ЕСТЬNULL(РегистрацияЗемельныхУчастков.ОснованиеЛьготыПоНалоговойБазе.ВидЛьготы,
		|			ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеНалоговойБазыНаСумму)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.УменьшениеНалоговойБазы)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ПустаяСсылка)
		|	КОНЕЦ КАК НалоговаяЛьготаПоНалоговойБазе,
		|	ВЫБОР
		|		КОГДА РегистрацияЗемельныхУчастков.ПроцентУменьшенияСуммыНалогаДо2020 <> 0
		|			ТОГДА РегистрацияЗемельныхУчастков.ПроцентУменьшенияСуммыНалогаДо2020
		|		КОГДА ЕСТЬNULL(РегистрацияЗемельныхУчастков.ОснованиеЛьготыСнижениеСуммыНалога.ВидЛьготы,
		|			ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаПроцент)
		|			ТОГДА РегистрацияЗемельныхУчастков.ОснованиеЛьготыСнижениеСуммыНалога.ПроцентУменьшения
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПроцентУменьшенияСуммыНалога
		|";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УстаревшиеПоля", ТекстЗамены);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "
			|	&УстаревшиеПоля,", "");
	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("Период", Период);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СформироватьТаблицуРегистрацияЗемельныхУчастковЗаписи(ПараметрыРасчета, Период, ДополнительныеПараметры = Неопределено, ИмяТаблицы = "") Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегистрацияЗемельныхУчастков.Период КАК Период,
	|	РегистрацияЗемельныхУчастков.Организация КАК Организация,
	|	РегистрацияЗемельныхУчастков.ОсновноеСредство КАК ОсновноеСредство,
	|	РегистрацияЗемельныхУчастков.ВключатьВНалоговуюБазу КАК ВключатьВНалоговуюБазу,
	|	РегистрацияЗемельныхУчастков.КодКатегорииЗемель КАК КодКатегорииЗемель,
	|	РегистрацияЗемельныхУчастков.КадастровыйНомер КАК КадастровыйНомер,
	|	РегистрацияЗемельныхУчастков.КадастроваяСтоимость КАК КадастроваяСтоимость,
	|	РегистрацияЗемельныхУчастков.ОбщаяСобственность КАК ОбщаяСобственность,
	|	РегистрацияЗемельныхУчастков.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	РегистрацияЗемельныхУчастков.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РегистрацияЗемельныхУчастков.ЖилищноеСтроительство КАК ЖилищноеСтроительство,
	|	РегистрацияЗемельныхУчастков.ДатаРегистрацииПравНаОбъектНедвижимости КАК ДатаРегистрацииПравНаОбъектНедвижимости,
	|	РегистрацияЗемельныхУчастков.ПостановкаНаУчетВНалоговомОргане КАК ПостановкаНаУчетВНалоговомОргане,
	|	РегистрацияЗемельныхУчастков.НалоговыйОрган КАК НалоговыйОрган,
	|	РегистрацияЗемельныхУчастков.КодПоОКТМО КАК КодПоОКТМО,
	|	РегистрацияЗемельныхУчастков.КодПоОКАТО КАК КодПоОКАТО,
	|	РегистрацияЗемельныхУчастков.КБК КАК КБК,
	|	РегистрацияЗемельныхУчастков.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РегистрацияЗемельныхУчастков.ОснованиеЛьготыПоНалоговойБазе КАК ОснованиеЛьготыПоНалоговойБазе,
	|	РегистрацияЗемельныхУчастков.НачалоДействияЛьготыПоНалоговойБазе КАК НачалоДействияЛьготыПоНалоговойБазе,
	|	РегистрацияЗемельныхУчастков.ОкончаниеДействияЛьготыПоНалоговойБазе КАК ОкончаниеДействияЛьготыПоНалоговойБазе,
	|	РегистрацияЗемельныхУчастков.ДоляНеОблагаемойНалогомПлощадиЧислитель КАК ДоляНеОблагаемойНалогомПлощадиЧислитель,
	|	РегистрацияЗемельныхУчастков.ДоляНеОблагаемойНалогомПлощадиЗнаменатель КАК ДоляНеОблагаемойНалогомПлощадиЗнаменатель,
	|	РегистрацияЗемельныхУчастков.НеОблагаемаяНалогомСумма КАК НеОблагаемаяНалогомСумма,
	|	РегистрацияЗемельныхУчастков.ОснованиеЛьготыСнижениеСуммыНалога КАК ОснованиеЛьготыСнижениеСуммыНалога,
	|	РегистрацияЗемельныхУчастков.НачалоДействияЛьготыСнижениеСуммыНалога КАК НачалоДействияЛьготыСнижениеСуммыНалога,
	|	РегистрацияЗемельныхУчастков.ОкончаниеДействияЛьготыСнижениеСуммыНалога КАК ОкончаниеДействияЛьготыСнижениеСуммыНалога,
	|	РегистрацияЗемельныхУчастков.СуммаУменьшенияСуммыНалога КАК СуммаУменьшенияСуммыНалога,
	|	РегистрацияЗемельныхУчастков.ОснованиеЛьготыСнижениеСтавки КАК ОснованиеЛьготыСнижениеСтавки,
	|	РегистрацияЗемельныхУчастков.НачалоДействияЛьготыСнижениеСтавки КАК НачалоДействияЛьготыСнижениеСтавки,
	|	РегистрацияЗемельныхУчастков.ОкончаниеДействияЛьготыСнижениеСтавки КАК ОкончаниеДействияЛьготыСнижениеСтавки,
	|	РегистрацияЗемельныхУчастков.СниженнаяНалоговаяСтавка КАК СниженнаяНалоговаяСтавка,
	|	&УстаревшиеПоля,
	|	РегистрацияЗемельныхУчастков.ВидЗаписи КАК ВидЗаписи
	|
	|ПОМЕСТИТЬ РегистрацияЗемельныхУчастков_Записи
	|
	|ИЗ
	|	РегистрСведений.РегистрацияЗемельныхУчастков КАК РегистрацияЗемельныхУчастков
	|ГДЕ
	|	РегистрацияЗемельныхУчастков.Организация = &Организация
	|	И (РегистрацияЗемельныхУчастков.Период <= &Период
	|			ИЛИ &Период = ДАТАВРЕМЯ(1, 1, 1))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
 	Если Не ПустаяСтрока(ИмяТаблицы) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ РегистрацияЗемельныхУчастков_Записи", "ПОМЕСТИТЬ " + ИмяТаблицы);
	КонецЕсли;
	
	// За периоды до 2020 в расчете применялись устаревшие поля. Добавим их в запрос.
	Если Период < РасчетИмущественныхНалоговКлиентСервер.НачалоПримененияНовогоРасчетаЗемельногоНалога() Тогда
		ТекстЗамены = 
		   "РегистрацияЗемельныхУчастков.ДатаНачалаПроектированияДо2008 КАК ДатаНачалаПроектирования,
		|	ВЫБОР
		|		КОГДА РегистрацияЗемельныхУчастков.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395До2020 <> """"
		|			ТОГДА РегистрацияЗемельныхУчастков.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395До2020
		|		КОГДА ЕСТЬNULL(РегистрацияЗемельныхУчастков.ОснованиеЛьготыПоНалоговойБазе.ВидЛьготы,
		|			ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
		|		И НЕ РегистрацияЗемельныхУчастков.ОснованиеЛьготыПоНалоговойБазе.УстановленаМестнымНормативнымАктом
		|			ТОГДА РегистрацияЗемельныхУчастков.ОснованиеЛьготыПоНалоговойБазе.КодЛьготы
		|		ИНАЧЕ РегистрацияЗемельныхУчастков.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395До2020
		|	КОНЕЦ КАК КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
		|	РегистрацияЗемельныхУчастков.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391До2020 КАК
		|		КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
		|	РегистрацияЗемельныхУчастков.УменьшениеНалоговойБазыПоСтатье391До2020 КАК УменьшениеНалоговойБазыПоСтатье391,
		|	ЕСТЬNULL(РегистрацияЗемельныхУчастков.ОснованиеЛьготыПоНалоговойБазе.ВидЛьготы,
		|		ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеНалоговойБазыНаСумму) КАК
		|		УменьшениеНалоговойБазыНаСумму,
		|	ВЫБОР
		|		КОГДА
		|			РегистрацияЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазеДо2020 <> ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ПустаяСсылка)
		|			ТОГДА РегистрацияЗемельныхУчастков.НалоговаяЛьготаПоНалоговойБазеДо2020
		|		КОГДА ЕСТЬNULL(РегистрацияЗемельныхУчастков.ОснованиеЛьготыПоНалоговойБазе.ВидЛьготы,
		|			ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
		|		И РегистрацияЗемельныхУчастков.ОснованиеЛьготыПоНалоговойБазе.УстановленаМестнымНормативнымАктом
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ОсвобождениеОтНалогообложенияМестное)
		|		КОГДА ЕСТЬNULL(РегистрацияЗемельныхУчастков.ОснованиеЛьготыПоНалоговойБазе.ВидЛьготы,
		|			ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ОсвобождениеОтНалогообложенияПоСтатье395)
		|		КОГДА ЕСТЬNULL(РегистрацияЗемельныхУчастков.ОснованиеЛьготыПоНалоговойБазе.ВидЛьготы,
		|			ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ДоляНеоблагаемойПлощади)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.НеОблагаемаяНалогомПлощадь)
		|		КОГДА ЕСТЬNULL(РегистрацияЗемельныхУчастков.ОснованиеЛьготыПоНалоговойБазе.ВидЛьготы,
		|			ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеНалоговойБазыНаСумму)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.УменьшениеНалоговойБазы)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидНалоговойЛьготыПоНалоговойБазеПоЗемельномуНалогуДо2020.ПустаяСсылка)
		|	КОНЕЦ КАК НалоговаяЛьготаПоНалоговойБазе,
		|	ВЫБОР
		|		КОГДА РегистрацияЗемельныхУчастков.ПроцентУменьшенияСуммыНалогаДо2020 <> 0
		|			ТОГДА РегистрацияЗемельныхУчастков.ПроцентУменьшенияСуммыНалогаДо2020
		|		КОГДА ЕСТЬNULL(РегистрацияЗемельныхУчастков.ОснованиеЛьготыСнижениеСуммыНалога.ВидЛьготы,
		|			ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаПроцент)
		|			ТОГДА РегистрацияЗемельныхУчастков.ОснованиеЛьготыСнижениеСуммыНалога.ПроцентУменьшения
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПроцентУменьшенияСуммыНалога
		|";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УстаревшиеПоля", ТекстЗамены);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "
			|	&УстаревшиеПоля,", "");
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", ПараметрыРасчета.Организация);
	Запрос.УстановитьПараметр("Период", Период);
	
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#Область ПрочиеЭкспортныеПроцедуры

// По 5 и 6 цифрам КПП определяет, является ли организация иностранной 
// (пп.1 п.12 Порядка заполнения декларации по налогу на имущество в редакции Приказа ФНС России от 24.08.2022 N ЕД-7-21/766@).
// Это влиет как на расчет налога, так и на заполнение декларации.
// 
// Параметры:
//  Организация - СправочникСсылка.Организации
//  Период - Дата - дата, на которую определяется регистрация организации
// 
// Возвращаемое значение:
//  Булево - если Истина, то организация считается иностранной с точки зрения отчетности
Функция ЭтоИностраннаяОрганизация(Организация, Период) Экспорт
	
	ЗначенияДляИностраннойОрганизации = Новый Массив;
	ЗначенияДляИностраннойОрганизации.Добавить("51");
	ЗначенияДляИностраннойОрганизации.Добавить("52");
	ЗначенияДляИностраннойОрганизации.Добавить("55");
	ЗначенияДляИностраннойОрганизации.Добавить("56");
	ЗначенияДляИностраннойОрганизации.Добавить("63");
	ЗначенияДляИностраннойОрганизации.Добавить("64");
	ЗначенияДляИностраннойОрганизации.Добавить("65");
	ЗначенияДляИностраннойОрганизации.Добавить("70");
	ЗначенияДляИностраннойОрганизации.Добавить("74");
	ЗначенияДляИностраннойОрганизации.Добавить("91");
	ЗначенияДляИностраннойОрганизации.Добавить("92");
	
	КПП = Справочники.Организации.КППНаДату(Организация, Период, Истина);
	
	Если СтрДлина(КПП) < 6 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ЗначениеИзКПП = Сред(КПП, 5, 2);
	
	Возврат ЗначенияДляИностраннойОрганизации.Найти(ЗначениеИзКПП) <> Неопределено;
	
КонецФункции

Процедура УточнитьПараметрыРегистрацииОрганизацииВФНС(Параметры, Организация, Период) Экспорт

	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Организация", Организация);
	Запрос.Параметры.Вставить("Период", Период);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИсторияРегистраций.Период КАК Период,
	|	ИсторияРегистраций.РегистрацияВНалоговомОргане КАК ОсновнойНалоговыйОрган,
	|	ЕСТЬNULL(ИсторияРегистраций.РегистрацияВНалоговомОргане.КодПоОКТМО, """") КАК КодПоОКТМО
	|ИЗ
	|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(&Период, СтруктурнаяЕдиница = &Организация) КАК ИсторияРегистраций";
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Параметры.Вставить("ОсновнойНалоговыйОрган", Выборка.ОсновнойНалоговыйОрган);
	Параметры.Вставить("КодПоОКТМО", Выборка.КодПоОКТМО);
	Параметры.Вставить("ДатаПоследнейРегистрации", Выборка.Период);
	
КонецПроцедуры

Процедура УточнитьПараметрыОсвобожденияОтУплатыНалогов(Параметры, ТаблицаРеквизиты) Экспорт
	
	ПараметрыРасчета = ПодготовитьПараметрыРасчетНалога(ТаблицаРеквизиты);
	Реквизиты = ПараметрыРасчета.Реквизиты[0];
	
	Если Не НалоговыйУчет.ДеятельностьОтнесенаКПострадавшимОтКоронавируса(Реквизиты.Организация) Тогда
		Возврат;
	КонецЕсли;
		
	Если Параметры = Неопределено Тогда
		Параметры = Новый Структура;
	КонецЕсли;	
			
	ПериодОсвобожденияОтНалогов = НалоговыйУчет.ПериодОсвобожденияОтНалоговПострадавшимОтКоронавируса();
		
	Параметры.Вставить("ПрименяетсяОсвобождениеОтУплатыНалогаВНалоговомПериоде", 
		Год(ПериодОсвобожденияОтНалогов.Начало) = Год(Реквизиты.Период));
		
	Параметры.Вставить("ПрименяетсяОсвобождениеОтУплатыНалогаВТекущемПериоде", 
	    ПериодОсвобожденияОтНалогов.Начало <= Реквизиты.Период 
		И Реквизиты.Период <= ПериодОсвобожденияОтНалогов.Конец);
	
	Параметры.Вставить("ГодовойРасчет", Месяц(Реквизиты.Период) = 12);
	
КонецПроцедуры

Функция ПодготовитьТаблицыРасчетНалога(ТаблицаРеквизиты, Отказ, ДополнительныеПараметры) Экспорт
	
	ТаблицыСправокРасчетов = Новый Структура;
	
	СтруктураТаблиц = Новый Структура();
	СтруктураТаблиц.Вставить("ТаблицаПроводок", Неопределено);
	СтруктураТаблиц.Вставить("ТаблицаПроводокПлатон", Неопределено);
	СтруктураТаблиц.Вставить("ТаблицаДвиженийПлатон", Неопределено);
	СтруктураТаблиц.Вставить("ТаблицыСправокРасчетов", ТаблицыСправокРасчетов);
	
	Если Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат СтруктураТаблиц;
	КонецЕсли;
			
	Параметры = ПодготовитьПараметрыРасчетНалога(ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
	
	Если Реквизиты.ВидНалога = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество 
		 И Реквизиты.Период < РасчетИмущественныхНалогов.НачалоПримененияНовогоРасчетаНалогаНаИмущество() Тогда
		ТаблицыСправокРасчетов.Вставить("РасчетНалогаНаИмущество",
			УправлениеВнеоборотнымиАктивами.ПустаяСправкаРасчет("РасчетНалогаНаИмущество"));	
	ИначеЕсли Реквизиты.ВидНалога = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество Тогда
		ТаблицыСправокРасчетов.Вставить("РасчетНалогаНаИмуществоПоСреднегодовойСтоимости",
			УправлениеВнеоборотнымиАктивами.ПустаяСправкаРасчет("РасчетНалогаНаИмуществоПоСреднегодовойСтоимости"));	
		ТаблицыСправокРасчетов.Вставить("РасчетНалогаНаИмуществоПоКадастровойСтоимости",
			УправлениеВнеоборотнымиАктивами.ПустаяСправкаРасчет("РасчетНалогаНаИмуществоПоКадастровойСтоимости"));	
	ИначеЕсли Реквизиты.ВидНалога = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда
		ТаблицыСправокРасчетов.Вставить("РасчетТранспортногоНалога",
			УправлениеВнеоборотнымиАктивами.ПустаяСправкаРасчет("РасчетТранспортногоНалога"));	
	ИначеЕсли Реквизиты.ВидНалога = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог
		 И Реквизиты.Период < РасчетИмущественныхНалоговКлиентСервер.НачалоПримененияНовогоРасчетаЗемельногоНалога() Тогда
		// Устаревший расчет оставлен для совместимости с периодами до 2020 года
		ТаблицыСправокРасчетов.Вставить("РасчетЗемельногоНалогаДо2020",
			УправлениеВнеоборотнымиАктивами.ПустаяСправкаРасчет("РасчетЗемельногоНалогаДо2020"));	
	ИначеЕсли Реквизиты.ВидНалога = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог Тогда
		ТаблицыСправокРасчетов.Вставить("РасчетЗемельногоНалога",
			УправлениеВнеоборотнымиАктивами.ПустаяСправкаРасчет("РасчетЗемельногоНалога"));	
	КонецЕсли;
		
	ТаблицаПроводок = ПустаяТаблицаПроводок();
	ТаблицыПлатон = ПустыеТаблицыДвиженийПлатон();	
	Ошибки = Новый Массив;
	
	РассчитатьНалог(Реквизиты, ТаблицаПроводок, ТаблицыСправокРасчетов, ТаблицыПлатон, ДополнительныеПараметры, Ошибки, Отказ);
		
	Если Отказ Тогда
		
		СтруктураТаблиц.Вставить("Ошибки", Ошибки);
		
	Иначе
			
		СтруктураТаблиц.Вставить("ТаблицаПроводок", ТаблицаПроводок);
		СтруктураТаблиц.Вставить("ТаблицаПроводокПлатон", ТаблицыПлатон.Хозрасчетный);
		СтруктураТаблиц.Вставить("ТаблицаДвиженийПлатон", ТаблицыПлатон.РасходыНаПлатон);
		СтруктураТаблиц.Вставить("ТаблицыСправокРасчетов", ТаблицыСправокРасчетов);
		
	КонецЕсли;
	
	Возврат СтруктураТаблиц;
	
КонецФункции

Функция СпособыОтраженияРасходовПоНалогам(Организация, Объекты, ВидНалога, Период) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Объекты", Объекты);
	Запрос.УстановитьПараметр("ВидНалога", ВидНалога);
	Запрос.УстановитьПараметр("Период", Период);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ОсновныеСредства.Ссылка КАК ОсновноеСредство
	|ПОМЕСТИТЬ ВТ_ОсновныеСредства
	|ИЗ
	|	Справочник.ОсновныеСредства КАК ОсновныеСредства
	|ГДЕ
	|	ОсновныеСредства.Ссылка В(&Объекты)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.ПодразделениеЗатрат,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.СчетЗатрат,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто1,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто2,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто3,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.ОтражениеВУСН,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Период
	|ПОМЕСТИТЬ ВТ_ПоВидамНалога
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоНалогам.СрезПоследних(
	|			&Период,
	|			ВидНалога = &ВидНалога
	|				И Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				И ОсновноеСредство = ЗНАЧЕНИЕ(Справочник.ОсновныеСредства.ПустаяСсылка)) КАК СпособыОтраженияРасходовПоНалогамСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.ПодразделениеЗатрат,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.СчетЗатрат,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто1,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто2,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто3,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.ОтражениеВУСН,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Период
	|ПОМЕСТИТЬ ВТ_ПоОрганизациям
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоНалогам.СрезПоследних(
	|			&Период,
	|			ВидНалога = &ВидНалога
	|				И Организация = &Организация
	|				И ОсновноеСредство = ЗНАЧЕНИЕ(Справочник.ОсновныеСредства.ПустаяСсылка)) КАК СпособыОтраженияРасходовПоНалогамСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.ПодразделениеЗатрат,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.СчетЗатрат,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто1,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто2,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто3,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.ОтражениеВУСН,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Период
	|ПОМЕСТИТЬ ВТ_ПоОсновнымСредствам
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоНалогам.СрезПоследних(
	|			&Период,
	|			ВидНалога = &ВидНалога
	|				И Организация = &Организация
	|				И ОсновноеСредство В (&Объекты)) КАК СпособыОтраженияРасходовПоНалогамСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОсновныеСредства.ОсновноеСредство,
	|	ЕСТЬNULL(ВТ_ПоОсновнымСредствам.СчетЗатрат, ЕСТЬNULL(ВТ_ПоОрганизациям.СчетЗатрат, ВТ_ПоВидамНалога.СчетЗатрат)) КАК СчетДт,
	|	ЕСТЬNULL(ВТ_ПоОсновнымСредствам.ПодразделениеЗатрат, ЕСТЬNULL(ВТ_ПоОрганизациям.ПодразделениеЗатрат, ВТ_ПоВидамНалога.ПодразделениеЗатрат)) КАК Подразделение,
	|	ЕСТЬNULL(ВТ_ПоОсновнымСредствам.Субконто1, ЕСТЬNULL(ВТ_ПоОрганизациям.Субконто1, ВТ_ПоВидамНалога.Субконто1)) КАК Субконто1,
	|	ЕСТЬNULL(ВТ_ПоОсновнымСредствам.Субконто2, ЕСТЬNULL(ВТ_ПоОрганизациям.Субконто2, ВТ_ПоВидамНалога.Субконто2)) КАК Субконто2,
	|	ЕСТЬNULL(ВТ_ПоОсновнымСредствам.Субконто3, ЕСТЬNULL(ВТ_ПоОрганизациям.Субконто3, ВТ_ПоВидамНалога.Субконто3)) КАК Субконто3,
	|	ЕСТЬNULL(ВТ_ПоОсновнымСредствам.ОтражениеВУСН, ЕСТЬNULL(ВТ_ПоОрганизациям.ОтражениеВУСН, ВТ_ПоВидамНалога.ОтражениеВУСН)) КАК ОтражениеВУСН,
	|	ЕСТЬNULL(ВТ_ПоОсновнымСредствам.Период, ЕСТЬNULL(ВТ_ПоОрганизациям.Период, ВТ_ПоВидамНалога.Период)) КАК Период,
	|	ВЫБОР
	|		КОГДА ВТ_ПоОсновнымСредствам.ОтражениеВУСН ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ВТ_ПоОрганизациям.ОтражениеВУСН ЕСТЬ NULL 
	|						ТОГДА ""ПоВидамНалога""
	|					ИНАЧЕ ""ПоОрганизациям""
	|				КОНЕЦ
	|		ИНАЧЕ ""ПоОсновнымСредствам""
	|	КОНЕЦ КАК ПорядокОпределенияСпособаОтражения
	|ИЗ
	|	ВТ_ОсновныеСредства КАК ВТ_ОсновныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоОсновнымСредствам КАК ВТ_ПоОсновнымСредствам
	|		ПО ВТ_ОсновныеСредства.ОсновноеСредство = ВТ_ПоОсновнымСредствам.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоОрганизациям КАК ВТ_ПоОрганизациям
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоВидамНалога КАК ВТ_ПоВидамНалога
	|		ПО (ИСТИНА)
	|ГДЕ
	|	НЕ ЕСТЬNULL(ВТ_ПоОсновнымСредствам.СчетЗатрат, ЕСТЬNULL(ВТ_ПоОрганизациям.СчетЗатрат, ВТ_ПоВидамНалога.СчетЗатрат)) ЕСТЬ NULL ";
	
	Результат = Запрос.Выполнить();
	
	СпособыОтраженияРасходовПоНалогу = Новый Соответствие;
	
	Если НЕ Результат.Пустой() Тогда
		
		ТаблицаСпособовОтражения = Результат.Выгрузить();
		
		Для Каждого СтрокаТаблицы Из ТаблицаСпособовОтражения Цикл
			
			СпособОтраженияРасходовПоНалогу = Новый Структура(
				"СчетДт,
				|Подразделение,
				|Субконто1,
				|Субконто2,
				|Субконто3,
				|ОтражениеВУСН,
				|Период,
				|ПорядокОпределенияСпособаОтражения");
			
			ЗаполнитьЗначенияСвойств(СпособОтраженияРасходовПоНалогу, СтрокаТаблицы);
			СпособыОтраженияРасходовПоНалогу.Вставить(СтрокаТаблицы.ОсновноеСредство, СпособОтраженияРасходовПоНалогу);
			
		КонецЦикла;
				
	КонецЕсли;
	
	Возврат СпособыОтраженияРасходовПоНалогу;
	
КонецФункции

Функция ОбщийСпособОтраженияРасходовПоНалогу(Организация, ВидНалога, Период) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ВидНалога", ВидНалога);
	Запрос.УстановитьПараметр("Период", Период);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.ПодразделениеЗатрат,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.СчетЗатрат,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто1,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто2,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто3,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.ОтражениеВУСН,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Период
	|ПОМЕСТИТЬ ВТ_ПоВидуНалога
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоНалогам.СрезПоследних(&Период, ВидНалога = &ВидНалога
	|	И Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И ОсновноеСредство = ЗНАЧЕНИЕ(Справочник.ОсновныеСредства.ПустаяСсылка)) КАК
	|		СпособыОтраженияРасходовПоНалогамСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.ПодразделениеЗатрат,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.СчетЗатрат,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто1,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто2,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Субконто3,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.ОтражениеВУСН,
	|	СпособыОтраженияРасходовПоНалогамСрезПоследних.Период
	|ПОМЕСТИТЬ ВТ_ПоОрганизации
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоНалогам.СрезПоследних(&Период, ВидНалога = &ВидНалога
	|	И Организация = &Организация
	|	И ОсновноеСредство = ЗНАЧЕНИЕ(Справочник.ОсновныеСредства.ПустаяСсылка)) КАК
	|		СпособыОтраженияРасходовПоНалогамСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ_ПоОрганизации.СчетЗатрат, ВТ_ПоВидуНалога.СчетЗатрат) КАК СчетДт,
	|	ЕСТЬNULL(ВТ_ПоОрганизации.ПодразделениеЗатрат, ВТ_ПоВидуНалога.ПодразделениеЗатрат) КАК Подразделение,
	|	ЕСТЬNULL(ВТ_ПоОрганизации.Субконто1, ВТ_ПоВидуНалога.Субконто1) КАК Субконто1,
	|	ЕСТЬNULL(ВТ_ПоОрганизации.Субконто2, ВТ_ПоВидуНалога.Субконто2) КАК Субконто2,
	|	ЕСТЬNULL(ВТ_ПоОрганизации.Субконто3, ВТ_ПоВидуНалога.Субконто3) КАК Субконто3,
	|	ЕСТЬNULL(ВТ_ПоОрганизации.ОтражениеВУСН, ВТ_ПоВидуНалога.ОтражениеВУСН) КАК ОтражениеВУСН,
	|	ЕСТЬNULL(ВТ_ПоОрганизации.Период, ВТ_ПоВидуНалога.Период) КАК Период,
	|	ВЫБОР
	|		КОГДА ВТ_ПоОрганизации.СчетЗатрат ЕСТЬ NULL
	|			ТОГДА ""ПоВидамНалога""
	|		ИНАЧЕ ""ПоОрганизациям""
	|	КОНЕЦ КАК ПорядокОпределенияСпособаОтражения
	|ИЗ
	|	ВТ_ПоОрганизации КАК ВТ_ПоОрганизации
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ПоВидуНалога КАК ВТ_ПоВидуНалога
	|		ПО ИСТИНА
	|ГДЕ
	|	Не ЕСТЬNULL(ВТ_ПоОрганизации.СчетЗатрат, ВТ_ПоВидуНалога.СчетЗатрат) ЕСТЬ NULL";
	
	Результат = Запрос.Выполнить();
	
	СпособОтраженияРасходовПоНалогу = Новый Структура(
		"СчетДт,
		|Подразделение,
		|Субконто1,
		|Субконто2,
		|Субконто3,
		|ОтражениеВУСН,
		|Период,
		|ПорядокОпределенияСпособаОтражения");
	
	Если Не Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		ЗаполнитьЗначенияСвойств(СпособОтраженияРасходовПоНалогу, Выборка);
		
	КонецЕсли;
	
	Возврат СпособОтраженияРасходовПоНалогу;
	
КонецФункции

Процедура СформироватьДвиженияРасчетНалога(ТаблицыНачислениеНалога, ТаблицаРеквизитов, Движения, Отказ, ДополнительныеПараметры) Экспорт

	Если Не ЗначениеЗаполнено(ТаблицаРеквизитов) Тогда
	    Возврат;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыДвиженийРасчетНалога(
		ТаблицыНачислениеНалога.ТаблицаПроводок,
		ТаблицыНачислениеНалога.ТаблицаПроводокПлатон,
		ТаблицыНачислениеНалога.ТаблицаДвиженийПлатон,
		ТаблицаРеквизитов);
	Реквизиты = Параметры.Реквизиты[0];
	
	РасчетИмущественныхНалогов.ДополнитьПараметрыДвиженийСправкиРасчеты(Параметры, Реквизиты, ТаблицыНачислениеНалога.ТаблицыСправокРасчетов);
	
	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	ПоддержкаПБУ18 = УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период);
	
	// проводка по начислению налога
	Для каждого СтрокаТаблицы Из Параметры.Проводки Цикл
	
		Если СтрокаТаблицы.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Проводка = Движения.Хозрасчетный.Добавить();
		ЗаполнитьЗначенияСвойств(Проводка, СтрокаТаблицы);
		
		СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);
		Для Ном = 1 По СвойстваСчетаДт.КоличествоСубконто Цикл
			
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт,
				СвойстваСчетаДт["ВидСубконто" + Ном], СтрокаТаблицы["Субконто" + Ном]);	
			
		КонецЦикла;
			
		Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = СтрокаТаблицы.Подразделение;
		КонецЕсли;
		
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт,
			"ВидыПлатежейВГосБюджет", СтрокаТаблицы.ВидыПлатежейВГосБюджет);	
			
		СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);	
		Для Ном = 1 По СвойстваСчетаКт.КоличествоСубконто Цикл
			СубконтоРегистрацияВНалоговомОргане = Ложь;
			НалоговыйУчетОбособленныхПодразделений.ОпределитьСубконтоРегистрацияВНалоговомОргане(
				СубконтоРегистрацияВНалоговомОргане,
				СвойстваСчетаКт["ВидСубконто" + Ном]);
			Если СубконтоРегистрацияВНалоговомОргане Тогда
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт,
					"РегистрацияВНалоговомОргане", СтрокаТаблицы.РегистрацияВНалоговомОргане);
			КонецЕсли;
		КонецЦикла;
	
		Если ОтражатьВНалоговомУчете Тогда
			
			ЭтоНеПринимаемыйРасходНУ = НалоговыйУчет.ЭтоНепринимаемыйРасходНУ(СтрокаТаблицы.Субконто1,
				СтрокаТаблицы.Субконто2, СтрокаТаблицы.Субконто3);
				
			Если СвойстваСчетаДт.НалоговыйУчет Тогда
				
				Проводка.СуммаНУДт = ?(ЭтоНеПринимаемыйРасходНУ, 0, СтрокаТаблицы.Сумма);
				
				Если ПоддержкаПБУ18 Тогда
					Проводка.СуммаПРДт = ?(ЭтоНеПринимаемыйРасходНУ, СтрокаТаблицы.Сумма, 0);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого СтрокаТаблицы Из Параметры.ПроводкиПлатон Цикл
	
		Если НЕ ОтражатьВНалоговомУчете Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаТаблицы.СуммаНУДт = 0 И СтрокаТаблицы.СуммаНУКт = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Проводка = Движения.Хозрасчетный.Добавить();
		ЗаполнитьЗначенияСвойств(Проводка, СтрокаТаблицы, , "СуммаНУДт, СуммаНУКт");
		
		СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетДт);
		Для Ном = 1 По СвойстваСчетаДт.КоличествоСубконто Цикл
			
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт,
				СвойстваСчетаДт["ВидСубконто" + Ном], СтрокаТаблицы["Субконто" + Ном]);	
			
		КонецЦикла;
			
		Если СвойстваСчетаДт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеДт = СтрокаТаблицы.Подразделение;
		КонецЕсли;
		
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт,
			"РасходыБудущихПериодов", СтрокаТаблицы.РасходыБудущихПериодов);
			
		СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Проводка.СчетКт);
		
		Если СвойстваСчетаКт.УчетПоПодразделениям Тогда
			Проводка.ПодразделениеКт = СтрокаТаблицы.Подразделение;
		КонецЕсли;
		
		ЭтоНеПринимаемыйРасходНУ = НалоговыйУчет.ЭтоНепринимаемыйРасходНУ(СтрокаТаблицы.Субконто1,
			СтрокаТаблицы.Субконто2, СтрокаТаблицы.Субконто3);
			
		Если СвойстваСчетаДт.НалоговыйУчет Тогда
			
			Проводка.СуммаНУДт = ?(ЭтоНеПринимаемыйРасходНУ, 0, СтрокаТаблицы.СуммаНУДт);
			
			Если ПоддержкаПБУ18 Тогда
				Проводка.СуммаПРДт = ?(ЭтоНеПринимаемыйРасходНУ, СтрокаТаблицы.СуммаНУКт, СтрокаТаблицы.СуммаНУКт - СтрокаТаблицы.СуммаНУДт);
				Проводка.СуммаВРДт =  - СтрокаТаблицы.СуммаНУКт;
			КонецЕсли;
			
		КонецЕсли;
		
		Если СвойстваСчетаКт.НалоговыйУчет Тогда
			
			Проводка.СуммаНУКт = СтрокаТаблицы.СуммаНУКт;
			
			Если ПоддержкаПБУ18 Тогда
				Проводка.СуммаВРКт =  - СтрокаТаблицы.СуммаНУКт;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.Хозрасчетный.Записывать = Истина;
	
	Для Каждого СтрокаРасхода Из Параметры.РасходыНаПлатон Цикл
		
		Если СтрокаРасхода.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Движение = Движения.РасходыНаПлатон.ДобавитьРасход();
		ЗаполнитьЗначенияСвойств(Движение, СтрокаРасхода);
		
	КонецЦикла;
	
	Движения.РасходыНаПлатон.Записывать = Истина;
	
	// данные для справок-расчетов
	Для Каждого ТаблицаСправкиРасчета Из Параметры.ТаблицыСправокРасчетов Цикл
		ЗакрытиеМесяца.ЗаписьВоВспомогательныеРегистрыСведений(Движения, ТаблицаСправкиРасчета.Значение, Параметры.Реквизиты, ТаблицаСправкиРасчета.Ключ);
	КонецЦикла;
	
КонецПроцедуры

Функция ОрганизацииУплачивающиеАвансы(Организация, Период, Налог, ОднаОрганизация = Истина) Экспорт
	
	Если ОднаОрганизация Тогда
		СписокОрганизаций = Организация;
	Иначе
		СписокОрганизаций = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсяОрганизация(Организация);
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	РасчетИмущественныхНалогов.СоздатьНалоговыеОрганыСУстановленнойУплатойАвансов(
		МенеджерВременныхТаблиц, СписокОрганизаций, Период, Налог);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	Запрос.УстановитьПараметр("КонецКвартала", КонецКвартала(Период));
	Запрос.УстановитьПараметр("КонецПрошлогоКвартала", НачалоКвартала(Период) - 1);
	Запрос.УстановитьПараметр("НачалоКвартала", НачалоКвартала(Период));
	Запрос.УстановитьПараметр("КонецПрошлогоГода", НачалоГода(Период) - 1);
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(Период));
	
	Если Налог = ЗадачиБухгалтераКлиентСервер.КодЗадачиНалогНаИмущество() Тогда
	
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.НалоговыйОрган КАК НалоговыйОрган,
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация КАК Организация
		|ПОМЕСТИТЬ ВТ_НалоговыеОрганы
		|ИЗ
		|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&КонецПрошлогоГода, Организация В (&СписокОрганизаций)) КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
		|ГДЕ
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.НалоговыйОрган,
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация
		|ИЗ
		|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
		|ГДЕ
		|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация В(&СписокОрганизаций)
		|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
		|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период МЕЖДУ &НачалоГода И &КонецКвартала
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане,
		|	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.СтруктурнаяЕдиница
		|ИЗ
		|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(&КонецПрошлогоГода, СтруктурнаяЕдиница В (&СписокОрганизаций)) КАК ИсторияРегистрацийВНалоговомОрганеСрезПоследних
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане,
		|	ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница
		|ИЗ
		|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане КАК ИсторияРегистрацийВНалоговомОргане
		|ГДЕ
		|	ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница В(&СписокОрганизаций)
		|	И ИсторияРегистрацийВНалоговомОргане.Период МЕЖДУ &НачалоГода И &КонецКвартала
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НалоговыйОрган,
		|	Организация";
		
	ИначеЕсли Налог = ЗадачиБухгалтераКлиентСервер.КодЗадачиТранспортныйНалог() Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегистрацияТранспортныхСредств.НалоговыйОрган КАК НалоговыйОрган,
		|	РегистрацияТранспортныхСредств.Организация КАК Организация
		|ПОМЕСТИТЬ ВТ_НалоговыеОрганы
		|ИЗ
		|	РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(&КонецПрошлогоКвартала, Организация В (&СписокОрганизаций)) КАК РегистрацияТранспортныхСредств
		|ГДЕ
		|	РегистрацияТранспортныхСредств.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
		|	И РегистрацияТранспортныхСредств.ВключатьВНалоговуюБазу
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РегистрацияТранспортныхСредств.НалоговыйОрган,
		|	РегистрацияТранспортныхСредств.Организация
		|ИЗ
		|	РегистрСведений.РегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
		|ГДЕ
		|	РегистрацияТранспортныхСредств.Организация В(&СписокОрганизаций)
		|	И РегистрацияТранспортныхСредств.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
		|	И РегистрацияТранспортныхСредств.Период МЕЖДУ &НачалоКвартала И &КонецКвартала
		|	И РегистрацияТранспортныхСредств.ВключатьВНалоговуюБазу
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане,
		|	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.СтруктурнаяЕдиница
		|ИЗ
		|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(&КонецПрошлогоКвартала, СтруктурнаяЕдиница В (&СписокОрганизаций)) КАК ИсторияРегистрацийВНалоговомОрганеСрезПоследних
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане,
		|	ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница
		|ИЗ
		|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане КАК ИсторияРегистрацийВНалоговомОргане
		|ГДЕ
		|	ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница В(&СписокОрганизаций)
		|	И ИсторияРегистрацийВНалоговомОргане.Период МЕЖДУ &НачалоКвартала И &КонецКвартала
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НалоговыйОрган,
		|	Организация";
		
	ИначеЕсли Налог = ЗадачиБухгалтераКлиентСервер.КодЗадачиЗемельныйНалог()  Тогда	
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РегистрацияЗемельныхУчастков.НалоговыйОрган КАК НалоговыйОрган,
		|	РегистрацияЗемельныхУчастков.Организация КАК Организация
		|ПОМЕСТИТЬ ВТ_НалоговыеОрганы
		|ИЗ
		|	РегистрСведений.РегистрацияЗемельныхУчастков.СрезПоследних(&КонецПрошлогоКвартала, Организация В (&СписокОрганизаций)) КАК РегистрацияЗемельныхУчастков
		|ГДЕ
		|	РегистрацияЗемельныхУчастков.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
		|	И РегистрацияЗемельныхУчастков.ВключатьВНалоговуюБазу
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РегистрацияЗемельныхУчастков.НалоговыйОрган,
		|	РегистрацияЗемельныхУчастков.Организация
		|ИЗ
		|	РегистрСведений.РегистрацияЗемельныхУчастков КАК РегистрацияЗемельныхУчастков
		|ГДЕ
		|	РегистрацияЗемельныхУчастков.Организация В(&СписокОрганизаций)
		|	И РегистрацияЗемельныхУчастков.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
		|	И РегистрацияЗемельныхУчастков.Период МЕЖДУ &НачалоКвартала И &КонецКвартала
		|	И РегистрацияЗемельныхУчастков.ВключатьВНалоговуюБазу
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.РегистрацияВНалоговомОргане,
		|	ИсторияРегистрацийВНалоговомОрганеСрезПоследних.СтруктурнаяЕдиница
		|ИЗ
		|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(&КонецПрошлогоКвартала, СтруктурнаяЕдиница В (&СписокОрганизаций)) КАК ИсторияРегистрацийВНалоговомОрганеСрезПоследних
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане,
		|	ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница
		|ИЗ
		|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане КАК ИсторияРегистрацийВНалоговомОргане
		|ГДЕ
		|	ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница В(&СписокОрганизаций)
		|	И ИсторияРегистрацийВНалоговомОргане.Период МЕЖДУ &НачалоКвартала И &КонецКвартала
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НалоговыйОрган,
		|	Организация";
		
	Иначе
		
		Возврат Новый Массив;
		
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_НалоговыеОрганы.Организация
	|ИЗ
	|	ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов КАК ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НалоговыеОрганы КАК ВТ_НалоговыеОрганы
	|		ПО ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов.НалоговыйОрган = ВТ_НалоговыеОрганы.НалоговыйОрган
	|			И ВТ_НалоговыеОрганыСУстановленнойУплатойАвансов.Организация = ВТ_НалоговыеОрганы.Организация";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Организация");
	
КонецФункции

Процедура СоздатьНалоговыеОрганыСУстановленнойУплатойАвансов(МенеджерВременныхТаблиц, СписокОрганизаций, Период, Налог) Экспорт

	РегистрыСведений.ПорядокУплатыНалоговНаМестах.СоздатьНалоговыеОрганыСУстановленнойУплатойАвансов(
		МенеджерВременныхТаблиц, 
		СписокОрганизаций, 
		Период, 
		Налог);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция ПустыеТаблицыДвиженийПлатон()
	
	ТаблицыДвиженийПлатон = Новый Структура("Хозрасчетный, РасходыНаПлатон");
	
	ТаблицаПроводок = Новый ТаблицаЗначений;
	ТаблицаПроводок.Колонки.Добавить("Период",
		ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ТаблицаПроводок.Колонки.Добавить("Организация",
		Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаПроводок.Колонки.Добавить("СчетДт",
		Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаПроводок.Колонки.Добавить("Подразделение",
		Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	ТаблицаПроводок.Колонки.Добавить("Субконто1");
	ТаблицаПроводок.Колонки.Добавить("Субконто2");
	ТаблицаПроводок.Колонки.Добавить("Субконто3");
	ТаблицаПроводок.Колонки.Добавить("ОтражениеВУСН",
		Новый ОписаниеТипов("ПеречислениеСсылка.ОтражениеВУСН"));
	ТаблицаПроводок.Колонки.Добавить("СчетКт",
		Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаПроводок.Колонки.Добавить("РасходыБудущихПериодов",
		Новый ОписаниеТипов("СправочникСсылка.РасходыБудущихПериодов"));
	ТаблицаПроводок.Колонки.Добавить("СуммаНУДт",
		ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаПроводок.Колонки.Добавить("СуммаНУКт",
		ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаПроводок.Колонки.Добавить("Содержание",
		ОбщегоНазначения.ОписаниеТипаСтрока(150));
		
	ТаблицыДвиженийПлатон.Хозрасчетный = ТаблицаПроводок;
	
	ТаблицаДвижений = Новый ТаблицаЗначений;
	ТаблицаДвижений.Колонки.Добавить("Период",
		ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ТаблицаДвижений.Колонки.Добавить("Организация",
		Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаДвижений.Колонки.Добавить("ОсновноеСредство",
		Новый ОписаниеТипов("СправочникСсылка.ОсновныеСредства"));
	ТаблицаДвижений.Колонки.Добавить("СчетУчета",
		Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаДвижений.Колонки.Добавить("Контрагент",
		Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТаблицаДвижений.Колонки.Добавить("ДоговорКонтрагента",
		Новый ОписаниеТипов("СправочникСсылка.ДоговорыКонтрагентов"));
	ТаблицаДвижений.Колонки.Добавить("ДокументРасчетовСКонтрагентом",
		Документы.ТипВсеСсылки());
	ТаблицаДвижений.Колонки.Добавить("Подразделение",
		Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	ТаблицаДвижений.Колонки.Добавить("ОтражениеВУСН",
		Новый ОписаниеТипов("ПеречислениеСсылка.ОтражениеВУСН"));
	ТаблицаДвижений.Колонки.Добавить("Сумма",
		ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаДвижений.Колонки.Добавить("СуммаРасхода",
		ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
		
	ТаблицыДвиженийПлатон.РасходыНаПлатон = ТаблицаДвижений;
		
	Возврат ТаблицыДвиженийПлатон;
	
КонецФункции

Функция ПустаяТаблицаПроводок()
	
	ТаблицаПроводок = Новый ТаблицаЗначений;
	
	ТаблицаПроводок.Колонки.Добавить("Период",
		ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ТаблицаПроводок.Колонки.Добавить("Организация",
		Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаПроводок.Колонки.Добавить("СчетДт",
		Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаПроводок.Колонки.Добавить("Подразделение",
		Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	ТаблицаПроводок.Колонки.Добавить("Субконто1");
	ТаблицаПроводок.Колонки.Добавить("Субконто2");
	ТаблицаПроводок.Колонки.Добавить("Субконто3");
	ТаблицаПроводок.Колонки.Добавить("ОтражениеВУСН",
		Новый ОписаниеТипов("ПеречислениеСсылка.ОтражениеВУСН"));
	ТаблицаПроводок.Колонки.Добавить("СчетКт",
		Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаПроводок.Колонки.Добавить("ВидыПлатежейВГосБюджет",
		Новый ОписаниеТипов("ПеречислениеСсылка.ВидыПлатежейВГосБюджет"));
	ТаблицаПроводок.Колонки.Добавить("РегистрацияВНалоговомОргане",
		Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	ТаблицаПроводок.Колонки.Добавить("УровниБюджетов",
		Новый ОписаниеТипов("ПеречислениеСсылка.УровниБюджетов"));
	ТаблицаПроводок.Колонки.Добавить("Сумма",
		ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ТаблицаПроводок.Колонки.Добавить("Содержание",
		ОбщегоНазначения.ОписаниеТипаСтрока(150));
	
	Возврат ТаблицаПроводок;
	
КонецФункции

Процедура РассчитатьНалог(Реквизиты, ТаблицаПроводок, ТаблицыСправокРасчетов, ТаблицыПлатон, ДополнительныеПараметры, Ошибки, Отказ)
	
	ЭтоЮрЛицо = ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Реквизиты.Организация);
	ПрименяетсяУСНДоходыМинусРасходы = УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(
		Реквизиты.Организация, Реквизиты.Период);	
		
	РасчетПлатон = Неопределено;
	
	РезультатыРасчетаПоНалогу = Новый Структура;
	
	Если Реквизиты.ВидНалога = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество Тогда
		
		РезультатыРасчетаПоНалогу = РасчетИмущественныхНалогов.ПолучитьРасчетПоНалогуНаИмущество(Реквизиты.Организация, Реквизиты.Период, ДополнительныеПараметры);
		
		СчетКт = ПланыСчетов.Хозрасчетный.НалогНаИмущество;
		
		Если РезультатыРасчетаПоНалогу.Свойство("РасчетНалогаНаИущество") Тогда
			// До 2022 года применялся прежний расчет налога. Расчет по среднегодовой и кадастровой стоимости записывался 
			// в одну общую таблицу результата РасчетНалогаНаИущество. Расчет был чувствителен к дате регистрации права 
			// собственности. Поэтому выполняется проверка даты регистрации.
			// Новый расчет с 2022 года отсутствие даты регистрации собственности воспринимает как отсутствие органичения
			// периода владения "снизу". Поэтому проверка не требуется.
			СтрокиБезКоличестваМесяцевВладения = РезультатыРасчетаПоНалогу.РасчетНалогаНаИущество.НайтиСтроки(
				Новый Структура("ВидНалоговойБазы, КоличествоМесяцевВладения",
				Перечисления.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость, 0));

			Если СтрокиБезКоличестваМесяцевВладения.Количество() > 0 Тогда
				
				Для Каждого СтрокаТаблицы Из СтрокиБезКоличестваМесяцевВладения Цикл
					
					ШаблонСообщения = НСтр("ru = 'Не заполнена дата регистрации права собственности для объекта %1'");
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						ШаблонСообщения, Строка(СтрокаТаблицы.ОсновноеСредство));
					СсылкаДляПерехода = "e1cib/list/РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам";
					Ошибка = Новый Структура("ТекстСообщения, СсылкаДляПерехода", ТекстСообщения, СсылкаДляПерехода);
					Ошибки.Добавить(Ошибка);
					
				КонецЦикла;
				
				Отказ = Истина;
	
			КонецЕсли;

		КонецЕсли;
		
	ИначеЕсли Реквизиты.ВидНалога = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда
		
		РасчетыПоНалогу = РасчетИмущественныхНалогов.ПолучитьРасчетПоТранспортномуНалогу(Реквизиты.Организация, Реквизиты.Период, ДополнительныеПараметры);
		
		РасчетПоНалогу = РасчетыПоНалогу.Налог;
		РезультатыРасчетаПоНалогу.Вставить("РасчетТранспортногоНалога", РасчетПоНалогу);
		РасчетПлатон   = РасчетыПоНалогу.Платон;
		
		// Сообщим, если есть транспортные средства, по которым не определены ставки налога
		СтрокиБезСтавки = РасчетПоНалогу.НайтиСтроки(Новый Структура("ОтсутствуетСтавка", Истина));
		
		Если СтрокиБезСтавки.Количество() > 0 Тогда
					
			Ошибка = Новый Структура;
			Ошибка.Вставить("ТекстСообщения", НСтр("ru = 'По некоторым транспортным средствам не установлены ставки налога'"));
			Ошибка.Вставить("СсылкаДляПерехода", "e1cib/list/РегистрСведений.СтавкиТранспортногоНалога");
			Ошибка.Вставить("Локализация", НСтр("ru = 'Проверьте регистрацию следующих транспортных средств:'"));
			Ошибка.Вставить("Рекомендация", НСтр("ru = 'При необходимости добавьте ставки транспортного налога'"));
			
			ЛокализацияДетально = Новый ТаблицаЗначений;
			ЛокализацияДетально.Колонки.Добавить("Локализация", Новый ОписаниеТипов("Строка"));
			ЛокализацияДетально.Колонки.Добавить("Ссылка"); 
			
			ТранспортныеСредства = РасчетПоНалогу.Скопировать(СтрокиБезСтавки, "ОсновноеСредство");
			ТранспортныеСредства.Свернуть("ОсновноеСредство");
			
			Для Каждого ТранспортноеСредство Из ТранспортныеСредства Цикл
				ОшибкаПодробно = ЛокализацияДетально.Добавить();
				ОшибкаПодробно.Локализация = ТранспортноеСредство.ОсновноеСредство;
				ОшибкаПодробно.Ссылка = ПолучитьНавигационнуюСсылку(ТранспортноеСредство.ОсновноеСредство);
			КонецЦикла;	
			
			Ошибка.Вставить("ЛокализацияДетально", ЛокализацияДетально);
			Ошибки.Добавить(Ошибка);
			
			Отказ = Истина;
			
		КонецЕсли; 
		
		СчетКт = ПланыСчетов.Хозрасчетный.ТранспортныйНалог;
		
	ИначеЕсли Реквизиты.ВидНалога = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог Тогда
		
		РезультатыРасчетаПоНалогу = РасчетИмущественныхНалогов.ПолучитьРасчетПоЗемельномуНалогу(
			Реквизиты.Организация,
			Реквизиты.Период,
			ДополнительныеПараметры);
			
		СчетКт = ПланыСчетов.Хозрасчетный.ЗемельныйНалог;
		
	КонецЕсли;
	
	Объекты = Новый Массив;
	ЕстьРасчет = Ложь;
	Для Каждого РезультатРасчета Из РезультатыРасчетаПоНалогу Цикл
		
		ТаблицаРасчетНалога = РезультатРасчета.Значение;
		
		Если ТаблицаРасчетНалога.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		ЕстьРасчет = Истина;

		ТаблицаСправкиРасчета = ТаблицыСправокРасчетов[РезультатРасчета.Ключ];

		Для Каждого СтрокаТаблицы Из ТаблицаРасчетНалога Цикл
			НоваяСтрока = ТаблицаСправкиРасчета.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		КонецЦикла;
	
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Объекты, ТаблицаРасчетНалога.ВыгрузитьКолонку("ОсновноеСредство"), Истина);
	
	КонецЦикла;
	
	Если Не ЕстьРасчет Тогда
		Возврат;
	КонецЕсли;
		
	Если Не ЭтоЮрЛицо Тогда
		Возврат;
	КонецЕсли;
	
	СпособыОтраженияРасходов = СпособыОтраженияРасходовПоНалогам(
		Реквизиты.Организация, Объекты, Реквизиты.ВидНалога, Реквизиты.Период);
		
	Если СпособыОтраженияРасходов.Количество() = 0 Тогда
		
		ТекстСообщения = НСтр("ru = 'Не задано ни одного способа отражения расходов по налогу'");
		СсылкаДляПерехода = "e1cib/data/РегистрСведений.СпособыОтраженияРасходовПоНалогам";
		Ошибка = Новый Структура("ТекстСообщения, СсылкаДляПерехода", ТекстСообщения, СсылкаДляПерехода);
		Ошибки.Добавить(Ошибка);
		
		Отказ = Истина;
		
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// В 2020 году некоторые организации освобождены от уплаты имущественных налогов (за 2-й квартал). В этом случае рассчитать налог 
	// нужно в обычном порядке(требуется при заполнении декларации и/или справки-расчета налога), 
	// а уплачивать не нужно (проводки в части начисления налога за период освобождения не формируются).
	// Федеральный закон № 172-ФЗ от 08.06.2020
	
	// Для "освобожденных" организаций авансовый платеж за период освобождения (2-й квартал) рассчитывается в обычном порядке 
	// (для тех ИФНС, где платятся авансы), но проводки не формируются.
	ФормироватьПроводкиПоНалогу = Истина;
	Если ДополнительныеПараметры <> Неопределено Тогда
		ФормироватьПроводкиПоНалогу = Не ДополнительныеПараметры.Свойство("ПрименяетсяОсвобождениеОтУплатыНалогаВТекущемПериоде")
			Или Не ДополнительныеПараметры.ПрименяетсяОсвобождениеОтУплатыНалогаВТекущемПериоде;
	КонецЕсли;
	
	// Налог по результатам 2020 года для "освобожденных" организаций рассчитывается следующим образом:
	// Если организация уплачивает ежеквартальные авансы в каких-то регионах (ИФНС), 
	// то в расчете сумма освобождения от налога (СуммаОсвобожденияОтУплатыНалога) устанавливается равной авансовому платежу за 2-й квартал, 
	// а сам этот платеж принимается равным 0. 
	// Для тех регионов (ИФНС), где не уплачиваются авансы, сумма освобождения равна сумме налога за период освобождения (2-й квартал), 
	// рассчитанной аналогично авансу за такой период для тех, кто платит авансы.
	// В любом случае налог (аванс) к уплате за период (СуммаНалогаКУплате) уже уменьшен на сумму освобождения за 2-й квартал.
	Если ФормироватьПроводкиПоНалогу Тогда
	
		СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(СчетКт);
		
		Для Каждого РезультатРасчета Из РезультатыРасчетаПоНалогу Цикл
		
			ТаблицаРасчетНалога = РезультатРасчета.Значение;
		
			Для Каждого СтрокаТаблицы Из ТаблицаРасчетНалога Цикл
				
				Если СтрокаТаблицы.СуммаНалогаКУплате = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				СпособОтраженияРасходов = СпособыОтраженияРасходов[СтрокаТаблицы.ОсновноеСредство];
				
				Если СпособОтраженияРасходов = Неопределено Тогда
					
					ШаблонСообщения = НСтр("ru = 'Не установлен способ отражения расходов по налогу для объекта %1'");
					
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						ШаблонСообщения, Строка(СтрокаТаблицы.ОсновноеСредство));
					СсылкаДляПерехода = ПолучитьНавигационнуюСсылку(СтрокаТаблицы.ОсновноеСредство);
					
					Ошибка = Новый Структура("ТекстСообщения, СсылкаДляПерехода",
											ТекстСообщения, СсылкаДляПерехода);
											
					Ошибки.Добавить(Ошибка);
					
					Отказ = Истина;
					Продолжить;
					
				КонецЕсли;
				
				Если ПрименяетсяУСНДоходыМинусРасходы И НЕ ЗначениеЗаполнено(СпособОтраженияРасходов.ОтражениеВУСН) Тогда
					
					Отбор = Новый Структура;
					Отбор.Вставить("Период", СпособОтраженияРасходов.Период);
					Отбор.Вставить("ВидНалога", Реквизиты.ВидНалога);
					Если СпособОтраженияРасходов.ПорядокОпределенияСпособаОтражения = "ПоОсновнымСредствам" Тогда
						Отбор.Вставить("ОсновноеСредство", СтрокаТаблицы.ОсновноеСредство);
						Отбор.Вставить("Организация", Реквизиты.Организация);
					ИначеЕсли СпособОтраженияРасходов.ПорядокОпределенияСпособаОтражения = "ПоОрганизациям" Тогда
						Отбор.Вставить("ОсновноеСредство", Справочники.ОсновныеСредства.ПустаяСсылка());
						Отбор.Вставить("Организация", Реквизиты.Организация);
					Иначе
						Отбор.Вставить("ОсновноеСредство", Справочники.ОсновныеСредства.ПустаяСсылка());
						Отбор.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
					КонецЕсли;
					
					КлючЗаписи = РегистрыСведений.СпособыОтраженияРасходовПоНалогам.СоздатьКлючЗаписи(Отбор);
					
					Если Не КлючЗаписи.Пустой() Тогда
						
						ТекстСообщения = НСтр("ru = 'Не установлен порядок отражения в УСН в способе отражения расходов по налогу'");
						СсылкаДляПерехода = ПолучитьНавигационнуюСсылку(КлючЗаписи);
						
						Ошибка = Новый Структура("ТекстСообщения, СсылкаДляПерехода",
												ТекстСообщения, СсылкаДляПерехода);
						
						Ошибки.Добавить(Ошибка);
						
						Отказ = Истина;
						Продолжить;
						
					КонецЕсли;
					
				КонецЕсли;
				
				НоваяСтрока = ТаблицаПроводок.Добавить();
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Реквизиты);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СпособОтраженияРасходов, ,"Период");
				
				НоваяСтрока.Подразделение = СпособОтраженияРасходов.Подразделение;
				
				НоваяСтрока.СчетКт = СчетКт;
				НоваяСтрока.ВидыПлатежейВГосБюджет = Перечисления.ВидыПлатежейВГосБюджет.Налог;
				
				Для Ном = 1 По СвойстваСчетаКт.КоличествоСубконто Цикл
					СубконтоРегистрацияВНалоговомОргане = Ложь;
					НалоговыйУчетОбособленныхПодразделений.ОпределитьСубконтоРегистрацияВНалоговомОргане(
						СубконтоРегистрацияВНалоговомОргане,
						СвойстваСчетаКт["ВидСубконто" + Ном]);
					Если СубконтоРегистрацияВНалоговомОргане Тогда
						НоваяСтрока.РегистрацияВНалоговомОргане = СтрокаТаблицы.ИФНС;
					КонецЕсли;
				КонецЦикла;
					
				НоваяСтрока.Сумма = СтрокаТаблицы.СуммаНалогаКУплате;
				
			КонецЦикла;
		
		КонецЦикла;
		
	КонецЕсли;	
	
	ТаблицаПроводок.Свернуть("Период,Организация,Содержание,
	|СчетДт,Подразделение,Субконто1,Субконто2,Субконто3,ОтражениеВУСН,
	|СчетКт,ВидыПлатежейВГосБюджет,РегистрацияВНалоговомОргане", "Сумма");
	
	Если РасчетПлатон = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из РасчетПлатон Цикл
		
		Если СтрокаТаблицы.СуммаНУДт = 0 
			И СтрокаТаблицы.СуммаНУКт = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СпособОтраженияРасходов = СпособыОтраженияРасходов[СтрокаТаблицы.ОсновноеСредство];
		
		Если СпособОтраженияРасходов = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПрименяетсяУСНДоходыМинусРасходы И НЕ ЗначениеЗаполнено(СпособОтраженияРасходов.ОтражениеВУСН) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицыПлатон.РасходыНаПлатон.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Реквизиты);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		
		НоваяСтрока.Сумма = СтрокаТаблицы.СуммаНУКт;
		НоваяСтрока.СуммаРасхода = СтрокаТаблицы.СуммаНУДт;
		НоваяСтрока.ОтражениеВУСН = СпособОтраженияРасходов.ОтражениеВУСН;
		
		Если ПрименяетсяУСНДоходыМинусРасходы Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицыПлатон.Хозрасчетный.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Реквизиты);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СпособОтраженияРасходов, ,"Период");
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы, "СуммаНУДт, СуммаНУКт");
		
		СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(НоваяСтрока.СчетДт);
		
		Для Ном = 1 По СвойстваСчета.КоличествоСубконто Цикл
			Если СвойстваСчета["ВидСубконто" + Ном] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат Тогда
				НоваяСтрока["Субконто" + Ном] = Справочники.СтатьиЗатрат.ОсновнаяСтатьяЗатрат();
			КонецЕсли;
		КонецЦикла;
		
		НоваяСтрока.СчетКт = ПланыСчетов.Хозрасчетный.ПрочиеРасходыБудущихПериодов;
		НоваяСтрока.РасходыБудущихПериодов = Справочники.РасходыБудущихПериодов.РасходыНаПлатон;
		НоваяСтрока.Содержание = НСтр("ru = 'Отражен в расходах НУ платеж в систему ""Платон""'");
		
	КонецЦикла;
	
	ТаблицыПлатон.Хозрасчетный.Свернуть("Период,Организация,Содержание,
	|СчетДт,Подразделение,Субконто1,Субконто2,Субконто3,ОтражениеВУСН,
	|СчетКт,РасходыБудущихПериодов", "СуммаНУДт, СуммаНУКт");
	
КонецПроцедуры

Функция ПодготовитьПараметрыРасчетНалога(ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Период,"						// <Дата>
	+ "Организация,"				// <СправочникСсылка.Организации>
	+ "Регистратор,"				// <ДокументСсылка.*>
	+ "ВидНалога,"					// <Перечисление.ВидыИмущественныхНалогов>
	+ "Содержание"					// <Строка, 150>
	;
	
	Параметры.Вставить("Реквизиты", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

Функция ПодготовитьПараметрыДвиженийРасчетНалога(ТаблицаПроводок, ТаблицаПроводокПлатон, ТаблицаДвиженийПлатон, ТаблицаРеквизитов)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Период,"                  // <Дата>
	+ "Организация,"             // <СправочникСсылка.Организации>
	+ "Регистратор,"             // <ДокументСсылка.*>
	+ "ВидНалога"               // <ПеречислениеСсылка.ВидыИмущественныхНалогов>
	;
	
	Параметры.Вставить("Реквизиты", 
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизитов, СписокОбязательныхКолонок));
		
	СписокОбязательныхКолонок = ""
	+ "Период,"						// <Дата> - период проводок
	+ "Организация,"				// <СправочникСсылка.Организации>
	+ "СчетДт,"						// <ПланСчетовСсылка.Хозрасчетный>
	+ "Подразделение,"				// <СправочникСсылка.ПодразделенияОрганизаций>
	+ "Субконто1,"              	// <Характеристика.ВидыСубконтоХозрасчетные>
	+ "Субконто2,"              	// <Характеристика.ВидыСубконтоХозрасчетные>
	+ "Субконто3,"              	// <Характеристика.ВидыСубконтоХозрасчетные>
	+ "СчетКт,"						// <ПланСчетовСсылка.Хозрасчетный>
	+ "ВидыПлатежейВГосБюджет,"		// <ПеречислениеСсылка.ВидыПлатежейВГосБюджет>
	+ "РегистрацияВНалоговомОргане,"// <СправочникСсылка.РегистрацииВНалоговомОргане>
	+ "Сумма,"						// <Число, 15, 0> - сумма проводки
	+ "Содержание";					// <Строка, 150> - содержание проводки
		
	Параметры.Вставить("Проводки", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаПроводок, СписокОбязательныхКолонок));
		
	СписокОбязательныхКолонок = ""
	+ "Период,"						// <Дата> - период проводок
	+ "Организация,"				// <СправочникСсылка.Организации>
	+ "СчетДт,"						// <ПланСчетовСсылка.Хозрасчетный>
	+ "Подразделение,"				// <СправочникСсылка.ПодразделенияОрганизаций>
	+ "Субконто1,"              	// <Характеристика.ВидыСубконтоХозрасчетные>
	+ "Субконто2,"              	// <Характеристика.ВидыСубконтоХозрасчетные>
	+ "Субконто3,"              	// <Характеристика.ВидыСубконтоХозрасчетные>
	+ "СчетКт,"						// <ПланСчетовСсылка.Хозрасчетный>
	+ "РасходыБудущихПериодов,"		// <ПеречислениеСсылка.РасходыБудущихПериодов>
	+ "СуммаНУДт,"					// <Число, 15, 0> - сумма проводки по НУ Дт
	+ "СуммаНУКт,"					// <Число, 15, 0> - сумма проводки по НУ Кт
	+ "Содержание";					// <Строка, 150> - содержание проводки
		
	Параметры.Вставить("ПроводкиПлатон", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаПроводокПлатон, СписокОбязательныхКолонок));
		
	СписокОбязательныхКолонок = ""
	+ "Период,"                        // <Дата> - период проводок
	+ "Организация,"                   // <СправочникСсылка.Организации>
	+ "ОсновноеСредство,"              // <СправочникСсылка.ОсновныеСредства>
	+ "СчетУчета,"                     // <ПланСчетовСсылка.Хозрасчетный>
	+ "Подразделение,"                 // <СправочникСсылка.ПодразделенияОрганизаций>
	+ "Контрагент,"                    // <СправочникСсылка.Контрагенты>
	+ "ДоговорКонтрагента,"            // <СправочникСсылка.ДоговорыКонтрагентов>
	+ "ДокументРасчетовСКонтрагентом," // <ДокументСсылка>
	+ "Сумма";                         // <Число, 15, 0> - сумма проводки
		
	Параметры.Вставить("РасходыНаПлатон", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаДвиженийПлатон, СписокОбязательныхКолонок));
		
	Возврат Параметры;
	
КонецФункции

#КонецОбласти

#КонецОбласти