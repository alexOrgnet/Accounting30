// @strict-types

#Область ПрограммныйИнтерфейс

// Переопределение обработчика события формы "ПриСозданииНаСервере".
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма для размещения рекламы.
//  ПараметрРекламногоСервиса - см. РекламныйСервис.НовыйПараметрРекламногоСервиса.
//
// Пример: 
// Если ОбщегоНазначения.ПодсистемаСуществует("БухгалтерияПредприятияПодсистемы") Тогда
//		
//		Модуль = ОбщегоНазначения.ОбщийМодуль("ОбщегоНазначенияБП");
//		Если Модуль.ЭтоБизнесСтарт() Тогда
//			ИспользоватьРекламныйСервис = Ложь;
//			Возврат;
//		КонецЕсли;
//		
//	КонецЕсли;
//
//@skip-check module-empty-method
Процедура ПриСозданииНаСервере(Знач Форма, ПараметрРекламногоСервиса) Экспорт
	
КонецПроцедуры

// Текущий профиль потребителя - текущий пользователь.
//
// Пример :
//
//	Пользователь = Метаданные.ОпределяемыеТипы.ПрофильПотребителяРекламы.Тип.ПривестиЗначение(Неопределено);
//	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Пользователи") Тогда
//		МодульПользователи = ОбщегоНазначения.ОбщийМодуль("Пользователи");
//		Пользователь = МодульПользователи.ТекущийПользователь();
//	КонецЕсли;
//	Результат.Добавить(Пользователь);
//
// Параметры:
//  Результат - Массив из ОпределяемыйТип.ПрофильПотребителяРекламы
//
Процедура ТекущийПрофильПотребителя(Результат) Экспорт
	
	РекламныйСервисБП.ТекущийПрофильПотребителя(Результат);
	
КонецПроцедуры

// Идентификатор пользователя ИБ
// 
// Параметры:
//  ПрофильПотребителяРекламы - ОпределяемыйТип.ПрофильПотребителяРекламы
// 
// Возвращаемое значение:
//  Строка - представление идентификатора пользователя ИБ.
//
// Пример: 
//
// Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Пользователи") Тогда
//		МодульПользователи = ОбщегоНазначения.ОбщийМодуль("Пользователи");
//		ПользовательИнформационнойБазы = МодульПользователи.НайтиПоСсылке(ПрофильПотребителяРекламы);
//		Если ПользовательИнформационнойБазы <> Неопределено Тогда
//			Идентификатор = Строка(ПользовательИнформационнойБазы.УникальныйИдентификатор);
//		КонецЕсли;
//	КонецЕсли;
//
Функция ИдентификаторПользователяИБПоПрофилюПотребителя(Знач ПрофильПотребителяРекламы) Экспорт
	
	Возврат РекламныйСервисБП.ИдентификаторПользователяИБПоПрофилюПотребителя(ПрофильПотребителяРекламы);
	
КонецФункции

// Список разрешенных организаций текущему пользователю с учетом RLS.
// 
// Параметры:
//  Результат - Массив из ОпределяемыйТип.ВладелецХарактеристикиРекламы - ссылки на разрешенные организации.
//  
//  Пример:
//    Результат.Добавить(Организация);
// 
//@skip-warning
Процедура СписокРазрешенныхОрганизаций(Результат) Экспорт
	
	РекламныйСервисБП.СписокРазрешенныхОрганизаций(Результат);
	
КонецПроцедуры

#Область ОпределениеХарактеристик

#Область ХарактеристикиПотребителя

// В результат добавляются элементы где значение массив строк - коды регионов.
// 
// Параметры:
//  ВладельцыХарактеристики - Массив из ОпределяемыйТип.ВладелецХарактеристикиРекламы
//  Результат - Соответствие из КлючИЗначение:
//  * Ключ - ОпределяемыйТип.ВладелецХарактеристикиРекламы
//  * Значение - Массив из Строка - список кодов регионов.
//
Процедура ЗаполнитьРегионыПоказа(Знач ВладельцыХарактеристики, Результат) Экспорт
	РекламныйСервисБП.ЗаполнитьРегионыПоказа(ВладельцыХарактеристики, Результат);
КонецПроцедуры

// В результат поместить значение среднесписочной численности тип "Число".
// 
// Параметры:
//  ВладельцыХарактеристики - Массив из ОпределяемыйТип.ВладелецХарактеристикиРекламы
//  ПараметрыПериода - см. РегистрыСведений.ЗначенияХарактеристикПотребителяРекламы.НовыйПараметрыПериода
//  Результат - Соответствие из КлючИЗначение:
//  * Ключ - ОпределяемыйТип.ВладелецХарактеристикиРекламы
//  * Значение - Число
//
Процедура ЗаполнитьРазмерПредприятияЧисленность(Знач ВладельцыХарактеристики, ПараметрыПериода, Результат) Экспорт
	РекламныйСервисБП.ЗаполнитьРазмерПредприятияЧисленность(ВладельцыХарактеристики, ПараметрыПериода, Результат);
КонецПроцедуры

// В результат поместить значение суммы дохода тип "Число".
// 
// Параметры:
//  ВладельцыХарактеристики - Массив из ОпределяемыйТип.ВладелецХарактеристикиРекламы
//  ПараметрыПериода - см. РегистрыСведений.ЗначенияХарактеристикПотребителяРекламы.НовыйПараметрыПериода
//  Результат - Соответствие из КлючИЗначение:
//  * Ключ - ОпределяемыйТип.ВладелецХарактеристикиРекламы
//  * Значение - Строка
//
Процедура ЗаполнитьРазмерПредприятияДоход(Знач ВладельцыХарактеристики, ПараметрыПериода, Результат) Экспорт
	РекламныйСервисБП.ЗаполнитьРазмерПредприятияДоход(ВладельцыХарактеристики, ПараметрыПериода, Результат);
КонецПроцедуры

// В результат поместить значение суммы оборота тип "Число".
// 
// Параметры:
//  ВладельцыХарактеристики - Массив из ОпределяемыйТип.ВладелецХарактеристикиРекламы
//  ПараметрыПериода - см. РегистрыСведений.ЗначенияХарактеристикПотребителяРекламы.НовыйПараметрыПериода
//  Результат - Соответствие из КлючИЗначение:
//  * Ключ - ОпределяемыйТип.ВладелецХарактеристикиРекламы
//  * Значение - Строка
//
Процедура ЗаполнитьРазмерПредприятияОборотПоСчетам(Знач ВладельцыХарактеристики, ПараметрыПериода, Результат) Экспорт
	РекламныйСервисБП.ЗаполнитьРазмерПредприятияОборотПоСчетам(ВладельцыХарактеристики, ПараметрыПериода, Результат);
КонецПроцедуры

// В результат поместить сумму основных средств тип "Число".
// 
// Параметры:
//  ВладельцыХарактеристики - Массив из ОпределяемыйТип.ВладелецХарактеристикиРекламы
//  ПараметрыПериода - см. РегистрыСведений.ЗначенияХарактеристикПотребителяРекламы.НовыйПараметрыПериода
//  Результат - Соответствие из КлючИЗначение:
//  * Ключ - ОпределяемыйТип.ВладелецХарактеристикиРекламы
//  * Значение - Строка
//
Процедура ЗаполнитьОсновныеСредства(Знач ВладельцыХарактеристики, ПараметрыПериода, Результат) Экспорт
	РекламныйСервисБП.ЗаполнитьОсновныеСредства(ВладельцыХарактеристики, ПараметрыПериода, Результат);
КонецПроцедуры

// В результат поместить дату регистрации организации тип "Дата".
// 
// Параметры:
//  ВладельцыХарактеристики - Массив из ОпределяемыйТип.ВладелецХарактеристикиРекламы
//  Результат - Соответствие из КлючИЗначение:
//  * Ключ - ОпределяемыйТип.ВладелецХарактеристикиРекламы
//  * Значение - Строка
//
Процедура ДатаРегистрацииПредприятия(Знач ВладельцыХарактеристики, Результат) Экспорт
	РекламныйСервисБП.ДатаРегистрацииПредприятия(ВладельцыХарактеристики, Результат);
КонецПроцедуры

// В результат поместить дату рождения физического лица ИП тип "Дата".
// 
// Параметры:
//  ВладельцыХарактеристики - Массив из ОпределяемыйТип.ВладелецХарактеристикиРекламы
//  Результат - Соответствие из КлючИЗначение:
//  * Ключ - ОпределяемыйТип.ВладелецХарактеристикиРекламы
//  * Значение - Строка
//
Процедура ДатаРожденияИП(Знач ВладельцыХарактеристики, Результат) Экспорт
	РекламныйСервисБП.ДатаРожденияИП(ВладельцыХарактеристики, Результат);
КонецПроцедуры

// В результат поместить количество документов командировочных тип "Число".
// 
// Параметры:
//  ВладельцыХарактеристики - Массив из ОпределяемыйТип.ВладелецХарактеристикиРекламы
//  ПараметрыПериода - см. РегистрыСведений.ЗначенияХарактеристикПотребителяРекламы.НовыйПараметрыПериода
//  Результат - Соответствие из КлючИЗначение:
//  * Ключ - ОпределяемыйТип.ВладелецХарактеристикиРекламы
//  * Значение - Строка
//
Процедура ЗаполнитьУчетКомандировок(Знач ВладельцыХарактеристики, ПараметрыПериода, Результат) Экспорт
	РекламныйСервисБП.ЗаполнитьУчетКомандировок(ВладельцыХарактеристики, ПараметрыПериода, Результат);
КонецПроцедуры

// В результат поместить количество кредитных договоров тип "Число".
// 
// Параметры:
//  ВладельцыХарактеристики - Массив из ОпределяемыйТип.ВладелецХарактеристикиРекламы
//  ПараметрыПериода - см. РегистрыСведений.ЗначенияХарактеристикПотребителяРекламы.НовыйПараметрыПериода
//  Результат - Соответствие из КлючИЗначение:
//  * Ключ - ОпределяемыйТип.ВладелецХарактеристикиРекламы
//  * Значение - Строка
//
Процедура ЗаполнитьКоличествоКредитныхДоговоров(Знач ВладельцыХарактеристики, ПараметрыПериода, Результат) Экспорт
	РекламныйСервисБП.ЗаполнитьКоличествоКредитныхДоговоров(ВладельцыХарактеристики, ПараметрыПериода, Результат);
КонецПроцедуры

// В результат добавить элементы со значением Код ОКОПФ тип "Строка".
// 
// Параметры:
//  ВладельцыХарактеристики - Массив из ОпределяемыйТип.ВладелецХарактеристикиРекламы
//  Результат - Соответствие из КлючИЗначение:
//  * Ключ - ОпределяемыйТип.ВладелецХарактеристикиРекламы
//  * Значение - Строка
//
Процедура ЗаполнитьОКОПФ(Знач ВладельцыХарактеристики, Результат) Экспорт
	РекламныйСервисБП.ЗаполнитьОКОПФ(ВладельцыХарактеристики, Результат);
КонецПроцедуры

// В результат добавить элементы со значением код ОКВЭД тип "Строка".
// 
// Параметры:
//  ВладельцыХарактеристики - Массив из ОпределяемыйТип.ВладелецХарактеристикиРекламы
//  Результат - Соответствие из КлючИЗначение:
//  * Ключ - ОпределяемыйТип.ВладелецХарактеристикиРекламы
//  * Значение - Строка
//
Процедура ЗаполнитьКодыОКВЭД(Знач ВладельцыХарактеристики, Результат) Экспорт
	РекламныйСервисБП.ЗаполнитьКодыОКВЭД(ВладельцыХарактеристики, Результат);
КонецПроцедуры

// В результат поместить значение характеристики, выбрать из параметра ДопустимыеЗначения тип "Строка".
// 
// Параметры:
//  ВладельцыХарактеристики - Массив из ОпределяемыйТип.ВладелецХарактеристикиРекламы
//  ДопустимыеЗначения - см. РегистрыСведений.ЗначенияХарактеристикПотребителяРекламы.СИСТЕМА_НАЛОГООБЛОЖЕНИЯ
//  ПараметрыПериода - см. РегистрыСведений.ЗначенияХарактеристикПотребителяРекламы.НовыйПараметрыПериода
//  Результат - Соответствие из КлючИЗначение:
//  * Ключ - ОпределяемыйТип.ВладелецХарактеристикиРекламы
//  * Значение - Массив Из Строка - массив допустимых значений. Например УСН и Патент.
//
Процедура ЗаполнитьСистемуНалогообложения(
		Знач ВладельцыХарактеристики, Знач ДопустимыеЗначения, ПараметрыПериода, Результат) Экспорт
	РекламныйСервисБП.ЗаполнитьСистемуНалогообложения(
		ВладельцыХарактеристики, ДопустимыеЗначения, ПараметрыПериода, Результат);
КонецПроцедуры

// В результат поместить значение характеристики, выбрать из параметра ДопустимыеЗначения тип "Строка".
//  Например: 
//  Результат = ДопустимыеЗначения.БП_Садовод;
// 
// Параметры:
//  ДопустимыеЗначения - см. РегистрыСведений.ЗначенияХарактеристикПотребителяРекламы.ГРУППА_КОНФИГУРАЦИЙ
//  Результат - Строка
//
Процедура ЗаполнитьГруппаКонфигураций(Знач ДопустимыеЗначения, Результат) Экспорт
	РекламныйСервисБП.ЗаполнитьГруппаКонфигураций(ДопустимыеЗначения, Результат);
КонецПроцедуры

#КонецОбласти

#Область ХарактеристикиКонфигурации

// Заполнить версию ПП.
// 
// Параметры:
//  ДопустимыеЗначения - см. РегистрыСведений.ЗначенияХарактеристикПотребителяРекламы.ВЕРСИЯ_ПП
//  Результат - Строка
//
Процедура ЗаполнитьВерсиюПП(Знач ДопустимыеЗначения, Результат) Экспорт
	РекламныйСервисБП.ЗаполнитьВерсиюПП(ДопустимыеЗначения, Результат);
КонецПроцедуры

// Заполнить траф в режиме сервиса.
// 
// Параметры:
//  ДопустимыеЗначения - см. РегистрыСведений.ЗначенияХарактеристикПотребителяРекламы.ТАРИФЫ_В_РЕЖИМЕ_СЕРВИСА
//  Результат - Строка
//
Процедура ЗаполнитьТрафВРежимеСервиса(Знач ДопустимыеЗначения, Результат) Экспорт
	РекламныйСервисБП.ЗаполнитьТрафВРежимеСервиса(ДопустимыеЗначения, Результат);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти