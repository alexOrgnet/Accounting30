// @strict-types

#Область СлужебныйПрограммныйИнтерфейс

// Получить статусы опций ИТС.
// 
// Параметры:
//  ОпцииИТС - Строка
// 
// Возвращаемое значение:
//  ТаблицаЗначений - см. НовыйТаблицаСтатусовОпцийИТС
//
Функция СтатусыОпцийИТС(ОпцииИТС) Экспорт
	
	ОпцииИТСВТаргетах = Новый Массив; // Массив из ОпределяемыйТип.ЗначениеХарактеристикиРекламы
	МассивЗначений = СтрРазделить(ОпцииИТС, ",");
	
	Для Каждого ИмяОпции Из МассивЗначений Цикл
		
		Если ОпцииИТСВТаргетах.Найти(ИмяОпции) = Неопределено Тогда
			ОпцииИТСВТаргетах.Добавить(ИмяОпции);
		КонецЕсли;
		
	КонецЦикла;
	
	СтатусыОпцийИТС = РегистрыСведений.ЗначенияХарактеристикРекламы.НовыйТаблицаСтатусовОпцийИТС();
	
	ПараметрыЗапроса = ПараметрыЗапросаСтатусыОпцийИТС(ОпцииИТСВТаргетах, Истина);
	Если Не ПустаяСтрока(ПараметрыЗапроса) Тогда
		
		ЗапросСтатусыСервисовИТС = РекламныйСервисСлужебный.ЗапросСтатусыСервисовИТС(ПараметрыЗапроса);
		Ответ = РекламныйСервисСлужебный.ВыполнитьЗапрос(ЗапросСтатусыСервисовИТС);
		Если Не Ответ.Отказ Тогда
			СтатусыОпцийИТСИзДанныхСервиса(Ответ.Данные, СтатусыОпцийИТС);
		КонецЕсли;
		
	КонецЕсли;
	
	СтатусыОпцийИТС.Сортировать("ИмяОпции");
	
	Возврат СтатусыОпцийИТС;
	
КонецФункции

// Варианты частоты обновления характеристики.
// 
// Возвращаемое значение:
//  Структура:
// * День - Строка
// * Месяц - Строка
// * Год - Строка
//
Функция ВариантыЧастотыОбновленияХарактеристики() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("День", "День");
	Результат.Вставить("Месяц", "Месяц");
	Результат.Вставить("Год", "Год");
	
	Возврат Результат;
	
КонецФункции

// Использование рекламного сервиса запрещено.
// Для версий ПП кроме Базовой использование РС запрещено на первом этапе внедрения.
// 
// Возвращаемое значение:
//  Булево
//
Функция ИспользованиеРекламногоСервисаЗапрещено() Экспорт
	
	Результат = Истина;
	
	Если ОбщегоНазначения.РазделениеВключено() 
		Или Не РекламныйСервисСлужебный.ДоменРасположенияСерверовИППРФ() Тогда
		Возврат Результат;
	КонецЕсли;
	
	ДопустимыеЗначения = РегистрыСведений.ЗначенияХарактеристикПотребителяРекламы.ВЕРСИЯ_ПП();
	ВерсияПП = "";
	
	УстановитьПривилегированныйРежим(Истина);
	РекламныйСервисПереопределяемый.ЗаполнитьВерсиюПП(ДопустимыеЗначения, ВерсияПП);
	УстановитьПривилегированныйРежим(Ложь);
	
	Если ВерсияПП = ДопустимыеЗначения.БАЗОВАЯ Тогда
		Результат = Ложь;
		Возврат Результат;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Список разрешенных организаций.
// 
// Возвращаемое значение:
//  Массив из ОпределяемыйТип.ВладелецХарактеристикиРекламы - Список разрешенных организаций.
//
Функция СписокРазрешенныхОрганизаций() Экспорт
	
	СписокОрганизаций = Новый Массив;
	РекламныйСервисПереопределяемый.СписокРазрешенныхОрганизаций(СписокОрганизаций);
	
	Возврат СписокОрганизаций;
	
КонецФункции

// Текущий профиль потребителя.
// 
// Возвращаемое значение:
//  Массив из ОпределяемыйТип.ПрофильПотребителяРекламы -  Текущий профиль потребителя
//
Функция ТекущийПрофильПотребителя() Экспорт
	
	СписокПотребителей = Новый Массив; // Массив из ОпределяемыйТип.ПрофильПотребителяРекламы
	
	УстановитьПривилегированныйРежим(Истина);
	РекламныйСервисПереопределяемый.ТекущийПрофильПотребителя(СписокПотребителей);
	УстановитьПривилегированныйРежим(Ложь);
	
	ОбщегоНазначенияКлиентСервер.Проверить(
		СписокПотребителей.Количество() <> 0, 
		НСтр("ru = 'Профиль потребителя не указан.'"), 
		"РекламныйСервисСлужебный.ТекущийПрофильПотребителя");
	
	ТекущийПрофильПотребителя = СписокПотребителей[0];
	ПрофильСсылка = Метаданные.ОпределяемыеТипы.ПрофильПотребителяРекламы.Тип.ПривестиЗначение(
		ТекущийПрофильПотребителя); // ОпределяемыйТип.ПрофильПотребителяРекламы
	
	ОбщегоНазначенияКлиентСервер.Проверить(
		Не ПрофильСсылка.Пустая(), 
		НСтр("ru = 'Профиль потребителя пустой.'"), 
		"РекламныйСервисСлужебный.ТекущийПрофильПотребителя");
		
	Возврат СписокПотребителей;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Конструкторы

// Новый параметры запроса статусы опций ИТС.
// 
// Возвращаемое значение:
//  Структура:
// * includeExpired - Булево - получить историю опции.
// * optionTypeNickNames - Массив из ОпределяемыйТип.ЗначениеХарактеристикиРекламы
// * ticket - Строка - тикет интернет поддержки ИТС.
//
Функция НовыйПараметрыЗапросаСтатусыОпцийИТС()
	
	Результат = Новый Структура;
	Результат.Вставить("includeExpired", Ложь);
	Результат.Вставить("optionTypeNickNames", Новый Массив);
	Результат.Вставить("ticket", "");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

// Новый параметры запроса статусы опций ИТС.
// 
// Параметры:
//  ОпцииИТСВТаргетахРекламы - Массив из ОпределяемыйТип.ЗначениеХарактеристикиРекламы
//  ПолучитьИсториюОпции - Булево
// 
// Возвращаемое значение:
//  Строка - Новый параметры запроса статусы опций ИТС
//
Функция ПараметрыЗапросаСтатусыОпцийИТС(ОпцииИТСВТаргетахРекламы, ПолучитьИсториюОпции)
	
	Результат = "";
	
	УстановитьПривилегированныйРежим(Истина);
	ТикетАутентификации = ИнтернетПоддержкаПользователей.ТикетАутентификацииНаПорталеПоддержки("AdvertisingBanner");
	УстановитьПривилегированныйРежим(Ложь);
	
	Если ТикетАутентификации.Тикет = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;
	
	ДанныеЗапроса = НовыйПараметрыЗапросаСтатусыОпцийИТС();
	ДанныеЗапроса.includeExpired = ПолучитьИсториюОпции;
	ДанныеЗапроса.optionTypeNickNames = ОпцииИТСВТаргетахРекламы;
	ДанныеЗапроса.ticket = ТикетАутентификации.Тикет;
	
	Результат = РекламныйСервисСлужебный.ЗначениеВJSON(ДанныеЗапроса);
	
	Возврат Результат;
	
КонецФункции

// Статусы опций ИТСИз модели сервиса.
// 
// Параметры:
//  ДанныеСервиса - Массив из Структура:
//   * applicationNick - Строка - Имя сервиса
//   * applicationUeid - Строка - Идентификатор сервиса
//   * optionPackageEndDate - Дата - Дата окончания опции
//   * optionPackageStartDate - Дата - Дата начала опции
//   * optionTypeNickName - Строка - Имя опции
//   * optionTypeNickUeid - Строка - Идентификатор опции
//  Таблица - см. НовыйТаблицаСтатусовОпцийИТС
//
Процедура СтатусыОпцийИТСИзДанныхСервиса(ДанныеСервиса, Таблица)
	
	Для Каждого СтрокаДанных Из ДанныеСервиса Цикл 
		
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.ИмяСервиса = СтрокаДанных.applicationNick;
		НоваяСтрока.ИдентификаторСервиса = СтрокаДанных.applicationUeid;
		НоваяСтрока.ДатаОкончанияОпции = СтрокаДанных.optionPackageEndDate;
		НоваяСтрока.ДатаНачалаОпции = СтрокаДанных.optionPackageStartDate;
		НоваяСтрока.ИмяОпции = СтрокаДанных.optionTypeNickName;
		НоваяСтрока.ИдентификаторОпции = СтрокаДанных.optionTypeNickUeid;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
