
#Область ПрограммныйИнтерфейс

// Открывает форму, содержащую информацию об использовании недоступной функциональности
//
Процедура ПоказатьПредупреждениеОбИспользованииНедоступнойФункциональности(Параметры) Экспорт
	
	ВозможнаВыборочнаяБлокировка = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
		Параметры, "ВыборочнаяБлокировкаНедоступнойФункциональности", Ложь);
	ИспользуетсяНедоступнаяСистемаНалогообложения = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
		Параметры, "ИспользуетсяНедоступнаяСистемаНалогообложения", Ложь);
	ИспользуетсяНедоступныйВидОрганизации = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
		Параметры, "ИспользуетсяНедоступныйВидОрганизации", Ложь);
		
	Если ВозможнаВыборочнаяБлокировка
		И Не ИспользуетсяНедоступнаяСистемаНалогообложения
		И Не ИспользуетсяНедоступныйВидОрганизации Тогда
		СкрытьПредупреждение = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
			Параметры, "СкрытьПредупреждениеОНедоступныхДокументах", Ложь);
		Если Не СкрытьПредупреждение Тогда
			ОткрытьФорму("Обработка.ФункциональностьПрограммы.Форма.НедоступныеДокументы");
		КонецЕсли;
	Иначе
		ОткрытьФорму("Обработка.ФункциональностьПрограммы.Форма.ИспользуетсяНедоступнаяФункциональность");
	КонецЕсли;
	
	
КонецПроцедуры

// Открывает форму, на которой отображены объекты, препятствующие отключению функциональной опции
//
// Параметры:
//  Элемент - Полеформы - элемент формы, имя которого состоит из имени заголовка, означающего группу в которую входит элемент,
//                        и имени функциональной опции, для которой требуется проверить объекты, блокирующие её отключение
//  ИмяЗаголовка - Строка - часть имени элемента, определяющая группу, в которую входит элемент
//  ФормаВладелец - ФормаКлиентскогоПриложения - форма из которой вызвана данная процедура
//  ОповещениеЗакрытия - ОписаниеОповещения, Неопределено - оповещение, которое будет вызвано после закрытия формы.
//                       Принимает значение Неопределено, если после закрытия формы не требуется выполнять никаких действий
//
Процедура ПоказатьОбъектыПрепятствующиеОтключениюОпции(Элемент, ИмяЗаголовка, ФормаВладелец, ОповещениеЗакрытия = Неопределено) Экспорт
	
	Если ИмяЗаголовка = "Главное" Тогда
		ПоказыватьСинхронизациюДляОпций = Ложь;
		ИспользуетсяСинхронизацияДанных = Ложь;
	Иначе
		ПоказыватьСинхронизациюДляОпций = Истина;
		ИспользуетсяСинхронизацияДанных = ФункциональностьПрограммыВызовСервера.ИспользуетсяСинхронизацияДанных();
	КонецЕсли;
	
	ИмяЭлемента = СтрЗаменить(Элемент.Имя, ИмяЗаголовка, "");
	
	ПустаяОрганизация = ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка");
	Если ИмяЭлемента = "ВестиУчетРасчетовСКонтрагентами" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец, , ОповещениеЗакрытия);
		Иначе
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ВестиУчетРасчетовСКонтрагентами", ФормаВладелец, ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ВедетсяУчетДенежныхДокументов" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
			"ВедетсяУчетДенежныхДокументов", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ИспользоватьСтатьиДвиженияДенежныхСредств" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
			"ИспользоватьСтатьиДвиженияДенежныхСредств", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ВедетсяУчетОсновныхСредств" Тогда
		ОткрытьФормуОбъекта("Справочник.ОсновныеСредства.ФормаСписка", ФормаВладелец, , ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ВедетсяУчетСдачиИмуществаВАренду" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
			"ВедетсяУчетСдачиИмуществаВАренду", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ВедетсяУчетПредметовАренды" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
			"ВедетсяУчетПредметовАренды", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ВедетсяУчетЛизинговогоИмущества" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
			"ВедетсяУчетЛизинговогоИмущества", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ВедетсяУчетГрупповыхОС" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
			"ВедетсяУчетГрупповыхОС", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "КомпонентыАмортизацииОС" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
			"КомпонентыАмортизацииОС", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ВедетсяУчетНМА" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
			"ВедетсяУчетНМА", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ВедетсяУчетСпецодеждыСпецоснастки" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		Иначе
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ВедетсяУчетСпецодеждыСпецоснастки", ФормаВладелец, ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ИспользоватьНазначениеИспользованияСпецодежды" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
			"ИспользоватьНазначениеИспользованияСпецодежды", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ИспользоватьКомплектациюНоменклатуры" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		Иначе
			ЗначениеОтбора  = Новый Структура("Организация", ПустаяОрганизация);
			ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
			ОткрытьФормуОбъекта(
				"Документ.КомплектацияНоменклатуры.ФормаСписка", ФормаВладелец, ПараметрыФормы, ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ВедетсяУчетИмпортныхТоваров" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		Иначе
			ОткрытьФормуОбъекта("Справочник.НомераГТД.ФормаСписка", ФормаВладелец, , ОповещениеЗакрытия);
		КонецЕсли;
		
	ИначеЕсли ИмяЭлемента = "ВедетсяУчетИмпортаТоваров" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		Иначе
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ВедетсяУчетИмпортаТоваров", ФормаВладелец, ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ВестиУчетПрослеживаемыхТоваров" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		Иначе
			ЗначениеОтбора = Новый Структура(
				"ПрослеживаемыйТовар",
				Истина);
			ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
			ОткрытьФормуОбъекта("Справочник.Номенклатура.Форма.ФормаСписка", ФормаВладелец, ПараметрыФормы, ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ИспользоватьДоставкуТранспортнойКомпанией" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
			"ИспользоватьДоставкуТранспортнойКомпанией", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ОсуществляетсяРеализацияТоваровУслугКомитентов" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта("Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		Иначе
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ОсуществляетсяРеализацияТоваровУслугКомитентов", ФормаВладелец, ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ИспользоватьПродажиЧерезМаркетплейс" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		Иначе
			СписокЗначений = Новый СписокЗначений;
			СписокЗначений.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером"));
			ЗначениеОтбора = Новый Структура("ВидДоговора, Организация", СписокЗначений, ПустаяОрганизация);
			ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
			ОткрытьФормуОбъекта(
				"Справочник.ДоговорыКонтрагентов.Форма.ФормаСписка", ФормаВладелец, ПараметрыФормы, ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ОсуществляетсяРеализацияТоваровУслугЧерезКомиссионеров" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		ИначеЕсли ФункциональностьПрограммыВызовСервера.ВключеныПродажиЧерезМаркетплейс() Тогда
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ОсуществляетсяРеализацияТоваровУслугЧерезКомиссионеров", ФормаВладелец, ОповещениеЗакрытия);
		Иначе
			СписокЗначений = Новый СписокЗначений;
			СписокЗначений.Добавить(ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СКомиссионером"));
			ЗначениеОтбора = Новый Структура("ВидДоговора, Организация", СписокЗначений, ПустаяОрганизация);
			ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
			ОткрытьФормуОбъекта(
				"Справочник.ДоговорыКонтрагентов.Форма.ФормаСписка", ФормаВладелец, ПараметрыФормы, ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ОсуществляетсяЗакупкаТоваровУслугДляКомитентов" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		Иначе
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ОсуществляетсяЗакупкаТоваровУслугДляКомитентов", ФормаВладелец, ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ОсуществляетсяЗакупкаТоваровУслугЧерезКомиссионеров" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		Иначе
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ОсуществляетсяЗакупкаТоваровУслугЧерезКомиссионеров", ФормаВладелец, ОповещениеЗакрытия);
		КонецЕсли;		
	ИначеЕсли ИмяЭлемента = "ИспользоватьОплатуПоПлатежнымКартам" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		Иначе
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ИспользоватьОплатуПоПлатежнымКартам", ФормаВладелец, ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ИспользоватьПлатежиПоРеестрам" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		Иначе
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ИспользоватьПлатежиПоРеестрам", ФормаВладелец, ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ИспользоватьПакетноеВыставлениеАктов" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ИспользоватьПакетноеВыставлениеАктов", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ИспользоватьНачислениеНДССМежценовойРазницы" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ИспользоватьНачислениеНДССМежценовойРазницы", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ВедетсяРозничнаяТорговля" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		Иначе
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ВедетсяРозничнаяТорговля", ФормаВладелец, ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ИспользоватьПредоплатыВРознице" Тогда
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ИспользоватьПредоплатыВРознице", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ИспользуютсяПодарочныеСертификаты" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
			"ИспользуютсяПодарочныеСертификаты", ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ВедетсяУчетРозничнойПродажиАлкогольнойПродукцииПива" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		Иначе
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ВедетсяУчетРозничнойПродажиАлкогольнойПродукцииПива", ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ВедетсяОтгрузкаБезПереходаПраваСобственности" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		Иначе
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ОтгрузкаБезПереходаПраваСобственности", ФормаВладелец, ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ВедетсяПроизводственнаяДеятельность" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
			"ВедетсяПроизводственнаяДеятельность", ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ИспользоватьВыпускПродукции" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
			"ИспользоватьВыпускПродукции", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ИспользоватьПлатежныеТребования" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
			"ИспользоватьПлатежныеТребования", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ИспользоватьСинхронизациюДанных" Тогда
		ОткрытьФормуОбъекта(
			"Обработка.ПанельАдминистрированияБСП.Форма.СинхронизацияДанных", ФормаВладелец);
	ИначеЕсли ИмяЭлемента = "ИспользуетсяГособоронзаказ" Тогда  
		ОткрытьФормуОбъекта(
			"Справочник.ГосКонтракты.ФормаСписка", ФормаВладелец, ПараметрыФормы, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "УправлениеЗачетомАвансовПогашениемЗадолженности" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		Иначе
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"УправлениеЗачетомАвансовПогашениемЗадолженности", ФормаВладелец, ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ВедетсяУчетВозвратнойТары" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		Иначе
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ВедетсяУчетВозвратнойТары", ФормаВладелец, ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ВедетсяУчетПоПутевымЛистам" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		Иначе
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ВедетсяУчетПоПутевымЛистам", ФормаВладелец, ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ИспользуетсяСинхронизацияДанных" Тогда
		ОткрытьФормуОбъекта(
			"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
	ИначеЕсли ИмяЭлемента = "ИспользоватьУведомленияОКонтролируемыхСделках" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ИспользоватьУведомленияОКонтролируемыхСделках", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ВестиУчетПоПодразделениям" Тогда
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ВестиУчетПоПодразделениям", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ВестиУчетПоОрганизациям" Тогда
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ВестиУчетПоОрганизациям", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "РасширенныйФункционал" Тогда
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"РасширенныйФункционал", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ИспользоватьКорректировочныеДокументы" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		Иначе
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ИспользоватьКорректировочныеДокументы", ФормаВладелец, ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ИспользоватьДоставкуАвтотранспортом" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		Иначе
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ИспользоватьДоставкуАвтотранспортом", ФормаВладелец, ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ИспользоватьФискальныйРегистратор" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец, , ОповещениеЗакрытия);
		Иначе
			ОткрытьФормуОбъекта(
				"Справочник.ПодключаемоеОборудование.ФормаСписка", ФормаВладелец, , ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ИспользоватьОплатуСертификатамиНСПК" Тогда
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("Отбор", Новый Структура("ТипОборудования", ПредопределенноеЗначение("Перечисление.ТипыПодключаемогоОборудования.ЭквайринговыйТерминал")));
		ОткрытьФормуОбъекта(
			"Справочник.ПодключаемоеОборудование.ФормаСписка", ФормаВладелец, ПараметрыОткрытия, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ИспользоватьПередачуПрав" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ИспользоватьИнкассацию" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец, , ОповещениеЗакрытия);
		Иначе
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ИспользоватьИнкассацию", ФормаВладелец, ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ВестиУчетПоДоговорам" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		Иначе
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ВестиУчетПоДоговорам", ФормаВладелец, ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ИсполняютсяОбязанностиНалоговогоАгентаПоНДС" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		Иначе
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ИсполняютсяОбязанностиНалоговогоАгентаПоНДС", ФормаВладелец, ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ОбратноеНачислениеНДС" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		Иначе
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ОбратноеНачислениеНДС", ФормаВладелец, ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ВедетсяУчетУслугИностранныхИнтернетКомпаний" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		Иначе
			ЗначениеОтбора = Новый Структура(
				"Ссылка, Организация",
				ФункциональностьПрограммыВызовСервера.ДоговорыСЭлектроннымиУслугамиИностранцев(),
				ПустаяОрганизация);
			ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
			ОткрытьФормуОбъекта(
				"Справочник.ДоговорыКонтрагентов.Форма.ФормаСписка", ФормаВладелец, ПараметрыФормы, ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "УчетОбеспеченийОбязательствИПлатежей" Тогда
		ЗначениеОтбора = Новый Структура(
			"Ссылка, Организация",
			ФункциональностьПрограммыВызовСервера.ДоговорыСОбеспечениемОбязательствИПлатежей(),
			ПустаяОрганизация);
		ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
		ОткрытьФормуОбъекта(
			"Справочник.ДоговорыКонтрагентов.Форма.ФормаСписка", ФормаВладелец, ПараметрыФормы, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ВедетсяУчетТаможенныхДекларацийЭкспорт" Тогда
		Если ПоказыватьСинхронизациюДляОпций И ИспользуетсяСинхронизацияДанных Тогда
			ОткрытьФормуОбъекта(
				"Обработка.ФункциональностьПрограммы.Форма.ФормаИспользуетсяСинхронизацияДанных", ФормаВладелец);
		Иначе
			ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ВедетсяУчетТаможенныхДекларацийЭкспорт", ФормаВладелец, ОповещениеЗакрытия);
		КонецЕсли;
	ИначеЕсли ИмяЭлемента = "ВестиУчетМаркировкиПродукцииВГИСМ" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
				"ВестиУчетМаркировкиПродукцииВГИСМ", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ИспользоватьПодконтрольныеТоварыККТ" Тогда
		ЗначениеОтбора = Новый Структура(
			"СредствоИндивидуальнойЗащиты",
			Истина);
		ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
		ОткрытьФормуОбъекта(
			"Справочник.Номенклатура.Форма.ФормаСписка", ФормаВладелец, ПараметрыФормы, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ВедетсяУчетЗарплатыКадров" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
			"ВедетсяУчетЗарплатыКадров", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ИспользоватьКадровыйУчет" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
			"ИспользоватьКадровыйУчет", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ИспользоватьРаботуНаНеполнуюСтавку" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
			"ИспользоватьРаботуНаНеполнуюСтавку", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ПоддержкаСовместительства" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
			"ПоддержкаСовместительства", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ИспользоватьНачисленияПоДоговорам" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
			"ИспользоватьНачисленияПоДоговорам", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ИспользоватьФакторинг" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
			"ИспользоватьФакторинг", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ИспользоватьВыплатыСамозанятым" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
			"ИспользоватьВыплатыСамозанятым", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "ВыполняютсяСтроительныеРаботы" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
			"ВыполняютсяСтроительныеРаботы", ФормаВладелец, ОповещениеЗакрытия);
	ИначеЕсли ИмяЭлемента = "УчетПоКодамВалютныхОперацийИНомерамВалютныхДоговоров" Тогда
		ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(
			"УчетПоКодамВалютныхОперацийИНомерамВалютныхДоговоров", ФормаВладелец, ОповещениеЗакрытия);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОткрытьФормуОбъекта(ИмяФормы, ФормаВладелец, ПараметрыФормы = Неопределено, ОповещениеЗакрытия = Неопределено)
	
	ОткрытьФорму(
		ИмяФормы,
		ПараметрыФормы,
		ФормаВладелец,
		,
		,
		,
		ОповещениеЗакрытия,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

Процедура ЗапуститьФормированиеСпискаДокументовПрепятствующихОтключениюОпцииНаКлиенте(ИмяОпции, ФормаВладелец, ОповещениеЗакрытия = Неопределено)

	// Открываем форму отчета по документам и передаем туда все необходимые данные:
	//	- имя метода, который готовит отчет
	//	- наименование фонового задания
	//	- прочие параметры, специфичные для выполняемого метода (процедуры)
	// Форма при открытии запускает формирование результата в фоновом режиме.
	
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("ИмяОпции", ИмяОпции);
	
	Если ИмяОпции = "ВестиУчетПоДоговорам" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюУчетПоДоговорам");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Учет по договорам'"));
	ИначеЕсли ИмяОпции = "ВедетсяУчетНМА" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюВедетсяУчетНМА");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Нематериальные активы'"));
	ИначеЕсли ИмяОпции = "ВедетсяУчетДенежныхДокументов" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюДенежныеДокументы");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Денежные документы'"));
	ИначеЕсли ИмяОпции = "ИспользоватьПлатежныеТребования" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюПлатежныеТребования");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Платежные требования'"));
	ИначеЕсли ИмяОпции = "ВедетсяУчетСпецодеждыСпецоснастки" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюМалоценноеОборудование");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Спецодежда, спецоснастка'"));
	ИначеЕсли ИмяОпции = "ИспользоватьФакторинг" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюФакторинговыеОперации");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Факторинг'"));
	ИначеЕсли ИмяОпции = "ИспользоватьВыплатыСамозанятым" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюВыплатыСамозанятым");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Выплаты самозанятым'"));
	ИначеЕсли ИмяОпции = "ИспользоватьУведомленияОКонтролируемыхСделках" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюКонтролируемыеСделки");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Контролируемые сделки'"));
	ИначеЕсли ИмяОпции = "ИсполняютсяОбязанностиНалоговогоАгентаПоНДС" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюНалоговыйАгентПоНДС");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Налоговый агент по НДС'"));
	ИначеЕсли ИмяОпции = "ОбратноеНачислениеНДС" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюОбратноеНачислениеНДС");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Обратное начисление НДС'"));
	ИначеЕсли ИмяОпции = "ВедетсяОтгрузкаБезПереходаПраваСобственности" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюОтгрузкаБезПереходаПраваСобственности");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Отгрузка без перехода права собственности'"));
	ИначеЕсли ИмяОпции = "ИспользоватьПакетноеВыставлениеАктов" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюПакетноеВыставлениеАктов");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Пакетное выставление актов'"));
	ИначеЕсли ИмяОпции = "ИспользоватьНачислениеНДССМежценовойРазницы" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюНачислениеНДССМежценовойРазницы");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='НДС с межценовой разницы'"));
	ИначеЕсли ИмяОпции = "ВедетсяРозничнаяТорговля" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюРозничнаяТорговля");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Розничная торговля'"));
	ИначеЕсли ИмяОпции = "ИспользоватьПредоплатыВРознице" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюПредоплатаВРознице");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Розничная торговля'"));
	ИначеЕсли ИмяОпции = "ИспользуютсяПодарочныеСертификаты" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюПодарочныеСертификаты");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Подарочные сертификаты'"));
	ИначеЕсли ИмяОпции = "ВедетсяУчетРозничнойПродажиАлкогольнойПродукцииПива" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюАлкогольнаяПродукция");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Алкогольная продукция'"));
	ИначеЕсли ИмяОпции = "ОсуществляетсяРеализацияТоваровУслугКомитентов" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюПродажаТоваровУслугКомитентов");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Продажа товаров и услуг комитентов'"));
	ИначеЕсли ИмяОпции = "ОсуществляетсяРеализацияТоваровУслугЧерезКомиссионеров" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюПродажаТоваровУслугЧерезКомиссионеров");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Продажа товаров и услуг через комиссионеров'"));
	ИначеЕсли ИмяОпции = "ОсуществляетсяЗакупкаТоваровУслугДляКомитентов" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюПриобретениеТоваровУслугДляКомитентов");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Закупка товаров и услуг для комитентов'"));
	ИначеЕсли ИмяОпции = "ОсуществляетсяЗакупкаТоваровУслугЧерезКомиссионеров" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюПриобретениеТоваровУслугЧерезКомиссионеров");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Закупка товаров и услуг через комиссионеров'"));
	ИначеЕсли ИмяОпции = "ВедетсяУчетИмпортаТоваров" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюИмпортТоваров");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Импорт товаров'"));
	ИначеЕсли ИмяОпции = "ВедетсяУчетТаможенныхДекларацийЭкспорт" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюЭкспортТоваров");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Экспорт товаров'"));
	ИначеЕсли ИмяОпции = "ВестиУчетМаркировкиПродукцииВГИСМ" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюМаркировкаМеховыхИзделий");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Маркировка меховых изделий'"));
	ИначеЕсли ИмяОпции = "ВедетсяПроизводственнаяДеятельность" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюКомплексныйУчетПроизводства");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Комплексный учет производства'"));
	ИначеЕсли ИмяОпции = "ВедетсяУчетЛизинговогоИмущества" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюЛизинг");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Лизинг'"));
	ИначеЕсли ИмяОпции = "ВедетсяУчетПредметовАренды" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюПредметыАренды");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Аренда'"));
	ИначеЕсли ИмяОпции = "КомпонентыАмортизацииОС" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюКомпонентыАмортизации");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Компоненты амортизации'"));
	ИначеЕсли ИмяОпции = "ВестиУчетПоПодразделениям" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюУчетПоПодразделениям");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Учет по подразделениям'"));
	ИначеЕсли ИмяОпции = "ВестиУчетРасчетовСКонтрагентами" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокНастроекПрепятствующихОтключениюОпции");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Список объектов'"));
	ИначеЕсли ИмяОпции = "РасширенныйФункционал" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюРасширенногоФункционала");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Расширенный функционал'"));
	ИначеЕсли ИмяОпции = "ВестиУчетПоОрганизациям" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюВестиУчетПоОрганизациям");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Учет по нескольким организациям'"));
	ИначеЕсли ИмяОпции = "ВедетсяУчетЗарплатыКадров" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюСотрудники");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Сотрудники и зарплата'"));
	ИначеЕсли ИмяОпции = "ИспользоватьКадровыйУчет" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюИспользоватьКадровыйУчет");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Кадровые документы'"));
	ИначеЕсли ИмяОпции = "ИспользоватьРаботуНаНеполнуюСтавку" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюРаботыНаНеполнуюСтавку");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Работа на неполную ставку'"));
	ИначеЕсли ИмяОпции = "ПоддержкаСовместительства" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюПоддержкаСовместительства");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Совместительство'"));
	ИначеЕсли ИмяОпции = "ИспользоватьНачисленияПоДоговорам" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюИспользоватьНачисленияПоДоговорам");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Договоры подряда'"));
	ИначеЕсли ИмяОпции = "ВедетсяУчетГрупповыхОС" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюУчетГрупповыхОС");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Учет групповых объектов основных средств'"));
	ИначеЕсли ИмяОпции = "УчетПоКодамВалютныхОперацийИНомерамВалютныхДоговоров" Тогда
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокОбъектовПрепятствующихОтключениюВалютныйКонтроль");
		ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru='Валютный контроль'"));
	Иначе
		ПараметрыФормы.Вставить("ИмяМетода",
			"Обработки.ФункциональностьПрограммы.СформироватьСписокДокументовПрепятствующихОтключениюОпции");
	КонецЕсли;
		
	НаименованиеФоновогоЗадания = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Формирование списка объектов, препятствующих отключению опции ""%1""'"),
		ИмяОпции);
				
	ПараметрыФормы.Вставить("НаименованиеФоновогоЗадания", НаименованиеФоновогоЗадания);
	
	ОткрытьФорму(
		"Обработка.ФункциональностьПрограммы.Форма.ФормаОтчетаПоДокументам",
		ПараметрыФормы,
		ФормаВладелец,
		Ложь,
		,
		,
		ОповещениеЗакрытия);
	
КонецПроцедуры

#КонецОбласти