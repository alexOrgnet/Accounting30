
#Область ПрограммныйИнтерфейс

// Открывает форму отчета-ведомости по ОС.
//
// Параметры:
//  ПараметрыОтчета - Структура - см. ЗаполнениеФинОтчетностиВБанки.ПараметрыОтчетаВедомостьАмортизацииОС()
//  ФормаВладелец - ФормаУправляемогоПриложения - форма документа ФинОтчетВБанк.
//
Процедура ОткрытьОтчетВедомостьАмортизацииОС(ПараметрыОтчета, ФормаВладелец) Экспорт
	
	ДополнительныеПараметры = ПараметрыОтчета.ПользовательскиеНастройки.ДополнительныеСвойства;
	Если ДополнительныеПараметры.Свойство("ПараметрыРежимаВыгрузки") Тогда
		ДополнительныеПараметры = ДополнительныеПараметры.ПараметрыРежимаВыгрузки;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗакрытияВедомостьАмортизацииОС", ФормаВладелец, ДополнительныеПараметры);
	
	ОткрытьФорму("Отчет.ВедомостьАмортизацииОСБухгалтерскийУчет.Форма.ФормаОтчета",
		ПараметрыОтчета, ФормаВладелец, Истина, , , ОписаниеОповещения);
	
КонецПроцедуры

// Открывает форму отчета по валовой прибыли.
//
// Параметры:
//  ПараметрыОтчета - Структура - см. ЗаполнениеФинОтчетностиВБанки.ПараметрыОтчетаВаловаяПрибыль()
//  ФормаВладелец - ФормаУправляемогоПриложения - форма документа ФинОтчетВБанк.
//
Процедура ОткрытьОтчетВаловаяПрибыль(ПараметрыОтчета, ФормаВладелец) Экспорт

	ДополнительныеПараметры = ПараметрыОтчета.ПользовательскиеНастройки.ДополнительныеСвойства;
	Если ДополнительныеПараметры.Свойство("ПараметрыРежимаВыгрузки") Тогда
		ДополнительныеПараметры = ДополнительныеПараметры.ПараметрыРежимаВыгрузки;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗакрытияВаловаяПрибыль", ФормаВладелец, ДополнительныеПараметры);
	
	ОткрытьФорму("Отчет.ВаловаяПрибыль.Форма.ФормаОтчета",
		ПараметрыОтчета, ФормаВладелец, Истина, , , ОписаниеОповещения);

КонецПроцедуры

// Формирует печатную форму "Кассовая книга".
//
// Параметры:
//  ПараметрыОтчета - Структура - см. ЗаполнениеФинОтчетностиВБанки.ПараметрыОтчетаКассоваяКнига()
//  ФормаВладелец - ФормаУправляемогоПриложения - форма документа ФинОтчетВБанк.
//
Процедура ОткрытьОтчетКассоваяКнига(ПараметрыОтчета, ФормаВладелец) Экспорт
	
	ДополнительныеПараметры = ПараметрыОтчета.ПараметрыРежимаВыгрузки;
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗакрытияКассоваяКнига", ФормаВладелец, ДополнительныеПараметры);
	
	ОткрытьФорму("Отчет.КассоваяКнига.Форма.ФормаОтчета",
		ПараметрыОтчета, ФормаВладелец, Истина, , , ОписаниеОповещения);
	
КонецПроцедуры

// Формирует форму отчета КУДиР предпринимателя.
//
// Параметры:
//  ПараметрыОтчета - Структура - см. ЗаполнениеФинОтчетностиВБанки.ПараметрыФормыКнигаУчетаДоходовИРасходовПредпринимателя()
//  ФормаВладелец - ФормаУправляемогоПриложения - форма документа ФинОтчетВБанк.
//
Процедура ОткрытьОтчетКнигаУчетаДоходовИРасходовПредпринимателя(ПараметрыОтчета, ФормаВладелец) Экспорт

	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗакрытияКнигаУчетаДоходовИРасходовПредпринимателя",
		ФормаВладелец, ПараметрыОтчета.ПараметрыРежимаВыгрузки);
	
	ОткрытьФорму("Отчет.КнигаУчетаДоходовИРасходовПредпринимателя.Форма.ФормаОтчета",
		ПараметрыОтчета, ФормаВладелец, Истина, , , ОписаниеОповещения);
	
КонецПроцедуры

// Формирует форму отчета КУДиР предпринимателя.
//
// Параметры:
//  ПараметрыОтчета - Структура - см. ЗаполнениеФинОтчетностиВБанки.ПараметрыОтчетаРасшифровкаЗадолженности()
//  ФормаВладелец - ФормаУправляемогоПриложения - форма документа ФинОтчетВБанк.
//
Процедура ОткрытьОтчетРасшифровкаЗадолженности(ПараметрыОтчета, ФормаВладелец) Экспорт
	
	ДополнительныеПараметры = ПараметрыОтчета.ПользовательскиеНастройки.ДополнительныеСвойства;
	Если ДополнительныеПараметры.Свойство("ПараметрыРежимаВыгрузки") Тогда
		ДополнительныеПараметры = ДополнительныеПараметры.ПараметрыРежимаВыгрузки;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗакрытияРасшифровкаЗадолженности", ФормаВладелец, ДополнительныеПараметры);
	
	ОткрытьФорму("Отчет.РасшифровкаЗадолженности.Форма.ФормаОтчета",
		ПараметрыОтчета, ФормаВладелец, Истина, , , ОписаниеОповещения);
	
КонецПроцедуры

// Открывает форму списка пакетов фин.отчетности.
//
// Параметры:
//  ПараметрыКоманды - ПараметрыВыполненияКоманды - параметры обработчика команды.
//
Процедура ОткрытьСписокПакетовФинОтчетностьВБанки(ПараметрыКоманды) Экспорт

	ПараметрыОткрытия = ОбщегоНазначенияБПКлиентСервер.ПараметрыОткрытияФормыСОжиданием(ПараметрыКоманды);
	ПараметрыОткрытия.Заголовок = НСтр("ru = '1С:ФинОтчетность'");
	ПараметрыОткрытия.ИмяФормы  = "РегистрСведений.ЖурналСтатусовФинОтчетностиВБанки.ФормаСписка";

	ОбщегоНазначенияБПКлиент.ОткрытьФормуСОжиданием(ПараметрыОткрытия);

КонецПроцедуры

// Открывает форму настройки периодической отправки пакетов отчетности в банки.
//
// Параметры:
//   Форма       - ФормаКлиентскогоПриложения - форма, из которой открывается настройка.
//   Банк        - ОпределяемыйТип.СправочникБанкиФинОтчетность - для какого банка настраивается периодичность.
//
Процедура НастроитьОтправку(Форма, Банк) Экспорт
	
	Если ЗначениеЗаполнено(Банк)
	   И Не ФинОтчетностьВБанкиКлиентСервер.ЭтоБанкУниверсальногоОбмена(Банк) Тогда
		ОткрытьФорму("ОбщаяФорма.НастройкаОтправкиОтчетностиВБанк");
		Возврат;
	КонецЕсли;
	
	Если Форма.Элементы.Предупреждение.Видимость Тогда
		// Подключим интернет-поддержку.
		Обработчик = Новый ОписаниеОповещения("ПослеПодключенияИнтернетПоддержкиПользователей", Форма);
		ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(Обработчик, Форма);
		Возврат;
	КонецЕсли;
	
	// Проверяем, что закончилось задание обновления данных из сервиса.
	Если Форма.СведенияОДлительнойОперации.ДлительнаяОперацияОбновленияДанныхСервиса <> Неопределено
	   И Форма.СведенияОДлительнойОперации.Имя = "ОбновитьДанныеСервиса" Тогда
		ОбработчикПослеЗавершения = Новый ОписаниеОповещения("ОткрытьФормуНастроекОтправкиЗавершение", Форма);
		Форма.ОжидатьЗавершениеОбновленияДанныхСервиса(Истина, ОбработчикПослеЗавершения);
		Возврат;
	КонецЕсли;
	
	Форма.ОткрытьФормуНастроекОтправкиЗавершение(Истина, Неопределено);
	
КонецПроцедуры

#КонецОбласти
